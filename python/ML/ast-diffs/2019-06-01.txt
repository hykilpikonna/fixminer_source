UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 4281 @LENGTH@ 482
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 4354 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4354 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4359 @LENGTH@ 28


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).dependency("org.apache.zookeeper:zookeeper-jute:3.5.5").dependency("org.apache.zookeeper:zookeeper:3.5.5").build() @AT@ 1440 @LENGTH@ 119
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).dependency("org.apache.zookeeper:zookeeper-jute:3.5.5").dependency("org.apache.zookeeper:zookeeper:3.5.5").build() @AT@ 1447 @LENGTH@ 111
------INS MethodInvocation@@MethodName:dependency:["org.apache.zookeeper:zookeeper:3.5.5"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).build() @AT@ 1447 @LENGTH@ 227
---------INS StringLiteral@@"org.apache.zookeeper:zookeeper:3.5.5" @TO@ MethodInvocation@@MethodName:dependency:["org.apache.zookeeper:zookeeper:3.5.5"] @AT@ 1635 @LENGTH@ 38
------INS MethodInvocation@@MethodName:dependency:["org.apache.zookeeper:zookeeper-jute:3.5.5"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSolrTest.class)).build() @AT@ 1447 @LENGTH@ 159
---------INS StringLiteral@@"org.apache.zookeeper:zookeeper-jute:3.5.5" @TO@ MethodInvocation@@MethodName:dependency:["org.apache.zookeeper:zookeeper-jute:3.5.5"] @AT@ 1562 @LENGTH@ 43


UPD EnumDeclaration@@[public, static]Action,  @TO@ [static]Action,  @AT@ 43443 @LENGTH@ 106
---DEL Modifier@@public @AT@ 43443 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ExceptionRenderer,  @TO@ [@Deprecated, public]OAuth2ExceptionRenderer,  @AT@ 1059 @LENGTH@ 153
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ExceptionRenderer,  @AT@ 1236 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:shouldResumeFromAnyParticularOffset, InterruptedException,  @AT@ 2919 @LENGTH@ 33
---INS MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @AT@ 2919 @LENGTH@ 32
------INS QualifiedName@@Name:TimeUnit.MILLISECONDS @TO@ MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @AT@ 2919 @LENGTH@ 21
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @AT@ 2941 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 2947 @LENGTH@ 3


DEL VariableDeclarationStatement@@final ByteArrayOutputStream buffer=new ByteArrayOutputStream(); @AT@ 4490 @LENGTH@ 65
---DEL Modifier@@final @AT@ 4490 @LENGTH@ 5
---DEL SimpleType@@ByteArrayOutputStream @AT@ 4496 @LENGTH@ 21


UPD TypeDeclaration@@[public]MacSigner, [SignerVerifier] @TO@ [@Deprecated, public]MacSigner, [SignerVerifier] @AT@ 838 @LENGTH@ 1402
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]MacSigner, [SignerVerifier] @AT@ 1016 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @TO@ TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverterTests,  @AT@ 2167 @LENGTH@ 660
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2167 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2174 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2179 @LENGTH@ 54
---INS VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer "); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2240 @LENGTH@ 133
------INS ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer "); @AT@ 2240 @LENGTH@ 36
---------INS SimpleType@@MockServerHttpRequest.BaseBuilder @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 2240 @LENGTH@ 33
---------INS WildcardType@@? @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 2274 @LENGTH@ 1
------INS VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer "); @AT@ 2277 @LENGTH@ 95
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @AT@ 2277 @LENGTH@ 7
---------INS MethodInvocation@@MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @AT@ 2287 @LENGTH@ 85
------------INS MethodInvocation@@MethodName:get:["/"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @AT@ 2287 @LENGTH@ 35
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:get:["/"] @AT@ 2318 @LENGTH@ 3
------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @AT@ 2287 @LENGTH@ 21
------------INS SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "Bearer "] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").header(HttpHeaders.AUTHORIZATION,"Bearer ") @AT@ 2328 @LENGTH@ 44
---------------INS QualifiedName@@HttpHeaders.AUTHORIZATION @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "Bearer "] @AT@ 2335 @LENGTH@ 25
------------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 2335 @LENGTH@ 11
------------------INS SimpleName@@AUTHORIZATION @TO@ QualifiedName@@HttpHeaders.AUTHORIZATION @AT@ 2347 @LENGTH@ 13
---------------INS StringLiteral@@"Bearer " @TO@ SimpleName@@MethodName:header:[HttpHeaders.AUTHORIZATION, "Bearer "] @AT@ 2362 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2377 @LENGTH@ 134
------INS SimpleType@@OAuth2AuthenticationException @TO@ VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @AT@ 2377 @LENGTH@ 29
------INS VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @TO@ VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @AT@ 2407 @LENGTH@ 103
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 2407 @LENGTH@ 8
---------INS MethodInvocation@@catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @TO@ VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 2418 @LENGTH@ 92
------------INS SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @TO@ MethodInvocation@@catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 2418 @LENGTH@ 92
---------------INS LambdaExpression@@() -> convertToToken(request) @TO@ SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @AT@ 2439 @LENGTH@ 29
------------------INS MethodInvocation@@convertToToken(request) @TO@ LambdaExpression@@() -> convertToToken(request) @AT@ 2445 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:convertToToken:[request] @TO@ MethodInvocation@@convertToToken(request) @AT@ 2445 @LENGTH@ 23
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convertToToken:[request] @AT@ 2460 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:convertToToken:[request] @TO@ MethodInvocation@@convertToToken(request) @AT@ 2445 @LENGTH@ 23
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convertToToken:[request] @AT@ 2460 @LENGTH@ 7
---------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @AT@ 2474 @LENGTH@ 35
---INS VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2514 @LENGTH@ 64
------INS SimpleType@@BearerTokenError @TO@ VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @AT@ 2514 @LENGTH@ 16
------INS VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @TO@ VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @AT@ 2531 @LENGTH@ 46
---------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @AT@ 2531 @LENGTH@ 5
---------INS CastExpression@@(BearerTokenError)expected.getError() @TO@ VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @AT@ 2539 @LENGTH@ 38
------------INS SimpleType@@BearerTokenError @TO@ CastExpression@@(BearerTokenError)expected.getError() @AT@ 2540 @LENGTH@ 16
------------INS MethodInvocation@@expected.getError() @TO@ CastExpression@@(BearerTokenError)expected.getError() @AT@ 2558 @LENGTH@ 19
---------------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.getError() @AT@ 2558 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getError:[] @TO@ MethodInvocation@@expected.getError() @AT@ 2567 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2581 @LENGTH@ 80
------INS MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 2581 @LENGTH@ 79
---------INS MethodInvocation@@MethodName:assertThat:[error.getErrorCode()] @TO@ MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 2581 @LENGTH@ 32
------------INS MethodInvocation@@error.getErrorCode() @TO@ MethodInvocation@@MethodName:assertThat:[error.getErrorCode()] @AT@ 2592 @LENGTH@ 20
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2592 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@error.getErrorCode() @AT@ 2598 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[BearerTokenErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 2614 @LENGTH@ 46
------------INS QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:isEqualTo:[BearerTokenErrorCodes.INVALID_TOKEN] @AT@ 2624 @LENGTH@ 35
---------------INS SimpleName@@BearerTokenErrorCodes @TO@ QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @AT@ 2624 @LENGTH@ 21
---------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @AT@ 2646 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2664 @LENGTH@ 88
------INS MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 2664 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:assertThat:[error.getUri()] @TO@ MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 2664 @LENGTH@ 26
------------INS MethodInvocation@@error.getUri() @TO@ MethodInvocation@@MethodName:assertThat:[error.getUri()] @AT@ 2675 @LENGTH@ 14
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getUri() @AT@ 2675 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@error.getUri() @AT@ 2681 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6750#section-3.1"] @TO@ MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 2691 @LENGTH@ 60
------------INS StringLiteral@@"https://tools.ietf.org/html/rfc6750#section-3.1" @TO@ SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6750#section-3.1"] @AT@ 2701 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenValidHeaderIsEmptyStringThenTokenIsResolved,  @AT@ 2755 @LENGTH@ 69
------INS MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 2755 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[error.getHttpStatus()] @TO@ MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 2755 @LENGTH@ 33
------------INS MethodInvocation@@error.getHttpStatus() @TO@ MethodInvocation@@MethodName:assertThat:[error.getHttpStatus()] @AT@ 2766 @LENGTH@ 21
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getHttpStatus() @AT@ 2766 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getHttpStatus:[] @TO@ MethodInvocation@@error.getHttpStatus() @AT@ 2772 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:[HttpStatus.UNAUTHORIZED] @TO@ MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 2789 @LENGTH@ 34
------------INS QualifiedName@@HttpStatus.UNAUTHORIZED @TO@ SimpleName@@MethodName:isEqualTo:[HttpStatus.UNAUTHORIZED] @AT@ 2799 @LENGTH@ 23
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.UNAUTHORIZED @AT@ 2799 @LENGTH@ 10
---------------INS SimpleName@@UNAUTHORIZED @TO@ QualifiedName@@HttpStatus.UNAUTHORIZED @AT@ 2810 @LENGTH@ 12


UPD EnumDeclaration@@[public, static]EvictionType,  @TO@ [static]EvictionType,  @AT@ 33149 @LENGTH@ 71
---DEL Modifier@@public @AT@ 33149 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelSSLAutoConfiguration.class,CamelAutoConfiguration.class)).withPropertyValues("camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks").run((context) -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
) @TO@ MethodInvocation:new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelSSLAutoConfiguration.class,CamelAutoConfiguration.class)).withPropertyValues("camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks").run(context -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
) @AT@ 1452 @LENGTH@ 1636
---UPD MethodInvocation@@new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelSSLAutoConfiguration.class,CamelAutoConfiguration.class)).withPropertyValues("camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks").run((context) -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
) @TO@ new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelSSLAutoConfiguration.class,CamelAutoConfiguration.class)).withPropertyValues("camel.ssl.config.cert-alias=web","camel.ssl.config.key-managers.key-password=changeit","camel.ssl.config.key-managers.key-store.password=changeit","camel.ssl.config.key-managers.key-store.type=PKCS12","camel.ssl.config.trust-managers.key-store.password=changeit","camel.ssl.config.trust-managers.key-store.type=jks").run(context -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
) @AT@ 1452 @LENGTH@ 1635
------UPD SimpleName@@MethodName:run:[(context) -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
] @TO@ MethodName:run:[context -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
] @AT@ 2198 @LENGTH@ 889
---------UPD LambdaExpression@@(context) -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
 @TO@ context -> {
  GlobalSSLContextParametersSupplier supplier=context.getBean(GlobalSSLContextParametersSupplier.class);
  assertThat(context).hasSingleBean(CamelSSLAutoConfiguration.class);
  assertNotNull(supplier);
  assertNotNull(supplier.get());
  assertEquals("web",supplier.get().getCertAlias());
  assertNotNull(supplier.get().getKeyManagers());
  assertEquals("changeit",supplier.get().getKeyManagers().getKeyPassword());
  assertNotNull(supplier.get().getTrustManagers());
  assertNotNull(supplier.get().getTrustManagers().getKeyStore());
  assertEquals("jks",supplier.get().getTrustManagers().getKeyStore().getType());
}
 @AT@ 2202 @LENGTH@ 871


UPD MethodDeclaration@@public, JwkSetUriReactiveJwtDecoderBuilder, MethodName:jwsAlgorithm, JwsAlgorithm jwsAlgorithm,  @TO@ public, JwkSetUriReactiveJwtDecoderBuilder, MethodName:jwsAlgorithm, SignatureAlgorithm signatureAlgorithm,  @AT@ 9241 @LENGTH@ 234
---UPD SingleVariableDeclaration@@JwsAlgorithm jwsAlgorithm @TO@ SignatureAlgorithm signatureAlgorithm @AT@ 9296 @LENGTH@ 25
------UPD SimpleType@@JwsAlgorithm @TO@ SignatureAlgorithm @AT@ 9296 @LENGTH@ 12
------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 9309 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ MethodInvocation:Assert.notNull(signatureAlgorithm,"sig cannot be null") @AT@ 9328 @LENGTH@ 60
------UPD MethodInvocation@@Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ Assert.notNull(signatureAlgorithm,"sig cannot be null") @AT@ 9328 @LENGTH@ 59
---------UPD SimpleName@@MethodName:notNull:[jwsAlgorithm, "jwsAlgorithm cannot be null"] @TO@ MethodName:notNull:[signatureAlgorithm, "sig cannot be null"] @AT@ 9335 @LENGTH@ 52
------------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 9343 @LENGTH@ 12
------------UPD StringLiteral@@"jwsAlgorithm cannot be null" @TO@ "sig cannot be null" @AT@ 9357 @LENGTH@ 29
---UPD ExpressionStatement@@Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9392 @LENGTH@ 63
------UPD Assignment@@this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9392 @LENGTH@ 62
---------UPD MethodInvocation@@JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9412 @LENGTH@ 42
------------UPD SimpleName@@MethodName:parse:[jwsAlgorithm.getName()] @TO@ MethodName:parse:[signatureAlgorithm.getName()] @AT@ 9425 @LENGTH@ 29
---------------UPD MethodInvocation@@jwsAlgorithm.getName() @TO@ signatureAlgorithm.getName() @AT@ 9431 @LENGTH@ 22
------------------UPD SimpleName@@Name:jwsAlgorithm @TO@ Name:signatureAlgorithm @AT@ 9431 @LENGTH@ 12


UPD EnumDeclaration@@[public, static]MetricsType,  @TO@ [static]MetricsType,  @AT@ 8790 @LENGTH@ 87
---DEL Modifier@@public @AT@ 8790 @LENGTH@ 6


INS FieldDeclaration@@ApplicationContext, [context] @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes=SecurityConfig.class), public]SecurityConfigTests,  @AT@ 1429 @LENGTH@ 27
---INS SimpleType@@ApplicationContext @TO@ FieldDeclaration@@ApplicationContext, [context] @AT@ 1429 @LENGTH@ 18
---INS VariableDeclarationFragment@@context @TO@ FieldDeclaration@@ApplicationContext, [context] @AT@ 1448 @LENGTH@ 7
------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context @AT@ 1448 @LENGTH@ 7


UPD MethodDeclaration@@default, ChatScriptEndpointBuilder, MethodName:chatScript, String path,  @TO@ default, ChatScriptEndpointBuilder, MethodName:chatscript, String path,  @AT@ 5705 @LENGTH@ 402
---UPD SimpleName@@MethodName:chatScript @TO@ MethodName:chatscript @AT@ 5739 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @TO@ TypeDeclaration@@[public]ServerBearerTokenAuthenticationConverterTests,  @AT@ 5377 @LENGTH@ 719
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5377 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5384 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5389 @LENGTH@ 77
---INS ExpressionStatement@@MethodInvocation:this.converter.setAllowUriQueryParameter(true) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5473 @LENGTH@ 47
------INS MethodInvocation@@this.converter.setAllowUriQueryParameter(true) @TO@ ExpressionStatement@@MethodInvocation:this.converter.setAllowUriQueryParameter(true) @AT@ 5473 @LENGTH@ 46
---------INS FieldAccess@@this.converter @TO@ MethodInvocation@@this.converter.setAllowUriQueryParameter(true) @AT@ 5473 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.converter @AT@ 5473 @LENGTH@ 4
------------INS SimpleName@@converter @TO@ FieldAccess@@this.converter @AT@ 5478 @LENGTH@ 9
---------INS SimpleName@@MethodName:setAllowUriQueryParameter:[true] @TO@ MethodInvocation@@this.converter.setAllowUriQueryParameter(true) @AT@ 5488 @LENGTH@ 31
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAllowUriQueryParameter:[true] @AT@ 5514 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").queryParam("access_token",""); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5524 @LENGTH@ 119
------INS ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").queryParam("access_token",""); @AT@ 5524 @LENGTH@ 36
---------INS SimpleType@@MockServerHttpRequest.BaseBuilder @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 5524 @LENGTH@ 33
---------INS WildcardType@@? @TO@ ParameterizedType@@MockServerHttpRequest.BaseBuilder<?> @AT@ 5558 @LENGTH@ 1
------INS VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").queryParam("access_token","") @TO@ VariableDeclarationStatement@@MockServerHttpRequest.BaseBuilder<?> request=MockServerHttpRequest.get("/").queryParam("access_token",""); @AT@ 5561 @LENGTH@ 81
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").queryParam("access_token","") @AT@ 5561 @LENGTH@ 7
---------INS MethodInvocation@@MockServerHttpRequest.get("/").queryParam("access_token","") @TO@ VariableDeclarationFragment@@request=MockServerHttpRequest.get("/").queryParam("access_token","") @AT@ 5571 @LENGTH@ 71
------------INS MethodInvocation@@MethodName:get:["/"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam("access_token","") @AT@ 5571 @LENGTH@ 35
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:get:["/"] @AT@ 5602 @LENGTH@ 3
------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam("access_token","") @AT@ 5571 @LENGTH@ 21
------------INS SimpleName@@MethodName:queryParam:["access_token", ""] @TO@ MethodInvocation@@MockServerHttpRequest.get("/").queryParam("access_token","") @AT@ 5612 @LENGTH@ 30
---------------INS StringLiteral@@"access_token" @TO@ SimpleName@@MethodName:queryParam:["access_token", ""] @AT@ 5623 @LENGTH@ 14
---------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:queryParam:["access_token", ""] @AT@ 5639 @LENGTH@ 2
---INS VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5647 @LENGTH@ 133
------INS SimpleType@@OAuth2AuthenticationException @TO@ VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @AT@ 5647 @LENGTH@ 29
------INS VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @TO@ VariableDeclarationStatement@@OAuth2AuthenticationException expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class); @AT@ 5677 @LENGTH@ 102
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 5677 @LENGTH@ 8
---------INS MethodInvocation@@catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @TO@ VariableDeclarationFragment@@expected=catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 5688 @LENGTH@ 91
------------INS SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @TO@ MethodInvocation@@catchThrowableOfType(() -> convertToToken(request),OAuth2AuthenticationException.class) @AT@ 5688 @LENGTH@ 91
---------------INS LambdaExpression@@() -> convertToToken(request) @TO@ SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @AT@ 5709 @LENGTH@ 29
------------------INS MethodInvocation@@convertToToken(request) @TO@ LambdaExpression@@() -> convertToToken(request) @AT@ 5715 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:convertToToken:[request] @TO@ MethodInvocation@@convertToToken(request) @AT@ 5715 @LENGTH@ 23
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convertToToken:[request] @AT@ 5730 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:convertToToken:[request] @TO@ MethodInvocation@@convertToToken(request) @AT@ 5715 @LENGTH@ 23
------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convertToToken:[request] @AT@ 5730 @LENGTH@ 7
---------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ SimpleName@@MethodName:catchThrowableOfType:[() -> convertToToken(request), OAuth2AuthenticationException.class] @AT@ 5743 @LENGTH@ 35
---INS VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5783 @LENGTH@ 64
------INS SimpleType@@BearerTokenError @TO@ VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @AT@ 5783 @LENGTH@ 16
------INS VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @TO@ VariableDeclarationStatement@@BearerTokenError error=(BearerTokenError)expected.getError(); @AT@ 5800 @LENGTH@ 46
---------INS SimpleName@@error @TO@ VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @AT@ 5800 @LENGTH@ 5
---------INS CastExpression@@(BearerTokenError)expected.getError() @TO@ VariableDeclarationFragment@@error=(BearerTokenError)expected.getError() @AT@ 5808 @LENGTH@ 38
------------INS SimpleType@@BearerTokenError @TO@ CastExpression@@(BearerTokenError)expected.getError() @AT@ 5809 @LENGTH@ 16
------------INS MethodInvocation@@expected.getError() @TO@ CastExpression@@(BearerTokenError)expected.getError() @AT@ 5827 @LENGTH@ 19
---------------INS SimpleName@@Name:expected @TO@ MethodInvocation@@expected.getError() @AT@ 5827 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getError:[] @TO@ MethodInvocation@@expected.getError() @AT@ 5836 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5850 @LENGTH@ 80
------INS MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 5850 @LENGTH@ 79
---------INS MethodInvocation@@MethodName:assertThat:[error.getErrorCode()] @TO@ MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 5850 @LENGTH@ 32
------------INS MethodInvocation@@error.getErrorCode() @TO@ MethodInvocation@@MethodName:assertThat:[error.getErrorCode()] @AT@ 5861 @LENGTH@ 20
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getErrorCode() @AT@ 5861 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getErrorCode:[] @TO@ MethodInvocation@@error.getErrorCode() @AT@ 5867 @LENGTH@ 14
---------INS SimpleName@@MethodName:isEqualTo:[BearerTokenErrorCodes.INVALID_TOKEN] @TO@ MethodInvocation@@assertThat(error.getErrorCode()).isEqualTo(BearerTokenErrorCodes.INVALID_TOKEN) @AT@ 5883 @LENGTH@ 46
------------INS QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @TO@ SimpleName@@MethodName:isEqualTo:[BearerTokenErrorCodes.INVALID_TOKEN] @AT@ 5893 @LENGTH@ 35
---------------INS SimpleName@@BearerTokenErrorCodes @TO@ QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @AT@ 5893 @LENGTH@ 21
---------------INS SimpleName@@INVALID_TOKEN @TO@ QualifiedName@@BearerTokenErrorCodes.INVALID_TOKEN @AT@ 5915 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 5933 @LENGTH@ 88
------INS MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 5933 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:assertThat:[error.getUri()] @TO@ MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 5933 @LENGTH@ 26
------------INS MethodInvocation@@error.getUri() @TO@ MethodInvocation@@MethodName:assertThat:[error.getUri()] @AT@ 5944 @LENGTH@ 14
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getUri() @AT@ 5944 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getUri:[] @TO@ MethodInvocation@@error.getUri() @AT@ 5950 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6750#section-3.1"] @TO@ MethodInvocation@@assertThat(error.getUri()).isEqualTo("https://tools.ietf.org/html/rfc6750#section-3.1") @AT@ 5960 @LENGTH@ 60
------------INS StringLiteral@@"https://tools.ietf.org/html/rfc6750#section-3.1" @TO@ SimpleName@@MethodName:isEqualTo:["https://tools.ietf.org/html/rfc6750#section-3.1"] @AT@ 5970 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenQueryParameterIsEmptyAndSupportedThenOAuth2AuthenticationException,  @AT@ 6024 @LENGTH@ 69
------INS MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @TO@ ExpressionStatement@@MethodInvocation:assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 6024 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[error.getHttpStatus()] @TO@ MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 6024 @LENGTH@ 33
------------INS MethodInvocation@@error.getHttpStatus() @TO@ MethodInvocation@@MethodName:assertThat:[error.getHttpStatus()] @AT@ 6035 @LENGTH@ 21
---------------INS SimpleName@@Name:error @TO@ MethodInvocation@@error.getHttpStatus() @AT@ 6035 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getHttpStatus:[] @TO@ MethodInvocation@@error.getHttpStatus() @AT@ 6041 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:[HttpStatus.UNAUTHORIZED] @TO@ MethodInvocation@@assertThat(error.getHttpStatus()).isEqualTo(HttpStatus.UNAUTHORIZED) @AT@ 6058 @LENGTH@ 34
------------INS QualifiedName@@HttpStatus.UNAUTHORIZED @TO@ SimpleName@@MethodName:isEqualTo:[HttpStatus.UNAUTHORIZED] @AT@ 6068 @LENGTH@ 23
---------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.UNAUTHORIZED @AT@ 6068 @LENGTH@ 10
---------------INS SimpleName@@UNAUTHORIZED @TO@ QualifiedName@@HttpStatus.UNAUTHORIZED @AT@ 6079 @LENGTH@ 12


UPD TypeDeclaration@@[@Value, @Wither, @AllArgsConstructor, @NoArgsConstructor(force=true), public]ImmutableSample,  @TO@ [@Value, @With, @AllArgsConstructor, @NoArgsConstructor(force=true), public]ImmutableSample,  @AT@ 1078 @LENGTH@ 179
---UPD MarkerAnnotation@@@Wither @TO@ @With @AT@ 1085 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]SqlOutputType,  @TO@ [static]SqlOutputType,  @AT@ 88084 @LENGTH@ 83
---DEL Modifier@@public @AT@ 88084 @LENGTH@ 6


UPD TypeDeclaration@@[@Converter(loader=true), public]FileConverter,  @TO@ [@Converter(loader=true), public, final]FileConverter,  @AT@ 1087 @LENGTH@ 749
---INS Modifier@@final @TO@ TypeDeclaration@@[@Converter(loader=true), public]FileConverter,  @AT@ 1119 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]OpenshiftBuildConfigsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]OpenshiftBuildConfigsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1476 @LENGTH@ 7376
---DEL Modifier@@static @AT@ 1483 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]SdbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SdbEndpointBuilder, [EndpointProducerBuilder] @AT@ 1430 @LENGTH@ 5570
---DEL Modifier@@static @AT@ 1437 @LENGTH@ 6


UPD TypeDeclaration@@[public]ImplicitAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @TO@ [@Deprecated, public]ImplicitAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 2414 @LENGTH@ 3712
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ImplicitAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 2591 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:parameters.put("componentName",componentName) @TO@ MethodInvocation:parameters.put("producerComponentName",componentName) @AT@ 14346 @LENGTH@ 47
---UPD MethodInvocation@@parameters.put("componentName",componentName) @TO@ parameters.put("producerComponentName",componentName) @AT@ 14346 @LENGTH@ 46
------UPD SimpleName@@MethodName:put:["componentName", componentName] @TO@ MethodName:put:["producerComponentName", componentName] @AT@ 14357 @LENGTH@ 35
---------UPD StringLiteral@@"componentName" @TO@ "producerComponentName" @AT@ 14361 @LENGTH@ 15


UPD TypeDeclaration@@[public]OAuthClientHttpRequestFactory, [ClientHttpRequestFactory] @TO@ [@Deprecated, public]OAuthClientHttpRequestFactory, [ClientHttpRequestFactory] @AT@ 1002 @LENGTH@ 3151
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthClientHttpRequestFactory, [ClientHttpRequestFactory] @AT@ 1223 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]ShardIteratorType,  @TO@ [static]ShardIteratorType,  @AT@ 43928 @LENGTH@ 131
---DEL Modifier@@public @AT@ 43928 @LENGTH@ 6


UPD TypeDeclaration@@[public]TokenStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @TO@ [@Deprecated, public]TokenStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @AT@ 1847 @LENGTH@ 4605
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @AT@ 2024 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]SpringBatchEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SpringBatchEndpointBuilder, [EndpointProducerBuilder] @AT@ 1442 @LENGTH@ 2975
---DEL Modifier@@static @AT@ 1449 @LENGTH@ 6


UPD IfStatement@@if (stateToAuthzRequest.isEmpty()) {  sessionAttrs.remove(this.sessionAttributeName);} @TO@ if (stateToAuthzRequest.isEmpty()) {  sessionAttrs.remove(this.sessionAttributeName);} else if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @AT@ 3374 @LENGTH@ 95
---INS Block@@ElseBody:if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @TO@ IfStatement@@if (stateToAuthzRequest.isEmpty()) {  sessionAttrs.remove(this.sessionAttributeName);} @AT@ 3475 @LENGTH@ 201
------INS IfStatement@@if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @TO@ Block@@ElseBody:if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @AT@ 3475 @LENGTH@ 201
---------INS InfixExpression@@removedValue != null @TO@ IfStatement@@if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @AT@ 3479 @LENGTH@ 20
------------INS SimpleName@@removedValue @TO@ InfixExpression@@removedValue != null @AT@ 3479 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@removedValue != null @AT@ 3491 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@removedValue != null @AT@ 3495 @LENGTH@ 4
---------INS Block@@ThenBody:{  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @TO@ IfStatement@@if (removedValue != null) {  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @AT@ 3501 @LENGTH@ 175
------------INS ExpressionStatement@@MethodInvocation:sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest) @TO@ Block@@ThenBody:{  sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest);} @AT@ 3605 @LENGTH@ 65
---------------INS MethodInvocation@@sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest) @TO@ ExpressionStatement@@MethodInvocation:sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest) @AT@ 3605 @LENGTH@ 64
------------------INS SimpleName@@Name:sessionAttrs @TO@ MethodInvocation@@sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest) @AT@ 3605 @LENGTH@ 12
------------------INS SimpleName@@MethodName:put:[this.sessionAttributeName, stateToAuthzRequest] @TO@ MethodInvocation@@sessionAttrs.put(this.sessionAttributeName,stateToAuthzRequest) @AT@ 3618 @LENGTH@ 51
---------------------INS FieldAccess@@this.sessionAttributeName @TO@ SimpleName@@MethodName:put:[this.sessionAttributeName, stateToAuthzRequest] @AT@ 3622 @LENGTH@ 25
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.sessionAttributeName @AT@ 3622 @LENGTH@ 4
------------------------INS SimpleName@@sessionAttributeName @TO@ FieldAccess@@this.sessionAttributeName @AT@ 3627 @LENGTH@ 20
---------------------INS SimpleName@@stateToAuthzRequest @TO@ SimpleName@@MethodName:put:[this.sessionAttributeName, stateToAuthzRequest] @AT@ 3649 @LENGTH@ 19


UPD ReturnStatement@@MethodInvocation:registered.equals(requested) @TO@ MethodInvocation:isEqual(registered,requested) @AT@ 7436 @LENGTH@ 36
---UPD MethodInvocation@@registered.equals(requested) @TO@ isEqual(registered,requested) @AT@ 7443 @LENGTH@ 28
------DEL SimpleName@@Name:registered @AT@ 7443 @LENGTH@ 10
------DEL SimpleName@@MethodName:equals:[requested] @AT@ 7454 @LENGTH@ 17
------INS SimpleName@@MethodName:isEqual:[registered, requested] @TO@ MethodInvocation@@registered.equals(requested) @AT@ 7496 @LENGTH@ 30
---------MOV SimpleName@@requested @TO@ SimpleName@@MethodName:isEqual:[registered, requested] @AT@ 7461 @LENGTH@ 9
---------INS SimpleName@@registered @TO@ SimpleName@@MethodName:isEqual:[registered, requested] @AT@ 7504 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @TO@ MethodDeclaration@@public, static, Map<String,Converter<Object,?>>, MethodName:createDefaultClaimTypeConverters,  @AT@ 5192 @LENGTH@ 66
---INS MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @TO@ ExpressionStatement@@MethodInvocation:claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5192 @LENGTH@ 65
------INS SimpleName@@Name:claimTypeConverters @TO@ MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5192 @LENGTH@ 19
------INS SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @TO@ MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5212 @LENGTH@ 45
---------INS QualifiedName@@IdTokenClaimNames.NONCE @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @AT@ 5216 @LENGTH@ 23
------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.NONCE @AT@ 5216 @LENGTH@ 17
------------INS SimpleName@@NONCE @TO@ QualifiedName@@IdTokenClaimNames.NONCE @AT@ 5234 @LENGTH@ 5
---------INS SimpleName@@stringConverter @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @AT@ 5241 @LENGTH@ 15


UPD TypeDeclaration@@[public]CoreOAuthConsumerSupport, [OAuthConsumerSupport, InitializingBean] @TO@ [@Deprecated, public]CoreOAuthConsumerSupport, [OAuthConsumerSupport, InitializingBean] @AT@ 2860 @LENGTH@ 31008
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CoreOAuthConsumerSupport, [OAuthConsumerSupport, InitializingBean] @AT@ 3081 @LENGTH@ 11


UPD TypeDeclaration@@[public]KeyStoreKeyFactory,  @TO@ [@Deprecated, public]KeyStoreKeyFactory,  @AT@ 1355 @LENGTH@ 1359
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]KeyStoreKeyFactory,  @AT@ 1532 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedLdapEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLdapEndpointBuilder, [EndpointProducerBuilder] @AT@ 4955 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 4962 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, ConsumerTokenServices, InitializingBean] @TO@ [@Deprecated, public]DefaultTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, ConsumerTokenServices, InitializingBean] @AT@ 2836 @LENGTH@ 14084
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultTokenServices, [AuthorizationServerTokenServices, ResourceServerTokenServices, ConsumerTokenServices, InitializingBean] @AT@ 3013 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1537 @LENGTH@ 1603
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1544 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1549 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> tasks=new ArrayList<Task<?>>(); @AT@ 2022 @LENGTH@ 89
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2022 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2027 @LENGTH@ 28
------UPD VariableDeclarationFragment@@tasks=new ArrayList<Task<? extends Serializable>>() @TO@ tasks=new ArrayList<Task<?>>() @AT@ 2057 @LENGTH@ 53
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 2065 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 2069 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2079 @LENGTH@ 28


UPD TypeDeclaration@@[@EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @TO@ [@Configuration(proxyBeanMethods=false), @EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 1981 @LENGTH@ 547
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@EnableWebSecurity, public]WebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2042 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:rsocket.authorizePayload(authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll()).basicAuthentication(Customizer.withDefaults()) @TO@ MethodInvocation:rsocket.authorizePayload(authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").route("secure.authority.*").hasAuthority("ROLE_USER").anyRequest().permitAll()).basicAuthentication(Customizer.withDefaults()) @AT@ 7396 @LENGTH@ 270
---UPD MethodInvocation@@rsocket.authorizePayload(authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll()).basicAuthentication(Customizer.withDefaults()) @TO@ rsocket.authorizePayload(authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").route("secure.authority.*").hasAuthority("ROLE_USER").anyRequest().permitAll()).basicAuthentication(Customizer.withDefaults()) @AT@ 7396 @LENGTH@ 269
------UPD MethodInvocation@@MethodName:authorizePayload:[authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll()] @TO@ MethodName:authorizePayload:[authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").route("secure.authority.*").hasAuthority("ROLE_USER").anyRequest().permitAll()] @AT@ 7396 @LENGTH@ 217
---------UPD LambdaExpression@@authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll() @TO@ authorize -> authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").route("secure.authority.*").hasAuthority("ROLE_USER").anyRequest().permitAll() @AT@ 7426 @LENGTH@ 181
------------UPD MethodInvocation@@authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll() @TO@ authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").route("secure.authority.*").hasAuthority("ROLE_USER").anyRequest().permitAll() @AT@ 7444 @LENGTH@ 163
---------------INS MethodInvocation@@MethodName:hasAuthority:["ROLE_USER"] @TO@ MethodInvocation@@authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll() @AT@ 8173 @LENGTH@ 192
------------------INS StringLiteral@@"ROLE_USER" @TO@ MethodInvocation@@MethodName:hasAuthority:["ROLE_USER"] @AT@ 8353 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:route:["secure.authority.*"] @TO@ MethodInvocation@@authorize.setup().hasRole("SETUP").route("secure.admin.*").hasRole("ADMIN").route("secure.**").hasRole("USER").anyRequest().permitAll() @AT@ 8173 @LENGTH@ 166
------------------INS StringLiteral@@"secure.authority.*" @TO@ MethodInvocation@@MethodName:route:["secure.authority.*"] @AT@ 8318 @LENGTH@ 20


UPD MethodDeclaration@@default, DigitalOceanEndpointBuilder, MethodName:digitalOcean, String path,  @TO@ default, DigitalOceanEndpointBuilder, MethodName:digitalocean, String path,  @AT@ 10986 @LENGTH@ 418
---UPD SimpleName@@MethodName:digitalOcean @TO@ MethodName:digitalocean @AT@ 11022 @LENGTH@ 12


INS IfStatement@@if (queues != null) {  this.queues=Arrays.copyOf(queues,queues.length);} else {  this.queues=null;} @TO@ MethodDeclaration@@private, voidMethodName:BrokerRunning, boolean assumeOnline, boolean purge, boolean management, String... queues,  @AT@ 7479 @LENGTH@ 116
---INS InfixExpression@@queues != null @TO@ IfStatement@@if (queues != null) {  this.queues=Arrays.copyOf(queues,queues.length);} else {  this.queues=null;} @AT@ 7483 @LENGTH@ 14
------INS SimpleName@@queues @TO@ InfixExpression@@queues != null @AT@ 7483 @LENGTH@ 6
------INS Operator@@!= @TO@ InfixExpression@@queues != null @AT@ 7489 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@queues != null @AT@ 7493 @LENGTH@ 4
---INS Block@@ThenBody:{  this.queues=Arrays.copyOf(queues,queues.length);} @TO@ IfStatement@@if (queues != null) {  this.queues=Arrays.copyOf(queues,queues.length);} else {  this.queues=null;} @AT@ 7499 @LENGTH@ 60
------INS ExpressionStatement@@Assignment:this.queues=Arrays.copyOf(queues,queues.length) @TO@ Block@@ThenBody:{  this.queues=Arrays.copyOf(queues,queues.length);} @AT@ 7504 @LENGTH@ 51
---------MOV Assignment@@this.queues=queues @TO@ ExpressionStatement@@Assignment:this.queues=Arrays.copyOf(queues,queues.length) @AT@ 7479 @LENGTH@ 20
------------DEL SimpleName@@queues @AT@ 7493 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.copyOf(queues,queues.length) @TO@ Assignment@@this.queues=queues @AT@ 7518 @LENGTH@ 36
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.copyOf(queues,queues.length) @AT@ 7518 @LENGTH@ 6
---------------INS SimpleName@@MethodName:copyOf:[queues, queues.length] @TO@ MethodInvocation@@Arrays.copyOf(queues,queues.length) @AT@ 7525 @LENGTH@ 29
------------------INS SimpleName@@queues @TO@ SimpleName@@MethodName:copyOf:[queues, queues.length] @AT@ 7532 @LENGTH@ 6
------------------INS QualifiedName@@queues.length @TO@ SimpleName@@MethodName:copyOf:[queues, queues.length] @AT@ 7540 @LENGTH@ 13
---------------------INS SimpleName@@queues @TO@ QualifiedName@@queues.length @AT@ 7540 @LENGTH@ 6
---------------------INS SimpleName@@length @TO@ QualifiedName@@queues.length @AT@ 7547 @LENGTH@ 6
---INS Block@@ElseBody:{  this.queues=null;} @TO@ IfStatement@@if (queues != null) {  this.queues=Arrays.copyOf(queues,queues.length);} else {  this.queues=null;} @AT@ 7567 @LENGTH@ 28
------INS ExpressionStatement@@Assignment:this.queues=null @TO@ Block@@ElseBody:{  this.queues=null;} @AT@ 7572 @LENGTH@ 19
---------INS Assignment@@this.queues=null @TO@ ExpressionStatement@@Assignment:this.queues=null @AT@ 7572 @LENGTH@ 18
------------INS FieldAccess@@this.queues @TO@ Assignment@@this.queues=null @AT@ 7572 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.queues @AT@ 7572 @LENGTH@ 4
---------------INS SimpleName@@queues @TO@ FieldAccess@@this.queues @AT@ 7577 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@this.queues=null @AT@ 7583 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@this.queues=null @AT@ 7586 @LENGTH@ 4


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2034 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2046 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2054 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2054 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2094 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2102 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2121 @LENGTH@ 4


UPD MethodDeclaration@@default, LambdaEndpointBuilder, MethodName:lambda, String path,  @TO@ default, LambdaEndpointBuilder, MethodName:awsLambda, String path,  @AT@ 8553 @LENGTH@ 374
---UPD SimpleName@@MethodName:lambda @TO@ MethodName:awsLambda @AT@ 8583 @LENGTH@ 6


UPD MethodDeclaration@@default, XQueryEndpointBuilder, MethodName:xQuery, String path,  @TO@ default, XQueryEndpointBuilder, MethodName:xquery, String path,  @AT@ 60845 @LENGTH@ 370
---UPD SimpleName@@MethodName:xQuery @TO@ MethodName:xquery @AT@ 60875 @LENGTH@ 6


INS IfStatement@@if (defaultWriteConcern != null) {  collection=collection.withWriteConcern(defaultWriteConcern);} @TO@ MethodDeclaration@@private, BulkWriteResult, MethodName:bulkWriteTo, MongoCollection<Document> collection,  @AT@ 10178 @LENGTH@ 104
---INS InfixExpression@@defaultWriteConcern != null @TO@ IfStatement@@if (defaultWriteConcern != null) {  collection=collection.withWriteConcern(defaultWriteConcern);} @AT@ 10182 @LENGTH@ 27
------INS SimpleName@@defaultWriteConcern @TO@ InfixExpression@@defaultWriteConcern != null @AT@ 10182 @LENGTH@ 19
------INS Operator@@!= @TO@ InfixExpression@@defaultWriteConcern != null @AT@ 10201 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@defaultWriteConcern != null @AT@ 10205 @LENGTH@ 4
---INS Block@@ThenBody:{  collection=collection.withWriteConcern(defaultWriteConcern);} @TO@ IfStatement@@if (defaultWriteConcern != null) {  collection=collection.withWriteConcern(defaultWriteConcern);} @AT@ 10211 @LENGTH@ 71
------INS ExpressionStatement@@Assignment:collection=collection.withWriteConcern(defaultWriteConcern) @TO@ Block@@ThenBody:{  collection=collection.withWriteConcern(defaultWriteConcern);} @AT@ 10216 @LENGTH@ 62
---------INS Assignment@@collection=collection.withWriteConcern(defaultWriteConcern) @TO@ ExpressionStatement@@Assignment:collection=collection.withWriteConcern(defaultWriteConcern) @AT@ 10216 @LENGTH@ 61
------------INS SimpleName@@collection @TO@ Assignment@@collection=collection.withWriteConcern(defaultWriteConcern) @AT@ 10216 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@collection=collection.withWriteConcern(defaultWriteConcern) @AT@ 10226 @LENGTH@ 1
------------INS MethodInvocation@@collection.withWriteConcern(defaultWriteConcern) @TO@ Assignment@@collection=collection.withWriteConcern(defaultWriteConcern) @AT@ 10229 @LENGTH@ 48
---------------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.withWriteConcern(defaultWriteConcern) @AT@ 10229 @LENGTH@ 10
---------------INS SimpleName@@MethodName:withWriteConcern:[defaultWriteConcern] @TO@ MethodInvocation@@collection.withWriteConcern(defaultWriteConcern) @AT@ 10240 @LENGTH@ 37
------------------INS SimpleName@@defaultWriteConcern @TO@ SimpleName@@MethodName:withWriteConcern:[defaultWriteConcern] @AT@ 10257 @LENGTH@ 19


UPD TypeDeclaration@@[public, static]AdvancedLumberjackEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedLumberjackEndpointBuilder, [EndpointConsumerBuilder] @AT@ 3522 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 3529 @LENGTH@ 6


UPD FieldDeclaration@@private, ReactiveOAuth2TokenIntrospectionClient, [introspectionClient] @TO@ private, ReactiveOpaqueTokenIntrospector, [introspectionClient] @AT@ 3541 @LENGTH@ 67
---UPD SimpleType@@ReactiveOAuth2TokenIntrospectionClient @TO@ ReactiveOpaqueTokenIntrospector @AT@ 3549 @LENGTH@ 38


UPD TypeDeclaration@@[public, static]AdvancedSnsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSnsEndpointBuilder, [EndpointProducerBuilder] @AT@ 10526 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 10533 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @TO@ TypeDeclaration@@[public]CachingConnectionFactoryTests, AbstractConnectionFactoryTests @AT@ 72313 @LENGTH@ 625
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72313 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72320 @LENGTH@ 4
---INS SimpleName@@MethodName:confirmsCorrelated @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72325 @LENGTH@ 18
---INS VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72350 @LENGTH@ 90
------INS SimpleType@@CachingConnectionFactory @TO@ VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @AT@ 72350 @LENGTH@ 24
------INS VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @TO@ VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @AT@ 72375 @LENGTH@ 64
---------INS SimpleName@@cf @TO@ VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @AT@ 72375 @LENGTH@ 2
---------INS ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @TO@ VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @AT@ 72380 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 72380 @LENGTH@ 3
------------INS SimpleType@@CachingConnectionFactory @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 72384 @LENGTH@ 24
------------INS MethodInvocation@@mock(ConnectionFactory.class) @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 72409 @LENGTH@ 29
---------------INS SimpleName@@MethodName:mock:[ConnectionFactory.class] @TO@ MethodInvocation@@mock(ConnectionFactory.class) @AT@ 72409 @LENGTH@ 29
------------------INS TypeLiteral@@ConnectionFactory.class @TO@ SimpleName@@MethodName:mock:[ConnectionFactory.class] @AT@ 72414 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(false) @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72443 @LENGTH@ 31
------INS MethodInvocation@@cf.setPublisherConfirms(false) @TO@ ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(false) @AT@ 72443 @LENGTH@ 30
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setPublisherConfirms(false) @AT@ 72443 @LENGTH@ 2
---------INS SimpleName@@MethodName:setPublisherConfirms:[false] @TO@ MethodInvocation@@cf.setPublisherConfirms(false) @AT@ 72446 @LENGTH@ 27
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setPublisherConfirms:[false] @AT@ 72467 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72477 @LENGTH@ 79
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72477 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72477 @LENGTH@ 68
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @AT@ 72488 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72488 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72488 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72523 @LENGTH@ 21
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72546 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72559 @LENGTH@ 47
------INS MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72559 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72559 @LENGTH@ 36
------------INS MethodInvocation@@cf.isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @AT@ 72570 @LENGTH@ 24
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72570 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72573 @LENGTH@ 21
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72596 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(true) @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72609 @LENGTH@ 30
------INS MethodInvocation@@cf.setPublisherConfirms(true) @TO@ ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(true) @AT@ 72609 @LENGTH@ 29
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setPublisherConfirms(true) @AT@ 72609 @LENGTH@ 2
---------INS SimpleName@@MethodName:setPublisherConfirms:[true] @TO@ MethodInvocation@@cf.setPublisherConfirms(true) @AT@ 72612 @LENGTH@ 26
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setPublisherConfirms:[true] @AT@ 72633 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72642 @LENGTH@ 78
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isTrue() @AT@ 72642 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isTrue() @AT@ 72642 @LENGTH@ 68
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @AT@ 72653 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72653 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72653 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72688 @LENGTH@ 21
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isTrue() @AT@ 72711 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72723 @LENGTH@ 46
------INS MethodInvocation@@assertThat(cf.isPublisherConfirms()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isTrue() @AT@ 72723 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isTrue() @AT@ 72723 @LENGTH@ 36
------------INS MethodInvocation@@cf.isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @AT@ 72734 @LENGTH@ 24
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72734 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72737 @LENGTH@ 21
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isTrue() @AT@ 72760 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(false) @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72772 @LENGTH@ 31
------INS MethodInvocation@@cf.setPublisherConfirms(false) @TO@ ExpressionStatement@@MethodInvocation:cf.setPublisherConfirms(false) @AT@ 72772 @LENGTH@ 30
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setPublisherConfirms(false) @AT@ 72772 @LENGTH@ 2
---------INS SimpleName@@MethodName:setPublisherConfirms:[false] @TO@ MethodInvocation@@cf.setPublisherConfirms(false) @AT@ 72775 @LENGTH@ 27
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setPublisherConfirms:[false] @AT@ 72796 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72806 @LENGTH@ 47
------INS MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72806 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72806 @LENGTH@ 36
------------INS MethodInvocation@@cf.isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isPublisherConfirms()] @AT@ 72817 @LENGTH@ 24
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72817 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.isPublisherConfirms() @AT@ 72820 @LENGTH@ 21
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.isPublisherConfirms()).isFalse() @AT@ 72843 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsCorrelated,  @AT@ 72856 @LENGTH@ 79
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72856 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72856 @LENGTH@ 68
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isPublisherConfirms()] @AT@ 72867 @LENGTH@ 56
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72867 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72867 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isPublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isPublisherConfirms() @AT@ 72902 @LENGTH@ 21
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isPublisherConfirms()).isFalse() @AT@ 72925 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2128 @LENGTH@ 133
---UPD MethodInvocation@@mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2128 @LENGTH@ 132
------UPD SimpleName@@MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)] @TO@ MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)] @AT@ 2139 @LENGTH@ 121
---------UPD MethodInvocation@@Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK) @TO@ Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK) @AT@ 2154 @LENGTH@ 105
------------UPD SimpleName@@MethodName:replaceFirst:["EVN", "EVN" + MllpProtocolConstants.END_OF_BLOCK] @TO@ MethodName:replaceFirst:["PID", "PID" + MllpProtocolConstants.END_OF_BLOCK] @AT@ 2196 @LENGTH@ 63
---------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2209 @LENGTH@ 5
---------------UPD InfixExpression@@"EVN" + MllpProtocolConstants.END_OF_BLOCK @TO@ "PID" + MllpProtocolConstants.END_OF_BLOCK @AT@ 2216 @LENGTH@ 42
------------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2216 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2058 @LENGTH@ 221
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2129 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2129 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2134 @LENGTH@ 28


INS MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @TO@ TypeDeclaration@@[@Configuration, public]WebClientConfig,  @AT@ 1988 @LENGTH@ 653
---INS SimpleType@@OAuth2AuthorizedClientManager @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 1958 @LENGTH@ 29
---INS SimpleName@@MethodName:authorizedClientManager @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 1988 @LENGTH@ 23
---INS SingleVariableDeclaration@@ClientRegistrationRepository clientRegistrationRepository @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2012 @LENGTH@ 57
------INS SimpleType@@ClientRegistrationRepository @TO@ SingleVariableDeclaration@@ClientRegistrationRepository clientRegistrationRepository @AT@ 2012 @LENGTH@ 28
------INS SimpleName@@clientRegistrationRepository @TO@ SingleVariableDeclaration@@ClientRegistrationRepository clientRegistrationRepository @AT@ 2041 @LENGTH@ 28
---INS SingleVariableDeclaration@@OAuth2AuthorizedClientRepository authorizedClientRepository @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2086 @LENGTH@ 59
------INS SimpleType@@OAuth2AuthorizedClientRepository @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientRepository authorizedClientRepository @AT@ 2086 @LENGTH@ 32
------INS SimpleName@@authorizedClientRepository @TO@ SingleVariableDeclaration@@OAuth2AuthorizedClientRepository authorizedClientRepository @AT@ 2119 @LENGTH@ 26
---INS VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2151 @LENGTH@ 201
------INS SimpleType@@OAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 2151 @LENGTH@ 30
------INS VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 2182 @LENGTH@ 169
---------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2182 @LENGTH@ 24
---------INS MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 138
------------INS MethodInvocation@@MethodName:clientCredentials:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 123
------------INS MethodInvocation@@MethodName:refreshToken:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 96
------------INS MethodInvocation@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 47
------------INS SimpleName@@Name:OAuth2AuthorizedClientProviderBuilder @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 37
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2344 @LENGTH@ 7
---INS VariableDeclarationStatement@@DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository); @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2355 @LENGTH@ 167
------INS SimpleType@@DefaultOAuth2AuthorizedClientManager @TO@ VariableDeclarationStatement@@DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository); @AT@ 2355 @LENGTH@ 36
------INS VariableDeclarationFragment@@authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @TO@ VariableDeclarationStatement@@DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository); @AT@ 2392 @LENGTH@ 129
---------INS SimpleName@@authorizedClientManager @TO@ VariableDeclarationFragment@@authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 2392 @LENGTH@ 23
---------INS ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @TO@ VariableDeclarationFragment@@authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 2418 @LENGTH@ 103
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 2418 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AuthorizedClientManager @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 2422 @LENGTH@ 36
------------INS SimpleName@@clientRegistrationRepository @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 2464 @LENGTH@ 28
------------INS SimpleName@@authorizedClientRepository @TO@ ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 2494 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2525 @LENGTH@ 78
------INS MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2525 @LENGTH@ 77
---------INS SimpleName@@Name:authorizedClientManager @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2525 @LENGTH@ 23
---------INS SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2549 @LENGTH@ 53
------------INS SimpleName@@authorizedClientProvider @TO@ SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @AT@ 2577 @LENGTH@ 24
---INS ReturnStatement@@SimpleName:authorizedClientManager @TO@ MethodDeclaration@@OAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2607 @LENGTH@ 31
------INS SimpleName@@authorizedClientManager @TO@ ReturnStatement@@SimpleName:authorizedClientManager @AT@ 2614 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:http.authorizeExchange(exchanges -> exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.jwt(withDefaults())) @TO@ MethodInvocation:http.authorizeExchange(exchanges -> exchanges.pathMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").pathMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyExchange().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.jwt(withDefaults())) @AT@ 1204 @LENGTH@ 269
---UPD MethodInvocation@@http.authorizeExchange(exchanges -> exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.jwt(withDefaults())) @TO@ http.authorizeExchange(exchanges -> exchanges.pathMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").pathMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyExchange().authenticated()).oauth2ResourceServer(oauth2ResourceServer -> oauth2ResourceServer.jwt(withDefaults())) @AT@ 1204 @LENGTH@ 268
------UPD MethodInvocation@@MethodName:authorizeExchange:[exchanges -> exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated()] @TO@ MethodName:authorizeExchange:[exchanges -> exchanges.pathMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").pathMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyExchange().authenticated()] @AT@ 1204 @LENGTH@ 163
---------UPD LambdaExpression@@exchanges -> exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated() @TO@ exchanges -> exchanges.pathMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").pathMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyExchange().authenticated() @AT@ 1231 @LENGTH@ 131
------------UPD MethodInvocation@@exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated() @TO@ exchanges.pathMatchers(HttpMethod.GET,"/message/**").hasAuthority("SCOPE_message:read").pathMatchers(HttpMethod.POST,"/message/**").hasAuthority("SCOPE_message:write").anyExchange().authenticated() @AT@ 1248 @LENGTH@ 114
---------------UPD MethodInvocation@@MethodName:pathMatchers:["/message/**"] @TO@ MethodName:pathMatchers:[HttpMethod.GET, "/message/**"] @AT@ 1248 @LENGTH@ 43
------------------INS QualifiedName@@HttpMethod.GET @TO@ MethodInvocation@@MethodName:pathMatchers:["/message/**"] @AT@ 1321 @LENGTH@ 14
---------------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.GET @AT@ 1321 @LENGTH@ 10
---------------------INS SimpleName@@GET @TO@ QualifiedName@@HttpMethod.GET @AT@ 1332 @LENGTH@ 3
---------------INS MethodInvocation@@MethodName:hasAuthority:["SCOPE_message:write"] @TO@ MethodInvocation@@exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated() @AT@ 1292 @LENGTH@ 181
------------------INS StringLiteral@@"SCOPE_message:write" @TO@ MethodInvocation@@MethodName:hasAuthority:["SCOPE_message:write"] @AT@ 1451 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:pathMatchers:[HttpMethod.POST, "/message/**"] @TO@ MethodInvocation@@exchanges.pathMatchers("/message/**").hasAuthority("SCOPE_message:read").anyExchange().authenticated() @AT@ 1292 @LENGTH@ 145
------------------INS QualifiedName@@HttpMethod.POST @TO@ MethodInvocation@@MethodName:pathMatchers:[HttpMethod.POST, "/message/**"] @AT@ 1406 @LENGTH@ 15
---------------------INS SimpleName@@HttpMethod @TO@ QualifiedName@@HttpMethod.POST @AT@ 1406 @LENGTH@ 10
---------------------INS SimpleName@@POST @TO@ QualifiedName@@HttpMethod.POST @AT@ 1417 @LENGTH@ 4
------------------INS StringLiteral@@"/message/**" @TO@ MethodInvocation@@MethodName:pathMatchers:[HttpMethod.POST, "/message/**"] @AT@ 1423 @LENGTH@ 13


UPD TypeDeclaration@@[public]JsonParser,  @TO@ [@Deprecated, public]JsonParser,  @AT@ 722 @LENGTH@ 361
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JsonParser,  @AT@ 900 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenEndpointAuthenticationFilter, [Filter] @TO@ [@Deprecated, public]TokenEndpointAuthenticationFilter, [Filter] @AT@ 3497 @LENGTH@ 5547
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenEndpointAuthenticationFilter, [Filter] @AT@ 3674 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 44112 @LENGTH@ 75
---DEL Modifier@@public @AT@ 44112 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(type,"Deserialization type must not be null! Pleaes provide Object.class to make use of Jackson2 default typing.") @TO@ MethodInvocation:Assert.notNull(type,"Deserialization type must not be null! Please provide Object.class to make use of Jackson2 default typing.") @AT@ 5355 @LENGTH@ 135
---UPD MethodInvocation@@Assert.notNull(type,"Deserialization type must not be null! Pleaes provide Object.class to make use of Jackson2 default typing.") @TO@ Assert.notNull(type,"Deserialization type must not be null! Please provide Object.class to make use of Jackson2 default typing.") @AT@ 5355 @LENGTH@ 134
------UPD SimpleName@@MethodName:notNull:[type, "Deserialization type must not be null! Pleaes provide Object.class to make use of Jackson2 default typing."] @TO@ MethodName:notNull:[type, "Deserialization type must not be null! Please provide Object.class to make use of Jackson2 default typing."] @AT@ 5362 @LENGTH@ 127
---------UPD StringLiteral@@"Deserialization type must not be null! Pleaes provide Object.class to make use of Jackson2 default typing." @TO@ "Deserialization type must not be null! Please provide Object.class to make use of Jackson2 default typing." @AT@ 5380 @LENGTH@ 108


UPD ExpressionStatement@@MethodInvocation:responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ MethodInvocation:responseList.forEach(responseObserver::onNext) @AT@ 3135 @LENGTH@ 119
---UPD MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ responseList.forEach(responseObserver::onNext) @AT@ 3135 @LENGTH@ 118
------DEL SimpleName@@MethodName:forEach:[(responseItem) -> {
  responseObserver.onNext(responseItem);
}
] @AT@ 3148 @LENGTH@ 105
---------DEL LambdaExpression@@(responseItem) -> {
  responseObserver.onNext(responseItem);
}
 @AT@ 3156 @LENGTH@ 96
------------DEL VariableDeclarationFragment@@responseItem @AT@ 3157 @LENGTH@ 12
---------------DEL SimpleName@@responseItem @AT@ 3157 @LENGTH@ 12
------------DEL ExpressionStatement@@MethodInvocation:responseObserver.onNext(responseItem) @AT@ 3196 @LENGTH@ 38
---------------DEL MethodInvocation@@responseObserver.onNext(responseItem) @AT@ 3196 @LENGTH@ 37
------------------DEL SimpleName@@Name:responseObserver @AT@ 3196 @LENGTH@ 16
------MOV SimpleName@@MethodName:onNext:[responseItem] @TO@ MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @AT@ 3213 @LENGTH@ 20
---------DEL SimpleName@@responseItem @AT@ 3220 @LENGTH@ 12


UPD MethodDeclaration@@default, GridFsEndpointBuilder, MethodName:gridFs, String path,  @TO@ default, GridFsEndpointBuilder, MethodName:mongodbGridfs, String path,  @AT@ 31091 @LENGTH@ 378
---UPD SimpleName@@MethodName:gridFs @TO@ MethodName:mongodbGridfs @AT@ 31121 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:setInjector, Injector injector,  @TO@ TypeDeclaration@@[public]CamelContext, [StatefulService, RuntimeConfiguration] @AT@ 27924 @LENGTH@ 31
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setInjector, Injector injector,  @AT@ 27919 @LENGTH@ 4
---INS SimpleName@@MethodName:setInjector @TO@ MethodDeclaration@@void, MethodName:setInjector, Injector injector,  @AT@ 27924 @LENGTH@ 11
---INS SingleVariableDeclaration@@Injector injector @TO@ MethodDeclaration@@void, MethodName:setInjector, Injector injector,  @AT@ 27936 @LENGTH@ 17
------INS SimpleType@@Injector @TO@ SingleVariableDeclaration@@Injector injector @AT@ 27936 @LENGTH@ 8
------INS SimpleName@@injector @TO@ SingleVariableDeclaration@@Injector injector @AT@ 27945 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]Command,  @TO@ [static]Command,  @AT@ 30485 @LENGTH@ 1139
---DEL Modifier@@public @AT@ 30485 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:logoutHandlers.add(new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)) @TO@ MethodDeclaration@@public, BeanDefinition, MethodName:parse, Element element, ParserContext pc,  @AT@ 4949 @LENGTH@ 92
---INS MethodInvocation@@logoutHandlers.add(new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)) @TO@ ExpressionStatement@@MethodInvocation:logoutHandlers.add(new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)) @AT@ 4949 @LENGTH@ 91
------INS SimpleName@@Name:logoutHandlers @TO@ MethodInvocation@@logoutHandlers.add(new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)) @AT@ 4949 @LENGTH@ 14
------INS SimpleName@@MethodName:add:[new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)] @TO@ MethodInvocation@@logoutHandlers.add(new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)) @AT@ 4964 @LENGTH@ 76
---------INS ClassInstanceCreation@@RootBeanDefinition[LogoutSuccessEventPublishingLogoutHandler.class] @TO@ SimpleName@@MethodName:add:[new RootBeanDefinition(LogoutSuccessEventPublishingLogoutHandler.class)] @AT@ 4968 @LENGTH@ 71
------------INS New@@new @TO@ ClassInstanceCreation@@RootBeanDefinition[LogoutSuccessEventPublishingLogoutHandler.class] @AT@ 4968 @LENGTH@ 3
------------INS SimpleType@@RootBeanDefinition @TO@ ClassInstanceCreation@@RootBeanDefinition[LogoutSuccessEventPublishingLogoutHandler.class] @AT@ 4972 @LENGTH@ 18
------------INS TypeLiteral@@LogoutSuccessEventPublishingLogoutHandler.class @TO@ ClassInstanceCreation@@RootBeanDefinition[LogoutSuccessEventPublishingLogoutHandler.class] @AT@ 4991 @LENGTH@ 47


UPD ReturnStatement@@MethodInvocation:matches(digested,digest(rawPassword,salt)) @TO@ MethodInvocation:MessageDigest.isEqual(digested,digest(rawPassword,salt)) @AT@ 3162 @LENGTH@ 52
---UPD MethodInvocation@@matches(digested,digest(rawPassword,salt)) @TO@ MessageDigest.isEqual(digested,digest(rawPassword,salt)) @AT@ 3169 @LENGTH@ 44
------UPD SimpleName@@MethodName:matches:[digested, digest(rawPassword,salt)] @TO@ MethodName:isEqual:[digested, digest(rawPassword,salt)] @AT@ 3169 @LENGTH@ 44
------INS SimpleName@@Name:MessageDigest @TO@ MethodInvocation@@matches(digested,digest(rawPassword,salt)) @AT@ 3206 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 13971 @LENGTH@ 149
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 14042 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 14042 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14047 @LENGTH@ 28


UPD IfStatement@@if ("quartz2".equals(name)) {  components.add("quartz2");} else if ("spring".equals(name)) {  components.add("spring-event");} @TO@ if ("quartz".equals(name)) {  components.add("quartz");} else if ("spring".equals(name)) {  components.add("spring-event");} @AT@ 59627 @LENGTH@ 230
---UPD MethodInvocation@@"quartz2".equals(name) @TO@ "quartz".equals(name) @AT@ 59631 @LENGTH@ 22
------UPD StringLiteral@@"quartz2" @TO@ "quartz" @AT@ 59631 @LENGTH@ 9
---UPD Block@@ThenBody:{  components.add("quartz2");} @TO@ ThenBody:{  components.add("quartz");} @AT@ 59655 @LENGTH@ 82
------UPD ExpressionStatement@@MethodInvocation:components.add("quartz2") @TO@ MethodInvocation:components.add("quartz") @AT@ 59685 @LENGTH@ 26
---------UPD MethodInvocation@@components.add("quartz2") @TO@ components.add("quartz") @AT@ 59685 @LENGTH@ 25
------------UPD SimpleName@@MethodName:add:["quartz2"] @TO@ MethodName:add:["quartz"] @AT@ 59696 @LENGTH@ 14
---------------UPD StringLiteral@@"quartz2" @TO@ "quartz" @AT@ 59700 @LENGTH@ 9


UPD MethodDeclaration@@default, OptaPlannerEndpointBuilder, MethodName:optaPlanner, String path,  @TO@ default, OptaPlannerEndpointBuilder, MethodName:optaplanner, String path,  @AT@ 18797 @LENGTH@ 410
---UPD SimpleName@@MethodName:optaPlanner @TO@ MethodName:optaplanner @AT@ 18832 @LENGTH@ 11


INS TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @TO@ TypeDeclaration@@[public]ReactiveMethodSecurityConfigurationTests,  @AT@ 4178 @LENGTH@ 118
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4178 @LENGTH@ 40
---INS Modifier@@static @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4220 @LENGTH@ 6
---INS SimpleName@@ClassName:SubclassConfig @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4233 @LENGTH@ 14
---INS SimpleType@@ReactiveMethodSecurityConfiguration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4256 @LENGTH@ 35


UPD MethodDeclaration@@default, JBPMEndpointBuilder, MethodName:jBPM, String path,  @TO@ default, JBPMEndpointBuilder, MethodName:jbpm, String path,  @AT@ 63221 @LENGTH@ 354
---UPD SimpleName@@MethodName:jBPM @TO@ MethodName:jbpm @AT@ 63249 @LENGTH@ 4


UPD MethodDeclaration@@default, IOTAEndpointBuilder, MethodName:iOTA, String path,  @TO@ default, IOTAEndpointBuilder, MethodName:iota, String path,  @AT@ 26235 @LENGTH@ 354
---UPD SimpleName@@MethodName:iOTA @TO@ MethodName:iota @AT@ 26263 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 6209 @LENGTH@ 3774
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 6288 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 6288 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6293 @LENGTH@ 28


INS FieldDeclaration@@public, User, [manager] @TO@ TypeDeclaration@@[@Document, public]User,  @AT@ 1600 @LENGTH@ 40
---INS Modifier@@public @TO@ FieldDeclaration@@public, User, [manager] @AT@ 1600 @LENGTH@ 6
---INS SimpleType@@User @TO@ FieldDeclaration@@public, User, [manager] @AT@ 1627 @LENGTH@ 4
---INS VariableDeclarationFragment@@manager @TO@ FieldDeclaration@@public, User, [manager] @AT@ 1632 @LENGTH@ 7
------INS SimpleName@@manager @TO@ VariableDeclarationFragment@@manager @AT@ 1632 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]StAXEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]StAXEndpointBuilder, [EndpointProducerBuilder] @AT@ 1415 @LENGTH@ 630
---DEL Modifier@@static @AT@ 1422 @LENGTH@ 6


UPD VariableDeclarationStatement@@Map<String,String> conf=new HashMap(); @TO@ Map<String,String> conf=new HashMap<String,String>(); @AT@ 2548 @LENGTH@ 41
---UPD VariableDeclarationFragment@@conf=new HashMap() @TO@ conf=new HashMap<String,String>() @AT@ 2568 @LENGTH@ 20
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,String>[] @AT@ 2575 @LENGTH@ 13
---------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2579 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2579 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2587 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2595 @LENGTH@ 6
---------DEL SimpleType@@HashMap @AT@ 2579 @LENGTH@ 7


UPD TypeDeclaration@@[public]OAuthSignatureMethodFactory,  @TO@ [@Deprecated, public]OAuthSignatureMethodFactory,  @AT@ 726 @LENGTH@ 582
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSignatureMethodFactory,  @AT@ 947 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:enumClass=javaClass.addNestedType().setPublic().setStatic(true).setName(enumClassName).setEnum(true) @TO@ Assignment:enumClass=javaClass.addNestedType().setPackagePrivate().setStatic(true).setName(enumClassName).setEnum(true) @AT@ 26729 @LENGTH@ 136
---UPD Assignment@@enumClass=javaClass.addNestedType().setPublic().setStatic(true).setName(enumClassName).setEnum(true) @TO@ enumClass=javaClass.addNestedType().setPackagePrivate().setStatic(true).setName(enumClassName).setEnum(true) @AT@ 26729 @LENGTH@ 135
------UPD MethodInvocation@@javaClass.addNestedType().setPublic().setStatic(true).setName(enumClassName).setEnum(true) @TO@ javaClass.addNestedType().setPackagePrivate().setStatic(true).setName(enumClassName).setEnum(true) @AT@ 26741 @LENGTH@ 123
---------UPD MethodInvocation@@MethodName:setPublic:[] @TO@ MethodName:setPackagePrivate:[] @AT@ 26741 @LENGTH@ 37


INS ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckToken, Exception,  @AT@ 1099 @LENGTH@ 70
---INS MethodInvocation@@assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @AT@ 1099 @LENGTH@ 69
------INS SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @TO@ MethodInvocation@@assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @AT@ 1099 @LENGTH@ 69
---------INS QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @AT@ 1112 @LENGTH@ 29
------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @AT@ 1112 @LENGTH@ 10
------------INS SimpleName@@METHOD_NOT_ALLOWED @TO@ QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @AT@ 1123 @LENGTH@ 18
---------INS MethodInvocation@@response.getStatusCode() @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @AT@ 1143 @LENGTH@ 24
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatusCode() @AT@ 1143 @LENGTH@ 8
------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@response.getStatusCode() @AT@ 1152 @LENGTH@ 15


UPD TypeDeclaration@@[public, static]KubernetesPersistentVolumesEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesPersistentVolumesEndpointBuilder, [EndpointProducerBuilder] @AT@ 1499 @LENGTH@ 7599
---DEL Modifier@@static @AT@ 1506 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:this.objectMapper.registerModule(new JobParametersModule()) @TO@ MethodDeclaration@@public, void, MethodName:setObjectMapper, ObjectMapper objectMapper,  @AT@ 2529 @LENGTH@ 60
---INS MethodInvocation@@this.objectMapper.registerModule(new JobParametersModule()) @TO@ ExpressionStatement@@MethodInvocation:this.objectMapper.registerModule(new JobParametersModule()) @AT@ 2529 @LENGTH@ 59
------INS FieldAccess@@this.objectMapper @TO@ MethodInvocation@@this.objectMapper.registerModule(new JobParametersModule()) @AT@ 2529 @LENGTH@ 17
---------INS ThisExpression@@this @TO@ FieldAccess@@this.objectMapper @AT@ 2529 @LENGTH@ 4
---------INS SimpleName@@objectMapper @TO@ FieldAccess@@this.objectMapper @AT@ 2534 @LENGTH@ 12
------INS SimpleName@@MethodName:registerModule:[new JobParametersModule()] @TO@ MethodInvocation@@this.objectMapper.registerModule(new JobParametersModule()) @AT@ 2547 @LENGTH@ 41
---------INS ClassInstanceCreation@@JobParametersModule[] @TO@ SimpleName@@MethodName:registerModule:[new JobParametersModule()] @AT@ 2562 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@JobParametersModule[] @AT@ 2562 @LENGTH@ 3
------------INS SimpleType@@JobParametersModule @TO@ ClassInstanceCreation@@JobParametersModule[] @AT@ 2566 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @TO@ TypeDeclaration@@[public]PageImplUnitTests,  @AT@ 5918 @LENGTH@ 298
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 5918 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 5925 @LENGTH@ 4
---INS SimpleName@@MethodName:usesContentLengthForSizeIfNoPageableGiven @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 5930 @LENGTH@ 41
---INS VariableDeclarationStatement@@Page<Integer> page=new PageImpl<>(Arrays.asList(1,2)); @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 5979 @LENGTH@ 57
------INS ParameterizedType@@Page<Integer> @TO@ VariableDeclarationStatement@@Page<Integer> page=new PageImpl<>(Arrays.asList(1,2)); @AT@ 5979 @LENGTH@ 13
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Integer> @AT@ 5979 @LENGTH@ 4
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Page<Integer> @AT@ 5984 @LENGTH@ 7
------INS VariableDeclarationFragment@@page=new PageImpl<>(Arrays.asList(1,2)) @TO@ VariableDeclarationStatement@@Page<Integer> page=new PageImpl<>(Arrays.asList(1,2)); @AT@ 5993 @LENGTH@ 42
---------INS SimpleName@@page @TO@ VariableDeclarationFragment@@page=new PageImpl<>(Arrays.asList(1,2)) @AT@ 5993 @LENGTH@ 4
---------INS ClassInstanceCreation@@PageImpl<>[Arrays.asList(1,2)] @TO@ VariableDeclarationFragment@@page=new PageImpl<>(Arrays.asList(1,2)) @AT@ 6000 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@PageImpl<>[Arrays.asList(1,2)] @AT@ 6000 @LENGTH@ 3
------------INS ParameterizedType@@PageImpl<> @TO@ ClassInstanceCreation@@PageImpl<>[Arrays.asList(1,2)] @AT@ 6004 @LENGTH@ 10
---------------INS SimpleType@@PageImpl @TO@ ParameterizedType@@PageImpl<> @AT@ 6004 @LENGTH@ 8
------------INS MethodInvocation@@Arrays.asList(1,2) @TO@ ClassInstanceCreation@@PageImpl<>[Arrays.asList(1,2)] @AT@ 6015 @LENGTH@ 19
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(1,2) @AT@ 6015 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[1, 2] @TO@ MethodInvocation@@Arrays.asList(1,2) @AT@ 6022 @LENGTH@ 12
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:asList:[1, 2] @AT@ 6029 @LENGTH@ 1
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:asList:[1, 2] @AT@ 6032 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(page.getSize()).isEqualTo(2) @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 6040 @LENGTH@ 40
------INS MethodInvocation@@assertThat(page.getSize()).isEqualTo(2) @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.getSize()).isEqualTo(2) @AT@ 6040 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:assertThat:[page.getSize()] @TO@ MethodInvocation@@assertThat(page.getSize()).isEqualTo(2) @AT@ 6040 @LENGTH@ 26
------------INS MethodInvocation@@page.getSize() @TO@ MethodInvocation@@MethodName:assertThat:[page.getSize()] @AT@ 6051 @LENGTH@ 14
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getSize() @AT@ 6051 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getSize:[] @TO@ MethodInvocation@@page.getSize() @AT@ 6056 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:[2] @TO@ MethodInvocation@@assertThat(page.getSize()).isEqualTo(2) @AT@ 6067 @LENGTH@ 12
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:isEqualTo:[2] @AT@ 6077 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(page.getTotalPages()).isEqualTo(1) @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 6083 @LENGTH@ 46
------INS MethodInvocation@@assertThat(page.getTotalPages()).isEqualTo(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.getTotalPages()).isEqualTo(1) @AT@ 6083 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:assertThat:[page.getTotalPages()] @TO@ MethodInvocation@@assertThat(page.getTotalPages()).isEqualTo(1) @AT@ 6083 @LENGTH@ 32
------------INS MethodInvocation@@page.getTotalPages() @TO@ MethodInvocation@@MethodName:assertThat:[page.getTotalPages()] @AT@ 6094 @LENGTH@ 20
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.getTotalPages() @AT@ 6094 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getTotalPages:[] @TO@ MethodInvocation@@page.getTotalPages() @AT@ 6099 @LENGTH@ 15
---------INS SimpleName@@MethodName:isEqualTo:[1] @TO@ MethodInvocation@@assertThat(page.getTotalPages()).isEqualTo(1) @AT@ 6116 @LENGTH@ 12
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:isEqualTo:[1] @AT@ 6126 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(page.hasPrevious()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 6132 @LENGTH@ 41
------INS MethodInvocation@@assertThat(page.hasPrevious()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.hasPrevious()).isFalse() @AT@ 6132 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:assertThat:[page.hasPrevious()] @TO@ MethodInvocation@@assertThat(page.hasPrevious()).isFalse() @AT@ 6132 @LENGTH@ 30
------------INS MethodInvocation@@page.hasPrevious() @TO@ MethodInvocation@@MethodName:assertThat:[page.hasPrevious()] @AT@ 6143 @LENGTH@ 18
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.hasPrevious() @AT@ 6143 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasPrevious:[] @TO@ MethodInvocation@@page.hasPrevious() @AT@ 6148 @LENGTH@ 13
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(page.hasPrevious()).isFalse() @AT@ 6163 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(page.hasNext()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:usesContentLengthForSizeIfNoPageableGiven,  @AT@ 6176 @LENGTH@ 37
------INS MethodInvocation@@assertThat(page.hasNext()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(page.hasNext()).isFalse() @AT@ 6176 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:assertThat:[page.hasNext()] @TO@ MethodInvocation@@assertThat(page.hasNext()).isFalse() @AT@ 6176 @LENGTH@ 26
------------INS MethodInvocation@@page.hasNext() @TO@ MethodInvocation@@MethodName:assertThat:[page.hasNext()] @AT@ 6187 @LENGTH@ 14
---------------INS SimpleName@@Name:page @TO@ MethodInvocation@@page.hasNext() @AT@ 6187 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@page.hasNext() @AT@ 6192 @LENGTH@ 9
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(page.hasNext()).isFalse() @AT@ 6203 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:withJwkSetUri(jwkSetUri).jwsAlgorithm(jwsAlgorithm).build() @TO@ MethodInvocation:withJwkSetUri(jwkSetUri).jwsAlgorithm((SignatureAlgorithm)jwsAlgorithm).build() @AT@ 8107 @LENGTH@ 67
---UPD MethodInvocation@@withJwkSetUri(jwkSetUri).jwsAlgorithm(jwsAlgorithm).build() @TO@ withJwkSetUri(jwkSetUri).jwsAlgorithm((SignatureAlgorithm)jwsAlgorithm).build() @AT@ 8114 @LENGTH@ 59
------UPD MethodInvocation@@MethodName:jwsAlgorithm:[jwsAlgorithm] @TO@ MethodName:jwsAlgorithm:[(SignatureAlgorithm)jwsAlgorithm] @AT@ 8114 @LENGTH@ 51
---------INS CastExpression@@(SignatureAlgorithm)jwsAlgorithm @TO@ MethodInvocation@@MethodName:jwsAlgorithm:[jwsAlgorithm] @AT@ 8152 @LENGTH@ 33
------------INS SimpleType@@SignatureAlgorithm @TO@ CastExpression@@(SignatureAlgorithm)jwsAlgorithm @AT@ 8153 @LENGTH@ 18
------------INS SimpleName@@jwsAlgorithm @TO@ CastExpression@@(SignatureAlgorithm)jwsAlgorithm @AT@ 8173 @LENGTH@ 12
---------DEL SimpleName@@jwsAlgorithm @AT@ 8152 @LENGTH@ 12


INS IfStatement@@if (keyword.isSample() && convertedValue instanceof Document) {  return (Document)convertedValue;} @TO@ MethodDeclaration@@protected, Document, MethodName:getMappedKeyword, Field property, Keyword keyword,  @AT@ 10795 @LENGTH@ 103
---INS InfixExpression@@keyword.isSample() && convertedValue instanceof Document @TO@ IfStatement@@if (keyword.isSample() && convertedValue instanceof Document) {  return (Document)convertedValue;} @AT@ 10798 @LENGTH@ 56
------INS MethodInvocation@@keyword.isSample() @TO@ InfixExpression@@keyword.isSample() && convertedValue instanceof Document @AT@ 10798 @LENGTH@ 18
---------INS SimpleName@@Name:keyword @TO@ MethodInvocation@@keyword.isSample() @AT@ 10798 @LENGTH@ 7
---------INS SimpleName@@MethodName:isSample:[] @TO@ MethodInvocation@@keyword.isSample() @AT@ 10806 @LENGTH@ 10
------INS Operator@@&& @TO@ InfixExpression@@keyword.isSample() && convertedValue instanceof Document @AT@ 10816 @LENGTH@ 2
------INS InstanceofExpression@@convertedValue instanceof Document @TO@ InfixExpression@@keyword.isSample() && convertedValue instanceof Document @AT@ 10820 @LENGTH@ 34
---------INS SimpleName@@convertedValue @TO@ InstanceofExpression@@convertedValue instanceof Document @AT@ 10820 @LENGTH@ 14
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@convertedValue instanceof Document @AT@ 10835 @LENGTH@ 10
---------INS SimpleType@@Document @TO@ InstanceofExpression@@convertedValue instanceof Document @AT@ 10846 @LENGTH@ 8
---INS Block@@ThenBody:{  return (Document)convertedValue;} @TO@ IfStatement@@if (keyword.isSample() && convertedValue instanceof Document) {  return (Document)convertedValue;} @AT@ 10856 @LENGTH@ 42
------INS ReturnStatement@@CastExpression:(Document)convertedValue @TO@ Block@@ThenBody:{  return (Document)convertedValue;} @AT@ 10861 @LENGTH@ 33
---------INS CastExpression@@(Document)convertedValue @TO@ ReturnStatement@@CastExpression:(Document)convertedValue @AT@ 10868 @LENGTH@ 25
------------INS SimpleType@@Document @TO@ CastExpression@@(Document)convertedValue @AT@ 10869 @LENGTH@ 8
------------INS SimpleName@@convertedValue @TO@ CastExpression@@(Document)convertedValue @AT@ 10879 @LENGTH@ 14


UPD EnumDeclaration@@[public, static]JooqOperation,  @TO@ [static]JooqOperation,  @AT@ 33702 @LENGTH@ 70
---DEL Modifier@@public @AT@ 33702 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(discoverer.getParameterNames(Impl.class.getConstructor(Long.class))).isNull() @TO@ MethodInvocation:assertThat(discoverer.getParameterNames(Impl.class.getDeclaredConstructor(Long.class))).isNull() @AT@ 2831 @LENGTH@ 94
---UPD MethodInvocation@@assertThat(discoverer.getParameterNames(Impl.class.getConstructor(Long.class))).isNull() @TO@ assertThat(discoverer.getParameterNames(Impl.class.getDeclaredConstructor(Long.class))).isNull() @AT@ 2831 @LENGTH@ 93
------UPD MethodInvocation@@MethodName:assertThat:[discoverer.getParameterNames(Impl.class.getConstructor(Long.class))] @TO@ MethodName:assertThat:[discoverer.getParameterNames(Impl.class.getDeclaredConstructor(Long.class))] @AT@ 2831 @LENGTH@ 79
---------UPD MethodInvocation@@discoverer.getParameterNames(Impl.class.getConstructor(Long.class)) @TO@ discoverer.getParameterNames(Impl.class.getDeclaredConstructor(Long.class)) @AT@ 2842 @LENGTH@ 67
------------UPD SimpleName@@MethodName:getParameterNames:[Impl.class.getConstructor(Long.class)] @TO@ MethodName:getParameterNames:[Impl.class.getDeclaredConstructor(Long.class)] @AT@ 2853 @LENGTH@ 56
---------------UPD MethodInvocation@@Impl.class.getConstructor(Long.class) @TO@ Impl.class.getDeclaredConstructor(Long.class) @AT@ 2871 @LENGTH@ 37
------------------UPD SimpleName@@MethodName:getConstructor:[Long.class] @TO@ MethodName:getDeclaredConstructor:[Long.class] @AT@ 2882 @LENGTH@ 26


UPD MethodDeclaration@@void, MethodName:onExpiredSessionDetected, SessionInformationExpiredEvent event, IOException,  @TO@ void, MethodName:onExpiredSessionDetected, SessionInformationExpiredEvent event, IOException, ServletException,  @AT@ 981 @LENGTH@ 85
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@void, MethodName:onExpiredSessionDetected, SessionInformationExpiredEvent event, IOException,  @AT@ 1106 @LENGTH@ 16


UPD VariableDeclarationStatement@@String out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @AT@ 3274 @LENGTH@ 157
---UPD VariableDeclarationFragment@@out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @AT@ 3281 @LENGTH@ 149
------UPD MethodInvocation@@template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @AT@ 3287 @LENGTH@ 143
---------UPD SimpleName@@MethodName:requestBody:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @AT@ 3296 @LENGTH@ 134
------------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 3308 @LENGTH@ 92
---------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 3308 @LENGTH@ 25


UPD VariableDeclarationStatement@@NSQConsumer consumer=new NSQConsumer(lookup,"test","testconsumer",(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
); @TO@ NSQConsumer consumer=new NSQConsumer(lookup,"test","testconsumer",message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
); @AT@ 1717 @LENGTH@ 277
---UPD VariableDeclarationFragment@@consumer=new NSQConsumer(lookup,"test","testconsumer",(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
) @TO@ consumer=new NSQConsumer(lookup,"test","testconsumer",message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
) @AT@ 1729 @LENGTH@ 264
------UPD ClassInstanceCreation@@NSQConsumer[lookup, "test", "testconsumer", (message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
] @TO@ NSQConsumer[lookup, "test", "testconsumer", message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
] @AT@ 1740 @LENGTH@ 253
---------UPD LambdaExpression@@(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
 @TO@ message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(new String(message.getMessage()).equals(TEST_MESSAGE));
}
 @AT@ 1788 @LENGTH@ 204


UPD EnumDeclaration@@[public, static]DataFormat,  @TO@ [static]DataFormat,  @AT@ 78328 @LENGTH@ 87
---DEL Modifier@@public @AT@ 78328 @LENGTH@ 6


INS MethodDeclaration@@public, Access, MethodName:anyRequest,  @TO@ TypeDeclaration@@[public]AuthorizePayloadsSpec,  @AT@ 10042 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, Access, MethodName:anyRequest,  @AT@ 10042 @LENGTH@ 6
---INS SimpleType@@Access @TO@ MethodDeclaration@@public, Access, MethodName:anyRequest,  @AT@ 10049 @LENGTH@ 6
---INS SimpleName@@MethodName:anyRequest @TO@ MethodDeclaration@@public, Access, MethodName:anyRequest,  @AT@ 10056 @LENGTH@ 10
---INS ReturnStatement@@MethodInvocation:matcher(PayloadExchangeMatchers.anyRequest()) @TO@ MethodDeclaration@@public, Access, MethodName:anyRequest,  @AT@ 10074 @LENGTH@ 53
------INS MethodInvocation@@matcher(PayloadExchangeMatchers.anyRequest()) @TO@ ReturnStatement@@MethodInvocation:matcher(PayloadExchangeMatchers.anyRequest()) @AT@ 10081 @LENGTH@ 45
---------INS SimpleName@@MethodName:matcher:[PayloadExchangeMatchers.anyRequest()] @TO@ MethodInvocation@@matcher(PayloadExchangeMatchers.anyRequest()) @AT@ 10081 @LENGTH@ 45
------------INS MethodInvocation@@PayloadExchangeMatchers.anyRequest() @TO@ SimpleName@@MethodName:matcher:[PayloadExchangeMatchers.anyRequest()] @AT@ 10089 @LENGTH@ 36
---------------INS SimpleName@@Name:PayloadExchangeMatchers @TO@ MethodInvocation@@PayloadExchangeMatchers.anyRequest() @AT@ 10089 @LENGTH@ 23
---------------INS SimpleName@@MethodName:anyRequest:[] @TO@ MethodInvocation@@PayloadExchangeMatchers.anyRequest() @AT@ 10113 @LENGTH@ 12


UPD ReturnStatement@@MethodInvocation:Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()) @TO@ MethodInvocation:Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()) @AT@ 5842 @LENGTH@ 264
---UPD MethodInvocation@@Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()) @TO@ Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()) @AT@ 5849 @LENGTH@ 256
------UPD SimpleName@@MethodName:map:[attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()] @TO@ MethodName:map:[attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()] @AT@ 5932 @LENGTH@ 173
---------UPD LambdaExpression@@attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attrs).build() @TO@ attrs -> OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build() @AT@ 5936 @LENGTH@ 168
------------UPD MethodInvocation@@OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attrs).build() @TO@ OAuth2AuthorizationContext.withClientRegistration(clientRegistration).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build() @AT@ 5945 @LENGTH@ 159
---------------UPD MethodInvocation@@MethodName:attributes:[attrs] @TO@ MethodName:attributes:[attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
] @AT@ 5945 @LENGTH@ 144
------------------DEL SimpleName@@attrs @AT@ 6083 @LENGTH@ 5
------------------INS LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @TO@ MethodInvocation@@MethodName:attributes:[attrs] @AT@ 6239 @LENGTH@ 112
---------------------INS VariableDeclarationFragment@@attributes @TO@ LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @AT@ 6239 @LENGTH@ 10
------------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 6239 @LENGTH@ 10
---------------------INS IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @TO@ LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @AT@ 6262 @LENGTH@ 81
------------------------INS PrefixExpression@@!CollectionUtils.isEmpty(attrs) @TO@ IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @AT@ 6266 @LENGTH@ 31
---------------------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(attrs) @AT@ 6266 @LENGTH@ 1
---------------------------INS MethodInvocation@@CollectionUtils.isEmpty(attrs) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(attrs) @AT@ 6267 @LENGTH@ 30
------------------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(attrs) @AT@ 6267 @LENGTH@ 15
------------------------------INS SimpleName@@MethodName:isEmpty:[attrs] @TO@ MethodInvocation@@CollectionUtils.isEmpty(attrs) @AT@ 6283 @LENGTH@ 14
---------------------------------INS SimpleName@@attrs @TO@ SimpleName@@MethodName:isEmpty:[attrs] @AT@ 6291 @LENGTH@ 5
------------------------INS Block@@ThenBody:{  attributes.putAll(attrs);} @TO@ IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @AT@ 6299 @LENGTH@ 44
---------------------------INS ExpressionStatement@@MethodInvocation:attributes.putAll(attrs) @TO@ Block@@ThenBody:{  attributes.putAll(attrs);} @AT@ 6309 @LENGTH@ 25
------------------------------INS MethodInvocation@@attributes.putAll(attrs) @TO@ ExpressionStatement@@MethodInvocation:attributes.putAll(attrs) @AT@ 6309 @LENGTH@ 24
---------------------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.putAll(attrs) @AT@ 6309 @LENGTH@ 10
---------------------------------INS SimpleName@@MethodName:putAll:[attrs] @TO@ MethodInvocation@@attributes.putAll(attrs) @AT@ 6320 @LENGTH@ 13
------------------------------------INS SimpleName@@attrs @TO@ SimpleName@@MethodName:putAll:[attrs] @AT@ 6327 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedBeanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedBeanEndpointBuilder, [EndpointProducerBuilder] @AT@ 4051 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 4058 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:OAuth2IntrospectionReactiveAuthenticationManager, ReactiveOAuth2TokenIntrospectionClient introspectionClient,  @TO@ public, voidMethodName:OAuth2IntrospectionReactiveAuthenticationManager, ReactiveOpaqueTokenIntrospector introspectionClient,  @AT@ 3814 @LENGTH@ 247
---UPD SingleVariableDeclaration@@ReactiveOAuth2TokenIntrospectionClient introspectionClient @TO@ ReactiveOpaqueTokenIntrospector introspectionClient @AT@ 3870 @LENGTH@ 58
------UPD SimpleType@@ReactiveOAuth2TokenIntrospectionClient @TO@ ReactiveOpaqueTokenIntrospector @AT@ 3870 @LENGTH@ 38


INS MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @TO@ TypeDeclaration@@[@Configuration, @EnableMongoRepositories(considerNestedRepositories=true), static]Config, AbstractMongoClientConfiguration @AT@ 2103 @LENGTH@ 60
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2103 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2113 @LENGTH@ 7
---INS SimpleName@@MethodName:autoIndexCreation @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2121 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2146 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2153 @LENGTH@ 5


UPD TypeDeclaration@@[public]JdbcClientDetailsServiceBuilder, ClientDetailsServiceBuilder<JdbcClientDetailsServiceBuilder> @TO@ [@Deprecated, public]JdbcClientDetailsServiceBuilder, ClientDetailsServiceBuilder<JdbcClientDetailsServiceBuilder> @AT@ 1143 @LENGTH@ 1290
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcClientDetailsServiceBuilder, ClientDetailsServiceBuilder<JdbcClientDetailsServiceBuilder> @AT@ 1321 @LENGTH@ 11


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FtpProducerExpressionTest, FtpServerTestSupport @AT@ 1207 @LENGTH@ 120


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42653 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42653 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2173 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2173 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2173 @LENGTH@ 86
---------INS MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 2184 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 42
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 2210 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2238 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 2247 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]NetWeaverEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]NetWeaverEndpointBuilder, [EndpointProducerBuilder] @AT@ 1443 @LENGTH@ 3411
---DEL Modifier@@static @AT@ 1450 @LENGTH@ 6


UPD TypeDeclaration@@[public]UserAuthorizationProcessingFilter, AbstractAuthenticationProcessingFilter @TO@ [@Deprecated, public]UserAuthorizationProcessingFilter, AbstractAuthenticationProcessingFilter @AT@ 2088 @LENGTH@ 4162
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UserAuthorizationProcessingFilter, AbstractAuthenticationProcessingFilter @AT@ 2309 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"))) @TO@ MethodInvocation:resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)) @AT@ 4488 @LENGTH@ 88
---UPD MethodInvocation@@resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"))) @TO@ resp.getWriter().write(FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)) @AT@ 4488 @LENGTH@ 87
------UPD SimpleName@@MethodName:write:[FileUtils.readFileToString(new File("src/test/data/feed.atom"))] @TO@ MethodName:write:[FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8)] @AT@ 4505 @LENGTH@ 70
---------UPD MethodInvocation@@FileUtils.readFileToString(new File("src/test/data/feed.atom")) @TO@ FileUtils.readFileToString(new File("src/test/data/feed.atom"),Charsets.UTF_8) @AT@ 4511 @LENGTH@ 63
------------UPD SimpleName@@MethodName:readFileToString:[new File("src/test/data/feed.atom")] @TO@ MethodName:readFileToString:[new File("src/test/data/feed.atom"), Charsets.UTF_8] @AT@ 4521 @LENGTH@ 53
---------------INS QualifiedName@@Charsets.UTF_8 @TO@ SimpleName@@MethodName:readFileToString:[new File("src/test/data/feed.atom")] @AT@ 4617 @LENGTH@ 14
------------------INS SimpleName@@Charsets @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 4617 @LENGTH@ 8
------------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@Charsets.UTF_8 @AT@ 4626 @LENGTH@ 5


UPD TypeDeclaration@@[public]FormOAuth2AccessTokenMessageConverter, AbstractHttpMessageConverter<OAuth2AccessToken> @TO@ [@Deprecated, public]FormOAuth2AccessTokenMessageConverter, AbstractHttpMessageConverter<OAuth2AccessToken> @AT@ 1550 @LENGTH@ 1116
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]FormOAuth2AccessTokenMessageConverter, AbstractHttpMessageConverter<OAuth2AccessToken> @AT@ 1727 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, OAuth2IntrospectionAuthenticationToken, [INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),new OAuth2TokenAttributes(JWT_CLAIMS),Collections.emptyList())] @TO@ private, static, final, BearerTokenAuthentication, [INTROSPECTION_AUTHENTICATION_TOKEN=new BearerTokenAuthentication(new DefaultOAuth2AuthenticatedPrincipal(JWT_CLAIMS,Collections.emptyList()),noScopes(),Collections.emptyList())] @AT@ 9252 @LENGTH@ 219
---UPD SimpleType@@OAuth2IntrospectionAuthenticationToken @TO@ BearerTokenAuthentication @AT@ 9273 @LENGTH@ 38
---UPD VariableDeclarationFragment@@INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),new OAuth2TokenAttributes(JWT_CLAIMS),Collections.emptyList()) @TO@ INTROSPECTION_AUTHENTICATION_TOKEN=new BearerTokenAuthentication(new DefaultOAuth2AuthenticatedPrincipal(JWT_CLAIMS,Collections.emptyList()),noScopes(),Collections.emptyList()) @AT@ 9312 @LENGTH@ 158
------UPD ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[noScopes(), new OAuth2TokenAttributes(JWT_CLAIMS), Collections.emptyList()] @TO@ BearerTokenAuthentication[new DefaultOAuth2AuthenticatedPrincipal(JWT_CLAIMS,Collections.emptyList()), noScopes(), Collections.emptyList()] @AT@ 9352 @LENGTH@ 118
---------UPD SimpleType@@OAuth2IntrospectionAuthenticationToken @TO@ BearerTokenAuthentication @AT@ 9356 @LENGTH@ 38
---------DEL MethodInvocation@@MethodName:noScopes:[] @AT@ 9395 @LENGTH@ 10
---------UPD ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @TO@ DefaultOAuth2AuthenticatedPrincipal[JWT_CLAIMS, Collections.emptyList()] @AT@ 9407 @LENGTH@ 37
------------UPD SimpleType@@OAuth2TokenAttributes @TO@ DefaultOAuth2AuthenticatedPrincipal @AT@ 9411 @LENGTH@ 21
------------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @AT@ 9422 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 9422 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 9434 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:noScopes:[] @TO@ ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[noScopes(), new OAuth2TokenAttributes(JWT_CLAIMS), Collections.emptyList()] @AT@ 9453 @LENGTH@ 10


UPD MethodDeclaration@@void, MethodName:usingAnotherDatabaseExplizitTx,  @TO@ void, MethodName:usingAnotherDatabaseExplicitTx,  @AT@ 4540 @LENGTH@ 343
---UPD SimpleName@@MethodName:usingAnotherDatabaseExplizitTx @TO@ MethodName:usingAnotherDatabaseExplicitTx @AT@ 4540 @LENGTH@ 30


UPD TypeDeclaration@@[public]AlgorithmMetadata,  @TO@ [@Deprecated, public]AlgorithmMetadata,  @AT@ 682 @LENGTH@ 109
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AlgorithmMetadata,  @AT@ 860 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]MyBatisBeanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MyBatisBeanEndpointBuilder, [EndpointProducerBuilder] @AT@ 1434 @LENGTH@ 999
---DEL Modifier@@static @AT@ 1441 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:contentStream.drawString(currentLine) @TO@ MethodInvocation:contentStream.showText(currentLine) @AT@ 2968 @LENGTH@ 38
---UPD MethodInvocation@@contentStream.drawString(currentLine) @TO@ contentStream.showText(currentLine) @AT@ 2968 @LENGTH@ 37
------UPD SimpleName@@MethodName:drawString:[currentLine] @TO@ MethodName:showText:[currentLine] @AT@ 2982 @LENGTH@ 23


UPD MethodDeclaration@@Map<String,java.util.Optional<Integer>>, MethodName:entityAnnotatedCustomNamedProcedurePlus1IOoptional, @Param("arg") Integer arg,  @TO@ Map<String,Integer>, MethodName:entityAnnotatedCustomNamedProcedurePlus1IOoptional, @Param("arg") Integer arg,  @AT@ 12083 @LENGTH@ 78
---UPD ParameterizedType@@Map<String,java.util.Optional<Integer>> @TO@ Map<String,Integer> @AT@ 12042 @LENGTH@ 40
------DEL ParameterizedType@@java.util.Optional<Integer> @AT@ 12054 @LENGTH@ 27
---------DEL SimpleType@@java.util.Optional @AT@ 12054 @LENGTH@ 18
------MOV SimpleType@@Integer @TO@ ParameterizedType@@Map<String,java.util.Optional<Integer>> @AT@ 12073 @LENGTH@ 7


UPD TypeDeclaration@@[public]ResourceServerTokenServices,  @TO@ [@Deprecated, public]ResourceServerTokenServices,  @AT@ 355 @LENGTH@ 692
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceServerTokenServices,  @AT@ 541 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]IgniteIdGenEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IgniteIdGenEndpointBuilder, [EndpointProducerBuilder] @AT@ 1501 @LENGTH@ 2593
---DEL Modifier@@static @AT@ 1508 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedMicrometerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMicrometerEndpointBuilder, [EndpointProducerBuilder] @AT@ 4753 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 4760 @LENGTH@ 6


UPD MethodDeclaration@@protected, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @TO@ private, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @AT@ 7137 @LENGTH@ 677
---UPD Modifier@@protected @TO@ private @AT@ 7137 @LENGTH@ 9


INS TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @TO@ TypeDeclaration@@[public]AuthenticationConfigurationTests,  @AT@ 22332 @LENGTH@ 131
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22332 @LENGTH@ 40
---INS Modifier@@static @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22374 @LENGTH@ 6
---INS SimpleName@@ClassName:AuthenticationConfigurationSubclass @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22387 @LENGTH@ 35
---INS SimpleType@@AuthenticationConfiguration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22431 @LENGTH@ 27


UPD TypeDeclaration@@[public]CoreOAuthSignatureMethodFactory, [OAuthSignatureMethodFactory] @TO@ [@Deprecated, public]CoreOAuthSignatureMethodFactory, [OAuthSignatureMethodFactory] @AT@ 1285 @LENGTH@ 5643
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CoreOAuthSignatureMethodFactory, [OAuthSignatureMethodFactory] @AT@ 1506 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThat(discoverer.getParameterNames(Impl.class.getConstructor(String.class))).isEqualTo(new String[]{"id"}) @TO@ MethodInvocation:assertThat(discoverer.getParameterNames(Impl.class.getDeclaredConstructor(String.class))).isEqualTo(new String[]{"id"}) @AT@ 2622 @LENGTH@ 120
---UPD MethodInvocation@@assertThat(discoverer.getParameterNames(Impl.class.getConstructor(String.class))).isEqualTo(new String[]{"id"}) @TO@ assertThat(discoverer.getParameterNames(Impl.class.getDeclaredConstructor(String.class))).isEqualTo(new String[]{"id"}) @AT@ 2622 @LENGTH@ 119
------UPD MethodInvocation@@MethodName:assertThat:[discoverer.getParameterNames(Impl.class.getConstructor(String.class))] @TO@ MethodName:assertThat:[discoverer.getParameterNames(Impl.class.getDeclaredConstructor(String.class))] @AT@ 2622 @LENGTH@ 81
---------UPD MethodInvocation@@discoverer.getParameterNames(Impl.class.getConstructor(String.class)) @TO@ discoverer.getParameterNames(Impl.class.getDeclaredConstructor(String.class)) @AT@ 2633 @LENGTH@ 69
------------UPD SimpleName@@MethodName:getParameterNames:[Impl.class.getConstructor(String.class)] @TO@ MethodName:getParameterNames:[Impl.class.getDeclaredConstructor(String.class)] @AT@ 2644 @LENGTH@ 58
---------------UPD MethodInvocation@@Impl.class.getConstructor(String.class) @TO@ Impl.class.getDeclaredConstructor(String.class) @AT@ 2662 @LENGTH@ 39
------------------UPD SimpleName@@MethodName:getConstructor:[String.class] @TO@ MethodName:getDeclaredConstructor:[String.class] @AT@ 2673 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]DnsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DnsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1395 @LENGTH@ 895
---DEL Modifier@@static @AT@ 1402 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedExecEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedExecEndpointBuilder, [EndpointProducerBuilder] @AT@ 7286 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 7293 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:configureGlobal, AuthenticationManagerBuilder auth, Exception,  @TO@ public, UserDetailsService, MethodName:userDetailsService,  @AT@ 1737 @LENGTH@ 222
---DEL PrimitiveType@@void @AT@ 1744 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureGlobal @AT@ 1749 @LENGTH@ 15
---DEL SingleVariableDeclaration@@AuthenticationManagerBuilder auth @AT@ 1765 @LENGTH@ 33
------DEL SimpleType@@AuthenticationManagerBuilder @AT@ 1765 @LENGTH@ 28
------DEL SimpleName@@auth @AT@ 1794 @LENGTH@ 4
---DEL SimpleType@@Exception @AT@ 1807 @LENGTH@ 9
---INS SimpleType@@UserDetailsService @TO@ MethodDeclaration@@public, void, MethodName:configureGlobal, AuthenticationManagerBuilder auth, Exception,  @AT@ 1817 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:auth.inMemoryAuthentication().withUser(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER")) @AT@ 1821 @LENGTH@ 135
------DEL MethodInvocation@@auth.inMemoryAuthentication().withUser(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER")) @AT@ 1821 @LENGTH@ 134
---------DEL MethodInvocation@@MethodName:inMemoryAuthentication:[] @AT@ 1821 @LENGTH@ 33
---------DEL SimpleName@@Name:auth @AT@ 1821 @LENGTH@ 4
---------DEL SimpleName@@MethodName:withUser:[User.withDefaultPasswordEncoder().username("user").password("password").roles("USER")] @AT@ 1860 @LENGTH@ 95
------------DEL MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER") @AT@ 1869 @LENGTH@ 85
---------------DEL SimpleName@@MethodName:roles:["USER"] @AT@ 1941 @LENGTH@ 13
------------------DEL StringLiteral@@"USER" @AT@ 1947 @LENGTH@ 6
---INS SimpleName@@MethodName:userDetailsService @TO@ MethodDeclaration@@public, void, MethodName:configureGlobal, AuthenticationManagerBuilder auth, Exception,  @AT@ 1836 @LENGTH@ 18
---INS VariableDeclarationStatement@@UserDetails userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build(); @TO@ MethodDeclaration@@public, void, MethodName:configureGlobal, AuthenticationManagerBuilder auth, Exception,  @AT@ 1861 @LENGTH@ 140
------INS SimpleType@@UserDetails @TO@ VariableDeclarationStatement@@UserDetails userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build(); @AT@ 1861 @LENGTH@ 11
------INS VariableDeclarationFragment@@userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @TO@ VariableDeclarationStatement@@UserDetails userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build(); @AT@ 1873 @LENGTH@ 127
---------INS SimpleName@@userDetails @TO@ VariableDeclarationFragment@@userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1873 @LENGTH@ 11
---------INS MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @TO@ VariableDeclarationFragment@@userDetails=User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1887 @LENGTH@ 113
------------MOV MethodInvocation@@MethodName:password:["password"] @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1869 @LENGTH@ 71
------------MOV MethodInvocation@@MethodName:username:["user"] @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1869 @LENGTH@ 50
------------MOV MethodInvocation@@MethodName:withDefaultPasswordEncoder:[] @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1869 @LENGTH@ 33
------------MOV SimpleName@@Name:User @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1869 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:roles:["USER"] @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1887 @LENGTH@ 100
---------------INS StringLiteral@@"USER" @TO@ MethodInvocation@@MethodName:roles:["USER"] @AT@ 1980 @LENGTH@ 6
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build() @AT@ 1993 @LENGTH@ 7
---INS ReturnStatement@@ClassInstanceCreation:new InMemoryUserDetailsManager(userDetails) @TO@ MethodDeclaration@@public, void, MethodName:configureGlobal, AuthenticationManagerBuilder auth, Exception,  @AT@ 2004 @LENGTH@ 51
------INS ClassInstanceCreation@@InMemoryUserDetailsManager[userDetails] @TO@ ReturnStatement@@ClassInstanceCreation:new InMemoryUserDetailsManager(userDetails) @AT@ 2011 @LENGTH@ 43
---------INS New@@new @TO@ ClassInstanceCreation@@InMemoryUserDetailsManager[userDetails] @AT@ 2011 @LENGTH@ 3
---------INS SimpleType@@InMemoryUserDetailsManager @TO@ ClassInstanceCreation@@InMemoryUserDetailsManager[userDetails] @AT@ 2015 @LENGTH@ 26
---------INS SimpleName@@userDetails @TO@ ClassInstanceCreation@@InMemoryUserDetailsManager[userDetails] @AT@ 2042 @LENGTH@ 11


UPD Block@@ThenBody:{  deliveryTag=message.getMessageProperties().getDeliveryTag();  for (  MessagePostProcessor processor : getAfterReceivePostProcessors()) {    message=processor.postProcessMessage(message);    if (message == null) {      channel.basicAck(deliveryTag,false);      if (this.logger.isDebugEnabled()) {        this.logger.debug("Message Post Processor returned 'null', discarding message " + message);      }      break;    }  }} @TO@ ThenBody:{  Message original=message;  deliveryTag=message.getMessageProperties().getDeliveryTag();  for (  MessagePostProcessor processor : getAfterReceivePostProcessors()) {    message=processor.postProcessMessage(message);    if (message == null) {      channel.basicAck(deliveryTag,false);      if (this.logger.isDebugEnabled()) {        this.logger.debug("Message Post Processor returned 'null', discarding message " + original);      }      break;    }  }} @AT@ 33869 @LENGTH@ 474
---INS VariableDeclarationStatement@@Message original=message; @TO@ Block@@ThenBody:{  deliveryTag=message.getMessageProperties().getDeliveryTag();  for (  MessagePostProcessor processor : getAfterReceivePostProcessors()) {    message=processor.postProcessMessage(message);    if (message == null) {      channel.basicAck(deliveryTag,false);      if (this.logger.isDebugEnabled()) {        this.logger.debug("Message Post Processor returned 'null', discarding message " + message);      }      break;    }  }} @AT@ 33876 @LENGTH@ 27
------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message original=message; @AT@ 33876 @LENGTH@ 7
------INS VariableDeclarationFragment@@original=message @TO@ VariableDeclarationStatement@@Message original=message; @AT@ 33884 @LENGTH@ 18
---------INS SimpleName@@original @TO@ VariableDeclarationFragment@@original=message @AT@ 33884 @LENGTH@ 8
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@original=message @AT@ 33895 @LENGTH@ 7
---UPD EnhancedForStatement@@for (MessagePostProcessor processor : getAfterReceivePostProcessors()) {  message=processor.postProcessMessage(message);  if (message == null) {    channel.basicAck(deliveryTag,false);    if (this.logger.isDebugEnabled()) {      this.logger.debug("Message Post Processor returned 'null', discarding message " + message);    }    break;  }} @TO@ for (MessagePostProcessor processor : getAfterReceivePostProcessors()) {  message=processor.postProcessMessage(message);  if (message == null) {    channel.basicAck(deliveryTag,false);    if (this.logger.isDebugEnabled()) {      this.logger.debug("Message Post Processor returned 'null', discarding message " + original);    }    break;  }} @AT@ 33944 @LENGTH@ 393
------UPD IfStatement@@if (message == null) {  channel.basicAck(deliveryTag,false);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Message Post Processor returned 'null', discarding message " + message);  }  break;} @TO@ if (message == null) {  channel.basicAck(deliveryTag,false);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Message Post Processor returned 'null', discarding message " + original);  }  break;} @AT@ 34078 @LENGTH@ 252
---------UPD Block@@ThenBody:{  channel.basicAck(deliveryTag,false);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Message Post Processor returned 'null', discarding message " + message);  }  break;} @TO@ ThenBody:{  channel.basicAck(deliveryTag,false);  if (this.logger.isDebugEnabled()) {    this.logger.debug("Message Post Processor returned 'null', discarding message " + original);  }  break;} @AT@ 34099 @LENGTH@ 231
------------UPD IfStatement@@if (this.logger.isDebugEnabled()) {  this.logger.debug("Message Post Processor returned 'null', discarding message " + message);} @TO@ if (this.logger.isDebugEnabled()) {  this.logger.debug("Message Post Processor returned 'null', discarding message " + original);} @AT@ 34153 @LENGTH@ 155
---------------UPD Block@@ThenBody:{  this.logger.debug("Message Post Processor returned 'null', discarding message " + message);} @TO@ ThenBody:{  this.logger.debug("Message Post Processor returned 'null', discarding message " + original);} @AT@ 34187 @LENGTH@ 121
------------------UPD ExpressionStatement@@MethodInvocation:this.logger.debug("Message Post Processor returned 'null', discarding message " + message) @TO@ MethodInvocation:this.logger.debug("Message Post Processor returned 'null', discarding message " + original) @AT@ 34197 @LENGTH@ 102
---------------------UPD MethodInvocation@@this.logger.debug("Message Post Processor returned 'null', discarding message " + message) @TO@ this.logger.debug("Message Post Processor returned 'null', discarding message " + original) @AT@ 34197 @LENGTH@ 101
------------------------UPD SimpleName@@MethodName:debug:["Message Post Processor returned 'null', discarding message " + message] @TO@ MethodName:debug:["Message Post Processor returned 'null', discarding message " + original] @AT@ 34220 @LENGTH@ 78
---------------------------UPD InfixExpression@@"Message Post Processor returned 'null', discarding message " + message @TO@ "Message Post Processor returned 'null', discarding message " + original @AT@ 34226 @LENGTH@ 71
------------------------------UPD SimpleName@@message @TO@ original @AT@ 34290 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]AdvancedDdbStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedDdbStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 3773 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 3780 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]NagiosEncryptionMethod,  @TO@ [static]NagiosEncryptionMethod,  @AT@ 9164 @LENGTH@ 77
---DEL Modifier@@public @AT@ 9164 @LENGTH@ 6


UPD TypeDeclaration@@[public]JwkException, OAuth2Exception @TO@ [@Deprecated, public]JwkException, OAuth2Exception @AT@ 866 @LENGTH@ 955
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwkException, OAuth2Exception @AT@ 1044 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(mongoDbFactory()) @TO@ MethodDeclaration@@public, MappingMongoConverter, MethodName:mappingMongoConverter, Exception,  @AT@ 4057 @LENGTH@ 53
---INS MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4057 @LENGTH@ 52
------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4057 @LENGTH@ 9
------INS SimpleName@@MethodName:setCodecRegistryProvider:[mongoDbFactory()] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4067 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:mongoDbFactory:[] @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[mongoDbFactory()] @AT@ 4092 @LENGTH@ 16


UPD TypeDeclaration@@[public]JsonDateSerializer, JsonSerializer<Date> @TO@ [@Deprecated, public]JsonDateSerializer, JsonSerializer<Date> @AT@ 1119 @LENGTH@ 442
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JsonDateSerializer, JsonSerializer<Date> @AT@ 1296 @LENGTH@ 11


UPD VariableDeclarationStatement@@Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ Task<?> currTask=(Task<?>)nd; @AT@ 3846 @LENGTH@ 74
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3846 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 3875 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 3886 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3887 @LENGTH@ 28


UPD MethodDeclaration@@default, InfluxDbEndpointBuilder, MethodName:influxDb, String path,  @TO@ default, InfluxDbEndpointBuilder, MethodName:influxdb, String path,  @AT@ 6549 @LENGTH@ 386
---UPD SimpleName@@MethodName:influxDb @TO@ MethodName:influxdb @AT@ 6581 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]AtmosOperation,  @TO@ [static]AtmosOperation,  @AT@ 26586 @LENGTH@ 78
---DEL Modifier@@public @AT@ 26586 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthProviderTokenImpl, [OAuthAccessProviderToken] @TO@ [@Deprecated, public]OAuthProviderTokenImpl, [OAuthAccessProviderToken] @AT@ 792 @LENGTH@ 3498
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProviderTokenImpl, [OAuthAccessProviderToken] @AT@ 1013 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2IntrospectionReactiveAuthenticationManager(getIntrospector()) @TO@ ClassInstanceCreation:new OpaqueTokenReactiveAuthenticationManager(getIntrospector()) @AT@ 74388 @LENGTH@ 79
---UPD ClassInstanceCreation@@OAuth2IntrospectionReactiveAuthenticationManager[getIntrospector()] @TO@ OpaqueTokenReactiveAuthenticationManager[getIntrospector()] @AT@ 74395 @LENGTH@ 71
------UPD SimpleType@@OAuth2IntrospectionReactiveAuthenticationManager @TO@ OpaqueTokenReactiveAuthenticationManager @AT@ 74399 @LENGTH@ 48


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1555 @LENGTH@ 1633
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1562 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1567 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> tasks=new ArrayList<Task<?>>(); @AT@ 2064 @LENGTH@ 89
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2064 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2069 @LENGTH@ 28
------UPD VariableDeclarationFragment@@tasks=new ArrayList<Task<? extends Serializable>>() @TO@ tasks=new ArrayList<Task<?>>() @AT@ 2099 @LENGTH@ 53
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 2107 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 2111 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2121 @LENGTH@ 28


INS IfStatement@@if (containers.size() > 0) {  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} else {  callback.run();} @TO@ MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 9520 @LENGTH@ 472
---INS InfixExpression@@containers.size() > 0 @TO@ IfStatement@@if (containers.size() > 0) {  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} else {  callback.run();} @AT@ 9524 @LENGTH@ 21
------INS MethodInvocation@@containers.size() @TO@ InfixExpression@@containers.size() > 0 @AT@ 9524 @LENGTH@ 17
---------INS SimpleName@@Name:containers @TO@ MethodInvocation@@containers.size() @AT@ 9524 @LENGTH@ 10
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@containers.size() @AT@ 9535 @LENGTH@ 6
------INS Operator@@> @TO@ InfixExpression@@containers.size() > 0 @AT@ 9541 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ InfixExpression@@containers.size() > 0 @AT@ 9544 @LENGTH@ 1
---INS Block@@ThenBody:{  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} @TO@ IfStatement@@if (containers.size() > 0) {  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} else {  callback.run();} @AT@ 9547 @LENGTH@ 413
------MOV VariableDeclarationStatement@@AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback); @TO@ Block@@ThenBody:{  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} @AT@ 9520 @LENGTH@ 95
------MOV EnhancedForStatement@@for (MessageListenerContainer listenerContainer : containers) {  try {    listenerContainer.stop(aggregatingCallback);  } catch (  Exception e) {    if (this.logger.isWarnEnabled()) {      this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);    }  }} @TO@ Block@@ThenBody:{  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} @AT@ 9618 @LENGTH@ 296
---INS Block@@ElseBody:{  callback.run();} @TO@ IfStatement@@if (containers.size() > 0) {  AggregatingCallback aggregatingCallback=new AggregatingCallback(containers.size(),callback);  for (  MessageListenerContainer listenerContainer : containers) {    try {      listenerContainer.stop(aggregatingCallback);    } catch (    Exception e) {      if (this.logger.isWarnEnabled()) {        this.logger.warn("Failed to stop listener container [" + listenerContainer + "]",e);      }    }  }} else {  callback.run();} @AT@ 9968 @LENGTH@ 24
------INS ExpressionStatement@@MethodInvocation:callback.run() @TO@ Block@@ElseBody:{  callback.run();} @AT@ 9973 @LENGTH@ 15
---------INS MethodInvocation@@callback.run() @TO@ ExpressionStatement@@MethodInvocation:callback.run() @AT@ 9973 @LENGTH@ 14
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.run() @AT@ 9973 @LENGTH@ 8
------------INS SimpleName@@MethodName:run:[] @TO@ MethodInvocation@@callback.run() @AT@ 9982 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]EncryptionAlgorithm,  @TO@ [static]EncryptionAlgorithm,  @AT@ 42916 @LENGTH@ 93
---DEL Modifier@@public @AT@ 42916 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthAuthenticationDetails, WebAuthenticationDetails @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuthAuthenticationDetails, WebAuthenticationDetails @AT@ 888 @LENGTH@ 403
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthAuthenticationDetails, WebAuthenticationDetails @AT@ 1136 @LENGTH@ 11


UPD TryStatement@@try {  return PropertyPath.from(path,entity.getTypeInformation());} catch (PropertyReferenceException|InvalidPersistentPropertyPath e) {  if (path.endsWith("_id")) {    return forName(path.substring(0,path.length() - 3) + "id");  }  return null;} @TO@ try {  if (entity.getPersistentProperty(path) != null) {    return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());  }  return PropertyPath.from(path,entity.getTypeInformation());} catch (PropertyReferenceException|InvalidPersistentPropertyPath e) {  if (path.endsWith("_id")) {    return forName(path.substring(0,path.length() - 3) + "id");  }  return null;} @AT@ 32494 @LENGTH@ 274
---INS IfStatement@@if (entity.getPersistentProperty(path) != null) {  return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());} @TO@ TryStatement@@try {  return PropertyPath.from(path,entity.getTypeInformation());} catch (PropertyReferenceException|InvalidPersistentPropertyPath e) {  if (path.endsWith("_id")) {    return forName(path.substring(0,path.length() - 3) + "id");  }  return null;} @AT@ 32504 @LENGTH@ 136
------INS InfixExpression@@entity.getPersistentProperty(path) != null @TO@ IfStatement@@if (entity.getPersistentProperty(path) != null) {  return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());} @AT@ 32508 @LENGTH@ 42
---------INS MethodInvocation@@entity.getPersistentProperty(path) @TO@ InfixExpression@@entity.getPersistentProperty(path) != null @AT@ 32508 @LENGTH@ 34
------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getPersistentProperty(path) @AT@ 32508 @LENGTH@ 6
------------INS SimpleName@@MethodName:getPersistentProperty:[path] @TO@ MethodInvocation@@entity.getPersistentProperty(path) @AT@ 32515 @LENGTH@ 27
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:getPersistentProperty:[path] @AT@ 32537 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@entity.getPersistentProperty(path) != null @AT@ 32542 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entity.getPersistentProperty(path) != null @AT@ 32546 @LENGTH@ 4
------INS Block@@ThenBody:{  return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());} @TO@ IfStatement@@if (entity.getPersistentProperty(path) != null) {  return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());} @AT@ 32552 @LENGTH@ 88
---------INS ReturnStatement@@MethodInvocation:PropertyPath.from(Pattern.quote(path),entity.getTypeInformation()) @TO@ Block@@ThenBody:{  return PropertyPath.from(Pattern.quote(path),entity.getTypeInformation());} @AT@ 32559 @LENGTH@ 75
------------INS MethodInvocation@@PropertyPath.from(Pattern.quote(path),entity.getTypeInformation()) @TO@ ReturnStatement@@MethodInvocation:PropertyPath.from(Pattern.quote(path),entity.getTypeInformation()) @AT@ 32566 @LENGTH@ 67
---------------INS SimpleName@@Name:PropertyPath @TO@ MethodInvocation@@PropertyPath.from(Pattern.quote(path),entity.getTypeInformation()) @AT@ 32566 @LENGTH@ 12
---------------INS SimpleName@@MethodName:from:[Pattern.quote(path), entity.getTypeInformation()] @TO@ MethodInvocation@@PropertyPath.from(Pattern.quote(path),entity.getTypeInformation()) @AT@ 32579 @LENGTH@ 54
------------------INS MethodInvocation@@Pattern.quote(path) @TO@ SimpleName@@MethodName:from:[Pattern.quote(path), entity.getTypeInformation()] @AT@ 32584 @LENGTH@ 19
---------------------INS SimpleName@@Name:Pattern @TO@ MethodInvocation@@Pattern.quote(path) @AT@ 32584 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:quote:[path] @TO@ MethodInvocation@@Pattern.quote(path) @AT@ 32592 @LENGTH@ 11
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:quote:[path] @AT@ 32598 @LENGTH@ 4
------------------INS MethodInvocation@@entity.getTypeInformation() @TO@ SimpleName@@MethodName:from:[Pattern.quote(path), entity.getTypeInformation()] @AT@ 32605 @LENGTH@ 27
---------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getTypeInformation() @AT@ 32605 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getTypeInformation:[] @TO@ MethodInvocation@@entity.getTypeInformation() @AT@ 32612 @LENGTH@ 20


UPD MethodDeclaration@@public, void, MethodName:loadConfigWhenProxyingDisabledAndSubclassThenWebFilterChainProxyExists,  @TO@ public, void, MethodName:loadConfigWhenBeanProxyingEnabledAndSubclassThenWebFilterChainProxyExists,  @AT@ 1719 @LENGTH@ 423
---UPD SimpleName@@MethodName:loadConfigWhenProxyingDisabledAndSubclassThenWebFilterChainProxyExists @TO@ MethodName:loadConfigWhenBeanProxyingEnabledAndSubclassThenWebFilterChainProxyExists @AT@ 1731 @LENGTH@ 70


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FromFtpRemoteFileFilterDirectoryTest, FtpServerTestSupport @AT@ 1407 @LENGTH@ 150


UPD TypeDeclaration@@[public, static]KeystoneEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KeystoneEndpointBuilder, [EndpointProducerBuilder] @AT@ 1449 @LENGTH@ 2966
---DEL Modifier@@static @AT@ 1456 @LENGTH@ 6


UPD TypeDeclaration@@[public]JdbcTokenStore, [TokenStore] @TO@ [@Deprecated, public]JdbcTokenStore, [TokenStore] @AT@ 1446 @LENGTH@ 16011
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcTokenStore, [TokenStore] @AT@ 1624 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew) @TO@ MethodInvocation:validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew.toMillis()) @AT@ 10838 @LENGTH@ 113
---UPD MethodInvocation@@validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew) @TO@ validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew.toMillis()) @AT@ 10838 @LENGTH@ 112
------UPD SimpleName@@MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew] @TO@ MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew.toMillis()] @AT@ 10855 @LENGTH@ 95
---------INS MethodInvocation@@this.responseTimeValidationSkew.toMillis() @TO@ SimpleName@@MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew] @AT@ 10915 @LENGTH@ 42
------------INS FieldAccess@@this.responseTimeValidationSkew @TO@ MethodInvocation@@this.responseTimeValidationSkew.toMillis() @AT@ 10915 @LENGTH@ 31
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.responseTimeValidationSkew @AT@ 10915 @LENGTH@ 4
---------------MOV SimpleName@@responseTimeValidationSkew @TO@ FieldAccess@@this.responseTimeValidationSkew @AT@ 10920 @LENGTH@ 26
------------INS SimpleName@@MethodName:toMillis:[] @TO@ MethodInvocation@@this.responseTimeValidationSkew.toMillis() @AT@ 10947 @LENGTH@ 10
---------DEL FieldAccess@@this.responseTimeValidationSkew @AT@ 10915 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient) @TO@ MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 3498 @LENGTH@ 105


UPD EnumDeclaration@@[public, static]DigitalOceanOperations,  @TO@ [static]DigitalOceanOperations,  @AT@ 10148 @LENGTH@ 447
---DEL Modifier@@public @AT@ 10148 @LENGTH@ 6


UPD MethodDeclaration@@default, HazelcastAtomicnumberEndpointBuilder, MethodName:hazelcastAtomicnumber, String path,  @TO@ default, HazelcastAtomicnumberEndpointBuilder, MethodName:hazelcastAtomicvalue, String path,  @AT@ 8178 @LENGTH@ 503
---UPD SimpleName@@MethodName:hazelcastAtomicnumber @TO@ MethodName:hazelcastAtomicvalue @AT@ 8223 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:Assert.noNullElements(keys,"Keys must not be null!") @TO@ MethodInvocation:Assert.notNull(keys,"Keys must not be null!") @AT@ 3634 @LENGTH@ 54
---UPD MethodInvocation@@Assert.noNullElements(keys,"Keys must not be null!") @TO@ Assert.notNull(keys,"Keys must not be null!") @AT@ 3634 @LENGTH@ 53
------UPD SimpleName@@MethodName:noNullElements:[keys, "Keys must not be null!"] @TO@ MethodName:notNull:[keys, "Keys must not be null!"] @AT@ 3641 @LENGTH@ 46


UPD FieldDeclaration@@private, Function<ClientRegistration,OAuth2TokenValidator<Jwt>>, [jwtValidatorFactory=OidcIdTokenValidator::new] @TO@ private, Function<ClientRegistration,OAuth2TokenValidator<Jwt>>, [jwtValidatorFactory=new DefaultOidcIdTokenValidatorFactory()] @AT@ 3622 @LENGTH@ 112
---UPD VariableDeclarationFragment@@jwtValidatorFactory=OidcIdTokenValidator::new @TO@ jwtValidatorFactory=new DefaultOidcIdTokenValidatorFactory() @AT@ 3686 @LENGTH@ 47
------INS ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @TO@ VariableDeclarationFragment@@jwtValidatorFactory=OidcIdTokenValidator::new @AT@ 3778 @LENGTH@ 40
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @AT@ 3778 @LENGTH@ 3
---------INS SimpleType@@DefaultOidcIdTokenValidatorFactory @TO@ ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @AT@ 3782 @LENGTH@ 34


UPD MethodDeclaration@@WebClient, MethodName:webClient, ReactiveClientRegistrationRepository clientRegistrationRepository, ServerOAuth2AuthorizedClientRepository authorizedClientRepository,  @TO@ ServerOAuth2AuthorizedClientManager, MethodName:authorizedClientManager, ReactiveClientRegistrationRepository clientRegistrationRepository, ServerOAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 1269 @LENGTH@ 440
---UPD SimpleType@@WebClient @TO@ ServerOAuth2AuthorizedClientManager @AT@ 1259 @LENGTH@ 9
---UPD SimpleName@@MethodName:webClient @TO@ MethodName:authorizedClientManager @AT@ 1269 @LENGTH@ 9
---UPD VariableDeclarationStatement@@ServerOAuth2AuthorizedClientExchangeFilterFunction oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository); @TO@ DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository); @AT@ 1420 @LENGTH@ 176
------UPD SimpleType@@ServerOAuth2AuthorizedClientExchangeFilterFunction @TO@ DefaultServerOAuth2AuthorizedClientManager @AT@ 1420 @LENGTH@ 50
------UPD VariableDeclarationFragment@@oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository) @TO@ authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(clientRegistrationRepository,authorizedClientRepository) @AT@ 1471 @LENGTH@ 124
---------UPD SimpleName@@oauth @TO@ authorizedClientManager @AT@ 1471 @LENGTH@ 5
---------UPD ClassInstanceCreation@@ServerOAuth2AuthorizedClientExchangeFilterFunction[clientRegistrationRepository, authorizedClientRepository] @TO@ DefaultServerOAuth2AuthorizedClientManager[clientRegistrationRepository, authorizedClientRepository] @AT@ 1483 @LENGTH@ 112
------------UPD SimpleType@@ServerOAuth2AuthorizedClientExchangeFilterFunction @TO@ DefaultServerOAuth2AuthorizedClientManager @AT@ 1487 @LENGTH@ 50
---INS VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ReactiveClientRegistrationRepository clientRegistrationRepository, ServerOAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2206 @LENGTH@ 217
------INS SimpleType@@ReactiveOAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 2206 @LENGTH@ 38
------INS VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 2245 @LENGTH@ 177
---------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2245 @LENGTH@ 24
---------INS MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 146
------------INS MethodInvocation@@MethodName:clientCredentials:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 131
------------INS MethodInvocation@@MethodName:refreshToken:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 104
------------INS MethodInvocation@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 82
------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 55
------------INS SimpleName@@Name:ReactiveOAuth2AuthorizedClientProviderBuilder @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 45
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2415 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ReactiveClientRegistrationRepository clientRegistrationRepository, ServerOAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2614 @LENGTH@ 78
------INS MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2614 @LENGTH@ 77
---------INS SimpleName@@Name:authorizedClientManager @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2614 @LENGTH@ 23
---------INS SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 2638 @LENGTH@ 53
------------INS SimpleName@@authorizedClientProvider @TO@ SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @AT@ 2666 @LENGTH@ 24
---INS ReturnStatement@@SimpleName:authorizedClientManager @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ReactiveClientRegistrationRepository clientRegistrationRepository, ServerOAuth2AuthorizedClientRepository authorizedClientRepository,  @AT@ 2696 @LENGTH@ 31
------INS SimpleName@@authorizedClientManager @TO@ ReturnStatement@@SimpleName:authorizedClientManager @AT@ 2703 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:this.authorizedClientManager.setContextAttributesMapper(new DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper()) @TO@ MethodInvocation:this.authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @AT@ 10779 @LENGTH@ 136
---UPD MethodInvocation@@this.authorizedClientManager.setContextAttributesMapper(new DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper()) @TO@ this.authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @AT@ 10779 @LENGTH@ 135
------UPD SimpleName@@MethodName:setContextAttributesMapper:[new DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper()] @TO@ MethodName:setContextAttributesMapper:[authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
] @AT@ 10808 @LENGTH@ 106
---------DEL ClassInstanceCreation@@DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper[] @AT@ 10840 @LENGTH@ 73
------------DEL SimpleType@@DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper @AT@ 10844 @LENGTH@ 67
---------INS LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @TO@ SimpleName@@MethodName:setContextAttributesMapper:[new DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper()] @AT@ 10928 @LENGTH@ 576
------------INS VariableDeclarationFragment@@authorizeRequest @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 10928 @LENGTH@ 16
---------------INS SimpleName@@authorizeRequest @TO@ VariableDeclarationFragment@@authorizeRequest @AT@ 10928 @LENGTH@ 16
------------INS VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 10953 @LENGTH@ 56
---------------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @AT@ 10953 @LENGTH@ 19
------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 10953 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 10957 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 10965 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@contextAttributes=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @AT@ 10973 @LENGTH@ 35
------------------INS SimpleName@@contextAttributes @TO@ VariableDeclarationFragment@@contextAttributes=new HashMap<>() @AT@ 10973 @LENGTH@ 17
------------------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@contextAttributes=new HashMap<>() @AT@ 10993 @LENGTH@ 15
---------------------MOV New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 10840 @LENGTH@ 3
---------------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 10997 @LENGTH@ 9
------------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 10997 @LENGTH@ 7
------------INS VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 11013 @LENGTH@ 99
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @AT@ 11013 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @TO@ VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @AT@ 11020 @LENGTH@ 91
------------------INS SimpleName@@username @TO@ VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 11020 @LENGTH@ 8
------------------INS MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @TO@ VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 11031 @LENGTH@ 80
---------------------INS MethodInvocation@@MethodName:getServletRequest:[] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 11031 @LENGTH@ 36
---------------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 11031 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.USERNAME] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 11068 @LENGTH@ 43
------------------------INS QualifiedName@@OAuth2ParameterNames.USERNAME @TO@ SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.USERNAME] @AT@ 11081 @LENGTH@ 29
---------------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.USERNAME @AT@ 11081 @LENGTH@ 20
---------------------------INS SimpleName@@USERNAME @TO@ QualifiedName@@OAuth2ParameterNames.USERNAME @AT@ 11102 @LENGTH@ 8
------------INS VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 11116 @LENGTH@ 99
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @AT@ 11116 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @TO@ VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @AT@ 11123 @LENGTH@ 91
------------------INS SimpleName@@password @TO@ VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 11123 @LENGTH@ 8
------------------INS MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @TO@ VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 11134 @LENGTH@ 80
---------------------INS MethodInvocation@@MethodName:getServletRequest:[] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 11134 @LENGTH@ 36
---------------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 11134 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.PASSWORD] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 11171 @LENGTH@ 43
------------------------INS QualifiedName@@OAuth2ParameterNames.PASSWORD @TO@ SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.PASSWORD] @AT@ 11184 @LENGTH@ 29
---------------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.PASSWORD @AT@ 11184 @LENGTH@ 20
---------------------------INS SimpleName@@PASSWORD @TO@ QualifiedName@@OAuth2ParameterNames.PASSWORD @AT@ 11205 @LENGTH@ 8
------------INS IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 11219 @LENGTH@ 252
---------------INS InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @TO@ IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 11223 @LENGTH@ 62
------------------INS MethodInvocation@@StringUtils.hasText(username) @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 11223 @LENGTH@ 29
---------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(username) @AT@ 11223 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:hasText:[username] @TO@ MethodInvocation@@StringUtils.hasText(username) @AT@ 11235 @LENGTH@ 17
------------------------INS SimpleName@@username @TO@ SimpleName@@MethodName:hasText:[username] @AT@ 11243 @LENGTH@ 8
------------------INS Operator@@&& @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 11252 @LENGTH@ 2
------------------INS MethodInvocation@@StringUtils.hasText(password) @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 11256 @LENGTH@ 29
---------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(password) @AT@ 11256 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:hasText:[password] @TO@ MethodInvocation@@StringUtils.hasText(password) @AT@ 11268 @LENGTH@ 17
------------------------INS SimpleName@@password @TO@ SimpleName@@MethodName:hasText:[password] @AT@ 11276 @LENGTH@ 8
---------------INS Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @TO@ IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 11287 @LENGTH@ 184
------------------INS ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @TO@ Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 11293 @LENGTH@ 84
---------------------INS MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @TO@ ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 11293 @LENGTH@ 83
------------------------INS SimpleName@@Name:contextAttributes @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 11293 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 11311 @LENGTH@ 65
---------------------------INS QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @AT@ 11315 @LENGTH@ 50
------------------------------INS SimpleName@@OAuth2AuthorizationContext @TO@ QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @AT@ 11315 @LENGTH@ 26
------------------------------INS SimpleName@@USERNAME_ATTRIBUTE_NAME @TO@ QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @AT@ 11342 @LENGTH@ 23
---------------------------INS SimpleName@@username @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @AT@ 11367 @LENGTH@ 8
------------------INS ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @TO@ Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 11382 @LENGTH@ 84
---------------------INS MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @TO@ ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 11382 @LENGTH@ 83
------------------------INS SimpleName@@Name:contextAttributes @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 11382 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 11400 @LENGTH@ 65
---------------------------INS QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @AT@ 11404 @LENGTH@ 50
------------------------------INS SimpleName@@OAuth2AuthorizationContext @TO@ QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @AT@ 11404 @LENGTH@ 26
------------------------------INS SimpleName@@PASSWORD_ATTRIBUTE_NAME @TO@ QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @AT@ 11431 @LENGTH@ 23
---------------------------INS SimpleName@@password @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @AT@ 11456 @LENGTH@ 8
------------INS ReturnStatement@@SimpleName:contextAttributes @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 11475 @LENGTH@ 25
---------------INS SimpleName@@contextAttributes @TO@ ReturnStatement@@SimpleName:contextAttributes @AT@ 11482 @LENGTH@ 17


UPD TypeDeclaration@@[public]ConsumerTokenServices,  @TO@ [@Deprecated, public]ConsumerTokenServices,  @AT@ 705 @LENGTH@ 86
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerTokenServices,  @AT@ 883 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:loadConfigWhenProxyingDisabledAndSubclassThenFilterChainsCreated,  @TO@ public, void, MethodName:loadConfigWhenBeanProxyingEnabledAndSubclassThenFilterChainsCreated,  @AT@ 14563 @LENGTH@ 419
---UPD SimpleName@@MethodName:loadConfigWhenProxyingDisabledAndSubclassThenFilterChainsCreated @TO@ MethodName:loadConfigWhenBeanProxyingEnabledAndSubclassThenFilterChainsCreated @AT@ 14575 @LENGTH@ 64


UPD TypeDeclaration@@[public]ClientKeyGenerator,  @TO@ [@Deprecated, public]ClientKeyGenerator,  @AT@ 850 @LENGTH@ 327
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientKeyGenerator,  @AT@ 1028 @LENGTH@ 11


UPD TypeDeclaration@@[public]ConsumerSecurityMetadataSource, AbstractFallbackMethodSecurityMetadataSource @TO@ [@Deprecated, public]ConsumerSecurityMetadataSource, AbstractFallbackMethodSecurityMetadataSource @AT@ 1093 @LENGTH@ 1754
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerSecurityMetadataSource, AbstractFallbackMethodSecurityMetadataSource @AT@ 1314 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]TikaParseOutputFormat,  @TO@ [static]TikaParseOutputFormat,  @AT@ 7665 @LENGTH@ 83
---DEL Modifier@@public @AT@ 7665 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(factory) @TO@ MethodDeclaration@@private, MongoConverter, MethodName:getDefaultMongoConverter, MongoDbFactory factory,  @AT@ 12260 @LENGTH@ 44
---INS MethodInvocation@@converter.setCodecRegistryProvider(factory) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(factory) @AT@ 12260 @LENGTH@ 43
------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(factory) @AT@ 12260 @LENGTH@ 9
------INS SimpleName@@MethodName:setCodecRegistryProvider:[factory] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(factory) @AT@ 12270 @LENGTH@ 33
---------INS SimpleName@@factory @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[factory] @AT@ 12295 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]AdvancedInfluxDbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedInfluxDbEndpointBuilder, [EndpointProducerBuilder] @AT@ 4142 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 4149 @LENGTH@ 6


UPD MethodDeclaration@@default, MQTTEndpointBuilder, MethodName:mQTT, String path,  @TO@ default, MQTTEndpointBuilder, MethodName:mqtt, String path,  @AT@ 99496 @LENGTH@ 354
---UPD SimpleName@@MethodName:mQTT @TO@ MethodName:mqtt @AT@ 99524 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:sslContextFactory.setTrustStoreType("JKS") @TO@ MethodInvocation:sslContextFactory.setTrustStoreType("PKCS12") @AT@ 7832 @LENGTH@ 43
---UPD MethodInvocation@@sslContextFactory.setTrustStoreType("JKS") @TO@ sslContextFactory.setTrustStoreType("PKCS12") @AT@ 7832 @LENGTH@ 42
------UPD SimpleName@@MethodName:setTrustStoreType:["JKS"] @TO@ MethodName:setTrustStoreType:["PKCS12"] @AT@ 7850 @LENGTH@ 24
---------UPD StringLiteral@@"JKS" @TO@ "PKCS12" @AT@ 7868 @LENGTH@ 5


UPD VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @TO@ Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest); @AT@ 4026 @LENGTH@ 174


UPD TypeDeclaration@@[public, static]AdvancedControlBusEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedControlBusEndpointBuilder, [EndpointProducerBuilder] @AT@ 7039 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 7046 @LENGTH@ 6


UPD MethodDeclaration@@default, QuickfixjEndpointBuilder, MethodName:quickfixj, String path,  @TO@ default, QuickfixjEndpointBuilder, MethodName:quickfix, String path,  @AT@ 24062 @LENGTH@ 393
---UPD SimpleName@@MethodName:quickfixj @TO@ MethodName:quickfix @AT@ 24095 @LENGTH@ 9


UPD MethodDeclaration@@default, KMSEndpointBuilder, MethodName:kMS, String path,  @TO@ default, KMSEndpointBuilder, MethodName:awsKms, String path,  @AT@ 4966 @LENGTH@ 350
---UPD SimpleName@@MethodName:kMS @TO@ MethodName:awsKms @AT@ 4993 @LENGTH@ 3


UPD TypeDeclaration@@[public, static]AdvancedGeoCoderEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGeoCoderEndpointBuilder, [EndpointProducerBuilder] @AT@ 7123 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 7130 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:Mono.justOrEmpty(serverWebExchange).switchIfEmpty(Mono.defer(() -> currentServerWebExchange())).map(exchange -> {
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange);
  return authorizedClient;
}
).defaultIfEmpty(authorizedClient) @TO@ MethodInvocation:Mono.justOrEmpty(serverWebExchange).switchIfEmpty(Mono.defer(() -> currentServerWebExchange())).flatMap(exchange -> this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient)).defaultIfEmpty(authorizedClient) @AT@ 5690 @LENGTH@ 304
---UPD MethodInvocation@@Mono.justOrEmpty(serverWebExchange).switchIfEmpty(Mono.defer(() -> currentServerWebExchange())).map(exchange -> {
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange);
  return authorizedClient;
}
).defaultIfEmpty(authorizedClient) @TO@ Mono.justOrEmpty(serverWebExchange).switchIfEmpty(Mono.defer(() -> currentServerWebExchange())).flatMap(exchange -> this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient)).defaultIfEmpty(authorizedClient) @AT@ 5697 @LENGTH@ 296
------UPD MethodInvocation@@MethodName:map:[exchange -> {
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange);
  return authorizedClient;
}
] @TO@ MethodName:flatMap:[exchange -> this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient)] @AT@ 5697 @LENGTH@ 258
---------UPD LambdaExpression@@exchange -> {
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange);
  return authorizedClient;
}
 @TO@ exchange -> this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient) @AT@ 5807 @LENGTH@ 147
------------INS MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient) @TO@ LambdaExpression@@exchange -> {
  this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange);
  return authorizedClient;
}
 @AT@ 5823 @LENGTH@ 127
---------------INS MethodInvocation@@MethodName:saveAuthorizedClient:[authorizedClient, principal, exchange] @TO@ MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient) @AT@ 5823 @LENGTH@ 91
------------------INS SimpleName@@authorizedClient @TO@ MethodInvocation@@MethodName:saveAuthorizedClient:[authorizedClient, principal, exchange] @AT@ 5876 @LENGTH@ 16
------------------INS SimpleName@@principal @TO@ MethodInvocation@@MethodName:saveAuthorizedClient:[authorizedClient, principal, exchange] @AT@ 5894 @LENGTH@ 9
------------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:saveAuthorizedClient:[authorizedClient, principal, exchange] @AT@ 5905 @LENGTH@ 8
---------------MOV FieldAccess@@this.authorizedClientRepository @TO@ MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient) @AT@ 5826 @LENGTH@ 31
---------------INS SimpleName@@MethodName:thenReturn:[authorizedClient] @TO@ MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange).thenReturn(authorizedClient) @AT@ 5922 @LENGTH@ 28
------------------INS SimpleName@@authorizedClient @TO@ SimpleName@@MethodName:thenReturn:[authorizedClient] @AT@ 5933 @LENGTH@ 16
------------DEL ExpressionStatement@@MethodInvocation:this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange) @AT@ 5826 @LENGTH@ 92
---------------DEL MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(authorizedClient,principal,exchange) @AT@ 5826 @LENGTH@ 91
------------------DEL SimpleName@@MethodName:saveAuthorizedClient:[authorizedClient, principal, exchange] @AT@ 5858 @LENGTH@ 59
---------------------DEL SimpleName@@authorizedClient @AT@ 5879 @LENGTH@ 16
---------------------DEL SimpleName@@principal @AT@ 5897 @LENGTH@ 9
---------------------DEL SimpleName@@exchange @AT@ 5908 @LENGTH@ 8
------------DEL ReturnStatement@@SimpleName:authorizedClient @AT@ 5924 @LENGTH@ 24
---------------DEL SimpleName@@authorizedClient @AT@ 5931 @LENGTH@ 16


UPD TypeDeclaration@@[@SuppressWarnings("serial"), @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT), @com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true), public]BaseClientDetails, [ClientDetails] @TO@ [@SuppressWarnings("serial"), @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT), @com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true), @Deprecated, public]BaseClientDetails, [ClientDetails] @AT@ 724 @LENGTH@ 11733
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_DEFAULT), @com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown=true), public]BaseClientDetails, [ClientDetails] @AT@ 1118 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedSnmpEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedSnmpEndpointBuilder, [EndpointConsumerBuilder] @AT@ 12877 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 12884 @LENGTH@ 6


UPD TypeDeclaration@@[public]ResourceOwnerPasswordResourceDetails, BaseOAuth2ProtectedResourceDetails @TO@ [@Deprecated, public]ResourceOwnerPasswordResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 821 @LENGTH@ 497
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 999 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedSparkEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedSparkEndpointBuilder, [EndpointConsumerBuilder] @AT@ 8868 @LENGTH@ 3792
---DEL Modifier@@static @AT@ 8875 @LENGTH@ 6


UPD MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @TO@ private, static, Map<String,ClientRegistration>, MethodName:toUnmodifiableConcurrentMap, List<ClientRegistration> registrations,  @AT@ 2120 @LENGTH@ 453
---UPD SimpleName@@MethodName:createRegistrationsMap @TO@ MethodName:toUnmodifiableConcurrentMap @AT@ 2167 @LENGTH@ 22
---INS SingleVariableDeclaration@@List<ClientRegistration> registrations @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2244 @LENGTH@ 38
------INS ParameterizedType@@List<ClientRegistration> @TO@ SingleVariableDeclaration@@List<ClientRegistration> registrations @AT@ 2244 @LENGTH@ 24
---------MOV SimpleType@@Collector @TO@ ParameterizedType@@List<ClientRegistration> @AT@ 2301 @LENGTH@ 9
---------MOV SimpleType@@ClientRegistration @TO@ ParameterizedType@@List<ClientRegistration> @AT@ 2311 @LENGTH@ 18
------INS SimpleName@@registrations @TO@ SingleVariableDeclaration@@List<ClientRegistration> registrations @AT@ 2269 @LENGTH@ 13
---INS VariableDeclarationStatement@@ConcurrentHashMap<String,ClientRegistration> result=new ConcurrentHashMap<>(); @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2288 @LENGTH@ 81
------INS ParameterizedType@@ConcurrentHashMap<String,ClientRegistration> @TO@ VariableDeclarationStatement@@ConcurrentHashMap<String,ClientRegistration> result=new ConcurrentHashMap<>(); @AT@ 2288 @LENGTH@ 45
---------MOV SimpleType@@ConcurrentMap @TO@ ParameterizedType@@ConcurrentHashMap<String,ClientRegistration> @AT@ 2334 @LENGTH@ 13
---------MOV SimpleType@@String @TO@ ParameterizedType@@ConcurrentHashMap<String,ClientRegistration> @AT@ 2348 @LENGTH@ 6
---------MOV SimpleType@@ClientRegistration @TO@ ParameterizedType@@ConcurrentHashMap<String,ClientRegistration> @AT@ 2356 @LENGTH@ 18
------INS VariableDeclarationFragment@@result=new ConcurrentHashMap<>() @TO@ VariableDeclarationStatement@@ConcurrentHashMap<String,ClientRegistration> result=new ConcurrentHashMap<>(); @AT@ 2334 @LENGTH@ 34
---------INS ClassInstanceCreation@@ConcurrentHashMap<>[] @TO@ VariableDeclarationFragment@@result=new ConcurrentHashMap<>() @AT@ 2343 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@ConcurrentHashMap<>[] @AT@ 2343 @LENGTH@ 3
------------INS ParameterizedType@@ConcurrentHashMap<> @TO@ ClassInstanceCreation@@ConcurrentHashMap<>[] @AT@ 2347 @LENGTH@ 19
---------------INS SimpleType@@ConcurrentHashMap @TO@ ParameterizedType@@ConcurrentHashMap<> @AT@ 2347 @LENGTH@ 17
---------MOV SimpleName@@collector @TO@ VariableDeclarationFragment@@result=new ConcurrentHashMap<>() @AT@ 2377 @LENGTH@ 9
---DEL VariableDeclarationStatement@@Collector<ClientRegistration,?,ConcurrentMap<String,ClientRegistration>> collector=toConcurrentMap(ClientRegistration::getRegistrationId,Function.identity()); @AT@ 2301 @LENGTH@ 168
------DEL ParameterizedType@@Collector<ClientRegistration,?,ConcurrentMap<String,ClientRegistration>> @AT@ 2301 @LENGTH@ 75
---------DEL WildcardType@@? @AT@ 2331 @LENGTH@ 1
---------DEL ParameterizedType@@ConcurrentMap<String,ClientRegistration> @AT@ 2334 @LENGTH@ 41
------DEL VariableDeclarationFragment@@collector=toConcurrentMap(ClientRegistration::getRegistrationId,Function.identity()) @AT@ 2377 @LENGTH@ 91
---------DEL MethodInvocation@@toConcurrentMap(ClientRegistration::getRegistrationId,Function.identity()) @AT@ 2393 @LENGTH@ 75
---INS EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2372 @LENGTH@ 302
------INS SingleVariableDeclaration@@ClientRegistration registration @TO@ EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @AT@ 2377 @LENGTH@ 31
---------INS SimpleType@@ClientRegistration @TO@ SingleVariableDeclaration@@ClientRegistration registration @AT@ 2377 @LENGTH@ 18
---------INS SimpleName@@registration @TO@ SingleVariableDeclaration@@ClientRegistration registration @AT@ 2396 @LENGTH@ 12
------INS SimpleName@@registrations @TO@ EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @AT@ 2411 @LENGTH@ 13
------INS IfStatement@@if (result.containsKey(registration.getRegistrationId())) {  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @TO@ EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @AT@ 2431 @LENGTH@ 176
---------INS MethodInvocation@@result.containsKey(registration.getRegistrationId()) @TO@ IfStatement@@if (result.containsKey(registration.getRegistrationId())) {  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @AT@ 2435 @LENGTH@ 52
------------MOV SimpleName@@MethodName:toConcurrentMap:[ClientRegistration::getRegistrationId, Function.identity()] @TO@ MethodInvocation@@result.containsKey(registration.getRegistrationId()) @AT@ 2393 @LENGTH@ 75
---------------UPD MethodInvocation@@Function.identity() @TO@ registration.getRegistrationId() @AT@ 2448 @LENGTH@ 19
------------------UPD SimpleName@@Name:Function @TO@ Name:registration @AT@ 2448 @LENGTH@ 8
------------------UPD SimpleName@@MethodName:identity:[] @TO@ MethodName:getRegistrationId:[] @AT@ 2457 @LENGTH@ 10
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.containsKey(registration.getRegistrationId()) @AT@ 2435 @LENGTH@ 6
---------INS Block@@ThenBody:{  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @TO@ IfStatement@@if (result.containsKey(registration.getRegistrationId())) {  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @AT@ 2489 @LENGTH@ 118
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId())) @TO@ Block@@ThenBody:{  throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));} @AT@ 2495 @LENGTH@ 107
---------------INS ClassInstanceCreation@@IllegalStateException[String.format("Duplicate key %s",registration.getRegistrationId())] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId())) @AT@ 2501 @LENGTH@ 100
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2501 @LENGTH@ 3
------------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2505 @LENGTH@ 21
------------------INS MethodInvocation@@String.format("Duplicate key %s",registration.getRegistrationId()) @TO@ ClassInstanceCreation@@IllegalStateException[String.format("Duplicate key %s",registration.getRegistrationId())] @AT@ 2527 @LENGTH@ 73
---------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Duplicate key %s",registration.getRegistrationId()) @AT@ 2527 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:format:["Duplicate key %s", registration.getRegistrationId()] @TO@ MethodInvocation@@String.format("Duplicate key %s",registration.getRegistrationId()) @AT@ 2534 @LENGTH@ 66
------------------------INS StringLiteral@@"Duplicate key %s" @TO@ SimpleName@@MethodName:format:["Duplicate key %s", registration.getRegistrationId()] @AT@ 2541 @LENGTH@ 18
------------------------INS MethodInvocation@@registration.getRegistrationId() @TO@ SimpleName@@MethodName:format:["Duplicate key %s", registration.getRegistrationId()] @AT@ 2567 @LENGTH@ 32
---------------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 2567 @LENGTH@ 12
---------------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 2580 @LENGTH@ 19
------INS ExpressionStatement@@MethodInvocation:result.put(registration.getRegistrationId(),registration) @TO@ EnhancedForStatement@@for (ClientRegistration registration : registrations) {  if (result.containsKey(registration.getRegistrationId())) {    throw new IllegalStateException(String.format("Duplicate key %s",registration.getRegistrationId()));  }  result.put(registration.getRegistrationId(),registration);} @AT@ 2611 @LENGTH@ 59
---------INS MethodInvocation@@result.put(registration.getRegistrationId(),registration) @TO@ ExpressionStatement@@MethodInvocation:result.put(registration.getRegistrationId(),registration) @AT@ 2611 @LENGTH@ 58
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.put(registration.getRegistrationId(),registration) @AT@ 2611 @LENGTH@ 6
------------INS SimpleName@@MethodName:put:[registration.getRegistrationId(), registration] @TO@ MethodInvocation@@result.put(registration.getRegistrationId(),registration) @AT@ 2618 @LENGTH@ 51
---------------INS MethodInvocation@@registration.getRegistrationId() @TO@ SimpleName@@MethodName:put:[registration.getRegistrationId(), registration] @AT@ 2622 @LENGTH@ 32
------------------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 2622 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@registration.getRegistrationId() @AT@ 2635 @LENGTH@ 19
---------------INS SimpleName@@registration @TO@ SimpleName@@MethodName:put:[registration.getRegistrationId(), registration] @AT@ 2656 @LENGTH@ 12
---UPD ReturnStatement@@MethodInvocation:registrations.stream().collect(collectingAndThen(collector,Collections::unmodifiableMap)) @TO@ MethodInvocation:Collections.unmodifiableMap(result) @AT@ 2472 @LENGTH@ 98
------UPD MethodInvocation@@registrations.stream().collect(collectingAndThen(collector,Collections::unmodifiableMap)) @TO@ Collections.unmodifiableMap(result) @AT@ 2479 @LENGTH@ 90
---------DEL MethodInvocation@@MethodName:stream:[] @AT@ 2479 @LENGTH@ 22
---------UPD SimpleName@@Name:registrations @TO@ Name:Collections @AT@ 2479 @LENGTH@ 13
---------DEL SimpleName@@MethodName:collect:[collectingAndThen(collector,Collections::unmodifiableMap)] @AT@ 2502 @LENGTH@ 67
------------DEL MethodInvocation@@collectingAndThen(collector,Collections::unmodifiableMap) @AT@ 2510 @LENGTH@ 58
---------MOV SimpleName@@MethodName:collectingAndThen:[collector, Collections::unmodifiableMap] @TO@ MethodInvocation@@registrations.stream().collect(collectingAndThen(collector,Collections::unmodifiableMap)) @AT@ 2510 @LENGTH@ 58
------------UPD SimpleName@@collector @TO@ result @AT@ 2528 @LENGTH@ 9


UPD IfStatement@@if (cachedConnection == null) {  cachedConnection=waitForConnection(now);} @TO@ if (cachedConnection == null && countOpenConnections() >= this.connectionLimit) {  cachedConnection=waitForConnection(now);} @AT@ 26774 @LENGTH@ 81
---INS InfixExpression@@cachedConnection == null && countOpenConnections() >= this.connectionLimit @TO@ IfStatement@@if (cachedConnection == null) {  cachedConnection=waitForConnection(now);} @AT@ 26778 @LENGTH@ 74
------INS InfixExpression@@cachedConnection == null @TO@ InfixExpression@@cachedConnection == null && countOpenConnections() >= this.connectionLimit @AT@ 26778 @LENGTH@ 24
---------MOV SimpleName@@cachedConnection @TO@ InfixExpression@@cachedConnection == null @AT@ 26778 @LENGTH@ 16
---------MOV Operator@@== @TO@ InfixExpression@@cachedConnection == null @AT@ 26794 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@cachedConnection == null @AT@ 26798 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@cachedConnection == null && countOpenConnections() >= this.connectionLimit @AT@ 26802 @LENGTH@ 2
------INS InfixExpression@@countOpenConnections() >= this.connectionLimit @TO@ InfixExpression@@cachedConnection == null && countOpenConnections() >= this.connectionLimit @AT@ 26806 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:countOpenConnections:[] @TO@ InfixExpression@@countOpenConnections() >= this.connectionLimit @AT@ 26806 @LENGTH@ 22
---------INS Operator@@>= @TO@ InfixExpression@@countOpenConnections() >= this.connectionLimit @AT@ 26828 @LENGTH@ 2
---------INS FieldAccess@@this.connectionLimit @TO@ InfixExpression@@countOpenConnections() >= this.connectionLimit @AT@ 26832 @LENGTH@ 20
------------INS ThisExpression@@this @TO@ FieldAccess@@this.connectionLimit @AT@ 26832 @LENGTH@ 4
------------INS SimpleName@@connectionLimit @TO@ FieldAccess@@this.connectionLimit @AT@ 26837 @LENGTH@ 15
---DEL InfixExpression@@cachedConnection == null @AT@ 26778 @LENGTH@ 24


UPD TypeDeclaration@@[public]OAuth2AuthenticationDetails, [Serializable] @TO@ [@Deprecated, public]OAuth2AuthenticationDetails, [Serializable] @AT@ 915 @LENGTH@ 4141
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AuthenticationDetails, [Serializable] @AT@ 1092 @LENGTH@ 11


UPD MethodDeclaration@@public, MethodInterceptor, MethodName:methodSecurityInterceptor, Exception,  @TO@ public, MethodInterceptor, MethodName:methodSecurityInterceptor, MethodSecurityMetadataSource methodSecurityMetadataSource,  @AT@ 6496 @LENGTH@ 639
---INS SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @TO@ MethodDeclaration@@public, MethodInterceptor, MethodName:methodSecurityInterceptor, Exception,  @AT@ 6381 @LENGTH@ 57
------INS SimpleType@@MethodSecurityMetadataSource @TO@ SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @AT@ 6381 @LENGTH@ 28
------INS SimpleName@@methodSecurityMetadataSource @TO@ SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @AT@ 6410 @LENGTH@ 28
---DEL SimpleType@@Exception @AT@ 6556 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:methodSecurityInterceptor.setSecurityMetadataSource(methodSecurityMetadataSource()) @TO@ MethodInvocation:methodSecurityInterceptor.setSecurityMetadataSource(methodSecurityMetadataSource) @AT@ 6861 @LENGTH@ 89
------UPD MethodInvocation@@methodSecurityInterceptor.setSecurityMetadataSource(methodSecurityMetadataSource()) @TO@ methodSecurityInterceptor.setSecurityMetadataSource(methodSecurityMetadataSource) @AT@ 6861 @LENGTH@ 88
---------UPD SimpleName@@MethodName:setSecurityMetadataSource:[methodSecurityMetadataSource()] @TO@ MethodName:setSecurityMetadataSource:[methodSecurityMetadataSource] @AT@ 6892 @LENGTH@ 57
------------INS SimpleName@@methodSecurityMetadataSource @TO@ SimpleName@@MethodName:setSecurityMetadataSource:[methodSecurityMetadataSource()] @AT@ 6792 @LENGTH@ 28
------------DEL MethodInvocation@@MethodName:methodSecurityMetadataSource:[] @AT@ 6918 @LENGTH@ 30


UPD TypeDeclaration@@[public, static]NeutronEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]NeutronEndpointBuilder, [EndpointProducerBuilder] @AT@ 1445 @LENGTH@ 3258
---DEL Modifier@@static @AT@ 1452 @LENGTH@ 6


UPD IfStatement@@if (System.getProperty("java.vendor.url","whatever").contains("ibm.com")) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ if (TestSuiteEnvironment.isIbmJvm()) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 27424 @LENGTH@ 550
---UPD MethodInvocation@@System.getProperty("java.vendor.url","whatever").contains("ibm.com") @TO@ TestSuiteEnvironment.isIbmJvm() @AT@ 27428 @LENGTH@ 68
------DEL MethodInvocation@@MethodName:getProperty:["java.vendor.url", "whatever"] @AT@ 27428 @LENGTH@ 48
---------DEL StringLiteral@@"java.vendor.url" @AT@ 27447 @LENGTH@ 17
---------DEL StringLiteral@@"whatever" @AT@ 27465 @LENGTH@ 10
------UPD SimpleName@@Name:System @TO@ Name:TestSuiteEnvironment @AT@ 27428 @LENGTH@ 6
------UPD SimpleName@@MethodName:contains:["ibm.com"] @TO@ MethodName:isIbmJvm:[] @AT@ 27477 @LENGTH@ 19
---------DEL StringLiteral@@"ibm.com" @AT@ 27486 @LENGTH@ 9
---UPD Block@@ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 27609 @LENGTH@ 365
------UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 27904 @LENGTH@ 56
---------UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 27911 @LENGTH@ 48
------------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 27924 @LENGTH@ 35
---------------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 27921 @LENGTH@ 4
---------------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 27952 @LENGTH@ 5


UPD Block@@ThenBody:{  hashKeySerializer(RawRedisSerializer.INSTANCE);  hashValueSerializer(RawRedisSerializer.INSTANCE);  return (StreamMessageListenerContainerOptionsBuilder)objectMapper(new ObjectHashMapper());} @TO@ ThenBody:{  hashKeySerializer(RedisSerializer.raw());  hashValueSerializer(RedisSerializer.raw());  return (StreamMessageListenerContainerOptionsBuilder)objectMapper(new ObjectHashMapper());} @AT@ 27859 @LENGTH@ 209
---UPD ExpressionStatement@@MethodInvocation:hashKeySerializer(RawRedisSerializer.INSTANCE) @TO@ MethodInvocation:hashKeySerializer(RedisSerializer.raw()) @AT@ 27866 @LENGTH@ 47
------UPD MethodInvocation@@hashKeySerializer(RawRedisSerializer.INSTANCE) @TO@ hashKeySerializer(RedisSerializer.raw()) @AT@ 27866 @LENGTH@ 46
---------UPD SimpleName@@MethodName:hashKeySerializer:[RawRedisSerializer.INSTANCE] @TO@ MethodName:hashKeySerializer:[RedisSerializer.raw()] @AT@ 27866 @LENGTH@ 46
------------DEL QualifiedName@@RawRedisSerializer.INSTANCE @AT@ 27884 @LENGTH@ 27
---------------DEL SimpleName@@RawRedisSerializer @AT@ 27884 @LENGTH@ 18
---------------DEL SimpleName@@INSTANCE @AT@ 27903 @LENGTH@ 8
------------INS MethodInvocation@@RedisSerializer.raw() @TO@ SimpleName@@MethodName:hashKeySerializer:[RawRedisSerializer.INSTANCE] @AT@ 27884 @LENGTH@ 21
---------------INS SimpleName@@Name:RedisSerializer @TO@ MethodInvocation@@RedisSerializer.raw() @AT@ 27884 @LENGTH@ 15
---------------INS SimpleName@@MethodName:raw:[] @TO@ MethodInvocation@@RedisSerializer.raw() @AT@ 27900 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:hashValueSerializer(RawRedisSerializer.INSTANCE) @TO@ MethodInvocation:hashValueSerializer(RedisSerializer.raw()) @AT@ 27918 @LENGTH@ 49
------UPD MethodInvocation@@hashValueSerializer(RawRedisSerializer.INSTANCE) @TO@ hashValueSerializer(RedisSerializer.raw()) @AT@ 27918 @LENGTH@ 48
---------UPD SimpleName@@MethodName:hashValueSerializer:[RawRedisSerializer.INSTANCE] @TO@ MethodName:hashValueSerializer:[RedisSerializer.raw()] @AT@ 27918 @LENGTH@ 48
------------INS MethodInvocation@@RedisSerializer.raw() @TO@ SimpleName@@MethodName:hashValueSerializer:[RawRedisSerializer.INSTANCE] @AT@ 27932 @LENGTH@ 21
---------------INS SimpleName@@Name:RedisSerializer @TO@ MethodInvocation@@RedisSerializer.raw() @AT@ 27932 @LENGTH@ 15
---------------INS SimpleName@@MethodName:raw:[] @TO@ MethodInvocation@@RedisSerializer.raw() @AT@ 27948 @LENGTH@ 5
------------DEL QualifiedName@@RawRedisSerializer.INSTANCE @AT@ 27938 @LENGTH@ 27
---------------DEL SimpleName@@RawRedisSerializer @AT@ 27938 @LENGTH@ 18
---------------DEL SimpleName@@INSTANCE @AT@ 27957 @LENGTH@ 8


UPD TypeDeclaration@@[public]OAuthProviderBeanDefinitionParser, [BeanDefinitionParser] @TO@ [@Deprecated, public]OAuthProviderBeanDefinitionParser, [BeanDefinitionParser] @AT@ 2035 @LENGTH@ 9241
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProviderBeanDefinitionParser, [BeanDefinitionParser] @AT@ 2256 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertHealthCheckOutput("camel",State.UP,checks.getJsonObject(0),(checksJson) -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @TO@ MethodInvocation:assertHealthCheckOutput("camel",State.UP,checks.getJsonObject(0),checksJson -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @AT@ 1915 @LENGTH@ 270
---UPD MethodInvocation@@assertHealthCheckOutput("camel",State.UP,checks.getJsonObject(0),(checksJson) -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @TO@ assertHealthCheckOutput("camel",State.UP,checks.getJsonObject(0),checksJson -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @AT@ 1915 @LENGTH@ 269
------UPD SimpleName@@MethodName:assertHealthCheckOutput:["camel", State.UP, checks.getJsonObject(0), (checksJson) -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
] @TO@ MethodName:assertHealthCheckOutput:["camel", State.UP, checks.getJsonObject(0), checksJson -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
] @AT@ 1915 @LENGTH@ 269
---------UPD LambdaExpression@@(checksJson) -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
 @TO@ checksJson -> {
  assertEquals(ServiceStatus.Started.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
 @AT@ 1983 @LENGTH@ 200


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidRequestException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidRequestException, ClientAuthenticationException @AT@ 93 @LENGTH@ 331
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidRequestException, ClientAuthenticationException @AT@ 299 @LENGTH@ 11


UPD IfStatement@@if (p != null) {  if (p.evict(s)) {    pool.remove(e);  }} @TO@ if (p != null) {  if (p.evict(s)) {    pool.remove(e);  }} else {  ServicePool.stop(s);  try {    e.getCamelContext().removeService(s);  } catch (  Exception ex) {    LOG.error("Error removing service {}",s,ex);  }} @AT@ 3188 @LENGTH@ 102
---INS Block@@ElseBody:{  ServicePool.stop(s);  try {    e.getCamelContext().removeService(s);  } catch (  Exception ex) {    LOG.error("Error removing service {}",s,ex);  }} @TO@ IfStatement@@if (p != null) {  if (p.evict(s)) {    pool.remove(e);  }} @AT@ 3296 @LENGTH@ 230
------INS ExpressionStatement@@MethodInvocation:ServicePool.stop(s) @TO@ Block@@ElseBody:{  ServicePool.stop(s);  try {    e.getCamelContext().removeService(s);  } catch (  Exception ex) {    LOG.error("Error removing service {}",s,ex);  }} @AT@ 3310 @LENGTH@ 20
---------INS MethodInvocation@@ServicePool.stop(s) @TO@ ExpressionStatement@@MethodInvocation:ServicePool.stop(s) @AT@ 3310 @LENGTH@ 19
------------INS SimpleName@@Name:ServicePool @TO@ MethodInvocation@@ServicePool.stop(s) @AT@ 3310 @LENGTH@ 11
------------INS SimpleName@@MethodName:stop:[s] @TO@ MethodInvocation@@ServicePool.stop(s) @AT@ 3322 @LENGTH@ 7
---------------INS SimpleName@@s @TO@ SimpleName@@MethodName:stop:[s] @AT@ 3327 @LENGTH@ 1
------INS TryStatement@@try {  e.getCamelContext().removeService(s);} catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @TO@ Block@@ElseBody:{  ServicePool.stop(s);  try {    e.getCamelContext().removeService(s);  } catch (  Exception ex) {    LOG.error("Error removing service {}",s,ex);  }} @AT@ 3343 @LENGTH@ 173
---------INS ExpressionStatement@@MethodInvocation:e.getCamelContext().removeService(s) @TO@ TryStatement@@try {  e.getCamelContext().removeService(s);} catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @AT@ 3365 @LENGTH@ 37
------------INS MethodInvocation@@e.getCamelContext().removeService(s) @TO@ ExpressionStatement@@MethodInvocation:e.getCamelContext().removeService(s) @AT@ 3365 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@e.getCamelContext().removeService(s) @AT@ 3365 @LENGTH@ 19
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCamelContext().removeService(s) @AT@ 3365 @LENGTH@ 1
---------------INS SimpleName@@MethodName:removeService:[s] @TO@ MethodInvocation@@e.getCamelContext().removeService(s) @AT@ 3385 @LENGTH@ 16
------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:removeService:[s] @AT@ 3399 @LENGTH@ 1
---------INS CatchClause@@catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @TO@ TryStatement@@try {  e.getCamelContext().removeService(s);} catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @AT@ 3417 @LENGTH@ 99
------------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @AT@ 3424 @LENGTH@ 12
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3424 @LENGTH@ 9
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 3434 @LENGTH@ 2
------------INS ExpressionStatement@@MethodInvocation:LOG.error("Error removing service {}",s,ex) @TO@ CatchClause@@catch (Exception ex) {  LOG.error("Error removing service {}",s,ex);} @AT@ 3456 @LENGTH@ 46
---------------INS MethodInvocation@@LOG.error("Error removing service {}",s,ex) @TO@ ExpressionStatement@@MethodInvocation:LOG.error("Error removing service {}",s,ex) @AT@ 3456 @LENGTH@ 45
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.error("Error removing service {}",s,ex) @AT@ 3456 @LENGTH@ 3
------------------INS SimpleName@@MethodName:error:["Error removing service {}", s, ex] @TO@ MethodInvocation@@LOG.error("Error removing service {}",s,ex) @AT@ 3460 @LENGTH@ 41
---------------------INS StringLiteral@@"Error removing service {}" @TO@ SimpleName@@MethodName:error:["Error removing service {}", s, ex] @AT@ 3466 @LENGTH@ 27
---------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:error:["Error removing service {}", s, ex] @AT@ 3495 @LENGTH@ 1
---------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:error:["Error removing service {}", s, ex] @AT@ 3498 @LENGTH@ 2


UPD EnumDeclaration@@[public, static]ElasticsearchOperation,  @TO@ [static]ElasticsearchOperation,  @AT@ 11892 @LENGTH@ 170
---DEL Modifier@@public @AT@ 11892 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class)).withPropertyValues("camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false").run((context) -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
) @TO@ MethodInvocation:new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class)).withPropertyValues("camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false").run(context -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
) @AT@ 1569 @LENGTH@ 1748
---UPD MethodInvocation@@new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class)).withPropertyValues("camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false").run((context) -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
) @TO@ new ApplicationContextRunner().withConfiguration(AutoConfigurations.of(CamelAutoConfiguration.class,CamelCloudAutoConfiguration.class,CamelCloudServiceChooserAutoConfiguration.class)).withPropertyValues("camel.cloud.enabled=false","camel.cloud.service-discovery.enabled=false","camel.cloud.service-filter.enabled=false","camel.cloud.service-chooser.enabled=true","camel.cloud.load-balancer.enabled=false","debug=false").run(context -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
) @AT@ 1569 @LENGTH@ 1747
------UPD SimpleName@@MethodName:run:[(context) -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
] @TO@ MethodName:run:[context -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
] @AT@ 2289 @LENGTH@ 1027
---------UPD LambdaExpression@@(context) -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
 @TO@ context -> {
  Environment env=context.getEnvironment();
  assertFalse(env.getProperty("camel.cloud.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-discovery.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.service-filter.enabled",Boolean.class));
  assertTrue(env.getProperty("camel.cloud.service-chooser.enabled",Boolean.class));
  assertFalse(env.getProperty("camel.cloud.load-balancer.enabled",Boolean.class));
  assertTrue(context.getBeansOfType(ServiceDiscovery.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceFilter.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceChooser.class).isEmpty());
  assertTrue(context.getBeansOfType(ServiceLoadBalancer.class).isEmpty());
}
 @AT@ 2293 @LENGTH@ 1009


UPD TypeDeclaration@@[public, static]BeanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]BeanEndpointBuilder, [EndpointProducerBuilder] @AT@ 1413 @LENGTH@ 2555
---DEL Modifier@@static @AT@ 1420 @LENGTH@ 6


INS VariableDeclarationStatement@@int n=0; @TO@ MethodDeclaration@@public, void, MethodName:testDeferredChannelCacheNack, Exception,  @AT@ 4217 @LENGTH@ 10
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int n=0; @AT@ 4217 @LENGTH@ 3
---INS VariableDeclarationFragment@@n=0 @TO@ VariableDeclarationStatement@@int n=0; @AT@ 4221 @LENGTH@ 5
------INS SimpleName@@n @TO@ VariableDeclarationFragment@@n=0 @AT@ 4221 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@n=0 @AT@ 4225 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 35
---DEL MethodInvocation@@builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 34
------DEL SimpleName@@Name:builder @AT@ 3538 @LENGTH@ 7
------DEL SimpleName@@MethodName:setDisableDirListing:[true] @AT@ 3546 @LENGTH@ 26
---------DEL BooleanLiteral@@true @AT@ 3567 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2263 @LENGTH@ 80
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2263 @LENGTH@ 79
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2263 @LENGTH@ 79
---------INS MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 2274 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 35
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 2300 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2321 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 2330 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]AdvancedZooKeeperMasterEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedZooKeeperMasterEndpointBuilder, [EndpointConsumerBuilder] @AT@ 2519 @LENGTH@ 2159
---DEL Modifier@@static @AT@ 2526 @LENGTH@ 6


UPD TypeDeclaration@@[public]RedisTokenStoreSerializationStrategy,  @TO@ [@Deprecated, public]RedisTokenStoreSerializationStrategy,  @AT@ 105 @LENGTH@ 219
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RedisTokenStoreSerializationStrategy,  @AT@ 283 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:SparkSkewJoinProcCtx, Task<? extends Serializable> task, ParseContext parseCtx,  @TO@ public, voidMethodName:SparkSkewJoinProcCtx, Task<?> task, ParseContext parseCtx,  @AT@ 4833 @LENGTH@ 222
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 4861 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4861 @LENGTH@ 28


UPD IfStatement@@if (from != null) {  final byte[] to=new byte[from.length];  System.arraycopy(from,0,to,0,to.length);  return to;} @TO@ if (from != null) {  return Arrays.copyOf(from,from.length);} @AT@ 10690 @LENGTH@ 162
---UPD Block@@ThenBody:{  final byte[] to=new byte[from.length];  System.arraycopy(from,0,to,0,to.length);  return to;} @TO@ ThenBody:{  return Arrays.copyOf(from,from.length);} @AT@ 10708 @LENGTH@ 144
------INS ReturnStatement@@MethodInvocation:Arrays.copyOf(from,from.length) @TO@ Block@@ThenBody:{  final byte[] to=new byte[from.length];  System.arraycopy(from,0,to,0,to.length);  return to;} @AT@ 10712 @LENGTH@ 40
---------INS MethodInvocation@@Arrays.copyOf(from,from.length) @TO@ ReturnStatement@@MethodInvocation:Arrays.copyOf(from,from.length) @AT@ 10719 @LENGTH@ 32
------------MOV SimpleName@@Name:System @TO@ MethodInvocation@@Arrays.copyOf(from,from.length) @AT@ 10775 @LENGTH@ 6
------------MOV SimpleName@@MethodName:arraycopy:[from, 0, to, 0, to.length] @TO@ MethodInvocation@@Arrays.copyOf(from,from.length) @AT@ 10782 @LENGTH@ 36
------DEL VariableDeclarationStatement@@final byte[] to=new byte[from.length]; @AT@ 10722 @LENGTH@ 40
---------DEL Modifier@@final @AT@ 10722 @LENGTH@ 5
---------DEL ArrayType@@byte[] @AT@ 10728 @LENGTH@ 6
------------DEL PrimitiveType@@byte @AT@ 10728 @LENGTH@ 4
---------DEL VariableDeclarationFragment@@to=new byte[from.length] @AT@ 10735 @LENGTH@ 26
------------DEL SimpleName@@to @AT@ 10735 @LENGTH@ 2
------------DEL ArrayCreation@@new byte[from.length] @AT@ 10740 @LENGTH@ 21
---------------DEL ArrayType@@byte[] @AT@ 10744 @LENGTH@ 17
------------------DEL PrimitiveType@@byte @AT@ 10744 @LENGTH@ 4
---------------DEL QualifiedName@@from.length @AT@ 10749 @LENGTH@ 11
------------------DEL SimpleName@@from @AT@ 10749 @LENGTH@ 4
------------------DEL SimpleName@@length @AT@ 10754 @LENGTH@ 6
------DEL ExpressionStatement@@MethodInvocation:System.arraycopy(from,0,to,0,to.length) @AT@ 10775 @LENGTH@ 44
---------DEL MethodInvocation@@System.arraycopy(from,0,to,0,to.length) @AT@ 10775 @LENGTH@ 43
------DEL ReturnStatement@@SimpleName:to @AT@ 10832 @LENGTH@ 10
---------DEL SimpleName@@to @AT@ 10839 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @AT@ 1917 @LENGTH@ 405
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    exchange.getOut().setBody(input.generateACK());
  }
}
).to("mock:result") @AT@ 1917 @LENGTH@ 404
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 1917 @LENGTH@ 88
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 1922 @LENGTH@ 82
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 1922 @LENGTH@ 25


UPD TypeDeclaration@@[public, static]AdvancedLambdaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLambdaEndpointBuilder, [EndpointProducerBuilder] @AT@ 4642 @LENGTH@ 2912
---DEL Modifier@@static @AT@ 4649 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]AccessTokenRequiredException, InsufficientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]AccessTokenRequiredException, InsufficientAuthenticationException @AT@ 174 @LENGTH@ 682
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]AccessTokenRequiredException, InsufficientAuthenticationException @AT@ 423 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedKubernetesResourcesQuotaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesResourcesQuotaEndpointBuilder, [EndpointProducerBuilder] @AT@ 9080 @LENGTH@ 3166
---DEL Modifier@@static @AT@ 9087 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:expire(Mono.just(new ExpireCommand(key,timeout))).next().map(BooleanResponse::getOutput) @TO@ MethodInvocation:pExpire(Mono.just(new ExpireCommand(key,timeout))).next().map(BooleanResponse::getOutput) @AT@ 15083 @LENGTH@ 97
---UPD MethodInvocation@@expire(Mono.just(new ExpireCommand(key,timeout))).next().map(BooleanResponse::getOutput) @TO@ pExpire(Mono.just(new ExpireCommand(key,timeout))).next().map(BooleanResponse::getOutput) @AT@ 15090 @LENGTH@ 89
------UPD MethodInvocation@@MethodName:expire:[Mono.just(new ExpireCommand(key,timeout))] @TO@ MethodName:pExpire:[Mono.just(new ExpireCommand(key,timeout))] @AT@ 15090 @LENGTH@ 50


UPD TypeDeclaration@@[public]OAuthMethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @TO@ [@Deprecated, public]OAuthMethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @AT@ 1060 @LENGTH@ 2555
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthMethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @AT@ 1281 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ExpiredOAuthTokenException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ExpiredOAuthTokenException, OAuthException @AT@ 753 @LENGTH@ 165
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ExpiredOAuthTokenException, OAuthException @AT@ 1002 @LENGTH@ 11


UPD IfStatement@@if (this.key == null) {  this.key=UUID.randomUUID().toString();} @TO@ if (this.key == null) {  if (this.rememberMeServices instanceof AbstractRememberMeServices) {    this.key=((AbstractRememberMeServices)rememberMeServices).getKey();  } else {    this.key=UUID.randomUUID().toString();  }} @AT@ 17044 @LENGTH@ 71
---INS Block@@ThenBody:{  if (this.rememberMeServices instanceof AbstractRememberMeServices) {    this.key=((AbstractRememberMeServices)rememberMeServices).getKey();  } else {    this.key=UUID.randomUUID().toString();  }} @TO@ IfStatement@@if (this.key == null) {  this.key=UUID.randomUUID().toString();} @AT@ 17066 @LENGTH@ 214
------INS IfStatement@@if (this.rememberMeServices instanceof AbstractRememberMeServices) {  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} else {  this.key=UUID.randomUUID().toString();} @TO@ Block@@ThenBody:{  if (this.rememberMeServices instanceof AbstractRememberMeServices) {    this.key=((AbstractRememberMeServices)rememberMeServices).getKey();  } else {    this.key=UUID.randomUUID().toString();  }} @AT@ 17071 @LENGTH@ 205
---------MOV Block@@ThenBody:{  this.key=UUID.randomUUID().toString();} @TO@ IfStatement@@if (this.rememberMeServices instanceof AbstractRememberMeServices) {  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} else {  this.key=UUID.randomUUID().toString();} @AT@ 17066 @LENGTH@ 49
---------INS InstanceofExpression@@this.rememberMeServices instanceof AbstractRememberMeServices @TO@ IfStatement@@if (this.rememberMeServices instanceof AbstractRememberMeServices) {  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} else {  this.key=UUID.randomUUID().toString();} @AT@ 17075 @LENGTH@ 61
------------INS FieldAccess@@this.rememberMeServices @TO@ InstanceofExpression@@this.rememberMeServices instanceof AbstractRememberMeServices @AT@ 17075 @LENGTH@ 23
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.rememberMeServices @AT@ 17075 @LENGTH@ 4
---------------INS SimpleName@@rememberMeServices @TO@ FieldAccess@@this.rememberMeServices @AT@ 17080 @LENGTH@ 18
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@this.rememberMeServices instanceof AbstractRememberMeServices @AT@ 17099 @LENGTH@ 10
------------INS SimpleType@@AbstractRememberMeServices @TO@ InstanceofExpression@@this.rememberMeServices instanceof AbstractRememberMeServices @AT@ 17110 @LENGTH@ 26
---------INS Block@@ThenBody:{  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} @TO@ IfStatement@@if (this.rememberMeServices instanceof AbstractRememberMeServices) {  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} else {  this.key=UUID.randomUUID().toString();} @AT@ 17138 @LENGTH@ 81
------------INS ExpressionStatement@@Assignment:this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @TO@ Block@@ThenBody:{  this.key=((AbstractRememberMeServices)rememberMeServices).getKey();} @AT@ 17144 @LENGTH@ 70
---------------INS Assignment@@this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @TO@ ExpressionStatement@@Assignment:this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17144 @LENGTH@ 69
------------------INS FieldAccess@@this.key @TO@ Assignment@@this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17144 @LENGTH@ 8
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.key @AT@ 17144 @LENGTH@ 4
---------------------INS SimpleName@@key @TO@ FieldAccess@@this.key @AT@ 17149 @LENGTH@ 3
------------------INS Operator@@= @TO@ Assignment@@this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17152 @LENGTH@ 1
------------------INS MethodInvocation@@((AbstractRememberMeServices)rememberMeServices).getKey() @TO@ Assignment@@this.key=((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17155 @LENGTH@ 58
---------------------INS ParenthesizedExpression@@((AbstractRememberMeServices)rememberMeServices) @TO@ MethodInvocation@@((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17155 @LENGTH@ 49
------------------------INS CastExpression@@(AbstractRememberMeServices)rememberMeServices @TO@ ParenthesizedExpression@@((AbstractRememberMeServices)rememberMeServices) @AT@ 17156 @LENGTH@ 47
---------------------------INS SimpleType@@AbstractRememberMeServices @TO@ CastExpression@@(AbstractRememberMeServices)rememberMeServices @AT@ 17157 @LENGTH@ 26
---------------------------INS SimpleName@@rememberMeServices @TO@ CastExpression@@(AbstractRememberMeServices)rememberMeServices @AT@ 17185 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@((AbstractRememberMeServices)rememberMeServices).getKey() @AT@ 17205 @LENGTH@ 8
---UPD Block@@ThenBody:{  this.key=UUID.randomUUID().toString();} @TO@ ElseBody:{  this.key=UUID.randomUUID().toString();} @AT@ 17066 @LENGTH@ 49


UPD MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @TO@ public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository, String filterProcessesUrl,  @AT@ 2106 @LENGTH@ 528
---UPD SuperConstructorInvocation@@super(DEFAULT_FILTER_PROCESSES_URI);
 @TO@ super(filterProcessesUrl);
 @AT@ 2220 @LENGTH@ 36
------UPD SimpleName@@DEFAULT_FILTER_PROCESSES_URI @TO@ filterProcessesUrl @AT@ 2226 @LENGTH@ 28
---UPD ExpressionStatement@@Assignment:this.matcher=new AntPathRequestMatcher(DEFAULT_FILTER_PROCESSES_URI) @TO@ Assignment:this.matcher=new AntPathRequestMatcher(filterProcessesUrl) @AT@ 2366 @LENGTH@ 71
------UPD Assignment@@this.matcher=new AntPathRequestMatcher(DEFAULT_FILTER_PROCESSES_URI) @TO@ this.matcher=new AntPathRequestMatcher(filterProcessesUrl) @AT@ 2366 @LENGTH@ 70
---------UPD ClassInstanceCreation@@AntPathRequestMatcher[DEFAULT_FILTER_PROCESSES_URI] @TO@ AntPathRequestMatcher[filterProcessesUrl] @AT@ 2381 @LENGTH@ 55
------------UPD SimpleName@@DEFAULT_FILTER_PROCESSES_URI @TO@ filterProcessesUrl @AT@ 2407 @LENGTH@ 28
---INS SingleVariableDeclaration@@String filterProcessesUrl @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2414 @LENGTH@ 25
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String filterProcessesUrl @AT@ 2414 @LENGTH@ 6
------INS SimpleName@@filterProcessesUrl @TO@ SingleVariableDeclaration@@String filterProcessesUrl @AT@ 2421 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(filterProcessesUrl,"filterProcessesUrl must contain a URL pattern") @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2581 @LENGTH@ 84
------INS MethodInvocation@@Assert.hasText(filterProcessesUrl,"filterProcessesUrl must contain a URL pattern") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(filterProcessesUrl,"filterProcessesUrl must contain a URL pattern") @AT@ 2581 @LENGTH@ 83
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(filterProcessesUrl,"filterProcessesUrl must contain a URL pattern") @AT@ 2581 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[filterProcessesUrl, "filterProcessesUrl must contain a URL pattern"] @TO@ MethodInvocation@@Assert.hasText(filterProcessesUrl,"filterProcessesUrl must contain a URL pattern") @AT@ 2588 @LENGTH@ 76
------------INS SimpleName@@filterProcessesUrl @TO@ SimpleName@@MethodName:hasText:[filterProcessesUrl, "filterProcessesUrl must contain a URL pattern"] @AT@ 2596 @LENGTH@ 18
------------INS StringLiteral@@"filterProcessesUrl must contain a URL pattern" @TO@ SimpleName@@MethodName:hasText:[filterProcessesUrl, "filterProcessesUrl must contain a URL pattern"] @AT@ 2616 @LENGTH@ 47
---INS ExpressionStatement@@MethodInvocation:Assert.isTrue(filterProcessesUrl.contains("{registrationId}"),"filterProcessesUrl must contain a {registrationId} match variable") @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2668 @LENGTH@ 144
------INS MethodInvocation@@Assert.isTrue(filterProcessesUrl.contains("{registrationId}"),"filterProcessesUrl must contain a {registrationId} match variable") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(filterProcessesUrl.contains("{registrationId}"),"filterProcessesUrl must contain a {registrationId} match variable") @AT@ 2668 @LENGTH@ 143
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(filterProcessesUrl.contains("{registrationId}"),"filterProcessesUrl must contain a {registrationId} match variable") @AT@ 2668 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[filterProcessesUrl.contains("{registrationId}"), "filterProcessesUrl must contain a {registrationId} match variable"] @TO@ MethodInvocation@@Assert.isTrue(filterProcessesUrl.contains("{registrationId}"),"filterProcessesUrl must contain a {registrationId} match variable") @AT@ 2675 @LENGTH@ 136
------------INS MethodInvocation@@filterProcessesUrl.contains("{registrationId}") @TO@ SimpleName@@MethodName:isTrue:[filterProcessesUrl.contains("{registrationId}"), "filterProcessesUrl must contain a {registrationId} match variable"] @AT@ 2687 @LENGTH@ 47
---------------INS SimpleName@@Name:filterProcessesUrl @TO@ MethodInvocation@@filterProcessesUrl.contains("{registrationId}") @AT@ 2687 @LENGTH@ 18
---------------INS SimpleName@@MethodName:contains:["{registrationId}"] @TO@ MethodInvocation@@filterProcessesUrl.contains("{registrationId}") @AT@ 2706 @LENGTH@ 28
------------------INS StringLiteral@@"{registrationId}" @TO@ SimpleName@@MethodName:contains:["{registrationId}"] @AT@ 2715 @LENGTH@ 18
------------INS StringLiteral@@"filterProcessesUrl must contain a {registrationId} match variable" @TO@ SimpleName@@MethodName:isTrue:[filterProcessesUrl.contains("{registrationId}"), "filterProcessesUrl must contain a {registrationId} match variable"] @AT@ 2740 @LENGTH@ 67
---INS ExpressionStatement@@MethodInvocation:setRequiresAuthenticationRequestMatcher(this.matcher) @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2879 @LENGTH@ 54
------INS MethodInvocation@@setRequiresAuthenticationRequestMatcher(this.matcher) @TO@ ExpressionStatement@@MethodInvocation:setRequiresAuthenticationRequestMatcher(this.matcher) @AT@ 2879 @LENGTH@ 53
---------INS SimpleName@@MethodName:setRequiresAuthenticationRequestMatcher:[this.matcher] @TO@ MethodInvocation@@setRequiresAuthenticationRequestMatcher(this.matcher) @AT@ 2879 @LENGTH@ 53
------------INS FieldAccess@@this.matcher @TO@ SimpleName@@MethodName:setRequiresAuthenticationRequestMatcher:[this.matcher] @AT@ 2919 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.matcher @AT@ 2919 @LENGTH@ 4
---------------INS SimpleName@@matcher @TO@ FieldAccess@@this.matcher @AT@ 2924 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]JoltTransformType,  @TO@ [static]JoltTransformType,  @AT@ 8018 @LENGTH@ 93
---DEL Modifier@@public @AT@ 8018 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @TO@ TypeDeclaration@@[public]RefreshTokenReactiveOAuth2AuthorizedClientProviderTests,  @AT@ 6161 @LENGTH@ 769
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6161 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6168 @LENGTH@ 4
---INS SimpleName@@MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6173 @LENGTH@ 76
---INS VariableDeclarationStatement@@RefreshTokenReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider(); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6256 @LENGTH@ 139
------INS SimpleType@@RefreshTokenReactiveOAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@RefreshTokenReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider(); @AT@ 6256 @LENGTH@ 50
------INS VariableDeclarationFragment@@authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider() @TO@ VariableDeclarationStatement@@RefreshTokenReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider(); @AT@ 6307 @LENGTH@ 87
---------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider() @AT@ 6307 @LENGTH@ 24
---------INS ClassInstanceCreation@@RefreshTokenReactiveOAuth2AuthorizedClientProvider[] @TO@ VariableDeclarationFragment@@authorizedClientProvider=new RefreshTokenReactiveOAuth2AuthorizedClientProvider() @AT@ 6338 @LENGTH@ 56
------------INS New@@new @TO@ ClassInstanceCreation@@RefreshTokenReactiveOAuth2AuthorizedClientProvider[] @AT@ 6338 @LENGTH@ 3
------------INS SimpleType@@RefreshTokenReactiveOAuth2AuthorizedClientProvider @TO@ ClassInstanceCreation@@RefreshTokenReactiveOAuth2AuthorizedClientProvider[] @AT@ 6342 @LENGTH@ 50
---INS ExpressionStatement@@MethodInvocation:authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6398 @LENGTH@ 60
------INS MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 6398 @LENGTH@ 59
---------INS SimpleName@@Name:authorizedClientProvider @TO@ MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 6398 @LENGTH@ 24
---------INS SimpleName@@MethodName:setClockSkew:[Duration.ofHours(24)] @TO@ MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 6423 @LENGTH@ 34
------------INS MethodInvocation@@Duration.ofHours(24) @TO@ SimpleName@@MethodName:setClockSkew:[Duration.ofHours(24)] @AT@ 6436 @LENGTH@ 20
---------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofHours(24) @AT@ 6436 @LENGTH@ 8
---------------INS SimpleName@@MethodName:ofHours:[24] @TO@ MethodInvocation@@Duration.ofHours(24) @AT@ 6445 @LENGTH@ 11
------------------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:ofHours:[24] @AT@ 6453 @LENGTH@ 2
---INS VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6461 @LENGTH@ 205
------INS SimpleType@@OAuth2AuthorizedClient @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()); @AT@ 6461 @LENGTH@ 22
------INS VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()) @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()); @AT@ 6484 @LENGTH@ 181
---------INS SimpleName@@authorizedClient @TO@ VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()) @AT@ 6484 @LENGTH@ 16
---------INS ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @TO@ VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),this.authorizedClient.getAccessToken(),this.authorizedClient.getRefreshToken()) @AT@ 6503 @LENGTH@ 162
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6503 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthorizedClient @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6507 @LENGTH@ 22
------------INS FieldAccess@@this.clientRegistration @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6530 @LENGTH@ 23
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 6530 @LENGTH@ 4
---------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 6535 @LENGTH@ 18
------------INS MethodInvocation@@this.principal.getName() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6555 @LENGTH@ 24
---------------INS FieldAccess@@this.principal @TO@ MethodInvocation@@this.principal.getName() @AT@ 6555 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principal @AT@ 6555 @LENGTH@ 4
------------------INS SimpleName@@principal @TO@ FieldAccess@@this.principal @AT@ 6560 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@this.principal.getName() @AT@ 6570 @LENGTH@ 9
------------INS MethodInvocation@@this.authorizedClient.getAccessToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6585 @LENGTH@ 38
---------------INS FieldAccess@@this.authorizedClient @TO@ MethodInvocation@@this.authorizedClient.getAccessToken() @AT@ 6585 @LENGTH@ 21
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClient @AT@ 6585 @LENGTH@ 4
------------------INS SimpleName@@authorizedClient @TO@ FieldAccess@@this.authorizedClient @AT@ 6590 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@this.authorizedClient.getAccessToken() @AT@ 6607 @LENGTH@ 16
------------INS MethodInvocation@@this.authorizedClient.getRefreshToken() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), this.authorizedClient.getAccessToken(), this.authorizedClient.getRefreshToken()] @AT@ 6625 @LENGTH@ 39
---------------INS FieldAccess@@this.authorizedClient @TO@ MethodInvocation@@this.authorizedClient.getRefreshToken() @AT@ 6625 @LENGTH@ 21
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClient @AT@ 6625 @LENGTH@ 4
------------------INS SimpleName@@authorizedClient @TO@ FieldAccess@@this.authorizedClient @AT@ 6630 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@this.authorizedClient.getRefreshToken() @AT@ 6647 @LENGTH@ 17
---INS VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6670 @LENGTH@ 168
------INS SimpleType@@OAuth2AuthorizationContext @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @AT@ 6670 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @AT@ 6697 @LENGTH@ 140
---------INS SimpleName@@authorizationContext @TO@ VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6697 @LENGTH@ 20
---------INS MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @TO@ VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6724 @LENGTH@ 113
------------INS MethodInvocation@@MethodName:principal:[this.principal] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6724 @LENGTH@ 98
---------------INS FieldAccess@@this.principal @TO@ MethodInvocation@@MethodName:principal:[this.principal] @AT@ 6807 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principal @AT@ 6807 @LENGTH@ 4
------------------INS SimpleName@@principal @TO@ FieldAccess@@this.principal @AT@ 6812 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:withAuthorizedClient:[authorizedClient] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6724 @LENGTH@ 65
---------------INS SimpleName@@authorizedClient @TO@ MethodInvocation@@MethodName:withAuthorizedClient:[authorizedClient] @AT@ 6772 @LENGTH@ 16
------------INS SimpleName@@Name:OAuth2AuthorizationContext @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6724 @LENGTH@ 26
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 6830 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizedClientProvider.authorize(authorizationContext).block()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenAuthorizedAndAccessTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 6841 @LENGTH@ 86
------INS MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext).block()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizedClientProvider.authorize(authorizationContext).block()).isNull() @AT@ 6841 @LENGTH@ 85
---------INS MethodInvocation@@MethodName:assertThat:[authorizedClientProvider.authorize(authorizationContext).block()] @TO@ MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext).block()).isNull() @AT@ 6841 @LENGTH@ 76
------------INS MethodInvocation@@authorizedClientProvider.authorize(authorizationContext).block() @TO@ MethodInvocation@@MethodName:assertThat:[authorizedClientProvider.authorize(authorizationContext).block()] @AT@ 6852 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:authorize:[authorizationContext] @TO@ MethodInvocation@@authorizedClientProvider.authorize(authorizationContext).block() @AT@ 6852 @LENGTH@ 56
------------------INS SimpleName@@authorizationContext @TO@ MethodInvocation@@MethodName:authorize:[authorizationContext] @AT@ 6887 @LENGTH@ 20
---------------INS SimpleName@@Name:authorizedClientProvider @TO@ MethodInvocation@@authorizedClientProvider.authorize(authorizationContext).block() @AT@ 6852 @LENGTH@ 24
---------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@authorizedClientProvider.authorize(authorizationContext).block() @AT@ 6909 @LENGTH@ 7
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext).block()).isNull() @AT@ 6918 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]ConsistencyLevel,  @TO@ [static]ConsistencyLevel,  @AT@ 52896 @LENGTH@ 146
---DEL Modifier@@public @AT@ 52896 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]OAuthScope,  @TO@ [static]OAuthScope,  @AT@ 45289 @LENGTH@ 176
---DEL Modifier@@public @AT@ 45289 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:setBeforeSendReplyPostProcessors, MessagePostProcessor... beforeSendReplyPostProcessors,  @TO@ public, void, MethodName:setBeforeSendReplyPostProcessors, MessagePostProcessor... postProcessors,  @AT@ 10105 @LENGTH@ 174
---UPD SingleVariableDeclaration@@MessagePostProcessor... beforeSendReplyPostProcessors @TO@ MessagePostProcessor... postProcessors @AT@ 10150 @LENGTH@ 53
------UPD SimpleName@@beforeSendReplyPostProcessors @TO@ postProcessors @AT@ 10174 @LENGTH@ 29
---UPD ExpressionStatement@@Assignment:this.beforeSendReplyPostProcessors=beforeSendReplyPostProcessors @TO@ Assignment:this.beforeSendReplyPostProcessors=Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 10209 @LENGTH@ 67
------UPD Assignment@@this.beforeSendReplyPostProcessors=beforeSendReplyPostProcessors @TO@ this.beforeSendReplyPostProcessors=Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 10209 @LENGTH@ 66
---------DEL SimpleName@@beforeSendReplyPostProcessors @AT@ 10246 @LENGTH@ 29
---------INS MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @TO@ Assignment@@this.beforeSendReplyPostProcessors=beforeSendReplyPostProcessors @AT@ 10570 @LENGTH@ 52
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 10570 @LENGTH@ 6
------------INS SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @TO@ MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 10577 @LENGTH@ 45
---------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @AT@ 10584 @LENGTH@ 14
---------------INS QualifiedName@@postProcessors.length @TO@ SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @AT@ 10600 @LENGTH@ 21
------------------INS SimpleName@@postProcessors @TO@ QualifiedName@@postProcessors.length @AT@ 10600 @LENGTH@ 14
------------------INS SimpleName@@length @TO@ QualifiedName@@postProcessors.length @AT@ 10615 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(postProcessors,"'postProcessors' cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setBeforeSendReplyPostProcessors, MessagePostProcessor... beforeSendReplyPostProcessors,  @AT@ 10377 @LENGTH@ 66
------INS MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 10377 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 10377 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @TO@ MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 10384 @LENGTH@ 58
------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @AT@ 10392 @LENGTH@ 14
------------INS StringLiteral@@"'postProcessors' cannot be null" @TO@ SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @AT@ 10408 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @TO@ MethodDeclaration@@public, void, MethodName:setBeforeSendReplyPostProcessors, MessagePostProcessor... beforeSendReplyPostProcessors,  @AT@ 10446 @LENGTH@ 84
------INS MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @TO@ ExpressionStatement@@MethodInvocation:Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 10446 @LENGTH@ 83
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 10446 @LENGTH@ 6
---------INS SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @TO@ MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 10453 @LENGTH@ 76
------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @AT@ 10468 @LENGTH@ 14
------------INS StringLiteral@@"'postProcessors' cannot have null elements" @TO@ SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @AT@ 10484 @LENGTH@ 44


UPD EnumDeclaration@@[public, static]LockModeType,  @TO@ [static]LockModeType,  @AT@ 69856 @LENGTH@ 172
---DEL Modifier@@public @AT@ 69856 @LENGTH@ 6


UPD MethodDeclaration@@default, DataFormatEndpointBuilder, MethodName:dataFormat, String path,  @TO@ default, DataFormatEndpointBuilder, MethodName:dataformat, String path,  @AT@ 4649 @LENGTH@ 402
---UPD SimpleName@@MethodName:dataFormat @TO@ MethodName:dataformat @AT@ 4683 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]AdvancedDozerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDozerEndpointBuilder, [EndpointProducerBuilder] @AT@ 5837 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 5844 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]XmlCommand,  @TO@ [static]XmlCommand,  @AT@ 43873 @LENGTH@ 59
---DEL Modifier@@public @AT@ 43873 @LENGTH@ 6


UPD TypeDeclaration@@[public]ExtraTrustConsumerDetails, [ConsumerDetails] @TO@ [@Deprecated, public]ExtraTrustConsumerDetails, [ConsumerDetails] @AT@ 729 @LENGTH@ 689
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExtraTrustConsumerDetails, [ConsumerDetails] @AT@ 950 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, String[], [BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="}] @TO@ private, static, final, String[], [BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC=","AB"}] @AT@ 1616 @LENGTH@ 136
---UPD VariableDeclarationFragment@@BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @TO@ BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC=","AB"} @AT@ 1646 @LENGTH@ 105
------UPD ArrayInitializer@@{"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @TO@ {"ZE==","ZmC=","Zm9vYE==","Zm9vYmC=","AB"} @AT@ 1672 @LENGTH@ 79
---------INS StringLiteral@@"AB" @TO@ ArrayInitializer@@{"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @AT@ 1754 @LENGTH@ 4


UPD IfStatement@@if (size() >= maximumCacheSize) {  V value=eldest.getValue();  evict.accept(value);  return true;} @TO@ if (size() > maximumCacheSize) {  V value=eldest.getValue();  evict.accept(value);  return true;} @AT@ 7238 @LENGTH@ 158
---UPD InfixExpression@@size() >= maximumCacheSize @TO@ size() > maximumCacheSize @AT@ 7242 @LENGTH@ 26
------UPD Operator@@>= @TO@ > @AT@ 7248 @LENGTH@ 2


UPD TypeDeclaration@@[public, static]HazelcastInstanceEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]HazelcastInstanceEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1471 @LENGTH@ 8362
---DEL Modifier@@static @AT@ 1478 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]EjbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]EjbEndpointBuilder, [EndpointProducerBuilder] @AT@ 1414 @LENGTH@ 2546
---DEL Modifier@@static @AT@ 1421 @LENGTH@ 6


MOV FieldDeclaration@@public, boolean, [endpointBridgeErrorHandler] @TO@ TypeDeclaration@@[@ConfigurationProperties(prefix="camel.springboot"), public]CamelConfigurationProperties, DefaultConfigurationProperties<CamelConfigurationProperties> @AT@ 13347 @LENGTH@ 42


UPD EnumDeclaration@@[public, static]DisruptorProducerType,  @TO@ [static]DisruptorProducerType,  @AT@ 28725 @LENGTH@ 71
---DEL Modifier@@public @AT@ 28725 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:distributionRatioList.add(new Integer(ratio.trim())) @TO@ MethodInvocation:distributionRatioList.add(Integer.parseInt(ratio.trim())) @AT@ 2021 @LENGTH@ 53
---UPD MethodInvocation@@distributionRatioList.add(new Integer(ratio.trim())) @TO@ distributionRatioList.add(Integer.parseInt(ratio.trim())) @AT@ 2021 @LENGTH@ 52
------UPD SimpleName@@MethodName:add:[new Integer(ratio.trim())] @TO@ MethodName:add:[Integer.parseInt(ratio.trim())] @AT@ 2043 @LENGTH@ 30
---------INS MethodInvocation@@Integer.parseInt(ratio.trim()) @TO@ SimpleName@@MethodName:add:[new Integer(ratio.trim())] @AT@ 2047 @LENGTH@ 30
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(ratio.trim()) @AT@ 2047 @LENGTH@ 7
------------INS SimpleName@@MethodName:parseInt:[ratio.trim()] @TO@ MethodInvocation@@Integer.parseInt(ratio.trim()) @AT@ 2055 @LENGTH@ 22
---------------INS MethodInvocation@@ratio.trim() @TO@ SimpleName@@MethodName:parseInt:[ratio.trim()] @AT@ 2064 @LENGTH@ 12
------------------MOV SimpleName@@Name:ratio @TO@ MethodInvocation@@ratio.trim() @AT@ 2059 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:trim:[] @TO@ MethodInvocation@@ratio.trim() @AT@ 2065 @LENGTH@ 6
---------DEL ClassInstanceCreation@@Integer[ratio.trim()] @AT@ 2047 @LENGTH@ 25
------------DEL New@@new @AT@ 2047 @LENGTH@ 3
------------DEL SimpleType@@Integer @AT@ 2051 @LENGTH@ 7
------------DEL MethodInvocation@@ratio.trim() @AT@ 2059 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2916 @LENGTH@ 149
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2987 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2987 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2992 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]Type,  @TO@ [static]Type,  @AT@ 6957 @LENGTH@ 108
---DEL Modifier@@public @AT@ 6957 @LENGTH@ 6


UPD LambdaExpression@@response -> {
  if (!response.statusCode().is2xxSuccessful()) {
    throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);
  }
  return response.body(oauth2AccessTokenResponse());
}
 @TO@ response -> {
  HttpStatus status=HttpStatus.resolve(response.rawStatusCode());
  if (status == null || !status.is2xxSuccessful()) {
    return response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)));
  }
  return response.body(oauth2AccessTokenResponse());
}
 @AT@ 3288 @LENGTH@ 451
---UPD IfStatement@@if (!response.statusCode().is2xxSuccessful()) {  throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);} @TO@ if (status == null || !status.is2xxSuccessful()) {  return response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)));} @AT@ 3307 @LENGTH@ 373
------DEL PrefixExpression@@!response.statusCode().is2xxSuccessful() @AT@ 3311 @LENGTH@ 40
------UPD Block@@ThenBody:{  throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);} @TO@ ThenBody:{  return response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)));} @AT@ 3352 @LENGTH@ 328
---------DEL ThrowStatement@@MethodInvocation:WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null) @AT@ 3483 @LENGTH@ 189
---------INS ReturnStatement@@MethodInvocation:response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @TO@ Block@@ThenBody:{  throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);} @AT@ 3717 @LENGTH@ 293
------------INS MethodInvocation@@response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @TO@ ReturnStatement@@MethodInvocation:response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @AT@ 3724 @LENGTH@ 285
---------------INS MethodInvocation@@MethodName:map:[DataBufferUtils::release] @TO@ MethodInvocation@@response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @AT@ 3724 @LENGTH@ 76
---------------INS MethodInvocation@@MethodName:bodyToFlux:[DataBuffer.class] @TO@ MethodInvocation@@response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @AT@ 3724 @LENGTH@ 37
------------------INS TypeLiteral@@DataBuffer.class @TO@ MethodInvocation@@MethodName:bodyToFlux:[DataBuffer.class] @AT@ 3744 @LENGTH@ 16
---------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @AT@ 3724 @LENGTH@ 8
---------------INS SimpleName@@MethodName:then:[Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))] @TO@ MethodInvocation@@response.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))) @AT@ 3810 @LENGTH@ 199
------------------INS MethodInvocation@@Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)) @TO@ SimpleName@@MethodName:then:[Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null))] @AT@ 3815 @LENGTH@ 193
---------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)) @AT@ 3815 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:error:[WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)] @TO@ MethodInvocation@@Mono.error(WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)) @AT@ 3820 @LENGTH@ 188
------------------------MOV MethodInvocation@@WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null) @TO@ SimpleName@@MethodName:error:[WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null)] @AT@ 3489 @LENGTH@ 182
------INS InfixExpression@@status == null || !status.is2xxSuccessful() @TO@ IfStatement@@if (!response.statusCode().is2xxSuccessful()) {  throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);} @AT@ 3541 @LENGTH@ 43
---------INS InfixExpression@@status == null @TO@ InfixExpression@@status == null || !status.is2xxSuccessful() @AT@ 3541 @LENGTH@ 14
------------INS SimpleName@@status @TO@ InfixExpression@@status == null @AT@ 3541 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@status == null @AT@ 3547 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@status == null @AT@ 3551 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@status == null || !status.is2xxSuccessful() @AT@ 3555 @LENGTH@ 2
---------INS PrefixExpression@@!status.is2xxSuccessful() @TO@ InfixExpression@@status == null || !status.is2xxSuccessful() @AT@ 3559 @LENGTH@ 25
------------MOV Operator@@! @TO@ PrefixExpression@@!status.is2xxSuccessful() @AT@ 3311 @LENGTH@ 1
------------MOV MethodInvocation@@response.statusCode().is2xxSuccessful() @TO@ PrefixExpression@@!status.is2xxSuccessful() @AT@ 3312 @LENGTH@ 39
---------------DEL MethodInvocation@@MethodName:statusCode:[] @AT@ 3312 @LENGTH@ 21
---------------UPD SimpleName@@Name:response @TO@ Name:status @AT@ 3312 @LENGTH@ 8
---INS VariableDeclarationStatement@@HttpStatus status=HttpStatus.resolve(response.rawStatusCode()); @TO@ LambdaExpression@@response -> {
  if (!response.statusCode().is2xxSuccessful()) {
    throw WebClientResponseException.create(response.rawStatusCode(),"Cannot get token, expected 2xx HTTP Status code",null,null,null);
  }
  return response.body(oauth2AccessTokenResponse());
}
 @AT@ 3465 @LENGTH@ 65
------INS SimpleType@@HttpStatus @TO@ VariableDeclarationStatement@@HttpStatus status=HttpStatus.resolve(response.rawStatusCode()); @AT@ 3465 @LENGTH@ 10
------INS VariableDeclarationFragment@@status=HttpStatus.resolve(response.rawStatusCode()) @TO@ VariableDeclarationStatement@@HttpStatus status=HttpStatus.resolve(response.rawStatusCode()); @AT@ 3476 @LENGTH@ 53
---------INS SimpleName@@status @TO@ VariableDeclarationFragment@@status=HttpStatus.resolve(response.rawStatusCode()) @AT@ 3476 @LENGTH@ 6
---------INS MethodInvocation@@HttpStatus.resolve(response.rawStatusCode()) @TO@ VariableDeclarationFragment@@status=HttpStatus.resolve(response.rawStatusCode()) @AT@ 3485 @LENGTH@ 44
------------INS SimpleName@@Name:HttpStatus @TO@ MethodInvocation@@HttpStatus.resolve(response.rawStatusCode()) @AT@ 3485 @LENGTH@ 10
------------INS SimpleName@@MethodName:resolve:[response.rawStatusCode()] @TO@ MethodInvocation@@HttpStatus.resolve(response.rawStatusCode()) @AT@ 3496 @LENGTH@ 33
---------------INS MethodInvocation@@response.rawStatusCode() @TO@ SimpleName@@MethodName:resolve:[response.rawStatusCode()] @AT@ 3504 @LENGTH@ 24
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.rawStatusCode() @AT@ 3504 @LENGTH@ 8
------------------INS SimpleName@@MethodName:rawStatusCode:[] @TO@ MethodInvocation@@response.rawStatusCode() @AT@ 3513 @LENGTH@ 15


UPD MethodDeclaration@@public, Builder, MethodName:attributes, Map<String,Object> attributes,  @TO@ public, Builder, MethodName:attributes, Consumer<Map<String,Object>> attributesConsumer,  @AT@ 5795 @LENGTH@ 112
---UPD SingleVariableDeclaration@@Map<String,Object> attributes @TO@ Consumer<Map<String,Object>> attributesConsumer @AT@ 5821 @LENGTH@ 30
------DEL ParameterizedType@@Map<String,Object> @AT@ 5821 @LENGTH@ 19
------UPD SimpleName@@attributes @TO@ attributesConsumer @AT@ 5841 @LENGTH@ 10
------INS ParameterizedType@@Consumer<Map<String,Object>> @TO@ SingleVariableDeclaration@@Map<String,Object> attributes @AT@ 5943 @LENGTH@ 29
---------INS SimpleType@@Consumer @TO@ ParameterizedType@@Consumer<Map<String,Object>> @AT@ 5943 @LENGTH@ 8
---------INS ParameterizedType@@Map<String,Object> @TO@ ParameterizedType@@Consumer<Map<String,Object>> @AT@ 5952 @LENGTH@ 19
------------MOV SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 5821 @LENGTH@ 3
------------MOV SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5825 @LENGTH@ 6
------------MOV SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5833 @LENGTH@ 6
---DEL ExpressionStatement@@Assignment:this.attributes=attributes @AT@ 5858 @LENGTH@ 29
---INS IfStatement@@if (this.attributes == null) {  this.attributes=new HashMap<>();} @TO@ MethodDeclaration@@public, Builder, MethodName:attributes, Map<String,Object> attributes,  @AT@ 5998 @LENGTH@ 74
------INS InfixExpression@@this.attributes == null @TO@ IfStatement@@if (this.attributes == null) {  this.attributes=new HashMap<>();} @AT@ 6002 @LENGTH@ 23
---------INS FieldAccess@@this.attributes @TO@ InfixExpression@@this.attributes == null @AT@ 6002 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.attributes @AT@ 6002 @LENGTH@ 4
------------INS SimpleName@@attributes @TO@ FieldAccess@@this.attributes @AT@ 6007 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@this.attributes == null @AT@ 6017 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.attributes == null @AT@ 6021 @LENGTH@ 4
------INS Block@@ThenBody:{  this.attributes=new HashMap<>();} @TO@ IfStatement@@if (this.attributes == null) {  this.attributes=new HashMap<>();} @AT@ 6027 @LENGTH@ 45
---------INS ExpressionStatement@@Assignment:this.attributes=new HashMap<>() @TO@ Block@@ThenBody:{  this.attributes=new HashMap<>();} @AT@ 6033 @LENGTH@ 34
------------MOV Assignment@@this.attributes=attributes @TO@ ExpressionStatement@@Assignment:this.attributes=new HashMap<>() @AT@ 5858 @LENGTH@ 28
---------------DEL SimpleName@@attributes @AT@ 5876 @LENGTH@ 10
---------------INS ClassInstanceCreation@@HashMap<>[] @TO@ Assignment@@this.attributes=attributes @AT@ 6051 @LENGTH@ 15
------------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 6051 @LENGTH@ 3
------------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 6055 @LENGTH@ 9
---------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 6055 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:attributesConsumer.accept(this.attributes) @TO@ MethodDeclaration@@public, Builder, MethodName:attributes, Map<String,Object> attributes,  @AT@ 6076 @LENGTH@ 43
------INS MethodInvocation@@attributesConsumer.accept(this.attributes) @TO@ ExpressionStatement@@MethodInvocation:attributesConsumer.accept(this.attributes) @AT@ 6076 @LENGTH@ 42
---------INS SimpleName@@Name:attributesConsumer @TO@ MethodInvocation@@attributesConsumer.accept(this.attributes) @AT@ 6076 @LENGTH@ 18
---------INS SimpleName@@MethodName:accept:[this.attributes] @TO@ MethodInvocation@@attributesConsumer.accept(this.attributes) @AT@ 6095 @LENGTH@ 23
------------INS FieldAccess@@this.attributes @TO@ SimpleName@@MethodName:accept:[this.attributes] @AT@ 6102 @LENGTH@ 15
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.attributes @AT@ 6102 @LENGTH@ 4
---------------INS SimpleName@@attributes @TO@ FieldAccess@@this.attributes @AT@ 6107 @LENGTH@ 10


INS VariableDeclarationStatement@@final long expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis(); @TO@ MethodDeclaration@@public, void, MethodName:testLastModificationDateExisting, IOException,  @AT@ 3275 @LENGTH@ 80
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final long expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis(); @AT@ 3275 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@final long expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis(); @AT@ 3281 @LENGTH@ 4
---INS VariableDeclarationFragment@@expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis() @TO@ VariableDeclarationStatement@@final long expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis(); @AT@ 3286 @LENGTH@ 68
------INS SimpleName@@expectedMillis @TO@ VariableDeclarationFragment@@expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis() @AT@ 3286 @LENGTH@ 14
------INS MethodInvocation@@Files.getLastModifiedTime(file.toPath()).toMillis() @TO@ VariableDeclarationFragment@@expectedMillis=Files.getLastModifiedTime(file.toPath()).toMillis() @AT@ 3303 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:getLastModifiedTime:[file.toPath()] @TO@ MethodInvocation@@Files.getLastModifiedTime(file.toPath()).toMillis() @AT@ 3303 @LENGTH@ 40
------------INS MethodInvocation@@file.toPath() @TO@ MethodInvocation@@MethodName:getLastModifiedTime:[file.toPath()] @AT@ 3329 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.toPath() @AT@ 3329 @LENGTH@ 4
---------------INS SimpleName@@MethodName:toPath:[] @TO@ MethodInvocation@@file.toPath() @AT@ 3334 @LENGTH@ 8
---------INS SimpleName@@Name:Files @TO@ MethodInvocation@@Files.getLastModifiedTime(file.toPath()).toMillis() @AT@ 3303 @LENGTH@ 5
---------INS SimpleName@@MethodName:toMillis:[] @TO@ MethodInvocation@@Files.getLastModifiedTime(file.toPath()).toMillis() @AT@ 3344 @LENGTH@ 10


INS MethodDeclaration@@private, voidMethodName:ServicePortFunction,  @TO@ TypeDeclaration@@[public]ServicePortFunction,  @AT@ 1486 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ServicePortFunction,  @AT@ 1486 @LENGTH@ 7
---INS SimpleName@@MethodName:ServicePortFunction @TO@ MethodDeclaration@@private, voidMethodName:ServicePortFunction,  @AT@ 1494 @LENGTH@ 19


UPD TypeDeclaration@@[public, static]AdvancedKMSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKMSEndpointBuilder, [EndpointProducerBuilder] @AT@ 2275 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2282 @LENGTH@ 6


UPD EnumDeclaration@@[public]OAuthProviderParameter,  @TO@ [@Deprecated, public]OAuthProviderParameter,  @AT@ 730 @LENGTH@ 278
---INS MarkerAnnotation@@@Deprecated @TO@ EnumDeclaration@@[public]OAuthProviderParameter,  @AT@ 951 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1473 @LENGTH@ 954
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1480 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1485 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(parameter.getParameterIndex() >= 0,"Parameter index larger smaller than 0") @TO@ MethodInvocation:Assert.isTrue(parameter.getParameterIndex() >= 0,"Parameter index smaller than 0") @AT@ 1943 @LENGTH@ 91
---UPD MethodInvocation@@Assert.isTrue(parameter.getParameterIndex() >= 0,"Parameter index larger smaller than 0") @TO@ Assert.isTrue(parameter.getParameterIndex() >= 0,"Parameter index smaller than 0") @AT@ 1943 @LENGTH@ 90
------UPD SimpleName@@MethodName:isTrue:[parameter.getParameterIndex() >= 0, "Parameter index larger smaller than 0"] @TO@ MethodName:isTrue:[parameter.getParameterIndex() >= 0, "Parameter index smaller than 0"] @AT@ 1950 @LENGTH@ 83
---------UPD StringLiteral@@"Parameter index larger smaller than 0" @TO@ "Parameter index smaller than 0" @AT@ 1993 @LENGTH@ 39


UPD LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining());
  byte[] pkcs8=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(pkcs8));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @TO@ source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----");
  StringBuilder base64Encoded=new StringBuilder();
  for (  String line : lines) {
    if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {
      base64Encoded.append(line);
    }
  }
  byte[] pkcs8=Base64.getDecoder().decode(base64Encoded.toString());
  try {
    return (RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(pkcs8));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 2553 @LENGTH@ 647
---DEL VariableDeclarationStatement@@String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining()); @AT@ 2832 @LENGTH@ 124
------DEL VariableDeclarationFragment@@base64Encoded=lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining()) @AT@ 2839 @LENGTH@ 116
---------DEL MethodInvocation@@lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining()) @AT@ 2855 @LENGTH@ 100
------------DEL MethodInvocation@@MethodName:filter:[RsaKeyConverters::isNotPkcs8Wrapper] @AT@ 2855 @LENGTH@ 64
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 2855 @LENGTH@ 14
------------DEL SimpleName@@Name:lines @AT@ 2855 @LENGTH@ 5
------------DEL SimpleName@@MethodName:collect:[Collectors.joining()] @AT@ 2926 @LENGTH@ 29
---------------DEL MethodInvocation@@Collectors.joining() @AT@ 2934 @LENGTH@ 20
---INS VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @TO@ LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining());
  byte[] pkcs8=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(pkcs8));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 2832 @LENGTH@ 50
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @AT@ 2832 @LENGTH@ 6
------INS VariableDeclarationFragment@@base64Encoded=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @AT@ 2846 @LENGTH@ 35
---------MOV SimpleName@@base64Encoded @TO@ VariableDeclarationFragment@@base64Encoded=new StringBuilder() @AT@ 2839 @LENGTH@ 13
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@base64Encoded=new StringBuilder() @AT@ 2862 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 2862 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 2866 @LENGTH@ 13
---INS EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {    base64Encoded.append(line);  }} @TO@ LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(PKCS8_PEM_HEADER),"Key is not in PEM-encoded PKCS#8 format, " + "please check that the header begins with -----" + PKCS8_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotPkcs8Wrapper).collect(Collectors.joining());
  byte[] pkcs8=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPrivateKey)keyFactory.generatePrivate(new PKCS8EncodedKeySpec(pkcs8));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 2886 @LENGTH@ 123
------INS SingleVariableDeclaration@@String line @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 2891 @LENGTH@ 11
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String line @AT@ 2891 @LENGTH@ 6
---------INS SimpleName@@line @TO@ SingleVariableDeclaration@@String line @AT@ 2898 @LENGTH@ 4
------INS SimpleName@@lines @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 2905 @LENGTH@ 5
------INS IfStatement@@if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {  base64Encoded.append(line);} @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 2918 @LENGTH@ 86
---------INS MethodInvocation@@RsaKeyConverters.isNotPkcs8Wrapper(line) @TO@ IfStatement@@if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {  base64Encoded.append(line);} @AT@ 2922 @LENGTH@ 40
------------INS SimpleName@@Name:RsaKeyConverters @TO@ MethodInvocation@@RsaKeyConverters.isNotPkcs8Wrapper(line) @AT@ 2922 @LENGTH@ 16
------------INS SimpleName@@MethodName:isNotPkcs8Wrapper:[line] @TO@ MethodInvocation@@RsaKeyConverters.isNotPkcs8Wrapper(line) @AT@ 2939 @LENGTH@ 23
---------------INS SimpleName@@line @TO@ SimpleName@@MethodName:isNotPkcs8Wrapper:[line] @AT@ 2957 @LENGTH@ 4
---------INS Block@@ThenBody:{  base64Encoded.append(line);} @TO@ IfStatement@@if (RsaKeyConverters.isNotPkcs8Wrapper(line)) {  base64Encoded.append(line);} @AT@ 2964 @LENGTH@ 40
------------INS ExpressionStatement@@MethodInvocation:base64Encoded.append(line) @TO@ Block@@ThenBody:{  base64Encoded.append(line);} @AT@ 2971 @LENGTH@ 27
---------------INS MethodInvocation@@base64Encoded.append(line) @TO@ ExpressionStatement@@MethodInvocation:base64Encoded.append(line) @AT@ 2971 @LENGTH@ 26
------------------MOV SimpleName@@Name:Collectors @TO@ MethodInvocation@@base64Encoded.append(line) @AT@ 2934 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:joining:[] @TO@ MethodInvocation@@base64Encoded.append(line) @AT@ 2945 @LENGTH@ 9
---------------------INS SimpleName@@line @TO@ SimpleName@@MethodName:joining:[] @AT@ 2992 @LENGTH@ 4
---UPD VariableDeclarationStatement@@byte[] pkcs8=Base64.getDecoder().decode(base64Encoded); @TO@ byte[] pkcs8=Base64.getDecoder().decode(base64Encoded.toString()); @AT@ 2960 @LENGTH@ 57
------UPD VariableDeclarationFragment@@pkcs8=Base64.getDecoder().decode(base64Encoded) @TO@ pkcs8=Base64.getDecoder().decode(base64Encoded.toString()) @AT@ 2967 @LENGTH@ 49
---------UPD MethodInvocation@@Base64.getDecoder().decode(base64Encoded) @TO@ Base64.getDecoder().decode(base64Encoded.toString()) @AT@ 2975 @LENGTH@ 41
------------UPD SimpleName@@MethodName:decode:[base64Encoded] @TO@ MethodName:decode:[base64Encoded.toString()] @AT@ 2995 @LENGTH@ 21
---------------DEL SimpleName@@base64Encoded @AT@ 3002 @LENGTH@ 13
---------------INS MethodInvocation@@base64Encoded.toString() @TO@ SimpleName@@MethodName:decode:[base64Encoded] @AT@ 3055 @LENGTH@ 24
------------------INS SimpleName@@Name:base64Encoded @TO@ MethodInvocation@@base64Encoded.toString() @AT@ 3055 @LENGTH@ 13
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@base64Encoded.toString() @AT@ 3069 @LENGTH@ 10


UPD TypeDeclaration@@[public]DefaultOAuth2AccessToken, [Serializable, OAuth2AccessToken] @TO@ [@Deprecated, public]DefaultOAuth2AccessToken, [Serializable, OAuth2AccessToken] @AT@ 384 @LENGTH@ 5743
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2AccessToken, [Serializable, OAuth2AccessToken] @AT@ 561 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2ClientAuthenticationProcessingFilter, AbstractAuthenticationProcessingFilter @TO@ [@Deprecated, public]OAuth2ClientAuthenticationProcessingFilter, AbstractAuthenticationProcessingFilter @AT@ 2532 @LENGTH@ 4002
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ClientAuthenticationProcessingFilter, AbstractAuthenticationProcessingFilter @AT@ 2709 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedDigitalSignatureEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDigitalSignatureEndpointBuilder, [EndpointProducerBuilder] @AT@ 10180 @LENGTH@ 8510
---DEL Modifier@@static @AT@ 10187 @LENGTH@ 6


UPD MethodDeclaration@@default, GitHubEndpointBuilder, MethodName:gitHub, String path,  @TO@ default, GitHubEndpointBuilder, MethodName:github, String path,  @AT@ 22621 @LENGTH@ 370
---UPD SimpleName@@MethodName:gitHub @TO@ MethodName:github @AT@ 22651 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2Error("invalid_id_token","The ID Token contains invalid claims: " + claimsDetail,"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation") @TO@ ClassInstanceCreation:new OAuth2Error("invalid_id_token","The ID Token contains invalid claims: " + invalidClaims,"https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation") @AT@ 6165 @LENGTH@ 183
---UPD ClassInstanceCreation@@OAuth2Error["invalid_id_token", "The ID Token contains invalid claims: " + claimsDetail, "https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation"] @TO@ OAuth2Error["invalid_id_token", "The ID Token contains invalid claims: " + invalidClaims, "https://openid.net/specs/openid-connect-core-1_0.html#IDTokenValidation"] @AT@ 6172 @LENGTH@ 175
------UPD InfixExpression@@"The ID Token contains invalid claims: " + claimsDetail @TO@ "The ID Token contains invalid claims: " + invalidClaims @AT@ 6212 @LENGTH@ 55
---------UPD SimpleName@@claimsDetail @TO@ invalidClaims @AT@ 6255 @LENGTH@ 12


UPD TypeDeclaration@@[public, static]AdvancedElasticsearchEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedElasticsearchEndpointBuilder, [EndpointProducerBuilder] @AT@ 9627 @LENGTH@ 2145
---DEL Modifier@@static @AT@ 9634 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]BaseConsumerDetails, [ResourceSpecificConsumerDetails, ExtraTrustConsumerDetails] @TO@ [@SuppressWarnings("serial"), @Deprecated, public]BaseConsumerDetails, [ResourceSpecificConsumerDetails, ExtraTrustConsumerDetails] @AT@ 947 @LENGTH@ 3376
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]BaseConsumerDetails, [ResourceSpecificConsumerDetails, ExtraTrustConsumerDetails] @AT@ 1196 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthSecurityContext,  @TO@ [@Deprecated, public]OAuthSecurityContext,  @AT@ 167 @LENGTH@ 501
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSecurityContext,  @AT@ 388 @LENGTH@ 11


UPD Block@@ThenBody:{  List<Task<? extends Serializable>> taskListInConditionalTask=((ConditionalTask)currTask).getListTasks();  for (  Task<? extends Serializable> tsk : taskListInConditionalTask) {    dispatch(tsk,stack,nodeOutputs);  }} @TO@ ThenBody:{  List<Task<?>> taskListInConditionalTask=((ConditionalTask)currTask).getListTasks();  for (  Task<?> tsk : taskListInConditionalTask) {    dispatch(tsk,stack,nodeOutputs);  }} @AT@ 4642 @LENGTH@ 255
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> taskListInConditionalTask=((ConditionalTask)currTask).getListTasks(); @TO@ List<Task<?>> taskListInConditionalTask=((ConditionalTask)currTask).getListTasks(); @AT@ 4650 @LENGTH@ 117
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4650 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4655 @LENGTH@ 28
---UPD EnhancedForStatement@@for (Task<? extends Serializable> tsk : taskListInConditionalTask) {  dispatch(tsk,stack,nodeOutputs);} @TO@ for (Task<?> tsk : taskListInConditionalTask) {  dispatch(tsk,stack,nodeOutputs);} @AT@ 4774 @LENGTH@ 116
------UPD SingleVariableDeclaration@@Task<? extends Serializable> tsk @TO@ Task<?> tsk @AT@ 4778 @LENGTH@ 32
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4778 @LENGTH@ 28


UPD TryStatement@@try {  fep.commence(req,resp,new AuthenticationCredentialsNotFoundException("test"));  assertThat(resp.getStatus()).withFailMessage("Incorrect status").isEqualTo(HttpServletResponse.SC_FORBIDDEN);} catch (IOException e) {  fail("Unexpected exception thrown: " + e);}catch (ServletException e) {  fail("Unexpected exception thrown: " + e);} @TO@ try {  fep.commence(req,resp,new AuthenticationCredentialsNotFoundException("test"));  assertThat(resp.getStatus()).withFailMessage("Incorrect status").isEqualTo(HttpServletResponse.SC_FORBIDDEN);} catch (IOException e) {  fail("Unexpected exception thrown: " + e);} @AT@ 1489 @LENGTH@ 374
---DEL CatchClause@@catch (ServletException e) {  fail("Unexpected exception thrown: " + e);} @AT@ 1785 @LENGTH@ 78
------DEL SingleVariableDeclaration@@ServletException e @AT@ 1792 @LENGTH@ 18
---------DEL SimpleType@@ServletException @AT@ 1792 @LENGTH@ 16
---------DEL SimpleName@@e @AT@ 1809 @LENGTH@ 1
------DEL ExpressionStatement@@MethodInvocation:fail("Unexpected exception thrown: " + e) @AT@ 1817 @LENGTH@ 42
---------DEL MethodInvocation@@fail("Unexpected exception thrown: " + e) @AT@ 1817 @LENGTH@ 41
------------DEL SimpleName@@MethodName:fail:["Unexpected exception thrown: " + e] @AT@ 1817 @LENGTH@ 41
---------------DEL InfixExpression@@"Unexpected exception thrown: " + e @AT@ 1822 @LENGTH@ 35
------------------DEL StringLiteral@@"Unexpected exception thrown: " @AT@ 1822 @LENGTH@ 31
------------------DEL Operator@@+ @AT@ 1853 @LENGTH@ 1
------------------DEL SimpleName@@e @AT@ 1856 @LENGTH@ 1


UPD MethodDeclaration@@public, static, Path, MethodName:createMoveTask, Task<? extends Serializable> currTask, boolean chDir, FileSinkOperator fsOp, ParseContext parseCtx, List<Task<MoveWork>> mvTasks, HiveConf hconf, DependencyCollectionTask dependencyTask,  @TO@ public, static, Path, MethodName:createMoveTask, Task<?> currTask, boolean chDir, FileSinkOperator fsOp, ParseContext parseCtx, List<Task<MoveWork>> mvTasks, HiveConf hconf, DependencyCollectionTask dependencyTask,  @AT@ 16694 @LENGTH@ 1251
---UPD SingleVariableDeclaration@@Task<? extends Serializable> currTask @TO@ Task<?> currTask @AT@ 16728 @LENGTH@ 37
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 16728 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]ResultFormat,  @TO@ [static]ResultFormat,  @AT@ 58779 @LENGTH@ 111
---DEL Modifier@@public @AT@ 58779 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 2004 @LENGTH@ 129
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 2004 @LENGTH@ 128
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2103 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2114 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @TO@ TypeDeclaration@@[public]ClientCredentialsOAuth2AuthorizedClientProviderTests,  @AT@ 7137 @LENGTH@ 905
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7137 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7144 @LENGTH@ 4
---INS SimpleName@@MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7149 @LENGTH@ 77
---INS VariableDeclarationStatement@@ClientCredentialsOAuth2AuthorizedClientProvider authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider(); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7233 @LENGTH@ 133
------INS SimpleType@@ClientCredentialsOAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@ClientCredentialsOAuth2AuthorizedClientProvider authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider(); @AT@ 7233 @LENGTH@ 47
------INS VariableDeclarationFragment@@authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider() @TO@ VariableDeclarationStatement@@ClientCredentialsOAuth2AuthorizedClientProvider authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider(); @AT@ 7281 @LENGTH@ 84
---------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider() @AT@ 7281 @LENGTH@ 24
---------INS ClassInstanceCreation@@ClientCredentialsOAuth2AuthorizedClientProvider[] @TO@ VariableDeclarationFragment@@authorizedClientProvider=new ClientCredentialsOAuth2AuthorizedClientProvider() @AT@ 7312 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@ClientCredentialsOAuth2AuthorizedClientProvider[] @AT@ 7312 @LENGTH@ 3
------------INS SimpleType@@ClientCredentialsOAuth2AuthorizedClientProvider @TO@ ClassInstanceCreation@@ClientCredentialsOAuth2AuthorizedClientProvider[] @AT@ 7316 @LENGTH@ 47
---INS ExpressionStatement@@MethodInvocation:authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7369 @LENGTH@ 60
------INS MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 7369 @LENGTH@ 59
---------INS SimpleName@@Name:authorizedClientProvider @TO@ MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 7369 @LENGTH@ 24
---------INS SimpleName@@MethodName:setClockSkew:[Duration.ofHours(24)] @TO@ MethodInvocation@@authorizedClientProvider.setClockSkew(Duration.ofHours(24)) @AT@ 7394 @LENGTH@ 34
------------INS MethodInvocation@@Duration.ofHours(24) @TO@ SimpleName@@MethodName:setClockSkew:[Duration.ofHours(24)] @AT@ 7407 @LENGTH@ 20
---------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofHours(24) @AT@ 7407 @LENGTH@ 8
---------------INS SimpleName@@MethodName:ofHours:[24] @TO@ MethodInvocation@@Duration.ofHours(24) @AT@ 7416 @LENGTH@ 11
------------------INS NumberLiteral@@24 @TO@ SimpleName@@MethodName:ofHours:[24] @AT@ 7424 @LENGTH@ 2
---INS VariableDeclarationStatement@@Instant issuedAt=Instant.now().minus(Duration.ofDays(1)); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7432 @LENGTH@ 59
------INS SimpleType@@Instant @TO@ VariableDeclarationStatement@@Instant issuedAt=Instant.now().minus(Duration.ofDays(1)); @AT@ 7432 @LENGTH@ 7
------INS VariableDeclarationFragment@@issuedAt=Instant.now().minus(Duration.ofDays(1)) @TO@ VariableDeclarationStatement@@Instant issuedAt=Instant.now().minus(Duration.ofDays(1)); @AT@ 7440 @LENGTH@ 50
---------INS SimpleName@@issuedAt @TO@ VariableDeclarationFragment@@issuedAt=Instant.now().minus(Duration.ofDays(1)) @AT@ 7440 @LENGTH@ 8
---------INS MethodInvocation@@Instant.now().minus(Duration.ofDays(1)) @TO@ VariableDeclarationFragment@@issuedAt=Instant.now().minus(Duration.ofDays(1)) @AT@ 7451 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:now:[] @TO@ MethodInvocation@@Instant.now().minus(Duration.ofDays(1)) @AT@ 7451 @LENGTH@ 13
------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.now().minus(Duration.ofDays(1)) @AT@ 7451 @LENGTH@ 7
------------INS SimpleName@@MethodName:minus:[Duration.ofDays(1)] @TO@ MethodInvocation@@Instant.now().minus(Duration.ofDays(1)) @AT@ 7465 @LENGTH@ 25
---------------INS MethodInvocation@@Duration.ofDays(1) @TO@ SimpleName@@MethodName:minus:[Duration.ofDays(1)] @AT@ 7471 @LENGTH@ 18
------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofDays(1) @AT@ 7471 @LENGTH@ 8
------------------INS SimpleName@@MethodName:ofDays:[1] @TO@ MethodInvocation@@Duration.ofDays(1) @AT@ 7480 @LENGTH@ 9
---------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:ofDays:[1] @AT@ 7487 @LENGTH@ 1
---INS VariableDeclarationStatement@@OAuth2AccessToken expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7494 @LENGTH@ 150
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))); @AT@ 7494 @LENGTH@ 17
------INS VariableDeclarationFragment@@expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))) @TO@ VariableDeclarationStatement@@OAuth2AccessToken expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))); @AT@ 7512 @LENGTH@ 131
---------INS SimpleName@@expiredToken @TO@ VariableDeclarationFragment@@expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))) @AT@ 7512 @LENGTH@ 12
---------INS ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @TO@ VariableDeclarationFragment@@expiredToken=new OAuth2AccessToken(OAuth2AccessToken.TokenType.BEARER,"token",issuedAt,issuedAt.plus(Duration.ofHours(1))) @AT@ 7527 @LENGTH@ 116
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7527 @LENGTH@ 3
------------INS SimpleType@@OAuth2AccessToken @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7531 @LENGTH@ 17
------------INS QualifiedName@@OAuth2AccessToken.TokenType.BEARER @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7549 @LENGTH@ 34
---------------INS QualifiedName@@OAuth2AccessToken.TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 7549 @LENGTH@ 27
------------------INS SimpleName@@OAuth2AccessToken @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 7549 @LENGTH@ 17
------------------INS SimpleName@@TokenType @TO@ QualifiedName@@OAuth2AccessToken.TokenType @AT@ 7567 @LENGTH@ 9
---------------INS SimpleName@@BEARER @TO@ QualifiedName@@OAuth2AccessToken.TokenType.BEARER @AT@ 7577 @LENGTH@ 6
------------INS StringLiteral@@"token" @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7585 @LENGTH@ 7
------------INS SimpleName@@issuedAt @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7598 @LENGTH@ 8
------------INS MethodInvocation@@issuedAt.plus(Duration.ofHours(1)) @TO@ ClassInstanceCreation@@OAuth2AccessToken[OAuth2AccessToken.TokenType.BEARER, "token", issuedAt, issuedAt.plus(Duration.ofHours(1))] @AT@ 7608 @LENGTH@ 34
---------------INS SimpleName@@Name:issuedAt @TO@ MethodInvocation@@issuedAt.plus(Duration.ofHours(1)) @AT@ 7608 @LENGTH@ 8
---------------INS SimpleName@@MethodName:plus:[Duration.ofHours(1)] @TO@ MethodInvocation@@issuedAt.plus(Duration.ofHours(1)) @AT@ 7617 @LENGTH@ 25
------------------INS MethodInvocation@@Duration.ofHours(1) @TO@ SimpleName@@MethodName:plus:[Duration.ofHours(1)] @AT@ 7622 @LENGTH@ 19
---------------------INS SimpleName@@Name:Duration @TO@ MethodInvocation@@Duration.ofHours(1) @AT@ 7622 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:ofHours:[1] @TO@ MethodInvocation@@Duration.ofHours(1) @AT@ 7631 @LENGTH@ 10
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:ofHours:[1] @AT@ 7639 @LENGTH@ 1
---INS VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7647 @LENGTH@ 139
------INS SimpleType@@OAuth2AuthorizedClient @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken); @AT@ 7647 @LENGTH@ 22
------INS VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken) @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClient authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken); @AT@ 7670 @LENGTH@ 115
---------INS SimpleName@@authorizedClient @TO@ VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken) @AT@ 7670 @LENGTH@ 16
---------INS ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @TO@ VariableDeclarationFragment@@authorizedClient=new OAuth2AuthorizedClient(this.clientRegistration,this.principal.getName(),expiredToken) @AT@ 7689 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @AT@ 7689 @LENGTH@ 3
------------INS SimpleType@@OAuth2AuthorizedClient @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @AT@ 7693 @LENGTH@ 22
------------INS FieldAccess@@this.clientRegistration @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @AT@ 7721 @LENGTH@ 23
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistration @AT@ 7721 @LENGTH@ 4
---------------INS SimpleName@@clientRegistration @TO@ FieldAccess@@this.clientRegistration @AT@ 7726 @LENGTH@ 18
------------INS MethodInvocation@@this.principal.getName() @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @AT@ 7746 @LENGTH@ 24
---------------INS FieldAccess@@this.principal @TO@ MethodInvocation@@this.principal.getName() @AT@ 7746 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principal @AT@ 7746 @LENGTH@ 4
------------------INS SimpleName@@principal @TO@ FieldAccess@@this.principal @AT@ 7751 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@this.principal.getName() @AT@ 7761 @LENGTH@ 9
------------INS SimpleName@@expiredToken @TO@ ClassInstanceCreation@@OAuth2AuthorizedClient[this.clientRegistration, this.principal.getName(), expiredToken] @AT@ 7772 @LENGTH@ 12
---INS VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7790 @LENGTH@ 168
------INS SimpleType@@OAuth2AuthorizationContext @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @AT@ 7790 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build(); @AT@ 7817 @LENGTH@ 140
---------INS SimpleName@@authorizationContext @TO@ VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7817 @LENGTH@ 20
---------INS MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @TO@ VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7844 @LENGTH@ 113
------------INS MethodInvocation@@MethodName:principal:[this.principal] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7844 @LENGTH@ 98
---------------INS FieldAccess@@this.principal @TO@ MethodInvocation@@MethodName:principal:[this.principal] @AT@ 7927 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principal @AT@ 7927 @LENGTH@ 4
------------------INS SimpleName@@principal @TO@ FieldAccess@@this.principal @AT@ 7932 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:withAuthorizedClient:[authorizedClient] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7844 @LENGTH@ 65
---------------INS SimpleName@@authorizedClient @TO@ MethodInvocation@@MethodName:withAuthorizedClient:[authorizedClient] @AT@ 7892 @LENGTH@ 16
------------INS SimpleName@@Name:OAuth2AuthorizationContext @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7844 @LENGTH@ 26
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(this.principal).build() @AT@ 7950 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(authorizedClientProvider.authorize(authorizationContext)).isNull() @TO@ MethodDeclaration@@public, void, MethodName:authorizeWhenClientCredentialsAndTokenNotExpiredByClockSkewThenNotReauthorize,  @AT@ 7961 @LENGTH@ 78
------INS MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authorizedClientProvider.authorize(authorizationContext)).isNull() @AT@ 7961 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:assertThat:[authorizedClientProvider.authorize(authorizationContext)] @TO@ MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext)).isNull() @AT@ 7961 @LENGTH@ 68
------------INS MethodInvocation@@authorizedClientProvider.authorize(authorizationContext) @TO@ MethodInvocation@@MethodName:assertThat:[authorizedClientProvider.authorize(authorizationContext)] @AT@ 7972 @LENGTH@ 56
---------------INS SimpleName@@Name:authorizedClientProvider @TO@ MethodInvocation@@authorizedClientProvider.authorize(authorizationContext) @AT@ 7972 @LENGTH@ 24
---------------INS SimpleName@@MethodName:authorize:[authorizationContext] @TO@ MethodInvocation@@authorizedClientProvider.authorize(authorizationContext) @AT@ 7997 @LENGTH@ 31
------------------INS SimpleName@@authorizationContext @TO@ SimpleName@@MethodName:authorize:[authorizationContext] @AT@ 8007 @LENGTH@ 20
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(authorizedClientProvider.authorize(authorizationContext)).isNull() @AT@ 8030 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:ctx=new GenTezProcContext(conf,pctx,Collections.EMPTY_LIST,new ArrayList<Task<? extends Serializable>>(),Collections.EMPTY_SET,Collections.EMPTY_SET) @TO@ Assignment:ctx=new GenTezProcContext(conf,pctx,Collections.EMPTY_LIST,new ArrayList<Task<?>>(),Collections.EMPTY_SET,Collections.EMPTY_SET) @AT@ 2706 @LENGTH@ 206
---UPD Assignment@@ctx=new GenTezProcContext(conf,pctx,Collections.EMPTY_LIST,new ArrayList<Task<? extends Serializable>>(),Collections.EMPTY_SET,Collections.EMPTY_SET) @TO@ ctx=new GenTezProcContext(conf,pctx,Collections.EMPTY_LIST,new ArrayList<Task<?>>(),Collections.EMPTY_SET,Collections.EMPTY_SET) @AT@ 2706 @LENGTH@ 205
------UPD ClassInstanceCreation@@GenTezProcContext[conf, pctx, Collections.EMPTY_LIST, new ArrayList<Task<? extends Serializable>>(), Collections.EMPTY_SET, Collections.EMPTY_SET] @TO@ GenTezProcContext[conf, pctx, Collections.EMPTY_LIST, new ArrayList<Task<?>>(), Collections.EMPTY_SET, Collections.EMPTY_SET] @AT@ 2712 @LENGTH@ 199
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 2803 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 2807 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2817 @LENGTH@ 28


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Task<? extends Serializable> task=(Task<? extends Serializable>)nd; @TO@ @SuppressWarnings("unchecked") Task<?> task=(Task<?>)nd; @AT@ 3114 @LENGTH@ 107
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3151 @LENGTH@ 28
---UPD VariableDeclarationFragment@@task=(Task<? extends Serializable>)nd @TO@ task=(Task<?>)nd @AT@ 3180 @LENGTH@ 40
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 3187 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3188 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @TO@ TypeDeclaration@@[public]ConcurrentSessionFilter, GenericFilterBean @AT@ 7276 @LENGTH@ 120
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @AT@ 7276 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @AT@ 7283 @LENGTH@ 4
---INS SimpleName@@MethodName:setLogoutHandlers @TO@ MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @AT@ 7288 @LENGTH@ 17
---INS SingleVariableDeclaration@@List<LogoutHandler> handlers @TO@ MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @AT@ 7306 @LENGTH@ 28
------INS ParameterizedType@@List<LogoutHandler> @TO@ SingleVariableDeclaration@@List<LogoutHandler> handlers @AT@ 7306 @LENGTH@ 19
---------INS SimpleType@@List @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 7306 @LENGTH@ 4
---------INS SimpleType@@LogoutHandler @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 7311 @LENGTH@ 13
------INS SimpleName@@handlers @TO@ SingleVariableDeclaration@@List<LogoutHandler> handlers @AT@ 7326 @LENGTH@ 8
---INS ExpressionStatement@@Assignment:this.handlers=new CompositeLogoutHandler(handlers) @TO@ MethodDeclaration@@public, void, MethodName:setLogoutHandlers, List<LogoutHandler> handlers,  @AT@ 7340 @LENGTH@ 53
------INS Assignment@@this.handlers=new CompositeLogoutHandler(handlers) @TO@ ExpressionStatement@@Assignment:this.handlers=new CompositeLogoutHandler(handlers) @AT@ 7340 @LENGTH@ 52
---------INS FieldAccess@@this.handlers @TO@ Assignment@@this.handlers=new CompositeLogoutHandler(handlers) @AT@ 7340 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.handlers @AT@ 7340 @LENGTH@ 4
------------INS SimpleName@@handlers @TO@ FieldAccess@@this.handlers @AT@ 7345 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@this.handlers=new CompositeLogoutHandler(handlers) @AT@ 7353 @LENGTH@ 1
---------INS ClassInstanceCreation@@CompositeLogoutHandler[handlers] @TO@ Assignment@@this.handlers=new CompositeLogoutHandler(handlers) @AT@ 7356 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@CompositeLogoutHandler[handlers] @AT@ 7356 @LENGTH@ 3
------------INS SimpleType@@CompositeLogoutHandler @TO@ ClassInstanceCreation@@CompositeLogoutHandler[handlers] @AT@ 7360 @LENGTH@ 22
------------INS SimpleName@@handlers @TO@ ClassInstanceCreation@@CompositeLogoutHandler[handlers] @AT@ 7383 @LENGTH@ 8


UPD LambdaExpression@@() -> {
  for (  List<String> p : partNames) {
    try {
      objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);
      System.out.println("Dropping partition: " + p.get(0));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
}
 @TO@ () -> {
  ObjectStore threadObjectStore=new ObjectStore();
  threadObjectStore.setConf(conf);
  for (  List<String> p : partNames) {
    try {
      threadObjectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);
      System.out.println("Dropping partition: " + p.get(0));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
}
 @AT@ 19440 @LENGTH@ 335
---UPD EnhancedForStatement@@for (List<String> p : partNames) {  try {    objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);    System.out.println("Dropping partition: " + p.get(0));  } catch (  Exception e) {    throw new RuntimeException(e);  }} @TO@ for (List<String> p : partNames) {  try {    threadObjectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);    System.out.println("Dropping partition: " + p.get(0));  } catch (  Exception e) {    throw new RuntimeException(e);  }} @AT@ 19458 @LENGTH@ 307
------UPD TryStatement@@try {  objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);  System.out.println("Dropping partition: " + p.get(0));} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  threadObjectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);  System.out.println("Dropping partition: " + p.get(0));} catch (Exception e) {  throw new RuntimeException(e);} @AT@ 19505 @LENGTH@ 248
---------UPD ExpressionStatement@@MethodInvocation:objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p) @TO@ MethodInvocation:threadObjectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p) @AT@ 19525 @LENGTH@ 64
------------UPD MethodInvocation@@objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p) @TO@ threadObjectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p) @AT@ 19525 @LENGTH@ 63
---------------UPD SimpleName@@Name:objectStore @TO@ Name:threadObjectStore @AT@ 19525 @LENGTH@ 11
---INS VariableDeclarationStatement@@ObjectStore threadObjectStore=new ObjectStore(); @TO@ LambdaExpression@@() -> {
  for (  List<String> p : partNames) {
    try {
      objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);
      System.out.println("Dropping partition: " + p.get(0));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
}
 @AT@ 19458 @LENGTH@ 50
------INS SimpleType@@ObjectStore @TO@ VariableDeclarationStatement@@ObjectStore threadObjectStore=new ObjectStore(); @AT@ 19458 @LENGTH@ 11
------INS VariableDeclarationFragment@@threadObjectStore=new ObjectStore() @TO@ VariableDeclarationStatement@@ObjectStore threadObjectStore=new ObjectStore(); @AT@ 19470 @LENGTH@ 37
---------INS SimpleName@@threadObjectStore @TO@ VariableDeclarationFragment@@threadObjectStore=new ObjectStore() @AT@ 19470 @LENGTH@ 17
---------INS ClassInstanceCreation@@ObjectStore[] @TO@ VariableDeclarationFragment@@threadObjectStore=new ObjectStore() @AT@ 19490 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectStore[] @AT@ 19490 @LENGTH@ 3
------------INS SimpleType@@ObjectStore @TO@ ClassInstanceCreation@@ObjectStore[] @AT@ 19494 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:threadObjectStore.setConf(conf) @TO@ LambdaExpression@@() -> {
  for (  List<String> p : partNames) {
    try {
      objectStore.dropPartition(DEFAULT_CATALOG_NAME,DB1,TABLE1,p);
      System.out.println("Dropping partition: " + p.get(0));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
}
 @AT@ 19519 @LENGTH@ 32
------INS MethodInvocation@@threadObjectStore.setConf(conf) @TO@ ExpressionStatement@@MethodInvocation:threadObjectStore.setConf(conf) @AT@ 19519 @LENGTH@ 31
---------INS SimpleName@@Name:threadObjectStore @TO@ MethodInvocation@@threadObjectStore.setConf(conf) @AT@ 19519 @LENGTH@ 17
---------INS SimpleName@@MethodName:setConf:[conf] @TO@ MethodInvocation@@threadObjectStore.setConf(conf) @AT@ 19537 @LENGTH@ 13
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:setConf:[conf] @AT@ 19545 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]AdvancedClassEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedClassEndpointBuilder, [EndpointProducerBuilder] @AT@ 4079 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 4086 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultAccessTokenRequest, [AccessTokenRequest, Serializable] @TO@ [@Deprecated, public]DefaultAccessTokenRequest, [AccessTokenRequest, Serializable] @AT@ 1169 @LENGTH@ 3965
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultAccessTokenRequest, [AccessTokenRequest, Serializable] @AT@ 1346 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2ExpressionParser, [ExpressionParser] @TO@ [@Deprecated, public]OAuth2ExpressionParser, [ExpressionParser] @AT@ 1496 @LENGTH@ 724
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ExpressionParser, [ExpressionParser] @AT@ 1673 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertNotPresent(GsonConverter.class) @TO@ MethodInvocation:assertPresent(GsonConverter.class) @AT@ 1411 @LENGTH@ 38
---UPD MethodInvocation@@assertNotPresent(GsonConverter.class) @TO@ assertPresent(GsonConverter.class) @AT@ 1411 @LENGTH@ 37
------UPD SimpleName@@MethodName:assertNotPresent:[GsonConverter.class] @TO@ MethodName:assertPresent:[GsonConverter.class] @AT@ 1411 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(result) @TO@ MethodInvocation:exchange.getMessage().setBody(result) @AT@ 3186 @LENGTH@ 34
---UPD MethodInvocation@@exchange.getOut().setBody(result) @TO@ exchange.getMessage().setBody(result) @AT@ 3186 @LENGTH@ 33
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3186 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:arr.forEach((e) -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
) @TO@ MethodInvocation:arr.forEach(e -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
) @AT@ 13531 @LENGTH@ 1682
---UPD MethodInvocation@@arr.forEach((e) -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
) @TO@ arr.forEach(e -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
) @AT@ 13531 @LENGTH@ 1681
------UPD SimpleName@@MethodName:forEach:[(e) -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
] @TO@ MethodName:forEach:[e -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
] @AT@ 13535 @LENGTH@ 1677
---------UPD LambdaExpression@@(e) -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
 @TO@ e -> {
  JsonObject row=(JsonObject)e;
  String name=row.getString("name");
  String javaType=row.getString("type");
  String desc=row.getStringOrDefault("description","");
  String defaultValue=row.getStringOrDefault("defaultValue","");
  String deprecated=row.getStringOrDefault("deprecated","");
  String deprecationNote=row.getStringOrDefault("deprecationNote","");
  if ("true".equals(deprecated)) {
    desc="*Deprecated* " + desc;
    if (!StringHelper.isEmpty(deprecationNote)) {
      if (!desc.endsWith(".")) {
        desc=desc + ". Deprecation note: " + deprecationNote;
      }
 else {
        desc=desc + " Deprecation note: " + deprecationNote;
      }
    }
  }
  boolean skip=name.endsWith("customizer.enabled") || include != null && !name.contains("." + include + ".");
  if (!skip) {
    SpringBootAutoConfigureOptionModel model=new SpringBootAutoConfigureOptionModel();
    model.setName(name);
    model.setJavaType(javaType);
    model.setDefaultValue(defaultValue);
    model.setDescription(desc);
    answer.add(model);
  }
}
 @AT@ 13543 @LENGTH@ 1668


UPD MethodDeclaration@@default, JMXEndpointBuilder, MethodName:jMX, String path,  @TO@ default, JMXEndpointBuilder, MethodName:jmx, String path,  @AT@ 22132 @LENGTH@ 346
---UPD SimpleName@@MethodName:jMX @TO@ MethodName:jmx @AT@ 22159 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:rolesToVisitSet.addAll(newReachableRoles) @TO@ MethodInvocation:rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(aRole)) @AT@ 8911 @LENGTH@ 42


UPD TypeDeclaration@@[public, static]AdvancedFlinkEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedFlinkEndpointBuilder, [EndpointProducerBuilder] @AT@ 6253 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 6260 @LENGTH@ 6


UPD SynchronizedStatement@@synchronized (contentHashReferences) {  for (  ContentReference fsContent : listLocalContents()) {    if (!readWrite) {      return Collections.emptyMap();    }    if (!contentHashReferences.containsKey(fsContent.getHexHash())) {      if (markAsObsolete(fsContent)) {        cleanedContents.get(DELETED_CONTENT).add(fsContent.getContentIdentifier());      } else {        cleanedContents.get(MARKED_CONTENT).add(fsContent.getContentIdentifier());      }    } else {      obsoleteContents.remove(fsContent.getHexHash());    }  }} @TO@ synchronized (contentHashReferences) {  DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences);  for (  ContentReference fsContent : listLocalContents()) {    if (!readWrite) {      return Collections.emptyMap();    }    if (!contentHashReferences.containsKey(fsContent.getHexHash())) {      if (markAsObsolete(fsContent)) {        cleanedContents.get(DELETED_CONTENT).add(fsContent.getContentIdentifier());      } else {        cleanedContents.get(MARKED_CONTENT).add(fsContent.getContentIdentifier());      }    } else {      obsoleteContents.remove(fsContent.getHexHash());    }  }} @AT@ 14232 @LENGTH@ 821
---UPD Block@@SyncBody:{  for (  ContentReference fsContent : listLocalContents()) {    if (!readWrite) {      return Collections.emptyMap();    }    if (!contentHashReferences.containsKey(fsContent.getHexHash())) {      if (markAsObsolete(fsContent)) {        cleanedContents.get(DELETED_CONTENT).add(fsContent.getContentIdentifier());      } else {        cleanedContents.get(MARKED_CONTENT).add(fsContent.getContentIdentifier());      }    } else {      obsoleteContents.remove(fsContent.getHexHash());    }  }} @TO@ SyncBody:{  DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences);  for (  ContentReference fsContent : listLocalContents()) {    if (!readWrite) {      return Collections.emptyMap();    }    if (!contentHashReferences.containsKey(fsContent.getHexHash())) {      if (markAsObsolete(fsContent)) {        cleanedContents.get(DELETED_CONTENT).add(fsContent.getContentIdentifier());      } else {        cleanedContents.get(MARKED_CONTENT).add(fsContent.getContentIdentifier());      }    } else {      obsoleteContents.remove(fsContent.getHexHash());    }  }} @AT@ 14269 @LENGTH@ 784
------INS ExpressionStatement@@MethodInvocation:DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences) @TO@ Block@@SyncBody:{  for (  ContentReference fsContent : listLocalContents()) {    if (!readWrite) {      return Collections.emptyMap();    }    if (!contentHashReferences.containsKey(fsContent.getHexHash())) {      if (markAsObsolete(fsContent)) {        cleanedContents.get(DELETED_CONTENT).add(fsContent.getContentIdentifier());      } else {        cleanedContents.get(MARKED_CONTENT).add(fsContent.getContentIdentifier());      }    } else {      obsoleteContents.remove(fsContent.getHexHash());    }  }} @AT@ 14283 @LENGTH@ 107
---------INS MethodInvocation@@DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences) @TO@ ExpressionStatement@@MethodInvocation:DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences) @AT@ 14283 @LENGTH@ 106
------------INS QualifiedName@@Name:DeploymentRepositoryLogger.ROOT_LOGGER @TO@ MethodInvocation@@DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences) @AT@ 14283 @LENGTH@ 38
------------INS SimpleName@@MethodName:debug:["Current content hash references are " + contentHashReferences] @TO@ MethodInvocation@@DeploymentRepositoryLogger.ROOT_LOGGER.debug("Current content hash references are " + contentHashReferences) @AT@ 14322 @LENGTH@ 67
---------------INS InfixExpression@@"Current content hash references are " + contentHashReferences @TO@ SimpleName@@MethodName:debug:["Current content hash references are " + contentHashReferences] @AT@ 14328 @LENGTH@ 60
------------------INS StringLiteral@@"Current content hash references are " @TO@ InfixExpression@@"Current content hash references are " + contentHashReferences @AT@ 14328 @LENGTH@ 38
------------------INS Operator@@+ @TO@ InfixExpression@@"Current content hash references are " + contentHashReferences @AT@ 14366 @LENGTH@ 1
------------------INS SimpleName@@contentHashReferences @TO@ InfixExpression@@"Current content hash references are " + contentHashReferences @AT@ 14367 @LENGTH@ 21


UPD TypeDeclaration@@[public]DefaultExpiringOAuth2RefreshToken, DefaultOAuth2RefreshToken[ExpiringOAuth2RefreshToken] @TO@ [@Deprecated, public]DefaultExpiringOAuth2RefreshToken, DefaultOAuth2RefreshToken[ExpiringOAuth2RefreshToken] @AT@ 108 @LENGTH@ 528
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultExpiringOAuth2RefreshToken, DefaultOAuth2RefreshToken[ExpiringOAuth2RefreshToken] @AT@ 286 @LENGTH@ 11


UPD MethodDeclaration@@StatementBuilder.OngoingReadingAndWith, MethodName:f, BiFunction<NodeDescription<?>,Optional<Condition>,StatementBuilder.OngoingReadingAndWith> ff,  @TO@ StatementBuilder.OngoingReadingAndWith, MethodName:useWithReadingFragment, BiFunction<NodeDescription<?>,Optional<Condition>,StatementBuilder.OngoingReadingAndWith> readingFragmentSupplier,  @AT@ 5934 @LENGTH@ 175
---UPD SimpleName@@MethodName:f @TO@ MethodName:useWithReadingFragment @AT@ 5934 @LENGTH@ 1
---UPD SingleVariableDeclaration@@BiFunction<NodeDescription<?>,Optional<Condition>,StatementBuilder.OngoingReadingAndWith> ff @TO@ BiFunction<NodeDescription<?>,Optional<Condition>,StatementBuilder.OngoingReadingAndWith> readingFragmentSupplier @AT@ 5939 @LENGTH@ 94
------UPD SimpleName@@ff @TO@ readingFragmentSupplier @AT@ 6031 @LENGTH@ 2
---UPD ReturnStatement@@MethodInvocation:ff.apply(this.nodeDescription,Optional.of(this.condition)) @TO@ MethodInvocation:readingFragmentSupplier.apply(this.nodeDescription,Optional.of(this.condition)) @AT@ 6039 @LENGTH@ 67
------UPD MethodInvocation@@ff.apply(this.nodeDescription,Optional.of(this.condition)) @TO@ readingFragmentSupplier.apply(this.nodeDescription,Optional.of(this.condition)) @AT@ 6046 @LENGTH@ 59
---------UPD SimpleName@@Name:ff @TO@ Name:readingFragmentSupplier @AT@ 6046 @LENGTH@ 2


UPD FieldDeclaration@@public, final, List<Task<? extends Serializable>>, [rootTasks] @TO@ public, final, List<Task<?>>, [rootTasks] @AT@ 2864 @LENGTH@ 58
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2877 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2882 @LENGTH@ 28


UPD MethodDeclaration@@WebClient, MethodName:webClient, ClientRegistrationRepository clientRegistrationRepository, OAuth2AuthorizedClientRepository authorizedClientRepository,  @TO@ WebClient, MethodName:webClient, OAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1249 @LENGTH@ 445
---DEL SingleVariableDeclaration@@ClientRegistrationRepository clientRegistrationRepository @AT@ 1259 @LENGTH@ 57
------DEL SimpleType@@ClientRegistrationRepository @AT@ 1259 @LENGTH@ 28
------DEL SimpleName@@clientRegistrationRepository @AT@ 1288 @LENGTH@ 28
---UPD SingleVariableDeclaration@@OAuth2AuthorizedClientRepository authorizedClientRepository @TO@ OAuth2AuthorizedClientManager authorizedClientManager @AT@ 1318 @LENGTH@ 59
------UPD SimpleType@@OAuth2AuthorizedClientRepository @TO@ OAuth2AuthorizedClientManager @AT@ 1318 @LENGTH@ 32
------UPD SimpleName@@authorizedClientRepository @TO@ authorizedClientManager @AT@ 1351 @LENGTH@ 26
---UPD VariableDeclarationStatement@@ServletOAuth2AuthorizedClientExchangeFilterFunction oauth2=new ServletOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository); @TO@ ServletOAuth2AuthorizedClientExchangeFilterFunction oauth2=new ServletOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager); @AT@ 1383 @LENGTH@ 175
------UPD VariableDeclarationFragment@@oauth2=new ServletOAuth2AuthorizedClientExchangeFilterFunction(clientRegistrationRepository,authorizedClientRepository) @TO@ oauth2=new ServletOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager) @AT@ 1435 @LENGTH@ 122
---------UPD ClassInstanceCreation@@ServletOAuth2AuthorizedClientExchangeFilterFunction[clientRegistrationRepository, authorizedClientRepository] @TO@ ServletOAuth2AuthorizedClientExchangeFilterFunction[authorizedClientManager] @AT@ 1444 @LENGTH@ 113
------------DEL SimpleName@@clientRegistrationRepository @AT@ 1500 @LENGTH@ 28
------------UPD SimpleName@@authorizedClientRepository @TO@ authorizedClientManager @AT@ 1530 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @TO@ TypeDeclaration@@[@RabbitAvailable(queues=MessageListenerContainerLifecycleIntegrationTests.TEST_QUEUE), @LongRunning, @LogLevels(classes={RabbitTemplate.class,SimpleMessageListenerContainer.class,BlockingQueueConsumer.class,MessageListenerContainerLifecycleIntegrationTests.class},level="INFO"), public]MessageListenerContainerLifecycleIntegrationTests,  @AT@ 17577 @LENGTH@ 428
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17577 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17584 @LENGTH@ 4
---INS SimpleName@@MethodName:testConcurrencyConfiguration @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17589 @LENGTH@ 28
---INS VariableDeclarationStatement@@SimpleMessageListenerContainer container=new SimpleMessageListenerContainer(); @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17624 @LENGTH@ 80
------INS SimpleType@@SimpleMessageListenerContainer @TO@ VariableDeclarationStatement@@SimpleMessageListenerContainer container=new SimpleMessageListenerContainer(); @AT@ 17624 @LENGTH@ 30
------INS VariableDeclarationFragment@@container=new SimpleMessageListenerContainer() @TO@ VariableDeclarationStatement@@SimpleMessageListenerContainer container=new SimpleMessageListenerContainer(); @AT@ 17655 @LENGTH@ 48
---------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=new SimpleMessageListenerContainer() @AT@ 17655 @LENGTH@ 9
---------INS ClassInstanceCreation@@SimpleMessageListenerContainer[] @TO@ VariableDeclarationFragment@@container=new SimpleMessageListenerContainer() @AT@ 17667 @LENGTH@ 36
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleMessageListenerContainer[] @AT@ 17667 @LENGTH@ 3
------------INS SimpleType@@SimpleMessageListenerContainer @TO@ ClassInstanceCreation@@SimpleMessageListenerContainer[] @AT@ 17671 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:container.setConcurrentConsumers(1) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17707 @LENGTH@ 36
------INS MethodInvocation@@container.setConcurrentConsumers(1) @TO@ ExpressionStatement@@MethodInvocation:container.setConcurrentConsumers(1) @AT@ 17707 @LENGTH@ 35
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setConcurrentConsumers(1) @AT@ 17707 @LENGTH@ 9
---------INS SimpleName@@MethodName:setConcurrentConsumers:[1] @TO@ MethodInvocation@@container.setConcurrentConsumers(1) @AT@ 17717 @LENGTH@ 25
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setConcurrentConsumers:[1] @AT@ 17740 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:container.setMaxConcurrentConsumers(1) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17746 @LENGTH@ 39
------INS MethodInvocation@@container.setMaxConcurrentConsumers(1) @TO@ ExpressionStatement@@MethodInvocation:container.setMaxConcurrentConsumers(1) @AT@ 17746 @LENGTH@ 38
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setMaxConcurrentConsumers(1) @AT@ 17746 @LENGTH@ 9
---------INS SimpleName@@MethodName:setMaxConcurrentConsumers:[1] @TO@ MethodInvocation@@container.setMaxConcurrentConsumers(1) @AT@ 17756 @LENGTH@ 28
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMaxConcurrentConsumers:[1] @AT@ 17782 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:container.setConcurrency("2-5") @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17788 @LENGTH@ 32
------INS MethodInvocation@@container.setConcurrency("2-5") @TO@ ExpressionStatement@@MethodInvocation:container.setConcurrency("2-5") @AT@ 17788 @LENGTH@ 31
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.setConcurrency("2-5") @AT@ 17788 @LENGTH@ 9
---------INS SimpleName@@MethodName:setConcurrency:["2-5"] @TO@ MethodInvocation@@container.setConcurrency("2-5") @AT@ 17798 @LENGTH@ 21
------------INS StringLiteral@@"2-5" @TO@ SimpleName@@MethodName:setConcurrency:["2-5"] @AT@ 17813 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(container,"concurrentConsumers")).isEqualTo(2) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17824 @LENGTH@ 86
------INS MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"concurrentConsumers")).isEqualTo(2) @TO@ ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(container,"concurrentConsumers")).isEqualTo(2) @AT@ 17824 @LENGTH@ 85
---------INS MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(container,"concurrentConsumers")] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"concurrentConsumers")).isEqualTo(2) @AT@ 17824 @LENGTH@ 72
------------INS MethodInvocation@@TestUtils.getPropertyValue(container,"concurrentConsumers") @TO@ MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(container,"concurrentConsumers")] @AT@ 17835 @LENGTH@ 60
---------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"concurrentConsumers") @AT@ 17835 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getPropertyValue:[container, "concurrentConsumers"] @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"concurrentConsumers") @AT@ 17845 @LENGTH@ 50
------------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPropertyValue:[container, "concurrentConsumers"] @AT@ 17862 @LENGTH@ 9
------------------INS StringLiteral@@"concurrentConsumers" @TO@ SimpleName@@MethodName:getPropertyValue:[container, "concurrentConsumers"] @AT@ 17873 @LENGTH@ 21
---------INS SimpleName@@MethodName:isEqualTo:[2] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"concurrentConsumers")).isEqualTo(2) @AT@ 17897 @LENGTH@ 12
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:isEqualTo:[2] @AT@ 17907 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(container,"maxConcurrentConsumers")).isEqualTo(5) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrencyConfiguration,  @AT@ 17913 @LENGTH@ 89
------INS MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"maxConcurrentConsumers")).isEqualTo(5) @TO@ ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(container,"maxConcurrentConsumers")).isEqualTo(5) @AT@ 17913 @LENGTH@ 88
---------INS MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(container,"maxConcurrentConsumers")] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"maxConcurrentConsumers")).isEqualTo(5) @AT@ 17913 @LENGTH@ 75
------------INS MethodInvocation@@TestUtils.getPropertyValue(container,"maxConcurrentConsumers") @TO@ MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(container,"maxConcurrentConsumers")] @AT@ 17924 @LENGTH@ 63
---------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"maxConcurrentConsumers") @AT@ 17924 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getPropertyValue:[container, "maxConcurrentConsumers"] @TO@ MethodInvocation@@TestUtils.getPropertyValue(container,"maxConcurrentConsumers") @AT@ 17934 @LENGTH@ 53
------------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPropertyValue:[container, "maxConcurrentConsumers"] @AT@ 17951 @LENGTH@ 9
------------------INS StringLiteral@@"maxConcurrentConsumers" @TO@ SimpleName@@MethodName:getPropertyValue:[container, "maxConcurrentConsumers"] @AT@ 17962 @LENGTH@ 24
---------INS SimpleName@@MethodName:isEqualTo:[5] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(container,"maxConcurrentConsumers")).isEqualTo(5) @AT@ 17989 @LENGTH@ 12
------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:isEqualTo:[5] @AT@ 17999 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:distance.map(it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  criteria.maxDistance(it.getNormalizedValue());
  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  return criteria;
}
).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse)) @TO@ MethodInvocation:distance.map(it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  if (pointToUse instanceof GeoJson) {
    criteria.maxDistance(MetricConversion.getDistanceInMeters(it));
    minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));
  }
 else {
    criteria.maxDistance(it.getNormalizedValue());
    minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  }
  return criteria;
}
).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse)) @AT@ 7859 @LENGTH@ 447
---UPD MethodInvocation@@distance.map(it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  criteria.maxDistance(it.getNormalizedValue());
  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  return criteria;
}
).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse)) @TO@ distance.map(it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  if (pointToUse instanceof GeoJson) {
    criteria.maxDistance(MetricConversion.getDistanceInMeters(it));
    minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));
  }
 else {
    criteria.maxDistance(it.getNormalizedValue());
    minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  }
  return criteria;
}
).orElseGet(() -> isSpherical ? criteria.nearSphere(pointToUse) : criteria.near(pointToUse)) @AT@ 7866 @LENGTH@ 439
------UPD MethodInvocation@@MethodName:map:[it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  criteria.maxDistance(it.getNormalizedValue());
  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  return criteria;
}
] @TO@ MethodName:map:[it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  if (pointToUse instanceof GeoJson) {
    criteria.maxDistance(MetricConversion.getDistanceInMeters(it));
    minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));
  }
 else {
    criteria.maxDistance(it.getNormalizedValue());
    minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  }
  return criteria;
}
] @AT@ 7866 @LENGTH@ 348
---------UPD LambdaExpression@@it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  criteria.maxDistance(it.getNormalizedValue());
  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  return criteria;
}
 @TO@ it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  if (pointToUse instanceof GeoJson) {
    criteria.maxDistance(MetricConversion.getDistanceInMeters(it));
    minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));
  }
 else {
    criteria.maxDistance(it.getNormalizedValue());
    minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  }
  return criteria;
}
 @AT@ 7879 @LENGTH@ 334
------------INS IfStatement@@if (pointToUse instanceof GeoJson) {  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} else {  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @TO@ LambdaExpression@@it -> {
  if (isSpherical || !Metrics.NEUTRAL.equals(it.getMetric())) {
    criteria.nearSphere(pointToUse);
  }
 else {
    criteria.near(pointToUse);
  }
  criteria.maxDistance(it.getNormalizedValue());
  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));
  return criteria;
}
 @AT@ 8181 @LENGTH@ 410
---------------INS InstanceofExpression@@pointToUse instanceof GeoJson @TO@ IfStatement@@if (pointToUse instanceof GeoJson) {  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} else {  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @AT@ 8184 @LENGTH@ 29
------------------INS SimpleName@@pointToUse @TO@ InstanceofExpression@@pointToUse instanceof GeoJson @AT@ 8184 @LENGTH@ 10
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@pointToUse instanceof GeoJson @AT@ 8195 @LENGTH@ 10
------------------INS SimpleType@@GeoJson @TO@ InstanceofExpression@@pointToUse instanceof GeoJson @AT@ 8206 @LENGTH@ 7
---------------INS Block@@ThenBody:{  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} @TO@ IfStatement@@if (pointToUse instanceof GeoJson) {  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} else {  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @AT@ 8215 @LENGTH@ 225
------------------INS ExpressionStatement@@MethodInvocation:criteria.maxDistance(MetricConversion.getDistanceInMeters(it)) @TO@ Block@@ThenBody:{  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} @AT@ 8264 @LENGTH@ 63
---------------------INS MethodInvocation@@criteria.maxDistance(MetricConversion.getDistanceInMeters(it)) @TO@ ExpressionStatement@@MethodInvocation:criteria.maxDistance(MetricConversion.getDistanceInMeters(it)) @AT@ 8264 @LENGTH@ 62
------------------------INS SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.maxDistance(MetricConversion.getDistanceInMeters(it)) @AT@ 8264 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:maxDistance:[MetricConversion.getDistanceInMeters(it)] @TO@ MethodInvocation@@criteria.maxDistance(MetricConversion.getDistanceInMeters(it)) @AT@ 8273 @LENGTH@ 53
---------------------------INS MethodInvocation@@MetricConversion.getDistanceInMeters(it) @TO@ SimpleName@@MethodName:maxDistance:[MetricConversion.getDistanceInMeters(it)] @AT@ 8285 @LENGTH@ 40
------------------------------INS SimpleName@@Name:MetricConversion @TO@ MethodInvocation@@MetricConversion.getDistanceInMeters(it) @AT@ 8285 @LENGTH@ 16
------------------------------INS SimpleName@@MethodName:getDistanceInMeters:[it] @TO@ MethodInvocation@@MetricConversion.getDistanceInMeters(it) @AT@ 8302 @LENGTH@ 23
---------------------------------INS SimpleName@@it @TO@ SimpleName@@MethodName:getDistanceInMeters:[it] @AT@ 8322 @LENGTH@ 2
------------------INS ExpressionStatement@@MethodInvocation:minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @TO@ Block@@ThenBody:{  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} @AT@ 8334 @LENGTH@ 99
---------------------INS MethodInvocation@@minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @TO@ ExpressionStatement@@MethodInvocation:minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @AT@ 8334 @LENGTH@ 98
------------------------INS MethodInvocation@@MethodName:map:[MetricConversion::getDistanceInMeters] @TO@ MethodInvocation@@minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @AT@ 8334 @LENGTH@ 54
------------------------INS SimpleName@@Name:minDistance @TO@ MethodInvocation@@minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @AT@ 8334 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:ifPresent:[min -> criteria.minDistance(min)] @TO@ MethodInvocation@@minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min)) @AT@ 8389 @LENGTH@ 43
---------------------------INS LambdaExpression@@min -> criteria.minDistance(min) @TO@ SimpleName@@MethodName:ifPresent:[min -> criteria.minDistance(min)] @AT@ 8399 @LENGTH@ 32
------------------------------INS VariableDeclarationFragment@@min @TO@ LambdaExpression@@min -> criteria.minDistance(min) @AT@ 8399 @LENGTH@ 3
---------------------------------INS SimpleName@@min @TO@ VariableDeclarationFragment@@min @AT@ 8399 @LENGTH@ 3
------------------------------INS MethodInvocation@@criteria.minDistance(min) @TO@ LambdaExpression@@min -> criteria.minDistance(min) @AT@ 8406 @LENGTH@ 25
---------------------------------INS SimpleName@@Name:criteria @TO@ MethodInvocation@@criteria.minDistance(min) @AT@ 8406 @LENGTH@ 8
---------------------------------INS SimpleName@@MethodName:minDistance:[min] @TO@ MethodInvocation@@criteria.minDistance(min) @AT@ 8415 @LENGTH@ 16
------------------------------------INS SimpleName@@min @TO@ SimpleName@@MethodName:minDistance:[min] @AT@ 8427 @LENGTH@ 3
---------------INS Block@@ElseBody:{  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @TO@ IfStatement@@if (pointToUse instanceof GeoJson) {  criteria.maxDistance(MetricConversion.getDistanceInMeters(it));  minDistance.map(MetricConversion::getDistanceInMeters).ifPresent(min -> criteria.minDistance(min));} else {  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @AT@ 8446 @LENGTH@ 145
------------------MOV ExpressionStatement@@MethodInvocation:criteria.maxDistance(it.getNormalizedValue()) @TO@ Block@@ElseBody:{  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @AT@ 8054 @LENGTH@ 46
------------------MOV ExpressionStatement@@MethodInvocation:minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue())) @TO@ Block@@ElseBody:{  criteria.maxDistance(it.getNormalizedValue());  minDistance.ifPresent(min -> criteria.minDistance(min.getNormalizedValue()));} @AT@ 8106 @LENGTH@ 77


UPD EnumDeclaration@@[public, static]GenericFileExist,  @TO@ [static]GenericFileExist,  @AT@ 195951 @LENGTH@ 100
---DEL Modifier@@public @AT@ 195951 @LENGTH@ 6


UPD MethodDeclaration@@default, ZooKeeperMasterEndpointBuilder, MethodName:zooKeeperMaster, String path,  @TO@ default, ZooKeeperMasterEndpointBuilder, MethodName:zookeeperMaster, String path,  @AT@ 4654 @LENGTH@ 443
---UPD SimpleName@@MethodName:zooKeeperMaster @TO@ MethodName:zookeeperMaster @AT@ 4693 @LENGTH@ 15


MOV FieldDeclaration@@protected, AtomicInteger, [orderId=new AtomicInteger()] @TO@ TypeDeclaration@@[public]CafeRouteBuilder, EndpointRouteBuilder @AT@ 3239 @LENGTH@ 54


UPD TypeDeclaration@@[@Configuration]ServerHttpSecurityConfiguration,  @TO@ [@Configuration(proxyBeanMethods=false)]ServerHttpSecurityConfiguration,  @AT@ 2215 @LENGTH@ 3776
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration]ServerHttpSecurityConfiguration,  @AT@ 2215 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 2215 @LENGTH@ 14


INS MethodDeclaration@@public, Neo4jConverter, MethodName:getConverter,  @TO@ TypeDeclaration@@[@API(status=API.Status.INTERNAL,since="1.0"), public, final]Neo4jMappingContext, AbstractMappingContext<Neo4jPersistentEntity<?>,Neo4jPersistentProperty>[Schema, BeanDefinitionRegistryPostProcessor] @AT@ 4600 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, Neo4jConverter, MethodName:getConverter,  @AT@ 4600 @LENGTH@ 6
---INS SimpleType@@Neo4jConverter @TO@ MethodDeclaration@@public, Neo4jConverter, MethodName:getConverter,  @AT@ 4607 @LENGTH@ 14
---INS SimpleName@@MethodName:getConverter @TO@ MethodDeclaration@@public, Neo4jConverter, MethodName:getConverter,  @AT@ 4622 @LENGTH@ 12
---INS ReturnStatement@@SimpleName:converter @TO@ MethodDeclaration@@public, Neo4jConverter, MethodName:getConverter,  @AT@ 4641 @LENGTH@ 17
------INS SimpleName@@converter @TO@ ReturnStatement@@SimpleName:converter @AT@ 4648 @LENGTH@ 9


UPD EnumDeclaration@@[public, static]CryptoOperation,  @TO@ [static]CryptoOperation,  @AT@ 18796 @LENGTH@ 64
---DEL Modifier@@public @AT@ 18796 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientScopeVoter, [AccessDecisionVoter<Object>] @TO@ [@Deprecated, public]ClientScopeVoter, [AccessDecisionVoter<Object>] @AT@ 1128 @LENGTH@ 3451
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientScopeVoter, [AccessDecisionVoter<Object>] @AT@ 1305 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, String[], [DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"servlet","undertow","jetty","restlet","netty-http","netty4-http","spark-java","coap"}] @TO@ public, static, final, String[], [DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"servlet","undertow","jetty","restlet","netty-http","spark-java","coap"}] @AT@ 2451 @LENGTH@ 171
---UPD VariableDeclarationFragment@@DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"servlet","undertow","jetty","restlet","netty-http","netty4-http","spark-java","coap"} @TO@ DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"servlet","undertow","jetty","restlet","netty-http","spark-java","coap"} @AT@ 2480 @LENGTH@ 141
------UPD ArrayCreation@@new String[]{"servlet","undertow","jetty","restlet","netty-http","netty4-http","spark-java","coap"} @TO@ new String[]{"servlet","undertow","jetty","restlet","netty-http","spark-java","coap"} @AT@ 2515 @LENGTH@ 106
---------UPD ArrayInitializer@@{"servlet","undertow","jetty","restlet","netty-http","netty4-http","spark-java","coap"} @TO@ {"servlet","undertow","jetty","restlet","netty-http","spark-java","coap"} @AT@ 2527 @LENGTH@ 94
------------DEL StringLiteral@@"netty4-http" @AT@ 2585 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @AT@ 2475 @LENGTH@ 680
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
) @AT@ 2475 @LENGTH@ 679
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 2475 @LENGTH@ 98
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2480 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2480 @LENGTH@ 25


UPD TypeDeclaration@@[public]ApprovalStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @TO@ [@Deprecated, public]ApprovalStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @AT@ 1793 @LENGTH@ 7663
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ApprovalStoreUserApprovalHandler, [UserApprovalHandler, InitializingBean] @AT@ 1970 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4212 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4219 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 4219 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 4219 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 4219 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 4224 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 4219 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 4240 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 4249 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 4249 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 4261 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 4261 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 4266 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 4249 @LENGTH@ 7


UPD TypeDeclaration@@[public]AuthorizationServerConfigurerAdapter, [AuthorizationServerConfigurer] @TO@ [@Deprecated, public]AuthorizationServerConfigurerAdapter, [AuthorizationServerConfigurer] @AT@ 1062 @LENGTH@ 404
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationServerConfigurerAdapter, [AuthorizationServerConfigurer] @AT@ 1240 @LENGTH@ 11


INS WhileStatement@@while (n++ < 100 && cacheCount.get() != 1) {  Thread.sleep(100);} @TO@ MethodDeclaration@@public, void, MethodName:testDeferredChannelCacheNack, Exception,  @AT@ 4230 @LENGTH@ 70
---INS InfixExpression@@n++ < 100 && cacheCount.get() != 1 @TO@ WhileStatement@@while (n++ < 100 && cacheCount.get() != 1) {  Thread.sleep(100);} @AT@ 4237 @LENGTH@ 34
------INS InfixExpression@@n++ < 100 @TO@ InfixExpression@@n++ < 100 && cacheCount.get() != 1 @AT@ 4237 @LENGTH@ 9
---------INS PostfixExpression@@n++ @TO@ InfixExpression@@n++ < 100 @AT@ 4237 @LENGTH@ 3
------------INS SimpleName@@n @TO@ PostfixExpression@@n++ @AT@ 4237 @LENGTH@ 1
------------INS Operator@@++ @TO@ PostfixExpression@@n++ @AT@ 4239 @LENGTH@ 2
---------INS Operator@@< @TO@ InfixExpression@@n++ < 100 @AT@ 4240 @LENGTH@ 1
---------INS NumberLiteral@@100 @TO@ InfixExpression@@n++ < 100 @AT@ 4243 @LENGTH@ 3
------INS Operator@@&& @TO@ InfixExpression@@n++ < 100 && cacheCount.get() != 1 @AT@ 4246 @LENGTH@ 2
------INS InfixExpression@@cacheCount.get() != 1 @TO@ InfixExpression@@n++ < 100 && cacheCount.get() != 1 @AT@ 4250 @LENGTH@ 21
---------INS MethodInvocation@@cacheCount.get() @TO@ InfixExpression@@cacheCount.get() != 1 @AT@ 4250 @LENGTH@ 16
------------INS SimpleName@@Name:cacheCount @TO@ MethodInvocation@@cacheCount.get() @AT@ 4250 @LENGTH@ 10
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@cacheCount.get() @AT@ 4261 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@cacheCount.get() != 1 @AT@ 4266 @LENGTH@ 2
---------INS NumberLiteral@@1 @TO@ InfixExpression@@cacheCount.get() != 1 @AT@ 4270 @LENGTH@ 1
---INS Block@@WhileBody:{  Thread.sleep(100);} @TO@ WhileStatement@@while (n++ < 100 && cacheCount.get() != 1) {  Thread.sleep(100);} @AT@ 4273 @LENGTH@ 27
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(100) @TO@ Block@@WhileBody:{  Thread.sleep(100);} @AT@ 4278 @LENGTH@ 18
---------INS MethodInvocation@@Thread.sleep(100) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(100) @AT@ 4278 @LENGTH@ 17
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(100) @AT@ 4278 @LENGTH@ 6
------------INS SimpleName@@MethodName:sleep:[100] @TO@ MethodInvocation@@Thread.sleep(100) @AT@ 4285 @LENGTH@ 10
---------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:sleep:[100] @AT@ 4291 @LENGTH@ 3


UPD TypeDeclaration@@[public, static]AdvancedIAMEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIAMEndpointBuilder, [EndpointProducerBuilder] @AT@ 2275 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2282 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ClientContextFilter, [Filter, InitializingBean] @TO@ [@Deprecated, public]OAuth2ClientContextFilter, [Filter, InitializingBean] @AT@ 1257 @LENGTH@ 4031
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ClientContextFilter, [Filter, InitializingBean] @AT@ 1434 @LENGTH@ 11


UPD FieldDeclaration@@private, Task<? extends Serializable>, [task] @TO@ private, Task<?>, [task] @AT@ 1300 @LENGTH@ 42
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1308 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]OpenshiftBuildsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]OpenshiftBuildsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1449 @LENGTH@ 7119
---DEL Modifier@@static @AT@ 1456 @LENGTH@ 6


UPD MethodDeclaration@@public, JwkSetUriJwtDecoderBuilder, MethodName:jwsAlgorithm, JwsAlgorithm jwsAlgorithm,  @TO@ public, JwkSetUriJwtDecoderBuilder, MethodName:jwsAlgorithm, SignatureAlgorithm signatureAlgorithm,  @AT@ 8153 @LENGTH@ 226
---UPD SingleVariableDeclaration@@JwsAlgorithm jwsAlgorithm @TO@ SignatureAlgorithm signatureAlgorithm @AT@ 8200 @LENGTH@ 25
------UPD SimpleType@@JwsAlgorithm @TO@ SignatureAlgorithm @AT@ 8200 @LENGTH@ 12
------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 8213 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ MethodInvocation:Assert.notNull(signatureAlgorithm,"signatureAlgorithm cannot be null") @AT@ 8232 @LENGTH@ 60
------UPD MethodInvocation@@Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ Assert.notNull(signatureAlgorithm,"signatureAlgorithm cannot be null") @AT@ 8232 @LENGTH@ 59
---------UPD SimpleName@@MethodName:notNull:[jwsAlgorithm, "jwsAlgorithm cannot be null"] @TO@ MethodName:notNull:[signatureAlgorithm, "signatureAlgorithm cannot be null"] @AT@ 8239 @LENGTH@ 52
------------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 8247 @LENGTH@ 12
------------UPD StringLiteral@@"jwsAlgorithm cannot be null" @TO@ "signatureAlgorithm cannot be null" @AT@ 8261 @LENGTH@ 29
---UPD ExpressionStatement@@Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8296 @LENGTH@ 63
------UPD Assignment@@this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8296 @LENGTH@ 62
---------UPD MethodInvocation@@JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8316 @LENGTH@ 42
------------UPD SimpleName@@MethodName:parse:[jwsAlgorithm.getName()] @TO@ MethodName:parse:[signatureAlgorithm.getName()] @AT@ 8329 @LENGTH@ 29
---------------UPD MethodInvocation@@jwsAlgorithm.getName() @TO@ signatureAlgorithm.getName() @AT@ 8335 @LENGTH@ 22
------------------UPD SimpleName@@Name:jwsAlgorithm @TO@ Name:signatureAlgorithm @AT@ 8335 @LENGTH@ 12


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]VerificationFailedException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]VerificationFailedException, OAuthException @AT@ 756 @LENGTH@ 166
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]VerificationFailedException, OAuthException @AT@ 1005 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, public]GlobalMethodSecurityConfiguration, [ImportAware, SmartInitializingSingleton, BeanFactoryAware] @TO@ [@Configuration(proxyBeanMethods=false), public]GlobalMethodSecurityConfiguration, [ImportAware, SmartInitializingSingleton, BeanFactoryAware] @AT@ 4703 @LENGTH@ 14548
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, public]GlobalMethodSecurityConfiguration, [ImportAware, SmartInitializingSingleton, BeanFactoryAware] @AT@ 4703 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 4703 @LENGTH@ 14


UPD MethodDeclaration@@default, StAXEndpointBuilder, MethodName:stAX, String path,  @TO@ default, StAXEndpointBuilder, MethodName:stax, String path,  @AT@ 4307 @LENGTH@ 354
---UPD SimpleName@@MethodName:stAX @TO@ MethodName:stax @AT@ 4335 @LENGTH@ 4


UPD TypeDeclaration@@[@FrameworkEndpoint, public]TokenEndpoint, AbstractEndpoint @TO@ [@FrameworkEndpoint, @Deprecated, public]TokenEndpoint, AbstractEndpoint @AT@ 3406 @LENGTH@ 5971
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]TokenEndpoint, AbstractEndpoint @AT@ 3602 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthRememberMeServices,  @TO@ [@Deprecated, public]OAuthRememberMeServices,  @AT@ 360 @LENGTH@ 705
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthRememberMeServices,  @AT@ 581 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:beforeInit,  @TO@ protected, void, MethodName:beforeInit, Exception,  @AT@ 11545 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:beforeInit,  @AT@ 11580 @LENGTH@ 9


UPD FieldDeclaration@@private, boolean, [autodetectSourceLanguage=false] @TO@ private, boolean, [autodetectSourceLanguage] @AT@ 1928 @LENGTH@ 49
---UPD VariableDeclarationFragment@@autodetectSourceLanguage=false @TO@ autodetectSourceLanguage @AT@ 1944 @LENGTH@ 32
------DEL BooleanLiteral@@false @AT@ 1971 @LENGTH@ 5


UPD IfStatement@@if (Message.CONTENT_TYPE.equalsIgnoreCase(entry.getKey()) && dataFormat.equals(DataFormat.RAW)) {  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  continue;} @TO@ if (Message.CONTENT_TYPE.equalsIgnoreCase(entry.getKey()) && dataFormat.equals(DataFormat.RAW)) {  if (entry.getValue() != null) {    LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());    cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  }  continue;} @AT@ 31015 @LENGTH@ 328
---INS Block@@ThenBody:{  if (entry.getValue() != null) {    LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());    cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  }  continue;} @TO@ IfStatement@@if (Message.CONTENT_TYPE.equalsIgnoreCase(entry.getKey()) && dataFormat.equals(DataFormat.RAW)) {  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  continue;} @AT@ 31111 @LENGTH@ 306
------INS IfStatement@@if (entry.getValue() != null) {  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());} @TO@ Block@@ThenBody:{  if (entry.getValue() != null) {    LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());    cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  }  continue;} @AT@ 31129 @LENGTH@ 248
---------MOV Block@@ThenBody:{  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  continue;} @TO@ IfStatement@@if (entry.getValue() != null) {  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());} @AT@ 31111 @LENGTH@ 232
------------DEL ContinueStatement@@ @AT@ 31320 @LENGTH@ 9
---------INS InfixExpression@@entry.getValue() != null @TO@ IfStatement@@if (entry.getValue() != null) {  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());} @AT@ 31133 @LENGTH@ 24
------------INS MethodInvocation@@entry.getValue() @TO@ InfixExpression@@entry.getValue() != null @AT@ 31133 @LENGTH@ 16
---------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 31133 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 31139 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@entry.getValue() != null @AT@ 31149 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@entry.getValue() != null @AT@ 31153 @LENGTH@ 4
------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if (entry.getValue() != null) {    LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());    cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  }  continue;} @AT@ 31394 @LENGTH@ 9
---UPD Block@@ThenBody:{  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());  continue;} @TO@ ThenBody:{  LOG.debug("Propagate to CXF header: {} value: {}",Message.CONTENT_TYPE,entry.getValue());  cxfContext.put(Message.CONTENT_TYPE,entry.getValue().toString());} @AT@ 31111 @LENGTH@ 232


UPD EnumDeclaration@@[public, static]EndpointType,  @TO@ [static]EndpointType,  @AT@ 54674 @LENGTH@ 71
---DEL Modifier@@public @AT@ 54674 @LENGTH@ 6


UPD IfStatement@@if (response.getStatusCode() != HTTPResponse.SC_OK) {  throw new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode());} @TO@ if (response.getStatusCode() != HTTPResponse.SC_OK) {  return responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())));} @AT@ 5070 @LENGTH@ 175
---UPD Block@@ThenBody:{  throw new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode());} @TO@ ThenBody:{  return responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())));} @AT@ 5122 @LENGTH@ 123
------DEL ThrowStatement@@ClassInstanceCreation:new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()) @AT@ 5127 @LENGTH@ 114
------INS ReturnStatement@@MethodInvocation:responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @TO@ Block@@ThenBody:{  throw new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode());} @AT@ 5240 @LENGTH@ 217
---------INS MethodInvocation@@responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @TO@ ReturnStatement@@MethodInvocation:responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @AT@ 5247 @LENGTH@ 209
------------INS MethodInvocation@@MethodName:map:[DataBufferUtils::release] @TO@ MethodInvocation@@responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @AT@ 5247 @LENGTH@ 78
------------INS MethodInvocation@@MethodName:bodyToFlux:[DataBuffer.class] @TO@ MethodInvocation@@responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @AT@ 5247 @LENGTH@ 43
---------------INS TypeLiteral@@DataBuffer.class @TO@ MethodInvocation@@MethodName:bodyToFlux:[DataBuffer.class] @AT@ 5273 @LENGTH@ 16
------------INS SimpleName@@Name:responseEntity @TO@ MethodInvocation@@responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @AT@ 5247 @LENGTH@ 14
------------INS SimpleName@@MethodName:then:[Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))] @TO@ MethodInvocation@@responseEntity.bodyToFlux(DataBuffer.class).map(DataBufferUtils::release).then(Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))) @AT@ 5331 @LENGTH@ 125
---------------INS MethodInvocation@@Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())) @TO@ SimpleName@@MethodName:then:[Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode()))] @AT@ 5336 @LENGTH@ 119
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())) @AT@ 5336 @LENGTH@ 4
------------------INS SimpleName@@MethodName:error:[new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())] @TO@ MethodInvocation@@Mono.error(new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())) @AT@ 5341 @LENGTH@ 114
---------------------MOV ClassInstanceCreation@@OAuth2IntrospectionException["Introspection endpoint responded with " + response.getStatusCode()] @TO@ SimpleName@@MethodName:error:[new OAuth2IntrospectionException("Introspection endpoint responded with " + response.getStatusCode())] @AT@ 5133 @LENGTH@ 107


UPD EnumDeclaration@@[public, static]Action,  @TO@ [static]Action,  @AT@ 44781 @LENGTH@ 87
---DEL Modifier@@public @AT@ 44781 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidClientException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidClientException, ClientAuthenticationException @AT@ 181 @LENGTH@ 310
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidClientException, ClientAuthenticationException @AT@ 387 @LENGTH@ 11


UPD MethodDeclaration@@default, CouchDbEndpointBuilder, MethodName:couchDb, String path,  @TO@ default, CouchDbEndpointBuilder, MethodName:couchdb, String path,  @AT@ 23900 @LENGTH@ 378
---UPD SimpleName@@MethodName:couchDb @TO@ MethodName:couchdb @AT@ 23931 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]SessionAcknowledgementType,  @TO@ [static]SessionAcknowledgementType,  @AT@ 79953 @LENGTH@ 140
---DEL Modifier@@public @AT@ 79953 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42974 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42974 @LENGTH@ 6


UPD TypeDeclaration@@[public]ResourceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ResourceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1813 @LENGTH@ 5657
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1991 @LENGTH@ 11


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore("javax.security.auth.*"), public]SecurityMockMvcRequestPostProcessorsAuthenticationTests,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SecurityMockMvcRequestPostProcessorsAuthenticationTests,  @AT@ 1956 @LENGTH@ 1062
---UPD SingleMemberAnnotation@@@PowerMockIgnore("javax.security.auth.*") @TO@ @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}) @AT@ 2032 @LENGTH@ 41


INS ExpressionStatement@@MethodInvocation:registerExtension(MongoDBMetaExtension::new) @TO@ MethodDeclaration@@public, voidMethodName:MongoDbComponent, CamelContext context,  @AT@ 2013 @LENGTH@ 45
---INS MethodInvocation@@registerExtension(MongoDBMetaExtension::new) @TO@ ExpressionStatement@@MethodInvocation:registerExtension(MongoDBMetaExtension::new) @AT@ 2013 @LENGTH@ 44
------INS SimpleName@@MethodName:registerExtension:[MongoDBMetaExtension::new] @TO@ MethodInvocation@@registerExtension(MongoDBMetaExtension::new) @AT@ 2013 @LENGTH@ 44


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 5219 @LENGTH@ 536
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 5292 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 5292 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 5297 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]MongoDbOperation,  @TO@ [static]MongoDbOperation,  @AT@ 54705 @LENGTH@ 193
---DEL Modifier@@public @AT@ 54705 @LENGTH@ 6


MOV FieldDeclaration@@private, MyKafkaHeaderDeserializer, [deserializer=new MyKafkaHeaderDeserializer()] @TO@ TypeDeclaration@@[public]KafkaConsumerFullTest, BaseEmbeddedKafkaTest @AT@ 1630 @LENGTH@ 81


UPD MethodDeclaration@@public, Task<? extends Serializable>, MethodName:getCreateTableTask, Set<ReadEntity> inputs, Set<WriteEntity> outputs, HiveConf conf,  @TO@ public, Task<?>, MethodName:getCreateTableTask, Set<ReadEntity> inputs, Set<WriteEntity> outputs, HiveConf conf,  @AT@ 10867 @LENGTH@ 377
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 10874 @LENGTH@ 28


UPD MethodDeclaration@@public, void, MethodName:addAfterReceivePostProcessors, MessagePostProcessor... afterReceivePostProcessors,  @TO@ public, void, MethodName:addAfterReceivePostProcessors, MessagePostProcessor... postprocessors,  @AT@ 18407 @LENGTH@ 486
---UPD SingleVariableDeclaration@@MessagePostProcessor... afterReceivePostProcessors @TO@ MessagePostProcessor... postprocessors @AT@ 18449 @LENGTH@ 50
------UPD SimpleName@@afterReceivePostProcessors @TO@ postprocessors @AT@ 18473 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(afterReceivePostProcessors,"'afterReceivePostProcessors' cannot be null") @TO@ MethodInvocation:Assert.notNull(postprocessors,"'afterReceivePostProcessors' cannot be null") @AT@ 18505 @LENGTH@ 90
------UPD MethodInvocation@@Assert.notNull(afterReceivePostProcessors,"'afterReceivePostProcessors' cannot be null") @TO@ Assert.notNull(postprocessors,"'afterReceivePostProcessors' cannot be null") @AT@ 18505 @LENGTH@ 89
---------UPD SimpleName@@MethodName:notNull:[afterReceivePostProcessors, "'afterReceivePostProcessors' cannot be null"] @TO@ MethodName:notNull:[postprocessors, "'afterReceivePostProcessors' cannot be null"] @AT@ 18512 @LENGTH@ 82
------------UPD SimpleName@@afterReceivePostProcessors @TO@ postprocessors @AT@ 18520 @LENGTH@ 26
---UPD ExpressionStatement@@MethodInvocation:this.afterReceivePostProcessors.addAll(Arrays.asList(afterReceivePostProcessors)) @TO@ MethodInvocation:this.afterReceivePostProcessors.addAll(Arrays.asList(postprocessors)) @AT@ 18707 @LENGTH@ 82
------UPD MethodInvocation@@this.afterReceivePostProcessors.addAll(Arrays.asList(afterReceivePostProcessors)) @TO@ this.afterReceivePostProcessors.addAll(Arrays.asList(postprocessors)) @AT@ 18707 @LENGTH@ 81
---------UPD SimpleName@@MethodName:addAll:[Arrays.asList(afterReceivePostProcessors)] @TO@ MethodName:addAll:[Arrays.asList(postprocessors)] @AT@ 18739 @LENGTH@ 49
------------UPD MethodInvocation@@Arrays.asList(afterReceivePostProcessors) @TO@ Arrays.asList(postprocessors) @AT@ 18746 @LENGTH@ 41
---------------UPD SimpleName@@MethodName:asList:[afterReceivePostProcessors] @TO@ MethodName:asList:[postprocessors] @AT@ 18753 @LENGTH@ 34
------------------UPD SimpleName@@afterReceivePostProcessors @TO@ postprocessors @AT@ 18760 @LENGTH@ 26


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ @SuppressWarnings("unchecked") Task<?> currTask=(Task<?>)nd; @AT@ 3246 @LENGTH@ 111
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3283 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 3312 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 3323 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3324 @LENGTH@ 28


INS MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @TO@ TypeDeclaration@@[public]HandlerAdapter,  @AT@ 3140 @LENGTH@ 338
---INS Modifier@@public @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3140 @LENGTH@ 6
---INS SimpleType@@InvocationResult @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3147 @LENGTH@ 16
---INS SimpleName@@MethodName:getInvocationResultFor @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3164 @LENGTH@ 22
---INS SingleVariableDeclaration@@Object result @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3187 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object result @AT@ 3187 @LENGTH@ 6
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@Object result @AT@ 3194 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object inboundPayload @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3202 @LENGTH@ 21
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object inboundPayload @AT@ 3202 @LENGTH@ 6
------INS SimpleName@@inboundPayload @TO@ SingleVariableDeclaration@@Object inboundPayload @AT@ 3209 @LENGTH@ 14
---INS IfStatement@@if (this.invokerHandlerMethod != null) {  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} else {  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 3229 @LENGTH@ 246
------INS InfixExpression@@this.invokerHandlerMethod != null @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} else {  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @AT@ 3233 @LENGTH@ 33
---------INS FieldAccess@@this.invokerHandlerMethod @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 3233 @LENGTH@ 25
------------INS ThisExpression@@this @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 3233 @LENGTH@ 4
------------INS SimpleName@@invokerHandlerMethod @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 3238 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 3258 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@this.invokerHandlerMethod != null @AT@ 3262 @LENGTH@ 4
------INS Block@@ThenBody:{  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} else {  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @AT@ 3268 @LENGTH@ 113
---------INS ReturnStatement@@ClassInstanceCreation:new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType()) @TO@ Block@@ThenBody:{  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} @AT@ 3273 @LENGTH@ 104
------------INS ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @TO@ ReturnStatement@@ClassInstanceCreation:new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType()) @AT@ 3280 @LENGTH@ 96
---------------INS New@@new @TO@ ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @AT@ 3280 @LENGTH@ 3
---------------INS SimpleType@@InvocationResult @TO@ ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @AT@ 3284 @LENGTH@ 16
---------------INS SimpleName@@result @TO@ ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @AT@ 3301 @LENGTH@ 6
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @AT@ 3309 @LENGTH@ 4
---------------INS MethodInvocation@@this.invokerHandlerMethod.getMethod().getGenericReturnType() @TO@ ClassInstanceCreation@@InvocationResult[result, null, this.invokerHandlerMethod.getMethod().getGenericReturnType()] @AT@ 3315 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getGenericReturnType() @AT@ 3315 @LENGTH@ 37
------------------INS FieldAccess@@this.invokerHandlerMethod @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getGenericReturnType() @AT@ 3315 @LENGTH@ 25
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 3315 @LENGTH@ 4
---------------------INS SimpleName@@invokerHandlerMethod @TO@ FieldAccess@@this.invokerHandlerMethod @AT@ 3320 @LENGTH@ 20
------------------INS SimpleName@@MethodName:getGenericReturnType:[] @TO@ MethodInvocation@@this.invokerHandlerMethod.getMethod().getGenericReturnType() @AT@ 3353 @LENGTH@ 22
------INS Block@@ElseBody:{  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @TO@ IfStatement@@if (this.invokerHandlerMethod != null) {  return new InvocationResult(result,null,this.invokerHandlerMethod.getMethod().getGenericReturnType());} else {  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @AT@ 3389 @LENGTH@ 86
---------INS ReturnStatement@@MethodInvocation:this.delegatingHandler.getInvocationResultFor(result,inboundPayload) @TO@ Block@@ElseBody:{  return this.delegatingHandler.getInvocationResultFor(result,inboundPayload);} @AT@ 3394 @LENGTH@ 77
------------INS MethodInvocation@@this.delegatingHandler.getInvocationResultFor(result,inboundPayload) @TO@ ReturnStatement@@MethodInvocation:this.delegatingHandler.getInvocationResultFor(result,inboundPayload) @AT@ 3401 @LENGTH@ 69
---------------INS FieldAccess@@this.delegatingHandler @TO@ MethodInvocation@@this.delegatingHandler.getInvocationResultFor(result,inboundPayload) @AT@ 3401 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegatingHandler @AT@ 3401 @LENGTH@ 4
------------------INS SimpleName@@delegatingHandler @TO@ FieldAccess@@this.delegatingHandler @AT@ 3406 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getInvocationResultFor:[result, inboundPayload] @TO@ MethodInvocation@@this.delegatingHandler.getInvocationResultFor(result,inboundPayload) @AT@ 3424 @LENGTH@ 46
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:getInvocationResultFor:[result, inboundPayload] @AT@ 3447 @LENGTH@ 6
------------------INS SimpleName@@inboundPayload @TO@ SimpleName@@MethodName:getInvocationResultFor:[result, inboundPayload] @AT@ 3455 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]AdvancedChunkEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedChunkEndpointBuilder, [EndpointProducerBuilder] @AT@ 4667 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 4674 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]DnsType,  @TO@ [static]DnsType,  @AT@ 4473 @LENGTH@ 70
---DEL Modifier@@public @AT@ 4473 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthParametersException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidOAuthParametersException, OAuthException @AT@ 747 @LENGTH@ 175
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthParametersException, OAuthException @AT@ 996 @LENGTH@ 11


INS MethodDeclaration@@boolean, MethodName:isCollectionLikeQuery,  @TO@ TypeDeclaration@@[final]Neo4jQueryMethod, QueryMethod @AT@ 2354 @LENGTH@ 89
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isCollectionLikeQuery,  @AT@ 2346 @LENGTH@ 7
---INS SimpleName@@MethodName:isCollectionLikeQuery @TO@ MethodDeclaration@@boolean, MethodName:isCollectionLikeQuery,  @AT@ 2354 @LENGTH@ 21
---INS ReturnStatement@@InfixExpression:super.isCollectionQuery() || super.isStreamQuery() @TO@ MethodDeclaration@@boolean, MethodName:isCollectionLikeQuery,  @AT@ 2382 @LENGTH@ 58
------INS InfixExpression@@super.isCollectionQuery() || super.isStreamQuery() @TO@ ReturnStatement@@InfixExpression:super.isCollectionQuery() || super.isStreamQuery() @AT@ 2389 @LENGTH@ 50
---------INS SuperMethodInvocation@@super.isCollectionQuery() @TO@ InfixExpression@@super.isCollectionQuery() || super.isStreamQuery() @AT@ 2389 @LENGTH@ 25
------------INS SimpleName@@MethodName:isCollectionQuery:[] @TO@ SuperMethodInvocation@@super.isCollectionQuery() @AT@ 2395 @LENGTH@ 17
---------INS Operator@@|| @TO@ InfixExpression@@super.isCollectionQuery() || super.isStreamQuery() @AT@ 2414 @LENGTH@ 2
---------INS SuperMethodInvocation@@super.isStreamQuery() @TO@ InfixExpression@@super.isCollectionQuery() || super.isStreamQuery() @AT@ 2418 @LENGTH@ 21
------------INS SimpleName@@MethodName:isStreamQuery:[] @TO@ SuperMethodInvocation@@super.isStreamQuery() @AT@ 2424 @LENGTH@ 13


UPD Block@@ThenBody:{  OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientRepository);  if (this.accessTokenResponseClient != null) {    authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient);  }  argumentResolvers.add(authorizedClientArgumentResolver);} @TO@ ThenBody:{  OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build();  DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(this.clientRegistrationRepository,this.authorizedClientRepository);  authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider);  argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager));} @AT@ 3236 @LENGTH@ 439
---UPD VariableDeclarationStatement@@OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientRepository); @TO@ DefaultOAuth2AuthorizedClientManager authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(this.clientRegistrationRepository,this.authorizedClientRepository); @AT@ 3242 @LENGTH@ 200
------UPD SimpleType@@OAuth2AuthorizedClientArgumentResolver @TO@ DefaultOAuth2AuthorizedClientManager @AT@ 3242 @LENGTH@ 38
------UPD VariableDeclarationFragment@@authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientRepository) @TO@ authorizedClientManager=new DefaultOAuth2AuthorizedClientManager(this.clientRegistrationRepository,this.authorizedClientRepository) @AT@ 3281 @LENGTH@ 160
---------UPD SimpleName@@authorizedClientArgumentResolver @TO@ authorizedClientManager @AT@ 3281 @LENGTH@ 32
---------UPD ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[this.clientRegistrationRepository, this.authorizedClientRepository] @TO@ DefaultOAuth2AuthorizedClientManager[this.clientRegistrationRepository, this.authorizedClientRepository] @AT@ 3322 @LENGTH@ 119
------------UPD SimpleType@@OAuth2AuthorizedClientArgumentResolver @TO@ DefaultOAuth2AuthorizedClientManager @AT@ 3326 @LENGTH@ 38
---DEL IfStatement@@if (this.accessTokenResponseClient != null) {  authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient);} @AT@ 3447 @LENGTH@ 162
------DEL InfixExpression@@this.accessTokenResponseClient != null @AT@ 3451 @LENGTH@ 38
---------DEL FieldAccess@@this.accessTokenResponseClient @AT@ 3451 @LENGTH@ 30
------------DEL ThisExpression@@this @AT@ 3451 @LENGTH@ 4
------------DEL SimpleName@@accessTokenResponseClient @AT@ 3456 @LENGTH@ 25
---------DEL Operator@@!= @AT@ 3481 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3485 @LENGTH@ 4
------DEL Block@@ThenBody:{  authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient);} @AT@ 3491 @LENGTH@ 118
---MOV ExpressionStatement@@MethodInvocation:authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient) @TO@ Block@@ThenBody:{  OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientRepository);  if (this.accessTokenResponseClient != null) {    authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient);  }  argumentResolvers.add(authorizedClientArgumentResolver);} @AT@ 3498 @LENGTH@ 105
------UPD MethodInvocation@@authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient) @TO@ authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 3498 @LENGTH@ 104
---------UPD SimpleName@@Name:authorizedClientArgumentResolver @TO@ Name:authorizedClientManager @AT@ 3498 @LENGTH@ 32
---------UPD SimpleName@@MethodName:setClientCredentialsTokenResponseClient:[this.accessTokenResponseClient] @TO@ MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @AT@ 3531 @LENGTH@ 71
------------DEL FieldAccess@@this.accessTokenResponseClient @AT@ 3571 @LENGTH@ 30
---------------DEL ThisExpression@@this @AT@ 3571 @LENGTH@ 4
---------------DEL SimpleName@@accessTokenResponseClient @AT@ 3576 @LENGTH@ 25
------------INS SimpleName@@authorizedClientProvider @TO@ SimpleName@@MethodName:setClientCredentialsTokenResponseClient:[this.accessTokenResponseClient] @AT@ 4082 @LENGTH@ 24
---INS VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build(); @TO@ Block@@ThenBody:{  OAuth2AuthorizedClientArgumentResolver authorizedClientArgumentResolver=new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,this.authorizedClientRepository);  if (this.accessTokenResponseClient != null) {    authorizedClientArgumentResolver.setClientCredentialsTokenResponseClient(this.accessTokenResponseClient);  }  argumentResolvers.add(authorizedClientArgumentResolver);} @AT@ 3506 @LENGTH@ 335
------INS SimpleType@@OAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build(); @AT@ 3506 @LENGTH@ 30
------INS VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build(); @AT@ 3537 @LENGTH@ 303
---------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3537 @LENGTH@ 24
---------INS MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @TO@ VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 270
------------INS MethodInvocation@@MethodName:clientCredentials:[configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 253
---------------INS LambdaExpression@@configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @TO@ MethodInvocation@@MethodName:clientCredentials:[configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)] @AT@ 3698 @LENGTH@ 124
------------------INS VariableDeclarationFragment@@configurer @TO@ LambdaExpression@@configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @AT@ 3698 @LENGTH@ 10
---------------------INS SimpleName@@configurer @TO@ VariableDeclarationFragment@@configurer @AT@ 3698 @LENGTH@ 10
------------------INS MethodInvocation@@Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @TO@ LambdaExpression@@configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @AT@ 3722 @LENGTH@ 100
---------------------INS MethodInvocation@@MethodName:ofNullable:[this.accessTokenResponseClient] @TO@ MethodInvocation@@Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @AT@ 3722 @LENGTH@ 51
------------------------INS FieldAccess@@this.accessTokenResponseClient @TO@ MethodInvocation@@MethodName:ofNullable:[this.accessTokenResponseClient] @AT@ 3742 @LENGTH@ 30
---------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 3742 @LENGTH@ 4
---------------------------INS SimpleName@@accessTokenResponseClient @TO@ FieldAccess@@this.accessTokenResponseClient @AT@ 3747 @LENGTH@ 25
---------------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @AT@ 3722 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:ifPresent:[configurer::accessTokenResponseClient] @TO@ MethodInvocation@@Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient) @AT@ 3774 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:refreshToken:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 100
------------INS MethodInvocation@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 76
------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 47
------------INS SimpleName@@Name:OAuth2AuthorizedClientProviderBuilder @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3570 @LENGTH@ 37
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> Optional.ofNullable(this.accessTokenResponseClient).ifPresent(configurer::accessTokenResponseClient)).build() @AT@ 3833 @LENGTH@ 7
---UPD ExpressionStatement@@MethodInvocation:argumentResolvers.add(authorizedClientArgumentResolver) @TO@ MethodInvocation:argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @AT@ 3614 @LENGTH@ 56
------UPD MethodInvocation@@argumentResolvers.add(authorizedClientArgumentResolver) @TO@ argumentResolvers.add(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @AT@ 3614 @LENGTH@ 55
---------UPD SimpleName@@MethodName:add:[authorizedClientArgumentResolver] @TO@ MethodName:add:[new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)] @AT@ 3632 @LENGTH@ 37
------------DEL SimpleName@@authorizedClientArgumentResolver @AT@ 3636 @LENGTH@ 32
------------INS ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @TO@ SimpleName@@MethodName:add:[authorizedClientArgumentResolver] @AT@ 4135 @LENGTH@ 67
---------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 4135 @LENGTH@ 3
---------------INS SimpleType@@OAuth2AuthorizedClientArgumentResolver @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 4139 @LENGTH@ 38
---------------INS SimpleName@@authorizedClientManager @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 4178 @LENGTH@ 23


UPD ExpressionStatement@@Assignment:this.packageNameGenerator=(s) -> packageName @TO@ Assignment:this.packageNameGenerator=s -> packageName @AT@ 2971 @LENGTH@ 47
---UPD Assignment@@this.packageNameGenerator=(s) -> packageName @TO@ this.packageNameGenerator=s -> packageName @AT@ 2971 @LENGTH@ 46
------UPD LambdaExpression@@(s) -> packageName @TO@ s -> packageName @AT@ 2999 @LENGTH@ 18


UPD TypeDeclaration@@[public]SignerVerifier, [Signer, SignatureVerifier] @TO@ [@Deprecated, public]SignerVerifier, [Signer, SignatureVerifier] @AT@ 694 @LENGTH@ 69
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SignerVerifier, [Signer, SignatureVerifier] @AT@ 872 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]CinderEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]CinderEndpointBuilder, [EndpointProducerBuilder] @AT@ 1448 @LENGTH@ 3244
---DEL Modifier@@static @AT@ 1455 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedServiceNowEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedServiceNowEndpointBuilder, [EndpointProducerBuilder] @AT@ 25840 @LENGTH@ 7219
---DEL Modifier@@static @AT@ 25847 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2089 @LENGTH@ 80
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2089 @LENGTH@ 79
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2089 @LENGTH@ 79
---------INS MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 2100 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2100 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2100 @LENGTH@ 35
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 2126 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2100 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2100 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2147 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 2156 @LENGTH@ 10


INS IfStatement@@if (vectorColumnMapping == null) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:finalize,  @AT@ 1752 @LENGTH@ 54
---INS InfixExpression@@vectorColumnMapping == null @TO@ IfStatement@@if (vectorColumnMapping == null) {  return;} @AT@ 1756 @LENGTH@ 27
------INS SimpleName@@vectorColumnMapping @TO@ InfixExpression@@vectorColumnMapping == null @AT@ 1756 @LENGTH@ 19
------INS Operator@@== @TO@ InfixExpression@@vectorColumnMapping == null @AT@ 1775 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@vectorColumnMapping == null @AT@ 1779 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (vectorColumnMapping == null) {  return;} @AT@ 1785 @LENGTH@ 21
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 1793 @LENGTH@ 7


UPD FieldDeclaration@@private, static, final, String, [READ_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check you annotation setup at the converter implementation."] @TO@ private, static, final, String, [READ_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation."] @AT@ 2303 @LENGTH@ 250
---UPD VariableDeclarationFragment@@READ_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check you annotation setup at the converter implementation." @TO@ READ_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation." @AT@ 2331 @LENGTH@ 221
------UPD StringLiteral@@"Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check you annotation setup at the converter implementation." @TO@ "Registering converter from %s to %s as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation." @AT@ 2359 @LENGTH@ 193


UPD IfStatement@@if (timeout == null || timeout.getValue() == -1) {  this.timeout=null;} else {  this.timeout=Duration.ofMillis(TimeUnit.MILLISECONDS.convert(timeout.getValue(),timeout.getTimeUnit()));} @TO@ if (timeout == null || timeout.getValue() < 0) {  this.timeout=null;} else {  this.timeout=Duration.ofMillis(TimeUnit.MILLISECONDS.convert(timeout.getValue(),timeout.getTimeUnit()));} @AT@ 2968 @LENGTH@ 230
---UPD InfixExpression@@timeout == null || timeout.getValue() == -1 @TO@ timeout == null || timeout.getValue() < 0 @AT@ 2972 @LENGTH@ 43
------UPD InfixExpression@@timeout.getValue() == -1 @TO@ timeout.getValue() < 0 @AT@ 2991 @LENGTH@ 24
---------UPD Operator@@== @TO@ < @AT@ 3009 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@timeout.getValue() == -1 @AT@ 3012 @LENGTH@ 1
---------DEL PrefixExpression@@-1 @AT@ 3013 @LENGTH@ 2
------------DEL Operator@@- @AT@ 3013 @LENGTH@ 1
------------DEL NumberLiteral@@1 @AT@ 3014 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.23.0.Final").dependency("org.drools:drools-compiler:7.23.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 300
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.23.0.Final").dependency("org.drools:drools-compiler:7.23.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 292
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.23.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.22.0.Final"] @AT@ 1448 @LENGTH@ 224
---------UPD StringLiteral@@"org.drools:drools-compiler:7.23.0.Final" @TO@ "org.drools:drools-compiler:7.22.0.Final" @AT@ 1630 @LENGTH@ 41
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.23.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.22.0.Final"] @AT@ 1448 @LENGTH@ 153
---------UPD StringLiteral@@"org.drools:drools-core:7.23.0.Final" @TO@ "org.drools:drools-core:7.22.0.Final" @AT@ 1563 @LENGTH@ 37


UPD TypeDeclaration@@[public]OAuth2SecurityExpressionMethods,  @TO@ [@Deprecated, public]OAuth2SecurityExpressionMethods,  @AT@ 1201 @LENGTH@ 5575
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2SecurityExpressionMethods,  @AT@ 1378 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]Mina2TextLineDelimiter,  @TO@ [static]Mina2TextLineDelimiter,  @AT@ 71962 @LENGTH@ 92
---DEL Modifier@@public @AT@ 71962 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2AuthenticationDetailsSource, [AuthenticationDetailsSource<HttpServletRequest,OAuth2AuthenticationDetails>] @TO@ [@Deprecated, public]OAuth2AuthenticationDetailsSource, [AuthenticationDetailsSource<HttpServletRequest,OAuth2AuthenticationDetails>] @AT@ 917 @LENGTH@ 275
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AuthenticationDetailsSource, [AuthenticationDetailsSource<HttpServletRequest,OAuth2AuthenticationDetails>] @AT@ 1094 @LENGTH@ 11


UPD VariableDeclarationStatement@@String out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class); @AT@ 3610 @LENGTH@ 157
---UPD VariableDeclarationFragment@@out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @AT@ 3617 @LENGTH@ 149
------UPD MethodInvocation@@template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",in.toString(),String.class) @AT@ 3623 @LENGTH@ 143
---------UPD SimpleName@@MethodName:requestBody:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", in.toString(), String.class] @AT@ 3632 @LENGTH@ 134
------------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 3644 @LENGTH@ 92
---------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 3644 @LENGTH@ 25


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UserDeniedAuthorizationException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UserDeniedAuthorizationException, OAuth2Exception @AT@ 95 @LENGTH@ 356
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UserDeniedAuthorizationException, OAuth2Exception @AT@ 301 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedQuartzEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedQuartzEndpointBuilder, [EndpointConsumerBuilder] @AT@ 10997 @LENGTH@ 6708
---DEL Modifier@@static @AT@ 11004 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:context.getRegistry().bind("ssl",createServerSSLContextParameters()) @TO@ MethodDeclaration@@protected, RouteBuilder, MethodName:createRouteBuilder,  @AT@ 1704 @LENGTH@ 70
---INS MethodInvocation@@context.getRegistry().bind("ssl",createServerSSLContextParameters()) @TO@ ExpressionStatement@@MethodInvocation:context.getRegistry().bind("ssl",createServerSSLContextParameters()) @AT@ 1704 @LENGTH@ 69
------INS MethodInvocation@@MethodName:getRegistry:[] @TO@ MethodInvocation@@context.getRegistry().bind("ssl",createServerSSLContextParameters()) @AT@ 1704 @LENGTH@ 21
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRegistry().bind("ssl",createServerSSLContextParameters()) @AT@ 1704 @LENGTH@ 7
------INS SimpleName@@MethodName:bind:["ssl", createServerSSLContextParameters()] @TO@ MethodInvocation@@context.getRegistry().bind("ssl",createServerSSLContextParameters()) @AT@ 1726 @LENGTH@ 47
---------INS StringLiteral@@"ssl" @TO@ SimpleName@@MethodName:bind:["ssl", createServerSSLContextParameters()] @AT@ 1731 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:createServerSSLContextParameters:[] @TO@ SimpleName@@MethodName:bind:["ssl", createServerSSLContextParameters()] @AT@ 1738 @LENGTH@ 34


UPD TypeDeclaration@@[public]HMAC_SHA1SignatureMethod, [OAuthSignatureMethod] @TO@ [@Deprecated, public]HMAC_SHA1SignatureMethod, [OAuthSignatureMethod] @AT@ 1047 @LENGTH@ 4013
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]HMAC_SHA1SignatureMethod, [OAuthSignatureMethod] @AT@ 1268 @LENGTH@ 11


INS ReturnStatement@@LambdaExpression:request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @TO@ MethodDeclaration@@AuthenticationManagerResolver<HttpServletRequest>, MethodName:multitenantAuthenticationManager,  @AT@ 2918 @LENGTH@ 301
---INS LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @TO@ ReturnStatement@@LambdaExpression:request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 2925 @LENGTH@ 293
------INS VariableDeclarationFragment@@request @TO@ LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 2925 @LENGTH@ 7
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request @AT@ 2925 @LENGTH@ 7
------INS VariableDeclarationStatement@@String[] pathParts=request.getRequestURI().split("/"); @TO@ LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 2941 @LENGTH@ 56
---------INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@String[] pathParts=request.getRequestURI().split("/"); @AT@ 2941 @LENGTH@ 8
------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2941 @LENGTH@ 6
---------INS VariableDeclarationFragment@@pathParts=request.getRequestURI().split("/") @TO@ VariableDeclarationStatement@@String[] pathParts=request.getRequestURI().split("/"); @AT@ 2950 @LENGTH@ 46
------------INS SimpleName@@pathParts @TO@ VariableDeclarationFragment@@pathParts=request.getRequestURI().split("/") @AT@ 2950 @LENGTH@ 9
------------INS MethodInvocation@@request.getRequestURI().split("/") @TO@ VariableDeclarationFragment@@pathParts=request.getRequestURI().split("/") @AT@ 2962 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:getRequestURI:[] @TO@ MethodInvocation@@request.getRequestURI().split("/") @AT@ 2962 @LENGTH@ 23
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getRequestURI().split("/") @AT@ 2962 @LENGTH@ 7
---------------INS SimpleName@@MethodName:split:["/"] @TO@ MethodInvocation@@request.getRequestURI().split("/") @AT@ 2986 @LENGTH@ 10
------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:split:["/"] @AT@ 2992 @LENGTH@ 3
------INS VariableDeclarationStatement@@String tenantId=pathParts.length > 0 ? pathParts[1] : null; @TO@ LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 3001 @LENGTH@ 61
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tenantId=pathParts.length > 0 ? pathParts[1] : null; @AT@ 3001 @LENGTH@ 6
---------INS VariableDeclarationFragment@@tenantId=pathParts.length > 0 ? pathParts[1] : null @TO@ VariableDeclarationStatement@@String tenantId=pathParts.length > 0 ? pathParts[1] : null; @AT@ 3008 @LENGTH@ 53
------------INS SimpleName@@tenantId @TO@ VariableDeclarationFragment@@tenantId=pathParts.length > 0 ? pathParts[1] : null @AT@ 3008 @LENGTH@ 8
------------INS ConditionalExpression@@pathParts.length > 0 ? pathParts[1] : null @TO@ VariableDeclarationFragment@@tenantId=pathParts.length > 0 ? pathParts[1] : null @AT@ 3019 @LENGTH@ 42
---------------INS InfixExpression@@pathParts.length > 0 @TO@ ConditionalExpression@@pathParts.length > 0 ? pathParts[1] : null @AT@ 3019 @LENGTH@ 20
------------------INS QualifiedName@@pathParts.length @TO@ InfixExpression@@pathParts.length > 0 @AT@ 3019 @LENGTH@ 16
---------------------INS SimpleName@@pathParts @TO@ QualifiedName@@pathParts.length @AT@ 3019 @LENGTH@ 9
---------------------INS SimpleName@@length @TO@ QualifiedName@@pathParts.length @AT@ 3029 @LENGTH@ 6
------------------INS Operator@@> @TO@ InfixExpression@@pathParts.length > 0 @AT@ 3035 @LENGTH@ 1
------------------INS NumberLiteral@@0 @TO@ InfixExpression@@pathParts.length > 0 @AT@ 3038 @LENGTH@ 1
---------------INS ArrayAccess@@pathParts[1] @TO@ ConditionalExpression@@pathParts.length > 0 ? pathParts[1] : null @AT@ 3042 @LENGTH@ 12
------------------INS SimpleName@@pathParts @TO@ ArrayAccess@@pathParts[1] @AT@ 3042 @LENGTH@ 9
------------------INS NumberLiteral@@1 @TO@ ArrayAccess@@pathParts[1] @AT@ 3052 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ ConditionalExpression@@pathParts.length > 0 ? pathParts[1] : null @AT@ 3057 @LENGTH@ 4
------INS ReturnStatement@@MethodInvocation:Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant")) @TO@ LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 3066 @LENGTH@ 148
---------MOV MethodInvocation@@resolveFromPath(authenticationManagers::get) @TO@ ReturnStatement@@MethodInvocation:Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant")) @AT@ 3019 @LENGTH@ 44
------------UPD SimpleName@@MethodName:resolveFromPath:[authenticationManagers::get] @TO@ MethodName:orElseThrow:[() -> new IllegalArgumentException("unknown tenant")] @AT@ 3019 @LENGTH@ 44
---------------INS LambdaExpression@@() -> new IllegalArgumentException("unknown tenant") @TO@ SimpleName@@MethodName:resolveFromPath:[authenticationManagers::get] @AT@ 3160 @LENGTH@ 52
------------------INS ClassInstanceCreation@@IllegalArgumentException["unknown tenant"] @TO@ LambdaExpression@@() -> new IllegalArgumentException("unknown tenant") @AT@ 3166 @LENGTH@ 46
---------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["unknown tenant"] @AT@ 3166 @LENGTH@ 3
---------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["unknown tenant"] @AT@ 3170 @LENGTH@ 24
---------------------INS StringLiteral@@"unknown tenant" @TO@ ClassInstanceCreation@@IllegalArgumentException["unknown tenant"] @AT@ 3195 @LENGTH@ 16
------------INS MethodInvocation@@MethodName:map:[authenticationManagers::get] @TO@ MethodInvocation@@resolveFromPath(authenticationManagers::get) @AT@ 3073 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:ofNullable:[tenantId] @TO@ MethodInvocation@@resolveFromPath(authenticationManagers::get) @AT@ 3073 @LENGTH@ 29
---------------INS SimpleName@@tenantId @TO@ MethodInvocation@@MethodName:ofNullable:[tenantId] @AT@ 3093 @LENGTH@ 8
------------INS SimpleName@@Name:Optional @TO@ MethodInvocation@@resolveFromPath(authenticationManagers::get) @AT@ 3073 @LENGTH@ 8


INS IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @TO@ MethodDeclaration@@public, void, MethodName:serviceInit, Configuration conf,  @AT@ 3578 @LENGTH@ 329
---INS MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @TO@ IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3582 @LENGTH@ 128
------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @AT@ 3582 @LENGTH@ 4
------INS SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @TO@ MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @AT@ 3587 @LENGTH@ 123
---------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @TO@ SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @AT@ 3598 @LENGTH@ 47
------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @AT@ 3598 @LENGTH@ 39
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3598 @LENGTH@ 8
---------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3607 @LENGTH@ 30
------------INS SimpleName@@varname @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @AT@ 3638 @LENGTH@ 7
---------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @TO@ SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @AT@ 3655 @LENGTH@ 54
------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @AT@ 3655 @LENGTH@ 39
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3655 @LENGTH@ 8
---------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3664 @LENGTH@ 30
------------INS SimpleName@@defaultBoolVal @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @AT@ 3695 @LENGTH@ 14
---INS Block@@ThenBody:{  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @TO@ IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3712 @LENGTH@ 195
------INS ExpressionStatement@@MethodInvocation:builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @TO@ Block@@ThenBody:{  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3720 @LENGTH@ 181
---------INS MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @TO@ ExpressionStatement@@MethodInvocation:builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 180
------------INS MethodInvocation@@MethodName:configureXFrame:[true] @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 29
---------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:configureXFrame:[true] @AT@ 3744 @LENGTH@ 4
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 7
------------INS SimpleName@@MethodName:setXFrameOption:[conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)] @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3750 @LENGTH@ 150
---------------INS MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @TO@ SimpleName@@MethodName:setXFrameOption:[conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)] @AT@ 3777 @LENGTH@ 122
------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @AT@ 3777 @LENGTH@ 4
------------------INS SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @TO@ MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @AT@ 3782 @LENGTH@ 117
---------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @TO@ SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @AT@ 3786 @LENGTH@ 45
------------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @AT@ 3786 @LENGTH@ 37
---------------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3786 @LENGTH@ 8
---------------------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3795 @LENGTH@ 28
------------------------INS SimpleName@@varname @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @AT@ 3824 @LENGTH@ 7
---------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @TO@ SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @AT@ 3847 @LENGTH@ 51
------------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @AT@ 3847 @LENGTH@ 37
---------------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3847 @LENGTH@ 8
---------------------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3856 @LENGTH@ 28
------------------------INS SimpleName@@defaultStrVal @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @AT@ 3885 @LENGTH@ 13


UPD TypeDeclaration@@[public]JdbcAuthorizationCodeServices, RandomValueAuthorizationCodeServices @TO@ [@Deprecated, public]JdbcAuthorizationCodeServices, RandomValueAuthorizationCodeServices @AT@ 742 @LENGTH@ 2131
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcAuthorizationCodeServices, RandomValueAuthorizationCodeServices @AT@ 919 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedAhcEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedAhcEndpointBuilder, [EndpointProducerBuilder] @AT@ 9947 @LENGTH@ 5809
---DEL Modifier@@static @AT@ 9954 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]SubscriptionType,  @TO@ [static]SubscriptionType,  @AT@ 19329 @LENGTH@ 80
---DEL Modifier@@public @AT@ 19329 @LENGTH@ 6


UPD TypeDeclaration@@[@FrameworkEndpoint, public]TokenKeyEndpoint,  @TO@ [@FrameworkEndpoint, @Deprecated, public]TokenKeyEndpoint,  @AT@ 1465 @LENGTH@ 1026
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]TokenKeyEndpoint,  @AT@ 1661 @LENGTH@ 11


UPD MethodDeclaration@@private, int, MethodName:setOffset, final AVLNode<E> node, final int newOffest,  @TO@ private, int, MethodName:setOffset, final AVLNode<E> node, final int newOffset,  @AT@ 23813 @LENGTH@ 277
---UPD SingleVariableDeclaration@@final int newOffest @TO@ final int newOffset @AT@ 23858 @LENGTH@ 19
------UPD SimpleName@@newOffest @TO@ newOffset @AT@ 23868 @LENGTH@ 9
---UPD ExpressionStatement@@Assignment:node.relativePosition=newOffest @TO@ Assignment:node.relativePosition=newOffset @AT@ 24016 @LENGTH@ 34
------UPD Assignment@@node.relativePosition=newOffest @TO@ node.relativePosition=newOffset @AT@ 24016 @LENGTH@ 33
---------UPD SimpleName@@newOffest @TO@ newOffset @AT@ 24040 @LENGTH@ 9


UPD EnumDeclaration@@[public, static]FlatpackType,  @TO@ [static]FlatpackType,  @AT@ 47274 @LENGTH@ 61
---DEL Modifier@@public @AT@ 47274 @LENGTH@ 6


UPD IfStatement@@if (baseDir != null && baseDir.isDirectory()) {  File target=new File(baseDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(baseDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @TO@ if (baseDir != null && baseDir.isDirectory()) {  File target=new File(baseDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(coreDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @AT@ 45870 @LENGTH@ 409
---UPD Block@@ThenBody:{  File target=new File(baseDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(baseDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @TO@ ThenBody:{  File target=new File(baseDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(coreDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @AT@ 45916 @LENGTH@ 363
------MOV ExpressionStatement@@Assignment:target=new File(coreDir,"../camel-jaxp/src/main/docs") @TO@ Block@@ThenBody:{  File target=new File(baseDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(baseDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @AT@ 45703 @LENGTH@ 58
------DEL ExpressionStatement@@Assignment:target=new File(baseDir,"../camel-jaxp/src/main/docs") @AT@ 46121 @LENGTH@ 58
---------DEL Assignment@@target=new File(baseDir,"../camel-jaxp/src/main/docs") @AT@ 46121 @LENGTH@ 57
------------DEL SimpleName@@target @AT@ 46121 @LENGTH@ 6
------------DEL Operator@@= @AT@ 46127 @LENGTH@ 1
------------DEL ClassInstanceCreation@@File[baseDir, "../camel-jaxp/src/main/docs"] @AT@ 46130 @LENGTH@ 48
---------------DEL New@@new @AT@ 46130 @LENGTH@ 3
---------------DEL SimpleType@@File @AT@ 46134 @LENGTH@ 4
---------------DEL SimpleName@@baseDir @AT@ 46139 @LENGTH@ 7
---------------DEL StringLiteral@@"../camel-jaxp/src/main/docs" @AT@ 46148 @LENGTH@ 29


INS MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]ClientCredentialsReactiveOAuth2AuthorizedClientProviderTests,  @AT@ 3683 @LENGTH@ 232
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3683 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3690 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3695 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3751 @LENGTH@ 161
------INS MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3751 @LENGTH@ 160
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3751 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3840 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3751 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @AT@ 3770 @LENGTH@ 50
---------------INS MethodInvocation@@this.authorizedClientProvider.setClock(null) @TO@ LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @AT@ 3776 @LENGTH@ 44
------------------INS FieldAccess@@this.authorizedClientProvider @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 3776 @LENGTH@ 29
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 3776 @LENGTH@ 4
---------------------INS SimpleName@@authorizedClientProvider @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 3781 @LENGTH@ 24
------------------INS SimpleName@@MethodName:setClock:[null] @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 3806 @LENGTH@ 14
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClock:[null] @AT@ 3815 @LENGTH@ 4
---------INS SimpleName@@MethodName:hasMessage:["clock cannot be null"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3877 @LENGTH@ 34
------------INS StringLiteral@@"clock cannot be null" @TO@ SimpleName@@MethodName:hasMessage:["clock cannot be null"] @AT@ 3888 @LENGTH@ 22


DEL VariableDeclarationStatement@@String claimsDetail=invalidClaims.entrySet().stream().map(it -> it.getKey() + " (" + it.getValue()+ ")").collect(Collectors.joining(", ")); @AT@ 6010 @LENGTH@ 152
---DEL SimpleType@@String @AT@ 6010 @LENGTH@ 6
---DEL VariableDeclarationFragment@@claimsDetail=invalidClaims.entrySet().stream().map(it -> it.getKey() + " (" + it.getValue()+ ")").collect(Collectors.joining(", ")) @AT@ 6017 @LENGTH@ 144
------DEL SimpleName@@claimsDetail @AT@ 6017 @LENGTH@ 12
------DEL MethodInvocation@@invalidClaims.entrySet().stream().map(it -> it.getKey() + " (" + it.getValue()+ ")").collect(Collectors.joining(", ")) @AT@ 6032 @LENGTH@ 129
---------DEL MethodInvocation@@MethodName:map:[it -> it.getKey() + " (" + it.getValue()+ ")"] @AT@ 6032 @LENGTH@ 90
------------DEL LambdaExpression@@it -> it.getKey() + " (" + it.getValue()+ ")" @AT@ 6075 @LENGTH@ 46
---------------DEL VariableDeclarationFragment@@it @AT@ 6075 @LENGTH@ 2
------------------DEL SimpleName@@it @AT@ 6075 @LENGTH@ 2
---------------DEL InfixExpression@@it.getKey() + " (" + it.getValue()+ ")" @AT@ 6081 @LENGTH@ 40
------------------DEL MethodInvocation@@it.getKey() @AT@ 6081 @LENGTH@ 11
---------------------DEL SimpleName@@Name:it @AT@ 6081 @LENGTH@ 2
---------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 6084 @LENGTH@ 8
------------------DEL Operator@@+ @AT@ 6092 @LENGTH@ 1
------------------DEL StringLiteral@@" (" @AT@ 6095 @LENGTH@ 4
------------------DEL MethodInvocation@@it.getValue() @AT@ 6102 @LENGTH@ 13
---------------------DEL SimpleName@@Name:it @AT@ 6102 @LENGTH@ 2
---------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 6105 @LENGTH@ 10
------------------DEL StringLiteral@@")" @AT@ 6118 @LENGTH@ 3
---------DEL MethodInvocation@@MethodName:stream:[] @AT@ 6032 @LENGTH@ 33
---------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 6032 @LENGTH@ 24
---------DEL SimpleName@@Name:invalidClaims @AT@ 6032 @LENGTH@ 13
---------DEL SimpleName@@MethodName:collect:[Collectors.joining(", ")] @AT@ 6128 @LENGTH@ 33
------------DEL MethodInvocation@@Collectors.joining(", ") @AT@ 6136 @LENGTH@ 24
---------------DEL SimpleName@@Name:Collectors @AT@ 6136 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:joining:[", "] @AT@ 6147 @LENGTH@ 13
------------------DEL StringLiteral@@", " @AT@ 6155 @LENGTH@ 4


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]SerializationException, RuntimeException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]SerializationException, RuntimeException @AT@ 156 @LENGTH@ 381
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]SerializationException, RuntimeException @AT@ 362 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]IAMOperations,  @TO@ [static]IAMOperations,  @AT@ 4393 @LENGTH@ 234
---DEL Modifier@@public @AT@ 4393 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]BlobType,  @TO@ [static]BlobType,  @AT@ 41039 @LENGTH@ 76
---DEL Modifier@@public @AT@ 41039 @LENGTH@ 6


UPD TryStatement@@try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  return response.getBody();} catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @TO@ try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  Map<String,Object> configuration=response.getBody();  if (configuration.get("jwks_uri") == null) {    throw new IllegalArgumentException("The public JWK set URI must not be null");  }  return configuration;} catch (IllegalArgumentException e) {  throw e;}catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @AT@ 2935 @LENGTH@ 455
---DEL ReturnStatement@@MethodInvocation:response.getBody() @AT@ 3101 @LENGTH@ 26
------DEL MethodInvocation@@response.getBody() @AT@ 3108 @LENGTH@ 18
---INS VariableDeclarationStatement@@Map<String,Object> configuration=response.getBody(); @TO@ TryStatement@@try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  return response.getBody();} catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @AT@ 3129 @LENGTH@ 55
------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> configuration=response.getBody(); @AT@ 3129 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 3129 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 3133 @LENGTH@ 6
---------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 3141 @LENGTH@ 6
------INS VariableDeclarationFragment@@configuration=response.getBody() @TO@ VariableDeclarationStatement@@Map<String,Object> configuration=response.getBody(); @AT@ 3149 @LENGTH@ 34
---------INS SimpleName@@configuration @TO@ VariableDeclarationFragment@@configuration=response.getBody() @AT@ 3149 @LENGTH@ 13
---------INS MethodInvocation@@response.getBody() @TO@ VariableDeclarationFragment@@configuration=response.getBody() @AT@ 3165 @LENGTH@ 18
------------MOV SimpleName@@Name:response @TO@ MethodInvocation@@response.getBody() @AT@ 3108 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@response.getBody() @AT@ 3117 @LENGTH@ 9
---INS IfStatement@@if (configuration.get("jwks_uri") == null) {  throw new IllegalArgumentException("The public JWK set URI must not be null");} @TO@ TryStatement@@try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  return response.getBody();} catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @AT@ 3190 @LENGTH@ 134
------INS InfixExpression@@configuration.get("jwks_uri") == null @TO@ IfStatement@@if (configuration.get("jwks_uri") == null) {  throw new IllegalArgumentException("The public JWK set URI must not be null");} @AT@ 3194 @LENGTH@ 37
---------INS MethodInvocation@@configuration.get("jwks_uri") @TO@ InfixExpression@@configuration.get("jwks_uri") == null @AT@ 3194 @LENGTH@ 29
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.get("jwks_uri") @AT@ 3194 @LENGTH@ 13
------------INS SimpleName@@MethodName:get:["jwks_uri"] @TO@ MethodInvocation@@configuration.get("jwks_uri") @AT@ 3208 @LENGTH@ 15
---------------INS StringLiteral@@"jwks_uri" @TO@ SimpleName@@MethodName:get:["jwks_uri"] @AT@ 3212 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@configuration.get("jwks_uri") == null @AT@ 3223 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@configuration.get("jwks_uri") == null @AT@ 3227 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalArgumentException("The public JWK set URI must not be null");} @TO@ IfStatement@@if (configuration.get("jwks_uri") == null) {  throw new IllegalArgumentException("The public JWK set URI must not be null");} @AT@ 3233 @LENGTH@ 91
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The public JWK set URI must not be null") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("The public JWK set URI must not be null");} @AT@ 3240 @LENGTH@ 78
------------INS ClassInstanceCreation@@IllegalArgumentException["The public JWK set URI must not be null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("The public JWK set URI must not be null") @AT@ 3246 @LENGTH@ 71
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["The public JWK set URI must not be null"] @AT@ 3246 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["The public JWK set URI must not be null"] @AT@ 3250 @LENGTH@ 24
---------------INS StringLiteral@@"The public JWK set URI must not be null" @TO@ ClassInstanceCreation@@IllegalArgumentException["The public JWK set URI must not be null"] @AT@ 3275 @LENGTH@ 41
---INS ReturnStatement@@SimpleName:configuration @TO@ TryStatement@@try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  return response.getBody();} catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @AT@ 3330 @LENGTH@ 21
------INS SimpleName@@configuration @TO@ ReturnStatement@@SimpleName:configuration @AT@ 3337 @LENGTH@ 13
---INS CatchClause@@catch (IllegalArgumentException e) {  throw e;} @TO@ TryStatement@@try {  RequestEntity<Void> request=RequestEntity.get(uri).build();  ResponseEntity<Map<String,Object>> response=rest.exchange(request,typeReference);  return response.getBody();} catch (RuntimeException e) {  if (!(e instanceof HttpClientErrorException && ((HttpClientErrorException)e).getStatusCode().is4xxClientError())) {    throw new IllegalArgumentException(errorMessage,e);  }} @AT@ 3357 @LENGTH@ 54
------INS SingleVariableDeclaration@@IllegalArgumentException e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw e;} @AT@ 3364 @LENGTH@ 26
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3364 @LENGTH@ 24
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IllegalArgumentException e @AT@ 3389 @LENGTH@ 1
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (IllegalArgumentException e) {  throw e;} @AT@ 3398 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 3404 @LENGTH@ 1


UPD TypeDeclaration@@[public]JwtAccessTokenConverter, [TokenEnhancer, AccessTokenConverter, InitializingBean] @TO@ [@Deprecated, public]JwtAccessTokenConverter, [TokenEnhancer, AccessTokenConverter, InitializingBean] @AT@ 2177 @LENGTH@ 9176
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwtAccessTokenConverter, [TokenEnhancer, AccessTokenConverter, InitializingBean] @AT@ 2355 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]GoogleMailApiName,  @TO@ [static]GoogleMailApiName,  @AT@ 25589 @LENGTH@ 116
---DEL Modifier@@public @AT@ 25589 @LENGTH@ 6


UPD VariableDeclarationStatement@@Task<? extends Serializable> task=(Task<? extends Serializable>)nd; @TO@ Task<?> task=(Task<?>)nd; @AT@ 6661 @LENGTH@ 70
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6661 @LENGTH@ 28
---UPD VariableDeclarationFragment@@task=(Task<? extends Serializable>)nd @TO@ task=(Task<?>)nd @AT@ 6690 @LENGTH@ 40
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 6697 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6698 @LENGTH@ 28


UPD SynchronizedStatement@@synchronized (refreshWanted) {  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @TO@ synchronized (refreshWanted) {  if (refreshWanted.get()) {    log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");    refreshWanted.wait();  }} @AT@ 10280 @LENGTH@ 202
---UPD Block@@SyncBody:{  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @TO@ ThenBody:{  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @AT@ 10309 @LENGTH@ 173
---INS Block@@SyncBody:{  if (refreshWanted.get()) {    log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");    refreshWanted.wait();  }} @TO@ SynchronizedStatement@@synchronized (refreshWanted) {  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @AT@ 10334 @LENGTH@ 309
------INS IfStatement@@if (refreshWanted.get()) {  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @TO@ Block@@SyncBody:{  if (refreshWanted.get()) {    log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");    refreshWanted.wait();  }} @AT@ 10415 @LENGTH@ 210
---------MOV Block@@SyncBody:{  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @TO@ IfStatement@@if (refreshWanted.get()) {  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @AT@ 10309 @LENGTH@ 173
---------INS MethodInvocation@@refreshWanted.get() @TO@ IfStatement@@if (refreshWanted.get()) {  log.debug("Waiting for new Temporary ReplyTo queue to be assigned before we can continue");  refreshWanted.wait();} @AT@ 10419 @LENGTH@ 19
------------INS SimpleName@@Name:refreshWanted @TO@ MethodInvocation@@refreshWanted.get() @AT@ 10419 @LENGTH@ 13
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@refreshWanted.get() @AT@ 10433 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("netty4-http:http:someserver:80/hello",list.get(1).getElement()) @TO@ MethodInvocation:Assert.assertEquals("netty-http:http:someserver:80/hello",list.get(1).getElement()) @AT@ 2266 @LENGTH@ 86
---UPD MethodInvocation@@Assert.assertEquals("netty4-http:http:someserver:80/hello",list.get(1).getElement()) @TO@ Assert.assertEquals("netty-http:http:someserver:80/hello",list.get(1).getElement()) @AT@ 2266 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:["netty4-http:http:someserver:80/hello", list.get(1).getElement()] @TO@ MethodName:assertEquals:["netty-http:http:someserver:80/hello", list.get(1).getElement()] @AT@ 2273 @LENGTH@ 78
---------UPD StringLiteral@@"netty4-http:http:someserver:80/hello" @TO@ "netty-http:http:someserver:80/hello" @AT@ 2286 @LENGTH@ 38


INS ExpressionStatement@@Assignment:arenaCount=getArenaCount() @TO@ MethodDeclaration@@public, void, MethodName:allocateMultiple, MemoryBuffer[] dest, int size, BufferObjectFactory factory, AtomicBoolean isStopped, AllocatorOutOfMemoryException,  @AT@ 15251 @LENGTH@ 29
---INS Assignment@@arenaCount=getArenaCount() @TO@ ExpressionStatement@@Assignment:arenaCount=getArenaCount() @AT@ 15251 @LENGTH@ 28
------INS SimpleName@@arenaCount @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 15251 @LENGTH@ 10
------INS Operator@@= @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 15261 @LENGTH@ 1
------INS MethodInvocation@@MethodName:getArenaCount:[] @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 15264 @LENGTH@ 15


INS ExpressionStatement@@MethodInvocation:Assert.isTrue(requiredAddress.getAddress().length * 8 >= nMaskBits,String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)) @TO@ MethodDeclaration@@public, voidMethodName:IpAddressMatcher, String ipAddress,  @AT@ 1959 @LENGTH@ 170
---INS MethodInvocation@@Assert.isTrue(requiredAddress.getAddress().length * 8 >= nMaskBits,String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)) @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(requiredAddress.getAddress().length * 8 >= nMaskBits,String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)) @AT@ 1959 @LENGTH@ 169
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(requiredAddress.getAddress().length * 8 >= nMaskBits,String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)) @AT@ 1959 @LENGTH@ 6
------INS SimpleName@@MethodName:isTrue:[requiredAddress.getAddress().length * 8 >= nMaskBits, String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)] @TO@ MethodInvocation@@Assert.isTrue(requiredAddress.getAddress().length * 8 >= nMaskBits,String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)) @AT@ 1966 @LENGTH@ 162
---------INS InfixExpression@@requiredAddress.getAddress().length * 8 >= nMaskBits @TO@ SimpleName@@MethodName:isTrue:[requiredAddress.getAddress().length * 8 >= nMaskBits, String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)] @AT@ 1973 @LENGTH@ 52
------------INS InfixExpression@@requiredAddress.getAddress().length * 8 @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 >= nMaskBits @AT@ 1973 @LENGTH@ 39
---------------INS FieldAccess@@requiredAddress.getAddress().length @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 @AT@ 1973 @LENGTH@ 35
------------------INS MethodInvocation@@requiredAddress.getAddress() @TO@ FieldAccess@@requiredAddress.getAddress().length @AT@ 1973 @LENGTH@ 28
---------------------INS SimpleName@@Name:requiredAddress @TO@ MethodInvocation@@requiredAddress.getAddress() @AT@ 1973 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:getAddress:[] @TO@ MethodInvocation@@requiredAddress.getAddress() @AT@ 1989 @LENGTH@ 12
------------------INS SimpleName@@length @TO@ FieldAccess@@requiredAddress.getAddress().length @AT@ 2002 @LENGTH@ 6
---------------INS Operator@@* @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 @AT@ 2008 @LENGTH@ 1
---------------INS NumberLiteral@@8 @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 @AT@ 2011 @LENGTH@ 1
------------INS Operator@@>= @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 >= nMaskBits @AT@ 2012 @LENGTH@ 2
------------INS SimpleName@@nMaskBits @TO@ InfixExpression@@requiredAddress.getAddress().length * 8 >= nMaskBits @AT@ 2016 @LENGTH@ 9
---------INS MethodInvocation@@String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits) @TO@ SimpleName@@MethodName:isTrue:[requiredAddress.getAddress().length * 8 >= nMaskBits, String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits)] @AT@ 2031 @LENGTH@ 96
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits) @AT@ 2031 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["IP address %s is too short for bitmask of length %d", ipAddress, nMaskBits] @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of length %d",ipAddress,nMaskBits) @AT@ 2038 @LENGTH@ 89
---------------INS StringLiteral@@"IP address %s is too short for bitmask of length %d" @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of length %d", ipAddress, nMaskBits] @AT@ 2045 @LENGTH@ 53
---------------INS SimpleName@@ipAddress @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of length %d", ipAddress, nMaskBits] @AT@ 2106 @LENGTH@ 9
---------------INS SimpleName@@nMaskBits @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of length %d", ipAddress, nMaskBits] @AT@ 2117 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @TO@ TypeDeclaration@@[public]RabbitTemplateTests,  @AT@ 9679 @LENGTH@ 619
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9679 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9686 @LENGTH@ 4
---INS SimpleName@@MethodName:testEvaluateDirectReplyToWithConnectException @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9691 @LENGTH@ 45
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9746 @LENGTH@ 9
---INS VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9760 @LENGTH@ 162
------INS SimpleType@@org.springframework.amqp.rabbit.connection.ConnectionFactory @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 9760 @LENGTH@ 60
------INS VariableDeclarationFragment@@mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 9821 @LENGTH@ 100
---------INS SimpleName@@mockConnectionFactory @TO@ VariableDeclarationFragment@@mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 9821 @LENGTH@ 21
---------INS MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationFragment@@mockConnectionFactory=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 9849 @LENGTH@ 72
------------INS SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @TO@ MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 9849 @LENGTH@ 72
---------------INS TypeLiteral@@org.springframework.amqp.rabbit.connection.ConnectionFactory.class @TO@ SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @AT@ 9854 @LENGTH@ 66
---INS ExpressionStatement@@MethodInvocation:willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 9925 @LENGTH@ 90
------INS MethodInvocation@@willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @TO@ ExpressionStatement@@MethodInvocation:willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @AT@ 9925 @LENGTH@ 89
---------INS MethodInvocation@@MethodName:given:[mockConnectionFactory] @TO@ MethodInvocation@@willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @AT@ 9925 @LENGTH@ 70
------------INS SimpleName@@mockConnectionFactory @TO@ MethodInvocation@@MethodName:given:[mockConnectionFactory] @AT@ 9973 @LENGTH@ 21
---------INS MethodInvocation@@MethodName:willThrow:[new AmqpConnectException(null)] @TO@ MethodInvocation@@willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @AT@ 9925 @LENGTH@ 41
------------INS ClassInstanceCreation@@AmqpConnectException[null] @TO@ MethodInvocation@@MethodName:willThrow:[new AmqpConnectException(null)] @AT@ 9935 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@AmqpConnectException[null] @AT@ 9935 @LENGTH@ 3
---------------INS SimpleType@@AmqpConnectException @TO@ ClassInstanceCreation@@AmqpConnectException[null] @AT@ 9939 @LENGTH@ 20
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@AmqpConnectException[null] @AT@ 9960 @LENGTH@ 4
---------INS SimpleName@@MethodName:createConnection:[] @TO@ MethodInvocation@@willThrow(new AmqpConnectException(null)).given(mockConnectionFactory).createConnection() @AT@ 9996 @LENGTH@ 18
---INS VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(mockConnectionFactory); @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 10018 @LENGTH@ 68
------INS SimpleType@@RabbitTemplate @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(mockConnectionFactory); @AT@ 10018 @LENGTH@ 14
------INS VariableDeclarationFragment@@template=new RabbitTemplate(mockConnectionFactory) @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(mockConnectionFactory); @AT@ 10033 @LENGTH@ 52
---------INS SimpleName@@template @TO@ VariableDeclarationFragment@@template=new RabbitTemplate(mockConnectionFactory) @AT@ 10033 @LENGTH@ 8
---------INS ClassInstanceCreation@@RabbitTemplate[mockConnectionFactory] @TO@ VariableDeclarationFragment@@template=new RabbitTemplate(mockConnectionFactory) @AT@ 10044 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@RabbitTemplate[mockConnectionFactory] @AT@ 10044 @LENGTH@ 3
------------INS SimpleType@@RabbitTemplate @TO@ ClassInstanceCreation@@RabbitTemplate[mockConnectionFactory] @AT@ 10048 @LENGTH@ 14
------------INS SimpleName@@mockConnectionFactory @TO@ ClassInstanceCreation@@RabbitTemplate[mockConnectionFactory] @AT@ 10063 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> template.convertSendAndReceive("foo")).isInstanceOf(AmqpConnectException.class) @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 10089 @LENGTH@ 105
------INS MethodInvocation@@assertThatThrownBy(() -> template.convertSendAndReceive("foo")).isInstanceOf(AmqpConnectException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> template.convertSendAndReceive("foo")).isInstanceOf(AmqpConnectException.class) @AT@ 10089 @LENGTH@ 104
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> template.convertSendAndReceive("foo")] @TO@ MethodInvocation@@assertThatThrownBy(() -> template.convertSendAndReceive("foo")).isInstanceOf(AmqpConnectException.class) @AT@ 10089 @LENGTH@ 63
------------INS LambdaExpression@@() -> template.convertSendAndReceive("foo") @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> template.convertSendAndReceive("foo")] @AT@ 10108 @LENGTH@ 43
---------------INS MethodInvocation@@template.convertSendAndReceive("foo") @TO@ LambdaExpression@@() -> template.convertSendAndReceive("foo") @AT@ 10114 @LENGTH@ 37
------------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.convertSendAndReceive("foo") @AT@ 10114 @LENGTH@ 8
------------------INS SimpleName@@MethodName:convertSendAndReceive:["foo"] @TO@ MethodInvocation@@template.convertSendAndReceive("foo") @AT@ 10123 @LENGTH@ 28
---------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:convertSendAndReceive:["foo"] @AT@ 10145 @LENGTH@ 5
---------INS SimpleName@@MethodName:isInstanceOf:[AmqpConnectException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> template.convertSendAndReceive("foo")).isInstanceOf(AmqpConnectException.class) @AT@ 10153 @LENGTH@ 40
------------INS TypeLiteral@@AmqpConnectException.class @TO@ SimpleName@@MethodName:isInstanceOf:[AmqpConnectException.class] @AT@ 10166 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:testEvaluateDirectReplyToWithConnectException, Exception,  @AT@ 10197 @LENGTH@ 98
------INS MethodInvocation@@assertThat(TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)).isFalse() @AT@ 10197 @LENGTH@ 97
---------INS MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)).isFalse() @AT@ 10197 @LENGTH@ 87
------------INS MethodInvocation@@TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class) @TO@ MethodInvocation@@MethodName:assertThat:[TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)] @AT@ 10208 @LENGTH@ 75
---------------INS SimpleName@@Name:TestUtils @TO@ MethodInvocation@@TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class) @AT@ 10208 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getPropertyValue:[template, "evaluatedFastReplyTo", Boolean.class] @TO@ MethodInvocation@@TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class) @AT@ 10218 @LENGTH@ 65
------------------INS SimpleName@@template @TO@ SimpleName@@MethodName:getPropertyValue:[template, "evaluatedFastReplyTo", Boolean.class] @AT@ 10235 @LENGTH@ 8
------------------INS StringLiteral@@"evaluatedFastReplyTo" @TO@ SimpleName@@MethodName:getPropertyValue:[template, "evaluatedFastReplyTo", Boolean.class] @AT@ 10245 @LENGTH@ 22
------------------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getPropertyValue:[template, "evaluatedFastReplyTo", Boolean.class] @AT@ 10269 @LENGTH@ 13
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(TestUtils.getPropertyValue(template,"evaluatedFastReplyTo",Boolean.class)).isFalse() @AT@ 10285 @LENGTH@ 9


UPD TypeDeclaration@@[public, static]AdvancedKubernetesPersistentVolumesClaimsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesPersistentVolumesClaimsEndpointBuilder, [EndpointProducerBuilder] @AT@ 9388 @LENGTH@ 3247
---DEL Modifier@@static @AT@ 9395 @LENGTH@ 6


DEL MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 21615 @LENGTH@ 68
---DEL Modifier@@public @AT@ 21615 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 21622 @LENGTH@ 4
---DEL SimpleName@@MethodName:stop @AT@ 21627 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Runnable callback @AT@ 21632 @LENGTH@ 17
------DEL SimpleType@@Runnable @AT@ 21632 @LENGTH@ 8
------DEL SimpleName@@callback @AT@ 21641 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:stop() @AT@ 21655 @LENGTH@ 7
------DEL MethodInvocation@@MethodName:stop:[] @AT@ 21655 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:callback.run() @AT@ 21665 @LENGTH@ 15
------DEL MethodInvocation@@callback.run() @AT@ 21665 @LENGTH@ 14
---------DEL SimpleName@@Name:callback @AT@ 21665 @LENGTH@ 8
---------DEL SimpleName@@MethodName:run:[] @AT@ 21674 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]CryptoOperation,  @TO@ [static]CryptoOperation,  @AT@ 21334 @LENGTH@ 82
---DEL Modifier@@public @AT@ 21334 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultOAuth2ExceptionRenderer, [OAuth2ExceptionRenderer] @TO@ [@Deprecated, public]DefaultOAuth2ExceptionRenderer, [OAuth2ExceptionRenderer] @AT@ 2187 @LENGTH@ 3501
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2ExceptionRenderer, [OAuth2ExceptionRenderer] @AT@ 2364 @LENGTH@ 11


UPD VariableDeclarationStatement@@OAuth2IntrospectionAuthenticationProvider provider=new OAuth2IntrospectionAuthenticationProvider(introspector); @TO@ OpaqueTokenAuthenticationProvider provider=new OpaqueTokenAuthenticationProvider(introspector); @AT@ 14613 @LENGTH@ 118
---UPD SimpleType@@OAuth2IntrospectionAuthenticationProvider @TO@ OpaqueTokenAuthenticationProvider @AT@ 14613 @LENGTH@ 41
---UPD VariableDeclarationFragment@@provider=new OAuth2IntrospectionAuthenticationProvider(introspector) @TO@ provider=new OpaqueTokenAuthenticationProvider(introspector) @AT@ 14655 @LENGTH@ 75
------UPD ClassInstanceCreation@@OAuth2IntrospectionAuthenticationProvider[introspector] @TO@ OpaqueTokenAuthenticationProvider[introspector] @AT@ 14671 @LENGTH@ 59
---------UPD SimpleType@@OAuth2IntrospectionAuthenticationProvider @TO@ OpaqueTokenAuthenticationProvider @AT@ 14675 @LENGTH@ 41


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42815 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42815 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]InfluxDbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]InfluxDbEndpointBuilder, [EndpointProducerBuilder] @AT@ 1429 @LENGTH@ 2626
---DEL Modifier@@static @AT@ 1436 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @TO@ TypeDeclaration@@[public]StrictHttpFirewallTests,  @AT@ 20014 @LENGTH@ 256
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20014 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20021 @LENGTH@ 4
---INS SimpleName@@MethodName:getFirewalledRequestWhenUntrustedDomainThenException @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20026 @LENGTH@ 52
---INS ExpressionStatement@@MethodInvocation:this.request.addHeader("Host","example.org") @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20085 @LENGTH@ 46
------INS MethodInvocation@@this.request.addHeader("Host","example.org") @TO@ ExpressionStatement@@MethodInvocation:this.request.addHeader("Host","example.org") @AT@ 20085 @LENGTH@ 45
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.addHeader("Host","example.org") @AT@ 20085 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 20085 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 20090 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Host", "example.org"] @TO@ MethodInvocation@@this.request.addHeader("Host","example.org") @AT@ 20098 @LENGTH@ 32
------------INS StringLiteral@@"Host" @TO@ SimpleName@@MethodName:addHeader:["Host", "example.org"] @AT@ 20108 @LENGTH@ 6
------------INS StringLiteral@@"example.org" @TO@ SimpleName@@MethodName:addHeader:["Host", "example.org"] @AT@ 20116 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.firewall.setAllowedHostnames(hostname -> hostname.equals("myexample.org")) @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20134 @LENGTH@ 80
------INS MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("myexample.org")) @TO@ ExpressionStatement@@MethodInvocation:this.firewall.setAllowedHostnames(hostname -> hostname.equals("myexample.org")) @AT@ 20134 @LENGTH@ 79
---------INS FieldAccess@@this.firewall @TO@ MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("myexample.org")) @AT@ 20134 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.firewall @AT@ 20134 @LENGTH@ 4
------------INS SimpleName@@firewall @TO@ FieldAccess@@this.firewall @AT@ 20139 @LENGTH@ 8
---------INS SimpleName@@MethodName:setAllowedHostnames:[hostname -> hostname.equals("myexample.org")] @TO@ MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("myexample.org")) @AT@ 20148 @LENGTH@ 65
------------INS LambdaExpression@@hostname -> hostname.equals("myexample.org") @TO@ SimpleName@@MethodName:setAllowedHostnames:[hostname -> hostname.equals("myexample.org")] @AT@ 20168 @LENGTH@ 44
---------------INS VariableDeclarationFragment@@hostname @TO@ LambdaExpression@@hostname -> hostname.equals("myexample.org") @AT@ 20168 @LENGTH@ 8
------------------INS SimpleName@@hostname @TO@ VariableDeclarationFragment@@hostname @AT@ 20168 @LENGTH@ 8
---------------INS MethodInvocation@@hostname.equals("myexample.org") @TO@ LambdaExpression@@hostname -> hostname.equals("myexample.org") @AT@ 20180 @LENGTH@ 32
------------------INS SimpleName@@Name:hostname @TO@ MethodInvocation@@hostname.equals("myexample.org") @AT@ 20180 @LENGTH@ 8
------------------INS SimpleName@@MethodName:equals:["myexample.org"] @TO@ MethodInvocation@@hostname.equals("myexample.org") @AT@ 20189 @LENGTH@ 23
---------------------INS StringLiteral@@"myexample.org" @TO@ SimpleName@@MethodName:equals:["myexample.org"] @AT@ 20196 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:this.firewall.getFirewalledRequest(this.request) @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenUntrustedDomainThenException,  @AT@ 20218 @LENGTH@ 49
------INS MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @TO@ ExpressionStatement@@MethodInvocation:this.firewall.getFirewalledRequest(this.request) @AT@ 20218 @LENGTH@ 48
---------INS FieldAccess@@this.firewall @TO@ MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @AT@ 20218 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.firewall @AT@ 20218 @LENGTH@ 4
------------INS SimpleName@@firewall @TO@ FieldAccess@@this.firewall @AT@ 20223 @LENGTH@ 8
---------INS SimpleName@@MethodName:getFirewalledRequest:[this.request] @TO@ MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @AT@ 20232 @LENGTH@ 34
------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:getFirewalledRequest:[this.request] @AT@ 20253 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 20253 @LENGTH@ 4
---------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 20258 @LENGTH@ 7


UPD VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 2206 @LENGTH@ 217
---UPD VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 2245 @LENGTH@ 177
------UPD MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 2276 @LENGTH@ 146
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2276 @LENGTH@ 149


UPD EnumDeclaration@@[public, static]Encryption,  @TO@ [static]Encryption,  @AT@ 8913 @LENGTH@ 117
---DEL Modifier@@public @AT@ 8913 @LENGTH@ 6


UPD VariableDeclarationStatement@@MongoPersistentEntity<?> entity=mappingContext.getRequiredPersistentEntity(sourceClass); @TO@ MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(sourceClass); @AT@ 98508 @LENGTH@ 90
---UPD VariableDeclarationFragment@@entity=mappingContext.getRequiredPersistentEntity(sourceClass) @TO@ entity=mappingContext.getPersistentEntity(sourceClass) @AT@ 98533 @LENGTH@ 64
------UPD MethodInvocation@@mappingContext.getRequiredPersistentEntity(sourceClass) @TO@ mappingContext.getPersistentEntity(sourceClass) @AT@ 98542 @LENGTH@ 55
---------UPD SimpleName@@MethodName:getRequiredPersistentEntity:[sourceClass] @TO@ MethodName:getPersistentEntity:[sourceClass] @AT@ 98557 @LENGTH@ 40


UPD TypeDeclaration@@[public]OAuthConsumerBeanDefinitionParser, [BeanDefinitionParser] @TO@ [@Deprecated, public]OAuthConsumerBeanDefinitionParser, [BeanDefinitionParser] @AT@ 1595 @LENGTH@ 3697
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerBeanDefinitionParser, [BeanDefinitionParser] @AT@ 1816 @LENGTH@ 11


UPD TypeDeclaration@@[public]AuthenticationKeyGenerator,  @TO@ [@Deprecated, public]AuthenticationKeyGenerator,  @AT@ 872 @LENGTH@ 222
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthenticationKeyGenerator,  @AT@ 1049 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 2009 @LENGTH@ 2350
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2016 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2021 @LENGTH@ 28
---UPD TryStatement@@try {  List<Task<? extends Serializable>> importTasks=new ArrayList<>();  boolean isExternal=false, isLocationSet=false;  String parsedLocation=null;  DumpType eventType=context.dmd.getDumpType();  Tuple tuple=extract(context);  if (tuple.isExternalTable) {    URI fromURI=EximUtil.getValidatedURI(context.hiveConf,context.location);    Path fromPath=new Path(fromURI.getScheme(),fromURI.getAuthority(),fromURI.getPath());    isLocationSet=true;    isExternal=true;    FileSystem fs=FileSystem.get(fromURI,context.hiveConf);    try {      MetaData rv=EximUtil.readMetaData(fs,new Path(fromPath,EximUtil.METADATA_NAME));      Table table=new Table(rv.getTable());      parsedLocation=ReplExternalTables.externalTableLocation(context.hiveConf,table.getSd().getLocation());    } catch (    IOException e) {      throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(),e);    }  }  context.nestedContext.setConf(context.hiveConf);  EximUtil.SemanticAnalyzerWrapperContext x=new EximUtil.SemanticAnalyzerWrapperContext(context.hiveConf,context.db,readEntitySet,writeEntitySet,importTasks,context.log,context.nestedContext);  x.setEventType(eventType);  ImportSemanticAnalyzer.prepareImport(false,isLocationSet,isExternal,false,(context.precursor != null),parsedLocation,null,context.dbName,null,context.location,x,updatedMetadata,context.getTxnMgr(),tuple.writeId);  Task<? extends Serializable> openTxnTask=x.getOpenTxnTask();  if (openTxnTask != null && !importTasks.isEmpty()) {    for (    Task<? extends Serializable> t : importTasks) {      openTxnTask.addDependentTask(t);    }    importTasks.add(openTxnTask);  }  return importTasks;} catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw new SemanticException(e);} @TO@ try {  List<Task<?>> importTasks=new ArrayList<>();  boolean isExternal=false, isLocationSet=false;  String parsedLocation=null;  DumpType eventType=context.dmd.getDumpType();  Tuple tuple=extract(context);  if (tuple.isExternalTable) {    URI fromURI=EximUtil.getValidatedURI(context.hiveConf,context.location);    Path fromPath=new Path(fromURI.getScheme(),fromURI.getAuthority(),fromURI.getPath());    isLocationSet=true;    isExternal=true;    FileSystem fs=FileSystem.get(fromURI,context.hiveConf);    try {      MetaData rv=EximUtil.readMetaData(fs,new Path(fromPath,EximUtil.METADATA_NAME));      Table table=new Table(rv.getTable());      parsedLocation=ReplExternalTables.externalTableLocation(context.hiveConf,table.getSd().getLocation());    } catch (    IOException e) {      throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(),e);    }  }  context.nestedContext.setConf(context.hiveConf);  EximUtil.SemanticAnalyzerWrapperContext x=new EximUtil.SemanticAnalyzerWrapperContext(context.hiveConf,context.db,readEntitySet,writeEntitySet,importTasks,context.log,context.nestedContext);  x.setEventType(eventType);  ImportSemanticAnalyzer.prepareImport(false,isLocationSet,isExternal,false,(context.precursor != null),parsedLocation,null,context.dbName,null,context.location,x,updatedMetadata,context.getTxnMgr(),tuple.writeId);  Task<?> openTxnTask=x.getOpenTxnTask();  if (openTxnTask != null && !importTasks.isEmpty()) {    for (    Task<?> t : importTasks) {      openTxnTask.addDependentTask(t);    }    importTasks.add(openTxnTask);  }  return importTasks;} catch (RuntimeException e) {  throw e;}catch (Exception e) {  throw new SemanticException(e);} @AT@ 2106 @LENGTH@ 2249
------UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> importTasks=new ArrayList<>(); @TO@ List<Task<?>> importTasks=new ArrayList<>(); @AT@ 2118 @LENGTH@ 67
---------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2118 @LENGTH@ 34
------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2123 @LENGTH@ 28
------UPD VariableDeclarationStatement@@Task<? extends Serializable> openTxnTask=x.getOpenTxnTask(); @TO@ Task<?> openTxnTask=x.getOpenTxnTask(); @AT@ 3926 @LENGTH@ 62
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3926 @LENGTH@ 28
------UPD IfStatement@@if (openTxnTask != null && !importTasks.isEmpty()) {  for (  Task<? extends Serializable> t : importTasks) {    openTxnTask.addDependentTask(t);  }  importTasks.add(openTxnTask);} @TO@ if (openTxnTask != null && !importTasks.isEmpty()) {  for (  Task<?> t : importTasks) {    openTxnTask.addDependentTask(t);  }  importTasks.add(openTxnTask);} @AT@ 3995 @LENGTH@ 212
---------UPD Block@@ThenBody:{  for (  Task<? extends Serializable> t : importTasks) {    openTxnTask.addDependentTask(t);  }  importTasks.add(openTxnTask);} @TO@ ThenBody:{  for (  Task<?> t : importTasks) {    openTxnTask.addDependentTask(t);  }  importTasks.add(openTxnTask);} @AT@ 4046 @LENGTH@ 161
------------UPD EnhancedForStatement@@for (Task<? extends Serializable> t : importTasks) {  openTxnTask.addDependentTask(t);} @TO@ for (Task<?> t : importTasks) {  openTxnTask.addDependentTask(t);} @AT@ 4056 @LENGTH@ 105
---------------UPD SingleVariableDeclaration@@Task<? extends Serializable> t @TO@ Task<?> t @AT@ 4061 @LENGTH@ 30
------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4061 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedFopEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedFopEndpointBuilder, [EndpointProducerBuilder] @AT@ 3778 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 3785 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]HttpEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]HttpEndpointBuilder, [EndpointProducerBuilder] @AT@ 1498 @LENGTH@ 9907
---DEL Modifier@@static @AT@ 1505 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:flux=flux.map(it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @TO@ Assignment:flux=flux.flatMap(it -> Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter))) @AT@ 4340 @LENGTH@ 107
---UPD Assignment@@flux=flux.map(it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @TO@ flux=flux.flatMap(it -> Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter))) @AT@ 4340 @LENGTH@ 106
------UPD MethodInvocation@@flux.map(it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @TO@ flux.flatMap(it -> Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter))) @AT@ 4347 @LENGTH@ 99
---------UPD SimpleName@@MethodName:map:[it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)] @TO@ MethodName:flatMap:[it -> Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter))] @AT@ 4352 @LENGTH@ 94
------------UPD LambdaExpression@@it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter) @TO@ it -> Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @AT@ 4356 @LENGTH@ 89
---------------INS MethodInvocation@@Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @TO@ LambdaExpression@@it -> AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter) @AT@ 4407 @LENGTH@ 101
------------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @AT@ 4407 @LENGTH@ 4
------------------INS SimpleName@@MethodName:justOrEmpty:[AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)] @TO@ MethodInvocation@@Mono.justOrEmpty(AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)) @AT@ 4412 @LENGTH@ 96
---------------------MOV MethodInvocation@@AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter) @TO@ SimpleName@@MethodName:justOrEmpty:[AggregationUtils.extractSimpleTypeResult((Document)it,typeToRead,mongoConverter)] @AT@ 4362 @LENGTH@ 83


UPD ReturnStatement@@MethodInvocation:getConnectionFactory() @TO@ MethodInvocation:getOrCreateConnectionFactory() @AT@ 84516 @LENGTH@ 30
---UPD MethodInvocation@@MethodName:getConnectionFactory:[] @TO@ MethodName:getOrCreateConnectionFactory:[] @AT@ 84523 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:template.sendBody("netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ MethodInvocation:template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @AT@ 2579 @LENGTH@ 111
---UPD MethodInvocation@@template.sendBody("netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ template.sendBody("netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder",message) @AT@ 2579 @LENGTH@ 110
------UPD SimpleName@@MethodName:sendBody:["netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder", message] @TO@ MethodName:sendBody:["netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder", message] @AT@ 2588 @LENGTH@ 101
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2597 @LENGTH@ 82
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2597 @LENGTH@ 25


UPD VariableDeclarationStatement@@PulsarComponent component=new PulsarComponent(); @TO@ PulsarComponent component=new PulsarComponent(context); @AT@ 1585 @LENGTH@ 50
---UPD VariableDeclarationFragment@@component=new PulsarComponent() @TO@ component=new PulsarComponent(context) @AT@ 1601 @LENGTH@ 33
------UPD ClassInstanceCreation@@PulsarComponent[] @TO@ PulsarComponent[context] @AT@ 1613 @LENGTH@ 21
---------INS SimpleName@@context @TO@ ClassInstanceCreation@@PulsarComponent[] @AT@ 1633 @LENGTH@ 7


UPD TypeDeclaration@@[public]TokenServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]TokenServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1054 @LENGTH@ 719
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1275 @LENGTH@ 11


INS IfStatement@@if (exchange.getFromEndpoint() != null) {  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} else {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:onExchange, Exchange exchange,  @AT@ 4785 @LENGTH@ 242
---INS InfixExpression@@exchange.getFromEndpoint() != null @TO@ IfStatement@@if (exchange.getFromEndpoint() != null) {  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} else {  return false;} @AT@ 4789 @LENGTH@ 34
------INS MethodInvocation@@exchange.getFromEndpoint() @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 4789 @LENGTH@ 26
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 4789 @LENGTH@ 8
---------INS SimpleName@@MethodName:getFromEndpoint:[] @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 4798 @LENGTH@ 17
------INS Operator@@!= @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 4815 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 4819 @LENGTH@ 4
---INS Block@@ThenBody:{  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} @TO@ IfStatement@@if (exchange.getFromEndpoint() != null) {  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} else {  return false;} @AT@ 4825 @LENGTH@ 143
------MOV ReturnStatement@@MethodInvocation:EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri) @TO@ Block@@ThenBody:{  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} @AT@ 4785 @LENGTH@ 103
---INS Block@@ElseBody:{  return false;} @TO@ IfStatement@@if (exchange.getFromEndpoint() != null) {  return EndpointHelper.matchEndpoint(context,exchange.getFromEndpoint().getEndpointUri(),endpointUri);} else {  return false;} @AT@ 4974 @LENGTH@ 53
------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ElseBody:{  return false;} @AT@ 4996 @LENGTH@ 13
---------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 5003 @LENGTH@ 5


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(S3ObjectRangeOperationIntegrationTest.class)] @TO@ TypeDeclaration@@[@Ignore("Must be manually tested. Provide your own accessKey and secretKey!"), public]S3ObjectRangeOperationIntegrationTest, CamelTestSupport @AT@ 2295 @LENGTH@ 103


INS MethodDeclaration@@public, Sum, MethodName:and, Number value,  @TO@ TypeDeclaration@@[public, static]Sum, AbstractAggregationExpression @AT@ 6363 @LENGTH@ 122
---INS Modifier@@public @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6363 @LENGTH@ 6
---INS SimpleType@@Sum @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6370 @LENGTH@ 3
---INS SimpleName@@MethodName:and @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6374 @LENGTH@ 3
---INS SingleVariableDeclaration@@Number value @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6378 @LENGTH@ 12
------INS SimpleType@@Number @TO@ SingleVariableDeclaration@@Number value @AT@ 6378 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Number value @AT@ 6385 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(value,"Value must not be null!") @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6398 @LENGTH@ 49
------INS MethodInvocation@@Assert.notNull(value,"Value must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(value,"Value must not be null!") @AT@ 6398 @LENGTH@ 48
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(value,"Value must not be null!") @AT@ 6398 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[value, "Value must not be null!"] @TO@ MethodInvocation@@Assert.notNull(value,"Value must not be null!") @AT@ 6405 @LENGTH@ 41
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:notNull:[value, "Value must not be null!"] @AT@ 6413 @LENGTH@ 5
------------INS StringLiteral@@"Value must not be null!" @TO@ SimpleName@@MethodName:notNull:[value, "Value must not be null!"] @AT@ 6420 @LENGTH@ 25
---INS ReturnStatement@@ClassInstanceCreation:new Sum(append(value)) @TO@ MethodDeclaration@@public, Sum, MethodName:and, Number value,  @AT@ 6451 @LENGTH@ 30
------INS ClassInstanceCreation@@Sum[append(value)] @TO@ ReturnStatement@@ClassInstanceCreation:new Sum(append(value)) @AT@ 6458 @LENGTH@ 22
---------INS New@@new @TO@ ClassInstanceCreation@@Sum[append(value)] @AT@ 6458 @LENGTH@ 3
---------INS SimpleType@@Sum @TO@ ClassInstanceCreation@@Sum[append(value)] @AT@ 6462 @LENGTH@ 3
---------INS MethodInvocation@@append(value) @TO@ ClassInstanceCreation@@Sum[append(value)] @AT@ 6466 @LENGTH@ 13
------------INS SimpleName@@MethodName:append:[value] @TO@ MethodInvocation@@append(value) @AT@ 6466 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:append:[value] @AT@ 6473 @LENGTH@ 5


INS MethodDeclaration@@public, String, MethodName:getServerName,  @TO@ TypeDeclaration@@DummyRequest, HttpServletRequestWrapper @AT@ 6307 @LENGTH@ 49
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getServerName,  @AT@ 6307 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getServerName,  @AT@ 6314 @LENGTH@ 6
---INS SimpleName@@MethodName:getServerName @TO@ MethodDeclaration@@public, String, MethodName:getServerName,  @AT@ 6321 @LENGTH@ 13
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, String, MethodName:getServerName,  @AT@ 6341 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6348 @LENGTH@ 4


UPD VariableDeclarationStatement@@AuthenticationManagerBuilder authBuilder=authenticationManagerBuilder(this.objectPostProcessor,this.applicationContext); @TO@ AuthenticationManagerBuilder authBuilder=this.applicationContext.getBean(AuthenticationManagerBuilder.class); @AT@ 4962 @LENGTH@ 128
---UPD VariableDeclarationFragment@@authBuilder=authenticationManagerBuilder(this.objectPostProcessor,this.applicationContext) @TO@ authBuilder=this.applicationContext.getBean(AuthenticationManagerBuilder.class) @AT@ 4991 @LENGTH@ 98
------UPD MethodInvocation@@authenticationManagerBuilder(this.objectPostProcessor,this.applicationContext) @TO@ this.applicationContext.getBean(AuthenticationManagerBuilder.class) @AT@ 5005 @LENGTH@ 84
---------INS FieldAccess@@this.applicationContext @TO@ MethodInvocation@@authenticationManagerBuilder(this.objectPostProcessor,this.applicationContext) @AT@ 5005 @LENGTH@ 23
------------MOV ThisExpression@@this @TO@ FieldAccess@@this.applicationContext @AT@ 5065 @LENGTH@ 4
------------MOV SimpleName@@applicationContext @TO@ FieldAccess@@this.applicationContext @AT@ 5070 @LENGTH@ 18
---------DEL SimpleName@@MethodName:authenticationManagerBuilder:[this.objectPostProcessor, this.applicationContext] @AT@ 5005 @LENGTH@ 84
------------DEL FieldAccess@@this.objectPostProcessor @AT@ 5039 @LENGTH@ 24
---------------DEL ThisExpression@@this @AT@ 5039 @LENGTH@ 4
---------------DEL SimpleName@@objectPostProcessor @AT@ 5044 @LENGTH@ 19
------------DEL FieldAccess@@this.applicationContext @AT@ 5065 @LENGTH@ 23
---------INS SimpleName@@MethodName:getBean:[AuthenticationManagerBuilder.class] @TO@ MethodInvocation@@authenticationManagerBuilder(this.objectPostProcessor,this.applicationContext) @AT@ 5029 @LENGTH@ 43
------------INS TypeLiteral@@AuthenticationManagerBuilder.class @TO@ SimpleName@@MethodName:getBean:[AuthenticationManagerBuilder.class] @AT@ 5037 @LENGTH@ 34


INS VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @TO@ MethodDeclaration@@public, ModelNode, MethodName:execute, OperationContext context, ModelNode operation, Operation<BackupOperationContext> executable, OperationFailedException,  @AT@ 2313 @LENGTH@ 102
---INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @AT@ 2313 @LENGTH@ 11
---INS VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @AT@ 2325 @LENGTH@ 89
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @AT@ 2325 @LENGTH@ 4
------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @AT@ 2365 @LENGTH@ 82


UPD TypeDeclaration@@[public]ConsumerSecurityVoter, [AccessDecisionVoter<Object>] @TO@ [@Deprecated, public]ConsumerSecurityVoter, [AccessDecisionVoter<Object>] @AT@ 1090 @LENGTH@ 2552
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerSecurityVoter, [AccessDecisionVoter<Object>] @AT@ 1311 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @TO@ TypeDeclaration@@[public]LogoutSpecTests,  @AT@ 4854 @LENGTH@ 891
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 4854 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 4861 @LENGTH@ 4
---INS SimpleName@@MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 4866 @LENGTH@ 45
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build(); @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 4918 @LENGTH@ 184
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build(); @AT@ 4918 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build(); @AT@ 4941 @LENGTH@ 160
---------INS SimpleName@@securityWebFilter @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4941 @LENGTH@ 17
---------INS MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @TO@ VariableDeclarationFragment@@securityWebFilter=this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 140
------------INS MethodInvocation@@MethodName:disable:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 127
------------INS MethodInvocation@@MethodName:logout:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 117
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 103
------------INS MethodInvocation@@MethodName:formLogin:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 97
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 80
------------INS MethodInvocation@@MethodName:authenticated:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 69
------------INS MethodInvocation@@MethodName:anyExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:authorizeExchange:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 34
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 4961 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 4961 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 4966 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.authorizeExchange().anyExchange().authenticated().and().formLogin().and().logout().disable().build() @AT@ 5094 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5106 @LENGTH@ 105
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 5106 @LENGTH@ 13
------INS VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationStatement@@WebTestClient webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build(); @AT@ 5120 @LENGTH@ 90
---------INS SimpleName@@webTestClient @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 5120 @LENGTH@ 13
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @TO@ VariableDeclarationFragment@@webTestClient=WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 5136 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 5136 @LENGTH@ 61
---------------INS SimpleName@@securityWebFilter @TO@ MethodInvocation@@MethodName:bindToWebFilters:[securityWebFilter] @AT@ 5179 @LENGTH@ 17
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 5136 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityWebFilter).build() @AT@ 5203 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5215 @LENGTH@ 106
------INS SimpleType@@WebDriver @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 5215 @LENGTH@ 9
------INS VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationStatement@@WebDriver driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build(); @AT@ 5225 @LENGTH@ 95
---------INS SimpleName@@driver @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 5225 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @TO@ VariableDeclarationFragment@@driver=WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 5234 @LENGTH@ 86
------------INS MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 5234 @LENGTH@ 73
---------------INS SimpleName@@webTestClient @TO@ MethodInvocation@@MethodName:webTestClientSetup:[webTestClient] @AT@ 5293 @LENGTH@ 13
------------INS SimpleName@@Name:WebTestClientHtmlUnitDriverBuilder @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 5234 @LENGTH@ 34
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientHtmlUnitDriverBuilder.webTestClientSetup(webTestClient).build() @AT@ 5313 @LENGTH@ 7
---INS VariableDeclarationStatement@@FormLoginTests.DefaultLoginPage loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt(); @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5325 @LENGTH@ 134
------INS SimpleType@@FormLoginTests.DefaultLoginPage @TO@ VariableDeclarationStatement@@FormLoginTests.DefaultLoginPage loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt(); @AT@ 5325 @LENGTH@ 31
------INS VariableDeclarationFragment@@loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @TO@ VariableDeclarationStatement@@FormLoginTests.DefaultLoginPage loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt(); @AT@ 5357 @LENGTH@ 101
---------INS SimpleName@@loginPage @TO@ VariableDeclarationFragment@@loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @AT@ 5357 @LENGTH@ 9
---------INS MethodInvocation@@FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @TO@ VariableDeclarationFragment@@loginPage=FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @AT@ 5369 @LENGTH@ 89
------------INS MethodInvocation@@MethodName:to:[driver, FormLoginTests.DefaultLoginPage.class] @TO@ MethodInvocation@@FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @AT@ 5369 @LENGTH@ 73
---------------INS SimpleName@@driver @TO@ MethodInvocation@@MethodName:to:[driver, FormLoginTests.DefaultLoginPage.class] @AT@ 5396 @LENGTH@ 6
---------------INS TypeLiteral@@FormLoginTests.DefaultLoginPage.class @TO@ MethodInvocation@@MethodName:to:[driver, FormLoginTests.DefaultLoginPage.class] @AT@ 5404 @LENGTH@ 37
------------INS QualifiedName@@Name:FormLoginTests.HomePage @TO@ MethodInvocation@@FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @AT@ 5369 @LENGTH@ 23
------------INS SimpleName@@MethodName:assertAt:[] @TO@ MethodInvocation@@FormLoginTests.HomePage.to(driver,FormLoginTests.DefaultLoginPage.class).assertAt() @AT@ 5448 @LENGTH@ 10
---INS VariableDeclarationStatement@@FormLoginTests.HomePage homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class); @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5463 @LENGTH@ 148
------INS SimpleType@@FormLoginTests.HomePage @TO@ VariableDeclarationStatement@@FormLoginTests.HomePage homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class); @AT@ 5463 @LENGTH@ 23
------INS VariableDeclarationFragment@@homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @TO@ VariableDeclarationStatement@@FormLoginTests.HomePage homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class); @AT@ 5487 @LENGTH@ 123
---------INS SimpleName@@homePage @TO@ VariableDeclarationFragment@@homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5487 @LENGTH@ 8
---------INS MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @TO@ VariableDeclarationFragment@@homePage=loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5498 @LENGTH@ 112
------------INS MethodInvocation@@MethodName:password:["password"] @TO@ MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5498 @LENGTH@ 69
---------------INS StringLiteral@@"password" @TO@ MethodInvocation@@MethodName:password:["password"] @AT@ 5556 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:username:["user"] @TO@ MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5498 @LENGTH@ 43
---------------INS StringLiteral@@"user" @TO@ MethodInvocation@@MethodName:username:["user"] @AT@ 5534 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:loginForm:[] @TO@ MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5498 @LENGTH@ 21
------------INS SimpleName@@Name:loginPage @TO@ MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5498 @LENGTH@ 9
------------INS SimpleName@@MethodName:submit:[FormLoginTests.HomePage.class] @TO@ MethodInvocation@@loginPage.loginForm().username("user").password("password").submit(FormLoginTests.HomePage.class) @AT@ 5573 @LENGTH@ 37
---------------INS TypeLiteral@@FormLoginTests.HomePage.class @TO@ SimpleName@@MethodName:submit:[FormLoginTests.HomePage.class] @AT@ 5580 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:homePage.assertAt() @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5615 @LENGTH@ 20
------INS MethodInvocation@@homePage.assertAt() @TO@ ExpressionStatement@@MethodInvocation:homePage.assertAt() @AT@ 5615 @LENGTH@ 19
---------INS SimpleName@@Name:homePage @TO@ MethodInvocation@@homePage.assertAt() @AT@ 5615 @LENGTH@ 8
---------INS SimpleName@@MethodName:assertAt:[] @TO@ MethodInvocation@@homePage.assertAt() @AT@ 5624 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5639 @LENGTH@ 74
------INS MethodInvocation@@FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @TO@ ExpressionStatement@@MethodInvocation:FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @AT@ 5639 @LENGTH@ 73
---------INS MethodInvocation@@MethodName:assertAt:[] @TO@ MethodInvocation@@FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @AT@ 5639 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:to:[driver] @TO@ MethodInvocation@@FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @AT@ 5639 @LENGTH@ 43
------------INS SimpleName@@driver @TO@ MethodInvocation@@MethodName:to:[driver] @AT@ 5675 @LENGTH@ 6
---------INS QualifiedName@@Name:FormLoginTests.DefaultLogoutPage @TO@ MethodInvocation@@FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @AT@ 5639 @LENGTH@ 32
---------INS SimpleName@@MethodName:logout:[] @TO@ MethodInvocation@@FormLoginTests.DefaultLogoutPage.to(driver).assertAt().logout() @AT@ 5704 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:homePage.assertAt() @TO@ MethodDeclaration@@public, void, MethodName:logoutWhenDisabledThenPostToLogoutDoesNothing,  @AT@ 5717 @LENGTH@ 25
------INS MethodInvocation@@homePage.assertAt() @TO@ ExpressionStatement@@MethodInvocation:homePage.assertAt() @AT@ 5717 @LENGTH@ 24
---------INS SimpleName@@Name:homePage @TO@ MethodInvocation@@homePage.assertAt() @AT@ 5717 @LENGTH@ 8
---------INS SimpleName@@MethodName:assertAt:[] @TO@ MethodInvocation@@homePage.assertAt() @AT@ 5731 @LENGTH@ 10


UPD MethodDeclaration@@public, static, void, T, MethodName:iterateTask, Collection<Task<? extends Serializable>> tasks, Class<T> clazz, Function<T> function,  @TO@ public, static, void, T, MethodName:iterateTask, Collection<Task<?>> tasks, Class<T> clazz, Function<T> function,  @AT@ 1148 @LENGTH@ 331
---UPD SingleVariableDeclaration@@Collection<Task<? extends Serializable>> tasks @TO@ Collection<Task<?>> tasks @AT@ 1183 @LENGTH@ 46
------UPD ParameterizedType@@Collection<Task<? extends Serializable>> @TO@ Collection<Task<?>> @AT@ 1183 @LENGTH@ 40
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1194 @LENGTH@ 28


UPD MethodDeclaration@@default, RestEndpointBuilder, MethodName:rest, String path,  @TO@ default, RestEndpointBuilder, MethodName:restEndpoint, String path,  @AT@ 26445 @LENGTH@ 354
---UPD SimpleName@@MethodName:rest @TO@ MethodName:restEndpoint @AT@ 26473 @LENGTH@ 4


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]Jackson2ArrayOrStringDeserializer, StdDeserializer<Set<String>> @TO@ [@SuppressWarnings("serial"), @Deprecated, public]Jackson2ArrayOrStringDeserializer, StdDeserializer<Set<String>> @AT@ 651 @LENGTH@ 735
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]Jackson2ArrayOrStringDeserializer, StdDeserializer<Set<String>> @AT@ 865 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]BindingStyle,  @TO@ [static]BindingStyle,  @AT@ 73144 @LENGTH@ 80
---DEL Modifier@@public @AT@ 73144 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedJingEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedJingEndpointBuilder, [EndpointProducerBuilder] @AT@ 3149 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 3156 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1490 @LENGTH@ 1283
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1497 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1502 @LENGTH@ 28
---UPD VariableDeclarationStatement@@Task<? extends Serializable> allocWriteIdTask=TaskFactory.get(work,context.hiveConf); @TO@ Task<?> allocWriteIdTask=TaskFactory.get(work,context.hiveConf); @AT@ 2456 @LENGTH@ 88
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2456 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]GenericFileExist,  @TO@ [static]GenericFileExist,  @AT@ 208766 @LENGTH@ 100
---DEL Modifier@@public @AT@ 208766 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 12280 @LENGTH@ 404
---DEL Modifier@@public @AT@ 12280 @LENGTH@ 6


UPD TypeDeclaration@@[public]NullNonceServices, [OAuthNonceServices] @TO@ [@Deprecated, public]NullNonceServices, [OAuthNonceServices] @AT@ 1007 @LENGTH@ 205
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]NullNonceServices, [OAuthNonceServices] @AT@ 1228 @LENGTH@ 11


UPD TypeDeclaration@@[public]ConsumerServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ConsumerServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1285 @LENGTH@ 2612
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1506 @LENGTH@ 11


UPD VariableDeclarationStatement@@Collection<Object> result=CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,sources.size()); @TO@ Collection<Object> result=CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,type.getComponentType().getType(),sources.size()); @AT@ 3248 @LENGTH@ 125
---UPD VariableDeclarationFragment@@result=CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,sources.size()) @TO@ result=CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,type.getComponentType().getType(),sources.size()) @AT@ 3267 @LENGTH@ 105
------UPD MethodInvocation@@CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,sources.size()) @TO@ CollectionFactory.createCollection(rawType.isArray() ? List.class : rawType,type.getComponentType().getType(),sources.size()) @AT@ 3276 @LENGTH@ 96
---------UPD SimpleName@@MethodName:createCollection:[rawType.isArray() ? List.class : rawType, sources.size()] @TO@ MethodName:createCollection:[rawType.isArray() ? List.class : rawType, type.getComponentType().getType(), sources.size()] @AT@ 3294 @LENGTH@ 78
------------INS MethodInvocation@@type.getComponentType().getType() @TO@ SimpleName@@MethodName:createCollection:[rawType.isArray() ? List.class : rawType, sources.size()] @AT@ 3357 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@type.getComponentType().getType() @AT@ 3357 @LENGTH@ 23
---------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getComponentType().getType() @AT@ 3357 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@type.getComponentType().getType() @AT@ 3381 @LENGTH@ 9


UPD TypeDeclaration@@[@Configuration]Jsr250MetadataSourceConfiguration,  @TO@ [@Configuration(proxyBeanMethods=false)]Jsr250MetadataSourceConfiguration,  @AT@ 904 @LENGTH@ 202
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration]Jsr250MetadataSourceConfiguration,  @AT@ 904 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 904 @LENGTH@ 14


UPD ForStatement@@for (int i=0; i < regularExtraFieldCount; i++) {  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);  start+=WORD;  final byte[] local=data[i].getCentralDirectoryData();  if (local != null) {    System.arraycopy(local,0,result,start,local.length);    start+=local.length;  }} @TO@ for (int i=0; i < regularExtraFieldCount; i++) {  System.arraycopy(data[i].getHeaderId().getBytes(),0,result,start,2);  System.arraycopy(data[i].getCentralDirectoryLength().getBytes(),0,result,start + 2,2);  start+=WORD;  final byte[] central=data[i].getCentralDirectoryData();  if (central != null) {    System.arraycopy(central,0,result,start,central.length);    start+=central.length;  }} @AT@ 10789 @LENGTH@ 560
---UPD VariableDeclarationStatement@@final byte[] local=data[i].getCentralDirectoryData(); @TO@ final byte[] central=data[i].getCentralDirectoryData(); @AT@ 11125 @LENGTH@ 55
------UPD VariableDeclarationFragment@@local=data[i].getCentralDirectoryData() @TO@ central=data[i].getCentralDirectoryData() @AT@ 11138 @LENGTH@ 41
---------UPD SimpleName@@local @TO@ central @AT@ 11138 @LENGTH@ 5
---UPD IfStatement@@if (local != null) {  System.arraycopy(local,0,result,start,local.length);  start+=local.length;} @TO@ if (central != null) {  System.arraycopy(central,0,result,start,central.length);  start+=central.length;} @AT@ 11193 @LENGTH@ 146
------UPD InfixExpression@@local != null @TO@ central != null @AT@ 11197 @LENGTH@ 13
---------UPD SimpleName@@local @TO@ central @AT@ 11197 @LENGTH@ 5
------UPD Block@@ThenBody:{  System.arraycopy(local,0,result,start,local.length);  start+=local.length;} @TO@ ThenBody:{  System.arraycopy(central,0,result,start,central.length);  start+=central.length;} @AT@ 11212 @LENGTH@ 127
---------UPD ExpressionStatement@@MethodInvocation:System.arraycopy(local,0,result,start,local.length) @TO@ MethodInvocation:System.arraycopy(central,0,result,start,central.length) @AT@ 11230 @LENGTH@ 56
------------UPD MethodInvocation@@System.arraycopy(local,0,result,start,local.length) @TO@ System.arraycopy(central,0,result,start,central.length) @AT@ 11230 @LENGTH@ 55
---------------UPD SimpleName@@MethodName:arraycopy:[local, 0, result, start, local.length] @TO@ MethodName:arraycopy:[central, 0, result, start, central.length] @AT@ 11237 @LENGTH@ 48
------------------UPD SimpleName@@local @TO@ central @AT@ 11247 @LENGTH@ 5
------------------UPD QualifiedName@@local.length @TO@ central.length @AT@ 11272 @LENGTH@ 12
---------------------UPD SimpleName@@local @TO@ central @AT@ 11272 @LENGTH@ 5
---------UPD ExpressionStatement@@Assignment:start+=local.length @TO@ Assignment:start+=central.length @AT@ 11303 @LENGTH@ 22
------------UPD Assignment@@start+=local.length @TO@ start+=central.length @AT@ 11303 @LENGTH@ 21
---------------UPD QualifiedName@@local.length @TO@ central.length @AT@ 11312 @LENGTH@ 12
------------------UPD SimpleName@@local @TO@ central @AT@ 11312 @LENGTH@ 5


UPD TypeDeclaration@@[public, final]JwkTokenStore, [TokenStore] @TO@ [@Deprecated, public, final]JwkTokenStore, [TokenStore] @AT@ 4116 @LENGTH@ 7372
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]JwkTokenStore, [TokenStore] @AT@ 4294 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenExtractor,  @TO@ [@Deprecated, public]TokenExtractor,  @AT@ 816 @LENGTH@ 324
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenExtractor,  @AT@ 994 @LENGTH@ 11


UPD MethodDeclaration@@default, EC2EndpointBuilder, MethodName:eC2, String path,  @TO@ default, EC2EndpointBuilder, MethodName:awsEc2, String path,  @AT@ 5147 @LENGTH@ 350
---UPD SimpleName@@MethodName:eC2 @TO@ MethodName:awsEc2 @AT@ 5174 @LENGTH@ 3


UPD IfStatement@@if (getEndpoint().isUseStreaming() && (body instanceof InputStream)) {  requestHeaders.put(Headers.TRANSFER_ENCODING,"chunked");  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,(InputStream)body);} else {  final TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  final ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);  if (body != null && bodyAsByte != null) {    requestHeaders.put(Headers.CONTENT_LENGTH,bodyAsByte.remaining());  }  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @TO@ if (streaming && (body instanceof InputStream)) {  requestHeaders.put(Headers.TRANSFER_ENCODING,"chunked");  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,(InputStream)body);} else {  final TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  final ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);  if (body != null && bodyAsByte != null) {    requestHeaders.put(Headers.CONTENT_LENGTH,bodyAsByte.remaining());  }  if (streaming) {    clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);  } else {    clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);  }} @AT@ 5417 @LENGTH@ 1024
---UPD InfixExpression@@getEndpoint().isUseStreaming() && (body instanceof InputStream) @TO@ streaming && (body instanceof InputStream) @AT@ 5421 @LENGTH@ 63
------DEL MethodInvocation@@getEndpoint().isUseStreaming() @AT@ 5421 @LENGTH@ 30
---------DEL MethodInvocation@@MethodName:getEndpoint:[] @AT@ 5421 @LENGTH@ 13
---------DEL SimpleName@@MethodName:isUseStreaming:[] @AT@ 5435 @LENGTH@ 16
------INS SimpleName@@streaming @TO@ InfixExpression@@getEndpoint().isUseStreaming() && (body instanceof InputStream) @AT@ 5487 @LENGTH@ 9
---UPD Block@@ElseBody:{  final TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  final ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);  if (body != null && bodyAsByte != null) {    requestHeaders.put(Headers.CONTENT_LENGTH,bodyAsByte.remaining());  }  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @TO@ ElseBody:{  final TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  final ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);  if (body != null && bodyAsByte != null) {    requestHeaders.put(Headers.CONTENT_LENGTH,bodyAsByte.remaining());  }  if (streaming) {    clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);  } else {    clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);  }} @AT@ 5820 @LENGTH@ 621
------INS IfStatement@@if (streaming) {  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} else {  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @TO@ Block@@ElseBody:{  final TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  final ByteBuffer bodyAsByte=tc.tryConvertTo(ByteBuffer.class,body);  if (body != null && bodyAsByte != null) {    requestHeaders.put(Headers.CONTENT_LENGTH,bodyAsByte.remaining());  }  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6351 @LENGTH@ 402
---------INS SimpleName@@streaming @TO@ IfStatement@@if (streaming) {  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} else {  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6355 @LENGTH@ 9
---------INS Block@@ThenBody:{  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @TO@ IfStatement@@if (streaming) {  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} else {  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6366 @LENGTH@ 220
------------INS ExpressionStatement@@Assignment:clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @TO@ Block@@ThenBody:{  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6434 @LENGTH@ 138
---------------INS Assignment@@clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @TO@ ExpressionStatement@@Assignment:clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @AT@ 6434 @LENGTH@ 137
------------------INS SimpleName@@clientCallback @TO@ Assignment@@clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @AT@ 6434 @LENGTH@ 14
------------------INS Operator@@= @TO@ Assignment@@clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @AT@ 6448 @LENGTH@ 1
------------------INS ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @TO@ Assignment@@clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @AT@ 6451 @LENGTH@ 120
---------------------INS New@@new @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6451 @LENGTH@ 3
---------------------INS SimpleType@@UndertowStreamingClientCallback @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6455 @LENGTH@ 31
---------------------INS SimpleName@@camelExchange @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6487 @LENGTH@ 13
---------------------INS SimpleName@@callback @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6502 @LENGTH@ 8
---------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6512 @LENGTH@ 13
---------------------INS SimpleName@@request @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6551 @LENGTH@ 7
---------------------INS SimpleName@@bodyAsByte @TO@ ClassInstanceCreation@@UndertowStreamingClientCallback[camelExchange, callback, getEndpoint(), request, bodyAsByte] @AT@ 6560 @LENGTH@ 10
---------INS Block@@ElseBody:{  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @TO@ IfStatement@@if (streaming) {  clientCallback=new UndertowStreamingClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} else {  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6592 @LENGTH@ 161
------------MOV ExpressionStatement@@Assignment:clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte) @TO@ Block@@ElseBody:{  clientCallback=new UndertowClientCallback(camelExchange,callback,getEndpoint(),request,bodyAsByte);} @AT@ 6306 @LENGTH@ 125


INS ExpressionStatement@@MethodInvocation:logoutHandlers.add(postProcess(new LogoutSuccessEventPublishingLogoutHandler())) @TO@ MethodDeclaration@@private, LogoutFilter, MethodName:createLogoutFilter, H http, Exception,  @AT@ 12624 @LENGTH@ 81
---INS MethodInvocation@@logoutHandlers.add(postProcess(new LogoutSuccessEventPublishingLogoutHandler())) @TO@ ExpressionStatement@@MethodInvocation:logoutHandlers.add(postProcess(new LogoutSuccessEventPublishingLogoutHandler())) @AT@ 12624 @LENGTH@ 80
------INS SimpleName@@Name:logoutHandlers @TO@ MethodInvocation@@logoutHandlers.add(postProcess(new LogoutSuccessEventPublishingLogoutHandler())) @AT@ 12624 @LENGTH@ 14
------INS SimpleName@@MethodName:add:[postProcess(new LogoutSuccessEventPublishingLogoutHandler())] @TO@ MethodInvocation@@logoutHandlers.add(postProcess(new LogoutSuccessEventPublishingLogoutHandler())) @AT@ 12639 @LENGTH@ 65
---------INS MethodInvocation@@postProcess(new LogoutSuccessEventPublishingLogoutHandler()) @TO@ SimpleName@@MethodName:add:[postProcess(new LogoutSuccessEventPublishingLogoutHandler())] @AT@ 12643 @LENGTH@ 60
------------INS SimpleName@@MethodName:postProcess:[new LogoutSuccessEventPublishingLogoutHandler()] @TO@ MethodInvocation@@postProcess(new LogoutSuccessEventPublishingLogoutHandler()) @AT@ 12643 @LENGTH@ 60
---------------INS ClassInstanceCreation@@LogoutSuccessEventPublishingLogoutHandler[] @TO@ SimpleName@@MethodName:postProcess:[new LogoutSuccessEventPublishingLogoutHandler()] @AT@ 12655 @LENGTH@ 47
------------------INS New@@new @TO@ ClassInstanceCreation@@LogoutSuccessEventPublishingLogoutHandler[] @AT@ 12655 @LENGTH@ 3
------------------INS SimpleType@@LogoutSuccessEventPublishingLogoutHandler @TO@ ClassInstanceCreation@@LogoutSuccessEventPublishingLogoutHandler[] @AT@ 12659 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:properties.entrySet().forEach((e) -> options.put(e.getKey().toString(),e.getValue())) @TO@ MethodInvocation:properties.entrySet().forEach(e -> options.put(e.getKey().toString(),e.getValue())) @AT@ 1740 @LENGTH@ 87
---UPD MethodInvocation@@properties.entrySet().forEach((e) -> options.put(e.getKey().toString(),e.getValue())) @TO@ properties.entrySet().forEach(e -> options.put(e.getKey().toString(),e.getValue())) @AT@ 1740 @LENGTH@ 86
------UPD SimpleName@@MethodName:forEach:[(e) -> options.put(e.getKey().toString(),e.getValue())] @TO@ MethodName:forEach:[e -> options.put(e.getKey().toString(),e.getValue())] @AT@ 1762 @LENGTH@ 64
---------UPD LambdaExpression@@(e) -> options.put(e.getKey().toString(),e.getValue()) @TO@ e -> options.put(e.getKey().toString(),e.getValue()) @AT@ 1770 @LENGTH@ 55


UPD TypeDeclaration@@[public, static]SqlStoredEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SqlStoredEndpointBuilder, [EndpointProducerBuilder] @AT@ 1446 @LENGTH@ 5093
---DEL Modifier@@static @AT@ 1453 @LENGTH@ 6


UPD MethodDeclaration@@default, KinesisEndpointBuilder, MethodName:kinesis, String path,  @TO@ default, KinesisEndpointBuilder, MethodName:awsKinesis, String path,  @AT@ 45984 @LENGTH@ 382
---UPD SimpleName@@MethodName:kinesis @TO@ MethodName:awsKinesis @AT@ 46015 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]RestApiEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]RestApiEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1473 @LENGTH@ 2139
---DEL Modifier@@static @AT@ 1480 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:rsocket.authorizePayload(authorize -> authorize.route("secure.admin.*").authenticated().anyRequest().permitAll()).jwt(Customizer.withDefaults()) @TO@ MethodInvocation:rsocket.authorizePayload(authorize -> authorize.route("secure.admin.*").authenticated().anyExchange().permitAll()).jwt(Customizer.withDefaults()) @AT@ 5029 @LENGTH@ 179
---UPD MethodInvocation@@rsocket.authorizePayload(authorize -> authorize.route("secure.admin.*").authenticated().anyRequest().permitAll()).jwt(Customizer.withDefaults()) @TO@ rsocket.authorizePayload(authorize -> authorize.route("secure.admin.*").authenticated().anyExchange().permitAll()).jwt(Customizer.withDefaults()) @AT@ 5029 @LENGTH@ 178
------UPD MethodInvocation@@MethodName:authorizePayload:[authorize -> authorize.route("secure.admin.*").authenticated().anyRequest().permitAll()] @TO@ MethodName:authorizePayload:[authorize -> authorize.route("secure.admin.*").authenticated().anyExchange().permitAll()] @AT@ 5029 @LENGTH@ 142
---------UPD LambdaExpression@@authorize -> authorize.route("secure.admin.*").authenticated().anyRequest().permitAll() @TO@ authorize -> authorize.route("secure.admin.*").authenticated().anyExchange().permitAll() @AT@ 5059 @LENGTH@ 106
------------UPD MethodInvocation@@authorize.route("secure.admin.*").authenticated().anyRequest().permitAll() @TO@ authorize.route("secure.admin.*").authenticated().anyExchange().permitAll() @AT@ 5077 @LENGTH@ 88
---------------UPD MethodInvocation@@MethodName:anyRequest:[] @TO@ MethodName:anyExchange:[] @AT@ 5077 @LENGTH@ 76


UPD TypeDeclaration@@[public, static]AdvancedKeystoneEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKeystoneEndpointBuilder, [EndpointProducerBuilder] @AT@ 4512 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 4519 @LENGTH@ 6


UPD MethodDeclaration@@default, KubernetesHPAEndpointBuilder, MethodName:kubernetesHPA, String path,  @TO@ default, KubernetesHPAEndpointBuilder, MethodName:kubernetesHpa, String path,  @AT@ 43385 @LENGTH@ 427
---UPD SimpleName@@MethodName:kubernetesHPA @TO@ MethodName:kubernetesHpa @AT@ 43422 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]AdvancedCMEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedCMEndpointBuilder, [EndpointProducerBuilder] @AT@ 4712 @LENGTH@ 2034
---DEL Modifier@@static @AT@ 4719 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, String, [WRITE_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check you annotation setup at the converter implementation."] @TO@ private, static, final, String, [WRITE_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation."] @AT@ 2555 @LENGTH@ 249
---UPD VariableDeclarationFragment@@WRITE_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check you annotation setup at the converter implementation." @TO@ WRITE_CONVERTER_NOT_SIMPLE="Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation." @AT@ 2583 @LENGTH@ 220
------UPD StringLiteral@@"Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check you annotation setup at the converter implementation." @TO@ "Registering converter from %s to %s as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation." @AT@ 2612 @LENGTH@ 191


UPD TypeDeclaration@@[public]OAuthTokenLifecycleListener,  @TO@ [@Deprecated, public]OAuthTokenLifecycleListener,  @AT@ 150 @LENGTH@ 339
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthTokenLifecycleListener,  @AT@ 371 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidTokenException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidTokenException, ClientAuthenticationException @AT@ 738 @LENGTH@ 385
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidTokenException, ClientAuthenticationException @AT@ 944 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]Olingo4ApiName,  @TO@ [static]Olingo4ApiName,  @AT@ 44683 @LENGTH@ 58
---DEL Modifier@@public @AT@ 44683 @LENGTH@ 6


UPD TypeDeclaration@@[public]BaseOAuth2ProtectedResourceDetails, [OAuth2ProtectedResourceDetails] @TO@ [@Deprecated, public]BaseOAuth2ProtectedResourceDetails, [OAuth2ProtectedResourceDetails] @AT@ 325 @LENGTH@ 2623
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]BaseOAuth2ProtectedResourceDetails, [OAuth2ProtectedResourceDetails] @AT@ 503 @LENGTH@ 11


UPD Block@@ThenBody:{  List<Task<? extends Serializable>> rootTasks=hookContext.getQueryPlan().getRootTasks();  for (  Task<? extends Serializable> rootTask : rootTasks) {    if (rootTask.getWork() instanceof MapredWork) {      Assert.assertTrue("The root map reduce task's input was not marked as sorted.",((MapredWork)rootTask.getWork()).getMapWork().isInputFormatSorted());    }  }} @TO@ ThenBody:{  List<Task<?>> rootTasks=hookContext.getQueryPlan().getRootTasks();  for (  Task<?> rootTask : rootTasks) {    if (rootTask.getWork() instanceof MapredWork) {      Assert.assertTrue("The root map reduce task's input was not marked as sorted.",((MapredWork)rootTask.getWork()).getMapWork().isInputFormatSorted());    }  }} @AT@ 1281 @LENGTH@ 540
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> rootTasks=hookContext.getQueryPlan().getRootTasks(); @TO@ List<Task<?>> rootTasks=hookContext.getQueryPlan().getRootTasks(); @AT@ 1414 @LENGTH@ 89
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1414 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1419 @LENGTH@ 28
---UPD EnhancedForStatement@@for (Task<? extends Serializable> rootTask : rootTasks) {  if (rootTask.getWork() instanceof MapredWork) {    Assert.assertTrue("The root map reduce task's input was not marked as sorted.",((MapredWork)rootTask.getWork()).getMapWork().isInputFormatSorted());  }} @TO@ for (Task<?> rootTask : rootTasks) {  if (rootTask.getWork() instanceof MapredWork) {    Assert.assertTrue("The root map reduce task's input was not marked as sorted.",((MapredWork)rootTask.getWork()).getMapWork().isInputFormatSorted());  }} @AT@ 1510 @LENGTH@ 305
------UPD SingleVariableDeclaration@@Task<? extends Serializable> rootTask @TO@ Task<?> rootTask @AT@ 1515 @LENGTH@ 37
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1515 @LENGTH@ 28


UPD TypeDeclaration@@[public]ServiceHostFunction,  @TO@ [public, final]ServiceHostFunction,  @AT@ 1376 @LENGTH@ 919
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ServiceHostFunction,  @AT@ 1383 @LENGTH@ 5


UPD SuperConstructorInvocation@@super(new Parameters(DiscoveryExtension.SUBSYSTEM_PATH,DiscoveryExtension.getResourceDescriptionResolver()).setAddHandler(DiscoverySubsystemAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler()));
 @TO@ super(new Parameters(DiscoveryExtension.SUBSYSTEM_PATH,DiscoveryExtension.getResourceDescriptionResolver()).setAddHandler(DiscoverySubsystemAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()));
 @AT@ 1396 @LENGTH@ 252
---UPD MethodInvocation@@new Parameters(DiscoveryExtension.SUBSYSTEM_PATH,DiscoveryExtension.getResourceDescriptionResolver()).setAddHandler(DiscoverySubsystemAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler()) @TO@ new Parameters(DiscoveryExtension.SUBSYSTEM_PATH,DiscoveryExtension.getResourceDescriptionResolver()).setAddHandler(DiscoverySubsystemAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()) @AT@ 1402 @LENGTH@ 235
------UPD SimpleName@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler()] @TO@ MethodName:setRemoveHandler:[TrivialRemoveStepHandler.getInstance()] @AT@ 1589 @LENGTH@ 48
---------INS MethodInvocation@@TrivialRemoveStepHandler.getInstance() @TO@ SimpleName@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler()] @AT@ 1606 @LENGTH@ 38
------------INS SimpleName@@Name:TrivialRemoveStepHandler @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 1606 @LENGTH@ 24
------------INS SimpleName@@MethodName:getInstance:[] @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 1631 @LENGTH@ 13
---------DEL ClassInstanceCreation@@TrivialRemoveStepHandler[] @AT@ 1606 @LENGTH@ 30
------------DEL New@@new @AT@ 1606 @LENGTH@ 3
------------DEL SimpleType@@TrivialRemoveStepHandler @AT@ 1610 @LENGTH@ 24


UPD TypeDeclaration@@[public, static]KinesisFirehoseEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KinesisFirehoseEndpointBuilder, [EndpointProducerBuilder] @AT@ 1455 @LENGTH@ 3651
---DEL Modifier@@static @AT@ 1462 @LENGTH@ 6


UPD TypeDeclaration@@[public]VerifierServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]VerifierServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1055 @LENGTH@ 718
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]VerifierServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1276 @LENGTH@ 11


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FromFtpRemoteFileSorterTest, FtpServerTestSupport @AT@ 1247 @LENGTH@ 131


INS VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @TO@ MethodDeclaration@@public, static, Map<String,Converter<Object,?>>, MethodName:createDefaultClaimTypeConverters,  @AT@ 4633 @LENGTH@ 90
---INS ParameterizedType@@Converter<Object,?> @TO@ VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @AT@ 4633 @LENGTH@ 20
------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4633 @LENGTH@ 9
------INS SimpleType@@Object @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4643 @LENGTH@ 6
------INS WildcardType@@? @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4651 @LENGTH@ 1
---INS VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @TO@ VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @AT@ 4654 @LENGTH@ 68
------INS SimpleName@@stringConverter @TO@ VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4654 @LENGTH@ 15
------INS MethodInvocation@@getConverter(TypeDescriptor.valueOf(String.class)) @TO@ VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4672 @LENGTH@ 50
---------INS SimpleName@@MethodName:getConverter:[TypeDescriptor.valueOf(String.class)] @TO@ MethodInvocation@@getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4672 @LENGTH@ 50
------------INS MethodInvocation@@TypeDescriptor.valueOf(String.class) @TO@ SimpleName@@MethodName:getConverter:[TypeDescriptor.valueOf(String.class)] @AT@ 4685 @LENGTH@ 36
---------------INS SimpleName@@Name:TypeDescriptor @TO@ MethodInvocation@@TypeDescriptor.valueOf(String.class) @AT@ 4685 @LENGTH@ 14
---------------INS SimpleName@@MethodName:valueOf:[String.class] @TO@ MethodInvocation@@TypeDescriptor.valueOf(String.class) @AT@ 4700 @LENGTH@ 21
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:valueOf:[String.class] @AT@ 4708 @LENGTH@ 12


UPD TypeDeclaration@@[public, static]LogEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LogEndpointBuilder, [EndpointProducerBuilder] @AT@ 1409 @LENGTH@ 19001
---DEL Modifier@@static @AT@ 1416 @LENGTH@ 6


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 7849 @LENGTH@ 201
---UPD VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 7880 @LENGTH@ 169
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 7911 @LENGTH@ 138
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 7911 @LENGTH@ 141


UPD FieldDeclaration@@private, OAuth2TokenIntrospectionClient, [introspectionClient] @TO@ private, OpaqueTokenIntrospector, [introspectionClient] @AT@ 3605 @LENGTH@ 59
---UPD SimpleType@@OAuth2TokenIntrospectionClient @TO@ OpaqueTokenIntrospector @AT@ 3613 @LENGTH@ 30


UPD TypeDeclaration@@[public]RsaVerifier, [SignatureVerifier] @TO@ [@Deprecated, public]RsaVerifier, [SignatureVerifier] @AT@ 988 @LENGTH@ 967
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RsaVerifier, [SignatureVerifier] @AT@ 1166 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]JettyHttpEndpointBuilder9, [EndpointConsumerBuilder] @TO@ [public]JettyHttpEndpointBuilder9, [EndpointConsumerBuilder] @AT@ 1507 @LENGTH@ 9646
---DEL Modifier@@static @AT@ 1514 @LENGTH@ 6


UPD MethodDeclaration@@default, AtomixMultiMapEndpointBuilder, MethodName:atomixMultiMap, String path,  @TO@ default, AtomixMultiMapEndpointBuilder, MethodName:atomixMultimap, String path,  @AT@ 15555 @LENGTH@ 435
---UPD SimpleName@@MethodName:atomixMultiMap @TO@ MethodName:atomixMultimap @AT@ 15593 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:usersCollection.insertOne(Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ "")) @TO@ MethodInvocation:usersCollection.insertOne(Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}")) @AT@ 4028 @LENGTH@ 776
---UPD MethodInvocation@@usersCollection.insertOne(Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ "")) @TO@ usersCollection.insertOne(Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}")) @AT@ 4028 @LENGTH@ 775
------UPD SimpleName@@MethodName:insertOne:[Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ "")] @TO@ MethodName:insertOne:[Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}")] @AT@ 4044 @LENGTH@ 759
---------UPD MethodInvocation@@Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ "") @TO@ Document.parse("{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}") @AT@ 4054 @LENGTH@ 748
------------UPD SimpleName@@MethodName:parse:["{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ ""] @TO@ MethodName:parse:["{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"] @AT@ 4063 @LENGTH@ 739
---------------UPD InfixExpression@@"{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}"+ "" @TO@ "{\n" + "    \"_id\": \"admin.test-user\",\n" + "    \"user\": \"test-user\",\n"+ "    \"db\": \"admin\",\n"+ "    \"credentials\": {\n"+ "        \"SCRAM-SHA-1\": {\n"+ "            \"iterationCount\": 10000,\n"+ "            \"salt\": \"gmmPAoNdvFSWCV6PGnNcAw==\",\n"+ "            \"storedKey\": \"qE9u1Ax7Y40hisNHL2b8/LAvG7s=\",\n"+ "            \"serverKey\": \"RefeJcxClt9JbOP/VnrQ7YeQh6w=\"\n"+ "        }\n"+ "    },\n"+ "    \"roles\": [\n"+ "        {\n"+ "            \"role\": \"readWrite\",\n"+ "            \"db\": \"test\"\n"+ "        }\n"+ "    ]\n"+ "}" @AT@ 4069 @LENGTH@ 732
------------------DEL StringLiteral@@"" @AT@ 4799 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertThat(result.getSort()).isNull() @TO@ MethodInvocation:assertThat(result.getSort().isUnsorted()).isTrue() @AT@ 3236 @LENGTH@ 38
---UPD MethodInvocation@@assertThat(result.getSort()).isNull() @TO@ assertThat(result.getSort().isUnsorted()).isTrue() @AT@ 3236 @LENGTH@ 37
------UPD MethodInvocation@@MethodName:assertThat:[result.getSort()] @TO@ MethodName:assertThat:[result.getSort().isUnsorted()] @AT@ 3236 @LENGTH@ 28
---------UPD MethodInvocation@@result.getSort() @TO@ result.getSort().isUnsorted() @AT@ 3247 @LENGTH@ 16
------------UPD SimpleName@@MethodName:getSort:[] @TO@ MethodName:isUnsorted:[] @AT@ 3254 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:getSort:[] @TO@ MethodInvocation@@result.getSort() @AT@ 3274 @LENGTH@ 16
------UPD SimpleName@@MethodName:isNull:[] @TO@ MethodName:isTrue:[] @AT@ 3265 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]PathSeparator,  @TO@ [static]PathSeparator,  @AT@ 195763 @LENGTH@ 69
---DEL Modifier@@public @AT@ 195763 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @TO@ TypeDeclaration@@[public]MongoQueryCreatorUnitTests,  @AT@ 25688 @LENGTH@ 445
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25688 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25695 @LENGTH@ 4
---INS SimpleName@@MethodName:nearShouldUseMetricDistanceForGeoJsonTypes @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25700 @LENGTH@ 42
---INS VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(27.987901,86.9165379); @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25750 @LENGTH@ 61
------INS SimpleType@@GeoJsonPoint @TO@ VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(27.987901,86.9165379); @AT@ 25750 @LENGTH@ 12
------INS VariableDeclarationFragment@@point=new GeoJsonPoint(27.987901,86.9165379) @TO@ VariableDeclarationStatement@@GeoJsonPoint point=new GeoJsonPoint(27.987901,86.9165379); @AT@ 25763 @LENGTH@ 47
---------INS SimpleName@@point @TO@ VariableDeclarationFragment@@point=new GeoJsonPoint(27.987901,86.9165379) @AT@ 25763 @LENGTH@ 5
---------INS ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @TO@ VariableDeclarationFragment@@point=new GeoJsonPoint(27.987901,86.9165379) @AT@ 25771 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 25771 @LENGTH@ 3
------------INS SimpleType@@GeoJsonPoint @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 25775 @LENGTH@ 12
------------INS NumberLiteral@@27.987901 @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 25788 @LENGTH@ 9
------------INS NumberLiteral@@86.9165379 @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 25799 @LENGTH@ 10
---INS VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",User.class); @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25814 @LENGTH@ 63
------INS SimpleType@@PartTree @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",User.class); @AT@ 25814 @LENGTH@ 8
------INS VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",User.class) @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByLocationNear",User.class); @AT@ 25823 @LENGTH@ 53
---------INS SimpleName@@tree @TO@ VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",User.class) @AT@ 25823 @LENGTH@ 4
---------INS ClassInstanceCreation@@PartTree["findByLocationNear", User.class] @TO@ VariableDeclarationFragment@@tree=new PartTree("findByLocationNear",User.class) @AT@ 25830 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", User.class] @AT@ 25830 @LENGTH@ 3
------------INS SimpleType@@PartTree @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", User.class] @AT@ 25834 @LENGTH@ 8
------------INS StringLiteral@@"findByLocationNear" @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", User.class] @AT@ 25843 @LENGTH@ 20
------------INS TypeLiteral@@User.class @TO@ ClassInstanceCreation@@PartTree["findByLocationNear", User.class] @AT@ 25865 @LENGTH@ 10
---INS VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context); @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 25880 @LENGTH@ 137
------INS SimpleType@@MongoQueryCreator @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context); @AT@ 25880 @LENGTH@ 17
------INS VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context) @TO@ VariableDeclarationStatement@@MongoQueryCreator creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context); @AT@ 25898 @LENGTH@ 118
---------INS SimpleName@@creator @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context) @AT@ 25898 @LENGTH@ 7
---------INS ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @TO@ VariableDeclarationFragment@@creator=new MongoQueryCreator(tree,getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)),context) @AT@ 25908 @LENGTH@ 108
------------INS New@@new @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @AT@ 25908 @LENGTH@ 3
------------INS SimpleType@@MongoQueryCreator @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @AT@ 25912 @LENGTH@ 17
------------INS SimpleName@@tree @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @AT@ 25930 @LENGTH@ 4
------------INS MethodInvocation@@getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)) @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @AT@ 25940 @LENGTH@ 66
---------------INS SimpleName@@MethodName:getAccessor:[converter, point, new Distance(1,Metrics.KILOMETERS)] @TO@ MethodInvocation@@getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)) @AT@ 25940 @LENGTH@ 66
------------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, point, new Distance(1,Metrics.KILOMETERS)] @AT@ 25952 @LENGTH@ 9
------------------INS SimpleName@@point @TO@ SimpleName@@MethodName:getAccessor:[converter, point, new Distance(1,Metrics.KILOMETERS)] @AT@ 25963 @LENGTH@ 5
------------------INS ClassInstanceCreation@@Distance[1, Metrics.KILOMETERS] @TO@ SimpleName@@MethodName:getAccessor:[converter, point, new Distance(1,Metrics.KILOMETERS)] @AT@ 25970 @LENGTH@ 35
---------------------INS New@@new @TO@ ClassInstanceCreation@@Distance[1, Metrics.KILOMETERS] @AT@ 25970 @LENGTH@ 3
---------------------INS SimpleType@@Distance @TO@ ClassInstanceCreation@@Distance[1, Metrics.KILOMETERS] @AT@ 25974 @LENGTH@ 8
---------------------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@Distance[1, Metrics.KILOMETERS] @AT@ 25983 @LENGTH@ 1
---------------------INS QualifiedName@@Metrics.KILOMETERS @TO@ ClassInstanceCreation@@Distance[1, Metrics.KILOMETERS] @AT@ 25986 @LENGTH@ 18
------------------------INS SimpleName@@Metrics @TO@ QualifiedName@@Metrics.KILOMETERS @AT@ 25986 @LENGTH@ 7
------------------------INS SimpleName@@KILOMETERS @TO@ QualifiedName@@Metrics.KILOMETERS @AT@ 25994 @LENGTH@ 10
------------INS SimpleName@@context @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, getAccessor(converter,point,new Distance(1,Metrics.KILOMETERS)), context] @AT@ 26008 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(creator.createQuery()).isEqualTo(query(where("location").nearSphere(point).maxDistance(1000.0D))) @TO@ MethodDeclaration@@public, void, MethodName:nearShouldUseMetricDistanceForGeoJsonTypes,  @AT@ 26021 @LENGTH@ 109
------INS MethodInvocation@@assertThat(creator.createQuery()).isEqualTo(query(where("location").nearSphere(point).maxDistance(1000.0D))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(creator.createQuery()).isEqualTo(query(where("location").nearSphere(point).maxDistance(1000.0D))) @AT@ 26021 @LENGTH@ 108
---------INS MethodInvocation@@MethodName:assertThat:[creator.createQuery()] @TO@ MethodInvocation@@assertThat(creator.createQuery()).isEqualTo(query(where("location").nearSphere(point).maxDistance(1000.0D))) @AT@ 26021 @LENGTH@ 33
------------INS MethodInvocation@@creator.createQuery() @TO@ MethodInvocation@@MethodName:assertThat:[creator.createQuery()] @AT@ 26032 @LENGTH@ 21
---------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.createQuery() @AT@ 26032 @LENGTH@ 7
---------------INS SimpleName@@MethodName:createQuery:[] @TO@ MethodInvocation@@creator.createQuery() @AT@ 26040 @LENGTH@ 13
---------INS SimpleName@@MethodName:isEqualTo:[query(where("location").nearSphere(point).maxDistance(1000.0D))] @TO@ MethodInvocation@@assertThat(creator.createQuery()).isEqualTo(query(where("location").nearSphere(point).maxDistance(1000.0D))) @AT@ 26055 @LENGTH@ 74
------------INS MethodInvocation@@query(where("location").nearSphere(point).maxDistance(1000.0D)) @TO@ SimpleName@@MethodName:isEqualTo:[query(where("location").nearSphere(point).maxDistance(1000.0D))] @AT@ 26065 @LENGTH@ 63
---------------INS SimpleName@@MethodName:query:[where("location").nearSphere(point).maxDistance(1000.0D)] @TO@ MethodInvocation@@query(where("location").nearSphere(point).maxDistance(1000.0D)) @AT@ 26065 @LENGTH@ 63
------------------INS MethodInvocation@@where("location").nearSphere(point).maxDistance(1000.0D) @TO@ SimpleName@@MethodName:query:[where("location").nearSphere(point).maxDistance(1000.0D)] @AT@ 26071 @LENGTH@ 56
---------------------INS MethodInvocation@@MethodName:nearSphere:[point] @TO@ MethodInvocation@@where("location").nearSphere(point).maxDistance(1000.0D) @AT@ 26071 @LENGTH@ 35
------------------------INS SimpleName@@point @TO@ MethodInvocation@@MethodName:nearSphere:[point] @AT@ 26100 @LENGTH@ 5
---------------------INS MethodInvocation@@MethodName:where:["location"] @TO@ MethodInvocation@@where("location").nearSphere(point).maxDistance(1000.0D) @AT@ 26071 @LENGTH@ 17
------------------------INS StringLiteral@@"location" @TO@ MethodInvocation@@MethodName:where:["location"] @AT@ 26077 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:maxDistance:[1000.0D] @TO@ MethodInvocation@@where("location").nearSphere(point).maxDistance(1000.0D) @AT@ 26107 @LENGTH@ 20
------------------------INS NumberLiteral@@1000.0D @TO@ SimpleName@@MethodName:maxDistance:[1000.0D] @AT@ 26119 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]AdvancedVelocityEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedVelocityEndpointBuilder, [EndpointProducerBuilder] @AT@ 4577 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 4584 @LENGTH@ 6


MOV FieldDeclaration@@private, DataSource<String>, [ds=executionEnvironment.readTextFile("src/test/resources/testds.txt")] @TO@ TypeDeclaration@@[public]FlinkProducerTest, CamelTestSupport @AT@ 1817 @LENGTH@ 99


UPD TypeDeclaration@@[public]SecurityContextAccessor,  @TO@ [@Deprecated, public]SecurityContextAccessor,  @AT@ 864 @LENGTH@ 238
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SecurityContextAccessor,  @AT@ 1041 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @TO@ TypeDeclaration@@[public]AggregationUnitTests,  @AT@ 20630 @LENGTH@ 801
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @AT@ 20630 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @AT@ 20637 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldAllowInternal$$thisAnd$$valueReferences @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @AT@ 20642 @LENGTH@ 45
---INS VariableDeclarationStatement@@Document untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT); @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @AT@ 20695 @LENGTH@ 474
------INS SimpleType@@Document @TO@ VariableDeclarationStatement@@Document untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT); @AT@ 20695 @LENGTH@ 8
------INS VariableDeclarationFragment@@untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @TO@ VariableDeclarationStatement@@Document untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT); @AT@ 20704 @LENGTH@ 464
---------INS SimpleName@@untyped @TO@ VariableDeclarationFragment@@untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @AT@ 20704 @LENGTH@ 7
---------INS MethodInvocation@@newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @TO@ VariableDeclarationFragment@@untyped=newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @AT@ 20714 @LENGTH@ 454
------------INS MethodInvocation@@MethodName:newAggregation:[Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))] @TO@ MethodInvocation@@newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @AT@ 20714 @LENGTH@ 410
---------------INS MethodInvocation@@Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))) @TO@ MethodInvocation@@MethodName:newAggregation:[Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))] @AT@ 20737 @LENGTH@ 386
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))) @AT@ 20737 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[(group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")), (project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))] @TO@ MethodInvocation@@Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))) @AT@ 20744 @LENGTH@ 379
---------------------INS ParenthesizedExpression@@(group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")) @TO@ SimpleName@@MethodName:asList:[(group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")), (project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))] @AT@ 20761 @LENGTH@ 101
------------------------INS MethodInvocation@@group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays") @TO@ ParenthesizedExpression@@(group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")) @AT@ 20762 @LENGTH@ 99
---------------------------INS MethodInvocation@@MethodName:push:["data.attributeRecords"] @TO@ MethodInvocation@@group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays") @AT@ 20762 @LENGTH@ 71
------------------------------INS StringLiteral@@"data.attributeRecords" @TO@ MethodInvocation@@MethodName:push:["data.attributeRecords"] @AT@ 20809 @LENGTH@ 23
---------------------------INS MethodInvocation@@MethodName:group:["uid", "data.sourceId"] @TO@ MethodInvocation@@group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays") @AT@ 20762 @LENGTH@ 29
------------------------------INS StringLiteral@@"uid" @TO@ MethodInvocation@@MethodName:group:["uid", "data.sourceId"] @AT@ 20768 @LENGTH@ 5
------------------------------INS StringLiteral@@"data.sourceId" @TO@ MethodInvocation@@MethodName:group:["uid", "data.sourceId"] @AT@ 20775 @LENGTH@ 15
---------------------------INS SimpleName@@MethodName:as:["attributeRecordArrays"] @TO@ MethodInvocation@@group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays") @AT@ 20834 @LENGTH@ 27
------------------------------INS StringLiteral@@"attributeRecordArrays" @TO@ SimpleName@@MethodName:as:["attributeRecordArrays"] @AT@ 20837 @LENGTH@ 23
---------------------INS ParenthesizedExpression@@(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")) @TO@ SimpleName@@MethodName:asList:[(group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")), (project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays"))] @AT@ 20873 @LENGTH@ 241
------------------------INS MethodInvocation@@project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays") @TO@ ParenthesizedExpression@@(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")) @AT@ 20874 @LENGTH@ 239
---------------------------INS MethodInvocation@@MethodName:and:[ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())] @TO@ MethodInvocation@@project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays") @AT@ 20874 @LENGTH@ 199
------------------------------INS MethodInvocation@@ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList()) @TO@ MethodInvocation@@MethodName:and:[ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())] @AT@ 20900 @LENGTH@ 172
---------------------------------INS MethodInvocation@@MethodName:reduce:[ArrayOperators.arrayOf("$$value").concat("$$this")] @TO@ MethodInvocation@@ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList()) @AT@ 20900 @LENGTH@ 120
------------------------------------INS MethodInvocation@@ArrayOperators.arrayOf("$$value").concat("$$this") @TO@ MethodInvocation@@MethodName:reduce:[ArrayOperators.arrayOf("$$value").concat("$$this")] @AT@ 20969 @LENGTH@ 50
---------------------------------------INS MethodInvocation@@MethodName:arrayOf:["$$value"] @TO@ MethodInvocation@@ArrayOperators.arrayOf("$$value").concat("$$this") @AT@ 20969 @LENGTH@ 33
------------------------------------------INS StringLiteral@@"$$value" @TO@ MethodInvocation@@MethodName:arrayOf:["$$value"] @AT@ 20992 @LENGTH@ 9
---------------------------------------INS SimpleName@@Name:ArrayOperators @TO@ MethodInvocation@@ArrayOperators.arrayOf("$$value").concat("$$this") @AT@ 20969 @LENGTH@ 14
---------------------------------------INS SimpleName@@MethodName:concat:["$$this"] @TO@ MethodInvocation@@ArrayOperators.arrayOf("$$value").concat("$$this") @AT@ 21003 @LENGTH@ 16
------------------------------------------INS StringLiteral@@"$$this" @TO@ SimpleName@@MethodName:concat:["$$this"] @AT@ 21010 @LENGTH@ 8
---------------------------------INS MethodInvocation@@MethodName:arrayOf:["attributeRecordArrays"] @TO@ MethodInvocation@@ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList()) @AT@ 20900 @LENGTH@ 47
------------------------------------INS StringLiteral@@"attributeRecordArrays" @TO@ MethodInvocation@@MethodName:arrayOf:["attributeRecordArrays"] @AT@ 20923 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:ArrayOperators @TO@ MethodInvocation@@ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList()) @AT@ 20900 @LENGTH@ 14
---------------------------------INS SimpleName@@MethodName:startingWith:[Collections.emptyList()] @TO@ MethodInvocation@@ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList()) @AT@ 21035 @LENGTH@ 37
------------------------------------INS MethodInvocation@@Collections.emptyList() @TO@ SimpleName@@MethodName:startingWith:[Collections.emptyList()] @AT@ 21048 @LENGTH@ 23
---------------------------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21048 @LENGTH@ 11
---------------------------------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21060 @LENGTH@ 11
---------------------------INS MethodInvocation@@MethodName:project:[] @TO@ MethodInvocation@@project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays") @AT@ 20874 @LENGTH@ 9
---------------------------INS SimpleName@@MethodName:as:["attributeRecordArrays"] @TO@ MethodInvocation@@project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays") @AT@ 21086 @LENGTH@ 27
------------------------------INS StringLiteral@@"attributeRecordArrays" @TO@ SimpleName@@MethodName:as:["attributeRecordArrays"] @AT@ 21089 @LENGTH@ 23
------------INS SimpleName@@MethodName:toDocument:["collection-1", DEFAULT_CONTEXT] @TO@ MethodInvocation@@newAggregation(Arrays.asList((group("uid","data.sourceId").push("data.attributeRecords").as("attributeRecordArrays")),(project().and(ArrayOperators.arrayOf("attributeRecordArrays").reduce(ArrayOperators.arrayOf("$$value").concat("$$this")).startingWith(Collections.emptyList())).as("attributeRecordArrays")))).toDocument("collection-1",DEFAULT_CONTEXT) @AT@ 21125 @LENGTH@ 43
---------------INS StringLiteral@@"collection-1" @TO@ SimpleName@@MethodName:toDocument:["collection-1", DEFAULT_CONTEXT] @AT@ 21136 @LENGTH@ 14
---------------INS SimpleName@@DEFAULT_CONTEXT @TO@ SimpleName@@MethodName:toDocument:["collection-1", DEFAULT_CONTEXT] @AT@ 21152 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(extractPipelineElement(untyped,1,"$project")).isEqualTo(Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")) @TO@ MethodDeclaration@@public, void, MethodName:shouldAllowInternal$$thisAnd$$valueReferences,  @AT@ 21173 @LENGTH@ 255
------INS MethodInvocation@@assertThat(extractPipelineElement(untyped,1,"$project")).isEqualTo(Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(extractPipelineElement(untyped,1,"$project")).isEqualTo(Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")) @AT@ 21173 @LENGTH@ 254
---------INS MethodInvocation@@MethodName:assertThat:[extractPipelineElement(untyped,1,"$project")] @TO@ MethodInvocation@@assertThat(extractPipelineElement(untyped,1,"$project")).isEqualTo(Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")) @AT@ 21173 @LENGTH@ 58
------------INS MethodInvocation@@extractPipelineElement(untyped,1,"$project") @TO@ MethodInvocation@@MethodName:assertThat:[extractPipelineElement(untyped,1,"$project")] @AT@ 21184 @LENGTH@ 46
---------------INS SimpleName@@MethodName:extractPipelineElement:[untyped, 1, "$project"] @TO@ MethodInvocation@@extractPipelineElement(untyped,1,"$project") @AT@ 21184 @LENGTH@ 46
------------------INS SimpleName@@untyped @TO@ SimpleName@@MethodName:extractPipelineElement:[untyped, 1, "$project"] @AT@ 21207 @LENGTH@ 7
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:extractPipelineElement:[untyped, 1, "$project"] @AT@ 21216 @LENGTH@ 1
------------------INS StringLiteral@@"$project" @TO@ SimpleName@@MethodName:extractPipelineElement:[untyped, 1, "$project"] @AT@ 21219 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:[Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")] @TO@ MethodInvocation@@assertThat(extractPipelineElement(untyped,1,"$project")).isEqualTo(Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")) @AT@ 21232 @LENGTH@ 195
------------INS MethodInvocation@@Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}") @TO@ SimpleName@@MethodName:isEqualTo:[Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}")] @AT@ 21242 @LENGTH@ 184
---------------INS SimpleName@@Name:Document @TO@ MethodInvocation@@Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}") @AT@ 21242 @LENGTH@ 8
---------------INS SimpleName@@MethodName:parse:["{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}"] @TO@ MethodInvocation@@Document.parse("{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}") @AT@ 21251 @LENGTH@ 175
------------------INS StringLiteral@@"{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}" @TO@ SimpleName@@MethodName:parse:["{\"attributeRecordArrays\": {\"$reduce\": {\"input\": \"$attributeRecordArrays\", \"initialValue\": [], \"in\": {\"$concatArrays\": [\"$$value\", \"$$this\"]}}}}"] @AT@ 21262 @LENGTH@ 163


UPD ReturnStatement@@ConditionalExpression:(info != null) ? Duration.ofMillis(TimeUnit.MILLISECONDS.convert(info.getValue(),info.getTimeUnit())) : null @TO@ MethodInvocation:Duration.ofMillis(TimeUnit.MILLISECONDS.convert(info.getValue(),info.getTimeUnit())) @AT@ 6235 @LENGTH@ 117
---DEL ConditionalExpression@@(info != null) ? Duration.ofMillis(TimeUnit.MILLISECONDS.convert(info.getValue(),info.getTimeUnit())) : null @AT@ 6242 @LENGTH@ 109
------DEL ParenthesizedExpression@@(info != null) @AT@ 6242 @LENGTH@ 14
---------DEL InfixExpression@@info != null @AT@ 6243 @LENGTH@ 12
------------DEL SimpleName@@info @AT@ 6243 @LENGTH@ 4
------------DEL Operator@@!= @AT@ 6247 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6251 @LENGTH@ 4
------DEL NullLiteral@@null @AT@ 6347 @LENGTH@ 4
---MOV MethodInvocation@@Duration.ofMillis(TimeUnit.MILLISECONDS.convert(info.getValue(),info.getTimeUnit())) @TO@ ReturnStatement@@ConditionalExpression:(info != null) ? Duration.ofMillis(TimeUnit.MILLISECONDS.convert(info.getValue(),info.getTimeUnit())) : null @AT@ 6259 @LENGTH@ 85


UPD TypeDeclaration@@[public]AccessTokenProcessingFilter, OAuthProviderProcessingFilter @TO@ [@Deprecated, public]AccessTokenProcessingFilter, OAuthProviderProcessingFilter @AT@ 1620 @LENGTH@ 3990
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AccessTokenProcessingFilter, OAuthProviderProcessingFilter @AT@ 1841 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1577 @LENGTH@ 1527
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1584 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1589 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(source,"result must not be null.") @TO@ MethodInvocation:Assert.notNull(result,"result must not be null.") @AT@ 10013 @LENGTH@ 51
---UPD MethodInvocation@@Assert.notNull(source,"result must not be null.") @TO@ Assert.notNull(result,"result must not be null.") @AT@ 10013 @LENGTH@ 50
------UPD SimpleName@@MethodName:notNull:[source, "result must not be null."] @TO@ MethodName:notNull:[result, "result must not be null."] @AT@ 10020 @LENGTH@ 43
---------UPD SimpleName@@source @TO@ result @AT@ 10028 @LENGTH@ 6


UPD IfStatement@@if (isChannelTransacted()) {  resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(getConnectionFactory(),true);  channel=resourceHolder.getChannel();  if (channel == null) {    ConnectionFactoryUtils.releaseResources(resourceHolder);    throw new IllegalStateException("Resource holder returned a null channel");  }} else {  connection=getConnectionFactory().createConnection();  if (connection == null) {    throw new IllegalStateException("Connection factory returned a null connection");  }  try {    channel=connection.createChannel(false);    if (channel == null) {      throw new IllegalStateException("Connection returned a null channel");    }    if (!getConnectionFactory().isPublisherConfirms()) {      RabbitUtils.setPhysicalCloseRequired(channel,true);    }    this.dedicatedChannels.set(channel);  } catch (  RuntimeException e) {    RabbitUtils.closeConnection(connection);    throw e;  }} @TO@ if (isChannelTransacted()) {  resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(connectionFactory,true,this.usePublisherConnection);  channel=resourceHolder.getChannel();  if (channel == null) {    ConnectionFactoryUtils.releaseResources(resourceHolder);    throw new IllegalStateException("Resource holder returned a null channel");  }} else {  if (this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null) {    connectionFactory=connectionFactory.getPublisherConnectionFactory();  }  connection=connectionFactory.createConnection();  if (connection == null) {    throw new IllegalStateException("Connection factory returned a null connection");  }  try {    channel=connection.createChannel(false);    if (channel == null) {      throw new IllegalStateException("Connection returned a null channel");    }    if (!connectionFactory.isPublisherConfirms()) {      RabbitUtils.setPhysicalCloseRequired(channel,true);    }    this.dedicatedChannels.set(channel);  } catch (  RuntimeException e) {    RabbitUtils.closeConnection(connection);    throw e;  }} @AT@ 80448 @LENGTH@ 995
---UPD Block@@ThenBody:{  resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(getConnectionFactory(),true);  channel=resourceHolder.getChannel();  if (channel == null) {    ConnectionFactoryUtils.releaseResources(resourceHolder);    throw new IllegalStateException("Resource holder returned a null channel");  }} @TO@ ThenBody:{  resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(connectionFactory,true,this.usePublisherConnection);  channel=resourceHolder.getChannel();  if (channel == null) {    ConnectionFactoryUtils.releaseResources(resourceHolder);    throw new IllegalStateException("Resource holder returned a null channel");  }} @AT@ 80475 @LENGTH@ 324
------UPD ExpressionStatement@@Assignment:resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(getConnectionFactory(),true) @TO@ Assignment:resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(connectionFactory,true,this.usePublisherConnection) @AT@ 80480 @LENGTH@ 101
---------UPD Assignment@@resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(getConnectionFactory(),true) @TO@ resourceHolder=ConnectionFactoryUtils.getTransactionalResourceHolder(connectionFactory,true,this.usePublisherConnection) @AT@ 80480 @LENGTH@ 100
------------UPD MethodInvocation@@ConnectionFactoryUtils.getTransactionalResourceHolder(getConnectionFactory(),true) @TO@ ConnectionFactoryUtils.getTransactionalResourceHolder(connectionFactory,true,this.usePublisherConnection) @AT@ 80497 @LENGTH@ 83
---------------UPD SimpleName@@MethodName:getTransactionalResourceHolder:[getConnectionFactory(), true] @TO@ MethodName:getTransactionalResourceHolder:[connectionFactory, true, this.usePublisherConnection] @AT@ 80520 @LENGTH@ 60
------------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 80551 @LENGTH@ 22
------------------INS SimpleName@@connectionFactory @TO@ SimpleName@@MethodName:getTransactionalResourceHolder:[getConnectionFactory(), true] @AT@ 80615 @LENGTH@ 17
------------------INS FieldAccess@@this.usePublisherConnection @TO@ SimpleName@@MethodName:getTransactionalResourceHolder:[getConnectionFactory(), true] @AT@ 80645 @LENGTH@ 27
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.usePublisherConnection @AT@ 80645 @LENGTH@ 4
---------------------INS SimpleName@@usePublisherConnection @TO@ FieldAccess@@this.usePublisherConnection @AT@ 80650 @LENGTH@ 22
---UPD Block@@ElseBody:{  connection=getConnectionFactory().createConnection();  if (connection == null) {    throw new IllegalStateException("Connection factory returned a null connection");  }  try {    channel=connection.createChannel(false);    if (channel == null) {      throw new IllegalStateException("Connection returned a null channel");    }    if (!getConnectionFactory().isPublisherConfirms()) {      RabbitUtils.setPhysicalCloseRequired(channel,true);    }    this.dedicatedChannels.set(channel);  } catch (  RuntimeException e) {    RabbitUtils.closeConnection(connection);    throw e;  }} @TO@ ElseBody:{  if (this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null) {    connectionFactory=connectionFactory.getPublisherConnectionFactory();  }  connection=connectionFactory.createConnection();  if (connection == null) {    throw new IllegalStateException("Connection factory returned a null connection");  }  try {    channel=connection.createChannel(false);    if (channel == null) {      throw new IllegalStateException("Connection returned a null channel");    }    if (!connectionFactory.isPublisherConfirms()) {      RabbitUtils.setPhysicalCloseRequired(channel,true);    }    this.dedicatedChannels.set(channel);  } catch (  RuntimeException e) {    RabbitUtils.closeConnection(connection);    throw e;  }} @AT@ 80807 @LENGTH@ 636
------UPD ExpressionStatement@@Assignment:connection=getConnectionFactory().createConnection() @TO@ Assignment:connection=connectionFactory.createConnection() @AT@ 80812 @LENGTH@ 55
---------UPD Assignment@@connection=getConnectionFactory().createConnection() @TO@ connection=connectionFactory.createConnection() @AT@ 80812 @LENGTH@ 54
------------UPD MethodInvocation@@getConnectionFactory().createConnection() @TO@ connectionFactory.createConnection() @AT@ 80825 @LENGTH@ 41
---------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 80825 @LENGTH@ 22
---------------INS SimpleName@@Name:connectionFactory @TO@ MethodInvocation@@getConnectionFactory().createConnection() @AT@ 81097 @LENGTH@ 17
------INS IfStatement@@if (this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null) {  connectionFactory=connectionFactory.getPublisherConnectionFactory();} @TO@ Block@@ElseBody:{  connection=getConnectionFactory().createConnection();  if (connection == null) {    throw new IllegalStateException("Connection factory returned a null connection");  }  try {    channel=connection.createChannel(false);    if (channel == null) {      throw new IllegalStateException("Connection returned a null channel");    }    if (!getConnectionFactory().isPublisherConfirms()) {      RabbitUtils.setPhysicalCloseRequired(channel,true);    }    this.dedicatedChannels.set(channel);  } catch (  RuntimeException e) {    RabbitUtils.closeConnection(connection);    throw e;  }} @AT@ 80905 @LENGTH@ 175
---------INS InfixExpression@@this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null @TO@ IfStatement@@if (this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null) {  connectionFactory=connectionFactory.getPublisherConnectionFactory();} @AT@ 80909 @LENGTH@ 88
------------INS FieldAccess@@this.usePublisherConnection @TO@ InfixExpression@@this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null @AT@ 80909 @LENGTH@ 27
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.usePublisherConnection @AT@ 80909 @LENGTH@ 4
---------------INS SimpleName@@usePublisherConnection @TO@ FieldAccess@@this.usePublisherConnection @AT@ 80914 @LENGTH@ 22
------------INS Operator@@&& @TO@ InfixExpression@@this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null @AT@ 80936 @LENGTH@ 2
------------INS InfixExpression@@connectionFactory.getPublisherConnectionFactory() != null @TO@ InfixExpression@@this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null @AT@ 80940 @LENGTH@ 57
---------------INS MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @TO@ InfixExpression@@connectionFactory.getPublisherConnectionFactory() != null @AT@ 80940 @LENGTH@ 49
------------------INS SimpleName@@Name:connectionFactory @TO@ MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @AT@ 80940 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @AT@ 80958 @LENGTH@ 31
---------------INS Operator@@!= @TO@ InfixExpression@@connectionFactory.getPublisherConnectionFactory() != null @AT@ 80989 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@connectionFactory.getPublisherConnectionFactory() != null @AT@ 80993 @LENGTH@ 4
---------INS Block@@ThenBody:{  connectionFactory=connectionFactory.getPublisherConnectionFactory();} @TO@ IfStatement@@if (this.usePublisherConnection && connectionFactory.getPublisherConnectionFactory() != null) {  connectionFactory=connectionFactory.getPublisherConnectionFactory();} @AT@ 80999 @LENGTH@ 81
------------INS ExpressionStatement@@Assignment:connectionFactory=connectionFactory.getPublisherConnectionFactory() @TO@ Block@@ThenBody:{  connectionFactory=connectionFactory.getPublisherConnectionFactory();} @AT@ 81005 @LENGTH@ 70
---------------INS Assignment@@connectionFactory=connectionFactory.getPublisherConnectionFactory() @TO@ ExpressionStatement@@Assignment:connectionFactory=connectionFactory.getPublisherConnectionFactory() @AT@ 81005 @LENGTH@ 69
------------------INS SimpleName@@connectionFactory @TO@ Assignment@@connectionFactory=connectionFactory.getPublisherConnectionFactory() @AT@ 81005 @LENGTH@ 17
------------------INS Operator@@= @TO@ Assignment@@connectionFactory=connectionFactory.getPublisherConnectionFactory() @AT@ 81022 @LENGTH@ 1
------------------INS MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @TO@ Assignment@@connectionFactory=connectionFactory.getPublisherConnectionFactory() @AT@ 81025 @LENGTH@ 49
---------------------INS SimpleName@@Name:connectionFactory @TO@ MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @AT@ 81025 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@connectionFactory.getPublisherConnectionFactory() @AT@ 81043 @LENGTH@ 31
------UPD TryStatement@@try {  channel=connection.createChannel(false);  if (channel == null) {    throw new IllegalStateException("Connection returned a null channel");  }  if (!getConnectionFactory().isPublisherConfirms()) {    RabbitUtils.setPhysicalCloseRequired(channel,true);  }  this.dedicatedChannels.set(channel);} catch (RuntimeException e) {  RabbitUtils.closeConnection(connection);  throw e;} @TO@ try {  channel=connection.createChannel(false);  if (channel == null) {    throw new IllegalStateException("Connection returned a null channel");  }  if (!connectionFactory.isPublisherConfirms()) {    RabbitUtils.setPhysicalCloseRequired(channel,true);  }  this.dedicatedChannels.set(channel);} catch (RuntimeException e) {  RabbitUtils.closeConnection(connection);  throw e;} @AT@ 81016 @LENGTH@ 423
---------UPD IfStatement@@if (!getConnectionFactory().isPublisherConfirms()) {  RabbitUtils.setPhysicalCloseRequired(channel,true);} @TO@ if (!connectionFactory.isPublisherConfirms()) {  RabbitUtils.setPhysicalCloseRequired(channel,true);} @AT@ 81182 @LENGTH@ 116
------------UPD PrefixExpression@@!getConnectionFactory().isPublisherConfirms() @TO@ !connectionFactory.isPublisherConfirms() @AT@ 81186 @LENGTH@ 45
---------------UPD MethodInvocation@@getConnectionFactory().isPublisherConfirms() @TO@ connectionFactory.isPublisherConfirms() @AT@ 81187 @LENGTH@ 44
------------------DEL MethodInvocation@@MethodName:getConnectionFactory:[] @AT@ 81187 @LENGTH@ 22
------------------INS SimpleName@@Name:connectionFactory @TO@ MethodInvocation@@getConnectionFactory().isPublisherConfirms() @AT@ 81454 @LENGTH@ 17


INS MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @TO@ TypeDeclaration@@[public]Access,  @AT@ 11557 @LENGTH@ 161
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 11557 @LENGTH@ 6
---INS SimpleType@@AuthorizePayloadsSpec @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 11564 @LENGTH@ 21
---INS SimpleName@@MethodName:hasAnyAuthority @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 11586 @LENGTH@ 15
---INS SingleVariableDeclaration@@String... authorities @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 11602 @LENGTH@ 21
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... authorities @AT@ 11602 @LENGTH@ 6
------INS SimpleName@@authorities @TO@ SingleVariableDeclaration@@String... authorities @AT@ 11612 @LENGTH@ 11
---INS ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAnyAuthority, String... authorities,  @AT@ 11631 @LENGTH@ 82
------INS MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @TO@ ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @AT@ 11638 @LENGTH@ 74
---------INS SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)] @TO@ MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)) @AT@ 11638 @LENGTH@ 74
------------INS MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @TO@ SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities)] @AT@ 11645 @LENGTH@ 66
---------------INS SimpleName@@Name:AuthorityReactiveAuthorizationManager @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @AT@ 11645 @LENGTH@ 37
---------------INS SimpleName@@MethodName:hasAnyAuthority:[authorities] @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAnyAuthority(authorities) @AT@ 11683 @LENGTH@ 28
------------------INS SimpleName@@authorities @TO@ SimpleName@@MethodName:hasAnyAuthority:[authorities] @AT@ 11699 @LENGTH@ 11


INS FieldDeclaration@@public, Map<String,User>, [map] @TO@ TypeDeclaration@@[@Document, public]User,  @AT@ 1642 @LENGTH@ 49
---INS Modifier@@public @TO@ FieldDeclaration@@public, Map<String,User>, [map] @AT@ 1642 @LENGTH@ 6
---INS ParameterizedType@@Map<String,User> @TO@ FieldDeclaration@@public, Map<String,User>, [map] @AT@ 1669 @LENGTH@ 17
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,User> @AT@ 1669 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,User> @AT@ 1673 @LENGTH@ 6
------INS SimpleType@@User @TO@ ParameterizedType@@Map<String,User> @AT@ 1681 @LENGTH@ 4
---INS VariableDeclarationFragment@@map @TO@ FieldDeclaration@@public, Map<String,User>, [map] @AT@ 1687 @LENGTH@ 3
------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map @AT@ 1687 @LENGTH@ 3


UPD MethodDeclaration@@default, SwiftEndpointBuilder, MethodName:swift, String path,  @TO@ default, SwiftEndpointBuilder, MethodName:openstackSwift, String path,  @AT@ 7395 @LENGTH@ 372
---UPD SimpleName@@MethodName:swift @TO@ MethodName:openstackSwift @AT@ 7424 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 2054 @LENGTH@ 129
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 2054 @LENGTH@ 128
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2153 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2164 @LENGTH@ 17


UPD TypeDeclaration@@[public]SecurityUtils,  @TO@ [public, final]SecurityUtils,  @AT@ 942 @LENGTH@ 780
---INS Modifier@@final @TO@ TypeDeclaration@@[public]SecurityUtils,  @AT@ 948 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:resultProcessor.processResult(new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()),OptionalUnwrappingConverter.INSTANCE) @TO@ MethodInvocation:resultProcessor.processResult(new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()),OptionalUnwrappingConverter.INSTANCE) @AT@ 2063 @LENGTH@ 235
---UPD MethodInvocation@@resultProcessor.processResult(new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()),OptionalUnwrappingConverter.INSTANCE) @TO@ resultProcessor.processResult(new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()),OptionalUnwrappingConverter.INSTANCE) @AT@ 2070 @LENGTH@ 227
------UPD SimpleName@@MethodName:processResult:[new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()), OptionalUnwrappingConverter.INSTANCE] @TO@ MethodName:processResult:[new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()), OptionalUnwrappingConverter.INSTANCE] @AT@ 2086 @LENGTH@ 211
---------UPD MethodInvocation@@new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()) @TO@ new Neo4jQueryExecution.ReactiveQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()) @AT@ 2100 @LENGTH@ 155
------------UPD SimpleName@@MethodName:execute:[prepareQuery(resultProcessor,parameterAccessor), queryMethod.isCollectionQuery()] @TO@ MethodName:execute:[prepareQuery(resultProcessor,parameterAccessor), queryMethod.isCollectionLikeQuery()] @AT@ 2165 @LENGTH@ 90
---------------UPD MethodInvocation@@queryMethod.isCollectionQuery() @TO@ queryMethod.isCollectionLikeQuery() @AT@ 2223 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:isCollectionQuery:[] @TO@ MethodName:isCollectionLikeQuery:[] @AT@ 2235 @LENGTH@ 19


UPD EnumDeclaration@@[public]OAuthConsumerParameter,  @TO@ [@Deprecated, public]OAuthConsumerParameter,  @AT@ 722 @LENGTH@ 634
---INS MarkerAnnotation@@@Deprecated @TO@ EnumDeclaration@@[public]OAuthConsumerParameter,  @AT@ 943 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]LdifEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LdifEndpointBuilder, [EndpointProducerBuilder] @AT@ 1424 @LENGTH@ 752
---DEL Modifier@@static @AT@ 1431 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ErrorHandler, [ResponseErrorHandler] @TO@ [@Deprecated, public]OAuth2ErrorHandler, [ResponseErrorHandler] @AT@ 1785 @LENGTH@ 5304
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ErrorHandler, [ResponseErrorHandler] @AT@ 1966 @LENGTH@ 11


UPD TypeDeclaration@@[public]ClientAuthenticationHandler,  @TO@ [@Deprecated, public]ClientAuthenticationHandler,  @AT@ 957 @LENGTH@ 428
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientAuthenticationHandler,  @AT@ 1134 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(refreshTokenGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(refreshTokenGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 9583 @LENGTH@ 293
---UPD MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(refreshTokenGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(refreshTokenGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 9583 @LENGTH@ 292
------UPD SimpleName@@MethodName:hasMessage:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error"] @TO@ MethodName:hasMessageContaining:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response"] @AT@ 9736 @LENGTH@ 139
---------UPD StringLiteral@@"[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error" @TO@ "[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response" @AT@ 9747 @LENGTH@ 127


UPD TypeDeclaration@@[public]RequestEnhancer,  @TO@ [@Deprecated, public]RequestEnhancer,  @AT@ 851 @LENGTH@ 183
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RequestEnhancer,  @AT@ 1037 @LENGTH@ 11


UPD TypeDeclaration@@[public]ProxyCreator,  @TO@ [@Deprecated, public]ProxyCreator,  @AT@ 918 @LENGTH@ 1116
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProxyCreator,  @AT@ 1096 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2RequestAuthenticator,  @TO@ [@Deprecated, public]OAuth2RequestAuthenticator,  @AT@ 844 @LENGTH@ 172
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RequestAuthenticator,  @AT@ 1022 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @TO@ TypeDeclaration@@[public]ReactiveMethodSecurityConfigurationTests,  @AT@ 3507 @LENGTH@ 668
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3507 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3514 @LENGTH@ 4
---INS SimpleName@@MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3519 @LENGTH@ 69
---INS ExpressionStatement@@MethodInvocation:this.spring.register(SubclassConfig.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3595 @LENGTH@ 54
------INS MethodInvocation@@this.spring.register(SubclassConfig.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(SubclassConfig.class).autowire() @AT@ 3595 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:register:[SubclassConfig.class] @TO@ MethodInvocation@@this.spring.register(SubclassConfig.class).autowire() @AT@ 3595 @LENGTH@ 42
------------INS TypeLiteral@@SubclassConfig.class @TO@ MethodInvocation@@MethodName:register:[SubclassConfig.class] @AT@ 3616 @LENGTH@ 20
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(SubclassConfig.class).autowire() @AT@ 3595 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 3595 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 3600 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(SubclassConfig.class).autowire() @AT@ 3638 @LENGTH@ 10
---INS VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC"); @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3653 @LENGTH@ 119
------INS SimpleType@@TestingAuthenticationToken @TO@ VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC"); @AT@ 3653 @LENGTH@ 26
------INS VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC") @TO@ VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC"); @AT@ 3680 @LENGTH@ 91
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC") @AT@ 3680 @LENGTH@ 14
---------INS ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @TO@ VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("principal","credential","ROLE_ABC") @AT@ 3697 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @AT@ 3697 @LENGTH@ 3
------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @AT@ 3701 @LENGTH@ 26
------------INS StringLiteral@@"principal" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @AT@ 3733 @LENGTH@ 11
------------INS StringLiteral@@"credential" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @AT@ 3746 @LENGTH@ 12
------------INS StringLiteral@@"ROLE_ABC" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["principal", "credential", "ROLE_ABC"] @AT@ 3760 @LENGTH@ 10
---INS VariableDeclarationStatement@@MockMethodInvocation methodInvocation=mock(MockMethodInvocation.class); @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3775 @LENGTH@ 73
------INS SimpleType@@MockMethodInvocation @TO@ VariableDeclarationStatement@@MockMethodInvocation methodInvocation=mock(MockMethodInvocation.class); @AT@ 3775 @LENGTH@ 20
------INS VariableDeclarationFragment@@methodInvocation=mock(MockMethodInvocation.class) @TO@ VariableDeclarationStatement@@MockMethodInvocation methodInvocation=mock(MockMethodInvocation.class); @AT@ 3796 @LENGTH@ 51
---------INS SimpleName@@methodInvocation @TO@ VariableDeclarationFragment@@methodInvocation=mock(MockMethodInvocation.class) @AT@ 3796 @LENGTH@ 16
---------INS MethodInvocation@@mock(MockMethodInvocation.class) @TO@ VariableDeclarationFragment@@methodInvocation=mock(MockMethodInvocation.class) @AT@ 3815 @LENGTH@ 32
------------INS SimpleName@@MethodName:mock:[MockMethodInvocation.class] @TO@ MethodInvocation@@mock(MockMethodInvocation.class) @AT@ 3815 @LENGTH@ 32
---------------INS TypeLiteral@@MockMethodInvocation.class @TO@ SimpleName@@MethodName:mock:[MockMethodInvocation.class] @AT@ 3820 @LENGTH@ 26
---INS VariableDeclarationStatement@@EvaluationContext context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation); @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3852 @LENGTH@ 128
------INS SimpleType@@EvaluationContext @TO@ VariableDeclarationStatement@@EvaluationContext context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation); @AT@ 3852 @LENGTH@ 17
------INS VariableDeclarationFragment@@context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @TO@ VariableDeclarationStatement@@EvaluationContext context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation); @AT@ 3870 @LENGTH@ 109
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @AT@ 3870 @LENGTH@ 7
---------INS MethodInvocation@@this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @TO@ VariableDeclarationFragment@@context=this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @AT@ 3880 @LENGTH@ 99
------------INS FieldAccess@@this.methodSecurityExpressionHandler @TO@ MethodInvocation@@this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @AT@ 3880 @LENGTH@ 36
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.methodSecurityExpressionHandler @AT@ 3880 @LENGTH@ 4
---------------INS SimpleName@@methodSecurityExpressionHandler @TO@ FieldAccess@@this.methodSecurityExpressionHandler @AT@ 3885 @LENGTH@ 31
------------INS SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @TO@ MethodInvocation@@this.methodSecurityExpressionHandler.createEvaluationContext(authentication,methodInvocation) @AT@ 3922 @LENGTH@ 57
---------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @AT@ 3946 @LENGTH@ 14
---------------INS SimpleName@@methodInvocation @TO@ SimpleName@@MethodName:createEvaluationContext:[authentication, methodInvocation] @AT@ 3962 @LENGTH@ 16
---INS VariableDeclarationStatement@@SecurityExpressionRoot root=(SecurityExpressionRoot)context.getRootObject().getValue(); @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 3983 @LENGTH@ 95
------INS SimpleType@@SecurityExpressionRoot @TO@ VariableDeclarationStatement@@SecurityExpressionRoot root=(SecurityExpressionRoot)context.getRootObject().getValue(); @AT@ 3983 @LENGTH@ 22
------INS VariableDeclarationFragment@@root=(SecurityExpressionRoot)context.getRootObject().getValue() @TO@ VariableDeclarationStatement@@SecurityExpressionRoot root=(SecurityExpressionRoot)context.getRootObject().getValue(); @AT@ 4006 @LENGTH@ 71
---------INS SimpleName@@root @TO@ VariableDeclarationFragment@@root=(SecurityExpressionRoot)context.getRootObject().getValue() @AT@ 4006 @LENGTH@ 4
---------INS CastExpression@@(SecurityExpressionRoot)context.getRootObject().getValue() @TO@ VariableDeclarationFragment@@root=(SecurityExpressionRoot)context.getRootObject().getValue() @AT@ 4013 @LENGTH@ 64
------------INS SimpleType@@SecurityExpressionRoot @TO@ CastExpression@@(SecurityExpressionRoot)context.getRootObject().getValue() @AT@ 4014 @LENGTH@ 22
------------INS MethodInvocation@@context.getRootObject().getValue() @TO@ CastExpression@@(SecurityExpressionRoot)context.getRootObject().getValue() @AT@ 4038 @LENGTH@ 39
---------------INS MethodInvocation@@MethodName:getRootObject:[] @TO@ MethodInvocation@@context.getRootObject().getValue() @AT@ 4038 @LENGTH@ 23
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRootObject().getValue() @AT@ 4038 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.getRootObject().getValue() @AT@ 4067 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(root.hasRole("ROLE_ABC")).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 4082 @LENGTH@ 46
------INS MethodInvocation@@assertThat(root.hasRole("ROLE_ABC")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(root.hasRole("ROLE_ABC")).isTrue() @AT@ 4082 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:assertThat:[root.hasRole("ROLE_ABC")] @TO@ MethodInvocation@@assertThat(root.hasRole("ROLE_ABC")).isTrue() @AT@ 4082 @LENGTH@ 36
------------INS MethodInvocation@@root.hasRole("ROLE_ABC") @TO@ MethodInvocation@@MethodName:assertThat:[root.hasRole("ROLE_ABC")] @AT@ 4093 @LENGTH@ 24
---------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.hasRole("ROLE_ABC") @AT@ 4093 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasRole:["ROLE_ABC"] @TO@ MethodInvocation@@root.hasRole("ROLE_ABC") @AT@ 4098 @LENGTH@ 19
------------------INS StringLiteral@@"ROLE_ABC" @TO@ SimpleName@@MethodName:hasRole:["ROLE_ABC"] @AT@ 4106 @LENGTH@ 10
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(root.hasRole("ROLE_ABC")).isTrue() @AT@ 4119 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(root.hasRole("ABC")).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @AT@ 4131 @LENGTH@ 41
------INS MethodInvocation@@assertThat(root.hasRole("ABC")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(root.hasRole("ABC")).isTrue() @AT@ 4131 @LENGTH@ 40
---------INS MethodInvocation@@MethodName:assertThat:[root.hasRole("ABC")] @TO@ MethodInvocation@@assertThat(root.hasRole("ABC")).isTrue() @AT@ 4131 @LENGTH@ 31
------------INS MethodInvocation@@root.hasRole("ABC") @TO@ MethodInvocation@@MethodName:assertThat:[root.hasRole("ABC")] @AT@ 4142 @LENGTH@ 19
---------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.hasRole("ABC") @AT@ 4142 @LENGTH@ 4
---------------INS SimpleName@@MethodName:hasRole:["ABC"] @TO@ MethodInvocation@@root.hasRole("ABC") @AT@ 4147 @LENGTH@ 14
------------------INS StringLiteral@@"ABC" @TO@ SimpleName@@MethodName:hasRole:["ABC"] @AT@ 4155 @LENGTH@ 5
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(root.hasRole("ABC")).isTrue() @AT@ 4163 @LENGTH@ 8


UPD TypeDeclaration@@[public]ScopeVoter, [AccessDecisionVoter<Object>] @TO@ [@Deprecated, public]ScopeVoter, [AccessDecisionVoter<Object>] @AT@ 2782 @LENGTH@ 3017
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ScopeVoter, [AccessDecisionVoter<Object>] @AT@ 2959 @LENGTH@ 11


UPD MethodDeclaration@@private, static, void, MethodName:setMemUsage, MapJoinOperator mapJoinOp, Task<? extends Serializable> task, ParseContext parseContext,  @TO@ private, static, void, MethodName:setMemUsage, MapJoinOperator mapJoinOp, Task<?> task, ParseContext parseContext,  @AT@ 18458 @LENGTH@ 939
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 18517 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 18517 @LENGTH@ 28


UPD MethodDeclaration@@private, boolean, MethodName:taskContainsDependentMapWork, Task<? extends Serializable> task, MapWork work, SemanticException,  @TO@ private, boolean, MethodName:taskContainsDependentMapWork, Task<?> task, MapWork work, SemanticException,  @AT@ 6036 @LENGTH@ 573
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 6081 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6081 @LENGTH@ 28
---UPD EnhancedForStatement@@for (Task<? extends Serializable> childTask : task.getChildTasks()) {  if (childTask != null && childTask instanceof SparkTask && childTask.getMapWork().contains(work)) {    return true;  } else   if (taskContainsDependentMapWork(childTask,work)) {    return true;  }} @TO@ for (Task<?> childTask : task.getChildTasks()) {  if (childTask != null && childTask instanceof SparkTask && childTask.getMapWork().contains(work)) {    return true;  } else   if (taskContainsDependentMapWork(childTask,work)) {    return true;  }} @AT@ 6290 @LENGTH@ 297
------UPD SingleVariableDeclaration@@Task<? extends Serializable> childTask @TO@ Task<?> childTask @AT@ 6295 @LENGTH@ 38
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6295 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 12766 @LENGTH@ 75
---DEL Modifier@@public @AT@ 12766 @LENGTH@ 6


UPD TypeDeclaration@@[public]HdfsKerberosConfigurationFactory,  @TO@ [public, final]HdfsKerberosConfigurationFactory,  @AT@ 209 @LENGTH@ 947
---INS Modifier@@final @TO@ TypeDeclaration@@[public]HdfsKerberosConfigurationFactory,  @AT@ 216 @LENGTH@ 5


UPD MethodDeclaration@@default, GlanceEndpointBuilder, MethodName:glance, String path,  @TO@ default, GlanceEndpointBuilder, MethodName:openstackGlance, String path,  @AT@ 7046 @LENGTH@ 380
---UPD SimpleName@@MethodName:glance @TO@ MethodName:openstackGlance @AT@ 7076 @LENGTH@ 6


UPD IfStatement@@if (this.authorizedClientRepository != null && this.clientRegistrationRepository != null) {  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @TO@ if (this.authorizedClientRepository != null && this.clientRegistrationRepository != null) {  ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build();  DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository());  authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider);  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager));} @AT@ 2892 @LENGTH@ 242
---UPD Block@@ThenBody:{  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @TO@ ThenBody:{  ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build();  DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository());  authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider);  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager));} @AT@ 2982 @LENGTH@ 152
------DEL ExpressionStatement@@MethodInvocation:configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository())) @AT@ 2988 @LENGTH@ 141
---------DEL MethodInvocation@@configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository())) @AT@ 2988 @LENGTH@ 140
------------DEL SimpleName@@MethodName:addCustomResolver:[new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository())] @AT@ 2999 @LENGTH@ 129
---------------DEL ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[this.clientRegistrationRepository, getAuthorizedClientRepository()] @AT@ 3017 @LENGTH@ 110
------INS VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ Block@@ThenBody:{  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @AT@ 3280 @LENGTH@ 227
---------INS SimpleType@@ReactiveOAuth2AuthorizedClientProvider @TO@ VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 3280 @LENGTH@ 38
---------INS VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @AT@ 3319 @LENGTH@ 187
------------INS SimpleName@@authorizedClientProvider @TO@ VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3319 @LENGTH@ 24
------------INS MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 154
---------------MOV SimpleName@@Name:configurer @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2988 @LENGTH@ 10
---------------INS MethodInvocation@@MethodName:clientCredentials:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 137
---------------INS MethodInvocation@@MethodName:refreshToken:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 108
---------------INS MethodInvocation@@MethodName:authorizationCode:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 84
---------------INS MethodInvocation@@MethodName:builder:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 55
---------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3499 @LENGTH@ 7
------INS VariableDeclarationStatement@@DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()); @TO@ Block@@ThenBody:{  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @AT@ 3512 @LENGTH@ 191
---------INS SimpleType@@DefaultServerOAuth2AuthorizedClientManager @TO@ VariableDeclarationStatement@@DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()); @AT@ 3512 @LENGTH@ 42
---------INS VariableDeclarationFragment@@authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()) @TO@ VariableDeclarationStatement@@DefaultServerOAuth2AuthorizedClientManager authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()); @AT@ 3555 @LENGTH@ 147
------------INS SimpleName@@authorizedClientManager @TO@ VariableDeclarationFragment@@authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()) @AT@ 3555 @LENGTH@ 23
------------INS ClassInstanceCreation@@DefaultServerOAuth2AuthorizedClientManager[this.clientRegistrationRepository, getAuthorizedClientRepository()] @TO@ VariableDeclarationFragment@@authorizedClientManager=new DefaultServerOAuth2AuthorizedClientManager(this.clientRegistrationRepository,getAuthorizedClientRepository()) @AT@ 3581 @LENGTH@ 121
---------------MOV New@@new @TO@ ClassInstanceCreation@@DefaultServerOAuth2AuthorizedClientManager[this.clientRegistrationRepository, getAuthorizedClientRepository()] @AT@ 3017 @LENGTH@ 3
---------------MOV SimpleType@@OAuth2AuthorizedClientArgumentResolver @TO@ ClassInstanceCreation@@DefaultServerOAuth2AuthorizedClientManager[this.clientRegistrationRepository, getAuthorizedClientRepository()] @AT@ 3021 @LENGTH@ 38
---------------MOV FieldAccess@@this.clientRegistrationRepository @TO@ ClassInstanceCreation@@DefaultServerOAuth2AuthorizedClientManager[this.clientRegistrationRepository, getAuthorizedClientRepository()] @AT@ 3060 @LENGTH@ 33
---------------MOV MethodInvocation@@MethodName:getAuthorizedClientRepository:[] @TO@ ClassInstanceCreation@@DefaultServerOAuth2AuthorizedClientManager[this.clientRegistrationRepository, getAuthorizedClientRepository()] @AT@ 3095 @LENGTH@ 31
------INS ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ Block@@ThenBody:{  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @AT@ 3708 @LENGTH@ 78
---------INS MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 3708 @LENGTH@ 77
------------INS SimpleName@@Name:authorizedClientManager @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 3708 @LENGTH@ 23
------------INS SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @TO@ MethodInvocation@@authorizedClientManager.setAuthorizedClientProvider(authorizedClientProvider) @AT@ 3732 @LENGTH@ 53
---------------INS SimpleName@@authorizedClientProvider @TO@ SimpleName@@MethodName:setAuthorizedClientProvider:[authorizedClientProvider] @AT@ 3760 @LENGTH@ 24
------INS ExpressionStatement@@MethodInvocation:configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @TO@ Block@@ThenBody:{  configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(this.clientRegistrationRepository,getAuthorizedClientRepository()));} @AT@ 3791 @LENGTH@ 98
---------INS MethodInvocation@@configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @TO@ ExpressionStatement@@MethodInvocation:configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @AT@ 3791 @LENGTH@ 97
------------INS SimpleName@@Name:configurer @TO@ MethodInvocation@@configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @AT@ 3791 @LENGTH@ 10
------------INS SimpleName@@MethodName:addCustomResolver:[new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)] @TO@ MethodInvocation@@configurer.addCustomResolver(new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)) @AT@ 3802 @LENGTH@ 86
---------------INS ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @TO@ SimpleName@@MethodName:addCustomResolver:[new OAuth2AuthorizedClientArgumentResolver(authorizedClientManager)] @AT@ 3820 @LENGTH@ 67
------------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 3820 @LENGTH@ 3
------------------INS SimpleType@@OAuth2AuthorizedClientArgumentResolver @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 3824 @LENGTH@ 38
------------------INS SimpleName@@authorizedClientManager @TO@ ClassInstanceCreation@@OAuth2AuthorizedClientArgumentResolver[authorizedClientManager] @AT@ 3863 @LENGTH@ 23


UPD MethodDeclaration@@public, MethodInterceptor, MethodName:methodSecurityInterceptor, Exception,  @TO@ public, MethodInterceptor, MethodName:methodSecurityInterceptor, MethodSecurityMetadataSource methodSecurityMetadataSource,  @AT@ 6318 @LENGTH@ 244
---INS SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @TO@ MethodDeclaration@@public, MethodInterceptor, MethodName:methodSecurityInterceptor, Exception,  @AT@ 6369 @LENGTH@ 57
------INS SimpleType@@MethodSecurityMetadataSource @TO@ SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @AT@ 6369 @LENGTH@ 28
------INS SimpleName@@methodSecurityMetadataSource @TO@ SingleVariableDeclaration@@MethodSecurityMetadataSource methodSecurityMetadataSource @AT@ 6398 @LENGTH@ 28
---DEL SimpleType@@Exception @AT@ 6378 @LENGTH@ 9
---UPD VariableDeclarationStatement@@MethodInterceptor interceptor=super.methodSecurityInterceptor(); @TO@ MethodInterceptor interceptor=super.methodSecurityInterceptor(methodSecurityMetadataSource); @AT@ 6393 @LENGTH@ 66
------UPD VariableDeclarationFragment@@interceptor=super.methodSecurityInterceptor() @TO@ interceptor=super.methodSecurityInterceptor(methodSecurityMetadataSource) @AT@ 6411 @LENGTH@ 47
---------UPD SuperMethodInvocation@@super.methodSecurityInterceptor() @TO@ super.methodSecurityInterceptor(methodSecurityMetadataSource) @AT@ 6425 @LENGTH@ 33
------------UPD SimpleName@@MethodName:methodSecurityInterceptor:[] @TO@ MethodName:methodSecurityInterceptor:[methodSecurityMetadataSource] @AT@ 6431 @LENGTH@ 25
------------INS SimpleName@@methodSecurityMetadataSource @TO@ SuperMethodInvocation@@super.methodSecurityInterceptor() @AT@ 6497 @LENGTH@ 28


UPD TypeDeclaration@@[public]OAuthSecurityContextImpl, [OAuthSecurityContext] @TO@ [@Deprecated, public]OAuthSecurityContextImpl, [OAuthSecurityContext] @AT@ 109 @LENGTH@ 500
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSecurityContextImpl, [OAuthSecurityContext] @AT@ 330 @LENGTH@ 11


UPD IfStatement@@if (configurer instanceof GeneratedPropertyConfigurer) {  GeneratedPropertyConfigurer gen=(GeneratedPropertyConfigurer)configurer;  for (Iterator<Map.Entry<String,Object>> iter=properties.entrySet().iterator(); iter.hasNext(); ) {    Map.Entry<String,Object> entry=iter.next();    String key=entry.getKey();    Object value=entry.getValue();    boolean valid=true;    if (nesting) {      valid=key.indexOf('.') == -1;    }    if (valid && removeParameter && gen.configure(camelContext,target,key,value,ignoreCase)) {      iter.remove();      rc=true;    }  }  ;} @TO@ if (configurer instanceof GeneratedPropertyConfigurer) {  GeneratedPropertyConfigurer gen=(GeneratedPropertyConfigurer)configurer;  for (Iterator<Map.Entry<String,Object>> iter=properties.entrySet().iterator(); iter.hasNext(); ) {    Map.Entry<String,Object> entry=iter.next();    String key=entry.getKey();    Object value=entry.getValue();    boolean valid=true;    if (nesting) {      valid=key.indexOf('.') == -1;    }    if (valid && removeParameter && gen.configure(camelContext,target,key,value,ignoreCase)) {      iter.remove();      rc=true;    }  }} @AT@ 22175 @LENGTH@ 877
---UPD Block@@ThenBody:{  GeneratedPropertyConfigurer gen=(GeneratedPropertyConfigurer)configurer;  for (Iterator<Map.Entry<String,Object>> iter=properties.entrySet().iterator(); iter.hasNext(); ) {    Map.Entry<String,Object> entry=iter.next();    String key=entry.getKey();    Object value=entry.getValue();    boolean valid=true;    if (nesting) {      valid=key.indexOf('.') == -1;    }    if (valid && removeParameter && gen.configure(camelContext,target,key,value,ignoreCase)) {      iter.remove();      rc=true;    }  }  ;} @TO@ ThenBody:{  GeneratedPropertyConfigurer gen=(GeneratedPropertyConfigurer)configurer;  for (Iterator<Map.Entry<String,Object>> iter=properties.entrySet().iterator(); iter.hasNext(); ) {    Map.Entry<String,Object> entry=iter.next();    String key=entry.getKey();    Object value=entry.getValue();    boolean valid=true;    if (nesting) {      valid=key.indexOf('.') == -1;    }    if (valid && removeParameter && gen.configure(camelContext,target,key,value,ignoreCase)) {      iter.remove();      rc=true;    }  }} @AT@ 22230 @LENGTH@ 822


UPD TypeDeclaration@@[@Metadata(label="transformation"), @XmlType(name="dataFormatTransformer"), @XmlAccessorType(XmlAccessType.FIELD), public]DataFormatTransformerDefinition, TransformerDefinition @TO@ [@Metadata(label="dataformat,transformation"), @XmlType(name="dataFormatTransformer"), @XmlAccessorType(XmlAccessType.FIELD), public]DataFormatTransformerDefinition, TransformerDefinition @AT@ 3918 @LENGTH@ 4574
---UPD NormalAnnotation@@@Metadata(label="transformation") @TO@ @Metadata(label="dataformat,transformation") @AT@ 3918 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 7065 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 7065 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 7065 @LENGTH@ 56
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 7078 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 7089 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]LdapOperation,  @TO@ [static]LdapOperation,  @AT@ 5421 @LENGTH@ 120
---DEL Modifier@@public @AT@ 5421 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]XChangeMethod,  @TO@ [static]XChangeMethod,  @AT@ 7070 @LENGTH@ 158
---DEL Modifier@@public @AT@ 7070 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]EndpointType,  @TO@ [static]EndpointType,  @AT@ 9053 @LENGTH@ 71
---DEL Modifier@@public @AT@ 9053 @LENGTH@ 6


UPD TypeDeclaration@@[public]RemoteTokenServices, [ResourceServerTokenServices] @TO@ [@Deprecated, public]RemoteTokenServices, [ResourceServerTokenServices] @AT@ 2022 @LENGTH@ 3528
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RemoteTokenServices, [ResourceServerTokenServices] @AT@ 2200 @LENGTH@ 11


UPD TypeDeclaration@@[@SpringBootConfiguration, @EnableAutoConfiguration, @ComponentScan(basePackages="sample"), public, static]SpringBootApplicationTestConfig,  @TO@ [@SpringBootConfiguration, @EnableAutoConfiguration, public, static]SpringBootApplicationTestConfig,  @AT@ 5844 @LENGTH@ 150
---DEL NormalAnnotation@@@ComponentScan(basePackages="sample") @AT@ 5896 @LENGTH@ 39


UPD TypeDeclaration@@[public, final]JaxbOAuth2ExceptionMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2Exception,OAuth2Exception> @TO@ [@Deprecated, public, final]JaxbOAuth2ExceptionMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2Exception,OAuth2Exception> @AT@ 748 @LENGTH@ 706
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]JaxbOAuth2ExceptionMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2Exception,OAuth2Exception> @AT@ 934 @LENGTH@ 11


UPD TypeDeclaration@@[public, abstract]OAuth2Utils,  @TO@ [@Deprecated, public, abstract]OAuth2Utils,  @AT@ 984 @LENGTH@ 3070
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]OAuth2Utils,  @AT@ 1162 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1984 @LENGTH@ 99
---UPD MethodInvocation@@assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1984 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:["Wrong status: " + response.getHeaders(), HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:["Wrong status: " + response.getHeaders(), HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 1984 @LENGTH@ 98
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 2039 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 2050 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2794 @LENGTH@ 549
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2865 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2865 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2870 @LENGTH@ 28


INS IfStatement@@if (config == null) {  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @TO@ MethodDeclaration@@public, Producer, MethodName:createProducer, CamelContext camelContext, String host, String verb, String basePath, String uriTemplate, String queryParameters, String consumes, String produces, RestConfiguration configuration, Map<String,Object> parameters, Exception,  @AT@ 22966 @LENGTH@ 325
---INS InfixExpression@@config == null @TO@ IfStatement@@if (config == null) {  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @AT@ 22970 @LENGTH@ 14
------INS SimpleName@@config @TO@ InfixExpression@@config == null @AT@ 22970 @LENGTH@ 6
------INS Operator@@== @TO@ InfixExpression@@config == null @AT@ 22976 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@config == null @AT@ 22980 @LENGTH@ 4
---INS Block@@ThenBody:{  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @TO@ IfStatement@@if (config == null) {  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @AT@ 22986 @LENGTH@ 305
------MOV IfStatement@@if (config == null) {  config=camelContext.getRestConfiguration("http",true);} @TO@ Block@@ThenBody:{  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @AT@ 22966 @LENGTH@ 101
------INS ExpressionStatement@@Assignment:config=camelContext.getRestConfiguration("http",false) @TO@ Block@@ThenBody:{  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @AT@ 23000 @LENGTH@ 58
---------INS Assignment@@config=camelContext.getRestConfiguration("http",false) @TO@ ExpressionStatement@@Assignment:config=camelContext.getRestConfiguration("http",false) @AT@ 23000 @LENGTH@ 57
------------INS SimpleName@@config @TO@ Assignment@@config=camelContext.getRestConfiguration("http",false) @AT@ 23000 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@config=camelContext.getRestConfiguration("http",false) @AT@ 23006 @LENGTH@ 1
------------INS MethodInvocation@@camelContext.getRestConfiguration("http",false) @TO@ Assignment@@config=camelContext.getRestConfiguration("http",false) @AT@ 23009 @LENGTH@ 48
---------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getRestConfiguration("http",false) @AT@ 23009 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getRestConfiguration:["http", false] @TO@ MethodInvocation@@camelContext.getRestConfiguration("http",false) @AT@ 23022 @LENGTH@ 35
------------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:getRestConfiguration:["http", false] @AT@ 23043 @LENGTH@ 6
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getRestConfiguration:["http", false] @AT@ 23051 @LENGTH@ 5
------INS IfStatement@@if (config == null) {  camelContext.getRestConfiguration();} @TO@ Block@@ThenBody:{  config=camelContext.getRestConfiguration("http",false);  if (config == null) {    camelContext.getRestConfiguration();  }  if (config == null) {    config=camelContext.getRestConfiguration("http",true);  }} @AT@ 23071 @LENGTH@ 88
---------INS InfixExpression@@config == null @TO@ IfStatement@@if (config == null) {  camelContext.getRestConfiguration();} @AT@ 23075 @LENGTH@ 14
------------INS SimpleName@@config @TO@ InfixExpression@@config == null @AT@ 23075 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@config == null @AT@ 23081 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@config == null @AT@ 23085 @LENGTH@ 4
---------INS Block@@ThenBody:{  camelContext.getRestConfiguration();} @TO@ IfStatement@@if (config == null) {  camelContext.getRestConfiguration();} @AT@ 23091 @LENGTH@ 68
------------INS ExpressionStatement@@MethodInvocation:camelContext.getRestConfiguration() @TO@ Block@@ThenBody:{  camelContext.getRestConfiguration();} @AT@ 23109 @LENGTH@ 36
---------------INS MethodInvocation@@camelContext.getRestConfiguration() @TO@ ExpressionStatement@@MethodInvocation:camelContext.getRestConfiguration() @AT@ 23109 @LENGTH@ 35
------------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getRestConfiguration() @AT@ 23109 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getRestConfiguration:[] @TO@ MethodInvocation@@camelContext.getRestConfiguration() @AT@ 23122 @LENGTH@ 22


UPD VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build(); @TO@ ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build(); @AT@ 12792 @LENGTH@ 317
---UPD VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @TO@ authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build() @AT@ 12831 @LENGTH@ 277
------UPD MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @TO@ ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build() @AT@ 12862 @LENGTH@ 246
---------INS MethodInvocation@@MethodName:password:[configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @AT@ 12880 @LENGTH@ 312
------------INS LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @TO@ MethodInvocation@@MethodName:password:[configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)] @AT@ 13128 @LENGTH@ 63
---------------INS VariableDeclarationFragment@@configurer @TO@ LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 13128 @LENGTH@ 10
------------------INS SimpleName@@configurer @TO@ VariableDeclarationFragment@@configurer @AT@ 13128 @LENGTH@ 10
---------------INS MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @TO@ LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 13142 @LENGTH@ 49
------------------INS SimpleName@@Name:configurer @TO@ MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 13142 @LENGTH@ 10
------------------INS SimpleName@@MethodName:clockSkew:[this.accessTokenExpiresSkew] @TO@ MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 13153 @LENGTH@ 38
---------------------INS FieldAccess@@this.accessTokenExpiresSkew @TO@ SimpleName@@MethodName:clockSkew:[this.accessTokenExpiresSkew] @AT@ 13163 @LENGTH@ 27
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessTokenExpiresSkew @AT@ 13163 @LENGTH@ 4
------------------------INS SimpleName@@accessTokenExpiresSkew @TO@ FieldAccess@@this.accessTokenExpiresSkew @AT@ 13168 @LENGTH@ 22


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]TokenRequest, BaseRequest @TO@ [@SuppressWarnings("serial"), @Deprecated, public]TokenRequest, BaseRequest @AT@ 861 @LENGTH@ 2245
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]TokenRequest, BaseRequest @AT@ 1066 @LENGTH@ 11


UPD MethodDeclaration@@default, JGroupsEndpointBuilder, MethodName:jGroups, String path,  @TO@ default, JGroupsEndpointBuilder, MethodName:jgroups, String path,  @AT@ 18496 @LENGTH@ 378
---UPD SimpleName@@MethodName:jGroups @TO@ MethodName:jgroups @AT@ 18527 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:HadoopJobExecHelper, JobConf job, LogHelper console, Task<? extends Serializable> task, HadoopJobExecHook hookCallBack,  @TO@ public, voidMethodName:HadoopJobExecHelper, JobConf job, LogHelper console, Task<?> task, HadoopJobExecHook hookCallBack,  @AT@ 4856 @LENGTH@ 590
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 4921 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4921 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:mock.whenAnyExchangeReceived((e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @TO@ MethodInvocation:mock.whenAnyExchangeReceived(e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @AT@ 2054 @LENGTH@ 125
---UPD MethodInvocation@@mock.whenAnyExchangeReceived((e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @TO@ mock.whenAnyExchangeReceived(e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @AT@ 2054 @LENGTH@ 124
------UPD SimpleName@@MethodName:whenAnyExchangeReceived:[(e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))] @TO@ MethodName:whenAnyExchangeReceived:[e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))] @AT@ 2059 @LENGTH@ 119
---------UPD LambdaExpression@@(e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class))) @TO@ e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class))) @AT@ 2083 @LENGTH@ 94


UPD TypeDeclaration@@[public]ClientBeanDefinitionParser, AbstractBeanDefinitionParser @TO@ [@Deprecated, public]ClientBeanDefinitionParser, AbstractBeanDefinitionParser @AT@ 1312 @LENGTH@ 603
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientBeanDefinitionParser, AbstractBeanDefinitionParser @AT@ 1489 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @TO@ MethodInvocation:this.spring.register(CustomMetadataSourceBeanProxyEnabledConfig.class).autowire() @AT@ 17229 @LENGTH@ 75
---UPD MethodInvocation@@this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @TO@ this.spring.register(CustomMetadataSourceBeanProxyEnabledConfig.class).autowire() @AT@ 17229 @LENGTH@ 74
------UPD MethodInvocation@@MethodName:register:[CustomMetadataSourceProxylessConfig.class] @TO@ MethodName:register:[CustomMetadataSourceBeanProxyEnabledConfig.class] @AT@ 17229 @LENGTH@ 63
---------UPD TypeLiteral@@CustomMetadataSourceProxylessConfig.class @TO@ CustomMetadataSourceBeanProxyEnabledConfig.class @AT@ 17250 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:getMockEndpoint("mock:value").whenAnyExchangeReceived((e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @TO@ MethodInvocation:getMockEndpoint("mock:value").whenAnyExchangeReceived(e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @AT@ 1202 @LENGTH@ 154
---UPD MethodInvocation@@getMockEndpoint("mock:value").whenAnyExchangeReceived((e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @TO@ getMockEndpoint("mock:value").whenAnyExchangeReceived(e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))) @AT@ 1202 @LENGTH@ 153
------UPD SimpleName@@MethodName:whenAnyExchangeReceived:[(e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))] @TO@ MethodName:whenAnyExchangeReceived:[e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class)))] @AT@ 1232 @LENGTH@ 123
---------UPD LambdaExpression@@(e) -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class))) @TO@ e -> e.getMessage().setBody(generateValue(e.getMessage().getBody(String.class))) @AT@ 1256 @LENGTH@ 98


UPD EnumDeclaration@@[public, static]SessionAcknowledgementType,  @TO@ [static]SessionAcknowledgementType,  @AT@ 81728 @LENGTH@ 140
---DEL Modifier@@public @AT@ 81728 @LENGTH@ 6


UPD MethodDeclaration@@public, static, void, MethodName:makeChild, Task<?> ret, Task<? extends Serializable>... tasklist,  @TO@ public, static, void, MethodName:makeChild, Task<?> ret, Task<?>... tasklist,  @AT@ 7007 @LENGTH@ 459
---UPD SingleVariableDeclaration@@Task<? extends Serializable>... tasklist @TO@ Task<?>... tasklist @AT@ 7056 @LENGTH@ 40
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7056 @LENGTH@ 28
---UPD EnhancedForStatement@@for (Task<? extends Serializable> tsk : tasklist) {  List<Task<? extends Serializable>> children=tsk.getChildTasks();  if (children == null) {    children=new ArrayList<Task<? extends Serializable>>();  }  children.add(ret);  tsk.setChildTasks(children);} @TO@ for (Task<?> tsk : tasklist) {  List<Task<?>> children=tsk.getChildTasks();  if (children == null) {    children=new ArrayList<Task<?>>();  }  children.add(ret);  tsk.setChildTasks(children);} @AT@ 7168 @LENGTH@ 294
------UPD SingleVariableDeclaration@@Task<? extends Serializable> tsk @TO@ Task<?> tsk @AT@ 7173 @LENGTH@ 32
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7173 @LENGTH@ 28
------UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> children=tsk.getChildTasks(); @TO@ List<Task<?>> children=tsk.getChildTasks(); @AT@ 7226 @LENGTH@ 66
---------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 7226 @LENGTH@ 34
------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7231 @LENGTH@ 28
------UPD IfStatement@@if (children == null) {  children=new ArrayList<Task<? extends Serializable>>();} @TO@ if (children == null) {  children=new ArrayList<Task<?>>();} @AT@ 7299 @LENGTH@ 97
---------UPD Block@@ThenBody:{  children=new ArrayList<Task<? extends Serializable>>();} @TO@ ThenBody:{  children=new ArrayList<Task<?>>();} @AT@ 7321 @LENGTH@ 75
------------UPD ExpressionStatement@@Assignment:children=new ArrayList<Task<? extends Serializable>>() @TO@ Assignment:children=new ArrayList<Task<?>>() @AT@ 7331 @LENGTH@ 57
---------------UPD Assignment@@children=new ArrayList<Task<? extends Serializable>>() @TO@ children=new ArrayList<Task<?>>() @AT@ 7331 @LENGTH@ 56
------------------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 7342 @LENGTH@ 45
---------------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 7346 @LENGTH@ 39
------------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7356 @LENGTH@ 28


UPD EnhancedForStatement@@for (File dir : others) {  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-box".equals(dir.getName())|| "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    if (target.exists()) {      File src=new File(dir,"src");      boolean active=src.isDirectory() && src.exists();      if (active) {        findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());      }    }  }} @TO@ for (File dir : others) {  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-box".equals(dir.getName())|| "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName());  boolean special3="camel-debezium".equals(dir.getName());  if (special || special2 || special3) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    if (target.exists()) {      File src=new File(dir,"src");      boolean active=src.isDirectory() && src.exists();      if (active) {        findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());      }    }  }} @AT@ 34865 @LENGTH@ 1730
---UPD VariableDeclarationStatement@@boolean special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName())|| "camel-debezium".equals(dir.getName()); @TO@ boolean special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName()); @AT@ 35305 @LENGTH@ 513
------UPD VariableDeclarationFragment@@special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName()) @AT@ 35313 @LENGTH@ 504
---------UPD InfixExpression@@"camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ "camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName()) @AT@ 35324 @LENGTH@ 493
---INS VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @TO@ EnhancedForStatement@@for (File dir : others) {  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-box".equals(dir.getName())|| "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-linkedin".equals(dir.getName()) || "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-fhir".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    if (target.exists()) {      File src=new File(dir,"src");      boolean active=src.isDirectory() && src.exists();      if (active) {        findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());      }    }  }} @AT@ 35773 @LENGTH@ 58
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 35773 @LENGTH@ 7
------INS VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 35781 @LENGTH@ 49
---------MOV MethodInvocation@@"camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 35779 @LENGTH@ 38
---------INS SimpleName@@special3 @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 35781 @LENGTH@ 8
---UPD IfStatement@@if (special || special2) {  continue;} @TO@ if (special || special2 || special3) {  continue;} @AT@ 35839 @LENGTH@ 82
------UPD InfixExpression@@special || special2 @TO@ special || special2 || special3 @AT@ 35843 @LENGTH@ 19
---------INS SimpleName@@special3 @TO@ InfixExpression@@special || special2 @AT@ 35879 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodInvocation:Thread.sleep(1000) @AT@ 3530 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(200) @TO@ Thread.sleep(1000) @AT@ 3530 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[1000] @AT@ 3537 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 1000 @AT@ 3543 @LENGTH@ 3


UPD TryStatement@@try {  answer.loadCoreTypeConverters();} catch (Exception e) {  throw new RuntimeCamelException("Error loading CoreTypeConverter due: " + e.getMessage(),e);} @TO@ try {  answer.init();  answer.loadCoreTypeConverters();} catch (Exception e) {  throw new RuntimeCamelException("Error loading CoreTypeConverter due: " + e.getMessage(),e);} @AT@ 8936 @LENGTH@ 386
---INS ExpressionStatement@@MethodInvocation:answer.init() @TO@ TryStatement@@try {  answer.loadCoreTypeConverters();} catch (Exception e) {  throw new RuntimeCamelException("Error loading CoreTypeConverter due: " + e.getMessage(),e);} @AT@ 9065 @LENGTH@ 14
------INS MethodInvocation@@answer.init() @TO@ ExpressionStatement@@MethodInvocation:answer.init() @AT@ 9065 @LENGTH@ 13
---------INS SimpleName@@Name:answer @TO@ MethodInvocation@@answer.init() @AT@ 9065 @LENGTH@ 6
---------INS SimpleName@@MethodName:init:[] @TO@ MethodInvocation@@answer.init() @AT@ 9072 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:resolveArgumentShouldReturnNoPageable, Exception,  @TO@ public, void, MethodName:resolveArgumentShouldReturnUnpagedPageable, Exception,  @AT@ 3303 @LENGTH@ 213
---UPD SimpleName@@MethodName:resolveArgumentShouldReturnNoPageable @TO@ MethodName:resolveArgumentShouldReturnUnpagedPageable @AT@ 3315 @LENGTH@ 37
---INS ExpressionStatement@@MethodInvocation:when(delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)).thenReturn(Pageable.unpaged()) @TO@ MethodDeclaration@@public, void, MethodName:resolveArgumentShouldReturnNoPageable, Exception,  @AT@ 3422 @LENGTH@ 128
------INS MethodInvocation@@when(delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)).thenReturn(Pageable.unpaged()) @TO@ ExpressionStatement@@MethodInvocation:when(delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)).thenReturn(Pageable.unpaged()) @AT@ 3422 @LENGTH@ 127
---------INS MethodInvocation@@MethodName:when:[delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)] @TO@ MethodInvocation@@when(delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)).thenReturn(Pageable.unpaged()) @AT@ 3422 @LENGTH@ 91
------------INS MethodInvocation@@delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory) @TO@ MethodInvocation@@MethodName:when:[delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)] @AT@ 3427 @LENGTH@ 85
---------------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory) @AT@ 3427 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolveArgument:[parameter, modelAndViewContainer, webRequest, binderFactory] @TO@ MethodInvocation@@delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory) @AT@ 3436 @LENGTH@ 76
------------------INS SimpleName@@parameter @TO@ SimpleName@@MethodName:resolveArgument:[parameter, modelAndViewContainer, webRequest, binderFactory] @AT@ 3452 @LENGTH@ 9
------------------INS SimpleName@@modelAndViewContainer @TO@ SimpleName@@MethodName:resolveArgument:[parameter, modelAndViewContainer, webRequest, binderFactory] @AT@ 3463 @LENGTH@ 21
------------------INS SimpleName@@webRequest @TO@ SimpleName@@MethodName:resolveArgument:[parameter, modelAndViewContainer, webRequest, binderFactory] @AT@ 3486 @LENGTH@ 10
------------------INS SimpleName@@binderFactory @TO@ SimpleName@@MethodName:resolveArgument:[parameter, modelAndViewContainer, webRequest, binderFactory] @AT@ 3498 @LENGTH@ 13
---------INS SimpleName@@MethodName:thenReturn:[Pageable.unpaged()] @TO@ MethodInvocation@@when(delegate.resolveArgument(parameter,modelAndViewContainer,webRequest,binderFactory)).thenReturn(Pageable.unpaged()) @AT@ 3519 @LENGTH@ 30
------------INS MethodInvocation@@Pageable.unpaged() @TO@ SimpleName@@MethodName:thenReturn:[Pageable.unpaged()] @AT@ 3530 @LENGTH@ 18
---------------INS SimpleName@@Name:Pageable @TO@ MethodInvocation@@Pageable.unpaged() @AT@ 3530 @LENGTH@ 8
---------------INS SimpleName@@MethodName:unpaged:[] @TO@ MethodInvocation@@Pageable.unpaged() @AT@ 3539 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:assertThat(result).isNull() @TO@ MethodInvocation:assertThat(result.isUnpaged()).isTrue() @AT@ 3485 @LENGTH@ 28
------UPD MethodInvocation@@assertThat(result).isNull() @TO@ assertThat(result.isUnpaged()).isTrue() @AT@ 3485 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodName:assertThat:[result.isUnpaged()] @AT@ 3485 @LENGTH@ 18
------------UPD SimpleName@@result @TO@ Name:result @AT@ 3496 @LENGTH@ 6
------------INS MethodInvocation@@result.isUnpaged() @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 3673 @LENGTH@ 18
---------------MOV SimpleName@@result @TO@ MethodInvocation@@result.isUnpaged() @AT@ 3496 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isUnpaged:[] @TO@ MethodInvocation@@result.isUnpaged() @AT@ 3680 @LENGTH@ 11
---------UPD SimpleName@@MethodName:isNull:[] @TO@ MethodName:isTrue:[] @AT@ 3504 @LENGTH@ 8


UPD TypeDeclaration@@[public]RestTemplateHolder,  @TO@ [@Deprecated, public]RestTemplateHolder,  @AT@ 851 @LENGTH@ 129
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RestTemplateHolder,  @AT@ 1028 @LENGTH@ 11


UPD TypeDeclaration@@[public]CipherMetadata, [AlgorithmMetadata] @TO@ [@Deprecated, public]CipherMetadata, [AlgorithmMetadata] @AT@ 756 @LENGTH@ 124
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CipherMetadata, [AlgorithmMetadata] @AT@ 934 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:loadConfigWhenProxyingDisabledAndSubclassThenServerHttpSecurityExists,  @TO@ public, void, MethodName:loadConfigWhenProxyingEnabledAndSubclassThenServerHttpSecurityExists,  @AT@ 1725 @LENGTH@ 381
---UPD SimpleName@@MethodName:loadConfigWhenProxyingDisabledAndSubclassThenServerHttpSecurityExists @TO@ MethodName:loadConfigWhenProxyingEnabledAndSubclassThenServerHttpSecurityExists @AT@ 1737 @LENGTH@ 69


UPD TypeDeclaration@@[public, static]QuartzEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]QuartzEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1434 @LENGTH@ 9477
---DEL Modifier@@static @AT@ 1441 @LENGTH@ 6


UPD TypeDeclaration@@[public]InMemoryClientDetailsService, [ClientDetailsService] @TO@ [@Deprecated, public]InMemoryClientDetailsService, [ClientDetailsService] @AT@ 1105 @LENGTH@ 662
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryClientDetailsService, [ClientDetailsService] @AT@ 1283 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2AuthenticationProcessingFilter, [Filter, InitializingBean] @TO@ [@Deprecated, public]OAuth2AuthenticationProcessingFilter, [Filter, InitializingBean] @AT@ 2680 @LENGTH@ 4981
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AuthenticationProcessingFilter, [Filter, InitializingBean] @AT@ 2857 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedIgniteSetEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIgniteSetEndpointBuilder, [EndpointProducerBuilder] @AT@ 4130 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 4137 @LENGTH@ 6


UPD IfStatement@@if (this.listenerContainer != null) {  this.listenerContainer.stop(callback);} @TO@ if (this.listenerContainer != null) {  this.listenerContainer.stop(callback);} else {  callback.run();} @AT@ 16449 @LENGTH@ 83
---INS Block@@ElseBody:{  callback.run();} @TO@ IfStatement@@if (this.listenerContainer != null) {  this.listenerContainer.stop(callback);} @AT@ 16540 @LENGTH@ 24
------INS ExpressionStatement@@MethodInvocation:callback.run() @TO@ Block@@ElseBody:{  callback.run();} @AT@ 16545 @LENGTH@ 15
---------INS MethodInvocation@@callback.run() @TO@ ExpressionStatement@@MethodInvocation:callback.run() @AT@ 16545 @LENGTH@ 14
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.run() @AT@ 16545 @LENGTH@ 8
------------INS SimpleName@@MethodName:run:[] @TO@ MethodInvocation@@callback.run() @AT@ 16554 @LENGTH@ 5


UPD MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @TO@ private, boolean, MethodName:shouldRethrow, AmqpException ex,  @AT@ 37192 @LENGTH@ 1224
---UPD Modifier@@protected @TO@ private @AT@ 37192 @LENGTH@ 9
---UPD SimpleName@@MethodName:useDirectReplyTo @TO@ MethodName:shouldRethrow @AT@ 37210 @LENGTH@ 16
---DEL IfStatement@@if (this.replyAddress == null || Address.AMQ_RABBITMQ_REPLY_TO.equals(this.replyAddress)) {  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    Throwable cause=ex;    while (cause != null && !(cause instanceof ShutdownSignalException)) {      cause=cause.getCause();    }    if (cause != null && RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }    if (logger.isDebugEnabled()) {      logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());    }    throw ex;  }} @AT@ 37440 @LENGTH@ 957
------DEL Block@@ThenBody:{  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    Throwable cause=ex;    while (cause != null && !(cause instanceof ShutdownSignalException)) {      cause=cause.getCause();    }    if (cause != null && RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }    if (logger.isDebugEnabled()) {      logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());    }    throw ex;  }} @AT@ 37530 @LENGTH@ 867
---------DEL TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause != null && RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37535 @LENGTH@ 858
------------DEL CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause != null && RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37696 @LENGTH@ 697
---------------DEL ThrowStatement@@SimpleName:ex @AT@ 38379 @LENGTH@ 9
------------------DEL SimpleName@@ex @AT@ 38385 @LENGTH@ 2
---MOV VariableDeclarationStatement@@Throwable cause=ex; @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37752 @LENGTH@ 21
---MOV WhileStatement@@while (cause != null && !(cause instanceof ShutdownSignalException)) {  cause=cause.getCause();} @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37778 @LENGTH@ 107
---INS SingleVariableDeclaration@@AmqpException ex @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37858 @LENGTH@ 16
------INS SimpleType@@AmqpException @TO@ SingleVariableDeclaration@@AmqpException ex @AT@ 37858 @LENGTH@ 13
------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@AmqpException ex @AT@ 37872 @LENGTH@ 2
---MOV IfStatement@@if (cause != null && RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37890 @LENGTH@ 359
---MOV IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 38254 @LENGTH@ 120
---UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 38400 @LENGTH@ 13
------UPD BooleanLiteral@@false @TO@ true @AT@ 38407 @LENGTH@ 5


UPD FieldDeclaration@@PayloadSocketAcceptorInterceptor, [interceptor] @TO@ SecuritySocketAcceptorInterceptor, [interceptor] @AT@ 2557 @LENGTH@ 45
---UPD SimpleType@@PayloadSocketAcceptorInterceptor @TO@ SecuritySocketAcceptorInterceptor @AT@ 2557 @LENGTH@ 32


UPD MethodDeclaration@@default, RedisEndpointBuilder, MethodName:redis, String path,  @TO@ default, RedisEndpointBuilder, MethodName:springRedis, String path,  @AT@ 31750 @LENGTH@ 369
---UPD SimpleName@@MethodName:redis @TO@ MethodName:springRedis @AT@ 31779 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedTwitterStreamingEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedTwitterStreamingEndpointBuilder, [EndpointConsumerBuilder] @AT@ 6575 @LENGTH@ 2166
---DEL Modifier@@static @AT@ 6582 @LENGTH@ 6


UPD MethodDeclaration@@default, MSKEndpointBuilder, MethodName:mSK, String path,  @TO@ default, MSKEndpointBuilder, MethodName:awsMsk, String path,  @AT@ 4932 @LENGTH@ 350
---UPD SimpleName@@MethodName:mSK @TO@ MethodName:awsMsk @AT@ 4959 @LENGTH@ 3


UPD TypeDeclaration@@[public]UserAuthorizationSuccessfulAuthenticationHandler, SimpleUrlAuthenticationSuccessHandler @TO@ [@Deprecated, public]UserAuthorizationSuccessfulAuthenticationHandler, SimpleUrlAuthenticationSuccessHandler @AT@ 1755 @LENGTH@ 3597
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UserAuthorizationSuccessfulAuthenticationHandler, SimpleUrlAuthenticationSuccessHandler @AT@ 1976 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]Action,  @TO@ [static]Action,  @AT@ 46985 @LENGTH@ 155
---DEL Modifier@@public @AT@ 46985 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]ReactiveStreamsBackpressureStrategy,  @TO@ [static]ReactiveStreamsBackpressureStrategy,  @AT@ 23347 @LENGTH@ 94
---DEL Modifier@@public @AT@ 23347 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42812 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42812 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @TO@ MethodInvocation:jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.remoting3, org.jboss.as.controller\n"),"MANIFEST.MF") @AT@ 2476 @LENGTH@ 101
---UPD MethodInvocation@@jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller\n"),"MANIFEST.MF") @TO@ jar.addAsManifestResource(new StringAsset("Dependencies: org.jboss.remoting3, org.jboss.as.controller\n"),"MANIFEST.MF") @AT@ 2476 @LENGTH@ 100
------UPD SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller\n"), "MANIFEST.MF"] @TO@ MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.remoting3, org.jboss.as.controller\n"), "MANIFEST.MF"] @AT@ 2480 @LENGTH@ 96
---------UPD ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller\n"] @TO@ StringAsset["Dependencies: org.jboss.remoting3, org.jboss.as.controller\n"] @AT@ 2502 @LENGTH@ 58
------------UPD StringLiteral@@"Dependencies: org.jboss.as.controller\n" @TO@ "Dependencies: org.jboss.remoting3, org.jboss.as.controller\n" @AT@ 2518 @LENGTH@ 41


UPD TypeDeclaration@@[public]ServicePortFunction,  @TO@ [public, final]ServicePortFunction,  @AT@ 1376 @LENGTH@ 918
---INS Modifier@@final @TO@ TypeDeclaration@@[public]ServicePortFunction,  @AT@ 1383 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedSpringBatchEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSpringBatchEndpointBuilder, [EndpointProducerBuilder] @AT@ 4508 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 4515 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]SnsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SnsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1502 @LENGTH@ 8908
---DEL Modifier@@static @AT@ 1509 @LENGTH@ 6


UPD MethodDeclaration@@default, DataSetEndpointBuilder, MethodName:dataSet, String path,  @TO@ default, DataSetEndpointBuilder, MethodName:dataset, String path,  @AT@ 34149 @LENGTH@ 378
---UPD SimpleName@@MethodName:dataSet @TO@ MethodName:dataset @AT@ 34180 @LENGTH@ 7


UPD MethodDeclaration@@default, JCacheEndpointBuilder, MethodName:jCache, String path,  @TO@ default, JCacheEndpointBuilder, MethodName:jcache, String path,  @AT@ 51255 @LENGTH@ 370
---UPD SimpleName@@MethodName:jCache @TO@ MethodName:jcache @AT@ 51285 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedSwiftEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSwiftEndpointBuilder, [EndpointProducerBuilder] @AT@ 4770 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 4777 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]DigitalSignatureEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DigitalSignatureEndpointBuilder, [EndpointProducerBuilder] @AT@ 1662 @LENGTH@ 8427
---DEL Modifier@@static @AT@ 1669 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]LuceneEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LuceneEndpointBuilder, [EndpointProducerBuilder] @AT@ 1407 @LENGTH@ 4810
---DEL Modifier@@static @AT@ 1414 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultClientKeyGenerator, [ClientKeyGenerator] @TO@ [@Deprecated, public]DefaultClientKeyGenerator, [ClientKeyGenerator] @AT@ 1245 @LENGTH@ 1167
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultClientKeyGenerator, [ClientKeyGenerator] @AT@ 1422 @LENGTH@ 11


UPD MethodDeclaration@@public, JwkSetUriJwtDecoderBuilder, MethodName:jwsAlgorithm, JwsAlgorithm jwsAlgorithm,  @TO@ public, JwkSetUriJwtDecoderBuilder, MethodName:jwsAlgorithm, SignatureAlgorithm signatureAlgorithm,  @AT@ 8153 @LENGTH@ 226
---UPD SingleVariableDeclaration@@JwsAlgorithm jwsAlgorithm @TO@ SignatureAlgorithm signatureAlgorithm @AT@ 8200 @LENGTH@ 25
------UPD SimpleType@@JwsAlgorithm @TO@ SignatureAlgorithm @AT@ 8200 @LENGTH@ 12
------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 8213 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ MethodInvocation:Assert.notNull(signatureAlgorithm,"signatureAlgorithm cannot be null") @AT@ 8232 @LENGTH@ 60
------UPD MethodInvocation@@Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ Assert.notNull(signatureAlgorithm,"signatureAlgorithm cannot be null") @AT@ 8232 @LENGTH@ 59
---------UPD SimpleName@@MethodName:notNull:[jwsAlgorithm, "jwsAlgorithm cannot be null"] @TO@ MethodName:notNull:[signatureAlgorithm, "signatureAlgorithm cannot be null"] @AT@ 8239 @LENGTH@ 52
------------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 8247 @LENGTH@ 12
------------UPD StringLiteral@@"jwsAlgorithm cannot be null" @TO@ "signatureAlgorithm cannot be null" @AT@ 8261 @LENGTH@ 29
---UPD ExpressionStatement@@Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8296 @LENGTH@ 63
------UPD Assignment@@this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8296 @LENGTH@ 62
---------UPD MethodInvocation@@JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 8316 @LENGTH@ 42
------------UPD SimpleName@@MethodName:parse:[jwsAlgorithm.getName()] @TO@ MethodName:parse:[signatureAlgorithm.getName()] @AT@ 8329 @LENGTH@ 29
---------------UPD MethodInvocation@@jwsAlgorithm.getName() @TO@ signatureAlgorithm.getName() @AT@ 8335 @LENGTH@ 22
------------------UPD SimpleName@@Name:jwsAlgorithm @TO@ Name:signatureAlgorithm @AT@ 8335 @LENGTH@ 12


UPD TypeDeclaration@@[public, static]AdvancedSdbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSdbEndpointBuilder, [EndpointProducerBuilder] @AT@ 7091 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 7098 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedSesEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSesEndpointBuilder, [EndpointProducerBuilder] @AT@ 7305 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 7312 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:cmd.pexpire(command.getKey(),command.getTimeout().getSeconds()).map(value -> new BooleanResponse<>(command,value)) @TO@ MethodInvocation:cmd.pexpire(command.getKey(),command.getTimeout().toMillis()).map(value -> new BooleanResponse<>(command,value)) @AT@ 9641 @LENGTH@ 130
---UPD MethodInvocation@@cmd.pexpire(command.getKey(),command.getTimeout().getSeconds()).map(value -> new BooleanResponse<>(command,value)) @TO@ cmd.pexpire(command.getKey(),command.getTimeout().toMillis()).map(value -> new BooleanResponse<>(command,value)) @AT@ 9648 @LENGTH@ 122
------UPD MethodInvocation@@MethodName:pexpire:[command.getKey(), command.getTimeout().getSeconds()] @TO@ MethodName:pexpire:[command.getKey(), command.getTimeout().toMillis()] @AT@ 9648 @LENGTH@ 64
---------UPD MethodInvocation@@command.getTimeout().getSeconds() @TO@ command.getTimeout().toMillis() @AT@ 9678 @LENGTH@ 33
------------UPD SimpleName@@MethodName:getSeconds:[] @TO@ MethodName:toMillis:[] @AT@ 9699 @LENGTH@ 12


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2185 @LENGTH@ 268
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2264 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2264 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2269 @LENGTH@ 28


UPD SuperConstructorInvocation@@super(new Parameters(PathElement.pathElement(STATIC_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(STATIC_PROVIDER)).setAddHandler(StaticProviderAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY));
 @TO@ super(new Parameters(PathElement.pathElement(STATIC_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(STATIC_PROVIDER)).setAddHandler(StaticProviderAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY));
 @AT@ 4008 @LENGTH@ 366
---UPD MethodInvocation@@new Parameters(PathElement.pathElement(STATIC_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(STATIC_PROVIDER)).setAddHandler(StaticProviderAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY) @TO@ new Parameters(PathElement.pathElement(STATIC_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(STATIC_PROVIDER)).setAddHandler(StaticProviderAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY) @AT@ 4014 @LENGTH@ 358
------UPD MethodInvocation@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)] @TO@ MethodName:setRemoveHandler:[TrivialRemoveStepHandler.getInstance()] @AT@ 4014 @LENGTH@ 290
---------DEL ClassInstanceCreation@@TrivialRemoveStepHandler[DISCOVERY_PROVIDER_RUNTIME_CAPABILITY] @AT@ 4236 @LENGTH@ 67
------------DEL New@@new @AT@ 4236 @LENGTH@ 3
------------DEL SimpleType@@TrivialRemoveStepHandler @AT@ 4240 @LENGTH@ 24
------------DEL SimpleName@@DISCOVERY_PROVIDER_RUNTIME_CAPABILITY @AT@ 4265 @LENGTH@ 37
---------INS MethodInvocation@@TrivialRemoveStepHandler.getInstance() @TO@ MethodInvocation@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)] @AT@ 4236 @LENGTH@ 38
------------INS SimpleName@@Name:TrivialRemoveStepHandler @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 4236 @LENGTH@ 24
------------INS SimpleName@@MethodName:getInstance:[] @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 4261 @LENGTH@ 13


UPD FieldDeclaration@@private, Function<ClientRegistration,OAuth2TokenValidator<Jwt>>, [jwtValidatorFactory=OidcIdTokenValidator::new] @TO@ private, Function<ClientRegistration,OAuth2TokenValidator<Jwt>>, [jwtValidatorFactory=new DefaultOidcIdTokenValidatorFactory()] @AT@ 3526 @LENGTH@ 112
---UPD VariableDeclarationFragment@@jwtValidatorFactory=OidcIdTokenValidator::new @TO@ jwtValidatorFactory=new DefaultOidcIdTokenValidatorFactory() @AT@ 3590 @LENGTH@ 47
------INS ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @TO@ VariableDeclarationFragment@@jwtValidatorFactory=OidcIdTokenValidator::new @AT@ 3682 @LENGTH@ 40
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @AT@ 3682 @LENGTH@ 3
---------INS SimpleType@@DefaultOidcIdTokenValidatorFactory @TO@ ClassInstanceCreation@@DefaultOidcIdTokenValidatorFactory[] @AT@ 3686 @LENGTH@ 34


UPD TypeDeclaration@@[public, static]ChunkEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ChunkEndpointBuilder, [EndpointProducerBuilder] @AT@ 1382 @LENGTH@ 3201
---DEL Modifier@@static @AT@ 1389 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedBeanValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedBeanValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 5963 @LENGTH@ 2145
---DEL Modifier@@static @AT@ 5970 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]DigitalOceanResources,  @TO@ [static]DigitalOceanResources,  @AT@ 10737 @LENGTH@ 159
---DEL Modifier@@public @AT@ 10737 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4132 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4139 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 4139 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 4139 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 4139 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 4144 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 4139 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 4160 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 4169 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 4169 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 4181 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 4181 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 4186 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 4169 @LENGTH@ 7


UPD VariableDeclarationStatement@@MongoConfiguration mongoConf=new MongoConfiguration(textParameters); @TO@ ConnectionParamsConfiguration mongoConf=new ConnectionParamsConfiguration(textParameters); @AT@ 2269 @LENGTH@ 70
---UPD SimpleType@@MongoConfiguration @TO@ ConnectionParamsConfiguration @AT@ 2269 @LENGTH@ 18
---UPD VariableDeclarationFragment@@mongoConf=new MongoConfiguration(textParameters) @TO@ mongoConf=new ConnectionParamsConfiguration(textParameters) @AT@ 2288 @LENGTH@ 50
------UPD ClassInstanceCreation@@MongoConfiguration[textParameters] @TO@ ConnectionParamsConfiguration[textParameters] @AT@ 2300 @LENGTH@ 38
---------UPD SimpleType@@MongoConfiguration @TO@ ConnectionParamsConfiguration @AT@ 2304 @LENGTH@ 18


UPD TypeDeclaration@@[public]AuthorizationCodeServices,  @TO@ [@Deprecated, public]AuthorizationCodeServices,  @AT@ 311 @LENGTH@ 623
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationCodeServices,  @AT@ 488 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenThrow(new RuntimeException("Service exception")).thenReturn(logicalErrorRes).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenThrow(new RuntimeException("Service exception")).thenReturn(logicalErrorRes).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2023 @LENGTH@ 245
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenThrow(new RuntimeException("Service exception")).thenReturn(logicalErrorRes).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenThrow(new RuntimeException("Service exception")).thenReturn(logicalErrorRes).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2023 @LENGTH@ 244
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2238 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2249 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]ValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 1416 @LENGTH@ 2562
---DEL Modifier@@static @AT@ 1423 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.classNameGenerator=(s) -> className @TO@ Assignment:this.classNameGenerator=s -> className @AT@ 2453 @LENGTH@ 43
---UPD Assignment@@this.classNameGenerator=(s) -> className @TO@ this.classNameGenerator=s -> className @AT@ 2453 @LENGTH@ 42
------UPD LambdaExpression@@(s) -> className @TO@ s -> className @AT@ 2479 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:when(this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())).thenReturn(Mono.empty()) @TO@ MethodDeclaration@@public, void, MethodName:setup,  @AT@ 7317 @LENGTH@ 105
---INS MethodInvocation@@when(this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())).thenReturn(Mono.empty()) @TO@ ExpressionStatement@@MethodInvocation:when(this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())).thenReturn(Mono.empty()) @AT@ 7317 @LENGTH@ 104
------INS MethodInvocation@@MethodName:when:[this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())] @TO@ MethodInvocation@@when(this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())).thenReturn(Mono.empty()) @AT@ 7317 @LENGTH@ 79
---------INS MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any()) @TO@ MethodInvocation@@MethodName:when:[this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())] @AT@ 7322 @LENGTH@ 73
------------INS FieldAccess@@this.authorizedClientRepository @TO@ MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any()) @AT@ 7322 @LENGTH@ 31
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientRepository @AT@ 7322 @LENGTH@ 4
---------------INS SimpleName@@authorizedClientRepository @TO@ FieldAccess@@this.authorizedClientRepository @AT@ 7327 @LENGTH@ 26
------------INS SimpleName@@MethodName:saveAuthorizedClient:[any(), any(), any()] @TO@ MethodInvocation@@this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any()) @AT@ 7354 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:saveAuthorizedClient:[any(), any(), any()] @AT@ 7375 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:saveAuthorizedClient:[any(), any(), any()] @AT@ 7382 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:saveAuthorizedClient:[any(), any(), any()] @AT@ 7389 @LENGTH@ 5
------INS SimpleName@@MethodName:thenReturn:[Mono.empty()] @TO@ MethodInvocation@@when(this.authorizedClientRepository.saveAuthorizedClient(any(),any(),any())).thenReturn(Mono.empty()) @AT@ 7397 @LENGTH@ 24
---------INS MethodInvocation@@Mono.empty() @TO@ SimpleName@@MethodName:thenReturn:[Mono.empty()] @AT@ 7408 @LENGTH@ 12
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 7408 @LENGTH@ 4
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 7413 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]DataFormatEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DataFormatEndpointBuilder, [EndpointProducerBuilder] @AT@ 1476 @LENGTH@ 860
---DEL Modifier@@static @AT@ 1483 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]ReadConsistency,  @TO@ [static]ReadConsistency,  @AT@ 44966 @LENGTH@ 91
---DEL Modifier@@public @AT@ 44966 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @TO@ TypeDeclaration@@[public]SessionManagementConfigTests,  @AT@ 16523 @LENGTH@ 1147
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16523 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16530 @LENGTH@ 4
---INS SimpleName@@MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16535 @LENGTH@ 89
---INS ExpressionStatement@@MethodInvocation:this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16632 @LENGTH@ 98
------INS MethodInvocation@@this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @AT@ 16632 @LENGTH@ 97
---------INS MethodInvocation@@MethodName:configLocations:[this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")] @TO@ MethodInvocation@@this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @AT@ 16632 @LENGTH@ 86
------------INS MethodInvocation@@this.xml("ConcurrencyControlLogoutAndRememberMeHandlers") @TO@ MethodInvocation@@MethodName:configLocations:[this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")] @AT@ 16660 @LENGTH@ 57
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.xml("ConcurrencyControlLogoutAndRememberMeHandlers") @AT@ 16660 @LENGTH@ 4
---------------INS SimpleName@@MethodName:xml:["ConcurrencyControlLogoutAndRememberMeHandlers"] @TO@ MethodInvocation@@this.xml("ConcurrencyControlLogoutAndRememberMeHandlers") @AT@ 16665 @LENGTH@ 52
------------------INS StringLiteral@@"ConcurrencyControlLogoutAndRememberMeHandlers" @TO@ SimpleName@@MethodName:xml:["ConcurrencyControlLogoutAndRememberMeHandlers"] @AT@ 16669 @LENGTH@ 47
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @AT@ 16632 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 16632 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 16637 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.configLocations(this.xml("ConcurrencyControlLogoutAndRememberMeHandlers")).autowire() @AT@ 16719 @LENGTH@ 10
---INS VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16734 @LENGTH@ 91
------INS SimpleType@@ConcurrentSessionFilter @TO@ VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class); @AT@ 16734 @LENGTH@ 23
------INS VariableDeclarationFragment@@concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class) @TO@ VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class); @AT@ 16758 @LENGTH@ 66
---------INS SimpleName@@concurrentSessionFilter @TO@ VariableDeclarationFragment@@concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class) @AT@ 16758 @LENGTH@ 23
---------INS MethodInvocation@@getFilter(ConcurrentSessionFilter.class) @TO@ VariableDeclarationFragment@@concurrentSessionFilter=getFilter(ConcurrentSessionFilter.class) @AT@ 16784 @LENGTH@ 40
------------INS SimpleName@@MethodName:getFilter:[ConcurrentSessionFilter.class] @TO@ MethodInvocation@@getFilter(ConcurrentSessionFilter.class) @AT@ 16784 @LENGTH@ 40
---------------INS TypeLiteral@@ConcurrentSessionFilter.class @TO@ SimpleName@@MethodName:getFilter:[ConcurrentSessionFilter.class] @AT@ 16794 @LENGTH@ 29
---INS VariableDeclarationStatement@@LogoutFilter logoutFilter=getFilter(LogoutFilter.class); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16828 @LENGTH@ 58
------INS SimpleType@@LogoutFilter @TO@ VariableDeclarationStatement@@LogoutFilter logoutFilter=getFilter(LogoutFilter.class); @AT@ 16828 @LENGTH@ 12
------INS VariableDeclarationFragment@@logoutFilter=getFilter(LogoutFilter.class) @TO@ VariableDeclarationStatement@@LogoutFilter logoutFilter=getFilter(LogoutFilter.class); @AT@ 16841 @LENGTH@ 44
---------INS SimpleName@@logoutFilter @TO@ VariableDeclarationFragment@@logoutFilter=getFilter(LogoutFilter.class) @AT@ 16841 @LENGTH@ 12
---------INS MethodInvocation@@getFilter(LogoutFilter.class) @TO@ VariableDeclarationFragment@@logoutFilter=getFilter(LogoutFilter.class) @AT@ 16856 @LENGTH@ 29
------------INS SimpleName@@MethodName:getFilter:[LogoutFilter.class] @TO@ MethodInvocation@@getFilter(LogoutFilter.class) @AT@ 16856 @LENGTH@ 29
---------------INS TypeLiteral@@LogoutFilter.class @TO@ SimpleName@@MethodName:getFilter:[LogoutFilter.class] @AT@ 16866 @LENGTH@ 18
---INS VariableDeclarationStatement@@LogoutHandler csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers"); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16890 @LENGTH@ 84
------INS SimpleType@@LogoutHandler @TO@ VariableDeclarationStatement@@LogoutHandler csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers"); @AT@ 16890 @LENGTH@ 13
------INS VariableDeclarationFragment@@csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers") @TO@ VariableDeclarationStatement@@LogoutHandler csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers"); @AT@ 16904 @LENGTH@ 69
---------INS SimpleName@@csfLogoutHandler @TO@ VariableDeclarationFragment@@csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers") @AT@ 16904 @LENGTH@ 16
---------INS MethodInvocation@@getFieldValue(concurrentSessionFilter,"handlers") @TO@ VariableDeclarationFragment@@csfLogoutHandler=getFieldValue(concurrentSessionFilter,"handlers") @AT@ 16923 @LENGTH@ 50
------------INS SimpleName@@MethodName:getFieldValue:[concurrentSessionFilter, "handlers"] @TO@ MethodInvocation@@getFieldValue(concurrentSessionFilter,"handlers") @AT@ 16923 @LENGTH@ 50
---------------INS SimpleName@@concurrentSessionFilter @TO@ SimpleName@@MethodName:getFieldValue:[concurrentSessionFilter, "handlers"] @AT@ 16937 @LENGTH@ 23
---------------INS StringLiteral@@"handlers" @TO@ SimpleName@@MethodName:getFieldValue:[concurrentSessionFilter, "handlers"] @AT@ 16962 @LENGTH@ 10
---INS VariableDeclarationStatement@@LogoutHandler lfLogoutHandler=getFieldValue(logoutFilter,"handler"); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 16977 @LENGTH@ 71
------INS SimpleType@@LogoutHandler @TO@ VariableDeclarationStatement@@LogoutHandler lfLogoutHandler=getFieldValue(logoutFilter,"handler"); @AT@ 16977 @LENGTH@ 13
------INS VariableDeclarationFragment@@lfLogoutHandler=getFieldValue(logoutFilter,"handler") @TO@ VariableDeclarationStatement@@LogoutHandler lfLogoutHandler=getFieldValue(logoutFilter,"handler"); @AT@ 16991 @LENGTH@ 56
---------INS SimpleName@@lfLogoutHandler @TO@ VariableDeclarationFragment@@lfLogoutHandler=getFieldValue(logoutFilter,"handler") @AT@ 16991 @LENGTH@ 15
---------INS MethodInvocation@@getFieldValue(logoutFilter,"handler") @TO@ VariableDeclarationFragment@@lfLogoutHandler=getFieldValue(logoutFilter,"handler") @AT@ 17009 @LENGTH@ 38
------------INS SimpleName@@MethodName:getFieldValue:[logoutFilter, "handler"] @TO@ MethodInvocation@@getFieldValue(logoutFilter,"handler") @AT@ 17009 @LENGTH@ 38
---------------INS SimpleName@@logoutFilter @TO@ SimpleName@@MethodName:getFieldValue:[logoutFilter, "handler"] @AT@ 17023 @LENGTH@ 12
---------------INS StringLiteral@@"handler" @TO@ SimpleName@@MethodName:getFieldValue:[logoutFilter, "handler"] @AT@ 17037 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17052 @LENGTH@ 72
------INS MethodInvocation@@assertThat(csfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17052 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:assertThat:[csfLogoutHandler] @TO@ MethodInvocation@@assertThat(csfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17052 @LENGTH@ 28
------------INS SimpleName@@csfLogoutHandler @TO@ MethodInvocation@@MethodName:assertThat:[csfLogoutHandler] @AT@ 17063 @LENGTH@ 16
---------INS SimpleName@@MethodName:isInstanceOf:[CompositeLogoutHandler.class] @TO@ MethodInvocation@@assertThat(csfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17081 @LENGTH@ 42
------------INS TypeLiteral@@CompositeLogoutHandler.class @TO@ SimpleName@@MethodName:isInstanceOf:[CompositeLogoutHandler.class] @AT@ 17094 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:assertThat(lfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17127 @LENGTH@ 71
------INS MethodInvocation@@assertThat(lfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(lfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17127 @LENGTH@ 70
---------INS MethodInvocation@@MethodName:assertThat:[lfLogoutHandler] @TO@ MethodInvocation@@assertThat(lfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17127 @LENGTH@ 27
------------INS SimpleName@@lfLogoutHandler @TO@ MethodInvocation@@MethodName:assertThat:[lfLogoutHandler] @AT@ 17138 @LENGTH@ 15
---------INS SimpleName@@MethodName:isInstanceOf:[CompositeLogoutHandler.class] @TO@ MethodInvocation@@assertThat(lfLogoutHandler).isInstanceOf(CompositeLogoutHandler.class) @AT@ 17155 @LENGTH@ 42
------------INS TypeLiteral@@CompositeLogoutHandler.class @TO@ SimpleName@@MethodName:isInstanceOf:[CompositeLogoutHandler.class] @AT@ 17168 @LENGTH@ 28
---INS VariableDeclarationStatement@@List<LogoutHandler> csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers"); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17202 @LENGTH@ 90
------INS ParameterizedType@@List<LogoutHandler> @TO@ VariableDeclarationStatement@@List<LogoutHandler> csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers"); @AT@ 17202 @LENGTH@ 19
---------INS SimpleType@@List @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 17202 @LENGTH@ 4
---------INS SimpleType@@LogoutHandler @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 17207 @LENGTH@ 13
------INS VariableDeclarationFragment@@csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers") @TO@ VariableDeclarationStatement@@List<LogoutHandler> csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers"); @AT@ 17222 @LENGTH@ 69
---------INS SimpleName@@csfLogoutHandlers @TO@ VariableDeclarationFragment@@csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers") @AT@ 17222 @LENGTH@ 17
---------INS MethodInvocation@@getFieldValue(csfLogoutHandler,"logoutHandlers") @TO@ VariableDeclarationFragment@@csfLogoutHandlers=getFieldValue(csfLogoutHandler,"logoutHandlers") @AT@ 17242 @LENGTH@ 49
------------INS SimpleName@@MethodName:getFieldValue:[csfLogoutHandler, "logoutHandlers"] @TO@ MethodInvocation@@getFieldValue(csfLogoutHandler,"logoutHandlers") @AT@ 17242 @LENGTH@ 49
---------------INS SimpleName@@csfLogoutHandler @TO@ SimpleName@@MethodName:getFieldValue:[csfLogoutHandler, "logoutHandlers"] @AT@ 17256 @LENGTH@ 16
---------------INS StringLiteral@@"logoutHandlers" @TO@ SimpleName@@MethodName:getFieldValue:[csfLogoutHandler, "logoutHandlers"] @AT@ 17274 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<LogoutHandler> lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers"); @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17295 @LENGTH@ 88
------INS ParameterizedType@@List<LogoutHandler> @TO@ VariableDeclarationStatement@@List<LogoutHandler> lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers"); @AT@ 17295 @LENGTH@ 19
---------INS SimpleType@@List @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 17295 @LENGTH@ 4
---------INS SimpleType@@LogoutHandler @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 17300 @LENGTH@ 13
------INS VariableDeclarationFragment@@lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers") @TO@ VariableDeclarationStatement@@List<LogoutHandler> lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers"); @AT@ 17315 @LENGTH@ 67
---------INS SimpleName@@lfLogoutHandlers @TO@ VariableDeclarationFragment@@lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers") @AT@ 17315 @LENGTH@ 16
---------INS MethodInvocation@@getFieldValue(lfLogoutHandler,"logoutHandlers") @TO@ VariableDeclarationFragment@@lfLogoutHandlers=getFieldValue(lfLogoutHandler,"logoutHandlers") @AT@ 17334 @LENGTH@ 48
------------INS SimpleName@@MethodName:getFieldValue:[lfLogoutHandler, "logoutHandlers"] @TO@ MethodInvocation@@getFieldValue(lfLogoutHandler,"logoutHandlers") @AT@ 17334 @LENGTH@ 48
---------------INS SimpleName@@lfLogoutHandler @TO@ SimpleName@@MethodName:getFieldValue:[lfLogoutHandler, "logoutHandlers"] @AT@ 17348 @LENGTH@ 15
---------------INS StringLiteral@@"logoutHandlers" @TO@ SimpleName@@MethodName:getFieldValue:[lfLogoutHandler, "logoutHandlers"] @AT@ 17365 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandlers).hasSameSizeAs(lfLogoutHandlers) @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17387 @LENGTH@ 62
------INS MethodInvocation@@assertThat(csfLogoutHandlers).hasSameSizeAs(lfLogoutHandlers) @TO@ ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandlers).hasSameSizeAs(lfLogoutHandlers) @AT@ 17387 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:assertThat:[csfLogoutHandlers] @TO@ MethodInvocation@@assertThat(csfLogoutHandlers).hasSameSizeAs(lfLogoutHandlers) @AT@ 17387 @LENGTH@ 29
------------INS SimpleName@@csfLogoutHandlers @TO@ MethodInvocation@@MethodName:assertThat:[csfLogoutHandlers] @AT@ 17398 @LENGTH@ 17
---------INS SimpleName@@MethodName:hasSameSizeAs:[lfLogoutHandlers] @TO@ MethodInvocation@@assertThat(csfLogoutHandlers).hasSameSizeAs(lfLogoutHandlers) @AT@ 17417 @LENGTH@ 31
------------INS SimpleName@@lfLogoutHandlers @TO@ SimpleName@@MethodName:hasSameSizeAs:[lfLogoutHandlers] @AT@ 17431 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17453 @LENGTH@ 106
------INS MethodInvocation@@assertThat(csfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(csfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17453 @LENGTH@ 105
---------INS MethodInvocation@@MethodName:assertThat:[csfLogoutHandlers] @TO@ MethodInvocation@@assertThat(csfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17453 @LENGTH@ 29
------------INS SimpleName@@csfLogoutHandlers @TO@ MethodInvocation@@MethodName:assertThat:[csfLogoutHandlers] @AT@ 17464 @LENGTH@ 17
---------INS SimpleName@@MethodName:hasAtLeastOneElementOfType:[LogoutSuccessEventPublishingLogoutHandler.class] @TO@ MethodInvocation@@assertThat(csfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17483 @LENGTH@ 75
------------INS TypeLiteral@@LogoutSuccessEventPublishingLogoutHandler.class @TO@ SimpleName@@MethodName:hasAtLeastOneElementOfType:[LogoutSuccessEventPublishingLogoutHandler.class] @AT@ 17510 @LENGTH@ 47
---INS ExpressionStatement@@MethodInvocation:assertThat(lfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @TO@ MethodDeclaration@@public, void, MethodName:checkConcurrencyAndLogoutFilterHasSameSizeAndHasLogoutSuccessEventPublishingLogoutHandler,  @AT@ 17562 @LENGTH@ 105
------INS MethodInvocation@@assertThat(lfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @TO@ ExpressionStatement@@MethodInvocation:assertThat(lfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17562 @LENGTH@ 104
---------INS MethodInvocation@@MethodName:assertThat:[lfLogoutHandlers] @TO@ MethodInvocation@@assertThat(lfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17562 @LENGTH@ 28
------------INS SimpleName@@lfLogoutHandlers @TO@ MethodInvocation@@MethodName:assertThat:[lfLogoutHandlers] @AT@ 17573 @LENGTH@ 16
---------INS SimpleName@@MethodName:hasAtLeastOneElementOfType:[LogoutSuccessEventPublishingLogoutHandler.class] @TO@ MethodInvocation@@assertThat(lfLogoutHandlers).hasAtLeastOneElementOfType(LogoutSuccessEventPublishingLogoutHandler.class) @AT@ 17591 @LENGTH@ 75
------------INS TypeLiteral@@LogoutSuccessEventPublishingLogoutHandler.class @TO@ SimpleName@@MethodName:hasAtLeastOneElementOfType:[LogoutSuccessEventPublishingLogoutHandler.class] @AT@ 17618 @LENGTH@ 47


UPD FieldDeclaration@@private, boolean, [ignoreCase=false] @TO@ private, boolean, [ignoreCase] @AT@ 3289 @LENGTH@ 35
---UPD VariableDeclarationFragment@@ignoreCase=false @TO@ ignoreCase @AT@ 3305 @LENGTH@ 18
------DEL BooleanLiteral@@false @AT@ 3318 @LENGTH@ 5


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1395 @LENGTH@ 782
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1402 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1407 @LENGTH@ 28
---UPD VariableDeclarationStatement@@Task<? extends Serializable> dropDBTask=TaskFactory.get(new DDLWork(new HashSet<>(),new HashSet<>(),desc),context.hiveConf); @TO@ Task<?> dropDBTask=TaskFactory.get(new DDLWork(new HashSet<>(),new HashSet<>(),desc),context.hiveConf); @AT@ 1787 @LENGTH@ 137
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1787 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]TwitterStreamingEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]TwitterStreamingEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1440 @LENGTH@ 5039
---DEL Modifier@@static @AT@ 1447 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:cacheManager.getCacheNames().forEach((s) -> cacheManager.destroyCache(s)) @TO@ MethodInvocation:cacheManager.getCacheNames().forEach(s -> cacheManager.destroyCache(s)) @AT@ 2931 @LENGTH@ 74
---UPD MethodInvocation@@cacheManager.getCacheNames().forEach((s) -> cacheManager.destroyCache(s)) @TO@ cacheManager.getCacheNames().forEach(s -> cacheManager.destroyCache(s)) @AT@ 2931 @LENGTH@ 73
------UPD SimpleName@@MethodName:forEach:[(s) -> cacheManager.destroyCache(s)] @TO@ MethodName:forEach:[s -> cacheManager.destroyCache(s)] @AT@ 2960 @LENGTH@ 44
---------UPD LambdaExpression@@(s) -> cacheManager.destroyCache(s) @TO@ s -> cacheManager.destroyCache(s) @AT@ 2968 @LENGTH@ 35


UPD EnumDeclaration@@[public, static]DockerOperation,  @TO@ [static]DockerOperation,  @AT@ 42650 @LENGTH@ 545
---DEL Modifier@@public @AT@ 42650 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedKubernetesSecretsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesSecretsEndpointBuilder, [EndpointProducerBuilder] @AT@ 8736 @LENGTH@ 3103
---DEL Modifier@@static @AT@ 8743 @LENGTH@ 6


UPD MethodDeclaration@@public, static, void, MethodName:processSkewJoin, JoinOperator joinOp, Task<? extends Serializable> currTask, ParseContext parseCtx, SemanticException,  @TO@ public, static, void, MethodName:processSkewJoin, JoinOperator joinOp, Task<?> currTask, ParseContext parseCtx, SemanticException,  @AT@ 4559 @LENGTH@ 11101
---UPD SingleVariableDeclaration@@Task<? extends Serializable> currTask @TO@ Task<?> currTask @AT@ 4621 @LENGTH@ 37
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4621 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> children=currTask.getChildTasks(); @TO@ List<Task<?>> children=currTask.getChildTasks(); @AT@ 4944 @LENGTH@ 71
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4944 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4949 @LENGTH@ 28
---UPD VariableDeclarationStatement@@HashMap<Path,Task<? extends Serializable>> bigKeysDirToTaskMap=new HashMap<Path,Task<? extends Serializable>>(); @TO@ HashMap<Path,Task<?>> bigKeysDirToTaskMap=new HashMap<Path,Task<?>>(); @AT@ 6305 @LENGTH@ 122
------UPD ParameterizedType@@HashMap<Path,Task<? extends Serializable>> @TO@ HashMap<Path,Task<?>> @AT@ 6305 @LENGTH@ 43
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6319 @LENGTH@ 28
------UPD VariableDeclarationFragment@@bigKeysDirToTaskMap=new HashMap<Path,Task<? extends Serializable>>() @TO@ bigKeysDirToTaskMap=new HashMap<Path,Task<?>>() @AT@ 6349 @LENGTH@ 77
---------UPD ClassInstanceCreation@@HashMap<Path,Task<? extends Serializable>>[] @TO@ HashMap<Path,Task<?>>[] @AT@ 6377 @LENGTH@ 49
------------UPD ParameterizedType@@HashMap<Path,Task<? extends Serializable>> @TO@ HashMap<Path,Task<?>> @AT@ 6381 @LENGTH@ 43
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6395 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> listTasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> listTasks=new ArrayList<Task<?>>(); @AT@ 6498 @LENGTH@ 93
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 6498 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6503 @LENGTH@ 28
------UPD VariableDeclarationFragment@@listTasks=new ArrayList<Task<? extends Serializable>>() @TO@ listTasks=new ArrayList<Task<?>>() @AT@ 6533 @LENGTH@ 57
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 6545 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 6549 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6559 @LENGTH@ 28
---UPD ForStatement@@for (int i=0; i < numAliases - 1; i++) {  Byte src=tags[i];  MapWork newPlan=PlanUtils.getMapRedWork().getMapWork();  boolean mapperCannotSpanPartns=parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVE_MAPPER_CANNOT_SPAN_MULTIPLE_PARTITIONS);  newPlan.setMapperCannotSpanPartns(mapperCannotSpanPartns);  MapredWork clonePlan=SerializationUtilities.clonePlan(currPlan);  Operator<? extends OperatorDesc>[] parentOps=new TableScanOperator[tags.length];  for (int k=0; k < tags.length; k++) {    Operator<? extends OperatorDesc> ts=GenMapRedUtils.createTemporaryTableScanOperator(joinOp.getCompilationOpContext(),rowSchemaList.get((byte)k));    ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k));    parentOps[k]=ts;  }  Operator<? extends OperatorDesc> tblScan_op=parentOps[i];  ArrayList<String> aliases=new ArrayList<String>();  String alias=src.toString().intern();  aliases.add(alias);  Path bigKeyDirPath=bigKeysDirMap.get(src);  newPlan.addPathToAlias(bigKeyDirPath,aliases);  newPlan.getAliasToWork().put(alias,tblScan_op);  PartitionDesc part=new PartitionDesc(tableDescList.get(src),null);  newPlan.addPathToPartitionInfo(bigKeyDirPath,part);  newPlan.getAliasToPartnInfo().put(alias,part);  Operator<? extends OperatorDesc> reducer=clonePlan.getReduceWork().getReducer();  assert reducer instanceof JoinOperator;  JoinOperator cloneJoinOp=(JoinOperator)reducer;  String dumpFilePrefix="mapfile" + PlanUtils.getCountForMapJoinDumpFilePrefix();  MapJoinDesc mapJoinDescriptor=new MapJoinDesc(newJoinKeys,keyTblDesc,newJoinValues,newJoinValueTblDesc,newJoinValueTblDesc,joinDescriptor.getOutputColumnNames(),i,joinDescriptor.getConds(),joinDescriptor.getFilters(),joinDescriptor.getNoOuterJoin(),dumpFilePrefix,joinDescriptor.getMemoryMonitorInfo(),joinDescriptor.getInMemoryDataSize());  mapJoinDescriptor.setTagOrder(tags);  mapJoinDescriptor.setHandleSkewJoin(false);  mapJoinDescriptor.setNullSafes(joinDescriptor.getNullSafes());  mapJoinDescriptor.setColumnExprMap(joinDescriptor.getColumnExprMap());  MapredLocalWork localPlan=new MapredLocalWork(new LinkedHashMap<String,Operator<? extends OperatorDesc>>(),new LinkedHashMap<String,FetchWork>());  Map<Byte,Path> smallTblDirs=smallKeysDirMap.get(src);  for (int j=0; j < numAliases; j++) {    if (j == i) {      continue;    }    Byte small_alias=tags[j];    Operator<? extends OperatorDesc> tblScan_op2=parentOps[j];    localPlan.getAliasToWork().put(small_alias.toString(),tblScan_op2);    Path tblDir=smallTblDirs.get(small_alias);    localPlan.getAliasToFetchWork().put(small_alias.toString(),new FetchWork(tblDir,tableDescList.get(small_alias)));  }  newPlan.setMapRedLocalWork(localPlan);  MapJoinOperator mapJoinOp=(MapJoinOperator)OperatorFactory.getAndMakeChild(joinOp.getCompilationOpContext(),mapJoinDescriptor,(RowSchema)null,parentOps);  List<Operator<? extends OperatorDesc>> childOps=cloneJoinOp.getChildOperators();  for (  Operator<? extends OperatorDesc> childOp : childOps) {    childOp.replaceParent(cloneJoinOp,mapJoinOp);  }  mapJoinOp.setChildOperators(childOps);  HiveConf jc=new HiveConf(parseCtx.getConf(),GenMRSkewJoinProcessor.class);  newPlan.setNumMapTasks(HiveConf.getIntVar(jc,HiveConf.ConfVars.HIVESKEWJOINMAPJOINNUMMAPTASK));  newPlan.setMinSplitSize(HiveConf.getLongVar(jc,HiveConf.ConfVars.HIVESKEWJOINMAPJOINMINSPLIT));  newPlan.setInputformat(HiveInputFormat.class.getName());  MapredWork w=new MapredWork();  w.setMapWork(newPlan);  Task<? extends Serializable> skewJoinMapJoinTask=TaskFactory.get(w);  skewJoinMapJoinTask.setFetchSource(currTask.isFetchSource());  bigKeysDirToTaskMap.put(bigKeyDirPath,skewJoinMapJoinTask);  listWorks.add(skewJoinMapJoinTask.getWork());  listTasks.add(skewJoinMapJoinTask);} @TO@ for (int i=0; i < numAliases - 1; i++) {  Byte src=tags[i];  MapWork newPlan=PlanUtils.getMapRedWork().getMapWork();  boolean mapperCannotSpanPartns=parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVE_MAPPER_CANNOT_SPAN_MULTIPLE_PARTITIONS);  newPlan.setMapperCannotSpanPartns(mapperCannotSpanPartns);  MapredWork clonePlan=SerializationUtilities.clonePlan(currPlan);  Operator<? extends OperatorDesc>[] parentOps=new TableScanOperator[tags.length];  for (int k=0; k < tags.length; k++) {    Operator<? extends OperatorDesc> ts=GenMapRedUtils.createTemporaryTableScanOperator(joinOp.getCompilationOpContext(),rowSchemaList.get((byte)k));    ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k));    parentOps[k]=ts;  }  Operator<? extends OperatorDesc> tblScan_op=parentOps[i];  ArrayList<String> aliases=new ArrayList<String>();  String alias=src.toString().intern();  aliases.add(alias);  Path bigKeyDirPath=bigKeysDirMap.get(src);  newPlan.addPathToAlias(bigKeyDirPath,aliases);  newPlan.getAliasToWork().put(alias,tblScan_op);  PartitionDesc part=new PartitionDesc(tableDescList.get(src),null);  newPlan.addPathToPartitionInfo(bigKeyDirPath,part);  newPlan.getAliasToPartnInfo().put(alias,part);  Operator<? extends OperatorDesc> reducer=clonePlan.getReduceWork().getReducer();  assert reducer instanceof JoinOperator;  JoinOperator cloneJoinOp=(JoinOperator)reducer;  String dumpFilePrefix="mapfile" + PlanUtils.getCountForMapJoinDumpFilePrefix();  MapJoinDesc mapJoinDescriptor=new MapJoinDesc(newJoinKeys,keyTblDesc,newJoinValues,newJoinValueTblDesc,newJoinValueTblDesc,joinDescriptor.getOutputColumnNames(),i,joinDescriptor.getConds(),joinDescriptor.getFilters(),joinDescriptor.getNoOuterJoin(),dumpFilePrefix,joinDescriptor.getMemoryMonitorInfo(),joinDescriptor.getInMemoryDataSize());  mapJoinDescriptor.setTagOrder(tags);  mapJoinDescriptor.setHandleSkewJoin(false);  mapJoinDescriptor.setNullSafes(joinDescriptor.getNullSafes());  mapJoinDescriptor.setColumnExprMap(joinDescriptor.getColumnExprMap());  MapredLocalWork localPlan=new MapredLocalWork(new LinkedHashMap<String,Operator<? extends OperatorDesc>>(),new LinkedHashMap<String,FetchWork>());  Map<Byte,Path> smallTblDirs=smallKeysDirMap.get(src);  for (int j=0; j < numAliases; j++) {    if (j == i) {      continue;    }    Byte small_alias=tags[j];    Operator<? extends OperatorDesc> tblScan_op2=parentOps[j];    localPlan.getAliasToWork().put(small_alias.toString(),tblScan_op2);    Path tblDir=smallTblDirs.get(small_alias);    localPlan.getAliasToFetchWork().put(small_alias.toString(),new FetchWork(tblDir,tableDescList.get(small_alias)));  }  newPlan.setMapRedLocalWork(localPlan);  MapJoinOperator mapJoinOp=(MapJoinOperator)OperatorFactory.getAndMakeChild(joinOp.getCompilationOpContext(),mapJoinDescriptor,(RowSchema)null,parentOps);  List<Operator<? extends OperatorDesc>> childOps=cloneJoinOp.getChildOperators();  for (  Operator<? extends OperatorDesc> childOp : childOps) {    childOp.replaceParent(cloneJoinOp,mapJoinOp);  }  mapJoinOp.setChildOperators(childOps);  HiveConf jc=new HiveConf(parseCtx.getConf(),GenMRSkewJoinProcessor.class);  newPlan.setNumMapTasks(HiveConf.getIntVar(jc,HiveConf.ConfVars.HIVESKEWJOINMAPJOINNUMMAPTASK));  newPlan.setMinSplitSize(HiveConf.getLongVar(jc,HiveConf.ConfVars.HIVESKEWJOINMAPJOINMINSPLIT));  newPlan.setInputformat(HiveInputFormat.class.getName());  MapredWork w=new MapredWork();  w.setMapWork(newPlan);  Task<?> skewJoinMapJoinTask=TaskFactory.get(w);  skewJoinMapJoinTask.setFetchSource(currTask.isFetchSource());  bigKeysDirToTaskMap.put(bigKeyDirPath,skewJoinMapJoinTask);  listWorks.add(skewJoinMapJoinTask.getWork());  listTasks.add(skewJoinMapJoinTask);} @AT@ 10139 @LENGTH@ 4551
------UPD VariableDeclarationStatement@@Task<? extends Serializable> skewJoinMapJoinTask=TaskFactory.get(w); @TO@ Task<?> skewJoinMapJoinTask=TaskFactory.get(w); @AT@ 14384 @LENGTH@ 70
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14384 @LENGTH@ 28
---UPD IfStatement@@if (children != null) {  for (  Task<? extends Serializable> tsk : listTasks) {    for (    Task<? extends Serializable> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>());  for (  Task<? extends Serializable> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);} @TO@ if (children != null) {  for (  Task<?> tsk : listTasks) {    for (    Task<?> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<?>>());  for (  Task<?> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);} @AT@ 14695 @LENGTH@ 447
------UPD Block@@ThenBody:{  for (  Task<? extends Serializable> tsk : listTasks) {    for (    Task<? extends Serializable> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>());  for (  Task<? extends Serializable> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);} @TO@ ThenBody:{  for (  Task<?> tsk : listTasks) {    for (    Task<?> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<?>>());  for (  Task<?> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);} @AT@ 14717 @LENGTH@ 425
---------UPD EnhancedForStatement@@for (Task<? extends Serializable> tsk : listTasks) {  for (  Task<? extends Serializable> oldChild : children) {    tsk.addDependentTask(oldChild);  }} @TO@ for (Task<?> tsk : listTasks) {  for (  Task<?> oldChild : children) {    tsk.addDependentTask(oldChild);  }} @AT@ 14725 @LENGTH@ 177
------------UPD SingleVariableDeclaration@@Task<? extends Serializable> tsk @TO@ Task<?> tsk @AT@ 14730 @LENGTH@ 32
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14730 @LENGTH@ 28
------------UPD EnhancedForStatement@@for (Task<? extends Serializable> oldChild : children) {  tsk.addDependentTask(oldChild);} @TO@ for (Task<?> oldChild : children) {  tsk.addDependentTask(oldChild);} @AT@ 14786 @LENGTH@ 108
---------------UPD SingleVariableDeclaration@@Task<? extends Serializable> oldChild @TO@ Task<?> oldChild @AT@ 14791 @LENGTH@ 37
------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14791 @LENGTH@ 28
---------UPD ExpressionStatement@@MethodInvocation:currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ MethodInvocation:currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 14909 @LENGTH@ 70
------------UPD MethodInvocation@@currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 14909 @LENGTH@ 69
---------------UPD SimpleName@@MethodName:setChildTasks:[new ArrayList<Task<? extends Serializable>>()] @TO@ MethodName:setChildTasks:[new ArrayList<Task<?>>()] @AT@ 14918 @LENGTH@ 60
------------------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 14932 @LENGTH@ 45
---------------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 14936 @LENGTH@ 39
------------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14946 @LENGTH@ 28
---------UPD EnhancedForStatement@@for (Task<? extends Serializable> oldChild : children) {  oldChild.getParentTasks().remove(currTask);} @TO@ for (Task<?> oldChild : children) {  oldChild.getParentTasks().remove(currTask);} @AT@ 14986 @LENGTH@ 116
------------UPD SingleVariableDeclaration@@Task<? extends Serializable> oldChild @TO@ Task<?> oldChild @AT@ 14991 @LENGTH@ 37
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 14991 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ MethodInvocation:currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 15534 @LENGTH@ 70
------UPD MethodInvocation@@currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 15534 @LENGTH@ 69
---------UPD SimpleName@@MethodName:setChildTasks:[new ArrayList<Task<? extends Serializable>>()] @TO@ MethodName:setChildTasks:[new ArrayList<Task<?>>()] @AT@ 15543 @LENGTH@ 60
------------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 15557 @LENGTH@ 45
---------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 15561 @LENGTH@ 39
------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15571 @LENGTH@ 28


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get(); @AT@ 2203 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get() @AT@ 2215 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get() @AT@ 2223 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(!executable.isReadOnly()), name] @AT@ 2223 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(!executable.isReadOnly()) @AT@ 2263 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[!executable.isReadOnly()] @AT@ 2271 @LENGTH@ 24
------------------DEL BooleanLiteral@@true @AT@ 2290 @LENGTH@ 4
------------------INS PrefixExpression@@!executable.isReadOnly() @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 2443 @LENGTH@ 24
---------------------INS Operator@@! @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 2443 @LENGTH@ 1
---------------------INS MethodInvocation@@executable.isReadOnly() @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 2444 @LENGTH@ 23
------------------------INS SimpleName@@Name:executable @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 2444 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:isReadOnly:[] @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 2455 @LENGTH@ 12
------------INS SimpleName@@name @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2470 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]EndpointType,  @TO@ [static]EndpointType,  @AT@ 55884 @LENGTH@ 71
---DEL Modifier@@public @AT@ 55884 @LENGTH@ 6


UPD TypeDeclaration@@[public]ProviderConfiguration,  @TO@ [@Deprecated, public]ProviderConfiguration,  @AT@ 1015 @LENGTH@ 1623
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProviderConfiguration,  @AT@ 1193 @LENGTH@ 11


UPD FieldDeclaration@@protected, static, final, Logger, [LOG=LoggerFactory.getLogger(ProxyProtocolTest.class)] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(ProxyProtocolTest.class)] @AT@ 2447 @LENGTH@ 85
---UPD Modifier@@protected @TO@ private @AT@ 2447 @LENGTH@ 9


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthVersionUnsupportedException, InvalidOAuthParametersException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuthVersionUnsupportedException, InvalidOAuthParametersException @AT@ 681 @LENGTH@ 194
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthVersionUnsupportedException, InvalidOAuthParametersException @AT@ 930 @LENGTH@ 11


UPD TypeDeclaration@@[public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 910 @LENGTH@ 220
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1131 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DefaultServerOAuth2AuthorizationRequestResolverTests,  @AT@ 3675 @LENGTH@ 677
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 3675 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 3682 @LENGTH@ 4
---INS SimpleName@@MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 3687 @LENGTH@ 59
---INS ExpressionStatement@@MethodInvocation:when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration)) @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 3753 @LENGTH@ 114
------INS MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration)) @TO@ ExpressionStatement@@MethodInvocation:when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration)) @AT@ 3753 @LENGTH@ 113
---------INS MethodInvocation@@MethodName:when:[this.clientRegistrationRepository.findByRegistrationId(any())] @TO@ MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration)) @AT@ 3753 @LENGTH@ 67
------------INS MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @TO@ MethodInvocation@@MethodName:when:[this.clientRegistrationRepository.findByRegistrationId(any())] @AT@ 3758 @LENGTH@ 61
---------------INS FieldAccess@@this.clientRegistrationRepository @TO@ MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @AT@ 3758 @LENGTH@ 33
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3758 @LENGTH@ 4
------------------INS SimpleName@@clientRegistrationRepository @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3763 @LENGTH@ 28
---------------INS SimpleName@@MethodName:findByRegistrationId:[any()] @TO@ MethodInvocation@@this.clientRegistrationRepository.findByRegistrationId(any()) @AT@ 3792 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:findByRegistrationId:[any()] @AT@ 3813 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[Mono.just(this.registration)] @TO@ MethodInvocation@@when(this.clientRegistrationRepository.findByRegistrationId(any())).thenReturn(Mono.just(this.registration)) @AT@ 3821 @LENGTH@ 45
------------INS MethodInvocation@@Mono.just(this.registration) @TO@ SimpleName@@MethodName:thenReturn:[Mono.just(this.registration)] @AT@ 3837 @LENGTH@ 28
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(this.registration) @AT@ 3837 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[this.registration] @TO@ MethodInvocation@@Mono.just(this.registration) @AT@ 3842 @LENGTH@ 23
------------------INS FieldAccess@@this.registration @TO@ SimpleName@@MethodName:just:[this.registration] @AT@ 3847 @LENGTH@ 17
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 3847 @LENGTH@ 4
---------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 3852 @LENGTH@ 12
---INS VariableDeclarationStatement@@ServerWebExchange exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 3870 @LENGTH@ 150
------INS SimpleType@@ServerWebExchange @TO@ VariableDeclarationStatement@@ServerWebExchange exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")); @AT@ 3870 @LENGTH@ 17
------INS VariableDeclarationFragment@@exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @TO@ VariableDeclarationStatement@@ServerWebExchange exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")); @AT@ 3888 @LENGTH@ 131
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @AT@ 3888 @LENGTH@ 8
---------INS MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @TO@ VariableDeclarationFragment@@exchange=MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @AT@ 3899 @LENGTH@ 120
------------INS SimpleName@@Name:MockServerWebExchange @TO@ MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @AT@ 3899 @LENGTH@ 21
------------INS SimpleName@@MethodName:from:[MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")] @TO@ MethodInvocation@@MockServerWebExchange.from(MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")) @AT@ 3921 @LENGTH@ 98
---------------INS MethodInvocation@@MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com") @TO@ SimpleName@@MethodName:from:[MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com")] @AT@ 3926 @LENGTH@ 92
------------------INS MethodInvocation@@MethodName:get:["/oauth2/authorization/id"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com") @AT@ 3926 @LENGTH@ 53
---------------------INS StringLiteral@@"/oauth2/authorization/id" @TO@ MethodInvocation@@MethodName:get:["/oauth2/authorization/id"] @AT@ 3952 @LENGTH@ 26
------------------INS SimpleName@@Name:MockServerHttpRequest @TO@ MethodInvocation@@MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com") @AT@ 3926 @LENGTH@ 21
------------------INS SimpleName@@MethodName:header:["X-Forwarded-Host", "evil.com"] @TO@ MethodInvocation@@MockServerHttpRequest.get("/oauth2/authorization/id").header("X-Forwarded-Host","evil.com") @AT@ 3980 @LENGTH@ 38
---------------------INS StringLiteral@@"X-Forwarded-Host" @TO@ SimpleName@@MethodName:header:["X-Forwarded-Host", "evil.com"] @AT@ 3987 @LENGTH@ 18
---------------------INS StringLiteral@@"evil.com" @TO@ SimpleName@@MethodName:header:["X-Forwarded-Host", "evil.com"] @AT@ 4007 @LENGTH@ 10
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest request=this.resolver.resolve(exchange).block(); @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 4024 @LENGTH@ 77
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=this.resolver.resolve(exchange).block(); @AT@ 4024 @LENGTH@ 26
------INS VariableDeclarationFragment@@request=this.resolver.resolve(exchange).block() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=this.resolver.resolve(exchange).block(); @AT@ 4051 @LENGTH@ 49
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=this.resolver.resolve(exchange).block() @AT@ 4051 @LENGTH@ 7
---------INS MethodInvocation@@this.resolver.resolve(exchange).block() @TO@ VariableDeclarationFragment@@request=this.resolver.resolve(exchange).block() @AT@ 4061 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:resolve:[exchange] @TO@ MethodInvocation@@this.resolver.resolve(exchange).block() @AT@ 4061 @LENGTH@ 31
---------------INS SimpleName@@exchange @TO@ MethodInvocation@@MethodName:resolve:[exchange] @AT@ 4083 @LENGTH@ 8
------------INS FieldAccess@@this.resolver @TO@ MethodInvocation@@this.resolver.resolve(exchange).block() @AT@ 4061 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.resolver @AT@ 4061 @LENGTH@ 4
---------------INS SimpleName@@resolver @TO@ FieldAccess@@this.resolver @AT@ 4066 @LENGTH@ 8
------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.resolver.resolve(exchange).block() @AT@ 4093 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id") @TO@ MethodDeclaration@@public, void, MethodName:resolveWhenForwardedHeadersClientRegistrationFoundThenWorks,  @AT@ 4105 @LENGTH@ 244
------INS MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id") @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id") @AT@ 4105 @LENGTH@ 243
---------INS MethodInvocation@@MethodName:assertThat:[request.getAuthorizationRequestUri()] @TO@ MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id") @AT@ 4105 @LENGTH@ 48
------------INS MethodInvocation@@request.getAuthorizationRequestUri() @TO@ MethodInvocation@@MethodName:assertThat:[request.getAuthorizationRequestUri()] @AT@ 4116 @LENGTH@ 36
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getAuthorizationRequestUri() @AT@ 4116 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAuthorizationRequestUri:[] @TO@ MethodInvocation@@request.getAuthorizationRequestUri() @AT@ 4124 @LENGTH@ 28
---------INS SimpleName@@MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id"] @TO@ MethodInvocation@@assertThat(request.getAuthorizationRequestUri()).matches("https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id") @AT@ 4154 @LENGTH@ 194
------------INS InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @TO@ SimpleName@@MethodName:matches:["https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id"] @AT@ 4162 @LENGTH@ 185
---------------INS StringLiteral@@"https://example.com/login/oauth/authorize\\?" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @AT@ 4162 @LENGTH@ 46
---------------INS Operator@@+ @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @AT@ 4208 @LENGTH@ 1
---------------INS StringLiteral@@"response_type=code&client_id=client-id&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @AT@ 4215 @LENGTH@ 41
---------------INS StringLiteral@@"scope=read:user&state=.*?&" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @AT@ 4263 @LENGTH@ 28
---------------INS StringLiteral@@"redirect_uri=/login/oauth2/code/registration-id" @TO@ InfixExpression@@"https://example.com/login/oauth/authorize\\?" + "response_type=code&client_id=client-id&" + "scope=read:user&state=.*?&"+ "redirect_uri=/login/oauth2/code/registration-id" @AT@ 4298 @LENGTH@ 49


UPD TypeDeclaration@@[public]OAuthProcessingFilterEntryPoint, [AuthenticationEntryPoint] @TO@ [@Deprecated, public]OAuthProcessingFilterEntryPoint, [AuthenticationEntryPoint] @AT@ 1124 @LENGTH@ 1035
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProcessingFilterEntryPoint, [AuthenticationEntryPoint] @AT@ 1345 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerSecurityConfig, SecurityConfig @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ConsumerSecurityConfig, SecurityConfig @AT@ 815 @LENGTH@ 826
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerSecurityConfig, SecurityConfig @AT@ 1063 @LENGTH@ 11


UPD VariableDeclarationStatement@@MongoConfiguration mongoConf=new MongoConfiguration(cast(parameters)); @TO@ ConnectionParamsConfiguration mongoConf=new ConnectionParamsConfiguration(cast(parameters)); @AT@ 2728 @LENGTH@ 72
---UPD SimpleType@@MongoConfiguration @TO@ ConnectionParamsConfiguration @AT@ 2728 @LENGTH@ 18
---UPD VariableDeclarationFragment@@mongoConf=new MongoConfiguration(cast(parameters)) @TO@ mongoConf=new ConnectionParamsConfiguration(cast(parameters)) @AT@ 2747 @LENGTH@ 52
------UPD ClassInstanceCreation@@MongoConfiguration[cast(parameters)] @TO@ ConnectionParamsConfiguration[cast(parameters)] @AT@ 2759 @LENGTH@ 40
---------UPD SimpleType@@MongoConfiguration @TO@ ConnectionParamsConfiguration @AT@ 2763 @LENGTH@ 18


DEL MethodDeclaration@@public, void, MethodName:oauth2LoginWhenAuthenticatedThenIgnored, Exception,  @AT@ 9524 @LENGTH@ 926
---DEL Modifier@@public @AT@ 9524 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 9531 @LENGTH@ 4
---DEL SimpleName@@MethodName:oauth2LoginWhenAuthenticatedThenIgnored @AT@ 9536 @LENGTH@ 39
---DEL SimpleType@@Exception @AT@ 9585 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:loadConfig(OAuth2LoginConfig.class) @AT@ 9630 @LENGTH@ 36
------DEL MethodInvocation@@loadConfig(OAuth2LoginConfig.class) @AT@ 9630 @LENGTH@ 35
---------DEL SimpleName@@MethodName:loadConfig:[OAuth2LoginConfig.class] @AT@ 9630 @LENGTH@ 35
------------DEL TypeLiteral@@OAuth2LoginConfig.class @AT@ 9641 @LENGTH@ 23
---DEL VariableDeclarationStatement@@TestingAuthenticationToken expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST"); @AT@ 9688 @LENGTH@ 110
------DEL SimpleType@@TestingAuthenticationToken @AT@ 9688 @LENGTH@ 26
------DEL VariableDeclarationFragment@@expectedAuthentication=new TestingAuthenticationToken("a","b","ROLE_TEST") @AT@ 9715 @LENGTH@ 82
---------DEL SimpleName@@expectedAuthentication @AT@ 9715 @LENGTH@ 22
---------DEL ClassInstanceCreation@@TestingAuthenticationToken["a", "b", "ROLE_TEST"] @AT@ 9740 @LENGTH@ 57
------------DEL New@@new @AT@ 9740 @LENGTH@ 3
------------DEL SimpleType@@TestingAuthenticationToken @AT@ 9744 @LENGTH@ 26
------------DEL StringLiteral@@"a" @AT@ 9771 @LENGTH@ 3
------------DEL StringLiteral@@"b" @AT@ 9780 @LENGTH@ 3
------------DEL StringLiteral@@"ROLE_TEST" @AT@ 9785 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 9802 @LENGTH@ 154
------DEL MethodInvocation@@this.request.getSession().setAttribute(HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY,new SecurityContextImpl(expectedAuthentication)) @AT@ 9802 @LENGTH@ 153
---------DEL MethodInvocation@@MethodName:getSession:[] @AT@ 9802 @LENGTH@ 25
---------DEL FieldAccess@@this.request @AT@ 9802 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 9802 @LENGTH@ 4
------------DEL SimpleName@@request @AT@ 9807 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setAttribute:[HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY, new SecurityContextImpl(expectedAuthentication)] @AT@ 9828 @LENGTH@ 127
------------DEL QualifiedName@@HttpSessionSecurityContextRepository.SPRING_SECURITY_CONTEXT_KEY @AT@ 9841 @LENGTH@ 64
---------------DEL SimpleName@@HttpSessionSecurityContextRepository @AT@ 9841 @LENGTH@ 36
---------------DEL SimpleName@@SPRING_SECURITY_CONTEXT_KEY @AT@ 9878 @LENGTH@ 27
------------DEL ClassInstanceCreation@@SecurityContextImpl[expectedAuthentication] @AT@ 9907 @LENGTH@ 47
---------------DEL New@@new @AT@ 9907 @LENGTH@ 3
---------------DEL SimpleType@@SecurityContextImpl @AT@ 9911 @LENGTH@ 19
---------------DEL SimpleName@@expectedAuthentication @AT@ 9931 @LENGTH@ 22
---DEL ExpressionStatement@@MethodInvocation:this.request.setParameter("code","code123") @AT@ 9997 @LENGTH@ 45
------DEL MethodInvocation@@this.request.setParameter("code","code123") @AT@ 9997 @LENGTH@ 44
---------DEL FieldAccess@@this.request @AT@ 9997 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 9997 @LENGTH@ 4
------------DEL SimpleName@@request @AT@ 10002 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setParameter:["code", "code123"] @AT@ 10010 @LENGTH@ 31
------------DEL StringLiteral@@"code" @AT@ 10023 @LENGTH@ 6
------------DEL StringLiteral@@"code123" @AT@ 10031 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:this.request.setParameter("state","state") @AT@ 10045 @LENGTH@ 44
------DEL MethodInvocation@@this.request.setParameter("state","state") @AT@ 10045 @LENGTH@ 43
---------DEL FieldAccess@@this.request @AT@ 10045 @LENGTH@ 12
------------DEL ThisExpression@@this @AT@ 10045 @LENGTH@ 4
------------DEL SimpleName@@request @AT@ 10050 @LENGTH@ 7
---------DEL SimpleName@@MethodName:setParameter:["state", "state"] @AT@ 10058 @LENGTH@ 30
------------DEL StringLiteral@@"state" @AT@ 10071 @LENGTH@ 7
------------DEL StringLiteral@@"state" @AT@ 10080 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 10111 @LENGTH@ 87
------DEL MethodInvocation@@this.springSecurityFilterChain.doFilter(this.request,this.response,this.filterChain) @AT@ 10111 @LENGTH@ 86
---------DEL FieldAccess@@this.springSecurityFilterChain @AT@ 10111 @LENGTH@ 30
------------DEL ThisExpression@@this @AT@ 10111 @LENGTH@ 4
------------DEL SimpleName@@springSecurityFilterChain @AT@ 10116 @LENGTH@ 25
---------DEL SimpleName@@MethodName:doFilter:[this.request, this.response, this.filterChain] @AT@ 10142 @LENGTH@ 55
------------DEL FieldAccess@@this.request @AT@ 10151 @LENGTH@ 12
---------------DEL ThisExpression@@this @AT@ 10151 @LENGTH@ 4
---------------DEL SimpleName@@request @AT@ 10156 @LENGTH@ 7
------------DEL FieldAccess@@this.response @AT@ 10165 @LENGTH@ 13
---------------DEL ThisExpression@@this @AT@ 10165 @LENGTH@ 4
---------------DEL SimpleName@@response @AT@ 10170 @LENGTH@ 8
------------DEL FieldAccess@@this.filterChain @AT@ 10180 @LENGTH@ 16
---------------DEL ThisExpression@@this @AT@ 10180 @LENGTH@ 4
---------------DEL SimpleName@@filterChain @AT@ 10185 @LENGTH@ 11
---DEL VariableDeclarationStatement@@Authentication authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication(); @AT@ 10218 @LENGTH@ 165
------DEL SimpleType@@Authentication @AT@ 10218 @LENGTH@ 14
------DEL VariableDeclarationFragment@@authentication=this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 10233 @LENGTH@ 149
---------DEL SimpleName@@authentication @AT@ 10233 @LENGTH@ 14
---------DEL MethodInvocation@@this.securityContextRepository.loadContext(new HttpRequestResponseHolder(this.request,this.response)).getAuthentication() @AT@ 10250 @LENGTH@ 132
------------DEL MethodInvocation@@MethodName:loadContext:[new HttpRequestResponseHolder(this.request,this.response)] @AT@ 10250 @LENGTH@ 107
---------------DEL ClassInstanceCreation@@HttpRequestResponseHolder[this.request, this.response] @AT@ 10298 @LENGTH@ 58
------------------DEL New@@new @AT@ 10298 @LENGTH@ 3
------------------DEL SimpleType@@HttpRequestResponseHolder @AT@ 10302 @LENGTH@ 25
------------------DEL FieldAccess@@this.request @AT@ 10328 @LENGTH@ 12
---------------------DEL ThisExpression@@this @AT@ 10328 @LENGTH@ 4
---------------------DEL SimpleName@@request @AT@ 10333 @LENGTH@ 7
------------------DEL FieldAccess@@this.response @AT@ 10342 @LENGTH@ 13
---------------------DEL ThisExpression@@this @AT@ 10342 @LENGTH@ 4
---------------------DEL SimpleName@@response @AT@ 10347 @LENGTH@ 8
------------DEL FieldAccess@@this.securityContextRepository @AT@ 10250 @LENGTH@ 30
---------------DEL ThisExpression@@this @AT@ 10250 @LENGTH@ 4
---------------DEL SimpleName@@securityContextRepository @AT@ 10255 @LENGTH@ 25
------------DEL SimpleName@@MethodName:getAuthentication:[] @AT@ 10363 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:assertThat(authentication).isEqualTo(expectedAuthentication) @AT@ 10386 @LENGTH@ 61
------DEL MethodInvocation@@assertThat(authentication).isEqualTo(expectedAuthentication) @AT@ 10386 @LENGTH@ 60
---------DEL MethodInvocation@@MethodName:assertThat:[authentication] @AT@ 10386 @LENGTH@ 26
------------DEL SimpleName@@authentication @AT@ 10397 @LENGTH@ 14
---------DEL SimpleName@@MethodName:isEqualTo:[expectedAuthentication] @AT@ 10413 @LENGTH@ 33
------------DEL SimpleName@@expectedAuthentication @AT@ 10423 @LENGTH@ 22


UPD TypeDeclaration@@[public]OAuth2WebSecurityExpressionHandler, DefaultWebSecurityExpressionHandler @TO@ [@Deprecated, public]OAuth2WebSecurityExpressionHandler, DefaultWebSecurityExpressionHandler @AT@ 1676 @LENGTH@ 562
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2WebSecurityExpressionHandler, DefaultWebSecurityExpressionHandler @AT@ 1853 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]InfinispanOperation,  @TO@ [static]InfinispanOperation,  @AT@ 46333 @LENGTH@ 274
---DEL Modifier@@public @AT@ 46333 @LENGTH@ 6


UPD VariableDeclarationStatement@@NestedDelegatingExpressionAggregationOperationContext nea=new NestedDelegatingExpressionAggregationOperationContext(context); @TO@ NestedDelegatingExpressionAggregationOperationContext nea=new NestedDelegatingExpressionAggregationOperationContext(context,Collections.singleton(as)); @AT@ 18050 @LENGTH@ 133
---UPD VariableDeclarationFragment@@nea=new NestedDelegatingExpressionAggregationOperationContext(context) @TO@ nea=new NestedDelegatingExpressionAggregationOperationContext(context,Collections.singleton(as)) @AT@ 18104 @LENGTH@ 78
------UPD ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[context] @TO@ NestedDelegatingExpressionAggregationOperationContext[context, Collections.singleton(as)] @AT@ 18110 @LENGTH@ 72
---------INS MethodInvocation@@Collections.singleton(as) @TO@ ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[context] @AT@ 18183 @LENGTH@ 25
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(as) @AT@ 18183 @LENGTH@ 11
------------INS SimpleName@@MethodName:singleton:[as] @TO@ MethodInvocation@@Collections.singleton(as) @AT@ 18195 @LENGTH@ 13
---------------INS SimpleName@@as @TO@ SimpleName@@MethodName:singleton:[as] @AT@ 18205 @LENGTH@ 2


UPD TypeDeclaration@@[public, static]ClassEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ClassEndpointBuilder, [EndpointProducerBuilder] @AT@ 1431 @LENGTH@ 2564
---DEL Modifier@@static @AT@ 1438 @LENGTH@ 6


UPD EnhancedForStatement@@for (Task<? extends Serializable> task : pctx.getRootTasks()) {  if (task instanceof SparkTask) {    splitSparkWork(((SparkTask)task).getWork());  }} @TO@ for (Task<?> task : pctx.getRootTasks()) {  if (task instanceof SparkTask) {    splitSparkWork(((SparkTask)task).getWork());  }} @AT@ 2320 @LENGTH@ 170
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 2325 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2325 @LENGTH@ 28


UPD MethodDeclaration@@default, CassandraEndpointBuilder, MethodName:cassandra, String path,  @TO@ default, CassandraEndpointBuilder, MethodName:cql, String path,  @AT@ 50939 @LENGTH@ 388
---UPD SimpleName@@MethodName:cassandra @TO@ MethodName:cql @AT@ 50972 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 2065 @LENGTH@ 732
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    assertEquals(70010,exchange.getIn().getBody(byte[].class).length);
    MDM_T02 input=(MDM_T02)exchange.getIn().getBody(Message.class);
    assertEquals("2.5",input.getVersion());
    MSH msh=input.getMSH();
    assertEquals("20071129144629",msh.getDateTimeOfMessage().getTime().getValue());
    exchange.getOut().setBody("some response");
  }
}
).to("mock:result") @AT@ 2065 @LENGTH@ 731
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder"] @AT@ 2065 @LENGTH@ 98
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @AT@ 2070 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2070 @LENGTH@ 25


UPD ReturnStatement@@ClassInstanceCreation:new Saml2AuthenticationRequest(localSpEntityId,Saml2Utils.resolveUrlTemplate(relyingParty.getAssertionConsumerServiceUrlTemplate(),Saml2Utils.getApplicationUri(request),relyingParty.getRemoteIdpEntityId(),relyingParty.getRegistrationId()),relyingParty.getSigningCredentials()) @TO@ ClassInstanceCreation:new Saml2AuthenticationRequest(localSpEntityId,relyingParty.getIdpWebSsoUrl(),relyingParty.getSigningCredentials()) @AT@ 5242 @LENGTH@ 335
---UPD ClassInstanceCreation@@Saml2AuthenticationRequest[localSpEntityId, Saml2Utils.resolveUrlTemplate(relyingParty.getAssertionConsumerServiceUrlTemplate(),Saml2Utils.getApplicationUri(request),relyingParty.getRemoteIdpEntityId(),relyingParty.getRegistrationId()), relyingParty.getSigningCredentials()] @TO@ Saml2AuthenticationRequest[localSpEntityId, relyingParty.getIdpWebSsoUrl(), relyingParty.getSigningCredentials()] @AT@ 5249 @LENGTH@ 327
------DEL MethodInvocation@@Saml2Utils.resolveUrlTemplate(relyingParty.getAssertionConsumerServiceUrlTemplate(),Saml2Utils.getApplicationUri(request),relyingParty.getRemoteIdpEntityId(),relyingParty.getRegistrationId()) @AT@ 5306 @LENGTH@ 224
---------DEL SimpleName@@Name:Saml2Utils @AT@ 5306 @LENGTH@ 10
---------DEL SimpleName@@MethodName:resolveUrlTemplate:[relyingParty.getAssertionConsumerServiceUrlTemplate(), Saml2Utils.getApplicationUri(request), relyingParty.getRemoteIdpEntityId(), relyingParty.getRegistrationId()] @AT@ 5317 @LENGTH@ 213
------------DEL MethodInvocation@@relyingParty.getAssertionConsumerServiceUrlTemplate() @AT@ 5343 @LENGTH@ 53
---------------DEL SimpleName@@Name:relyingParty @AT@ 5343 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getAssertionConsumerServiceUrlTemplate:[] @AT@ 5356 @LENGTH@ 40
------------DEL MethodInvocation@@Saml2Utils.getApplicationUri(request) @AT@ 5404 @LENGTH@ 37
---------------DEL SimpleName@@Name:Saml2Utils @AT@ 5404 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getApplicationUri:[request] @AT@ 5415 @LENGTH@ 26
------------------DEL SimpleName@@request @AT@ 5433 @LENGTH@ 7
------------DEL MethodInvocation@@relyingParty.getRemoteIdpEntityId() @AT@ 5449 @LENGTH@ 35
------------DEL MethodInvocation@@relyingParty.getRegistrationId() @AT@ 5492 @LENGTH@ 32
---------------DEL SimpleName@@Name:relyingParty @AT@ 5492 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getRegistrationId:[] @AT@ 5505 @LENGTH@ 19
------INS MethodInvocation@@relyingParty.getIdpWebSsoUrl() @TO@ ClassInstanceCreation@@Saml2AuthenticationRequest[localSpEntityId, Saml2Utils.resolveUrlTemplate(relyingParty.getAssertionConsumerServiceUrlTemplate(),Saml2Utils.getApplicationUri(request),relyingParty.getRemoteIdpEntityId(),relyingParty.getRegistrationId()), relyingParty.getSigningCredentials()] @AT@ 5306 @LENGTH@ 30
---------MOV SimpleName@@Name:relyingParty @TO@ MethodInvocation@@relyingParty.getIdpWebSsoUrl() @AT@ 5449 @LENGTH@ 12
---------MOV SimpleName@@MethodName:getRemoteIdpEntityId:[] @TO@ MethodInvocation@@relyingParty.getIdpWebSsoUrl() @AT@ 5462 @LENGTH@ 22


UPD TypeDeclaration@@[public]DefaultClientAuthenticationHandler, [ClientAuthenticationHandler] @TO@ [@Deprecated, public]DefaultClientAuthenticationHandler, [ClientAuthenticationHandler] @AT@ 588 @LENGTH@ 1332
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultClientAuthenticationHandler, [ClientAuthenticationHandler] @AT@ 765 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 5152 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 5159 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 5159 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 5159 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 5159 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 5164 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 5159 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 5180 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 5189 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 5189 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 5201 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 5201 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 5206 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 5189 @LENGTH@ 7


UPD TypeDeclaration@@[public]SerializationUtils,  @TO@ [@Deprecated, public]SerializationUtils,  @AT@ 1478 @LENGTH@ 1333
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SerializationUtils,  @AT@ 1659 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:this.getAttributes().get(this.nameAttributeKey).toString() @TO@ MethodInvocation:this.getAttribute(this.nameAttributeKey).toString() @AT@ 3017 @LENGTH@ 66
---UPD MethodInvocation@@this.getAttributes().get(this.nameAttributeKey).toString() @TO@ this.getAttribute(this.nameAttributeKey).toString() @AT@ 3024 @LENGTH@ 58
------UPD MethodInvocation@@MethodName:get:[this.nameAttributeKey] @TO@ MethodName:getAttribute:[this.nameAttributeKey] @AT@ 3024 @LENGTH@ 47
------DEL MethodInvocation@@MethodName:getAttributes:[] @AT@ 3024 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2204 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2204 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2204 @LENGTH@ 86
---------INS MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 2215 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2215 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2215 @LENGTH@ 42
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 2241 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2215 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2215 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2269 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 2278 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]AdvancedHazelcastInstanceEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedHazelcastInstanceEndpointBuilder, [EndpointConsumerBuilder] @AT@ 9930 @LENGTH@ 2173
---DEL Modifier@@static @AT@ 9937 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedGoogleBigQuerySQLEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGoogleBigQuerySQLEndpointBuilder, [EndpointProducerBuilder] @AT@ 3488 @LENGTH@ 2173
---DEL Modifier@@static @AT@ 3495 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.objectMapper=objectMapper @TO@ Assignment:this.objectMapper=objectMapper.copy() @AT@ 2480 @LENGTH@ 33
---UPD Assignment@@this.objectMapper=objectMapper @TO@ this.objectMapper=objectMapper.copy() @AT@ 2480 @LENGTH@ 32
------INS MethodInvocation@@objectMapper.copy() @TO@ Assignment@@this.objectMapper=objectMapper @AT@ 2500 @LENGTH@ 19
---------INS SimpleName@@Name:objectMapper @TO@ MethodInvocation@@objectMapper.copy() @AT@ 2500 @LENGTH@ 12
---------INS SimpleName@@MethodName:copy:[] @TO@ MethodInvocation@@objectMapper.copy() @AT@ 2513 @LENGTH@ 6
------DEL SimpleName@@objectMapper @AT@ 2500 @LENGTH@ 12


UPD TypeDeclaration@@[public]WebExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]WebExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 914 @LENGTH@ 219
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]WebExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1092 @LENGTH@ 11


UPD MethodDeclaration@@default, MQEndpointBuilder, MethodName:mQ, String path,  @TO@ default, MQEndpointBuilder, MethodName:awsMq, String path,  @AT@ 4969 @LENGTH@ 342
---UPD SimpleName@@MethodName:mQ @TO@ MethodName:awsMq @AT@ 4995 @LENGTH@ 2


UPD TypeDeclaration@@[public]RestTemplateBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]RestTemplateBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1405 @LENGTH@ 2804
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RestTemplateBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1583 @LENGTH@ 11


UPD TryStatement@@try {  AuditEndpoint endpoint=setupEndpointBadUdpReconnectAttempts(-1);  if (!Thread.currentThread().isInterrupted()) {    this.failString="No error was thrown while attempting to log to a bad IP with UDP.";  }} catch (Exception e) {  this.failString="An unexpected error has occurred: " + e.getMessage();} @TO@ try {  SyslogAuditEndpoint endpoint=(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1);  int attemptNumber=1;  int currentAttempts=endpoint.getAttempts();  while (attemptNumber == currentAttempts || currentAttempts == -1) {    endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");    currentAttempts=endpoint.getAttempts();    if (currentAttempts != -1) {      attemptNumber++;    }    if (Thread.currentThread().isInterrupted()) {      break;    }  }  if (!Thread.currentThread().isInterrupted()) {    this.failString="No error was thrown while attempting to log to a bad IP with UDP.";  }} catch (Exception e) {  this.failString="An unexpected error has occurred: " + e.getMessage();} @AT@ 4617 @LENGTH@ 518
---UPD VariableDeclarationStatement@@AuditEndpoint endpoint=setupEndpointBadUdpReconnectAttempts(-1); @TO@ SyslogAuditEndpoint endpoint=(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1); @AT@ 4742 @LENGTH@ 66
------UPD SimpleType@@AuditEndpoint @TO@ SyslogAuditEndpoint @AT@ 4742 @LENGTH@ 13
------UPD VariableDeclarationFragment@@endpoint=setupEndpointBadUdpReconnectAttempts(-1) @TO@ endpoint=(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1) @AT@ 4756 @LENGTH@ 51
---------INS CastExpression@@(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1) @TO@ VariableDeclarationFragment@@endpoint=setupEndpointBadUdpReconnectAttempts(-1) @AT@ 4774 @LENGTH@ 62
------------MOV MethodInvocation@@setupEndpointBadUdpReconnectAttempts(-1) @TO@ CastExpression@@(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1) @AT@ 4767 @LENGTH@ 40
------------INS SimpleType@@SyslogAuditEndpoint @TO@ CastExpression@@(SyslogAuditEndpoint)setupEndpointBadUdpReconnectAttempts(-1) @AT@ 4775 @LENGTH@ 19
---INS VariableDeclarationStatement@@int attemptNumber=1; @TO@ TryStatement@@try {  AuditEndpoint endpoint=setupEndpointBadUdpReconnectAttempts(-1);  if (!Thread.currentThread().isInterrupted()) {    this.failString="No error was thrown while attempting to log to a bad IP with UDP.";  }} catch (Exception e) {  this.failString="An unexpected error has occurred: " + e.getMessage();} @AT@ 4854 @LENGTH@ 22
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int attemptNumber=1; @AT@ 4854 @LENGTH@ 3
------INS VariableDeclarationFragment@@attemptNumber=1 @TO@ VariableDeclarationStatement@@int attemptNumber=1; @AT@ 4858 @LENGTH@ 17
---------INS SimpleName@@attemptNumber @TO@ VariableDeclarationFragment@@attemptNumber=1 @AT@ 4858 @LENGTH@ 13
---------INS NumberLiteral@@1 @TO@ VariableDeclarationFragment@@attemptNumber=1 @AT@ 4874 @LENGTH@ 1
---INS VariableDeclarationStatement@@int currentAttempts=endpoint.getAttempts(); @TO@ TryStatement@@try {  AuditEndpoint endpoint=setupEndpointBadUdpReconnectAttempts(-1);  if (!Thread.currentThread().isInterrupted()) {    this.failString="No error was thrown while attempting to log to a bad IP with UDP.";  }} catch (Exception e) {  this.failString="An unexpected error has occurred: " + e.getMessage();} @AT@ 4893 @LENGTH@ 45
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int currentAttempts=endpoint.getAttempts(); @AT@ 4893 @LENGTH@ 3
------INS VariableDeclarationFragment@@currentAttempts=endpoint.getAttempts() @TO@ VariableDeclarationStatement@@int currentAttempts=endpoint.getAttempts(); @AT@ 4897 @LENGTH@ 40
---------INS SimpleName@@currentAttempts @TO@ VariableDeclarationFragment@@currentAttempts=endpoint.getAttempts() @AT@ 4897 @LENGTH@ 15
---------INS MethodInvocation@@endpoint.getAttempts() @TO@ VariableDeclarationFragment@@currentAttempts=endpoint.getAttempts() @AT@ 4915 @LENGTH@ 22
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getAttempts() @AT@ 4915 @LENGTH@ 8
------------INS SimpleName@@MethodName:getAttempts:[] @TO@ MethodInvocation@@endpoint.getAttempts() @AT@ 4924 @LENGTH@ 13
---INS WhileStatement@@while (attemptNumber == currentAttempts || currentAttempts == -1) {  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @TO@ TryStatement@@try {  AuditEndpoint endpoint=setupEndpointBadUdpReconnectAttempts(-1);  if (!Thread.currentThread().isInterrupted()) {    this.failString="No error was thrown while attempting to log to a bad IP with UDP.";  }} catch (Exception e) {  this.failString="An unexpected error has occurred: " + e.getMessage();} @AT@ 4955 @LENGTH@ 487
------INS InfixExpression@@attemptNumber == currentAttempts || currentAttempts == -1 @TO@ WhileStatement@@while (attemptNumber == currentAttempts || currentAttempts == -1) {  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 4961 @LENGTH@ 57
---------INS InfixExpression@@attemptNumber == currentAttempts @TO@ InfixExpression@@attemptNumber == currentAttempts || currentAttempts == -1 @AT@ 4961 @LENGTH@ 32
------------INS SimpleName@@attemptNumber @TO@ InfixExpression@@attemptNumber == currentAttempts @AT@ 4961 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@attemptNumber == currentAttempts @AT@ 4974 @LENGTH@ 2
------------INS SimpleName@@currentAttempts @TO@ InfixExpression@@attemptNumber == currentAttempts @AT@ 4978 @LENGTH@ 15
---------INS Operator@@|| @TO@ InfixExpression@@attemptNumber == currentAttempts || currentAttempts == -1 @AT@ 4993 @LENGTH@ 2
---------INS InfixExpression@@currentAttempts == -1 @TO@ InfixExpression@@attemptNumber == currentAttempts || currentAttempts == -1 @AT@ 4997 @LENGTH@ 21
------------INS SimpleName@@currentAttempts @TO@ InfixExpression@@currentAttempts == -1 @AT@ 4997 @LENGTH@ 15
------------INS Operator@@== @TO@ InfixExpression@@currentAttempts == -1 @AT@ 5012 @LENGTH@ 2
------------INS PrefixExpression@@-1 @TO@ InfixExpression@@currentAttempts == -1 @AT@ 5016 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 5016 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 5017 @LENGTH@ 1
------INS Block@@WhileBody:{  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @TO@ WhileStatement@@while (attemptNumber == currentAttempts || currentAttempts == -1) {  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 5020 @LENGTH@ 422
---------INS ExpressionStatement@@MethodInvocation:endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.") @TO@ Block@@WhileBody:{  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 5042 @LENGTH@ 89
------------INS MethodInvocation@@endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.") @TO@ ExpressionStatement@@MethodInvocation:endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.") @AT@ 5042 @LENGTH@ 88
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.") @AT@ 5042 @LENGTH@ 8
---------------INS SimpleName@@MethodName:accept:[EventPriority.INFORMATIONAL, "This is a test message that should fail."] @TO@ MethodInvocation@@endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.") @AT@ 5051 @LENGTH@ 79
------------------INS QualifiedName@@EventPriority.INFORMATIONAL @TO@ SimpleName@@MethodName:accept:[EventPriority.INFORMATIONAL, "This is a test message that should fail."] @AT@ 5058 @LENGTH@ 27
---------------------INS SimpleName@@EventPriority @TO@ QualifiedName@@EventPriority.INFORMATIONAL @AT@ 5058 @LENGTH@ 13
---------------------INS SimpleName@@INFORMATIONAL @TO@ QualifiedName@@EventPriority.INFORMATIONAL @AT@ 5072 @LENGTH@ 13
------------------INS StringLiteral@@"This is a test message that should fail." @TO@ SimpleName@@MethodName:accept:[EventPriority.INFORMATIONAL, "This is a test message that should fail."] @AT@ 5087 @LENGTH@ 42
---------INS ExpressionStatement@@Assignment:currentAttempts=endpoint.getAttempts() @TO@ Block@@WhileBody:{  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 5152 @LENGTH@ 41
------------INS Assignment@@currentAttempts=endpoint.getAttempts() @TO@ ExpressionStatement@@Assignment:currentAttempts=endpoint.getAttempts() @AT@ 5152 @LENGTH@ 40
---------------INS SimpleName@@currentAttempts @TO@ Assignment@@currentAttempts=endpoint.getAttempts() @AT@ 5152 @LENGTH@ 15
---------------INS Operator@@= @TO@ Assignment@@currentAttempts=endpoint.getAttempts() @AT@ 5167 @LENGTH@ 1
---------------INS MethodInvocation@@endpoint.getAttempts() @TO@ Assignment@@currentAttempts=endpoint.getAttempts() @AT@ 5170 @LENGTH@ 22
------------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getAttempts() @AT@ 5170 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getAttempts:[] @TO@ MethodInvocation@@endpoint.getAttempts() @AT@ 5179 @LENGTH@ 13
---------INS IfStatement@@if (currentAttempts != -1) {  attemptNumber++;} @TO@ Block@@WhileBody:{  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 5214 @LENGTH@ 91
------------INS InfixExpression@@currentAttempts != -1 @TO@ IfStatement@@if (currentAttempts != -1) {  attemptNumber++;} @AT@ 5218 @LENGTH@ 21
---------------INS SimpleName@@currentAttempts @TO@ InfixExpression@@currentAttempts != -1 @AT@ 5218 @LENGTH@ 15
---------------INS Operator@@!= @TO@ InfixExpression@@currentAttempts != -1 @AT@ 5233 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@currentAttempts != -1 @AT@ 5237 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 5237 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 5238 @LENGTH@ 1
------------INS Block@@ThenBody:{  attemptNumber++;} @TO@ IfStatement@@if (currentAttempts != -1) {  attemptNumber++;} @AT@ 5241 @LENGTH@ 64
---------------INS ExpressionStatement@@PostfixExpression:attemptNumber++ @TO@ Block@@ThenBody:{  attemptNumber++;} @AT@ 5267 @LENGTH@ 16
------------------INS PostfixExpression@@attemptNumber++ @TO@ ExpressionStatement@@PostfixExpression:attemptNumber++ @AT@ 5267 @LENGTH@ 15
---------------------INS SimpleName@@attemptNumber @TO@ PostfixExpression@@attemptNumber++ @AT@ 5267 @LENGTH@ 13
---------------------INS Operator@@++ @TO@ PostfixExpression@@attemptNumber++ @AT@ 5281 @LENGTH@ 2
---------INS IfStatement@@if (Thread.currentThread().isInterrupted()) {  break;} @TO@ Block@@WhileBody:{  endpoint.accept(EventPriority.INFORMATIONAL,"This is a test message that should fail.");  currentAttempts=endpoint.getAttempts();  if (currentAttempts != -1) {    attemptNumber++;  }  if (Thread.currentThread().isInterrupted()) {    break;  }} @AT@ 5326 @LENGTH@ 98
------------INS MethodInvocation@@Thread.currentThread().isInterrupted() @TO@ IfStatement@@if (Thread.currentThread().isInterrupted()) {  break;} @AT@ 5330 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().isInterrupted() @AT@ 5330 @LENGTH@ 22
---------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().isInterrupted() @AT@ 5330 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isInterrupted:[] @TO@ MethodInvocation@@Thread.currentThread().isInterrupted() @AT@ 5353 @LENGTH@ 15
------------INS Block@@ThenBody:{  break;} @TO@ IfStatement@@if (Thread.currentThread().isInterrupted()) {  break;} @AT@ 5370 @LENGTH@ 54
---------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  break;} @AT@ 5396 @LENGTH@ 6


UPD TypeDeclaration@@[public]SerializationStrategy,  @TO@ [@Deprecated, public]SerializationStrategy,  @AT@ 789 @LENGTH@ 454
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SerializationStrategy,  @AT@ 967 @LENGTH@ 11


UPD TypeDeclaration@@[public, abstract]RandomValueAuthorizationCodeServices, [AuthorizationCodeServices] @TO@ [@Deprecated, public, abstract]RandomValueAuthorizationCodeServices, [AuthorizationCodeServices] @AT@ 463 @LENGTH@ 765
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]RandomValueAuthorizationCodeServices, [AuthorizationCodeServices] @AT@ 640 @LENGTH@ 11


UPD VariableDeclarationStatement@@String[] operationNamesInEnum=Arrays.stream(OperationName.values()).map(OperationName::value).toArray((length) -> new String[length]); @TO@ String[] operationNamesInEnum=Arrays.stream(OperationName.values()).map(OperationName::value).toArray(length -> new String[length]); @AT@ 1487 @LENGTH@ 136
---UPD VariableDeclarationFragment@@operationNamesInEnum=Arrays.stream(OperationName.values()).map(OperationName::value).toArray((length) -> new String[length]) @TO@ operationNamesInEnum=Arrays.stream(OperationName.values()).map(OperationName::value).toArray(length -> new String[length]) @AT@ 1496 @LENGTH@ 126
------UPD MethodInvocation@@Arrays.stream(OperationName.values()).map(OperationName::value).toArray((length) -> new String[length]) @TO@ Arrays.stream(OperationName.values()).map(OperationName::value).toArray(length -> new String[length]) @AT@ 1519 @LENGTH@ 103
---------UPD SimpleName@@MethodName:toArray:[(length) -> new String[length]] @TO@ MethodName:toArray:[length -> new String[length]] @AT@ 1583 @LENGTH@ 39
------------UPD LambdaExpression@@(length) -> new String[length] @TO@ length -> new String[length] @AT@ 1591 @LENGTH@ 30


UPD TypeDeclaration@@[public, static]RssEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]RssEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1405 @LENGTH@ 6008
---DEL Modifier@@static @AT@ 1412 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]ExecutorType,  @TO@ [static]ExecutorType,  @AT@ 40287 @LENGTH@ 69
---DEL Modifier@@public @AT@ 40287 @LENGTH@ 6


UPD MethodDeclaration@@Map<String,Object>, MethodName:introspect, String token,  @TO@ OAuth2AuthenticatedPrincipal, MethodName:introspect, String token,  @AT@ 1535 @LENGTH@ 25
---DEL ParameterizedType@@Map<String,Object> @AT@ 1515 @LENGTH@ 19
------DEL SimpleType@@Map @AT@ 1515 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 1519 @LENGTH@ 6
------DEL SimpleType@@Object @AT@ 1527 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthenticatedPrincipal @TO@ MethodDeclaration@@Map<String,Object>, MethodName:introspect, String token,  @AT@ 1594 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(factory) @TO@ MethodDeclaration@@private, static, MongoConverter, MethodName:getDefaultMongoConverter, MongoDbFactory factory,  @AT@ 110363 @LENGTH@ 44
---INS MethodInvocation@@converter.setCodecRegistryProvider(factory) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(factory) @AT@ 110363 @LENGTH@ 43
------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(factory) @AT@ 110363 @LENGTH@ 9
------INS SimpleName@@MethodName:setCodecRegistryProvider:[factory] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(factory) @AT@ 110373 @LENGTH@ 33
---------INS SimpleName@@factory @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[factory] @AT@ 110398 @LENGTH@ 7


UPD VariableDeclarationStatement@@Task<? extends Serializable> currentTsk=context.getCurrentTask(); @TO@ Task<?> currentTsk=context.getCurrentTask(); @AT@ 2132 @LENGTH@ 67
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2132 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenAnswer(i -> defaultRes) @AT@ 1691 @LENGTH@ 79
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenAnswer(i -> defaultRes) @AT@ 1691 @LENGTH@ 78
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 1740 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 1751 @LENGTH@ 17


UPD TypeDeclaration@@[public, final]DefaultThrowableAnalyzer, ThrowableAnalyzer @TO@ [@Deprecated, public, final]DefaultThrowableAnalyzer, ThrowableAnalyzer @AT@ 367 @LENGTH@ 545
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]DefaultThrowableAnalyzer, ThrowableAnalyzer @AT@ 545 @LENGTH@ 11


UPD TypeDeclaration@@[public]InMemoryConsumerDetailsService, [ConsumerDetailsService] @TO@ [@Deprecated, public]InMemoryConsumerDetailsService, [ConsumerDetailsService] @AT@ 867 @LENGTH@ 777
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryConsumerDetailsService, [ConsumerDetailsService] @AT@ 1088 @LENGTH@ 11


INS IfStatement@@if (this.colExprMap == null) {  return null;} @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:getColumnExprMapForExplain,  @AT@ 3876 @LENGTH@ 55
---INS InfixExpression@@this.colExprMap == null @TO@ IfStatement@@if (this.colExprMap == null) {  return null;} @AT@ 3880 @LENGTH@ 23
------INS FieldAccess@@this.colExprMap @TO@ InfixExpression@@this.colExprMap == null @AT@ 3880 @LENGTH@ 15
---------INS ThisExpression@@this @TO@ FieldAccess@@this.colExprMap @AT@ 3880 @LENGTH@ 4
---------INS SimpleName@@colExprMap @TO@ FieldAccess@@this.colExprMap @AT@ 3885 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@this.colExprMap == null @AT@ 3895 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@this.colExprMap == null @AT@ 3899 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (this.colExprMap == null) {  return null;} @AT@ 3905 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 3913 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 3920 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]AdvancedGoogleBigQueryEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGoogleBigQueryEndpointBuilder, [EndpointProducerBuilder] @AT@ 4046 @LENGTH@ 2152
---DEL Modifier@@static @AT@ 4053 @LENGTH@ 6


UPD MethodDeclaration@@default, MyBatisEndpointBuilder, MethodName:myBatis, String path,  @TO@ default, MyBatisEndpointBuilder, MethodName:mybatis, String path,  @AT@ 41053 @LENGTH@ 378
---UPD SimpleName@@MethodName:myBatis @TO@ MethodName:mybatis @AT@ 41084 @LENGTH@ 7


UPD ExpressionStatement@@SuperMethodInvocation:super.commit(operations,endpoint,exchange,file) @TO@ MethodInvocation:exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange) @AT@ 4985 @LENGTH@ 51


UPD TypeDeclaration@@[public]OAuth2AuthenticationManager, [AuthenticationManager, InitializingBean] @TO@ [@Deprecated, public]OAuth2AuthenticationManager, [AuthenticationManager, InitializingBean] @AT@ 1764 @LENGTH@ 3463
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AuthenticationManager, [AuthenticationManager, InitializingBean] @AT@ 1941 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]IPFSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IPFSEndpointBuilder, [EndpointProducerBuilder] @AT@ 1446 @LENGTH@ 1129
---DEL Modifier@@static @AT@ 1453 @LENGTH@ 6


INS IfStatement@@if (domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass())) {  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} else {  driverValue=conversionService.convert(domainValue,Value.class);} @TO@ MethodDeclaration@@void, MethodName:assertWrite, Object thing, String fieldName, ConversionService conversionService,  @AT@ 5502 @LENGTH@ 424
---INS InfixExpression@@domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass()) @TO@ IfStatement@@if (domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass())) {  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} else {  driverValue=conversionService.convert(domainValue,Value.class);} @AT@ 5506 @LENGTH@ 80
------INS InfixExpression@@domainValue != null @TO@ InfixExpression@@domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass()) @AT@ 5506 @LENGTH@ 19
---------INS SimpleName@@domainValue @TO@ InfixExpression@@domainValue != null @AT@ 5506 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@domainValue != null @AT@ 5517 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@domainValue != null @AT@ 5521 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass()) @AT@ 5525 @LENGTH@ 2
------INS MethodInvocation@@Collection.class.isAssignableFrom(domainValue.getClass()) @TO@ InfixExpression@@domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass()) @AT@ 5529 @LENGTH@ 57
---------INS TypeLiteral@@Collection.class @TO@ MethodInvocation@@Collection.class.isAssignableFrom(domainValue.getClass()) @AT@ 5529 @LENGTH@ 16
---------INS SimpleName@@MethodName:isAssignableFrom:[domainValue.getClass()] @TO@ MethodInvocation@@Collection.class.isAssignableFrom(domainValue.getClass()) @AT@ 5546 @LENGTH@ 40
------------INS MethodInvocation@@domainValue.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[domainValue.getClass()] @AT@ 5563 @LENGTH@ 22
---------------INS SimpleName@@Name:domainValue @TO@ MethodInvocation@@domainValue.getClass() @AT@ 5563 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@domainValue.getClass() @AT@ 5575 @LENGTH@ 10
---INS Block@@ThenBody:{  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} @TO@ IfStatement@@if (domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass())) {  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} else {  driverValue=conversionService.convert(domainValue,Value.class);} @AT@ 5588 @LENGTH@ 257
------INS VariableDeclarationStatement@@Collection<?> sourceCollection=(Collection<?>)domainValue; @TO@ Block@@ThenBody:{  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} @AT@ 5593 @LENGTH@ 61
---------INS ParameterizedType@@Collection<?> @TO@ VariableDeclarationStatement@@Collection<?> sourceCollection=(Collection<?>)domainValue; @AT@ 5593 @LENGTH@ 13
------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 5593 @LENGTH@ 10
------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 5604 @LENGTH@ 1
---------INS VariableDeclarationFragment@@sourceCollection=(Collection<?>)domainValue @TO@ VariableDeclarationStatement@@Collection<?> sourceCollection=(Collection<?>)domainValue; @AT@ 5607 @LENGTH@ 46
------------INS SimpleName@@sourceCollection @TO@ VariableDeclarationFragment@@sourceCollection=(Collection<?>)domainValue @AT@ 5607 @LENGTH@ 16
------------INS CastExpression@@(Collection<?>)domainValue @TO@ VariableDeclarationFragment@@sourceCollection=(Collection<?>)domainValue @AT@ 5626 @LENGTH@ 27
---------------INS ParameterizedType@@Collection<?> @TO@ CastExpression@@(Collection<?>)domainValue @AT@ 5627 @LENGTH@ 13
------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 5627 @LENGTH@ 10
------------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 5638 @LENGTH@ 1
---------------INS SimpleName@@domainValue @TO@ CastExpression@@(Collection<?>)domainValue @AT@ 5642 @LENGTH@ 11
------INS VariableDeclarationStatement@@Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray(); @TO@ Block@@ThenBody:{  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} @AT@ 5658 @LENGTH@ 134
---------INS ArrayType@@Object[] @TO@ VariableDeclarationStatement@@Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray(); @AT@ 5658 @LENGTH@ 8
------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5658 @LENGTH@ 6
---------INS VariableDeclarationFragment@@targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @TO@ VariableDeclarationStatement@@Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray(); @AT@ 5667 @LENGTH@ 124
------------INS SimpleName@@targetCollection @TO@ VariableDeclarationFragment@@targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5667 @LENGTH@ 16
------------INS MethodInvocation@@(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @TO@ VariableDeclarationFragment@@targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5686 @LENGTH@ 105
---------------INS MethodInvocation@@MethodName:map:[element -> conversionService.convert(element,Value.class)] @TO@ MethodInvocation@@(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5686 @LENGTH@ 95
------------------INS LambdaExpression@@element -> conversionService.convert(element,Value.class) @TO@ MethodInvocation@@MethodName:map:[element -> conversionService.convert(element,Value.class)] @AT@ 5718 @LENGTH@ 62
---------------------INS VariableDeclarationFragment@@element @TO@ LambdaExpression@@element -> conversionService.convert(element,Value.class) @AT@ 5718 @LENGTH@ 7
------------------------INS SimpleName@@element @TO@ VariableDeclarationFragment@@element @AT@ 5718 @LENGTH@ 7
---------------------INS MethodInvocation@@conversionService.convert(element,Value.class) @TO@ LambdaExpression@@element -> conversionService.convert(element,Value.class) @AT@ 5733 @LENGTH@ 47
------------------------INS SimpleName@@Name:conversionService @TO@ MethodInvocation@@conversionService.convert(element,Value.class) @AT@ 5733 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:convert:[element, Value.class] @TO@ MethodInvocation@@conversionService.convert(element,Value.class) @AT@ 5751 @LENGTH@ 29
---------------------------INS SimpleName@@element @TO@ SimpleName@@MethodName:convert:[element, Value.class] @AT@ 5759 @LENGTH@ 7
---------------------------INS TypeLiteral@@Value.class @TO@ SimpleName@@MethodName:convert:[element, Value.class] @AT@ 5768 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5686 @LENGTH@ 27
---------------INS ParenthesizedExpression@@(sourceCollection) @TO@ MethodInvocation@@(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5686 @LENGTH@ 18
------------------INS SimpleName@@sourceCollection @TO@ ParenthesizedExpression@@(sourceCollection) @AT@ 5687 @LENGTH@ 16
---------------INS SimpleName@@MethodName:toArray:[] @TO@ MethodInvocation@@(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray() @AT@ 5782 @LENGTH@ 9
------INS ExpressionStatement@@Assignment:driverValue=Values.value(targetCollection) @TO@ Block@@ThenBody:{  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} @AT@ 5796 @LENGTH@ 45
---------INS Assignment@@driverValue=Values.value(targetCollection) @TO@ ExpressionStatement@@Assignment:driverValue=Values.value(targetCollection) @AT@ 5796 @LENGTH@ 44
------------INS SimpleName@@driverValue @TO@ Assignment@@driverValue=Values.value(targetCollection) @AT@ 5796 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@driverValue=Values.value(targetCollection) @AT@ 5807 @LENGTH@ 1
------------INS MethodInvocation@@Values.value(targetCollection) @TO@ Assignment@@driverValue=Values.value(targetCollection) @AT@ 5810 @LENGTH@ 30
---------------INS SimpleName@@Name:Values @TO@ MethodInvocation@@Values.value(targetCollection) @AT@ 5810 @LENGTH@ 6
---------------INS SimpleName@@MethodName:value:[targetCollection] @TO@ MethodInvocation@@Values.value(targetCollection) @AT@ 5817 @LENGTH@ 23
------------------INS SimpleName@@targetCollection @TO@ SimpleName@@MethodName:value:[targetCollection] @AT@ 5823 @LENGTH@ 16
---INS Block@@ElseBody:{  driverValue=conversionService.convert(domainValue,Value.class);} @TO@ IfStatement@@if (domainValue != null && Collection.class.isAssignableFrom(domainValue.getClass())) {  Collection<?> sourceCollection=(Collection<?>)domainValue;  Object[] targetCollection=(sourceCollection).stream().map(element -> conversionService.convert(element,Value.class)).toArray();  driverValue=Values.value(targetCollection);} else {  driverValue=conversionService.convert(domainValue,Value.class);} @AT@ 5851 @LENGTH@ 75
------INS ExpressionStatement@@Assignment:driverValue=conversionService.convert(domainValue,Value.class) @TO@ Block@@ElseBody:{  driverValue=conversionService.convert(domainValue,Value.class);} @AT@ 5856 @LENGTH@ 66
---------INS Assignment@@driverValue=conversionService.convert(domainValue,Value.class) @TO@ ExpressionStatement@@Assignment:driverValue=conversionService.convert(domainValue,Value.class) @AT@ 5856 @LENGTH@ 65
------------MOV MethodInvocation@@conversionService.convert(domainValue,Value.class) @TO@ Assignment@@driverValue=conversionService.convert(domainValue,Value.class) @AT@ 5468 @LENGTH@ 51
------------INS SimpleName@@driverValue @TO@ Assignment@@driverValue=conversionService.convert(domainValue,Value.class) @AT@ 5856 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@driverValue=conversionService.convert(domainValue,Value.class) @AT@ 5867 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @TO@ TypeDeclaration@@[public, abstract]OnCommittedResponseWrapper, HttpServletResponseWrapper @AT@ 2119 @LENGTH@ 107
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2119 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2126 @LENGTH@ 4
---INS SimpleName@@MethodName:setContentLengthLong @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2131 @LENGTH@ 20
---INS SingleVariableDeclaration@@long len @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2152 @LENGTH@ 8
------INS PrimitiveType@@long @TO@ SingleVariableDeclaration@@long len @AT@ 2152 @LENGTH@ 4
------INS SimpleName@@len @TO@ SingleVariableDeclaration@@long len @AT@ 2157 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:setContentLength(len) @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2166 @LENGTH@ 22
------INS MethodInvocation@@setContentLength(len) @TO@ ExpressionStatement@@MethodInvocation:setContentLength(len) @AT@ 2166 @LENGTH@ 21
---------INS SimpleName@@MethodName:setContentLength:[len] @TO@ MethodInvocation@@setContentLength(len) @AT@ 2166 @LENGTH@ 21
------------INS SimpleName@@len @TO@ SimpleName@@MethodName:setContentLength:[len] @AT@ 2183 @LENGTH@ 3
---INS ExpressionStatement@@SuperMethodInvocation:super.setContentLengthLong(len) @TO@ MethodDeclaration@@public, void, MethodName:setContentLengthLong, long len,  @AT@ 2191 @LENGTH@ 32
------INS SuperMethodInvocation@@super.setContentLengthLong(len) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setContentLengthLong(len) @AT@ 2191 @LENGTH@ 31
---------INS SimpleName@@MethodName:setContentLengthLong:[len] @TO@ SuperMethodInvocation@@super.setContentLengthLong(len) @AT@ 2197 @LENGTH@ 20
---------INS SimpleName@@len @TO@ SuperMethodInvocation@@super.setContentLengthLong(len) @AT@ 2218 @LENGTH@ 3


UPD DoStatement@@do {  if (backtrack.size() > 0) {    final int[] array=backtrack.pop();    wcsIdx=array[0];    textIdx=array[1];    anyChars=true;  }  while (wcsIdx < wcs.length) {    if (wcs[wcsIdx].equals("?")) {      textIdx++;      if (textIdx > fileName.length()) {        break;      }      anyChars=false;    } else     if (wcs[wcsIdx].equals("*")) {      anyChars=true;      if (wcsIdx == wcs.length - 1) {        textIdx=fileName.length();      }    } else {      if (anyChars) {        textIdx=caseSensitivity.checkIndexOf(fileName,textIdx,wcs[wcsIdx]);        if (textIdx == NOT_FOUND) {          break;        }        final int repeat=caseSensitivity.checkIndexOf(fileName,textIdx + 1,wcs[wcsIdx]);        if (repeat >= 0) {          backtrack.push(new int[]{wcsIdx,repeat});        }      } else {        if (!caseSensitivity.checkRegionMatches(fileName,textIdx,wcs[wcsIdx])) {          break;        }      }      textIdx+=wcs[wcsIdx].length();      anyChars=false;    }    wcsIdx++;  }  if (wcsIdx == wcs.length && textIdx == fileName.length()) {    return true;  }} while (backtrack.size() > 0); @TO@ do {  if (!backtrack.isEmpty()) {    final int[] array=backtrack.pop();    wcsIdx=array[0];    textIdx=array[1];    anyChars=true;  }  while (wcsIdx < wcs.length) {    if (wcs[wcsIdx].equals("?")) {      textIdx++;      if (textIdx > fileName.length()) {        break;      }      anyChars=false;    } else     if (wcs[wcsIdx].equals("*")) {      anyChars=true;      if (wcsIdx == wcs.length - 1) {        textIdx=fileName.length();      }    } else {      if (anyChars) {        textIdx=caseSensitivity.checkIndexOf(fileName,textIdx,wcs[wcsIdx]);        if (textIdx == NOT_FOUND) {          break;        }        final int repeat=caseSensitivity.checkIndexOf(fileName,textIdx + 1,wcs[wcsIdx]);        if (repeat >= 0) {          backtrack.push(new int[]{wcsIdx,repeat});        }      } else {        if (!caseSensitivity.checkRegionMatches(fileName,textIdx,wcs[wcsIdx])) {          break;        }      }      textIdx+=wcs[wcsIdx].length();      anyChars=false;    }    wcsIdx++;  }  if (wcsIdx == wcs.length && textIdx == fileName.length()) {    return true;  }} while (!backtrack.isEmpty()); @AT@ 55765 @LENGTH@ 2271
---UPD IfStatement@@if (backtrack.size() > 0) {  final int[] array=backtrack.pop();  wcsIdx=array[0];  textIdx=array[1];  anyChars=true;} @TO@ if (!backtrack.isEmpty()) {  final int[] array=backtrack.pop();  wcsIdx=array[0];  textIdx=array[1];  anyChars=true;} @AT@ 55782 @LENGTH@ 198
------DEL InfixExpression@@backtrack.size() > 0 @AT@ 55786 @LENGTH@ 20
---------DEL MethodInvocation@@backtrack.size() @AT@ 55786 @LENGTH@ 16
---------DEL Operator@@> @AT@ 55802 @LENGTH@ 1
---------DEL NumberLiteral@@0 @AT@ 55805 @LENGTH@ 1
------INS PrefixExpression@@!backtrack.isEmpty() @TO@ IfStatement@@if (backtrack.size() > 0) {  final int[] array=backtrack.pop();  wcsIdx=array[0];  textIdx=array[1];  anyChars=true;} @AT@ 55830 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!backtrack.isEmpty() @AT@ 55830 @LENGTH@ 1
---------INS MethodInvocation@@backtrack.isEmpty() @TO@ PrefixExpression@@!backtrack.isEmpty() @AT@ 55831 @LENGTH@ 19
------------MOV SimpleName@@Name:backtrack @TO@ MethodInvocation@@backtrack.isEmpty() @AT@ 55786 @LENGTH@ 9
------------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@backtrack.isEmpty() @AT@ 55796 @LENGTH@ 6
---DEL InfixExpression@@backtrack.size() > 0 @AT@ 58014 @LENGTH@ 20
------DEL MethodInvocation@@backtrack.size() @AT@ 58014 @LENGTH@ 16
------DEL Operator@@> @AT@ 58030 @LENGTH@ 1
------DEL NumberLiteral@@0 @AT@ 58033 @LENGTH@ 1
---INS PrefixExpression@@!backtrack.isEmpty() @TO@ DoStatement@@do {  if (backtrack.size() > 0) {    final int[] array=backtrack.pop();    wcsIdx=array[0];    textIdx=array[1];    anyChars=true;  }  while (wcsIdx < wcs.length) {    if (wcs[wcsIdx].equals("?")) {      textIdx++;      if (textIdx > fileName.length()) {        break;      }      anyChars=false;    } else     if (wcs[wcsIdx].equals("*")) {      anyChars=true;      if (wcsIdx == wcs.length - 1) {        textIdx=fileName.length();      }    } else {      if (anyChars) {        textIdx=caseSensitivity.checkIndexOf(fileName,textIdx,wcs[wcsIdx]);        if (textIdx == NOT_FOUND) {          break;        }        final int repeat=caseSensitivity.checkIndexOf(fileName,textIdx + 1,wcs[wcsIdx]);        if (repeat >= 0) {          backtrack.push(new int[]{wcsIdx,repeat});        }      } else {        if (!caseSensitivity.checkRegionMatches(fileName,textIdx,wcs[wcsIdx])) {          break;        }      }      textIdx+=wcs[wcsIdx].length();      anyChars=false;    }    wcsIdx++;  }  if (wcsIdx == wcs.length && textIdx == fileName.length()) {    return true;  }} while (backtrack.size() > 0); @AT@ 58058 @LENGTH@ 20
------INS Operator@@! @TO@ PrefixExpression@@!backtrack.isEmpty() @AT@ 58058 @LENGTH@ 1
------INS MethodInvocation@@backtrack.isEmpty() @TO@ PrefixExpression@@!backtrack.isEmpty() @AT@ 58059 @LENGTH@ 19
---------MOV SimpleName@@Name:backtrack @TO@ MethodInvocation@@backtrack.isEmpty() @AT@ 58014 @LENGTH@ 9
---------MOV SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@backtrack.isEmpty() @AT@ 58024 @LENGTH@ 6


UPD MethodDeclaration@@default, CMISEndpointBuilder, MethodName:cMIS, String path,  @TO@ default, CMISEndpointBuilder, MethodName:cmis, String path,  @AT@ 30304 @LENGTH@ 354
---UPD SimpleName@@MethodName:cMIS @TO@ MethodName:cmis @AT@ 30332 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ServerHttpSecurityTests,  @AT@ 11762 @LENGTH@ 929
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 11762 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 11769 @LENGTH@ 4
---INS SimpleName@@MethodName:basicWithCustomAuthenticationManager @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 11774 @LENGTH@ 36
---INS VariableDeclarationStatement@@ReactiveAuthenticationManager customAuthenticationManager=mock(ReactiveAuthenticationManager.class); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 11817 @LENGTH@ 102
------INS SimpleType@@ReactiveAuthenticationManager @TO@ VariableDeclarationStatement@@ReactiveAuthenticationManager customAuthenticationManager=mock(ReactiveAuthenticationManager.class); @AT@ 11817 @LENGTH@ 29
------INS VariableDeclarationFragment@@customAuthenticationManager=mock(ReactiveAuthenticationManager.class) @TO@ VariableDeclarationStatement@@ReactiveAuthenticationManager customAuthenticationManager=mock(ReactiveAuthenticationManager.class); @AT@ 11847 @LENGTH@ 71
---------INS SimpleName@@customAuthenticationManager @TO@ VariableDeclarationFragment@@customAuthenticationManager=mock(ReactiveAuthenticationManager.class) @AT@ 11847 @LENGTH@ 27
---------INS MethodInvocation@@mock(ReactiveAuthenticationManager.class) @TO@ VariableDeclarationFragment@@customAuthenticationManager=mock(ReactiveAuthenticationManager.class) @AT@ 11877 @LENGTH@ 41
------------INS SimpleName@@MethodName:mock:[ReactiveAuthenticationManager.class] @TO@ MethodInvocation@@mock(ReactiveAuthenticationManager.class) @AT@ 11877 @LENGTH@ 41
---------------INS TypeLiteral@@ReactiveAuthenticationManager.class @TO@ SimpleName@@MethodName:mock:[ReactiveAuthenticationManager.class] @AT@ 11882 @LENGTH@ 35
---INS ExpressionStatement@@MethodInvocation:given(customAuthenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 11922 @LENGTH@ 150
------INS MethodInvocation@@given(customAuthenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))) @TO@ ExpressionStatement@@MethodInvocation:given(customAuthenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))) @AT@ 11922 @LENGTH@ 149
---------INS MethodInvocation@@MethodName:given:[customAuthenticationManager.authenticate(any())] @TO@ MethodInvocation@@given(customAuthenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))) @AT@ 11922 @LENGTH@ 54
------------INS MethodInvocation@@customAuthenticationManager.authenticate(any()) @TO@ MethodInvocation@@MethodName:given:[customAuthenticationManager.authenticate(any())] @AT@ 11928 @LENGTH@ 47
---------------INS SimpleName@@Name:customAuthenticationManager @TO@ MethodInvocation@@customAuthenticationManager.authenticate(any()) @AT@ 11928 @LENGTH@ 27
---------------INS SimpleName@@MethodName:authenticate:[any()] @TO@ MethodInvocation@@customAuthenticationManager.authenticate(any()) @AT@ 11956 @LENGTH@ 19
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:authenticate:[any()] @AT@ 11969 @LENGTH@ 5
---------INS SimpleName@@MethodName:willReturn:[Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))] @TO@ MethodInvocation@@given(customAuthenticationManager.authenticate(any())).willReturn(Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))) @AT@ 11977 @LENGTH@ 94
------------INS MethodInvocation@@Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")) @TO@ SimpleName@@MethodName:willReturn:[Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN"))] @AT@ 11988 @LENGTH@ 82
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")) @AT@ 11988 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")] @TO@ MethodInvocation@@Mono.just(new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")) @AT@ 11993 @LENGTH@ 77
------------------INS ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @TO@ SimpleName@@MethodName:just:[new TestingAuthenticationToken("rob","rob","ROLE_USER","ROLE_ADMIN")] @AT@ 11998 @LENGTH@ 71
---------------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 11998 @LENGTH@ 3
---------------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 12002 @LENGTH@ 26
---------------------INS StringLiteral@@"rob" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 12029 @LENGTH@ 5
---------------------INS StringLiteral@@"rob" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 12036 @LENGTH@ 5
---------------------INS StringLiteral@@"ROLE_USER" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 12043 @LENGTH@ 11
---------------------INS StringLiteral@@"ROLE_ADMIN" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["rob", "rob", "ROLE_USER", "ROLE_ADMIN"] @AT@ 12056 @LENGTH@ 12
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 12076 @LENGTH@ 132
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build(); @AT@ 12076 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build(); @AT@ 12099 @LENGTH@ 108
---------INS SimpleName@@securityFilterChain @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12099 @LENGTH@ 19
---------INS MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12121 @LENGTH@ 86
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12121 @LENGTH@ 78
------------INS MethodInvocation@@MethodName:authenticationManager:[customAuthenticationManager] @TO@ MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12121 @LENGTH@ 72
---------------INS SimpleName@@customAuthenticationManager @TO@ MethodInvocation@@MethodName:authenticationManager:[customAuthenticationManager] @AT@ 12165 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:httpBasic:[] @TO@ MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12121 @LENGTH@ 21
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12121 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 12121 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 12126 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.httpBasic().authenticationManager(customAuthenticationManager).and().build() @AT@ 12200 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebFilterChainProxy springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 12211 @LENGTH@ 93
------INS SimpleType@@WebFilterChainProxy @TO@ VariableDeclarationStatement@@WebFilterChainProxy springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain); @AT@ 12211 @LENGTH@ 19
------INS VariableDeclarationFragment@@springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain) @TO@ VariableDeclarationStatement@@WebFilterChainProxy springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain); @AT@ 12231 @LENGTH@ 72
---------INS SimpleName@@springSecurityFilterChain @TO@ VariableDeclarationFragment@@springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain) @AT@ 12231 @LENGTH@ 25
---------INS ClassInstanceCreation@@WebFilterChainProxy[securityFilterChain] @TO@ VariableDeclarationFragment@@springSecurityFilterChain=new WebFilterChainProxy(securityFilterChain) @AT@ 12259 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityFilterChain] @AT@ 12259 @LENGTH@ 3
------------INS SimpleType@@WebFilterChainProxy @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityFilterChain] @AT@ 12263 @LENGTH@ 19
------------INS SimpleName@@securityFilterChain @TO@ ClassInstanceCreation@@WebFilterChainProxy[securityFilterChain] @AT@ 12283 @LENGTH@ 19
---INS VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build(); @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 12307 @LENGTH@ 96
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build(); @AT@ 12307 @LENGTH@ 13
------INS VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build(); @AT@ 12321 @LENGTH@ 81
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @AT@ 12321 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @AT@ 12330 @LENGTH@ 72
------------INS MethodInvocation@@MethodName:bindToWebFilters:[springSecurityFilterChain] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @AT@ 12330 @LENGTH@ 64
---------------INS SimpleName@@springSecurityFilterChain @TO@ MethodInvocation@@MethodName:bindToWebFilters:[springSecurityFilterChain] @AT@ 12368 @LENGTH@ 25
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @AT@ 12330 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(springSecurityFilterChain).build() @AT@ 12395 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 12407 @LENGTH@ 226
------INS MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @TO@ ExpressionStatement@@MethodInvocation:client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 225
---------INS MethodInvocation@@MethodName:expectBody:[String.class] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 159
------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:expectBody:[String.class] @AT@ 12553 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:isOk:[] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 129
---------INS MethodInvocation@@MethodName:expectStatus:[] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 122
---------INS MethodInvocation@@MethodName:exchange:[] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 102
---------INS MethodInvocation@@MethodName:headers:[headers -> headers.setBasicAuth("rob","rob")] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 86
------------INS LambdaExpression@@headers -> headers.setBasicAuth("rob","rob") @TO@ MethodInvocation@@MethodName:headers:[headers -> headers.setBasicAuth("rob","rob")] @AT@ 12447 @LENGTH@ 45
---------------INS VariableDeclarationFragment@@headers @TO@ LambdaExpression@@headers -> headers.setBasicAuth("rob","rob") @AT@ 12447 @LENGTH@ 7
------------------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers @AT@ 12447 @LENGTH@ 7
---------------INS MethodInvocation@@headers.setBasicAuth("rob","rob") @TO@ LambdaExpression@@headers -> headers.setBasicAuth("rob","rob") @AT@ 12458 @LENGTH@ 34
------------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setBasicAuth("rob","rob") @AT@ 12458 @LENGTH@ 7
------------------INS SimpleName@@MethodName:setBasicAuth:["rob", "rob"] @TO@ MethodInvocation@@headers.setBasicAuth("rob","rob") @AT@ 12466 @LENGTH@ 26
---------------------INS StringLiteral@@"rob" @TO@ SimpleName@@MethodName:setBasicAuth:["rob", "rob"] @AT@ 12479 @LENGTH@ 5
---------------------INS StringLiteral@@"rob" @TO@ SimpleName@@MethodName:setBasicAuth:["rob", "rob"] @AT@ 12486 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:uri:["/"] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 26
------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:uri:["/"] @AT@ 12429 @LENGTH@ 3
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 12
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12407 @LENGTH@ 6
---------INS SimpleName@@MethodName:consumeWith:[b -> assertThat(b.getResponseBody()).isEqualTo("ok")] @TO@ MethodInvocation@@client.get().uri("/").headers(headers -> headers.setBasicAuth("rob","rob")).exchange().expectStatus().isOk().expectBody(String.class).consumeWith(b -> assertThat(b.getResponseBody()).isEqualTo("ok")) @AT@ 12567 @LENGTH@ 65
------------INS LambdaExpression@@b -> assertThat(b.getResponseBody()).isEqualTo("ok") @TO@ SimpleName@@MethodName:consumeWith:[b -> assertThat(b.getResponseBody()).isEqualTo("ok")] @AT@ 12579 @LENGTH@ 52
---------------INS VariableDeclarationFragment@@b @TO@ LambdaExpression@@b -> assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 12579 @LENGTH@ 1
------------------INS SimpleName@@b @TO@ VariableDeclarationFragment@@b @AT@ 12579 @LENGTH@ 1
---------------INS MethodInvocation@@assertThat(b.getResponseBody()).isEqualTo("ok") @TO@ LambdaExpression@@b -> assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 12584 @LENGTH@ 47
------------------INS MethodInvocation@@MethodName:assertThat:[b.getResponseBody()] @TO@ MethodInvocation@@assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 12584 @LENGTH@ 31
---------------------INS MethodInvocation@@b.getResponseBody() @TO@ MethodInvocation@@MethodName:assertThat:[b.getResponseBody()] @AT@ 12595 @LENGTH@ 19
------------------------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getResponseBody() @AT@ 12595 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getResponseBody:[] @TO@ MethodInvocation@@b.getResponseBody() @AT@ 12597 @LENGTH@ 17
------------------INS SimpleName@@MethodName:isEqualTo:["ok"] @TO@ MethodInvocation@@assertThat(b.getResponseBody()).isEqualTo("ok") @AT@ 12616 @LENGTH@ 15
---------------------INS StringLiteral@@"ok" @TO@ SimpleName@@MethodName:isEqualTo:["ok"] @AT@ 12626 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.authenticationManager) @TO@ MethodDeclaration@@public, void, MethodName:basicWithCustomAuthenticationManager,  @AT@ 12637 @LENGTH@ 51
------INS MethodInvocation@@verifyZeroInteractions(this.authenticationManager) @TO@ ExpressionStatement@@MethodInvocation:verifyZeroInteractions(this.authenticationManager) @AT@ 12637 @LENGTH@ 50
---------INS SimpleName@@MethodName:verifyZeroInteractions:[this.authenticationManager] @TO@ MethodInvocation@@verifyZeroInteractions(this.authenticationManager) @AT@ 12637 @LENGTH@ 50
------------INS FieldAccess@@this.authenticationManager @TO@ SimpleName@@MethodName:verifyZeroInteractions:[this.authenticationManager] @AT@ 12660 @LENGTH@ 26
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.authenticationManager @AT@ 12660 @LENGTH@ 4
---------------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.authenticationManager @AT@ 12665 @LENGTH@ 21


UPD TypeDeclaration@@[public]ProtectedResourceDetails,  @TO@ [@Deprecated, public]ProtectedResourceDetails,  @AT@ 848 @LENGTH@ 2555
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProtectedResourceDetails,  @AT@ 1069 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:LOG.info("Processing changes for pool " + poolName + ": "+ pools.get(poolName)) @TO@ MethodInvocation:LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName)) @AT@ 31940 @LENGTH@ 81
---UPD MethodInvocation@@LOG.info("Processing changes for pool " + poolName + ": "+ pools.get(poolName)) @TO@ LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName)) @AT@ 31940 @LENGTH@ 80
------UPD SimpleName@@MethodName:info:["Processing changes for pool " + poolName + ": "+ pools.get(poolName)] @TO@ MethodName:debug:["Processing changes for pool " + poolName + ": "+ pools.get(poolName)] @AT@ 31944 @LENGTH@ 76


UPD TypeDeclaration@@[public, static]AdvancedLanguageEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLanguageEndpointBuilder, [EndpointProducerBuilder] @AT@ 6093 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 6100 @LENGTH@ 6


INS MethodDeclaration@@Optional<org.bson.Document>, MethodName:findDocumentById, String id,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QuerydslPredicateExecutor<Person>] @AT@ 12391 @LENGTH@ 28
---INS ParameterizedType@@Optional<org.bson.Document> @TO@ MethodDeclaration@@Optional<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 12363 @LENGTH@ 27
------INS SimpleType@@Optional @TO@ ParameterizedType@@Optional<org.bson.Document> @AT@ 12363 @LENGTH@ 8
------INS SimpleType@@org.bson.Document @TO@ ParameterizedType@@Optional<org.bson.Document> @AT@ 12372 @LENGTH@ 17
---INS SimpleName@@MethodName:findDocumentById @TO@ MethodDeclaration@@Optional<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 12391 @LENGTH@ 16
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@Optional<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 12408 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 12408 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 12415 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:muteExceptionTest, IOException, ClassNotFoundException,  @TO@ public, void, MethodName:muteExceptionTest, Exception,  @AT@ 1193 @LENGTH@ 503
---UPD SimpleType@@IOException @TO@ Exception @AT@ 1232 @LENGTH@ 11
---DEL SimpleType@@ClassNotFoundException @AT@ 1245 @LENGTH@ 22


UPD MethodDeclaration@@public, void, MethodName:upgradeEncodingWhenSameIdThenFalse,  @TO@ public, void, MethodName:upgradeEncodingWhenSameIdThenEncoderDecides,  @AT@ 7510 @LENGTH@ 143
---UPD SimpleName@@MethodName:upgradeEncodingWhenSameIdThenFalse @TO@ MethodName:upgradeEncodingWhenSameIdThenEncoderDecides @AT@ 7522 @LENGTH@ 34
---UPD ExpressionStatement@@MethodInvocation:assertThat(this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword)).isFalse() @TO@ MethodInvocation:this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword) @AT@ 7563 @LENGTH@ 87
------DEL MethodInvocation@@assertThat(this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword)).isFalse() @AT@ 7563 @LENGTH@ 86
---------DEL MethodInvocation@@MethodName:assertThat:[this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword)] @AT@ 7563 @LENGTH@ 76
---------DEL SimpleName@@MethodName:isFalse:[] @AT@ 7640 @LENGTH@ 9
------MOV MethodInvocation@@this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.passwordEncoder.upgradeEncoding(this.bcryptEncodedPassword)).isFalse() @AT@ 7574 @LENGTH@ 64
---INS ExpressionStatement@@MethodInvocation:verify(bcrypt).upgradeEncoding(this.encodedPassword) @TO@ MethodDeclaration@@public, void, MethodName:upgradeEncodingWhenSameIdThenFalse,  @AT@ 7641 @LENGTH@ 53
------INS MethodInvocation@@verify(bcrypt).upgradeEncoding(this.encodedPassword) @TO@ ExpressionStatement@@MethodInvocation:verify(bcrypt).upgradeEncoding(this.encodedPassword) @AT@ 7641 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:verify:[bcrypt] @TO@ MethodInvocation@@verify(bcrypt).upgradeEncoding(this.encodedPassword) @AT@ 7641 @LENGTH@ 14
------------INS SimpleName@@bcrypt @TO@ MethodInvocation@@MethodName:verify:[bcrypt] @AT@ 7648 @LENGTH@ 6
---------INS SimpleName@@MethodName:upgradeEncoding:[this.encodedPassword] @TO@ MethodInvocation@@verify(bcrypt).upgradeEncoding(this.encodedPassword) @AT@ 7656 @LENGTH@ 37
------------INS FieldAccess@@this.encodedPassword @TO@ SimpleName@@MethodName:upgradeEncoding:[this.encodedPassword] @AT@ 7672 @LENGTH@ 20
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.encodedPassword @AT@ 7672 @LENGTH@ 4
---------------INS SimpleName@@encodedPassword @TO@ FieldAccess@@this.encodedPassword @AT@ 7677 @LENGTH@ 15


INS MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @TO@ TypeDeclaration@@[public]Access,  @AT@ 11322 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @AT@ 11322 @LENGTH@ 6
---INS SimpleType@@AuthorizePayloadsSpec @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @AT@ 11329 @LENGTH@ 21
---INS SimpleName@@MethodName:hasAuthority @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @AT@ 11351 @LENGTH@ 12
---INS SingleVariableDeclaration@@String authority @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @AT@ 11364 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String authority @AT@ 11364 @LENGTH@ 6
------INS SimpleName@@authority @TO@ SingleVariableDeclaration@@String authority @AT@ 11371 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAuthority(authority)) @TO@ MethodDeclaration@@public, AuthorizePayloadsSpec, MethodName:hasAuthority, String authority,  @AT@ 11388 @LENGTH@ 77
------INS MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAuthority(authority)) @TO@ ReturnStatement@@MethodInvocation:access(AuthorityReactiveAuthorizationManager.hasAuthority(authority)) @AT@ 11395 @LENGTH@ 69
---------INS SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAuthority(authority)] @TO@ MethodInvocation@@access(AuthorityReactiveAuthorizationManager.hasAuthority(authority)) @AT@ 11395 @LENGTH@ 69
------------INS MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAuthority(authority) @TO@ SimpleName@@MethodName:access:[AuthorityReactiveAuthorizationManager.hasAuthority(authority)] @AT@ 11402 @LENGTH@ 61
---------------INS SimpleName@@Name:AuthorityReactiveAuthorizationManager @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAuthority(authority) @AT@ 11402 @LENGTH@ 37
---------------INS SimpleName@@MethodName:hasAuthority:[authority] @TO@ MethodInvocation@@AuthorityReactiveAuthorizationManager.hasAuthority(authority) @AT@ 11440 @LENGTH@ 23
------------------INS SimpleName@@authority @TO@ SimpleName@@MethodName:hasAuthority:[authority] @AT@ 11453 @LENGTH@ 9


UPD EnhancedForStatement@@for (GrantedAuthority role : this.rolesReachableInOneStepMap.keySet()) {  Set<GrantedAuthority> rolesToVisitSet=new HashSet<>();  if (this.rolesReachableInOneStepMap.containsKey(role)) {    rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(role));  }  Set<GrantedAuthority> visitedRolesSet=new HashSet<>();  while (!rolesToVisitSet.isEmpty()) {    GrantedAuthority aRole=rolesToVisitSet.iterator().next();    rolesToVisitSet.remove(aRole);    visitedRolesSet.add(aRole);    if (this.rolesReachableInOneStepMap.containsKey(aRole)) {      Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);      if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {        throw new CycleInRoleHierarchyException();      } else {        rolesToVisitSet.addAll(newReachableRoles);      }    }  }  this.rolesReachableInOneOrMoreStepsMap.put(role,visitedRolesSet);  logger.debug("buildRolesReachableInOneOrMoreStepsMap() - From role " + role + " one can reach "+ visitedRolesSet+ " in one or more steps.");} @TO@ for (GrantedAuthority role : this.rolesReachableInOneStepMap.keySet()) {  Set<GrantedAuthority> rolesToVisitSet=new HashSet<>(this.rolesReachableInOneStepMap.get(role));  Set<GrantedAuthority> visitedRolesSet=new HashSet<>();  while (!rolesToVisitSet.isEmpty()) {    GrantedAuthority aRole=rolesToVisitSet.iterator().next();    rolesToVisitSet.remove(aRole);    if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {      continue;    } else     if (role.equals(aRole)) {      throw new CycleInRoleHierarchyException();    }    rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(aRole));  }  this.rolesReachableInOneOrMoreStepsMap.put(role,visitedRolesSet);  logger.debug("buildRolesReachableInOneOrMoreStepsMap() - From role " + role + " one can reach "+ visitedRolesSet+ " in one or more steps.");} @AT@ 7949 @LENGTH@ 1248
---UPD VariableDeclarationStatement@@Set<GrantedAuthority> rolesToVisitSet=new HashSet<>(); @TO@ Set<GrantedAuthority> rolesToVisitSet=new HashSet<>(this.rolesReachableInOneStepMap.get(role)); @AT@ 8025 @LENGTH@ 56
------UPD VariableDeclarationFragment@@rolesToVisitSet=new HashSet<>() @TO@ rolesToVisitSet=new HashSet<>(this.rolesReachableInOneStepMap.get(role)) @AT@ 8047 @LENGTH@ 33
---------UPD ClassInstanceCreation@@HashSet<>[] @TO@ HashSet<>[this.rolesReachableInOneStepMap.get(role)] @AT@ 8065 @LENGTH@ 15
------------MOV MethodInvocation@@this.rolesReachableInOneStepMap.get(role) @TO@ ClassInstanceCreation@@HashSet<>[] @AT@ 8170 @LENGTH@ 41
---DEL IfStatement@@if (this.rolesReachableInOneStepMap.containsKey(role)) {  rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(role));} @AT@ 8086 @LENGTH@ 132
------DEL MethodInvocation@@this.rolesReachableInOneStepMap.containsKey(role) @AT@ 8090 @LENGTH@ 49
---------DEL FieldAccess@@this.rolesReachableInOneStepMap @AT@ 8090 @LENGTH@ 31
------------DEL ThisExpression@@this @AT@ 8090 @LENGTH@ 4
------------DEL SimpleName@@rolesReachableInOneStepMap @AT@ 8095 @LENGTH@ 26
---------DEL SimpleName@@MethodName:containsKey:[role] @AT@ 8122 @LENGTH@ 17
------------DEL SimpleName@@role @AT@ 8134 @LENGTH@ 4
------DEL Block@@ThenBody:{  rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(role));} @AT@ 8141 @LENGTH@ 77
---------DEL ExpressionStatement@@MethodInvocation:rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(role)) @AT@ 8147 @LENGTH@ 66
------------DEL MethodInvocation@@rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(role)) @AT@ 8147 @LENGTH@ 65
---------------DEL SimpleName@@Name:rolesToVisitSet @AT@ 8147 @LENGTH@ 15
---------------DEL SimpleName@@MethodName:addAll:[this.rolesReachableInOneStepMap.get(role)] @AT@ 8163 @LENGTH@ 49
---UPD WhileStatement@@while (!rolesToVisitSet.isEmpty()) {  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  visitedRolesSet.add(aRole);  if (this.rolesReachableInOneStepMap.containsKey(aRole)) {    Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);    if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {      throw new CycleInRoleHierarchyException();    } else {      rolesToVisitSet.addAll(newReachableRoles);    }  }} @TO@ while (!rolesToVisitSet.isEmpty()) {  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {    continue;  } else   if (role.equals(aRole)) {    throw new CycleInRoleHierarchyException();  }  rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(aRole));} @AT@ 8284 @LENGTH@ 687
------UPD Block@@WhileBody:{  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  visitedRolesSet.add(aRole);  if (this.rolesReachableInOneStepMap.containsKey(aRole)) {    Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);    if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {      throw new CycleInRoleHierarchyException();    } else {      rolesToVisitSet.addAll(newReachableRoles);    }  }} @TO@ WhileBody:{  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {    continue;  } else   if (role.equals(aRole)) {    throw new CycleInRoleHierarchyException();  }  rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(aRole));} @AT@ 8319 @LENGTH@ 652
---------INS IfStatement@@if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {  continue;} else if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @TO@ Block@@WhileBody:{  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  visitedRolesSet.add(aRole);  if (this.rolesReachableInOneStepMap.containsKey(aRole)) {    Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);    if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {      throw new CycleInRoleHierarchyException();    } else {      rolesToVisitSet.addAll(newReachableRoles);    }  }} @AT@ 8372 @LENGTH@ 250
------------INS InfixExpression@@!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole) @TO@ IfStatement@@if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {  continue;} else if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8376 @LENGTH@ 82
---------------INS PrefixExpression@@!visitedRolesSet.add(aRole) @TO@ InfixExpression@@!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole) @AT@ 8376 @LENGTH@ 27
------------------INS Operator@@! @TO@ PrefixExpression@@!visitedRolesSet.add(aRole) @AT@ 8376 @LENGTH@ 1
------------------MOV MethodInvocation@@visitedRolesSet.add(aRole) @TO@ PrefixExpression@@!visitedRolesSet.add(aRole) @AT@ 8469 @LENGTH@ 26
---------------INS PrefixExpression@@!this.rolesReachableInOneStepMap.containsKey(aRole) @TO@ InfixExpression@@!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole) @AT@ 8407 @LENGTH@ 51
------------------INS Operator@@! @TO@ PrefixExpression@@!this.rolesReachableInOneStepMap.containsKey(aRole) @AT@ 8407 @LENGTH@ 1
------------------MOV MethodInvocation@@this.rolesReachableInOneStepMap.containsKey(aRole) @TO@ PrefixExpression@@!this.rolesReachableInOneStepMap.containsKey(aRole) @AT@ 8505 @LENGTH@ 50
---------------MOV Operator@@|| @TO@ InfixExpression@@!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole) @AT@ 8774 @LENGTH@ 2
------------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {  continue;} else if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8460 @LENGTH@ 77
---------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 8467 @LENGTH@ 9
------------INS Block@@ElseBody:if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @TO@ IfStatement@@if (!visitedRolesSet.add(aRole) || !this.rolesReachableInOneStepMap.containsKey(aRole)) {  continue;} else if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8543 @LENGTH@ 79
---------------INS IfStatement@@if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @TO@ Block@@ElseBody:if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8543 @LENGTH@ 79
------------------INS MethodInvocation@@role.equals(aRole) @TO@ IfStatement@@if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8547 @LENGTH@ 18
---------------------MOV SimpleName@@Name:visitedRolesSet @TO@ MethodInvocation@@role.equals(aRole) @AT@ 8785 @LENGTH@ 15
---------------------MOV SimpleName@@MethodName:contains:[role] @TO@ MethodInvocation@@role.equals(aRole) @AT@ 8801 @LENGTH@ 14
------------------MOV Block@@ThenBody:{  throw new CycleInRoleHierarchyException();} @TO@ IfStatement@@if (role.equals(aRole)) {  throw new CycleInRoleHierarchyException();} @AT@ 8817 @LENGTH@ 57
---------DEL ExpressionStatement@@MethodInvocation:visitedRolesSet.add(aRole) @AT@ 8469 @LENGTH@ 27
---------DEL IfStatement@@if (this.rolesReachableInOneStepMap.containsKey(aRole)) {  Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);  if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {    throw new CycleInRoleHierarchyException();  } else {    rolesToVisitSet.addAll(newReachableRoles);  }} @AT@ 8501 @LENGTH@ 465
------------DEL Block@@ThenBody:{  Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);  if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {    throw new CycleInRoleHierarchyException();  } else {    rolesToVisitSet.addAll(newReachableRoles);  }} @AT@ 8557 @LENGTH@ 409
---------------DEL VariableDeclarationStatement@@Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole); @AT@ 8564 @LENGTH@ 93
------------------DEL ParameterizedType@@Set<GrantedAuthority> @AT@ 8564 @LENGTH@ 21
---------------------DEL SimpleType@@Set @AT@ 8564 @LENGTH@ 3
---------------------DEL SimpleType@@GrantedAuthority @AT@ 8568 @LENGTH@ 16
------------------DEL VariableDeclarationFragment@@newReachableRoles=this.rolesReachableInOneStepMap.get(aRole) @AT@ 8586 @LENGTH@ 70
---------------------DEL SimpleName@@newReachableRoles @AT@ 8586 @LENGTH@ 17
---------------DEL IfStatement@@if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {  throw new CycleInRoleHierarchyException();} else {  rolesToVisitSet.addAll(newReachableRoles);} @AT@ 8740 @LENGTH@ 220
------------------DEL InfixExpression@@rolesToVisitSet.contains(role) || visitedRolesSet.contains(role) @AT@ 8744 @LENGTH@ 71
---------------------DEL MethodInvocation@@rolesToVisitSet.contains(role) @AT@ 8744 @LENGTH@ 30
------------------------DEL SimpleName@@Name:rolesToVisitSet @AT@ 8744 @LENGTH@ 15
------------------------DEL SimpleName@@MethodName:contains:[role] @AT@ 8760 @LENGTH@ 14
---------------------------DEL SimpleName@@role @AT@ 8769 @LENGTH@ 4
---------------------DEL MethodInvocation@@visitedRolesSet.contains(role) @AT@ 8785 @LENGTH@ 30
------------------DEL Block@@ElseBody:{  rolesToVisitSet.addAll(newReachableRoles);} @AT@ 8885 @LENGTH@ 75
---------MOV ExpressionStatement@@MethodInvocation:rolesToVisitSet.addAll(newReachableRoles) @TO@ Block@@WhileBody:{  GrantedAuthority aRole=rolesToVisitSet.iterator().next();  rolesToVisitSet.remove(aRole);  visitedRolesSet.add(aRole);  if (this.rolesReachableInOneStepMap.containsKey(aRole)) {    Set<GrantedAuthority> newReachableRoles=this.rolesReachableInOneStepMap.get(aRole);    if (rolesToVisitSet.contains(role) || visitedRolesSet.contains(role)) {      throw new CycleInRoleHierarchyException();    } else {      rolesToVisitSet.addAll(newReachableRoles);    }  }} @AT@ 8911 @LENGTH@ 42
------------UPD MethodInvocation@@rolesToVisitSet.addAll(newReachableRoles) @TO@ rolesToVisitSet.addAll(this.rolesReachableInOneStepMap.get(aRole)) @AT@ 8911 @LENGTH@ 41
---------------UPD SimpleName@@MethodName:addAll:[newReachableRoles] @TO@ MethodName:addAll:[this.rolesReachableInOneStepMap.get(aRole)] @AT@ 8927 @LENGTH@ 25
------------------MOV MethodInvocation@@this.rolesReachableInOneStepMap.get(aRole) @TO@ SimpleName@@MethodName:addAll:[newReachableRoles] @AT@ 8606 @LENGTH@ 50
------------------DEL SimpleName@@newReachableRoles @AT@ 8934 @LENGTH@ 17


UPD MethodDeclaration@@default, SWFEndpointBuilder, MethodName:sWF, String path,  @TO@ default, SWFEndpointBuilder, MethodName:awsSwf, String path,  @AT@ 47177 @LENGTH@ 350
---UPD SimpleName@@MethodName:sWF @TO@ MethodName:awsSwf @AT@ 47204 @LENGTH@ 3


UPD MethodDeclaration@@default, PaxLoggingEndpointBuilder, MethodName:paxLogging, String path,  @TO@ default, PaxLoggingEndpointBuilder, MethodName:paxlogging, String path,  @AT@ 4553 @LENGTH@ 402
---UPD SimpleName@@MethodName:paxLogging @TO@ MethodName:paxlogging @AT@ 4587 @LENGTH@ 10


UPD TypeDeclaration@@[public]InMemoryNonceServices, [OAuthNonceServices] @TO@ [@Deprecated, public]InMemoryNonceServices, [OAuthNonceServices] @AT@ 1971 @LENGTH@ 3679
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryNonceServices, [OAuthNonceServices] @AT@ 2192 @LENGTH@ 11


UPD VariableDeclarationStatement@@ServiceModuleLoader serviceModuleLoader=new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(false),Services.JBOSS_SERVICE_MODULE_LOADER).get(); @TO@ ServiceModuleLoader serviceModuleLoader=new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(true),Services.JBOSS_SERVICE_MODULE_LOADER).get(); @AT@ 9603 @LENGTH@ 168
---UPD VariableDeclarationFragment@@serviceModuleLoader=new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(false),Services.JBOSS_SERVICE_MODULE_LOADER).get() @TO@ serviceModuleLoader=new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(true),Services.JBOSS_SERVICE_MODULE_LOADER).get() @AT@ 9623 @LENGTH@ 147
------UPD MethodInvocation@@new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(false),Services.JBOSS_SERVICE_MODULE_LOADER).get() @TO@ new ActiveServiceSupplier<ServiceModuleLoader>(context.getServiceRegistry(true),Services.JBOSS_SERVICE_MODULE_LOADER).get() @AT@ 9645 @LENGTH@ 125
---------UPD ClassInstanceCreation@@ActiveServiceSupplier<ServiceModuleLoader>[context.getServiceRegistry(false), Services.JBOSS_SERVICE_MODULE_LOADER] @TO@ ActiveServiceSupplier<ServiceModuleLoader>[context.getServiceRegistry(true), Services.JBOSS_SERVICE_MODULE_LOADER] @AT@ 9645 @LENGTH@ 119
------------UPD MethodInvocation@@context.getServiceRegistry(false) @TO@ context.getServiceRegistry(true) @AT@ 9692 @LENGTH@ 33
---------------UPD SimpleName@@MethodName:getServiceRegistry:[false] @TO@ MethodName:getServiceRegistry:[true] @AT@ 9700 @LENGTH@ 25
------------------UPD BooleanLiteral@@false @TO@ true @AT@ 9719 @LENGTH@ 5


UPD TypeDeclaration@@[@Configuration, static]OAuth2ClientWebMvcSecurityConfiguration, [WebMvcConfigurer] @TO@ [@Configuration(proxyBeanMethods=false), static]OAuth2ClientWebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2667 @LENGTH@ 1824
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, static]OAuth2ClientWebMvcSecurityConfiguration, [WebMvcConfigurer] @AT@ 2667 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 2667 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4494 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4501 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 4501 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 4501 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 4501 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 4506 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 4501 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 4522 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 4531 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 4531 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 4543 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 4543 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 4548 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 4531 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]IpAddressMatcherTests,  @AT@ 3017 @LENGTH@ 377
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3017 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3024 @LENGTH@ 4
---INS SimpleName@@MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3029 @LENGTH@ 58
---INS VariableDeclarationStatement@@String ipv4AddressWithTooLongMask="192.168.1.104/33"; @TO@ MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3094 @LENGTH@ 55
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String ipv4AddressWithTooLongMask="192.168.1.104/33"; @AT@ 3094 @LENGTH@ 6
------INS VariableDeclarationFragment@@ipv4AddressWithTooLongMask="192.168.1.104/33" @TO@ VariableDeclarationStatement@@String ipv4AddressWithTooLongMask="192.168.1.104/33"; @AT@ 3101 @LENGTH@ 47
---------INS SimpleName@@ipv4AddressWithTooLongMask @TO@ VariableDeclarationFragment@@ipv4AddressWithTooLongMask="192.168.1.104/33" @AT@ 3101 @LENGTH@ 26
---------INS StringLiteral@@"192.168.1.104/33" @TO@ VariableDeclarationFragment@@ipv4AddressWithTooLongMask="192.168.1.104/33" @AT@ 3130 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @TO@ MethodDeclaration@@public, void, MethodName:ipv4RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3152 @LENGTH@ 239
------INS MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @AT@ 3152 @LENGTH@ 238
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @AT@ 3152 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3241 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @AT@ 3152 @LENGTH@ 70
------------INS LambdaExpression@@() -> new IpAddressMatcher(ipv4AddressWithTooLongMask) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)] @AT@ 3167 @LENGTH@ 54
---------------INS ClassInstanceCreation@@IpAddressMatcher[ipv4AddressWithTooLongMask] @TO@ LambdaExpression@@() -> new IpAddressMatcher(ipv4AddressWithTooLongMask) @AT@ 3173 @LENGTH@ 48
------------------INS New@@new @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv4AddressWithTooLongMask] @AT@ 3173 @LENGTH@ 3
------------------INS SimpleType@@IpAddressMatcher @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv4AddressWithTooLongMask] @AT@ 3177 @LENGTH@ 16
------------------INS SimpleName@@ipv4AddressWithTooLongMask @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv4AddressWithTooLongMask] @AT@ 3194 @LENGTH@ 26
---------INS SimpleName@@MethodName:hasMessage:[String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv4AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)) @AT@ 3278 @LENGTH@ 112
------------INS MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33) @TO@ SimpleName@@MethodName:hasMessage:[String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33)] @AT@ 3289 @LENGTH@ 100
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33) @AT@ 3289 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "192.168.1.104", 33] @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","192.168.1.104",33) @AT@ 3296 @LENGTH@ 93
------------------INS InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "192.168.1.104", 33] @AT@ 3303 @LENGTH@ 64
---------------------INS StringLiteral@@"IP address %s is too short for bitmask of " @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3303 @LENGTH@ 44
---------------------INS Operator@@+ @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3347 @LENGTH@ 1
---------------------INS StringLiteral@@"length %d" @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3356 @LENGTH@ 11
------------------INS StringLiteral@@"192.168.1.104" @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "192.168.1.104", 33] @AT@ 3369 @LENGTH@ 15
------------------INS NumberLiteral@@33 @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "192.168.1.104", 33] @AT@ 3386 @LENGTH@ 2


UPD TypeDeclaration@@[@Configuration, public]ClientDetailsServiceConfiguration,  @TO@ [@Configuration, @Deprecated, public]ClientDetailsServiceConfiguration,  @AT@ 1293 @LENGTH@ 499
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration, public]ClientDetailsServiceConfiguration,  @AT@ 1486 @LENGTH@ 11


UPD TypeDeclaration@@[public]InMemoryApprovalStore, [ApprovalStore] @TO@ [@Deprecated, public]InMemoryApprovalStore, [ApprovalStore] @AT@ 896 @LENGTH@ 2218
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryApprovalStore, [ApprovalStore] @AT@ 1074 @LENGTH@ 11


UPD TypeDeclaration@@[public]ClientDetailsServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ClientDetailsServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1353 @LENGTH@ 2358
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetailsServiceBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1531 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]GrapeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GrapeEndpointBuilder, [EndpointProducerBuilder] @AT@ 1441 @LENGTH@ 650
---DEL Modifier@@static @AT@ 1448 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthRestTemplate, RestTemplate @TO@ [@Deprecated, public]OAuthRestTemplate, RestTemplate @AT@ 553 @LENGTH@ 1460
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthRestTemplate, RestTemplate @AT@ 774 @LENGTH@ 11


UPD TypeDeclaration@@[public]ConfigUtils,  @TO@ [@Deprecated, public]ConfigUtils,  @AT@ 1054 @LENGTH@ 4070
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConfigUtils,  @AT@ 1232 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, public]ObjectPostProcessorConfiguration,  @TO@ [@Configuration(proxyBeanMethods=false), public]ObjectPostProcessorConfiguration,  @AT@ 1517 @LENGTH@ 243
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, public]ObjectPostProcessorConfiguration,  @AT@ 1517 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 1517 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]AdvancedJoltEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedJoltEndpointBuilder, [EndpointProducerBuilder] @AT@ 5694 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 5701 @LENGTH@ 6


UPD TypeDeclaration@@[@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL), public]Approval,  @TO@ [@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL), @Deprecated, public]Approval,  @AT@ 1127 @LENGTH@ 3373
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL), public]Approval,  @AT@ 1364 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]StreamingType,  @TO@ [static]StreamingType,  @AT@ 8851 @LENGTH@ 79
---DEL Modifier@@public @AT@ 8851 @LENGTH@ 6


UPD TryStatement@@try {  Exchanger<Object> exchanger=EXCHANGERS.get(message.getJMSCorrelationID());  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} catch (Exception e) {  log.warn("Unable to exchange message: {}. This exception is ignored.",message,e);} @TO@ try {  String correlationID=message.getJMSCorrelationID();  Exchanger<Object> exchanger=EXCHANGERS.get(correlationID);  if (exchanger != null) {    exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);  } else {    log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});  }} catch (Exception e) {  log.warn("Unable to exchange message: {}. This exception is ignored.",message,e);} @AT@ 4817 @LENGTH@ 398
---UPD VariableDeclarationStatement@@Exchanger<Object> exchanger=EXCHANGERS.get(message.getJMSCorrelationID()); @TO@ Exchanger<Object> exchanger=EXCHANGERS.get(correlationID); @AT@ 4851 @LENGTH@ 76
------UPD VariableDeclarationFragment@@exchanger=EXCHANGERS.get(message.getJMSCorrelationID()) @TO@ exchanger=EXCHANGERS.get(correlationID) @AT@ 4869 @LENGTH@ 57
---------UPD MethodInvocation@@EXCHANGERS.get(message.getJMSCorrelationID()) @TO@ EXCHANGERS.get(correlationID) @AT@ 4881 @LENGTH@ 45
------------UPD SimpleName@@MethodName:get:[message.getJMSCorrelationID()] @TO@ MethodName:get:[correlationID] @AT@ 4892 @LENGTH@ 34
---------------DEL MethodInvocation@@message.getJMSCorrelationID() @AT@ 4896 @LENGTH@ 29
------------------DEL SimpleName@@Name:message @AT@ 4896 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:getJMSCorrelationID:[] @AT@ 4904 @LENGTH@ 21
---------------INS SimpleName@@correlationID @TO@ SimpleName@@MethodName:get:[message.getJMSCorrelationID()] @AT@ 4978 @LENGTH@ 13
---INS VariableDeclarationStatement@@String correlationID=message.getJMSCorrelationID(); @TO@ TryStatement@@try {  Exchanger<Object> exchanger=EXCHANGERS.get(message.getJMSCorrelationID());  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} catch (Exception e) {  log.warn("Unable to exchange message: {}. This exception is ignored.",message,e);} @AT@ 4851 @LENGTH@ 53
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String correlationID=message.getJMSCorrelationID(); @AT@ 4851 @LENGTH@ 6
------INS VariableDeclarationFragment@@correlationID=message.getJMSCorrelationID() @TO@ VariableDeclarationStatement@@String correlationID=message.getJMSCorrelationID(); @AT@ 4858 @LENGTH@ 45
---------INS SimpleName@@correlationID @TO@ VariableDeclarationFragment@@correlationID=message.getJMSCorrelationID() @AT@ 4858 @LENGTH@ 13
---------INS MethodInvocation@@message.getJMSCorrelationID() @TO@ VariableDeclarationFragment@@correlationID=message.getJMSCorrelationID() @AT@ 4874 @LENGTH@ 29
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getJMSCorrelationID() @AT@ 4874 @LENGTH@ 7
------------INS SimpleName@@MethodName:getJMSCorrelationID:[] @TO@ MethodInvocation@@message.getJMSCorrelationID() @AT@ 4882 @LENGTH@ 21
---INS IfStatement@@if (exchanger != null) {  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} else {  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @TO@ TryStatement@@try {  Exchanger<Object> exchanger=EXCHANGERS.get(message.getJMSCorrelationID());  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} catch (Exception e) {  log.warn("Unable to exchange message: {}. This exception is ignored.",message,e);} @AT@ 5022 @LENGTH@ 775
------INS InfixExpression@@exchanger != null @TO@ IfStatement@@if (exchanger != null) {  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} else {  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @AT@ 5026 @LENGTH@ 17
---------INS SimpleName@@exchanger @TO@ InfixExpression@@exchanger != null @AT@ 5026 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@exchanger != null @AT@ 5035 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchanger != null @AT@ 5039 @LENGTH@ 4
------INS Block@@ThenBody:{  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} @TO@ IfStatement@@if (exchanger != null) {  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} else {  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @AT@ 5045 @LENGTH@ 137
---------MOV ExpressionStatement@@MethodInvocation:exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS) @TO@ Block@@ThenBody:{  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} @AT@ 4956 @LENGTH@ 73
------INS Block@@ElseBody:{  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @TO@ IfStatement@@if (exchanger != null) {  exchanger.exchange(message,getResponseTimeOut(),TimeUnit.MILLISECONDS);} else {  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @AT@ 5188 @LENGTH@ 609
---------INS ExpressionStatement@@MethodInvocation:log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}) @TO@ Block@@ElseBody:{  log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message});} @AT@ 5499 @LENGTH@ 268
------------INS MethodInvocation@@log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}) @AT@ 5499 @LENGTH@ 267
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}) @AT@ 5499 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}", new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}] @TO@ MethodInvocation@@log.warn("Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}",new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}) @AT@ 5503 @LENGTH@ 263
------------------INS StringLiteral@@"Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}" @TO@ SimpleName@@MethodName:warn:["Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}", new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}] @AT@ 5508 @LENGTH@ 140
------------------INS ArrayCreation@@new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message} @TO@ SimpleName@@MethodName:warn:["Reply received for unknown correlationID [{}] on reply destination [{}]. Current correlation map size: {}. The message will be ignored: {}", new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message}] @AT@ 5690 @LENGTH@ 75
---------------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5694 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 5694 @LENGTH@ 6
---------------------INS ArrayInitializer@@{correlationID,replyToDestination,EXCHANGERS.size(),message} @TO@ ArrayCreation@@new Object[]{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5702 @LENGTH@ 63
------------------------INS SimpleName@@correlationID @TO@ ArrayInitializer@@{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5703 @LENGTH@ 13
------------------------INS SimpleName@@replyToDestination @TO@ ArrayInitializer@@{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5718 @LENGTH@ 18
------------------------INS MethodInvocation@@EXCHANGERS.size() @TO@ ArrayInitializer@@{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5738 @LENGTH@ 17
---------------------------INS SimpleName@@Name:EXCHANGERS @TO@ MethodInvocation@@EXCHANGERS.size() @AT@ 5738 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@EXCHANGERS.size() @AT@ 5749 @LENGTH@ 6
------------------------INS SimpleName@@message @TO@ ArrayInitializer@@{correlationID,replyToDestination,EXCHANGERS.size(),message} @AT@ 5757 @LENGTH@ 7


UPD TypeDeclaration@@[public]ProtectedResourceDetailsService,  @TO@ [@Deprecated, public]ProtectedResourceDetailsService,  @AT@ 735 @LENGTH@ 385
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProtectedResourceDetailsService,  @AT@ 956 @LENGTH@ 11


UPD MethodDeclaration@@default, SesEndpointBuilder, MethodName:ses, String path,  @TO@ default, SesEndpointBuilder, MethodName:awsSes, String path,  @AT@ 10124 @LENGTH@ 350
---UPD SimpleName@@MethodName:ses @TO@ MethodName:awsSes @AT@ 10151 @LENGTH@ 3


UPD TypeDeclaration@@[public]HttpSessionOAuthRememberMeServices, [OAuthRememberMeServices] @TO@ [@Deprecated, public]HttpSessionOAuthRememberMeServices, [OAuthRememberMeServices] @AT@ 602 @LENGTH@ 1206
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]HttpSessionOAuthRememberMeServices, [OAuthRememberMeServices] @AT@ 822 @LENGTH@ 11


UPD MethodDeclaration@@default, GoogleBigQuerySQLEndpointBuilder, MethodName:googleBigQuerySQL, String path,  @TO@ default, GoogleBigQuerySQLEndpointBuilder, MethodName:googleBigquerySql, String path,  @AT@ 5731 @LENGTH@ 460
---UPD SimpleName@@MethodName:googleBigQuerySQL @TO@ MethodName:googleBigquerySql @AT@ 5772 @LENGTH@ 17


INS MethodDeclaration@@Mono<org.bson.Document>, MethodName:findDocumentById, String id,  @TO@ TypeDeclaration@@ReactivePersonRepository, [ReactiveMongoRepository<Person,String>, ReactiveQuerydslPredicateExecutor<Person>] @AT@ 20952 @LENGTH@ 28
---INS ParameterizedType@@Mono<org.bson.Document> @TO@ MethodDeclaration@@Mono<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 20928 @LENGTH@ 23
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<org.bson.Document> @AT@ 20928 @LENGTH@ 4
------INS SimpleType@@org.bson.Document @TO@ ParameterizedType@@Mono<org.bson.Document> @AT@ 20933 @LENGTH@ 17
---INS SimpleName@@MethodName:findDocumentById @TO@ MethodDeclaration@@Mono<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 20952 @LENGTH@ 16
---INS SingleVariableDeclaration@@String id @TO@ MethodDeclaration@@Mono<org.bson.Document>, MethodName:findDocumentById, String id,  @AT@ 20969 @LENGTH@ 9
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String id @AT@ 20969 @LENGTH@ 6
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@String id @AT@ 20976 @LENGTH@ 2


UPD TypeDeclaration@@[public]OAuthURLStreamHandlerFactory,  @TO@ [@Deprecated, public]OAuthURLStreamHandlerFactory,  @AT@ 1011 @LENGTH@ 1101
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthURLStreamHandlerFactory,  @AT@ 1232 @LENGTH@ 11


UPD TypeDeclaration@@[@SpringBootApplication, public]ClientApplication,  @TO@ [@SpringBootApplication, public, final]ClientApplication,  @AT@ 1083 @LENGTH@ 236
---INS Modifier@@final @TO@ TypeDeclaration@@[@SpringBootApplication, public]ClientApplication,  @AT@ 1113 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, int, [PORT=findAvailableTcpPort()] @TO@ public, static, final, int, [PORT=findAvailableTcpPort()] @AT@ 1893 @LENGTH@ 55
---UPD Modifier@@private @TO@ public @AT@ 1893 @LENGTH@ 7


UPD TryStatement@@try {  final ServiceDiscovery client=context.getBean(ServiceDiscovery.class);  final ServiceRegistry registry=context.getBean(ServiceRegistry.class);  registry.register(DefaultServiceDefinition.builder().withHost(SERVICE_HOST).withPort(SERVICE_PORT).withName(SERVICE_NAME).withId(SERVICE_ID).build());  Collection<ServiceInstance<ZookeeperInstance>> services=client.queryForInstances(SERVICE_NAME);  assertThat(services).hasSize(1);  assertThat(services).first().hasFieldOrPropertyWithValue("address",SERVICE_HOST);  assertThat(services).first().hasFieldOrPropertyWithValue("port",SERVICE_PORT);  assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("id",SERVICE_ID);  assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("name",SERVICE_NAME);}  finally {  context.close();  server.shutdown();} @TO@ try {  final ServiceDiscovery client=context.getBean(ServiceDiscovery.class);  final ServiceRegistry registry=context.getBean(ServiceRegistry.class);  registry.register(DefaultServiceDefinition.builder().withHost(SERVICE_HOST).withPort(SERVICE_PORT).withName(SERVICE_NAME).withId(SERVICE_ID).build());  Collection<ServiceInstance<ZookeeperInstance>> services=client.queryForInstances(SERVICE_NAME);  assertThat(services).hasSize(1);  assertThat(services).first().hasFieldOrPropertyWithValue("address",SERVICE_HOST);  assertThat(services).first().hasFieldOrPropertyWithValue("port",SERVICE_PORT);  assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("id",SERVICE_ID);  assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("name",SERVICE_NAME);}  finally {  context.close();  server.shutdown();} @AT@ 3571 @LENGTH@ 1235
---UPD ExpressionStatement@@MethodInvocation:assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("id",SERVICE_ID) @TO@ MethodInvocation:assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("id",SERVICE_ID) @AT@ 4414 @LENGTH@ 105
------UPD MethodInvocation@@assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("id",SERVICE_ID) @TO@ assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("id",SERVICE_ID) @AT@ 4414 @LENGTH@ 104
---------DEL MethodInvocation@@MethodName:first:[] @AT@ 4414 @LENGTH@ 58
---UPD ExpressionStatement@@MethodInvocation:assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("name",SERVICE_NAME) @TO@ MethodInvocation:assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("name",SERVICE_NAME) @AT@ 4532 @LENGTH@ 109
------UPD MethodInvocation@@assertThat(services).first().extracting("payload").first().hasFieldOrPropertyWithValue("name",SERVICE_NAME) @TO@ assertThat(services).first().extracting("payload").hasFieldOrPropertyWithValue("name",SERVICE_NAME) @AT@ 4532 @LENGTH@ 108
---------DEL MethodInvocation@@MethodName:first:[] @AT@ 4532 @LENGTH@ 58


UPD TryStatement@@try {  execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return null;  });  return true;} catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @TO@ try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException ex) {  throw ex;}catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @AT@ 37378 @LENGTH@ 397
---DEL ExpressionStatement@@MethodInvocation:execute(channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return null;
}
) @AT@ 37388 @LENGTH@ 111
---UPD ReturnStatement@@BooleanLiteral:true @TO@ MethodInvocation:execute(channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return true;
}
) @AT@ 37504 @LENGTH@ 12
------MOV MethodInvocation@@execute(channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return null;
}
) @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 37388 @LENGTH@ 110
---------UPD SimpleName@@MethodName:execute:[channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return null;
}
] @TO@ MethodName:execute:[channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return true;
}
] @AT@ 37388 @LENGTH@ 110
------------UPD LambdaExpression@@channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return null;
}
 @TO@ channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return true;
}
 @AT@ 37396 @LENGTH@ 101
---------------UPD ReturnStatement@@NullLiteral:null @TO@ BooleanLiteral:true @AT@ 37479 @LENGTH@ 12
------------------DEL NullLiteral@@null @AT@ 37486 @LENGTH@ 4
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@NullLiteral:null @AT@ 37547 @LENGTH@ 4
------DEL BooleanLiteral@@true @AT@ 37511 @LENGTH@ 4
---INS CatchClause@@catch (AmqpConnectException ex) {  throw ex;} @TO@ TryStatement@@try {  execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return null;  });  return true;} catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @AT@ 37569 @LENGTH@ 52
------INS SingleVariableDeclaration@@AmqpConnectException ex @TO@ CatchClause@@catch (AmqpConnectException ex) {  throw ex;} @AT@ 37576 @LENGTH@ 23
---------INS SimpleType@@AmqpConnectException @TO@ SingleVariableDeclaration@@AmqpConnectException ex @AT@ 37576 @LENGTH@ 20
---------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@AmqpConnectException ex @AT@ 37597 @LENGTH@ 2
------INS ThrowStatement@@SimpleName:ex @TO@ CatchClause@@catch (AmqpConnectException ex) {  throw ex;} @AT@ 37607 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 37613 @LENGTH@ 2


UPD TypeDeclaration@@[public, static]DozerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DozerEndpointBuilder, [EndpointProducerBuilder] @AT@ 1438 @LENGTH@ 4315
---DEL Modifier@@static @AT@ 1445 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthAccessProviderToken, [OAuthProviderToken] @TO@ [@Deprecated, public]OAuthAccessProviderToken, [OAuthProviderToken] @AT@ 745 @LENGTH@ 283
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthAccessProviderToken, [OAuthProviderToken] @AT@ 966 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:shouldInitiaizeWithStandaloneConfiguration,  @TO@ public, void, MethodName:shouldInitializeWithStandaloneConfiguration,  @AT@ 1730 @LENGTH@ 341
---UPD SimpleName@@MethodName:shouldInitiaizeWithStandaloneConfiguration @TO@ MethodName:shouldInitializeWithStandaloneConfiguration @AT@ 1742 @LENGTH@ 42


UPD TypeDeclaration@@[public]NoOpOAuthRememberMeServices, [OAuthRememberMeServices] @TO@ [@Deprecated, public]NoOpOAuthRememberMeServices, [OAuthRememberMeServices] @AT@ 581 @LENGTH@ 355
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]NoOpOAuthRememberMeServices, [OAuthRememberMeServices] @AT@ 801 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations="classpath:config/namespace-application-context.xml"), @Transactional, public]UserRepositoryFinderTests,  @AT@ 6822 @LENGTH@ 289
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 6822 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 6829 @LENGTH@ 4
---INS SimpleName@@MethodName:executesQueryToSliceWithUnpaged @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 6834 @LENGTH@ 31
---INS VariableDeclarationStatement@@Slice<User> slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()); @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 6873 @LENGTH@ 87
------INS ParameterizedType@@Slice<User> @TO@ VariableDeclarationStatement@@Slice<User> slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()); @AT@ 6873 @LENGTH@ 11
---------INS SimpleType@@Slice @TO@ ParameterizedType@@Slice<User> @AT@ 6873 @LENGTH@ 5
---------INS SimpleType@@User @TO@ ParameterizedType@@Slice<User> @AT@ 6879 @LENGTH@ 4
------INS VariableDeclarationFragment@@slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @TO@ VariableDeclarationStatement@@Slice<User> slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()); @AT@ 6885 @LENGTH@ 74
---------INS SimpleName@@slice @TO@ VariableDeclarationFragment@@slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @AT@ 6885 @LENGTH@ 5
---------INS MethodInvocation@@userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @TO@ VariableDeclarationFragment@@slice=userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @AT@ 6893 @LENGTH@ 66
------------INS SimpleName@@Name:userRepository @TO@ MethodInvocation@@userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @AT@ 6893 @LENGTH@ 14
------------INS SimpleName@@MethodName:findSliceByLastname:["Matthews", Pageable.unpaged()] @TO@ MethodInvocation@@userRepository.findSliceByLastname("Matthews",Pageable.unpaged()) @AT@ 6908 @LENGTH@ 51
---------------INS StringLiteral@@"Matthews" @TO@ SimpleName@@MethodName:findSliceByLastname:["Matthews", Pageable.unpaged()] @AT@ 6928 @LENGTH@ 10
---------------INS MethodInvocation@@Pageable.unpaged() @TO@ SimpleName@@MethodName:findSliceByLastname:["Matthews", Pageable.unpaged()] @AT@ 6940 @LENGTH@ 18
------------------INS SimpleName@@Name:Pageable @TO@ MethodInvocation@@Pageable.unpaged() @AT@ 6940 @LENGTH@ 8
------------------INS SimpleName@@MethodName:unpaged:[] @TO@ MethodInvocation@@Pageable.unpaged() @AT@ 6949 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(slice,containsInAnyOrder(dave,oliver)) @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 6964 @LENGTH@ 52
------INS MethodInvocation@@assertThat(slice,containsInAnyOrder(dave,oliver)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice,containsInAnyOrder(dave,oliver)) @AT@ 6964 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[slice, containsInAnyOrder(dave,oliver)] @TO@ MethodInvocation@@assertThat(slice,containsInAnyOrder(dave,oliver)) @AT@ 6964 @LENGTH@ 51
------------INS SimpleName@@slice @TO@ SimpleName@@MethodName:assertThat:[slice, containsInAnyOrder(dave,oliver)] @AT@ 6975 @LENGTH@ 5
------------INS MethodInvocation@@containsInAnyOrder(dave,oliver) @TO@ SimpleName@@MethodName:assertThat:[slice, containsInAnyOrder(dave,oliver)] @AT@ 6982 @LENGTH@ 32
---------------INS SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @TO@ MethodInvocation@@containsInAnyOrder(dave,oliver) @AT@ 6982 @LENGTH@ 32
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @AT@ 7001 @LENGTH@ 4
------------------INS SimpleName@@oliver @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @AT@ 7007 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @TO@ MethodInvocation@@containsInAnyOrder(dave,oliver) @AT@ 6982 @LENGTH@ 32
------------------INS SimpleName@@dave @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @AT@ 7001 @LENGTH@ 4
------------------INS SimpleName@@oliver @TO@ SimpleName@@MethodName:containsInAnyOrder:[dave, oliver] @AT@ 7007 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(slice.getNumberOfElements(),is(2)) @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 7019 @LENGTH@ 47
------INS MethodInvocation@@assertThat(slice.getNumberOfElements(),is(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice.getNumberOfElements(),is(2)) @AT@ 7019 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[slice.getNumberOfElements(), is(2)] @TO@ MethodInvocation@@assertThat(slice.getNumberOfElements(),is(2)) @AT@ 7019 @LENGTH@ 46
------------INS MethodInvocation@@slice.getNumberOfElements() @TO@ SimpleName@@MethodName:assertThat:[slice.getNumberOfElements(), is(2)] @AT@ 7030 @LENGTH@ 27
---------------INS SimpleName@@Name:slice @TO@ MethodInvocation@@slice.getNumberOfElements() @AT@ 7030 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getNumberOfElements:[] @TO@ MethodInvocation@@slice.getNumberOfElements() @AT@ 7036 @LENGTH@ 21
------------INS MethodInvocation@@is(2) @TO@ SimpleName@@MethodName:assertThat:[slice.getNumberOfElements(), is(2)] @AT@ 7059 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 7059 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 7062 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 7059 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 7062 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(slice.hasNext(),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:executesQueryToSliceWithUnpaged,  @AT@ 7069 @LENGTH@ 39
------INS MethodInvocation@@assertThat(slice.hasNext(),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(slice.hasNext(),is(false)) @AT@ 7069 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @TO@ MethodInvocation@@assertThat(slice.hasNext(),is(false)) @AT@ 7069 @LENGTH@ 38
------------INS MethodInvocation@@slice.hasNext() @TO@ SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @AT@ 7080 @LENGTH@ 15
---------------INS SimpleName@@Name:slice @TO@ MethodInvocation@@slice.hasNext() @AT@ 7080 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@slice.hasNext() @AT@ 7086 @LENGTH@ 9
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[slice.hasNext(), is(false)] @AT@ 7097 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 7097 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 7100 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 7097 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 7100 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedXmlSignatureEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedXmlSignatureEndpointBuilder, [EndpointProducerBuilder] @AT@ 40244 @LENGTH@ 3523
---DEL Modifier@@static @AT@ 40251 @LENGTH@ 6


DEL VariableDeclarationStatement@@RequestMatcher authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null; @AT@ 19092 @LENGTH@ 117
---DEL SimpleType@@RequestMatcher @AT@ 19092 @LENGTH@ 14
---DEL VariableDeclarationFragment@@authenticationNullMatcher=request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 19107 @LENGTH@ 101
------DEL SimpleName@@authenticationNullMatcher @AT@ 19107 @LENGTH@ 25
------DEL LambdaExpression@@request -> SecurityContextHolder.getContext().getAuthentication() == null @AT@ 19135 @LENGTH@ 73
---------DEL VariableDeclarationFragment@@request @AT@ 19135 @LENGTH@ 7
------------DEL SimpleName@@request @AT@ 19135 @LENGTH@ 7
---------DEL InfixExpression@@SecurityContextHolder.getContext().getAuthentication() == null @AT@ 19146 @LENGTH@ 62
------------DEL MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 19146 @LENGTH@ 54
---------------DEL MethodInvocation@@MethodName:getContext:[] @AT@ 19146 @LENGTH@ 34
---------------DEL SimpleName@@Name:SecurityContextHolder @AT@ 19146 @LENGTH@ 21
---------------DEL SimpleName@@MethodName:getAuthentication:[] @AT@ 19181 @LENGTH@ 19
------------DEL Operator@@== @AT@ 19200 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 19204 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2908 @LENGTH@ 145
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2982 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2982 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2987 @LENGTH@ 28


UPD TypeDeclaration@@[public]AuthorizationCodeAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @TO@ [@Deprecated, public]AuthorizationCodeAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 3304 @LENGTH@ 11111
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationCodeAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 3481 @LENGTH@ 11


UPD Block@@ThenBody:{  List<File> files=Arrays.asList(docFiles);  boolean hasComponentDataFormatOrLanguage=files.stream().anyMatch((f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc"));  if (hasComponentDataFormatOrLanguage) {    files=Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());  }  if (files.size() == 1) {    List<SpringBootAutoConfigureOptionModel> models=parseSpringBootAutoConfigureModels(jsonFile,null);    boolean onlyOther=files.size() == 1 && !hasComponentDataFormatOrLanguage;    if (models.isEmpty() && onlyOther) {      return;    }    File docFile=files.get(0);    boolean noDescription=false;    for (    SpringBootAutoConfigureOptionModel o : models) {      if (StringHelper.isEmpty(o.getDescription())) {        noDescription=true;        getLog().warn("Option " + o.getName() + " has no description");      }    }    if (noDescription && isFailOnNoDescription()) {      throw new MojoExecutionException("Failed build due failOnMissingDescription=true");    }    String changed=templateAutoConfigurationOptions(models,componentName);    boolean updated=updateAutoConfigureOptions(docFile,changed);    if (updated) {      getLog().info("Updated doc file: " + docFile);    } else {      getLog().debug("No changes to doc file: " + docFile);    }  } else   if (files.size() > 1) {    for (    File docFile : files) {      String docName=docFile.getName();      int pos=docName.lastIndexOf("-");      String prefix=pos > 0 ? docName.substring(0,pos).toLowerCase(Locale.US) : null;      List<SpringBootAutoConfigureOptionModel> models=parseSpringBootAutoConfigureModels(jsonFile,prefix);      boolean noDescription=false;      for (      SpringBootAutoConfigureOptionModel o : models) {        if (StringHelper.isEmpty(o.getDescription())) {          noDescription=true;          getLog().warn("Option " + o.getName() + " has no description");        }      }      if (noDescription && isFailOnNoDescription()) {        throw new MojoExecutionException("Failed build due failOnMissingDescription=true");      }      String changed=templateAutoConfigurationOptions(models,componentName);      boolean updated=updateAutoConfigureOptions(docFile,changed);      if (updated) {        getLog().info("Updated doc file: " + docFile);      } else {        getLog().debug("No changes to doc file: " + docFile);      }    }  }} @TO@ ThenBody:{  List<File> files=Arrays.asList(docFiles);  boolean hasComponentDataFormatOrLanguage=files.stream().anyMatch(f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc"));  if (hasComponentDataFormatOrLanguage) {    files=Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());  }  if (files.size() == 1) {    List<SpringBootAutoConfigureOptionModel> models=parseSpringBootAutoConfigureModels(jsonFile,null);    boolean onlyOther=files.size() == 1 && !hasComponentDataFormatOrLanguage;    if (models.isEmpty() && onlyOther) {      return;    }    File docFile=files.get(0);    boolean noDescription=false;    for (    SpringBootAutoConfigureOptionModel o : models) {      if (StringHelper.isEmpty(o.getDescription())) {        noDescription=true;        getLog().warn("Option " + o.getName() + " has no description");      }    }    if (noDescription && isFailOnNoDescription()) {      throw new MojoExecutionException("Failed build due failOnMissingDescription=true");    }    String changed=templateAutoConfigurationOptions(models,componentName);    boolean updated=updateAutoConfigureOptions(docFile,changed);    if (updated) {      getLog().info("Updated doc file: " + docFile);    } else {      getLog().debug("No changes to doc file: " + docFile);    }  } else   if (files.size() > 1) {    for (    File docFile : files) {      String docName=docFile.getName();      int pos=docName.lastIndexOf("-");      String prefix=pos > 0 ? docName.substring(0,pos).toLowerCase(Locale.US) : null;      List<SpringBootAutoConfigureOptionModel> models=parseSpringBootAutoConfigureModels(jsonFile,prefix);      boolean noDescription=false;      for (      SpringBootAutoConfigureOptionModel o : models) {        if (StringHelper.isEmpty(o.getDescription())) {          noDescription=true;          getLog().warn("Option " + o.getName() + " has no description");        }      }      if (noDescription && isFailOnNoDescription()) {        throw new MojoExecutionException("Failed build due failOnMissingDescription=true");      }      String changed=templateAutoConfigurationOptions(models,componentName);      boolean updated=updateAutoConfigureOptions(docFile,changed);      if (updated) {        getLog().info("Updated doc file: " + docFile);      } else {        getLog().debug("No changes to doc file: " + docFile);      }    }  }} @AT@ 6115 @LENGTH@ 4477
---UPD VariableDeclarationStatement@@boolean hasComponentDataFormatOrLanguage=files.stream().anyMatch((f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")); @TO@ boolean hasComponentDataFormatOrLanguage=files.stream().anyMatch(f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")); @AT@ 6292 @LENGTH@ 226
------UPD VariableDeclarationFragment@@hasComponentDataFormatOrLanguage=files.stream().anyMatch((f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")) @TO@ hasComponentDataFormatOrLanguage=files.stream().anyMatch(f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")) @AT@ 6300 @LENGTH@ 217
---------UPD MethodInvocation@@files.stream().anyMatch((f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")) @TO@ files.stream().anyMatch(f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")) @AT@ 6335 @LENGTH@ 182
------------UPD SimpleName@@MethodName:anyMatch:[(f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")] @TO@ MethodName:anyMatch:[f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc")] @AT@ 6350 @LENGTH@ 167
---------------UPD LambdaExpression@@(f) -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc") @TO@ f -> f.getName().endsWith("-component.adoc") || f.getName().endsWith("-dataformat.adoc") || f.getName().endsWith("-language.adoc") @AT@ 6384 @LENGTH@ 132
---UPD IfStatement@@if (hasComponentDataFormatOrLanguage) {  files=Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());} @TO@ if (hasComponentDataFormatOrLanguage) {  files=Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());} @AT@ 6639 @LENGTH@ 207
------UPD Block@@ThenBody:{  files=Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());} @TO@ ThenBody:{  files=Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList());} @AT@ 6677 @LENGTH@ 169
---------UPD ExpressionStatement@@Assignment:files=Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @TO@ Assignment:files=Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @AT@ 6703 @LENGTH@ 121
------------UPD Assignment@@files=Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @TO@ files=Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @AT@ 6703 @LENGTH@ 120
---------------UPD MethodInvocation@@Arrays.stream(docFiles).filter((f) -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @TO@ Arrays.stream(docFiles).filter(f -> !f.getName().equals(componentName + ".adoc")).collect(Collectors.toList()) @AT@ 6711 @LENGTH@ 112
------------------UPD MethodInvocation@@MethodName:filter:[(f) -> !f.getName().equals(componentName + ".adoc")] @TO@ MethodName:filter:[f -> !f.getName().equals(componentName + ".adoc")] @AT@ 6711 @LENGTH@ 83
---------------------UPD LambdaExpression@@(f) -> !f.getName().equals(componentName + ".adoc") @TO@ f -> !f.getName().equals(componentName + ".adoc") @AT@ 6742 @LENGTH@ 51


UPD FieldDeclaration@@private, static, final, String[], [BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="}] @TO@ private, static, final, String[], [BASE64_IMPOSSIBLE_CASES={"=?ASCII?B?ZE==?=","=?ASCII?B?ZmC=?=","=?ASCII?B?Zm9vYE==?=","=?ASCII?B?Zm9vYmC=?=","=?ASCII?B?AB==?="}] @AT@ 1271 @LENGTH@ 152
---UPD VariableDeclarationFragment@@BASE64_IMPOSSIBLE_CASES={"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @TO@ BASE64_IMPOSSIBLE_CASES={"=?ASCII?B?ZE==?=","=?ASCII?B?ZmC=?=","=?ASCII?B?Zm9vYE==?=","=?ASCII?B?Zm9vYmC=?=","=?ASCII?B?AB==?="} @AT@ 1301 @LENGTH@ 121
------UPD ArrayInitializer@@{"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @TO@ {"=?ASCII?B?ZE==?=","=?ASCII?B?ZmC=?=","=?ASCII?B?Zm9vYE==?=","=?ASCII?B?Zm9vYmC=?=","=?ASCII?B?AB==?="} @AT@ 1327 @LENGTH@ 95
---------UPD StringLiteral@@"ZE==" @TO@ "=?ASCII?B?ZE==?=" @AT@ 1341 @LENGTH@ 6
---------UPD StringLiteral@@"ZmC=" @TO@ "=?ASCII?B?ZmC=?=" @AT@ 1361 @LENGTH@ 6
---------UPD StringLiteral@@"Zm9vYE==" @TO@ "=?ASCII?B?Zm9vYE==?=" @AT@ 1381 @LENGTH@ 10
---------UPD StringLiteral@@"Zm9vYmC=" @TO@ "=?ASCII?B?Zm9vYmC=?=" @AT@ 1405 @LENGTH@ 10
---------INS StringLiteral@@"=?ASCII?B?AB==?=" @TO@ ArrayInitializer@@{"ZE==","ZmC=","Zm9vYE==","Zm9vYmC="} @AT@ 1535 @LENGTH@ 18


UPD MethodDeclaration@@public, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @TO@ protected, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @AT@ 7137 @LENGTH@ 674
---UPD Modifier@@public @TO@ protected @AT@ 7137 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]PdfEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]PdfEndpointBuilder, [EndpointProducerBuilder] @AT@ 1431 @LENGTH@ 6962
---DEL Modifier@@static @AT@ 1438 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 3514 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(1000) @TO@ Thread.sleep(2000) @AT@ 3514 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[1000] @TO@ MethodName:sleep:[2000] @AT@ 3521 @LENGTH@ 11
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 3527 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]JoltInputOutputType,  @TO@ [static]JoltInputOutputType,  @AT@ 7822 @LENGTH@ 76
---DEL Modifier@@public @AT@ 7822 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:validateFormatError,  @TO@ TypeDeclaration@@[public]OidcIdTokenValidatorTests,  @AT@ 8130 @LENGTH@ 322
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8130 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8137 @LENGTH@ 4
---INS SimpleName@@MethodName:validateFormatError @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8142 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:this.claims.remove(IdTokenClaimNames.SUB) @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8168 @LENGTH@ 42
------INS MethodInvocation@@this.claims.remove(IdTokenClaimNames.SUB) @TO@ ExpressionStatement@@MethodInvocation:this.claims.remove(IdTokenClaimNames.SUB) @AT@ 8168 @LENGTH@ 41
---------INS FieldAccess@@this.claims @TO@ MethodInvocation@@this.claims.remove(IdTokenClaimNames.SUB) @AT@ 8168 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.claims @AT@ 8168 @LENGTH@ 4
------------INS SimpleName@@claims @TO@ FieldAccess@@this.claims @AT@ 8173 @LENGTH@ 6
---------INS SimpleName@@MethodName:remove:[IdTokenClaimNames.SUB] @TO@ MethodInvocation@@this.claims.remove(IdTokenClaimNames.SUB) @AT@ 8180 @LENGTH@ 29
------------INS QualifiedName@@IdTokenClaimNames.SUB @TO@ SimpleName@@MethodName:remove:[IdTokenClaimNames.SUB] @AT@ 8187 @LENGTH@ 21
---------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.SUB @AT@ 8187 @LENGTH@ 17
---------------INS SimpleName@@SUB @TO@ QualifiedName@@IdTokenClaimNames.SUB @AT@ 8205 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:this.claims.remove(IdTokenClaimNames.AUD) @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8213 @LENGTH@ 42
------INS MethodInvocation@@this.claims.remove(IdTokenClaimNames.AUD) @TO@ ExpressionStatement@@MethodInvocation:this.claims.remove(IdTokenClaimNames.AUD) @AT@ 8213 @LENGTH@ 41
---------INS FieldAccess@@this.claims @TO@ MethodInvocation@@this.claims.remove(IdTokenClaimNames.AUD) @AT@ 8213 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.claims @AT@ 8213 @LENGTH@ 4
------------INS SimpleName@@claims @TO@ FieldAccess@@this.claims @AT@ 8218 @LENGTH@ 6
---------INS SimpleName@@MethodName:remove:[IdTokenClaimNames.AUD] @TO@ MethodInvocation@@this.claims.remove(IdTokenClaimNames.AUD) @AT@ 8225 @LENGTH@ 29
------------INS QualifiedName@@IdTokenClaimNames.AUD @TO@ SimpleName@@MethodName:remove:[IdTokenClaimNames.AUD] @AT@ 8232 @LENGTH@ 21
---------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.AUD @AT@ 8232 @LENGTH@ 17
---------------INS SimpleName@@AUD @TO@ QualifiedName@@IdTokenClaimNames.AUD @AT@ 8250 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @TO@ MethodDeclaration@@public, void, MethodName:validateFormatError,  @AT@ 8258 @LENGTH@ 191
------INS MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @AT@ 8258 @LENGTH@ 190
---------INS MethodInvocation@@MethodName:extracting:[OAuth2Error::getDescription] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @AT@ 8258 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @AT@ 8258 @LENGTH@ 50
------------INS NumberLiteral@@1 @TO@ MethodInvocation@@MethodName:hasSize:[1] @AT@ 8306 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @AT@ 8258 @LENGTH@ 34
------------INS MethodInvocation@@this.validateIdToken() @TO@ MethodInvocation@@MethodName:assertThat:[this.validateIdToken()] @AT@ 8269 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.validateIdToken() @AT@ 8269 @LENGTH@ 4
---------------INS SimpleName@@MethodName:validateIdToken:[] @TO@ MethodInvocation@@this.validateIdToken() @AT@ 8274 @LENGTH@ 17
---------INS SimpleName@@MethodName:allMatch:[msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")] @TO@ MethodInvocation@@assertThat(this.validateIdToken()).hasSize(1).extracting(OAuth2Error::getDescription).allMatch(msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")) @AT@ 8359 @LENGTH@ 89
------------INS LambdaExpression@@msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @TO@ SimpleName@@MethodName:allMatch:[msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}")] @AT@ 8368 @LENGTH@ 79
---------------INS VariableDeclarationFragment@@msg @TO@ LambdaExpression@@msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @AT@ 8368 @LENGTH@ 3
------------------INS SimpleName@@msg @TO@ VariableDeclarationFragment@@msg @AT@ 8368 @LENGTH@ 3
---------------INS MethodInvocation@@msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @TO@ LambdaExpression@@msg -> msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @AT@ 8375 @LENGTH@ 72
------------------INS SimpleName@@Name:msg @TO@ MethodInvocation@@msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @AT@ 8375 @LENGTH@ 3
------------------INS SimpleName@@MethodName:equals:["The ID Token contains invalid claims: {sub=null, aud=null}"] @TO@ MethodInvocation@@msg.equals("The ID Token contains invalid claims: {sub=null, aud=null}") @AT@ 8379 @LENGTH@ 68
---------------------INS StringLiteral@@"The ID Token contains invalid claims: {sub=null, aud=null}" @TO@ SimpleName@@MethodName:equals:["The ID Token contains invalid claims: {sub=null, aud=null}"] @AT@ 8386 @LENGTH@ 60


UPD ExpressionStatement@@MethodInvocation:to.expectedMessageCount(NUMBER_OF_CONSUMERS) @TO@ MethodInvocation:to.expectedMinimumMessageCount(1) @AT@ 3823 @LENGTH@ 45
---UPD MethodInvocation@@to.expectedMessageCount(NUMBER_OF_CONSUMERS) @TO@ to.expectedMinimumMessageCount(1) @AT@ 3823 @LENGTH@ 44
------UPD SimpleName@@MethodName:expectedMessageCount:[NUMBER_OF_CONSUMERS] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 3826 @LENGTH@ 41
---------DEL SimpleName@@NUMBER_OF_CONSUMERS @AT@ 3847 @LENGTH@ 19
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:expectedMessageCount:[NUMBER_OF_CONSUMERS] @AT@ 3854 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:assertTrue(result.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@public, void, MethodName:testTokenEndpointUnauthenticated, Exception,  @AT@ 7567 @LENGTH@ 85
---INS MethodInvocation@@assertTrue(result.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(result.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 7567 @LENGTH@ 84
------INS SimpleName@@MethodName:assertTrue:[result.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(result.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 7567 @LENGTH@ 84
---------INS MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[result.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 7578 @LENGTH@ 72
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 7578 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 7578 @LENGTH@ 40
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 7602 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 7578 @LENGTH@ 19
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 7578 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@result.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 7630 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 7639 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testClearImp,  @TO@ TypeDeclaration@@[public]TestFixedSizedObjectPool,  @AT@ 7451 @LENGTH@ 707
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7451 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7458 @LENGTH@ 4
---INS SimpleName@@MethodName:testClearImp @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7463 @LENGTH@ 12
---INS VariableDeclarationStatement@@int size=10; @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7484 @LENGTH@ 14
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int size=10; @AT@ 7484 @LENGTH@ 3
------INS VariableDeclarationFragment@@size=10 @TO@ VariableDeclarationStatement@@int size=10; @AT@ 7488 @LENGTH@ 9
---------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=10 @AT@ 7488 @LENGTH@ 4
---------INS NumberLiteral@@10 @TO@ VariableDeclarationFragment@@size=10 @AT@ 7495 @LENGTH@ 2
---INS VariableDeclarationStatement@@FixedSizedObjectPool<Object> fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7503 @LENGTH@ 373
------INS ParameterizedType@@FixedSizedObjectPool<Object> @TO@ VariableDeclarationStatement@@FixedSizedObjectPool<Object> fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
); @AT@ 7503 @LENGTH@ 28
---------INS SimpleType@@FixedSizedObjectPool @TO@ ParameterizedType@@FixedSizedObjectPool<Object> @AT@ 7503 @LENGTH@ 20
---------INS SimpleType@@Object @TO@ ParameterizedType@@FixedSizedObjectPool<Object> @AT@ 7524 @LENGTH@ 6
------INS VariableDeclarationFragment@@fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
) @TO@ VariableDeclarationStatement@@FixedSizedObjectPool<Object> fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
); @AT@ 7540 @LENGTH@ 335
---------INS SimpleName@@fixedSizedObjectPool @TO@ VariableDeclarationFragment@@fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
) @AT@ 7540 @LENGTH@ 20
---------INS ClassInstanceCreation@@FixedSizedObjectPool<>[size, new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
] @TO@ VariableDeclarationFragment@@fixedSizedObjectPool=new FixedSizedObjectPool<>(size,new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
) @AT@ 7571 @LENGTH@ 304
------------INS New@@new @TO@ ClassInstanceCreation@@FixedSizedObjectPool<>[size, new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
] @AT@ 7571 @LENGTH@ 3
------------INS ParameterizedType@@FixedSizedObjectPool<> @TO@ ClassInstanceCreation@@FixedSizedObjectPool<>[size, new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
] @AT@ 7575 @LENGTH@ 22
---------------INS SimpleType@@FixedSizedObjectPool @TO@ ParameterizedType@@FixedSizedObjectPool<> @AT@ 7575 @LENGTH@ 20
------------INS SimpleName@@size @TO@ ClassInstanceCreation@@FixedSizedObjectPool<>[size, new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
] @AT@ 7598 @LENGTH@ 4
------------INS ClassInstanceCreation@@Pool.PoolObjectHelper<Object>[] @TO@ ClassInstanceCreation@@FixedSizedObjectPool<>[size, new Pool.PoolObjectHelper<Object>(){
  @Override public Object create(){
    return null;
  }
  @Override public void resetBeforeOffer(  Object o){
  }
}
] @AT@ 7604 @LENGTH@ 270
---------------INS New@@new @TO@ ClassInstanceCreation@@Pool.PoolObjectHelper<Object>[] @AT@ 7604 @LENGTH@ 3
---------------INS ParameterizedType@@Pool.PoolObjectHelper<Object> @TO@ ClassInstanceCreation@@Pool.PoolObjectHelper<Object>[] @AT@ 7608 @LENGTH@ 29
------------------INS SimpleType@@Pool.PoolObjectHelper @TO@ ParameterizedType@@Pool.PoolObjectHelper<Object> @AT@ 7608 @LENGTH@ 21
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Pool.PoolObjectHelper<Object> @AT@ 7630 @LENGTH@ 6
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Pool.PoolObjectHelper<Object>[] @AT@ 7640 @LENGTH@ 234
------------------INS MethodDeclaration@@public, Object, MethodName:create,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7662 @LENGTH@ 113
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:create,  @AT@ 7662 @LENGTH@ 6
---------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:create,  @AT@ 7669 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:create @TO@ MethodDeclaration@@public, Object, MethodName:create,  @AT@ 7676 @LENGTH@ 6
---------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, Object, MethodName:create,  @AT@ 7751 @LENGTH@ 12
------------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 7758 @LENGTH@ 4
------------------INS MethodDeclaration@@public, void, MethodName:resetBeforeOffer, Object o,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 7797 @LENGTH@ 67
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:resetBeforeOffer, Object o,  @AT@ 7797 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:resetBeforeOffer, Object o,  @AT@ 7804 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:resetBeforeOffer @TO@ MethodDeclaration@@public, void, MethodName:resetBeforeOffer, Object o,  @AT@ 7809 @LENGTH@ 16
---------------------INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, void, MethodName:resetBeforeOffer, Object o,  @AT@ 7826 @LENGTH@ 8
------------------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 7826 @LENGTH@ 6
------------------------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 7833 @LENGTH@ 1
---INS ForStatement@@for (int i=0; i < size; i++) {  fixedSizedObjectPool.offer(new Object());} @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7881 @LENGTH@ 86
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < size; i++) {  fixedSizedObjectPool.offer(new Object());} @AT@ 7886 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7886 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 7890 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 7890 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 7894 @LENGTH@ 1
------INS InfixExpression@@i < size @TO@ ForStatement@@for (int i=0; i < size; i++) {  fixedSizedObjectPool.offer(new Object());} @AT@ 7897 @LENGTH@ 8
---------INS SimpleName@@i @TO@ InfixExpression@@i < size @AT@ 7897 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < size @AT@ 7898 @LENGTH@ 1
---------INS SimpleName@@size @TO@ InfixExpression@@i < size @AT@ 7901 @LENGTH@ 4
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < size; i++) {  fixedSizedObjectPool.offer(new Object());} @AT@ 7907 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 7907 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 7909 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:fixedSizedObjectPool.offer(new Object()) @TO@ ForStatement@@for (int i=0; i < size; i++) {  fixedSizedObjectPool.offer(new Object());} @AT@ 7920 @LENGTH@ 41
---------INS MethodInvocation@@fixedSizedObjectPool.offer(new Object()) @TO@ ExpressionStatement@@MethodInvocation:fixedSizedObjectPool.offer(new Object()) @AT@ 7920 @LENGTH@ 40
------------INS SimpleName@@Name:fixedSizedObjectPool @TO@ MethodInvocation@@fixedSizedObjectPool.offer(new Object()) @AT@ 7920 @LENGTH@ 20
------------INS SimpleName@@MethodName:offer:[new Object()] @TO@ MethodInvocation@@fixedSizedObjectPool.offer(new Object()) @AT@ 7941 @LENGTH@ 19
---------------INS ClassInstanceCreation@@Object[] @TO@ SimpleName@@MethodName:offer:[new Object()] @AT@ 7947 @LENGTH@ 12
------------------INS New@@new @TO@ ClassInstanceCreation@@Object[] @AT@ 7947 @LENGTH@ 3
------------------INS SimpleType@@Object @TO@ ClassInstanceCreation@@Object[] @AT@ 7951 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals(size,fixedSizedObjectPool.size()) @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 7972 @LENGTH@ 55
------INS MethodInvocation@@Assert.assertEquals(size,fixedSizedObjectPool.size()) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals(size,fixedSizedObjectPool.size()) @AT@ 7972 @LENGTH@ 54
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals(size,fixedSizedObjectPool.size()) @AT@ 7972 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:[size, fixedSizedObjectPool.size()] @TO@ MethodInvocation@@Assert.assertEquals(size,fixedSizedObjectPool.size()) @AT@ 7979 @LENGTH@ 47
------------INS SimpleName@@size @TO@ SimpleName@@MethodName:assertEquals:[size, fixedSizedObjectPool.size()] @AT@ 7992 @LENGTH@ 4
------------INS MethodInvocation@@fixedSizedObjectPool.size() @TO@ SimpleName@@MethodName:assertEquals:[size, fixedSizedObjectPool.size()] @AT@ 7998 @LENGTH@ 27
---------------INS SimpleName@@Name:fixedSizedObjectPool @TO@ MethodInvocation@@fixedSizedObjectPool.size() @AT@ 7998 @LENGTH@ 20
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@fixedSizedObjectPool.size() @AT@ 8019 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertNotNull(fixedSizedObjectPool.take()) @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 8032 @LENGTH@ 43
------INS MethodInvocation@@assertNotNull(fixedSizedObjectPool.take()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(fixedSizedObjectPool.take()) @AT@ 8032 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertNotNull:[fixedSizedObjectPool.take()] @TO@ MethodInvocation@@assertNotNull(fixedSizedObjectPool.take()) @AT@ 8032 @LENGTH@ 42
------------INS MethodInvocation@@fixedSizedObjectPool.take() @TO@ SimpleName@@MethodName:assertNotNull:[fixedSizedObjectPool.take()] @AT@ 8046 @LENGTH@ 27
---------------INS SimpleName@@Name:fixedSizedObjectPool @TO@ MethodInvocation@@fixedSizedObjectPool.take() @AT@ 8046 @LENGTH@ 20
---------------INS SimpleName@@MethodName:take:[] @TO@ MethodInvocation@@fixedSizedObjectPool.take() @AT@ 8067 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:fixedSizedObjectPool.clear() @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 8080 @LENGTH@ 29
------INS MethodInvocation@@fixedSizedObjectPool.clear() @TO@ ExpressionStatement@@MethodInvocation:fixedSizedObjectPool.clear() @AT@ 8080 @LENGTH@ 28
---------INS SimpleName@@Name:fixedSizedObjectPool @TO@ MethodInvocation@@fixedSizedObjectPool.clear() @AT@ 8080 @LENGTH@ 20
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@fixedSizedObjectPool.clear() @AT@ 8101 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNull(fixedSizedObjectPool.take()) @TO@ MethodDeclaration@@public, void, MethodName:testClearImp,  @AT@ 8114 @LENGTH@ 40
------INS MethodInvocation@@assertNull(fixedSizedObjectPool.take()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(fixedSizedObjectPool.take()) @AT@ 8114 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertNull:[fixedSizedObjectPool.take()] @TO@ MethodInvocation@@assertNull(fixedSizedObjectPool.take()) @AT@ 8114 @LENGTH@ 39
------------INS MethodInvocation@@fixedSizedObjectPool.take() @TO@ SimpleName@@MethodName:assertNull:[fixedSizedObjectPool.take()] @AT@ 8125 @LENGTH@ 27
---------------INS SimpleName@@Name:fixedSizedObjectPool @TO@ MethodInvocation@@fixedSizedObjectPool.take() @AT@ 8125 @LENGTH@ 20
---------------INS SimpleName@@MethodName:take:[] @TO@ MethodInvocation@@fixedSizedObjectPool.take() @AT@ 8146 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultRedirectResolver, [RedirectResolver] @TO@ [@Deprecated, public]DefaultRedirectResolver, [RedirectResolver] @AT@ 1591 @LENGTH@ 7496
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultRedirectResolver, [RedirectResolver] @AT@ 1768 @LENGTH@ 11


UPD MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @TO@ private, ConcurrentSessionFilter, MethodName:createConcurrencyFilter, H http,  @AT@ 21925 @LENGTH@ 376
---UPD SimpleName@@MethodName:createConccurencyFilter @TO@ MethodName:createConcurrencyFilter @AT@ 21957 @LENGTH@ 23
---DEL IfStatement@@if (expireStrategy == null) {  return new ConcurrentSessionFilter(sessionRegistry);} @AT@ 22137 @LENGTH@ 89
---DEL ReturnStatement@@ClassInstanceCreation:new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @AT@ 22230 @LENGTH@ 68
------DEL ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @AT@ 22237 @LENGTH@ 60
---INS VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter; @TO@ MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @AT@ 22291 @LENGTH@ 48
------INS SimpleType@@ConcurrentSessionFilter @TO@ VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter; @AT@ 22291 @LENGTH@ 23
------INS VariableDeclarationFragment@@concurrentSessionFilter @TO@ VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter; @AT@ 22315 @LENGTH@ 23
---------INS SimpleName@@concurrentSessionFilter @TO@ VariableDeclarationFragment@@concurrentSessionFilter @AT@ 22315 @LENGTH@ 23
---INS IfStatement@@if (expireStrategy == null) {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry);} else {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @TO@ MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @AT@ 22342 @LENGTH@ 210
------MOV InfixExpression@@expireStrategy == null @TO@ IfStatement@@if (expireStrategy == null) {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry);} else {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @AT@ 22141 @LENGTH@ 22
------MOV Block@@ThenBody:{  return new ConcurrentSessionFilter(sessionRegistry);} @TO@ IfStatement@@if (expireStrategy == null) {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry);} else {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @AT@ 22165 @LENGTH@ 61
---------DEL ReturnStatement@@ClassInstanceCreation:new ConcurrentSessionFilter(sessionRegistry) @AT@ 22170 @LENGTH@ 52
------------DEL ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22177 @LENGTH@ 44
---------INS ExpressionStatement@@Assignment:concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @TO@ Block@@ThenBody:{  return new ConcurrentSessionFilter(sessionRegistry);} @AT@ 22375 @LENGTH@ 71
------------INS Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @TO@ ExpressionStatement@@Assignment:concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @AT@ 22375 @LENGTH@ 70
---------------INS SimpleName@@concurrentSessionFilter @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @AT@ 22375 @LENGTH@ 23
---------------INS Operator@@= @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @AT@ 22398 @LENGTH@ 1
---------------INS ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry) @AT@ 22401 @LENGTH@ 44
------------------MOV New@@new @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22177 @LENGTH@ 3
------------------MOV New@@new @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22177 @LENGTH@ 3
------------------MOV SimpleType@@ConcurrentSessionFilter @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22181 @LENGTH@ 23
------------------MOV SimpleType@@ConcurrentSessionFilter @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22181 @LENGTH@ 23
------------------MOV SimpleName@@sessionRegistry @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22205 @LENGTH@ 15
------------------MOV SimpleName@@sessionRegistry @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry] @AT@ 22205 @LENGTH@ 15
------INS Block@@ElseBody:{  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @TO@ IfStatement@@if (expireStrategy == null) {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry);} else {  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @AT@ 22456 @LENGTH@ 96
---------INS ExpressionStatement@@Assignment:concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @TO@ Block@@ElseBody:{  concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy);} @AT@ 22461 @LENGTH@ 87
------------INS Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @TO@ ExpressionStatement@@Assignment:concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @AT@ 22461 @LENGTH@ 86
---------------INS SimpleName@@concurrentSessionFilter @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @AT@ 22461 @LENGTH@ 23
---------------INS Operator@@= @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @AT@ 22484 @LENGTH@ 1
---------------INS ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @TO@ Assignment@@concurrentSessionFilter=new ConcurrentSessionFilter(sessionRegistry,expireStrategy) @AT@ 22487 @LENGTH@ 60
------------------MOV New@@new @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @AT@ 22237 @LENGTH@ 3
------------------MOV SimpleType@@ConcurrentSessionFilter @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @AT@ 22241 @LENGTH@ 23
------------------MOV SimpleName@@sessionRegistry @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @AT@ 22265 @LENGTH@ 15
------------------MOV SimpleName@@expireStrategy @TO@ ClassInstanceCreation@@ConcurrentSessionFilter[sessionRegistry, expireStrategy] @AT@ 22282 @LENGTH@ 14
---INS VariableDeclarationStatement@@LogoutConfigurer<H> logoutConfigurer=http.getConfigurer(LogoutConfigurer.class); @TO@ MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @AT@ 22555 @LENGTH@ 82
------INS ParameterizedType@@LogoutConfigurer<H> @TO@ VariableDeclarationStatement@@LogoutConfigurer<H> logoutConfigurer=http.getConfigurer(LogoutConfigurer.class); @AT@ 22555 @LENGTH@ 19
---------INS SimpleType@@LogoutConfigurer @TO@ ParameterizedType@@LogoutConfigurer<H> @AT@ 22555 @LENGTH@ 16
---------INS SimpleType@@H @TO@ ParameterizedType@@LogoutConfigurer<H> @AT@ 22572 @LENGTH@ 1
------INS VariableDeclarationFragment@@logoutConfigurer=http.getConfigurer(LogoutConfigurer.class) @TO@ VariableDeclarationStatement@@LogoutConfigurer<H> logoutConfigurer=http.getConfigurer(LogoutConfigurer.class); @AT@ 22575 @LENGTH@ 61
---------INS SimpleName@@logoutConfigurer @TO@ VariableDeclarationFragment@@logoutConfigurer=http.getConfigurer(LogoutConfigurer.class) @AT@ 22575 @LENGTH@ 16
---------INS MethodInvocation@@http.getConfigurer(LogoutConfigurer.class) @TO@ VariableDeclarationFragment@@logoutConfigurer=http.getConfigurer(LogoutConfigurer.class) @AT@ 22594 @LENGTH@ 42
------------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.getConfigurer(LogoutConfigurer.class) @AT@ 22594 @LENGTH@ 4
------------INS SimpleName@@MethodName:getConfigurer:[LogoutConfigurer.class] @TO@ MethodInvocation@@http.getConfigurer(LogoutConfigurer.class) @AT@ 22599 @LENGTH@ 37
---------------INS TypeLiteral@@LogoutConfigurer.class @TO@ SimpleName@@MethodName:getConfigurer:[LogoutConfigurer.class] @AT@ 22613 @LENGTH@ 22
---INS IfStatement@@if (logoutConfigurer != null) {  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @TO@ MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @AT@ 22640 @LENGTH@ 232
------INS InfixExpression@@logoutConfigurer != null @TO@ IfStatement@@if (logoutConfigurer != null) {  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @AT@ 22644 @LENGTH@ 24
---------INS SimpleName@@logoutConfigurer @TO@ InfixExpression@@logoutConfigurer != null @AT@ 22644 @LENGTH@ 16
---------INS Operator@@!= @TO@ InfixExpression@@logoutConfigurer != null @AT@ 22660 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@logoutConfigurer != null @AT@ 22664 @LENGTH@ 4
------INS Block@@ThenBody:{  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @TO@ IfStatement@@if (logoutConfigurer != null) {  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @AT@ 22670 @LENGTH@ 202
---------INS VariableDeclarationStatement@@List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers(); @TO@ Block@@ThenBody:{  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @AT@ 22675 @LENGTH@ 74
------------INS ParameterizedType@@List<LogoutHandler> @TO@ VariableDeclarationStatement@@List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers(); @AT@ 22675 @LENGTH@ 19
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 22675 @LENGTH@ 4
---------------INS SimpleType@@LogoutHandler @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 22680 @LENGTH@ 13
------------INS VariableDeclarationFragment@@logoutHandlers=logoutConfigurer.getLogoutHandlers() @TO@ VariableDeclarationStatement@@List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers(); @AT@ 22695 @LENGTH@ 53
---------------INS SimpleName@@logoutHandlers @TO@ VariableDeclarationFragment@@logoutHandlers=logoutConfigurer.getLogoutHandlers() @AT@ 22695 @LENGTH@ 14
---------------INS MethodInvocation@@logoutConfigurer.getLogoutHandlers() @TO@ VariableDeclarationFragment@@logoutHandlers=logoutConfigurer.getLogoutHandlers() @AT@ 22712 @LENGTH@ 36
------------------INS SimpleName@@Name:logoutConfigurer @TO@ MethodInvocation@@logoutConfigurer.getLogoutHandlers() @AT@ 22712 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getLogoutHandlers:[] @TO@ MethodInvocation@@logoutConfigurer.getLogoutHandlers() @AT@ 22729 @LENGTH@ 19
---------INS IfStatement@@if (!CollectionUtils.isEmpty(logoutHandlers)) {  concurrentSessionFilter.setLogoutHandlers(logoutHandlers);} @TO@ Block@@ThenBody:{  List<LogoutHandler> logoutHandlers=logoutConfigurer.getLogoutHandlers();  if (!CollectionUtils.isEmpty(logoutHandlers)) {    concurrentSessionFilter.setLogoutHandlers(logoutHandlers);  }} @AT@ 22753 @LENGTH@ 115
------------INS PrefixExpression@@!CollectionUtils.isEmpty(logoutHandlers) @TO@ IfStatement@@if (!CollectionUtils.isEmpty(logoutHandlers)) {  concurrentSessionFilter.setLogoutHandlers(logoutHandlers);} @AT@ 22757 @LENGTH@ 40
---------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(logoutHandlers) @AT@ 22757 @LENGTH@ 1
---------------INS MethodInvocation@@CollectionUtils.isEmpty(logoutHandlers) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(logoutHandlers) @AT@ 22758 @LENGTH@ 39
------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(logoutHandlers) @AT@ 22758 @LENGTH@ 15
------------------INS SimpleName@@MethodName:isEmpty:[logoutHandlers] @TO@ MethodInvocation@@CollectionUtils.isEmpty(logoutHandlers) @AT@ 22774 @LENGTH@ 23
---------------------INS SimpleName@@logoutHandlers @TO@ SimpleName@@MethodName:isEmpty:[logoutHandlers] @AT@ 22782 @LENGTH@ 14
------------INS Block@@ThenBody:{  concurrentSessionFilter.setLogoutHandlers(logoutHandlers);} @TO@ IfStatement@@if (!CollectionUtils.isEmpty(logoutHandlers)) {  concurrentSessionFilter.setLogoutHandlers(logoutHandlers);} @AT@ 22799 @LENGTH@ 69
---------------INS ExpressionStatement@@MethodInvocation:concurrentSessionFilter.setLogoutHandlers(logoutHandlers) @TO@ Block@@ThenBody:{  concurrentSessionFilter.setLogoutHandlers(logoutHandlers);} @AT@ 22805 @LENGTH@ 58
------------------INS MethodInvocation@@concurrentSessionFilter.setLogoutHandlers(logoutHandlers) @TO@ ExpressionStatement@@MethodInvocation:concurrentSessionFilter.setLogoutHandlers(logoutHandlers) @AT@ 22805 @LENGTH@ 57
---------------------INS SimpleName@@Name:concurrentSessionFilter @TO@ MethodInvocation@@concurrentSessionFilter.setLogoutHandlers(logoutHandlers) @AT@ 22805 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:setLogoutHandlers:[logoutHandlers] @TO@ MethodInvocation@@concurrentSessionFilter.setLogoutHandlers(logoutHandlers) @AT@ 22829 @LENGTH@ 33
------------------------INS SimpleName@@logoutHandlers @TO@ SimpleName@@MethodName:setLogoutHandlers:[logoutHandlers] @AT@ 22847 @LENGTH@ 14
---INS ReturnStatement@@SimpleName:concurrentSessionFilter @TO@ MethodDeclaration@@private, ConcurrentSessionFilter, MethodName:createConccurencyFilter, H http,  @AT@ 22875 @LENGTH@ 31
------INS SimpleName@@concurrentSessionFilter @TO@ ReturnStatement@@SimpleName:concurrentSessionFilter @AT@ 22882 @LENGTH@ 23


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsTestSecurityContextTests,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SecurityMockMvcRequestPostProcessorsTestSecurityContextTests,  @AT@ 1679 @LENGTH@ 1180
---INS SingleMemberAnnotation@@@PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}) @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsTestSecurityContextTests,  @AT@ 1822 @LENGTH@ 123


UPD EnumDeclaration@@[public, static]LuceneOperation,  @TO@ [static]LuceneOperation,  @AT@ 8442 @LENGTH@ 65
---DEL Modifier@@public @AT@ 8442 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:setAfterReceivePostProcessors, MessagePostProcessor... afterReceivePostProcessors,  @TO@ public, void, MethodName:setAfterReceivePostProcessors, MessagePostProcessor... postProcessors,  @AT@ 9638 @LENGTH@ 162
---UPD SingleVariableDeclaration@@MessagePostProcessor... afterReceivePostProcessors @TO@ MessagePostProcessor... postProcessors @AT@ 9680 @LENGTH@ 50
------UPD SimpleName@@afterReceivePostProcessors @TO@ postProcessors @AT@ 9704 @LENGTH@ 26
---UPD ExpressionStatement@@Assignment:this.afterReceivePostProcessors=afterReceivePostProcessors @TO@ Assignment:this.afterReceivePostProcessors=Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 9736 @LENGTH@ 61
------UPD Assignment@@this.afterReceivePostProcessors=afterReceivePostProcessors @TO@ this.afterReceivePostProcessors=Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 9736 @LENGTH@ 60
---------DEL SimpleName@@afterReceivePostProcessors @AT@ 9770 @LENGTH@ 26
---------INS MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @TO@ Assignment@@this.afterReceivePostProcessors=afterReceivePostProcessors @AT@ 9942 @LENGTH@ 52
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 9942 @LENGTH@ 6
------------INS SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @TO@ MethodInvocation@@Arrays.copyOf(postProcessors,postProcessors.length) @AT@ 9949 @LENGTH@ 45
---------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @AT@ 9956 @LENGTH@ 14
---------------INS QualifiedName@@postProcessors.length @TO@ SimpleName@@MethodName:copyOf:[postProcessors, postProcessors.length] @AT@ 9972 @LENGTH@ 21
------------------INS SimpleName@@postProcessors @TO@ QualifiedName@@postProcessors.length @AT@ 9972 @LENGTH@ 14
------------------INS SimpleName@@length @TO@ QualifiedName@@postProcessors.length @AT@ 9987 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(postProcessors,"'postProcessors' cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setAfterReceivePostProcessors, MessagePostProcessor... afterReceivePostProcessors,  @AT@ 9752 @LENGTH@ 66
------INS MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 9752 @LENGTH@ 65
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 9752 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @TO@ MethodInvocation@@Assert.notNull(postProcessors,"'postProcessors' cannot be null") @AT@ 9759 @LENGTH@ 58
------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @AT@ 9767 @LENGTH@ 14
------------INS StringLiteral@@"'postProcessors' cannot be null" @TO@ SimpleName@@MethodName:notNull:[postProcessors, "'postProcessors' cannot be null"] @AT@ 9783 @LENGTH@ 33
---INS ExpressionStatement@@MethodInvocation:Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @TO@ MethodDeclaration@@public, void, MethodName:setAfterReceivePostProcessors, MessagePostProcessor... afterReceivePostProcessors,  @AT@ 9821 @LENGTH@ 84
------INS MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @TO@ ExpressionStatement@@MethodInvocation:Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 9821 @LENGTH@ 83
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 9821 @LENGTH@ 6
---------INS SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @TO@ MethodInvocation@@Assert.noNullElements(postProcessors,"'postProcessors' cannot have null elements") @AT@ 9828 @LENGTH@ 76
------------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @AT@ 9843 @LENGTH@ 14
------------INS StringLiteral@@"'postProcessors' cannot have null elements" @TO@ SimpleName@@MethodName:noNullElements:[postProcessors, "'postProcessors' cannot have null elements"] @AT@ 9859 @LENGTH@ 44


UPD TypeDeclaration@@[public, static]SchematronEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SchematronEndpointBuilder, [EndpointProducerBuilder] @AT@ 1410 @LENGTH@ 2012
---DEL Modifier@@static @AT@ 1417 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, String, [SYS_PROPERTY_NEOJ4_URL="SDN_RX_NEO4J_URL"] @TO@ private, static, final, String, [SYS_PROPERTY_NEO4J_URL="SDN_RX_NEO4J_URL"] @AT@ 2890 @LENGTH@ 72
---UPD VariableDeclarationFragment@@SYS_PROPERTY_NEOJ4_URL="SDN_RX_NEO4J_URL" @TO@ SYS_PROPERTY_NEO4J_URL="SDN_RX_NEO4J_URL" @AT@ 2918 @LENGTH@ 43
------UPD SimpleName@@SYS_PROPERTY_NEOJ4_URL @TO@ SYS_PROPERTY_NEO4J_URL @AT@ 2918 @LENGTH@ 22


UPD VariableDeclarationStatement@@Mono<UserDetails> result=(Mono<UserDetails>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block(); @TO@ Mono<String> result=(Mono<String>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block(); @AT@ 3544 @LENGTH@ 228
---UPD ParameterizedType@@Mono<UserDetails> @TO@ Mono<String> @AT@ 3544 @LENGTH@ 17
------UPD SimpleType@@UserDetails @TO@ String @AT@ 3549 @LENGTH@ 11
---UPD VariableDeclarationFragment@@result=(Mono<UserDetails>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block() @TO@ result=(Mono<String>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block() @AT@ 3562 @LENGTH@ 209
------UPD CastExpression@@(Mono<UserDetails>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block() @TO@ (Mono<String>)this.resolver.resolveArgument(arg0("authenticationPrincipalExpression"),null).subscriberContext(ReactiveSecurityContextHolder.withAuthentication(authentication)).block() @AT@ 3571 @LENGTH@ 200
---------UPD ParameterizedType@@Mono<UserDetails> @TO@ Mono<String> @AT@ 3572 @LENGTH@ 17
------------UPD SimpleType@@UserDetails @TO@ String @AT@ 3577 @LENGTH@ 11


INS MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @TO@ TypeDeclaration@@[@Configuration, static]Config, AbstractMongoClientConfiguration @AT@ 3338 @LENGTH@ 60
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 3338 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 3348 @LENGTH@ 7
---INS SimpleName@@MethodName:autoIndexCreation @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 3356 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 3381 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3388 @LENGTH@ 5


UPD TypeDeclaration@@[public]WhitelistedSerializationStrategy, DefaultSerializationStrategy @TO@ [@Deprecated, public]WhitelistedSerializationStrategy, DefaultSerializationStrategy @AT@ 1160 @LENGTH@ 4028
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]WhitelistedSerializationStrategy, DefaultSerializationStrategy @AT@ 1338 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @TO@ TypeDeclaration@@[public]QueryExecutionResultHandlerUnitTests,  @AT@ 13586 @LENGTH@ 205
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13586 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13593 @LENGTH@ 4
---INS SimpleName@@MethodName:keepsVavrOptionType @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13598 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13627 @LENGTH@ 9
---INS VariableDeclarationStatement@@Option<Entity> source=Option.of(new Entity()); @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13642 @LENGTH@ 48
------INS ParameterizedType@@Option<Entity> @TO@ VariableDeclarationStatement@@Option<Entity> source=Option.of(new Entity()); @AT@ 13642 @LENGTH@ 14
---------INS SimpleType@@Option @TO@ ParameterizedType@@Option<Entity> @AT@ 13642 @LENGTH@ 6
---------INS SimpleType@@Entity @TO@ ParameterizedType@@Option<Entity> @AT@ 13649 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=Option.of(new Entity()) @TO@ VariableDeclarationStatement@@Option<Entity> source=Option.of(new Entity()); @AT@ 13657 @LENGTH@ 32
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=Option.of(new Entity()) @AT@ 13657 @LENGTH@ 6
---------INS MethodInvocation@@Option.of(new Entity()) @TO@ VariableDeclarationFragment@@source=Option.of(new Entity()) @AT@ 13666 @LENGTH@ 23
------------INS SimpleName@@Name:Option @TO@ MethodInvocation@@Option.of(new Entity()) @AT@ 13666 @LENGTH@ 6
------------INS SimpleName@@MethodName:of:[new Entity()] @TO@ MethodInvocation@@Option.of(new Entity()) @AT@ 13673 @LENGTH@ 16
---------------INS ClassInstanceCreation@@Entity[] @TO@ SimpleName@@MethodName:of:[new Entity()] @AT@ 13676 @LENGTH@ 12
------------------INS New@@new @TO@ ClassInstanceCreation@@Entity[] @AT@ 13676 @LENGTH@ 3
------------------INS SimpleType@@Entity @TO@ ClassInstanceCreation@@Entity[] @AT@ 13680 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(handler.postProcessInvocationResult(source,getMethod("option"))).isSameAs(source) @TO@ MethodDeclaration@@public, void, MethodName:keepsVavrOptionType, Exception,  @AT@ 13694 @LENGTH@ 94
------INS MethodInvocation@@assertThat(handler.postProcessInvocationResult(source,getMethod("option"))).isSameAs(source) @TO@ ExpressionStatement@@MethodInvocation:assertThat(handler.postProcessInvocationResult(source,getMethod("option"))).isSameAs(source) @AT@ 13694 @LENGTH@ 93
---------INS MethodInvocation@@MethodName:assertThat:[handler.postProcessInvocationResult(source,getMethod("option"))] @TO@ MethodInvocation@@assertThat(handler.postProcessInvocationResult(source,getMethod("option"))).isSameAs(source) @AT@ 13694 @LENGTH@ 76
------------INS MethodInvocation@@handler.postProcessInvocationResult(source,getMethod("option")) @TO@ MethodInvocation@@MethodName:assertThat:[handler.postProcessInvocationResult(source,getMethod("option"))] @AT@ 13705 @LENGTH@ 64
---------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.postProcessInvocationResult(source,getMethod("option")) @AT@ 13705 @LENGTH@ 7
---------------INS SimpleName@@MethodName:postProcessInvocationResult:[source, getMethod("option")] @TO@ MethodInvocation@@handler.postProcessInvocationResult(source,getMethod("option")) @AT@ 13713 @LENGTH@ 56
------------------INS SimpleName@@source @TO@ SimpleName@@MethodName:postProcessInvocationResult:[source, getMethod("option")] @AT@ 13741 @LENGTH@ 6
------------------INS MethodInvocation@@getMethod("option") @TO@ SimpleName@@MethodName:postProcessInvocationResult:[source, getMethod("option")] @AT@ 13749 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:getMethod:["option"] @TO@ MethodInvocation@@getMethod("option") @AT@ 13749 @LENGTH@ 19
------------------------INS StringLiteral@@"option" @TO@ SimpleName@@MethodName:getMethod:["option"] @AT@ 13759 @LENGTH@ 8
---------INS SimpleName@@MethodName:isSameAs:[source] @TO@ MethodInvocation@@assertThat(handler.postProcessInvocationResult(source,getMethod("option"))).isSameAs(source) @AT@ 13771 @LENGTH@ 16
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:isSameAs:[source] @AT@ 13780 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]CsrfFilterTests,  @AT@ 14851 @LENGTH@ 514
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14851 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14858 @LENGTH@ 4
---INS SimpleName@@MethodName:doFilterWhenSkipRequestInvokedThenSkips @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14863 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14915 @LENGTH@ 9
---INS VariableDeclarationStatement@@CsrfTokenRepository repository=mock(CsrfTokenRepository.class); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14930 @LENGTH@ 65
------INS SimpleType@@CsrfTokenRepository @TO@ VariableDeclarationStatement@@CsrfTokenRepository repository=mock(CsrfTokenRepository.class); @AT@ 14930 @LENGTH@ 19
------INS VariableDeclarationFragment@@repository=mock(CsrfTokenRepository.class) @TO@ VariableDeclarationStatement@@CsrfTokenRepository repository=mock(CsrfTokenRepository.class); @AT@ 14950 @LENGTH@ 44
---------INS SimpleName@@repository @TO@ VariableDeclarationFragment@@repository=mock(CsrfTokenRepository.class) @AT@ 14950 @LENGTH@ 10
---------INS MethodInvocation@@mock(CsrfTokenRepository.class) @TO@ VariableDeclarationFragment@@repository=mock(CsrfTokenRepository.class) @AT@ 14963 @LENGTH@ 31
------------INS SimpleName@@MethodName:mock:[CsrfTokenRepository.class] @TO@ MethodInvocation@@mock(CsrfTokenRepository.class) @AT@ 14963 @LENGTH@ 31
---------------INS TypeLiteral@@CsrfTokenRepository.class @TO@ SimpleName@@MethodName:mock:[CsrfTokenRepository.class] @AT@ 14968 @LENGTH@ 25
---INS VariableDeclarationStatement@@CsrfFilter filter=new CsrfFilter(repository); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 14998 @LENGTH@ 47
------INS SimpleType@@CsrfFilter @TO@ VariableDeclarationStatement@@CsrfFilter filter=new CsrfFilter(repository); @AT@ 14998 @LENGTH@ 10
------INS VariableDeclarationFragment@@filter=new CsrfFilter(repository) @TO@ VariableDeclarationStatement@@CsrfFilter filter=new CsrfFilter(repository); @AT@ 15009 @LENGTH@ 35
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=new CsrfFilter(repository) @AT@ 15009 @LENGTH@ 6
---------INS ClassInstanceCreation@@CsrfFilter[repository] @TO@ VariableDeclarationFragment@@filter=new CsrfFilter(repository) @AT@ 15018 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@CsrfFilter[repository] @AT@ 15018 @LENGTH@ 3
------------INS SimpleType@@CsrfFilter @TO@ ClassInstanceCreation@@CsrfFilter[repository] @AT@ 15022 @LENGTH@ 10
------------INS SimpleName@@repository @TO@ ClassInstanceCreation@@CsrfFilter[repository] @AT@ 15033 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 15049 @LENGTH@ 91
------INS MethodInvocation@@lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @TO@ ExpressionStatement@@MethodInvocation:lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @AT@ 15049 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:when:[repository.loadToken(any(HttpServletRequest.class))] @TO@ MethodInvocation@@lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @AT@ 15049 @LENGTH@ 67
------------INS MethodInvocation@@repository.loadToken(any(HttpServletRequest.class)) @TO@ MethodInvocation@@MethodName:when:[repository.loadToken(any(HttpServletRequest.class))] @AT@ 15064 @LENGTH@ 51
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.loadToken(any(HttpServletRequest.class)) @AT@ 15064 @LENGTH@ 10
---------------INS SimpleName@@MethodName:loadToken:[any(HttpServletRequest.class)] @TO@ MethodInvocation@@repository.loadToken(any(HttpServletRequest.class)) @AT@ 15075 @LENGTH@ 40
------------------INS MethodInvocation@@any(HttpServletRequest.class) @TO@ SimpleName@@MethodName:loadToken:[any(HttpServletRequest.class)] @AT@ 15085 @LENGTH@ 29
---------------------INS SimpleName@@MethodName:any:[HttpServletRequest.class] @TO@ MethodInvocation@@any(HttpServletRequest.class) @AT@ 15085 @LENGTH@ 29
------------------------INS TypeLiteral@@HttpServletRequest.class @TO@ SimpleName@@MethodName:any:[HttpServletRequest.class] @AT@ 15089 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:lenient:[] @TO@ MethodInvocation@@lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @AT@ 15049 @LENGTH@ 9
---------INS SimpleName@@MethodName:thenReturn:[this.token] @TO@ MethodInvocation@@lenient().when(repository.loadToken(any(HttpServletRequest.class))).thenReturn(this.token) @AT@ 15117 @LENGTH@ 22
------------INS FieldAccess@@this.token @TO@ SimpleName@@MethodName:thenReturn:[this.token] @AT@ 15128 @LENGTH@ 10
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.token @AT@ 15128 @LENGTH@ 4
---------------INS SimpleName@@token @TO@ FieldAccess@@this.token @AT@ 15133 @LENGTH@ 5
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 15144 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 15144 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 15167 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 15167 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 15177 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 15177 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 15181 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:CsrfFilter.skipRequest(request) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 15209 @LENGTH@ 32
------INS MethodInvocation@@CsrfFilter.skipRequest(request) @TO@ ExpressionStatement@@MethodInvocation:CsrfFilter.skipRequest(request) @AT@ 15209 @LENGTH@ 31
---------INS SimpleName@@Name:CsrfFilter @TO@ MethodInvocation@@CsrfFilter.skipRequest(request) @AT@ 15209 @LENGTH@ 10
---------INS SimpleName@@MethodName:skipRequest:[request] @TO@ MethodInvocation@@CsrfFilter.skipRequest(request) @AT@ 15220 @LENGTH@ 20
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:skipRequest:[request] @AT@ 15232 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain()) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 15244 @LENGTH@ 79
------INS MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain()) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain()) @AT@ 15244 @LENGTH@ 78
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain()) @AT@ 15244 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), new MockFilterChain()] @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),new MockFilterChain()) @AT@ 15251 @LENGTH@ 71
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), new MockFilterChain()] @AT@ 15260 @LENGTH@ 7
------------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), new MockFilterChain()] @AT@ 15269 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 15269 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 15273 @LENGTH@ 23
------------INS ClassInstanceCreation@@MockFilterChain[] @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), new MockFilterChain()] @AT@ 15300 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@MockFilterChain[] @AT@ 15300 @LENGTH@ 3
---------------INS SimpleType@@MockFilterChain @TO@ ClassInstanceCreation@@MockFilterChain[] @AT@ 15304 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:verifyZeroInteractions(repository) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSkipRequestInvokedThenSkips, Exception,  @AT@ 15327 @LENGTH@ 35
------INS MethodInvocation@@verifyZeroInteractions(repository) @TO@ ExpressionStatement@@MethodInvocation:verifyZeroInteractions(repository) @AT@ 15327 @LENGTH@ 34
---------INS SimpleName@@MethodName:verifyZeroInteractions:[repository] @TO@ MethodInvocation@@verifyZeroInteractions(repository) @AT@ 15327 @LENGTH@ 34
------------INS SimpleName@@repository @TO@ SimpleName@@MethodName:verifyZeroInteractions:[repository] @AT@ 15350 @LENGTH@ 10


UPD TypeDeclaration@@[public]ClientDetailsServiceBuilder, SecurityConfigurerAdapter<ClientDetailsService,B>[SecurityBuilder<ClientDetailsService>] @TO@ [@Deprecated, public]ClientDetailsServiceBuilder, SecurityConfigurerAdapter<ClientDetailsService,B>[SecurityBuilder<ClientDetailsService>] @AT@ 1568 @LENGTH@ 5377
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetailsServiceBuilder, SecurityConfigurerAdapter<ClientDetailsService,B>[SecurityBuilder<ClientDetailsService>] @AT@ 1745 @LENGTH@ 11


UPD TypeDeclaration@@[public]InMemorySelfCleaningProviderTokenServices, InMemoryProviderTokenServices[DisposableBean] @TO@ [@Deprecated, public]InMemorySelfCleaningProviderTokenServices, InMemoryProviderTokenServices[DisposableBean] @AT@ 1073 @LENGTH@ 1868
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemorySelfCleaningProviderTokenServices, InMemoryProviderTokenServices[DisposableBean] @AT@ 1294 @LENGTH@ 11


UPD TypeDeclaration@@[public]ProtectedResourceProcessingFilter, OAuthProviderProcessingFilter @TO@ [@Deprecated, public]ProtectedResourceProcessingFilter, OAuthProviderProcessingFilter @AT@ 2254 @LENGTH@ 3221
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProtectedResourceProcessingFilter, OAuthProviderProcessingFilter @AT@ 2475 @LENGTH@ 11


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 7943 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 7950 @LENGTH@ 5


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 1997 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2009 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2017 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2017 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2057 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2065 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2084 @LENGTH@ 4


UPD MethodDeclaration@@default, IronMQEndpointBuilder, MethodName:ironMQ, String path,  @TO@ default, IronMQEndpointBuilder, MethodName:ironmq, String path,  @AT@ 45553 @LENGTH@ 370
---UPD SimpleName@@MethodName:ironMQ @TO@ MethodName:ironmq @AT@ 45583 @LENGTH@ 6


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=handler.handle(new MessageHandler.Context(dbNameToLoadIn,fromPath.toString(),null,null,context.hiveConf,context.hiveDb,context.nestedContext,LOG)); @TO@ List<Task<?>> tasks=handler.handle(new MessageHandler.Context(dbNameToLoadIn,fromPath.toString(),null,null,context.hiveConf,context.hiveDb,context.nestedContext,LOG)); @AT@ 3802 @LENGTH@ 244
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 3802 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3807 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedRssEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedRssEndpointBuilder, [EndpointConsumerBuilder] @AT@ 7495 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 7502 @LENGTH@ 6


UPD MethodDeclaration@@default, KeystoneEndpointBuilder, MethodName:keystone, String path,  @TO@ default, KeystoneEndpointBuilder, MethodName:openstackKeystone, String path,  @AT@ 7131 @LENGTH@ 396
---UPD SimpleName@@MethodName:keystone @TO@ MethodName:openstackKeystone @AT@ 7163 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:when(service.getUpdates(any(),any(),any(),any())).thenReturn(request).thenReturn(request2).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(service.getUpdates(any(),any(),any(),any())).thenReturn(request).thenReturn(request2).thenAnswer(i -> defaultRes) @AT@ 2411 @LENGTH@ 175
---UPD MethodInvocation@@when(service.getUpdates(any(),any(),any(),any())).thenReturn(request).thenReturn(request2).thenAnswer((i) -> defaultRes) @TO@ when(service.getUpdates(any(),any(),any(),any())).thenReturn(request).thenReturn(request2).thenAnswer(i -> defaultRes) @AT@ 2411 @LENGTH@ 174
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2556 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2567 @LENGTH@ 17


UPD TypeDeclaration@@[public]RandomValueVerifierServices, [OAuthVerifierServices, InitializingBean] @TO@ [@Deprecated, public]RandomValueVerifierServices, [OAuthVerifierServices, InitializingBean] @AT@ 339 @LENGTH@ 2181
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RandomValueVerifierServices, [OAuthVerifierServices, InitializingBean] @AT@ 560 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:connectIfNecessary, GenericFileOperationFailedException,  @TO@ protected, void, MethodName:connectIfNecessary, Exchange exchange, GenericFileOperationFailedException,  @AT@ 6271 @LENGTH@ 521
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@protected, void, MethodName:connectIfNecessary, GenericFileOperationFailedException,  @AT@ 6330 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6330 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6339 @LENGTH@ 8
---UPD IfStatement@@if (!loggedIn || !getOperations().isConnected()) {  log.debug("Not already connected/logged in. Connecting to: {}",getEndpoint());  RemoteFileConfiguration config=getEndpoint().getConfiguration();  loggedIn=getOperations().connect(config);  if (!loggedIn) {    return;  }  log.debug("Connected and logged in to: {}",getEndpoint());} @TO@ if (!loggedIn || !getOperations().isConnected()) {  log.debug("Not already connected/logged in. Connecting to: {}",getEndpoint());  RemoteFileConfiguration config=getEndpoint().getConfiguration();  loggedIn=getOperations().connect(config,exchange);  if (!loggedIn) {    return;  }  log.debug("Connected and logged in to: {}",getEndpoint());} @AT@ 6360 @LENGTH@ 426
------UPD Block@@ThenBody:{  log.debug("Not already connected/logged in. Connecting to: {}",getEndpoint());  RemoteFileConfiguration config=getEndpoint().getConfiguration();  loggedIn=getOperations().connect(config);  if (!loggedIn) {    return;  }  log.debug("Connected and logged in to: {}",getEndpoint());} @TO@ ThenBody:{  log.debug("Not already connected/logged in. Connecting to: {}",getEndpoint());  RemoteFileConfiguration config=getEndpoint().getConfiguration();  loggedIn=getOperations().connect(config,exchange);  if (!loggedIn) {    return;  }  log.debug("Connected and logged in to: {}",getEndpoint());} @AT@ 6409 @LENGTH@ 377
---------UPD ExpressionStatement@@Assignment:loggedIn=getOperations().connect(config) @TO@ Assignment:loggedIn=getOperations().connect(config,exchange) @AT@ 6594 @LENGTH@ 43
------------UPD Assignment@@loggedIn=getOperations().connect(config) @TO@ loggedIn=getOperations().connect(config,exchange) @AT@ 6594 @LENGTH@ 42
---------------UPD MethodInvocation@@getOperations().connect(config) @TO@ getOperations().connect(config,exchange) @AT@ 6605 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:connect:[config] @TO@ MethodName:connect:[config, exchange] @AT@ 6621 @LENGTH@ 15
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:connect:[config] @AT@ 6679 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]XsltOutput,  @TO@ [static]XsltOutput,  @AT@ 19281 @LENGTH@ 71
---DEL Modifier@@public @AT@ 19281 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedWebhookEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedWebhookEndpointBuilder, [EndpointConsumerBuilder] @AT@ 4741 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 4748 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientTokenServices,  @TO@ [@Deprecated, public]ClientTokenServices,  @AT@ 920 @LENGTH@ 1251
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientTokenServices,  @AT@ 1098 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:contentStream.moveTextPositionByAmount(x,y) @TO@ MethodInvocation:contentStream.newLineAtOffset(x,y) @AT@ 2914 @LENGTH@ 45
---UPD MethodInvocation@@contentStream.moveTextPositionByAmount(x,y) @TO@ contentStream.newLineAtOffset(x,y) @AT@ 2914 @LENGTH@ 44
------UPD SimpleName@@MethodName:moveTextPositionByAmount:[x, y] @TO@ MethodName:newLineAtOffset:[x, y] @AT@ 2928 @LENGTH@ 30


UPD VariableDeclarationStatement@@String allowedMethods=CamelServlet.METHODS.stream().filter((m) -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")); @TO@ String allowedMethods=CamelServlet.METHODS.stream().filter(m -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")); @AT@ 5247 @LENGTH@ 134
---UPD VariableDeclarationFragment@@allowedMethods=CamelServlet.METHODS.stream().filter((m) -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")) @TO@ allowedMethods=CamelServlet.METHODS.stream().filter(m -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")) @AT@ 5254 @LENGTH@ 126
------UPD MethodInvocation@@CamelServlet.METHODS.stream().filter((m) -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")) @TO@ CamelServlet.METHODS.stream().filter(m -> isHttpMethodAllowed(request,m)).collect(Collectors.joining(",")) @AT@ 5271 @LENGTH@ 109
---------UPD MethodInvocation@@MethodName:filter:[(m) -> isHttpMethodAllowed(request,m)] @TO@ MethodName:filter:[m -> isHttpMethodAllowed(request,m)] @AT@ 5271 @LENGTH@ 76
------------UPD LambdaExpression@@(m) -> isHttpMethodAllowed(request,m) @TO@ m -> isHttpMethodAllowed(request,m) @AT@ 5308 @LENGTH@ 38


UPD ReturnStatement@@MethodInvocation:getConnectionFactory() @TO@ MethodInvocation:getOrCreateConnectionFactory() @AT@ 84735 @LENGTH@ 30
---UPD MethodInvocation@@MethodName:getConnectionFactory:[] @TO@ MethodName:getOrCreateConnectionFactory:[] @AT@ 84742 @LENGTH@ 22


UPD TypeDeclaration@@[public, final]AuthorizationServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @TO@ [@Deprecated, public, final]AuthorizationServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 2723 @LENGTH@ 7155
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]AuthorizationServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 2900 @LENGTH@ 11


UPD Block@@ThenBody:{  String className=value.toString().substring(6);  Class<?> type=context.getClassResolver().resolveMandatoryClass(className);  if (type != null) {    value=context.getInjector().newInstance(type);  }} @TO@ ThenBody:{  String className=value.toString().substring(7);  Class<?> type=context.getClassResolver().resolveMandatoryClass(className);  if (type != null) {    value=context.getInjector().newInstance(type);    if (value == null) {      throw new IllegalArgumentException("Cannot create instance of class: " + className);    }  }} @AT@ 24681 @LENGTH@ 346
---UPD VariableDeclarationStatement@@String className=value.toString().substring(6); @TO@ String className=value.toString().substring(7); @AT@ 24748 @LENGTH@ 49
------UPD VariableDeclarationFragment@@className=value.toString().substring(6) @TO@ className=value.toString().substring(7) @AT@ 24755 @LENGTH@ 41
---------UPD MethodInvocation@@value.toString().substring(6) @TO@ value.toString().substring(7) @AT@ 24767 @LENGTH@ 29
------------UPD SimpleName@@MethodName:substring:[6] @TO@ MethodName:substring:[7] @AT@ 24784 @LENGTH@ 12
---------------UPD NumberLiteral@@6 @TO@ 7 @AT@ 24794 @LENGTH@ 1
---UPD IfStatement@@if (type != null) {  value=context.getInjector().newInstance(type);} @TO@ if (type != null) {  value=context.getInjector().newInstance(type);  if (value == null) {    throw new IllegalArgumentException("Cannot create instance of class: " + className);  }} @AT@ 24907 @LENGTH@ 106
------UPD Block@@ThenBody:{  value=context.getInjector().newInstance(type);} @TO@ ThenBody:{  value=context.getInjector().newInstance(type);  if (value == null) {    throw new IllegalArgumentException("Cannot create instance of class: " + className);  }} @AT@ 24925 @LENGTH@ 88
---------INS IfStatement@@if (value == null) {  throw new IllegalArgumentException("Cannot create instance of class: " + className);} @TO@ Block@@ThenBody:{  value=context.getInjector().newInstance(type);} @AT@ 25016 @LENGTH@ 151
------------INS InfixExpression@@value == null @TO@ IfStatement@@if (value == null) {  throw new IllegalArgumentException("Cannot create instance of class: " + className);} @AT@ 25020 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 25020 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 25025 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 25029 @LENGTH@ 4
------------INS Block@@ThenBody:{  throw new IllegalArgumentException("Cannot create instance of class: " + className);} @TO@ IfStatement@@if (value == null) {  throw new IllegalArgumentException("Cannot create instance of class: " + className);} @AT@ 25035 @LENGTH@ 132
---------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot create instance of class: " + className) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Cannot create instance of class: " + className);} @AT@ 25061 @LENGTH@ 84
------------------INS ClassInstanceCreation@@IllegalArgumentException["Cannot create instance of class: " + className] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot create instance of class: " + className) @AT@ 25067 @LENGTH@ 77
---------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot create instance of class: " + className] @AT@ 25067 @LENGTH@ 3
---------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot create instance of class: " + className] @AT@ 25071 @LENGTH@ 24
---------------------INS InfixExpression@@"Cannot create instance of class: " + className @TO@ ClassInstanceCreation@@IllegalArgumentException["Cannot create instance of class: " + className] @AT@ 25096 @LENGTH@ 47
------------------------INS StringLiteral@@"Cannot create instance of class: " @TO@ InfixExpression@@"Cannot create instance of class: " + className @AT@ 25096 @LENGTH@ 35
------------------------INS Operator@@+ @TO@ InfixExpression@@"Cannot create instance of class: " + className @AT@ 25131 @LENGTH@ 1
------------------------INS SimpleName@@className @TO@ InfixExpression@@"Cannot create instance of class: " + className @AT@ 25134 @LENGTH@ 9


UPD EnumDeclaration@@[public, static]SdbOperations,  @TO@ [static]SdbOperations,  @AT@ 9209 @LENGTH@ 190
---DEL Modifier@@public @AT@ 9209 @LENGTH@ 6


UPD TryStatement@@try (final FileOutputStream fos=new FileOutputStream(outFile)){  final long total=entry.getSize();  long off=0;  while (off < total) {    final int toRead=(int)Math.min(total - off,buf.length);    final int bytesRead=archive.read(buf,0,toRead);    if (bytesRead < 1) {      throw new IOException("Reached end of entry " + entry.getName() + " after "+ off+ " bytes, expected "+ total);    }    off+=bytesRead;    fos.write(buf,0,bytesRead);  }}  @TO@ try (final OutputStream fos=Files.newOutputStream(outFile.toPath())){  final long total=entry.getSize();  long off=0;  while (off < total) {    final int toRead=(int)Math.min(total - off,buf.length);    final int bytesRead=archive.read(buf,0,toRead);    if (bytesRead < 1) {      throw new IOException("Reached end of entry " + entry.getName() + " after "+ off+ " bytes, expected "+ total);    }    off+=bytesRead;    fos.write(buf,0,bytesRead);  }}  @AT@ 3533 @LENGTH@ 907
---UPD VariableDeclarationExpression@@final FileOutputStream fos=new FileOutputStream(outFile) @TO@ final OutputStream fos=Files.newOutputStream(outFile.toPath()) @AT@ 3538 @LENGTH@ 58
------UPD SimpleType@@FileOutputStream @TO@ OutputStream @AT@ 3544 @LENGTH@ 16
------UPD VariableDeclarationFragment@@fos=new FileOutputStream(outFile) @TO@ fos=Files.newOutputStream(outFile.toPath()) @AT@ 3561 @LENGTH@ 35
---------DEL ClassInstanceCreation@@FileOutputStream[outFile] @AT@ 3567 @LENGTH@ 29
------------DEL New@@new @AT@ 3567 @LENGTH@ 3
------------DEL SimpleType@@FileOutputStream @AT@ 3571 @LENGTH@ 16
------------DEL SimpleName@@outFile @AT@ 3588 @LENGTH@ 7
---------INS MethodInvocation@@Files.newOutputStream(outFile.toPath()) @TO@ VariableDeclarationFragment@@fos=new FileOutputStream(outFile) @AT@ 3587 @LENGTH@ 39
------------INS SimpleName@@Name:Files @TO@ MethodInvocation@@Files.newOutputStream(outFile.toPath()) @AT@ 3587 @LENGTH@ 5
------------INS SimpleName@@MethodName:newOutputStream:[outFile.toPath()] @TO@ MethodInvocation@@Files.newOutputStream(outFile.toPath()) @AT@ 3593 @LENGTH@ 33
---------------INS MethodInvocation@@outFile.toPath() @TO@ SimpleName@@MethodName:newOutputStream:[outFile.toPath()] @AT@ 3609 @LENGTH@ 16
------------------INS SimpleName@@Name:outFile @TO@ MethodInvocation@@outFile.toPath() @AT@ 3609 @LENGTH@ 7
------------------INS SimpleName@@MethodName:toPath:[] @TO@ MethodInvocation@@outFile.toPath() @AT@ 3617 @LENGTH@ 8


UPD TypeDeclaration@@[public]CoreOAuthProviderSupport, [OAuthProviderSupport] @TO@ [@Deprecated, public]CoreOAuthProviderSupport, [OAuthProviderSupport] @AT@ 1304 @LENGTH@ 8799
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CoreOAuthProviderSupport, [OAuthProviderSupport] @AT@ 1525 @LENGTH@ 11


UPD TypeDeclaration@@[public]DefaultUserAuthenticationConverter, [UserAuthenticationConverter] @TO@ [@Deprecated, public]DefaultUserAuthenticationConverter, [UserAuthenticationConverter] @AT@ 1297 @LENGTH@ 2651
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultUserAuthenticationConverter, [UserAuthenticationConverter] @AT@ 1474 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1541 @LENGTH@ 1773
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1548 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1553 @LENGTH@ 28


UPD TypeDeclaration@@[@SuppressWarnings("unused"), public]GemfireV7GatewayNamespaceTest, RecreatingContextTest @TO@ [public]GemfireV7GatewayNamespaceTest, RecreatingContextTest @AT@ 2095 @LENGTH@ 8083
---DEL SingleMemberAnnotation@@@SuppressWarnings("unused") @AT@ 2095 @LENGTH@ 27


UPD MethodDeclaration@@default, ClientEndpointBuilder, MethodName:client, String path,  @TO@ default, ClientEndpointBuilder, MethodName:iec60870Client, String path,  @AT@ 52884 @LENGTH@ 379
---UPD SimpleName@@MethodName:client @TO@ MethodName:iec60870Client @AT@ 52914 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthTokenException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidOAuthTokenException, OAuthException @AT@ 753 @LENGTH@ 165
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthTokenException, OAuthException @AT@ 1002 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]GoogleSheetsStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]GoogleSheetsStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1448 @LENGTH@ 8112
---DEL Modifier@@static @AT@ 1455 @LENGTH@ 6


INS MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @TO@ TypeDeclaration@@[public, static]Builder, [Serializable] @AT@ 17756 @LENGTH@ 422
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 17756 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 17764 @LENGTH@ 4
---INS SimpleName@@MethodName:validatePasswordGrantType @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 17769 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:Assert.isTrue(AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()) @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 17802 @LENGTH@ 174
------INS MethodInvocation@@Assert.isTrue(AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()) @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()) @AT@ 17802 @LENGTH@ 173
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()) @AT@ 17802 @LENGTH@ 6
---------INS SimpleName@@MethodName:isTrue:[AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()] @TO@ MethodInvocation@@Assert.isTrue(AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType),() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()) @AT@ 17809 @LENGTH@ 166
------------INS MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @TO@ SimpleName@@MethodName:isTrue:[AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()] @AT@ 17816 @LENGTH@ 67
---------------INS QualifiedName@@Name:AuthorizationGrantType.PASSWORD @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @AT@ 17816 @LENGTH@ 31
---------------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @AT@ 17848 @LENGTH@ 35
------------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 17855 @LENGTH@ 27
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 17855 @LENGTH@ 4
---------------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 17860 @LENGTH@ 22
------------INS LambdaExpression@@() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @TO@ SimpleName@@MethodName:isTrue:[AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType), () -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue()] @AT@ 17890 @LENGTH@ 84
---------------INS InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @TO@ LambdaExpression@@() -> "authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @AT@ 17896 @LENGTH@ 78
------------------INS StringLiteral@@"authorizationGrantType must be " @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @AT@ 17896 @LENGTH@ 33
------------------INS Operator@@+ @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @AT@ 17929 @LENGTH@ 1
------------------INS MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @TO@ InfixExpression@@"authorizationGrantType must be " + AuthorizationGrantType.PASSWORD.getValue() @AT@ 17932 @LENGTH@ 42
---------------------INS QualifiedName@@Name:AuthorizationGrantType.PASSWORD @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @AT@ 17932 @LENGTH@ 31
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @AT@ 17964 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.registrationId,"registrationId cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 17980 @LENGTH@ 70
------INS MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 17980 @LENGTH@ 69
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 17980 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.registrationId,"registrationId cannot be empty") @AT@ 17987 @LENGTH@ 62
------------INS FieldAccess@@this.registrationId @TO@ SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @AT@ 17995 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registrationId @AT@ 17995 @LENGTH@ 4
---------------INS SimpleName@@registrationId @TO@ FieldAccess@@this.registrationId @AT@ 18000 @LENGTH@ 14
------------INS StringLiteral@@"registrationId cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.registrationId, "registrationId cannot be empty"] @AT@ 18016 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientId,"clientId cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 18054 @LENGTH@ 58
------INS MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 18054 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 18054 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.clientId,"clientId cannot be empty") @AT@ 18061 @LENGTH@ 50
------------INS FieldAccess@@this.clientId @TO@ SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @AT@ 18069 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientId @AT@ 18069 @LENGTH@ 4
---------------INS SimpleName@@clientId @TO@ FieldAccess@@this.clientId @AT@ 18074 @LENGTH@ 8
------------INS StringLiteral@@"clientId cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.clientId, "clientId cannot be empty"] @AT@ 18084 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @TO@ MethodDeclaration@@private, void, MethodName:validatePasswordGrantType,  @AT@ 18116 @LENGTH@ 58
------INS MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @TO@ ExpressionStatement@@MethodInvocation:Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 18116 @LENGTH@ 57
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 18116 @LENGTH@ 6
---------INS SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @TO@ MethodInvocation@@Assert.hasText(this.tokenUri,"tokenUri cannot be empty") @AT@ 18123 @LENGTH@ 50
------------INS FieldAccess@@this.tokenUri @TO@ SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @AT@ 18131 @LENGTH@ 13
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.tokenUri @AT@ 18131 @LENGTH@ 4
---------------INS SimpleName@@tokenUri @TO@ FieldAccess@@this.tokenUri @AT@ 18136 @LENGTH@ 8
------------INS StringLiteral@@"tokenUri cannot be empty" @TO@ SimpleName@@MethodName:hasText:[this.tokenUri, "tokenUri cannot be empty"] @AT@ 18146 @LENGTH@ 26


UPD MethodDeclaration@@protected, String, MethodName:buildHttpsRedirectUrlForRequest, HttpServletRequest request,  @TO@ protected, String, MethodName:buildHttpsRedirectUrlForRequest, HttpServletRequest request, IOException, ServletException,  @AT@ 7543 @LENGTH@ 841
---INS SimpleType@@IOException @TO@ MethodDeclaration@@protected, String, MethodName:buildHttpsRedirectUrlForRequest, HttpServletRequest request,  @AT@ 7630 @LENGTH@ 11
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@protected, String, MethodName:buildHttpsRedirectUrlForRequest, HttpServletRequest request,  @AT@ 7643 @LENGTH@ 16


UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 29456 @LENGTH@ 56
---UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 29463 @LENGTH@ 48
------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 29476 @LENGTH@ 35
---------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 29478 @LENGTH@ 4
---------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 29504 @LENGTH@ 5


UPD ReturnStatement@@SuperMethodInvocation:super.process(exchange,(sync) -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
) @TO@ SuperMethodInvocation:super.process(exchange,sync -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
) @AT@ 2039 @LENGTH@ 1032
---UPD SuperMethodInvocation@@super.process(exchange,(sync) -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
) @TO@ super.process(exchange,sync -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
) @AT@ 2046 @LENGTH@ 1024
------UPD SimpleName@@MethodName:process:[exchange, (sync) -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
] @TO@ MethodName:process:[exchange, sync -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
] @AT@ 2052 @LENGTH@ 7
------UPD LambdaExpression@@(sync) -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
 @TO@ sync -> {
  boolean failed=exchange.isFailed();
  try {
    if (failed) {
      EventHelper.notifyStepFailed(exchange.getContext(),exchange,stepId);
    }
 else {
      EventHelper.notifyStepDone(exchange.getContext(),exchange,stepId);
    }
  }
 catch (  Throwable t) {
    log.warn("Exception occurred during event notification. This exception will be ignored.",t);
  }
 finally {
    if (oldStepId != null) {
      exchange.setProperty(Exchange.STEP_ID,oldStepId);
    }
 else {
      exchange.removeProperty(Exchange.STEP_ID);
    }
    callback.done(sync);
  }
}
 @AT@ 2070 @LENGTH@ 999


UPD VariableDeclarationStatement@@Consumer<HttpRequestBase> deleteFunction=(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
; @TO@ Consumer<HttpRequestBase> deleteFunction=request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
; @AT@ 14680 @LENGTH@ 537
---UPD VariableDeclarationFragment@@deleteFunction=(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @TO@ deleteFunction=request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @AT@ 14706 @LENGTH@ 510
------UPD LambdaExpression@@(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @TO@ request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCodes>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @AT@ 14723 @LENGTH@ 493


UPD MethodDeclaration@@default, MicroProfileMetricsEndpointBuilder, MethodName:microProfileMetrics, String path,  @TO@ default, MicroProfileMetricsEndpointBuilder, MethodName:microprofileMetrics, String path,  @AT@ 10637 @LENGTH@ 475
---UPD SimpleName@@MethodName:microProfileMetrics @TO@ MethodName:microprofileMetrics @AT@ 10680 @LENGTH@ 19


UPD VariableDeclarationStatement@@String partialFilter=sourceDocument.containsKey("partialFilterExpression") ? ((Document)sourceDocument.get("partialFilterExpression")).toJson() : null; @TO@ String partialFilter=extractPartialFilterString(sourceDocument); @AT@ 3750 @LENGTH@ 162
---UPD VariableDeclarationFragment@@partialFilter=sourceDocument.containsKey("partialFilterExpression") ? ((Document)sourceDocument.get("partialFilterExpression")).toJson() : null @TO@ partialFilter=extractPartialFilterString(sourceDocument) @AT@ 3757 @LENGTH@ 154
------DEL ConditionalExpression@@sourceDocument.containsKey("partialFilterExpression") ? ((Document)sourceDocument.get("partialFilterExpression")).toJson() : null @AT@ 3773 @LENGTH@ 138
---------DEL MethodInvocation@@((Document)sourceDocument.get("partialFilterExpression")).toJson() @AT@ 3833 @LENGTH@ 67
------------DEL ParenthesizedExpression@@((Document)sourceDocument.get("partialFilterExpression")) @AT@ 3833 @LENGTH@ 58
---------------DEL CastExpression@@(Document)sourceDocument.get("partialFilterExpression") @AT@ 3834 @LENGTH@ 56
------------------DEL SimpleType@@Document @AT@ 3835 @LENGTH@ 8
------------------DEL MethodInvocation@@sourceDocument.get("partialFilterExpression") @AT@ 3845 @LENGTH@ 45
---------------------DEL SimpleName@@Name:sourceDocument @AT@ 3845 @LENGTH@ 14
---------------------DEL SimpleName@@MethodName:get:["partialFilterExpression"] @AT@ 3860 @LENGTH@ 30
------------------------DEL StringLiteral@@"partialFilterExpression" @AT@ 3864 @LENGTH@ 25
------------DEL SimpleName@@MethodName:toJson:[] @AT@ 3892 @LENGTH@ 8
---------DEL NullLiteral@@null @AT@ 3907 @LENGTH@ 4
------INS MethodInvocation@@extractPartialFilterString(sourceDocument) @TO@ VariableDeclarationFragment@@partialFilter=sourceDocument.containsKey("partialFilterExpression") ? ((Document)sourceDocument.get("partialFilterExpression")).toJson() : null @AT@ 3830 @LENGTH@ 42
---------INS SimpleName@@MethodName:extractPartialFilterString:[sourceDocument] @TO@ MethodInvocation@@extractPartialFilterString(sourceDocument) @AT@ 3830 @LENGTH@ 42
------------INS SimpleName@@sourceDocument @TO@ SimpleName@@MethodName:extractPartialFilterString:[sourceDocument] @AT@ 3857 @LENGTH@ 14


UPD VariableDeclarationStatement@@String out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class); @TO@ String out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class); @AT@ 3360 @LENGTH@ 151
---UPD VariableDeclarationFragment@@out=template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @TO@ out=template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @AT@ 3367 @LENGTH@ 143
------UPD MethodInvocation@@template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder",message,String.class) @AT@ 3373 @LENGTH@ 137
---------UPD SimpleName@@MethodName:requestBody:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder", message, String.class] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder", message, String.class] @AT@ 3382 @LENGTH@ 128
------------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&encoder=#hl7encoder&decoder=#hl7decoder" @AT@ 3394 @LENGTH@ 92
---------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 3394 @LENGTH@ 25


MOV ReturnStatement@@MethodInvocation:this.saml.toXml(auth,request.getCredentials(),request.getLocalSpEntityId()) @TO@ MethodDeclaration@@public, String, MethodName:createAuthenticationRequest, Saml2AuthenticationRequest request,  @AT@ 2012 @LENGTH@ 105


UPD TypeDeclaration@@[public, static]AdvancedGoogleMailStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedGoogleMailStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 6009 @LENGTH@ 2166
---DEL Modifier@@static @AT@ 6016 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(200,response.getResponseCode()) @TO@ MethodInvocation:assertEquals(204,response.getResponseCode()) @AT@ 1488 @LENGTH@ 46
---UPD MethodInvocation@@assertEquals(200,response.getResponseCode()) @TO@ assertEquals(204,response.getResponseCode()) @AT@ 1488 @LENGTH@ 45
------UPD SimpleName@@MethodName:assertEquals:[200, response.getResponseCode()] @TO@ MethodName:assertEquals:[204, response.getResponseCode()] @AT@ 1488 @LENGTH@ 45
---------UPD NumberLiteral@@200 @TO@ 204 @AT@ 1501 @LENGTH@ 3


UPD VariableDeclarationStatement@@Map<String,String> conf=new HashMap(); @TO@ Map<String,String> conf=new HashMap<String,String>(); @AT@ 2571 @LENGTH@ 41
---UPD VariableDeclarationFragment@@conf=new HashMap() @TO@ conf=new HashMap<String,String>() @AT@ 2591 @LENGTH@ 20
------UPD ClassInstanceCreation@@HashMap[] @TO@ HashMap<String,String>[] @AT@ 2598 @LENGTH@ 13
---------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap[] @AT@ 2602 @LENGTH@ 23
------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2602 @LENGTH@ 7
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2610 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 2618 @LENGTH@ 6
---------DEL SimpleType@@HashMap @AT@ 2602 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]PathSeparator,  @TO@ [static]PathSeparator,  @AT@ 208578 @LENGTH@ 69
---DEL Modifier@@public @AT@ 208578 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:muteExceptionWithTransferExceptionTest, IOException, ClassNotFoundException,  @TO@ public, void, MethodName:muteExceptionWithTransferExceptionTest, Exception,  @AT@ 1713 @LENGTH@ 536
---UPD SimpleType@@IOException @TO@ Exception @AT@ 1773 @LENGTH@ 11
---DEL SimpleType@@ClassNotFoundException @AT@ 1786 @LENGTH@ 22


UPD TypeDeclaration@@[public]ProtectedResourceDetailsServiceFactoryBean, AbstractFactoryBean<ProtectedResourceDetailsService> @TO@ [@Deprecated, public]ProtectedResourceDetailsServiceFactoryBean, AbstractFactoryBean<ProtectedResourceDetailsService> @AT@ 603 @LENGTH@ 821
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProtectedResourceDetailsServiceFactoryBean, AbstractFactoryBean<ProtectedResourceDetailsService> @AT@ 824 @LENGTH@ 11


UPD TypeDeclaration@@[public]ApprovalStore,  @TO@ [@Deprecated, public]ApprovalStore,  @AT@ 842 @LENGTH@ 240
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ApprovalStore,  @AT@ 1019 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]MockEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MockEndpointBuilder, [EndpointProducerBuilder] @AT@ 1415 @LENGTH@ 511
---DEL Modifier@@static @AT@ 1422 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]NagiosEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]NagiosEndpointBuilder, [EndpointProducerBuilder] @AT@ 1387 @LENGTH@ 5304
---DEL Modifier@@static @AT@ 1394 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @TO@ TypeDeclaration@@[public]RedisSerializationContextUnitTests,  @AT@ 3957 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 3957 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 3964 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldEncodeAndDecodeRawByteBufferValue @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 3969 @LENGTH@ 39
---INS VariableDeclarationStatement@@RedisSerializationContext<ByteBuffer,ByteBuffer> serializationContext=RedisSerializationContext.raw(); @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 4016 @LENGTH@ 110
------INS ParameterizedType@@RedisSerializationContext<ByteBuffer,ByteBuffer> @TO@ VariableDeclarationStatement@@RedisSerializationContext<ByteBuffer,ByteBuffer> serializationContext=RedisSerializationContext.raw(); @AT@ 4016 @LENGTH@ 49
---------INS SimpleType@@RedisSerializationContext @TO@ ParameterizedType@@RedisSerializationContext<ByteBuffer,ByteBuffer> @AT@ 4016 @LENGTH@ 25
---------INS SimpleType@@ByteBuffer @TO@ ParameterizedType@@RedisSerializationContext<ByteBuffer,ByteBuffer> @AT@ 4042 @LENGTH@ 10
---------INS SimpleType@@ByteBuffer @TO@ ParameterizedType@@RedisSerializationContext<ByteBuffer,ByteBuffer> @AT@ 4054 @LENGTH@ 10
------INS VariableDeclarationFragment@@serializationContext=RedisSerializationContext.raw() @TO@ VariableDeclarationStatement@@RedisSerializationContext<ByteBuffer,ByteBuffer> serializationContext=RedisSerializationContext.raw(); @AT@ 4066 @LENGTH@ 59
---------INS SimpleName@@serializationContext @TO@ VariableDeclarationFragment@@serializationContext=RedisSerializationContext.raw() @AT@ 4066 @LENGTH@ 20
---------INS MethodInvocation@@RedisSerializationContext.raw() @TO@ VariableDeclarationFragment@@serializationContext=RedisSerializationContext.raw() @AT@ 4089 @LENGTH@ 36
------------INS SimpleName@@Name:RedisSerializationContext @TO@ MethodInvocation@@RedisSerializationContext.raw() @AT@ 4089 @LENGTH@ 25
------------INS SimpleName@@MethodName:raw:[] @TO@ MethodInvocation@@RedisSerializationContext.raw() @AT@ 4120 @LENGTH@ 5
---INS VariableDeclarationStatement@@ByteBuffer deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))); @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 4130 @LENGTH@ 185
------INS SimpleType@@ByteBuffer @TO@ VariableDeclarationStatement@@ByteBuffer deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))); @AT@ 4130 @LENGTH@ 10
------INS VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @TO@ VariableDeclarationStatement@@ByteBuffer deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))); @AT@ 4141 @LENGTH@ 173
---------INS SimpleName@@deserialized @TO@ VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @AT@ 4141 @LENGTH@ 12
---------INS MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @TO@ VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @AT@ 4156 @LENGTH@ 158
------------INS MethodInvocation@@MethodName:getValueSerializationPair:[] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @AT@ 4156 @LENGTH@ 48
------------INS SimpleName@@Name:serializationContext @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @AT@ 4156 @LENGTH@ 20
------------INS SimpleName@@MethodName:read:[serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))) @AT@ 4210 @LENGTH@ 104
---------------INS MethodInvocation@@serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes())) @TO@ SimpleName@@MethodName:read:[serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes()))] @AT@ 4215 @LENGTH@ 98
------------------INS MethodInvocation@@MethodName:getValueSerializationPair:[] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes())) @AT@ 4215 @LENGTH@ 48
------------------INS SimpleName@@Name:serializationContext @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes())) @AT@ 4215 @LENGTH@ 20
------------------INS SimpleName@@MethodName:write:[ByteBuffer.wrap("hello".getBytes())] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write(ByteBuffer.wrap("hello".getBytes())) @AT@ 4271 @LENGTH@ 42
---------------------INS MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @TO@ SimpleName@@MethodName:write:[ByteBuffer.wrap("hello".getBytes())] @AT@ 4277 @LENGTH@ 35
------------------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @AT@ 4277 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:wrap:["hello".getBytes()] @TO@ MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @AT@ 4288 @LENGTH@ 24
---------------------------INS MethodInvocation@@"hello".getBytes() @TO@ SimpleName@@MethodName:wrap:["hello".getBytes()] @AT@ 4293 @LENGTH@ 18
------------------------------INS StringLiteral@@"hello" @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4293 @LENGTH@ 7
------------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4301 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo(ByteBuffer.wrap("hello".getBytes())) @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeRawByteBufferValue,  @AT@ 4319 @LENGTH@ 72
------INS MethodInvocation@@assertThat(deserialized).isEqualTo(ByteBuffer.wrap("hello".getBytes())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo(ByteBuffer.wrap("hello".getBytes())) @AT@ 4319 @LENGTH@ 71
---------INS MethodInvocation@@MethodName:assertThat:[deserialized] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo(ByteBuffer.wrap("hello".getBytes())) @AT@ 4319 @LENGTH@ 24
------------INS SimpleName@@deserialized @TO@ MethodInvocation@@MethodName:assertThat:[deserialized] @AT@ 4330 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEqualTo:[ByteBuffer.wrap("hello".getBytes())] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo(ByteBuffer.wrap("hello".getBytes())) @AT@ 4344 @LENGTH@ 46
------------INS MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @TO@ SimpleName@@MethodName:isEqualTo:[ByteBuffer.wrap("hello".getBytes())] @AT@ 4354 @LENGTH@ 35
---------------INS SimpleName@@Name:ByteBuffer @TO@ MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @AT@ 4354 @LENGTH@ 10
---------------INS SimpleName@@MethodName:wrap:["hello".getBytes()] @TO@ MethodInvocation@@ByteBuffer.wrap("hello".getBytes()) @AT@ 4365 @LENGTH@ 24
------------------INS MethodInvocation@@"hello".getBytes() @TO@ SimpleName@@MethodName:wrap:["hello".getBytes()] @AT@ 4370 @LENGTH@ 18
---------------------INS StringLiteral@@"hello" @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4370 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4378 @LENGTH@ 10


UPD VariableDeclarationStatement@@Exchange response=template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> {
  e.getIn().setBody("Hello Camel!");
}
); @TO@ Exchange response=template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> e.getIn().setBody("Hello Camel!")); @AT@ 2535 @LENGTH@ 168
---UPD VariableDeclarationFragment@@response=template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> {
  e.getIn().setBody("Hello Camel!");
}
) @TO@ response=template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> e.getIn().setBody("Hello Camel!")) @AT@ 2544 @LENGTH@ 158
------UPD MethodInvocation@@template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> {
  e.getIn().setBody("Hello Camel!");
}
) @TO@ template.send("undertow:http://localhost:{{port}}?useStreaming=true",e -> e.getIn().setBody("Hello Camel!")) @AT@ 2555 @LENGTH@ 147
---------UPD SimpleName@@MethodName:send:["undertow:http://localhost:{{port}}?useStreaming=true", e -> {
  e.getIn().setBody("Hello Camel!");
}
] @TO@ MethodName:send:["undertow:http://localhost:{{port}}?useStreaming=true", e -> e.getIn().setBody("Hello Camel!")] @AT@ 2564 @LENGTH@ 138
------------UPD LambdaExpression@@e -> {
  e.getIn().setBody("Hello Camel!");
}
 @TO@ e -> e.getIn().setBody("Hello Camel!") @AT@ 2658 @LENGTH@ 43
---------------DEL ExpressionStatement@@MethodInvocation:e.getIn().setBody("Hello Camel!") @AT@ 2665 @LENGTH@ 34
---------------MOV MethodInvocation@@e.getIn().setBody("Hello Camel!") @TO@ LambdaExpression@@e -> {
  e.getIn().setBody("Hello Camel!");
}
 @AT@ 2665 @LENGTH@ 33


UPD TypeDeclaration@@[public]JdkSerializationStrategy, StandardStringSerializationStrategy @TO@ [@Deprecated, public]JdkSerializationStrategy, StandardStringSerializationStrategy @AT@ 1027 @LENGTH@ 1191
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdkSerializationStrategy, StandardStringSerializationStrategy @AT@ 1205 @LENGTH@ 11


UPD FieldDeclaration@@private, Scheduler, [scheduler=Schedulers.newParallel("password-encoder")] @TO@ private, Scheduler, [scheduler=Schedulers.newParallel("password-encoder",Schedulers.DEFAULT_POOL_SIZE,true)] @AT@ 2439 @LENGTH@ 73
---UPD VariableDeclarationFragment@@scheduler=Schedulers.newParallel("password-encoder") @TO@ scheduler=Schedulers.newParallel("password-encoder",Schedulers.DEFAULT_POOL_SIZE,true) @AT@ 2457 @LENGTH@ 54
------UPD MethodInvocation@@Schedulers.newParallel("password-encoder") @TO@ Schedulers.newParallel("password-encoder",Schedulers.DEFAULT_POOL_SIZE,true) @AT@ 2469 @LENGTH@ 42
---------UPD SimpleName@@MethodName:newParallel:["password-encoder"] @TO@ MethodName:newParallel:["password-encoder", Schedulers.DEFAULT_POOL_SIZE, true] @AT@ 2480 @LENGTH@ 31
------------INS QualifiedName@@Schedulers.DEFAULT_POOL_SIZE @TO@ SimpleName@@MethodName:newParallel:["password-encoder"] @AT@ 2512 @LENGTH@ 28
---------------INS SimpleName@@Schedulers @TO@ QualifiedName@@Schedulers.DEFAULT_POOL_SIZE @AT@ 2512 @LENGTH@ 10
---------------INS SimpleName@@DEFAULT_POOL_SIZE @TO@ QualifiedName@@Schedulers.DEFAULT_POOL_SIZE @AT@ 2523 @LENGTH@ 17
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:newParallel:["password-encoder"] @AT@ 2542 @LENGTH@ 4


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1349 @LENGTH@ 430
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1356 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1361 @LENGTH@ 28


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnauthorizedUserException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnauthorizedUserException, OAuth2Exception @AT@ 157 @LENGTH@ 452
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnauthorizedUserException, OAuth2Exception @AT@ 362 @LENGTH@ 11


INS MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @TO@ TypeDeclaration@@[@RestController, public]OAuth2ResourceServerController,  @AT@ 1352 @LENGTH@ 130
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1352 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1359 @LENGTH@ 6
---INS SimpleName@@MethodName:createMessage @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1366 @LENGTH@ 13
---INS SingleVariableDeclaration@@@RequestBody String message @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1380 @LENGTH@ 27
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@RequestBody String message @AT@ 1393 @LENGTH@ 6
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@@RequestBody String message @AT@ 1400 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:String.format("Message was created. Content: %s",message) @TO@ MethodDeclaration@@public, String, MethodName:createMessage, @RequestBody String message,  @AT@ 1413 @LENGTH@ 66
------INS MethodInvocation@@String.format("Message was created. Content: %s",message) @TO@ ReturnStatement@@MethodInvocation:String.format("Message was created. Content: %s",message) @AT@ 1420 @LENGTH@ 58
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Message was created. Content: %s",message) @AT@ 1420 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["Message was created. Content: %s", message] @TO@ MethodInvocation@@String.format("Message was created. Content: %s",message) @AT@ 1427 @LENGTH@ 51
------------INS StringLiteral@@"Message was created. Content: %s" @TO@ SimpleName@@MethodName:format:["Message was created. Content: %s", message] @AT@ 1434 @LENGTH@ 34
------------INS SimpleName@@message @TO@ SimpleName@@MethodName:format:["Message was created. Content: %s", message] @AT@ 1470 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @TO@ TypeDeclaration@@[public]InMemoryOAuth2AuthorizedClientServiceTests,  @AT@ 3012 @LENGTH@ 964
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3012 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3019 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3024 @LENGTH@ 86
---INS VariableDeclarationStatement@@String registrationId=this.registration3.getRegistrationId(); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3117 @LENGTH@ 63
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String registrationId=this.registration3.getRegistrationId(); @AT@ 3117 @LENGTH@ 6
------INS VariableDeclarationFragment@@registrationId=this.registration3.getRegistrationId() @TO@ VariableDeclarationStatement@@String registrationId=this.registration3.getRegistrationId(); @AT@ 3124 @LENGTH@ 55
---------INS SimpleName@@registrationId @TO@ VariableDeclarationFragment@@registrationId=this.registration3.getRegistrationId() @AT@ 3124 @LENGTH@ 14
---------INS MethodInvocation@@this.registration3.getRegistrationId() @TO@ VariableDeclarationFragment@@registrationId=this.registration3.getRegistrationId() @AT@ 3141 @LENGTH@ 38
------------INS FieldAccess@@this.registration3 @TO@ MethodInvocation@@this.registration3.getRegistrationId() @AT@ 3141 @LENGTH@ 18
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration3 @AT@ 3141 @LENGTH@ 4
---------------INS SimpleName@@registration3 @TO@ FieldAccess@@this.registration3 @AT@ 3146 @LENGTH@ 13
------------INS SimpleName@@MethodName:getRegistrationId:[] @TO@ MethodInvocation@@this.registration3.getRegistrationId() @AT@ 3160 @LENGTH@ 19
---INS VariableDeclarationStatement@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3184 @LENGTH@ 218
------INS ParameterizedType@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> @TO@ VariableDeclarationStatement@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)); @AT@ 3184 @LENGTH@ 53
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> @AT@ 3184 @LENGTH@ 3
---------INS SimpleType@@OAuth2AuthorizedClientId @TO@ ParameterizedType@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> @AT@ 3188 @LENGTH@ 24
---------INS SimpleType@@OAuth2AuthorizedClient @TO@ ParameterizedType@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> @AT@ 3214 @LENGTH@ 22
------INS VariableDeclarationFragment@@authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @TO@ VariableDeclarationStatement@@Map<OAuth2AuthorizedClientId,OAuth2AuthorizedClient> authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)); @AT@ 3238 @LENGTH@ 163
---------INS SimpleName@@authorizedClients @TO@ VariableDeclarationFragment@@authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @AT@ 3238 @LENGTH@ 17
---------INS MethodInvocation@@Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @TO@ VariableDeclarationFragment@@authorizedClients=Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @AT@ 3258 @LENGTH@ 143
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @AT@ 3258 @LENGTH@ 11
------------INS SimpleName@@MethodName:singletonMap:[OAuth2AuthorizedClientId.create(this.registration3,this.principalName1), mock(OAuth2AuthorizedClient.class)] @TO@ MethodInvocation@@Collections.singletonMap(OAuth2AuthorizedClientId.create(this.registration3,this.principalName1),mock(OAuth2AuthorizedClient.class)) @AT@ 3270 @LENGTH@ 131
---------------INS MethodInvocation@@OAuth2AuthorizedClientId.create(this.registration3,this.principalName1) @TO@ SimpleName@@MethodName:singletonMap:[OAuth2AuthorizedClientId.create(this.registration3,this.principalName1), mock(OAuth2AuthorizedClient.class)] @AT@ 3288 @LENGTH@ 72
------------------INS SimpleName@@Name:OAuth2AuthorizedClientId @TO@ MethodInvocation@@OAuth2AuthorizedClientId.create(this.registration3,this.principalName1) @AT@ 3288 @LENGTH@ 24
------------------INS SimpleName@@MethodName:create:[this.registration3, this.principalName1] @TO@ MethodInvocation@@OAuth2AuthorizedClientId.create(this.registration3,this.principalName1) @AT@ 3313 @LENGTH@ 47
---------------------INS FieldAccess@@this.registration3 @TO@ SimpleName@@MethodName:create:[this.registration3, this.principalName1] @AT@ 3320 @LENGTH@ 18
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration3 @AT@ 3320 @LENGTH@ 4
------------------------INS SimpleName@@registration3 @TO@ FieldAccess@@this.registration3 @AT@ 3325 @LENGTH@ 13
---------------------INS FieldAccess@@this.principalName1 @TO@ SimpleName@@MethodName:create:[this.registration3, this.principalName1] @AT@ 3340 @LENGTH@ 19
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principalName1 @AT@ 3340 @LENGTH@ 4
------------------------INS SimpleName@@principalName1 @TO@ FieldAccess@@this.principalName1 @AT@ 3345 @LENGTH@ 14
---------------INS MethodInvocation@@mock(OAuth2AuthorizedClient.class) @TO@ SimpleName@@MethodName:singletonMap:[OAuth2AuthorizedClientId.create(this.registration3,this.principalName1), mock(OAuth2AuthorizedClient.class)] @AT@ 3366 @LENGTH@ 34
------------------INS SimpleName@@MethodName:mock:[OAuth2AuthorizedClient.class] @TO@ MethodInvocation@@mock(OAuth2AuthorizedClient.class) @AT@ 3366 @LENGTH@ 34
---------------------INS TypeLiteral@@OAuth2AuthorizedClient.class @TO@ SimpleName@@MethodName:mock:[OAuth2AuthorizedClient.class] @AT@ 3371 @LENGTH@ 28
---INS VariableDeclarationStatement@@ClientRegistrationRepository clientRegistrationRepository=mock(ClientRegistrationRepository.class); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3405 @LENGTH@ 101
------INS SimpleType@@ClientRegistrationRepository @TO@ VariableDeclarationStatement@@ClientRegistrationRepository clientRegistrationRepository=mock(ClientRegistrationRepository.class); @AT@ 3405 @LENGTH@ 28
------INS VariableDeclarationFragment@@clientRegistrationRepository=mock(ClientRegistrationRepository.class) @TO@ VariableDeclarationStatement@@ClientRegistrationRepository clientRegistrationRepository=mock(ClientRegistrationRepository.class); @AT@ 3434 @LENGTH@ 71
---------INS SimpleName@@clientRegistrationRepository @TO@ VariableDeclarationFragment@@clientRegistrationRepository=mock(ClientRegistrationRepository.class) @AT@ 3434 @LENGTH@ 28
---------INS MethodInvocation@@mock(ClientRegistrationRepository.class) @TO@ VariableDeclarationFragment@@clientRegistrationRepository=mock(ClientRegistrationRepository.class) @AT@ 3465 @LENGTH@ 40
------------INS SimpleName@@MethodName:mock:[ClientRegistrationRepository.class] @TO@ MethodInvocation@@mock(ClientRegistrationRepository.class) @AT@ 3465 @LENGTH@ 40
---------------INS TypeLiteral@@ClientRegistrationRepository.class @TO@ SimpleName@@MethodName:mock:[ClientRegistrationRepository.class] @AT@ 3470 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:given(clientRegistrationRepository.findByRegistrationId(eq(registrationId))).willReturn(this.registration3) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3509 @LENGTH@ 108
------INS MethodInvocation@@given(clientRegistrationRepository.findByRegistrationId(eq(registrationId))).willReturn(this.registration3) @TO@ ExpressionStatement@@MethodInvocation:given(clientRegistrationRepository.findByRegistrationId(eq(registrationId))).willReturn(this.registration3) @AT@ 3509 @LENGTH@ 107
---------INS MethodInvocation@@MethodName:given:[clientRegistrationRepository.findByRegistrationId(eq(registrationId))] @TO@ MethodInvocation@@given(clientRegistrationRepository.findByRegistrationId(eq(registrationId))).willReturn(this.registration3) @AT@ 3509 @LENGTH@ 76
------------INS MethodInvocation@@clientRegistrationRepository.findByRegistrationId(eq(registrationId)) @TO@ MethodInvocation@@MethodName:given:[clientRegistrationRepository.findByRegistrationId(eq(registrationId))] @AT@ 3515 @LENGTH@ 69
---------------INS SimpleName@@Name:clientRegistrationRepository @TO@ MethodInvocation@@clientRegistrationRepository.findByRegistrationId(eq(registrationId)) @AT@ 3515 @LENGTH@ 28
---------------INS SimpleName@@MethodName:findByRegistrationId:[eq(registrationId)] @TO@ MethodInvocation@@clientRegistrationRepository.findByRegistrationId(eq(registrationId)) @AT@ 3544 @LENGTH@ 40
------------------INS MethodInvocation@@eq(registrationId) @TO@ SimpleName@@MethodName:findByRegistrationId:[eq(registrationId)] @AT@ 3565 @LENGTH@ 18
---------------------INS SimpleName@@MethodName:eq:[registrationId] @TO@ MethodInvocation@@eq(registrationId) @AT@ 3565 @LENGTH@ 18
------------------------INS SimpleName@@registrationId @TO@ SimpleName@@MethodName:eq:[registrationId] @AT@ 3568 @LENGTH@ 14
---------INS SimpleName@@MethodName:willReturn:[this.registration3] @TO@ MethodInvocation@@given(clientRegistrationRepository.findByRegistrationId(eq(registrationId))).willReturn(this.registration3) @AT@ 3586 @LENGTH@ 30
------------INS FieldAccess@@this.registration3 @TO@ SimpleName@@MethodName:willReturn:[this.registration3] @AT@ 3597 @LENGTH@ 18
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration3 @AT@ 3597 @LENGTH@ 4
---------------INS SimpleName@@registration3 @TO@ FieldAccess@@this.registration3 @AT@ 3602 @LENGTH@ 13
---INS VariableDeclarationStatement@@InMemoryOAuth2AuthorizedClientService authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository); @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3621 @LENGTH@ 146
------INS SimpleType@@InMemoryOAuth2AuthorizedClientService @TO@ VariableDeclarationStatement@@InMemoryOAuth2AuthorizedClientService authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository); @AT@ 3621 @LENGTH@ 37
------INS VariableDeclarationFragment@@authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository) @TO@ VariableDeclarationStatement@@InMemoryOAuth2AuthorizedClientService authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository); @AT@ 3659 @LENGTH@ 107
---------INS SimpleName@@authorizedClientService @TO@ VariableDeclarationFragment@@authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository) @AT@ 3659 @LENGTH@ 23
---------INS ClassInstanceCreation@@InMemoryOAuth2AuthorizedClientService[this.clientRegistrationRepository] @TO@ VariableDeclarationFragment@@authorizedClientService=new InMemoryOAuth2AuthorizedClientService(this.clientRegistrationRepository) @AT@ 3685 @LENGTH@ 81
------------INS New@@new @TO@ ClassInstanceCreation@@InMemoryOAuth2AuthorizedClientService[this.clientRegistrationRepository] @AT@ 3685 @LENGTH@ 3
------------INS SimpleType@@InMemoryOAuth2AuthorizedClientService @TO@ ClassInstanceCreation@@InMemoryOAuth2AuthorizedClientService[this.clientRegistrationRepository] @AT@ 3689 @LENGTH@ 37
------------INS FieldAccess@@this.clientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryOAuth2AuthorizedClientService[this.clientRegistrationRepository] @AT@ 3732 @LENGTH@ 33
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3732 @LENGTH@ 4
---------------INS SimpleName@@clientRegistrationRepository @TO@ FieldAccess@@this.clientRegistrationRepository @AT@ 3737 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:authorizedClientService.setAuthorizedClients(authorizedClients) @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3770 @LENGTH@ 64
------INS MethodInvocation@@authorizedClientService.setAuthorizedClients(authorizedClients) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientService.setAuthorizedClients(authorizedClients) @AT@ 3770 @LENGTH@ 63
---------INS SimpleName@@Name:authorizedClientService @TO@ MethodInvocation@@authorizedClientService.setAuthorizedClients(authorizedClients) @AT@ 3770 @LENGTH@ 23
---------INS SimpleName@@MethodName:setAuthorizedClients:[authorizedClients] @TO@ MethodInvocation@@authorizedClientService.setAuthorizedClients(authorizedClients) @AT@ 3794 @LENGTH@ 39
------------INS SimpleName@@authorizedClients @TO@ SimpleName@@MethodName:setAuthorizedClients:[authorizedClients] @AT@ 3815 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsEmptyMapThenRepositoryUsingSuppliedAuthorizedClients,  @AT@ 3837 @LENGTH@ 136
------INS MethodInvocation@@assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @AT@ 3837 @LENGTH@ 135
---------INS MethodInvocation@@MethodName:assertThat:[(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)] @TO@ MethodInvocation@@assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @AT@ 3837 @LENGTH@ 123
------------INS CastExpression@@(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @TO@ MethodInvocation@@MethodName:assertThat:[(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)] @AT@ 3848 @LENGTH@ 111
---------------INS SimpleType@@OAuth2AuthorizedClient @TO@ CastExpression@@(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @AT@ 3849 @LENGTH@ 22
---------------INS MethodInvocation@@authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @TO@ CastExpression@@(OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @AT@ 3873 @LENGTH@ 86
------------------INS SimpleName@@Name:authorizedClientService @TO@ MethodInvocation@@authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @AT@ 3873 @LENGTH@ 23
------------------INS SimpleName@@MethodName:loadAuthorizedClient:[registrationId, this.principalName1] @TO@ MethodInvocation@@authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1) @AT@ 3897 @LENGTH@ 62
---------------------INS SimpleName@@registrationId @TO@ SimpleName@@MethodName:loadAuthorizedClient:[registrationId, this.principalName1] @AT@ 3923 @LENGTH@ 14
---------------------INS FieldAccess@@this.principalName1 @TO@ SimpleName@@MethodName:loadAuthorizedClient:[registrationId, this.principalName1] @AT@ 3939 @LENGTH@ 19
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.principalName1 @AT@ 3939 @LENGTH@ 4
------------------------INS SimpleName@@principalName1 @TO@ FieldAccess@@this.principalName1 @AT@ 3944 @LENGTH@ 14
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat((OAuth2AuthorizedClient)authorizedClientService.loadAuthorizedClient(registrationId,this.principalName1)).isNotNull() @AT@ 3961 @LENGTH@ 11


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ @SuppressWarnings("unchecked") Task<?> currTask=(Task<?>)nd; @AT@ 6146 @LENGTH@ 111
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6183 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 6212 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 6223 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6224 @LENGTH@ 28


INS MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 12564 @LENGTH@ 181
---INS Modifier@@private @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12564 @LENGTH@ 7
---INS ParameterizedType@@LinkedHashSet<String> @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12572 @LENGTH@ 21
------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 12572 @LENGTH@ 13
------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 12586 @LENGTH@ 6
---INS SimpleName@@MethodName:toLinkedHashSet @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12594 @LENGTH@ 15
---INS SingleVariableDeclaration@@String... scope @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12610 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... scope @AT@ 12610 @LENGTH@ 6
------INS SimpleName@@scope @TO@ SingleVariableDeclaration@@String... scope @AT@ 12620 @LENGTH@ 5
---INS VariableDeclarationStatement@@LinkedHashSet<String> result=new LinkedHashSet<>(); @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12632 @LENGTH@ 53
------INS ParameterizedType@@LinkedHashSet<String> @TO@ VariableDeclarationStatement@@LinkedHashSet<String> result=new LinkedHashSet<>(); @AT@ 12632 @LENGTH@ 21
---------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 12632 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 12646 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=new LinkedHashSet<>() @TO@ VariableDeclarationStatement@@LinkedHashSet<String> result=new LinkedHashSet<>(); @AT@ 12654 @LENGTH@ 30
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new LinkedHashSet<>() @AT@ 12654 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedHashSet<>[] @TO@ VariableDeclarationFragment@@result=new LinkedHashSet<>() @AT@ 12663 @LENGTH@ 21
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<>[] @AT@ 12663 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashSet<> @TO@ ClassInstanceCreation@@LinkedHashSet<>[] @AT@ 12667 @LENGTH@ 15
---------------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<> @AT@ 12667 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:Collections.addAll(result,scope) @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12689 @LENGTH@ 34
------INS MethodInvocation@@Collections.addAll(result,scope) @TO@ ExpressionStatement@@MethodInvocation:Collections.addAll(result,scope) @AT@ 12689 @LENGTH@ 33
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.addAll(result,scope) @AT@ 12689 @LENGTH@ 11
---------INS SimpleName@@MethodName:addAll:[result, scope] @TO@ MethodInvocation@@Collections.addAll(result,scope) @AT@ 12701 @LENGTH@ 21
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:addAll:[result, scope] @AT@ 12708 @LENGTH@ 6
------------INS SimpleName@@scope @TO@ SimpleName@@MethodName:addAll:[result, scope] @AT@ 12716 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@private, LinkedHashSet<String>, MethodName:toLinkedHashSet, String... scope,  @AT@ 12727 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 12734 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:notify.matches(2,TimeUnit.MINUTES) @TO@ MethodInvocation:notify.matches(60,TimeUnit.SECONDS) @AT@ 2850 @LENGTH@ 36
---UPD MethodInvocation@@notify.matches(2,TimeUnit.MINUTES) @TO@ notify.matches(60,TimeUnit.SECONDS) @AT@ 2850 @LENGTH@ 35
------UPD SimpleName@@MethodName:matches:[2, TimeUnit.MINUTES] @TO@ MethodName:matches:[60, TimeUnit.SECONDS] @AT@ 2857 @LENGTH@ 28
---------UPD NumberLiteral@@2 @TO@ 60 @AT@ 2865 @LENGTH@ 1
---------UPD QualifiedName@@TimeUnit.MINUTES @TO@ TimeUnit.SECONDS @AT@ 2868 @LENGTH@ 16
------------UPD SimpleName@@MINUTES @TO@ SECONDS @AT@ 2877 @LENGTH@ 7


UPD TypeDeclaration@@[@SuppressWarnings("restriction"), public]OAuthOverHttpURLStreamHandler, sun.net.www.protocol.http.Handler @TO@ [@SuppressWarnings("restriction"), @Deprecated, public]OAuthOverHttpURLStreamHandler, sun.net.www.protocol.http.Handler @AT@ 1153 @LENGTH@ 1295
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("restriction"), public]OAuthOverHttpURLStreamHandler, sun.net.www.protocol.http.Handler @AT@ 1407 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthConsumerToken, [Serializable] @TO@ [@Deprecated, public]OAuthConsumerToken, [Serializable] @AT@ 783 @LENGTH@ 2277
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerToken, [Serializable] @AT@ 1003 @LENGTH@ 11


INS IfStatement@@if (containerEle.hasAttribute(TYPE)) {  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @TO@ MethodDeclaration@@public, static, BeanDefinition, MethodName:parseContainer, Element containerEle, ParserContext parserContext,  @AT@ 5158 @LENGTH@ 211
---INS MethodInvocation@@containerEle.hasAttribute(TYPE) @TO@ IfStatement@@if (containerEle.hasAttribute(TYPE)) {  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @AT@ 5162 @LENGTH@ 31
------INS SimpleName@@Name:containerEle @TO@ MethodInvocation@@containerEle.hasAttribute(TYPE) @AT@ 5162 @LENGTH@ 12
------INS SimpleName@@MethodName:hasAttribute:[TYPE] @TO@ MethodInvocation@@containerEle.hasAttribute(TYPE) @AT@ 5175 @LENGTH@ 18
---------INS SimpleName@@TYPE @TO@ SimpleName@@MethodName:hasAttribute:[TYPE] @AT@ 5188 @LENGTH@ 4
---INS Block@@ThenBody:{  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @TO@ IfStatement@@if (containerEle.hasAttribute(TYPE)) {  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @AT@ 5195 @LENGTH@ 174
------INS VariableDeclarationStatement@@String type=containerEle.getAttribute(TYPE); @TO@ Block@@ThenBody:{  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @AT@ 5200 @LENGTH@ 46
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String type=containerEle.getAttribute(TYPE); @AT@ 5200 @LENGTH@ 6
---------INS VariableDeclarationFragment@@type=containerEle.getAttribute(TYPE) @TO@ VariableDeclarationStatement@@String type=containerEle.getAttribute(TYPE); @AT@ 5207 @LENGTH@ 38
------------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=containerEle.getAttribute(TYPE) @AT@ 5207 @LENGTH@ 4
------------MOV MethodInvocation@@containerEle.getAttribute(TYPE) @TO@ VariableDeclarationFragment@@type=containerEle.getAttribute(TYPE) @AT@ 5218 @LENGTH@ 31
------INS IfStatement@@if (StringUtils.hasText(type)) {  containerDef.getPropertyValues().add("type",new TypedStringValue(type));} @TO@ Block@@ThenBody:{  String type=containerEle.getAttribute(TYPE);  if (StringUtils.hasText(type)) {    containerDef.getPropertyValues().add("type",new TypedStringValue(type));  }} @AT@ 5250 @LENGTH@ 115
---------INS MethodInvocation@@StringUtils.hasText(type) @TO@ IfStatement@@if (StringUtils.hasText(type)) {  containerDef.getPropertyValues().add("type",new TypedStringValue(type));} @AT@ 5254 @LENGTH@ 25
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(type) @AT@ 5254 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[type] @TO@ MethodInvocation@@StringUtils.hasText(type) @AT@ 5266 @LENGTH@ 13
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:hasText:[type] @AT@ 5274 @LENGTH@ 4
---------INS Block@@ThenBody:{  containerDef.getPropertyValues().add("type",new TypedStringValue(type));} @TO@ IfStatement@@if (StringUtils.hasText(type)) {  containerDef.getPropertyValues().add("type",new TypedStringValue(type));} @AT@ 5281 @LENGTH@ 84
------------INS ExpressionStatement@@MethodInvocation:containerDef.getPropertyValues().add("type",new TypedStringValue(type)) @TO@ Block@@ThenBody:{  containerDef.getPropertyValues().add("type",new TypedStringValue(type));} @AT@ 5287 @LENGTH@ 73
---------------MOV MethodInvocation@@containerDef.getPropertyValues().add("type",new TypedStringValue(containerEle.getAttribute(TYPE))) @TO@ ExpressionStatement@@MethodInvocation:containerDef.getPropertyValues().add("type",new TypedStringValue(type)) @AT@ 5152 @LENGTH@ 99
------------------UPD SimpleName@@MethodName:add:["type", new TypedStringValue(containerEle.getAttribute(TYPE))] @TO@ MethodName:add:["type", new TypedStringValue(type)] @AT@ 5185 @LENGTH@ 66
---------------------UPD ClassInstanceCreation@@TypedStringValue[containerEle.getAttribute(TYPE)] @TO@ TypedStringValue[type] @AT@ 5197 @LENGTH@ 53
------------------------INS SimpleName@@type @TO@ ClassInstanceCreation@@TypedStringValue[containerEle.getAttribute(TYPE)] @AT@ 5353 @LENGTH@ 4


UPD VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attribute("attribute1","value1").attribute("attribute2","value2").build(); @TO@ OAuth2AuthorizationContext authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attributes(attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
).build(); @AT@ 2722 @LENGTH@ 243
---UPD VariableDeclarationFragment@@authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attribute("attribute1","value1").attribute("attribute2","value2").build() @TO@ authorizationContext=OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attributes(attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
).build() @AT@ 2749 @LENGTH@ 215
------UPD MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attribute("attribute1","value1").attribute("attribute2","value2").build() @TO@ OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attributes(attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
).build() @AT@ 2772 @LENGTH@ 192
---------DEL MethodInvocation@@MethodName:attribute:["attribute2", "value2"] @AT@ 2772 @LENGTH@ 179
------------DEL StringLiteral@@"attribute2" @AT@ 2928 @LENGTH@ 12
------------DEL StringLiteral@@"value2" @AT@ 2942 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:attribute:["attribute1", "value1"] @AT@ 2772 @LENGTH@ 140
------------DEL StringLiteral@@"attribute1" @AT@ 2889 @LENGTH@ 12
------------DEL StringLiteral@@"value1" @AT@ 2903 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:attributes:[attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
] @TO@ MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(this.authorizedClient).principal(this.principal).attribute("attribute1","value1").attribute("attribute2","value2").build() @AT@ 2772 @LENGTH@ 230
------------INS LambdaExpression@@attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
 @TO@ MethodInvocation@@MethodName:attributes:[attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
] @AT@ 2890 @LENGTH@ 111
---------------INS VariableDeclarationFragment@@attributes @TO@ LambdaExpression@@attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
 @AT@ 2890 @LENGTH@ 10
------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 2890 @LENGTH@ 10
------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 2890 @LENGTH@ 10
---------------INS ExpressionStatement@@MethodInvocation:attributes.put("attribute1","value1") @TO@ LambdaExpression@@attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
 @AT@ 2911 @LENGTH@ 39
------------------INS MethodInvocation@@attributes.put("attribute1","value1") @TO@ ExpressionStatement@@MethodInvocation:attributes.put("attribute1","value1") @AT@ 2911 @LENGTH@ 38
---------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.put("attribute1","value1") @AT@ 2911 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:put:["attribute1", "value1"] @TO@ MethodInvocation@@attributes.put("attribute1","value1") @AT@ 2922 @LENGTH@ 27
------------------------INS StringLiteral@@"attribute1" @TO@ SimpleName@@MethodName:put:["attribute1", "value1"] @AT@ 2926 @LENGTH@ 12
------------------------INS StringLiteral@@"value1" @TO@ SimpleName@@MethodName:put:["attribute1", "value1"] @AT@ 2940 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:attributes.put("attribute2","value2") @TO@ LambdaExpression@@attributes -> {
  attributes.put("attribute1","value1");
  attributes.put("attribute2","value2");
}
 @AT@ 2956 @LENGTH@ 39
------------------INS MethodInvocation@@attributes.put("attribute2","value2") @TO@ ExpressionStatement@@MethodInvocation:attributes.put("attribute2","value2") @AT@ 2956 @LENGTH@ 38
---------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.put("attribute2","value2") @AT@ 2956 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:put:["attribute2", "value2"] @TO@ MethodInvocation@@attributes.put("attribute2","value2") @AT@ 2967 @LENGTH@ 27
------------------------INS StringLiteral@@"attribute2" @TO@ SimpleName@@MethodName:put:["attribute2", "value2"] @AT@ 2971 @LENGTH@ 12
------------------------INS StringLiteral@@"value2" @TO@ SimpleName@@MethodName:put:["attribute2", "value2"] @AT@ 2985 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:map.put("in",functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext))) @TO@ MethodInvocation:map.put("in",functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext,Collections.singleton(Fields.field(itemVariableName))))) @AT@ 5986 @LENGTH@ 124
---UPD MethodInvocation@@map.put("in",functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext))) @TO@ map.put("in",functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext,Collections.singleton(Fields.field(itemVariableName))))) @AT@ 5986 @LENGTH@ 123
------UPD SimpleName@@MethodName:put:["in", functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext))] @TO@ MethodName:put:["in", functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext,Collections.singleton(Fields.field(itemVariableName))))] @AT@ 5990 @LENGTH@ 119
---------UPD MethodInvocation@@functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext)) @TO@ functionToApply.toDocument(new NestedDelegatingExpressionAggregationOperationContext(operationContext,Collections.singleton(Fields.field(itemVariableName)))) @AT@ 6005 @LENGTH@ 103
------------UPD SimpleName@@MethodName:toDocument:[new NestedDelegatingExpressionAggregationOperationContext(operationContext)] @TO@ MethodName:toDocument:[new NestedDelegatingExpressionAggregationOperationContext(operationContext,Collections.singleton(Fields.field(itemVariableName)))] @AT@ 6021 @LENGTH@ 87
---------------UPD ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[operationContext] @TO@ NestedDelegatingExpressionAggregationOperationContext[operationContext, Collections.singleton(Fields.field(itemVariableName))] @AT@ 6032 @LENGTH@ 75
------------------INS MethodInvocation@@Collections.singleton(Fields.field(itemVariableName)) @TO@ ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[operationContext] @AT@ 6181 @LENGTH@ 53
---------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(Fields.field(itemVariableName)) @AT@ 6181 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:singleton:[Fields.field(itemVariableName)] @TO@ MethodInvocation@@Collections.singleton(Fields.field(itemVariableName)) @AT@ 6193 @LENGTH@ 41
------------------------INS MethodInvocation@@Fields.field(itemVariableName) @TO@ SimpleName@@MethodName:singleton:[Fields.field(itemVariableName)] @AT@ 6203 @LENGTH@ 30
---------------------------INS SimpleName@@Name:Fields @TO@ MethodInvocation@@Fields.field(itemVariableName) @AT@ 6203 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:field:[itemVariableName] @TO@ MethodInvocation@@Fields.field(itemVariableName) @AT@ 6210 @LENGTH@ 23
------------------------------INS SimpleName@@itemVariableName @TO@ SimpleName@@MethodName:field:[itemVariableName] @AT@ 6216 @LENGTH@ 16


UPD EnumDeclaration@@[public, static]IgniteSetOperation,  @TO@ [static]IgniteSetOperation,  @AT@ 6305 @LENGTH@ 118
---DEL Modifier@@public @AT@ 6305 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]RestSwaggerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]RestSwaggerEndpointBuilder, [EndpointProducerBuilder] @AT@ 1407 @LENGTH@ 254
---DEL Modifier@@static @AT@ 1414 @LENGTH@ 6


UPD MethodDeclaration@@default, GuavaEventBusEndpointBuilder, MethodName:guavaEventBus, String path,  @TO@ default, GuavaEventBusEndpointBuilder, MethodName:guavaEventbus, String path,  @AT@ 25779 @LENGTH@ 427
---UPD SimpleName@@MethodName:guavaEventBus @TO@ MethodName:guavaEventbus @AT@ 25816 @LENGTH@ 13


UPD TypeDeclaration@@[public]ResourceSpecificConsumerDetails, [ConsumerDetails] @TO@ [@Deprecated, public]ResourceSpecificConsumerDetails, [ConsumerDetails] @AT@ 729 @LENGTH@ 325
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceSpecificConsumerDetails, [ConsumerDetails] @AT@ 950 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]AccessTokenRequiredException, InsufficientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]AccessTokenRequiredException, InsufficientAuthenticationException @AT@ 269 @LENGTH@ 713
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]AccessTokenRequiredException, InsufficientAuthenticationException @AT@ 475 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthSecurityContextHolder,  @TO@ [@Deprecated, public]OAuthSecurityContextHolder,  @AT@ 138 @LENGTH@ 354
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSecurityContextHolder,  @AT@ 359 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]FopOutputType,  @TO@ [static]FopOutputType,  @AT@ 5892 @LENGTH@ 98
---DEL Modifier@@public @AT@ 5892 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:testDataFormat(COMPONENT,"json-api") @TO@ MethodInvocation:testDataFormat(COMPONENT,"jsonApi") @AT@ 1160 @LENGTH@ 38
---UPD MethodInvocation@@testDataFormat(COMPONENT,"json-api") @TO@ testDataFormat(COMPONENT,"jsonApi") @AT@ 1160 @LENGTH@ 37
------UPD SimpleName@@MethodName:testDataFormat:[COMPONENT, "json-api"] @TO@ MethodName:testDataFormat:[COMPONENT, "jsonApi"] @AT@ 1160 @LENGTH@ 37
---------UPD StringLiteral@@"json-api" @TO@ "jsonApi" @AT@ 1186 @LENGTH@ 10


UPD EnumDeclaration@@[public, static]KMSOperations,  @TO@ [static]KMSOperations,  @AT@ 4393 @LENGTH@ 126
---DEL Modifier@@public @AT@ 4393 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 9608 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 9608 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 9608 @LENGTH@ 56
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 9621 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 9632 @LENGTH@ 5


UPD Block@@ThenBody:{  try {    Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream());    consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));  } catch (  IOException e) {    throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);  }catch (  CertificateException e) {    throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);  }catch (  NullPointerException e) {    throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);  }} @TO@ ThenBody:{  InputStream inputStream=null;  try {    inputStream=resourceLoader.getResource(secret).getInputStream();    Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(inputStream);    consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));  } catch (  IOException e) {    throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);  }catch (  CertificateException e) {    throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);  }catch (  NullPointerException e) {    throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);  } finally {    try {      if (inputStream != null) {        inputStream.close();      }    } catch (    IOException e) {      logger.warn("Cannot close open stream: ",e);    }  }} @AT@ 3023 @LENGTH@ 615
---UPD TryStatement@@try {  Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream());  consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));} catch (IOException e) {  throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);}catch (CertificateException e) {  throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);}catch (NullPointerException e) {  throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);} @TO@ try {  inputStream=resourceLoader.getResource(secret).getInputStream();  Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(inputStream);  consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));} catch (IOException e) {  throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);}catch (CertificateException e) {  throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);}catch (NullPointerException e) {  throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);} finally {  try {    if (inputStream != null) {      inputStream.close();    }  } catch (  IOException e) {    logger.warn("Cannot close open stream: ",e);  }} @AT@ 3028 @LENGTH@ 606
------UPD VariableDeclarationStatement@@Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream()); @TO@ Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(inputStream); @AT@ 3038 @LENGTH@ 132
---------UPD VariableDeclarationFragment@@cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream()) @TO@ cert=CertificateFactory.getInstance("X.509").generateCertificate(inputStream) @AT@ 3050 @LENGTH@ 119
------------UPD MethodInvocation@@CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream()) @TO@ CertificateFactory.getInstance("X.509").generateCertificate(inputStream) @AT@ 3057 @LENGTH@ 112
---------------UPD SimpleName@@MethodName:generateCertificate:[resourceLoader.getResource(secret).getInputStream()] @TO@ MethodName:generateCertificate:[inputStream] @AT@ 3097 @LENGTH@ 72
------------------INS SimpleName@@inputStream @TO@ SimpleName@@MethodName:generateCertificate:[resourceLoader.getResource(secret).getInputStream()] @AT@ 3425 @LENGTH@ 11
------INS ExpressionStatement@@Assignment:inputStream=resourceLoader.getResource(secret).getInputStream() @TO@ TryStatement@@try {  Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream());  consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));} catch (IOException e) {  throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);}catch (CertificateException e) {  throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);}catch (NullPointerException e) {  throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);} @AT@ 3275 @LENGTH@ 66
---------INS Assignment@@inputStream=resourceLoader.getResource(secret).getInputStream() @TO@ ExpressionStatement@@Assignment:inputStream=resourceLoader.getResource(secret).getInputStream() @AT@ 3275 @LENGTH@ 65
------------MOV MethodInvocation@@resourceLoader.getResource(secret).getInputStream() @TO@ Assignment@@inputStream=resourceLoader.getResource(secret).getInputStream() @AT@ 3117 @LENGTH@ 51
------------INS SimpleName@@inputStream @TO@ Assignment@@inputStream=resourceLoader.getResource(secret).getInputStream() @AT@ 3275 @LENGTH@ 11
------------INS Operator@@= @TO@ Assignment@@inputStream=resourceLoader.getResource(secret).getInputStream() @AT@ 3286 @LENGTH@ 1
------INS Block@@FinallyBody:{  try {    if (inputStream != null) {      inputStream.close();    }  } catch (  IOException e) {    logger.warn("Cannot close open stream: ",e);  }} @TO@ TryStatement@@try {  Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream());  consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));} catch (IOException e) {  throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);}catch (CertificateException e) {  throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);}catch (NullPointerException e) {  throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);} @AT@ 3914 @LENGTH@ 174
---------INS TryStatement@@try {  if (inputStream != null) {    inputStream.close();  }} catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @TO@ Block@@FinallyBody:{  try {    if (inputStream != null) {      inputStream.close();    }  } catch (  IOException e) {    logger.warn("Cannot close open stream: ",e);  }} @AT@ 3920 @LENGTH@ 163
------------INS IfStatement@@if (inputStream != null) {  inputStream.close();} @TO@ TryStatement@@try {  if (inputStream != null) {    inputStream.close();  }} catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @AT@ 3931 @LENGTH@ 60
---------------INS InfixExpression@@inputStream != null @TO@ IfStatement@@if (inputStream != null) {  inputStream.close();} @AT@ 3935 @LENGTH@ 19
------------------INS SimpleName@@inputStream @TO@ InfixExpression@@inputStream != null @AT@ 3935 @LENGTH@ 11
------------------INS Operator@@!= @TO@ InfixExpression@@inputStream != null @AT@ 3946 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@inputStream != null @AT@ 3950 @LENGTH@ 4
---------------INS Block@@ThenBody:{  inputStream.close();} @TO@ IfStatement@@if (inputStream != null) {  inputStream.close();} @AT@ 3956 @LENGTH@ 35
------------------INS ExpressionStatement@@MethodInvocation:inputStream.close() @TO@ Block@@ThenBody:{  inputStream.close();} @AT@ 3964 @LENGTH@ 20
---------------------INS MethodInvocation@@inputStream.close() @TO@ ExpressionStatement@@MethodInvocation:inputStream.close() @AT@ 3964 @LENGTH@ 19
------------------------INS SimpleName@@Name:inputStream @TO@ MethodInvocation@@inputStream.close() @AT@ 3964 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@inputStream.close() @AT@ 3976 @LENGTH@ 7
------------INS CatchClause@@catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @TO@ TryStatement@@try {  if (inputStream != null) {    inputStream.close();  }} catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @AT@ 4003 @LENGTH@ 80
---------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @AT@ 4010 @LENGTH@ 13
------------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 4010 @LENGTH@ 11
------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 4022 @LENGTH@ 1
---------------INS ExpressionStatement@@MethodInvocation:logger.warn("Cannot close open stream: ",e) @TO@ CatchClause@@catch (IOException e) {  logger.warn("Cannot close open stream: ",e);} @AT@ 4032 @LENGTH@ 45
------------------INS MethodInvocation@@logger.warn("Cannot close open stream: ",e) @TO@ ExpressionStatement@@MethodInvocation:logger.warn("Cannot close open stream: ",e) @AT@ 4032 @LENGTH@ 44
---------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.warn("Cannot close open stream: ",e) @AT@ 4032 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:warn:["Cannot close open stream: ", e] @TO@ MethodInvocation@@logger.warn("Cannot close open stream: ",e) @AT@ 4039 @LENGTH@ 37
------------------------INS StringLiteral@@"Cannot close open stream: " @TO@ SimpleName@@MethodName:warn:["Cannot close open stream: ", e] @AT@ 4044 @LENGTH@ 28
------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:warn:["Cannot close open stream: ", e] @AT@ 4074 @LENGTH@ 1
---INS VariableDeclarationStatement@@InputStream inputStream=null; @TO@ Block@@ThenBody:{  try {    Certificate cert=CertificateFactory.getInstance("X.509").generateCertificate(resourceLoader.getResource(secret).getInputStream());    consumer.setSignatureSecret(new RSAKeySecret(cert.getPublicKey()));  } catch (  IOException e) {    throw new BeanCreationException("RSA certificate not found at " + secret + ".",e);  }catch (  CertificateException e) {    throw new BeanCreationException("Invalid RSA certificate at " + secret + ".",e);  }catch (  NullPointerException e) {    throw new BeanCreationException("Could not load RSA certificate at " + secret + ".",e);  }} @AT@ 3230 @LENGTH@ 31
------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream inputStream=null; @AT@ 3230 @LENGTH@ 11
------INS VariableDeclarationFragment@@inputStream=null @TO@ VariableDeclarationStatement@@InputStream inputStream=null; @AT@ 3242 @LENGTH@ 18
---------INS SimpleName@@inputStream @TO@ VariableDeclarationFragment@@inputStream=null @AT@ 3242 @LENGTH@ 11
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@inputStream=null @AT@ 3256 @LENGTH@ 4


UPD TypeDeclaration@@[public, final]OAuth2AccessTokenJackson2Serializer, StdSerializer<OAuth2AccessToken> @TO@ [@Deprecated, public, final]OAuth2AccessTokenJackson2Serializer, StdSerializer<OAuth2AccessToken> @AT@ 1525 @LENGTH@ 1522
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]OAuth2AccessTokenJackson2Serializer, StdSerializer<OAuth2AccessToken> @AT@ 1703 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1663 @LENGTH@ 2083
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1670 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1675 @LENGTH@ 28


UPD TryStatement@@try {  message=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build();  Object errorResult=this.errorHandler.handleError(amqpMessage,message,e);  if (errorResult != null) {    handleResult(this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()),amqpMessage,channel,message);  } else {    logger.trace("Error handler returned no result");  }} catch (Exception ex) {  returnOrThrow(amqpMessage,channel,message,ex,ex);} @TO@ try {  Message<?> messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build();  Object errorResult=this.errorHandler.handleError(amqpMessage,messageWithChannel,e);  if (errorResult != null) {    handleResult(this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()),amqpMessage,channel,message);  } else {    logger.trace("Error handler returned no result");  }} catch (Exception ex) {  returnOrThrow(amqpMessage,channel,message,ex,ex);} @AT@ 5835 @LENGTH@ 553
---INS VariableDeclarationStatement@@Message<?> messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build(); @TO@ TryStatement@@try {  message=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build();  Object errorResult=this.errorHandler.handleError(amqpMessage,message,e);  if (errorResult != null) {    handleResult(this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()),amqpMessage,channel,message);  } else {    logger.trace("Error handler returned no result");  }} catch (Exception ex) {  returnOrThrow(amqpMessage,channel,message,ex,ex);} @AT@ 5846 @LENGTH@ 132
------INS ParameterizedType@@Message<?> @TO@ VariableDeclarationStatement@@Message<?> messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build(); @AT@ 5846 @LENGTH@ 10
---------INS SimpleType@@Message @TO@ ParameterizedType@@Message<?> @AT@ 5846 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Message<?> @AT@ 5854 @LENGTH@ 1
------INS VariableDeclarationFragment@@messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @TO@ VariableDeclarationStatement@@Message<?> messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build(); @AT@ 5857 @LENGTH@ 120
---------MOV MethodInvocation@@MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @TO@ VariableDeclarationFragment@@messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @AT@ 5856 @LENGTH@ 99
---------INS SimpleName@@messageWithChannel @TO@ VariableDeclarationFragment@@messageWithChannel=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @AT@ 5857 @LENGTH@ 18
---DEL ExpressionStatement@@Assignment:message=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @AT@ 5846 @LENGTH@ 110
------DEL Assignment@@message=MessageBuilder.fromMessage(message).setHeader(AmqpHeaders.CHANNEL,channel).build() @AT@ 5846 @LENGTH@ 109
---------DEL SimpleName@@message @AT@ 5846 @LENGTH@ 7
---------DEL Operator@@= @AT@ 5853 @LENGTH@ 1
---UPD VariableDeclarationStatement@@Object errorResult=this.errorHandler.handleError(amqpMessage,message,e); @TO@ Object errorResult=this.errorHandler.handleError(amqpMessage,messageWithChannel,e); @AT@ 5962 @LENGTH@ 76
------UPD VariableDeclarationFragment@@errorResult=this.errorHandler.handleError(amqpMessage,message,e) @TO@ errorResult=this.errorHandler.handleError(amqpMessage,messageWithChannel,e) @AT@ 5969 @LENGTH@ 68
---------UPD MethodInvocation@@this.errorHandler.handleError(amqpMessage,message,e) @TO@ this.errorHandler.handleError(amqpMessage,messageWithChannel,e) @AT@ 5983 @LENGTH@ 54
------------UPD SimpleName@@MethodName:handleError:[amqpMessage, message, e] @TO@ MethodName:handleError:[amqpMessage, messageWithChannel, e] @AT@ 6001 @LENGTH@ 36
---------------UPD SimpleName@@message @TO@ messageWithChannel @AT@ 6026 @LENGTH@ 7


INS FieldDeclaration@@String, [NAME_OF_IDS_RESULT="__ids__"] @TO@ TypeDeclaration@@[@API(status=API.Status.INTERNAL,since="1.0"), public]NodeDescription,  @AT@ 1240 @LENGTH@ 38
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [NAME_OF_IDS_RESULT="__ids__"] @AT@ 1240 @LENGTH@ 6
---INS VariableDeclarationFragment@@NAME_OF_IDS_RESULT="__ids__" @TO@ FieldDeclaration@@String, [NAME_OF_IDS_RESULT="__ids__"] @AT@ 1247 @LENGTH@ 30
------INS SimpleName@@NAME_OF_IDS_RESULT @TO@ VariableDeclarationFragment@@NAME_OF_IDS_RESULT="__ids__" @AT@ 1247 @LENGTH@ 18
------INS StringLiteral@@"__ids__" @TO@ VariableDeclarationFragment@@NAME_OF_IDS_RESULT="__ids__" @AT@ 1268 @LENGTH@ 9


UPD EnumDeclaration@@[public, static]LinkedInApiName,  @TO@ [static]LinkedInApiName,  @AT@ 45060 @LENGTH@ 108
---DEL Modifier@@public @AT@ 45060 @LENGTH@ 6


UPD TypeDeclaration@@[public]JsonParserFactory,  @TO@ [@Deprecated, public]JsonParserFactory,  @AT@ 744 @LENGTH@ 304
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JsonParserFactory,  @AT@ 922 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:OAuth2IntrospectionAuthenticationProvider, OAuth2TokenIntrospectionClient introspectionClient,  @TO@ public, voidMethodName:OAuth2IntrospectionAuthenticationProvider, OpaqueTokenIntrospector introspectionClient,  @AT@ 3855 @LENGTH@ 232
---UPD SingleVariableDeclaration@@OAuth2TokenIntrospectionClient introspectionClient @TO@ OpaqueTokenIntrospector introspectionClient @AT@ 3904 @LENGTH@ 50
------UPD SimpleType@@OAuth2TokenIntrospectionClient @TO@ OpaqueTokenIntrospector @AT@ 3904 @LENGTH@ 30


UPD IfStatement@@if (!inputs.getSkips().isEmpty()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @TO@ if (!inputs.getSkips().isEmpty() && inputs.getItems().size() != outputs.getItems().size()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @AT@ 18064 @LENGTH@ 120
---INS InfixExpression@@!inputs.getSkips().isEmpty() && inputs.getItems().size() != outputs.getItems().size() @TO@ IfStatement@@if (!inputs.getSkips().isEmpty()) {  if (outputIterator.hasNext()) {    outputIterator.remove();    return;  }} @AT@ 18025 @LENGTH@ 85
------INS Operator@@&& @TO@ InfixExpression@@!inputs.getSkips().isEmpty() && inputs.getItems().size() != outputs.getItems().size() @AT@ 18053 @LENGTH@ 2
------INS InfixExpression@@inputs.getItems().size() != outputs.getItems().size() @TO@ InfixExpression@@!inputs.getSkips().isEmpty() && inputs.getItems().size() != outputs.getItems().size() @AT@ 18057 @LENGTH@ 53
---------INS MethodInvocation@@inputs.getItems().size() @TO@ InfixExpression@@inputs.getItems().size() != outputs.getItems().size() @AT@ 18057 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getItems:[] @TO@ MethodInvocation@@inputs.getItems().size() @AT@ 18057 @LENGTH@ 17
------------INS SimpleName@@Name:inputs @TO@ MethodInvocation@@inputs.getItems().size() @AT@ 18057 @LENGTH@ 6
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@inputs.getItems().size() @AT@ 18075 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@inputs.getItems().size() != outputs.getItems().size() @AT@ 18081 @LENGTH@ 2
---------INS MethodInvocation@@outputs.getItems().size() @TO@ InfixExpression@@inputs.getItems().size() != outputs.getItems().size() @AT@ 18085 @LENGTH@ 25
------------INS MethodInvocation@@MethodName:getItems:[] @TO@ MethodInvocation@@outputs.getItems().size() @AT@ 18085 @LENGTH@ 18
------------INS SimpleName@@Name:outputs @TO@ MethodInvocation@@outputs.getItems().size() @AT@ 18085 @LENGTH@ 7
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@outputs.getItems().size() @AT@ 18104 @LENGTH@ 6
------MOV PrefixExpression@@!inputs.getSkips().isEmpty() @TO@ InfixExpression@@!inputs.getSkips().isEmpty() && inputs.getItems().size() != outputs.getItems().size() @AT@ 18068 @LENGTH@ 28


UPD SwitchStatement@@switch (type) {case INT:  return Integer.TYPE;case LIST:return List.class;case SHORT:return Short.TYPE;case DOUBLE:return Double.TYPE;case STRING:case PASSWORD:case CLASS:return String.class;case BOOLEAN:return Boolean.TYPE;case LONG:return Long.TYPE;default :throw new IllegalArgumentException(String.format("Type '%s' is not supported",type.name()));} @TO@ switch (type) {case INT:  return Integer.TYPE;case SHORT:return Short.TYPE;case DOUBLE:return Double.TYPE;case STRING:case PASSWORD:case CLASS:case LIST:return String.class;case BOOLEAN:return Boolean.TYPE;case LONG:return Long.TYPE;default :throw new IllegalArgumentException(String.format("Type '%s' is not supported",type.name()));} @AT@ 3253 @LENGTH@ 454
---DEL SwitchCase@@case LIST: @AT@ 3316 @LENGTH@ 10
------DEL SimpleName@@LIST @AT@ 3321 @LENGTH@ 4
---DEL ReturnStatement@@TypeLiteral:List.class @AT@ 3327 @LENGTH@ 18
------DEL TypeLiteral@@List.class @AT@ 3334 @LENGTH@ 10
---INS SwitchCase@@case LIST: @TO@ SwitchStatement@@switch (type) {case INT:  return Integer.TYPE;case LIST:return List.class;case SHORT:return Short.TYPE;case DOUBLE:return Double.TYPE;case STRING:case PASSWORD:case CLASS:return String.class;case BOOLEAN:return Boolean.TYPE;case LONG:return Long.TYPE;default :throw new IllegalArgumentException(String.format("Type '%s' is not supported",type.name()));} @AT@ 3436 @LENGTH@ 10
------INS SimpleName@@LIST @TO@ SwitchCase@@case LIST: @AT@ 3441 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]BraintreeApiName,  @TO@ [static]BraintreeApiName,  @AT@ 32597 @LENGTH@ 287
---DEL Modifier@@public @AT@ 32597 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @Import(TokenKeyEndpointRegistrar.class), public]AuthorizationServerEndpointsConfiguration,  @TO@ [@Configuration, @Import(TokenKeyEndpointRegistrar.class), @Deprecated, public]AuthorizationServerEndpointsConfiguration,  @AT@ 3589 @LENGTH@ 7200
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration, @Import(TokenKeyEndpointRegistrar.class), public]AuthorizationServerEndpointsConfiguration,  @AT@ 3823 @LENGTH@ 11


UPD MethodDeclaration@@default, ActiveMQEndpointBuilder, MethodName:activeMQ, String path,  @TO@ default, ActiveMQEndpointBuilder, MethodName:activemq, String path,  @AT@ 227392 @LENGTH@ 386
---UPD SimpleName@@MethodName:activeMQ @TO@ MethodName:activemq @AT@ 227424 @LENGTH@ 8


UPD MethodDeclaration@@private, Document, MethodName:getMappedFieldsObject, Document fields, MongoPersistentEntity<?> entity, Class<?> targetType,  @TO@ private, Document, MethodName:getMappedFieldsObject, Document fields, @Nullable MongoPersistentEntity<?> entity, Class<?> targetType,  @AT@ 99157 @LENGTH@ 494
---UPD SingleVariableDeclaration@@MongoPersistentEntity<?> entity @TO@ @Nullable MongoPersistentEntity<?> entity @AT@ 99213 @LENGTH@ 31
---INS IfStatement@@if (entity == null) {  return fields;} @TO@ MethodDeclaration@@private, Document, MethodName:getMappedFieldsObject, Document fields, MongoPersistentEntity<?> entity, Class<?> targetType,  @AT@ 99269 @LENGTH@ 43
------INS InfixExpression@@entity == null @TO@ IfStatement@@if (entity == null) {  return fields;} @AT@ 99273 @LENGTH@ 14
---------INS SimpleName@@entity @TO@ InfixExpression@@entity == null @AT@ 99273 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@entity == null @AT@ 99279 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entity == null @AT@ 99283 @LENGTH@ 4
------INS Block@@ThenBody:{  return fields;} @TO@ IfStatement@@if (entity == null) {  return fields;} @AT@ 99289 @LENGTH@ 23
---------INS ReturnStatement@@SimpleName:fields @TO@ Block@@ThenBody:{  return fields;} @AT@ 99294 @LENGTH@ 14
------------INS SimpleName@@fields @TO@ ReturnStatement@@SimpleName:fields @AT@ 99301 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2).listenerThreads(5).build() @TO@ MethodInvocation:new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5).listenerThreads(5).build() @AT@ 3592 @LENGTH@ 104
---UPD MethodInvocation@@new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2).listenerThreads(5).build() @TO@ new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5).listenerThreads(5).build() @AT@ 3599 @LENGTH@ 96
------UPD MethodInvocation@@MethodName:ioThreads:[2] @TO@ MethodName:ioThreads:[5] @AT@ 3599 @LENGTH@ 69
---------UPD NumberLiteral@@2 @TO@ 5 @AT@ 3666 @LENGTH@ 1


UPD TypeDeclaration@@[public, static]AdvancedMSKEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMSKEndpointBuilder, [EndpointProducerBuilder] @AT@ 2275 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2282 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MSKEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MSKEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ MethodInvocation:template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @AT@ 3154 @LENGTH@ 124
---UPD MethodInvocation@@template.requestBody("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @TO@ template.requestBody("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder",message) @AT@ 3154 @LENGTH@ 123
------UPD SimpleName@@MethodName:requestBody:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", message] @TO@ MethodName:requestBody:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder", message] @AT@ 3163 @LENGTH@ 114
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 3175 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 3175 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:registerExtension(MongoComponentVerifierExtension::new) @TO@ MethodDeclaration@@public, voidMethodName:MongoDbComponent, CamelContext context,  @AT@ 1948 @LENGTH@ 56
---INS MethodInvocation@@registerExtension(MongoComponentVerifierExtension::new) @TO@ ExpressionStatement@@MethodInvocation:registerExtension(MongoComponentVerifierExtension::new) @AT@ 1948 @LENGTH@ 55
------INS SimpleName@@MethodName:registerExtension:[MongoComponentVerifierExtension::new] @TO@ MethodInvocation@@registerExtension(MongoComponentVerifierExtension::new) @AT@ 1948 @LENGTH@ 55


UPD ExpressionStatement@@MethodInvocation:headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @TO@ MethodInvocation:headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON)) @AT@ 12038 @LENGTH@ 78
---UPD MethodInvocation@@headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)) @TO@ headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON)) @AT@ 12038 @LENGTH@ 77
------UPD SimpleName@@MethodName:setAccept:[Collections.singletonList(MediaType.APPLICATION_JSON_UTF8)] @TO@ MethodName:setAccept:[Arrays.asList(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON)] @AT@ 12046 @LENGTH@ 69
---------UPD MethodInvocation@@Collections.singletonList(MediaType.APPLICATION_JSON_UTF8) @TO@ Arrays.asList(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @AT@ 12056 @LENGTH@ 58
------------UPD SimpleName@@Name:Collections @TO@ Name:Arrays @AT@ 12056 @LENGTH@ 11
------------UPD SimpleName@@MethodName:singletonList:[MediaType.APPLICATION_JSON_UTF8] @TO@ MethodName:asList:[MediaType.APPLICATION_JSON, APPLICATION_JWK_SET_JSON] @AT@ 12068 @LENGTH@ 46
---------------UPD QualifiedName@@MediaType.APPLICATION_JSON_UTF8 @TO@ MediaType.APPLICATION_JSON @AT@ 12082 @LENGTH@ 31
------------------UPD SimpleName@@APPLICATION_JSON_UTF8 @TO@ APPLICATION_JSON @AT@ 12092 @LENGTH@ 21
---------------INS SimpleName@@APPLICATION_JWK_SET_JSON @TO@ SimpleName@@MethodName:singletonList:[MediaType.APPLICATION_JSON_UTF8] @AT@ 12230 @LENGTH@ 24


UPD TypeDeclaration@@[public, static]AtomixMultiMapEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AtomixMultiMapEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1511 @LENGTH@ 5534
---DEL Modifier@@static @AT@ 1518 @LENGTH@ 6


UPD TypeDeclaration@@[public]AuthorizationServerConfigurer,  @TO@ [@Deprecated, public]AuthorizationServerConfigurer,  @AT@ 1425 @LENGTH@ 1728
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationServerConfigurer,  @AT@ 1602 @LENGTH@ 11


UPD Block@@ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,true);  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @TO@ ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,false);  if (config == null) {    config=getCamelContext().getRestConfiguration();  }  if (config == null) {    config=getCamelContext().getRestConfiguration(pname,true);  }  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @AT@ 13399 @LENGTH@ 985
---UPD VariableDeclarationStatement@@RestConfiguration config=getCamelContext().getRestConfiguration(pname,true); @TO@ RestConfiguration config=getCamelContext().getRestConfiguration(pname,false); @AT@ 13479 @LENGTH@ 79
------UPD VariableDeclarationFragment@@config=getCamelContext().getRestConfiguration(pname,true) @TO@ config=getCamelContext().getRestConfiguration(pname,false) @AT@ 13497 @LENGTH@ 60
---------INS MethodInvocation@@getCamelContext().getRestConfiguration(pname,false) @TO@ VariableDeclarationFragment@@config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13506 @LENGTH@ 52
------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getRestConfiguration(pname,false) @AT@ 13506 @LENGTH@ 17
------------INS SimpleName@@MethodName:getRestConfiguration:[pname, false] @TO@ MethodInvocation@@getCamelContext().getRestConfiguration(pname,false) @AT@ 13524 @LENGTH@ 34
---------------INS SimpleName@@pname @TO@ SimpleName@@MethodName:getRestConfiguration:[pname, false] @AT@ 13545 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getRestConfiguration:[pname, false] @AT@ 13552 @LENGTH@ 5
---INS IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration();} @TO@ Block@@ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,true);  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @AT@ 13572 @LENGTH@ 102
------INS InfixExpression@@config == null @TO@ IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration();} @AT@ 13576 @LENGTH@ 14
---------INS SimpleName@@config @TO@ InfixExpression@@config == null @AT@ 13576 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@config == null @AT@ 13582 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@config == null @AT@ 13586 @LENGTH@ 4
------INS Block@@ThenBody:{  config=getCamelContext().getRestConfiguration();} @TO@ IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration();} @AT@ 13592 @LENGTH@ 82
---------INS ExpressionStatement@@Assignment:config=getCamelContext().getRestConfiguration() @TO@ Block@@ThenBody:{  config=getCamelContext().getRestConfiguration();} @AT@ 13610 @LENGTH@ 50
------------INS Assignment@@config=getCamelContext().getRestConfiguration() @TO@ ExpressionStatement@@Assignment:config=getCamelContext().getRestConfiguration() @AT@ 13610 @LENGTH@ 49
---------------INS SimpleName@@config @TO@ Assignment@@config=getCamelContext().getRestConfiguration() @AT@ 13610 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@config=getCamelContext().getRestConfiguration() @AT@ 13616 @LENGTH@ 1
---------------INS MethodInvocation@@getCamelContext().getRestConfiguration() @TO@ Assignment@@config=getCamelContext().getRestConfiguration() @AT@ 13619 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getRestConfiguration() @AT@ 13619 @LENGTH@ 17
------------------INS SimpleName@@MethodName:getRestConfiguration:[] @TO@ MethodInvocation@@getCamelContext().getRestConfiguration() @AT@ 13637 @LENGTH@ 22
---INS IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration(pname,true);} @TO@ Block@@ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,true);  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @AT@ 13687 @LENGTH@ 113
------INS InfixExpression@@config == null @TO@ IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration(pname,true);} @AT@ 13691 @LENGTH@ 14
---------INS SimpleName@@config @TO@ InfixExpression@@config == null @AT@ 13691 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@config == null @AT@ 13697 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@config == null @AT@ 13701 @LENGTH@ 4
------INS Block@@ThenBody:{  config=getCamelContext().getRestConfiguration(pname,true);} @TO@ IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration(pname,true);} @AT@ 13707 @LENGTH@ 93
---------INS ExpressionStatement@@Assignment:config=getCamelContext().getRestConfiguration(pname,true) @TO@ Block@@ThenBody:{  config=getCamelContext().getRestConfiguration(pname,true);} @AT@ 13725 @LENGTH@ 61
------------INS Assignment@@config=getCamelContext().getRestConfiguration(pname,true) @TO@ ExpressionStatement@@Assignment:config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13725 @LENGTH@ 60
---------------MOV MethodInvocation@@getCamelContext().getRestConfiguration(pname,true) @TO@ Assignment@@config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13506 @LENGTH@ 51
---------------INS SimpleName@@config @TO@ Assignment@@config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13725 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13731 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]IpAddressMatcherTests,  @AT@ 3417 @LENGTH@ 401
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3417 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3424 @LENGTH@ 4
---INS SimpleName@@MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3429 @LENGTH@ 58
---INS VariableDeclarationStatement@@String ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129"; @TO@ MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3494 @LENGTH@ 67
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129"; @AT@ 3494 @LENGTH@ 6
------INS VariableDeclarationFragment@@ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129" @TO@ VariableDeclarationStatement@@String ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129"; @AT@ 3501 @LENGTH@ 59
---------INS SimpleName@@ipv6AddressWithTooLongMask @TO@ VariableDeclarationFragment@@ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129" @AT@ 3501 @LENGTH@ 26
---------INS StringLiteral@@"fe80::21f:5bff:fe33:bd68/129" @TO@ VariableDeclarationFragment@@ipv6AddressWithTooLongMask="fe80::21f:5bff:fe33:bd68/129" @AT@ 3530 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @TO@ MethodDeclaration@@public, void, MethodName:ipv6RequiredAddressMaskTooLongThenIllegalArgumentException,  @AT@ 3564 @LENGTH@ 251
------INS MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @AT@ 3564 @LENGTH@ 250
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @AT@ 3564 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3653 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @AT@ 3564 @LENGTH@ 70
------------INS LambdaExpression@@() -> new IpAddressMatcher(ipv6AddressWithTooLongMask) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)] @AT@ 3579 @LENGTH@ 54
---------------INS ClassInstanceCreation@@IpAddressMatcher[ipv6AddressWithTooLongMask] @TO@ LambdaExpression@@() -> new IpAddressMatcher(ipv6AddressWithTooLongMask) @AT@ 3585 @LENGTH@ 48
------------------INS New@@new @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv6AddressWithTooLongMask] @AT@ 3585 @LENGTH@ 3
------------------INS SimpleType@@IpAddressMatcher @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv6AddressWithTooLongMask] @AT@ 3589 @LENGTH@ 16
------------------INS SimpleName@@ipv6AddressWithTooLongMask @TO@ ClassInstanceCreation@@IpAddressMatcher[ipv6AddressWithTooLongMask] @AT@ 3606 @LENGTH@ 26
---------INS SimpleName@@MethodName:hasMessage:[String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)] @TO@ MethodInvocation@@assertThatCode(() -> new IpAddressMatcher(ipv6AddressWithTooLongMask)).isInstanceOf(IllegalArgumentException.class).hasMessage(String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)) @AT@ 3690 @LENGTH@ 124
------------INS MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129) @TO@ SimpleName@@MethodName:hasMessage:[String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129)] @AT@ 3701 @LENGTH@ 112
---------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129) @AT@ 3701 @LENGTH@ 6
---------------INS SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "fe80::21f:5bff:fe33:bd68", 129] @TO@ MethodInvocation@@String.format("IP address %s is too short for bitmask of " + "length %d","fe80::21f:5bff:fe33:bd68",129) @AT@ 3708 @LENGTH@ 105
------------------INS InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "fe80::21f:5bff:fe33:bd68", 129] @AT@ 3715 @LENGTH@ 64
---------------------INS StringLiteral@@"IP address %s is too short for bitmask of " @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3715 @LENGTH@ 44
---------------------INS Operator@@+ @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3759 @LENGTH@ 1
---------------------INS StringLiteral@@"length %d" @TO@ InfixExpression@@"IP address %s is too short for bitmask of " + "length %d" @AT@ 3768 @LENGTH@ 11
------------------INS StringLiteral@@"fe80::21f:5bff:fe33:bd68" @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "fe80::21f:5bff:fe33:bd68", 129] @AT@ 3781 @LENGTH@ 26
------------------INS NumberLiteral@@129 @TO@ SimpleName@@MethodName:format:["IP address %s is too short for bitmask of " + "length %d", "fe80::21f:5bff:fe33:bd68", 129] @AT@ 3809 @LENGTH@ 3


UPD MethodDeclaration@@public, Access, MethodName:anyRequest,  @TO@ public, Access, MethodName:anyExchange,  @AT@ 9844 @LENGTH@ 90
---UPD SimpleName@@MethodName:anyRequest @TO@ MethodName:anyExchange @AT@ 9858 @LENGTH@ 10


UPD VariableDeclarationStatement@@JsonNode collectionInfoRoot=null; @TO@ JsonNode collectionInfoRoot; @AT@ 2439 @LENGTH@ 35
---UPD VariableDeclarationFragment@@collectionInfoRoot=null @TO@ collectionInfoRoot @AT@ 2448 @LENGTH@ 25
------DEL NullLiteral@@null @AT@ 2469 @LENGTH@ 4


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedSignatureMethodException, RuntimeException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnsupportedSignatureMethodException, RuntimeException @AT@ 689 @LENGTH@ 185
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedSignatureMethodException, RuntimeException @AT@ 938 @LENGTH@ 11


UPD TypeDeclaration@@[public]DefaultAuthenticationHandler, [OAuthAuthenticationHandler] @TO@ [@Deprecated, public]DefaultAuthenticationHandler, [OAuthAuthenticationHandler] @AT@ 395 @LENGTH@ 1375
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultAuthenticationHandler, [OAuthAuthenticationHandler] @AT@ 616 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @TO@ MethodDeclaration@@public, static, Map<String,Converter<Object,?>>, MethodName:createDefaultClaimTypeConverters,  @AT@ 5096 @LENGTH@ 66
---INS MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @TO@ ExpressionStatement@@MethodInvocation:claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5096 @LENGTH@ 65
------INS SimpleName@@Name:claimTypeConverters @TO@ MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5096 @LENGTH@ 19
------INS SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @TO@ MethodInvocation@@claimTypeConverters.put(IdTokenClaimNames.NONCE,stringConverter) @AT@ 5116 @LENGTH@ 45
---------INS QualifiedName@@IdTokenClaimNames.NONCE @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @AT@ 5120 @LENGTH@ 23
------------INS SimpleName@@IdTokenClaimNames @TO@ QualifiedName@@IdTokenClaimNames.NONCE @AT@ 5120 @LENGTH@ 17
------------INS SimpleName@@NONCE @TO@ QualifiedName@@IdTokenClaimNames.NONCE @AT@ 5138 @LENGTH@ 5
---------INS SimpleName@@stringConverter @TO@ SimpleName@@MethodName:put:[IdTokenClaimNames.NONCE, stringConverter] @AT@ 5145 @LENGTH@ 15


UPD TypeDeclaration@@[public]Jackson2JsonParser, [JsonParser] @TO@ [@Deprecated, public]Jackson2JsonParser, [JsonParser] @AT@ 777 @LENGTH@ 567
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]Jackson2JsonParser, [JsonParser] @AT@ 955 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]GoogleBigQuerySQLEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GoogleBigQuerySQLEndpointBuilder, [EndpointProducerBuilder] @AT@ 1436 @LENGTH@ 1938
---DEL Modifier@@static @AT@ 1443 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]RedirectMismatchException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]RedirectMismatchException, ClientAuthenticationException @AT@ 95 @LENGTH@ 348
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]RedirectMismatchException, ClientAuthenticationException @AT@ 301 @LENGTH@ 11


UPD IfStatement@@if (!isPossibleAuthenticationFailureFatal()) {  try {    ApplicationContext context=getApplicationContext();    if (context != null) {      Properties properties=context.getBean("spring.amqp.global.properties",Properties.class);      String possibleAuthenticationFailureFatalProperty=properties.getProperty("mlc.possible.authentication.failure.fatal");      if (StringUtils.hasText(possibleAuthenticationFailureFatalProperty)) {        setPossibleAuthenticationFailureFatal(Boolean.parseBoolean(possibleAuthenticationFailureFatalProperty));      }    }  } catch (  BeansException be) {    logger.debug("No global properties bean");  }} @TO@ if (!isPossibleAuthenticationFailureFatalSet()) {  try {    ApplicationContext context=getApplicationContext();    if (context != null) {      Properties properties=context.getBean("spring.amqp.global.properties",Properties.class);      String possibleAuthenticationFailureFatalProperty=properties.getProperty("mlc.possible.authentication.failure.fatal");      if (StringUtils.hasText(possibleAuthenticationFailureFatalProperty)) {        setPossibleAuthenticationFailureFatal(Boolean.parseBoolean(possibleAuthenticationFailureFatalProperty));      }    }  } catch (  BeansException be) {    logger.debug("No global properties bean");  }} @AT@ 62284 @LENGTH@ 671
---UPD PrefixExpression@@!isPossibleAuthenticationFailureFatal() @TO@ !isPossibleAuthenticationFailureFatalSet() @AT@ 62288 @LENGTH@ 39
------UPD MethodInvocation@@MethodName:isPossibleAuthenticationFailureFatal:[] @TO@ MethodName:isPossibleAuthenticationFailureFatalSet:[] @AT@ 62289 @LENGTH@ 38


UPD TypeDeclaration@@[public]DefaultOAuthURLStreamHandlerFactory, [OAuthURLStreamHandlerFactory] @TO@ [@Deprecated, public]DefaultOAuthURLStreamHandlerFactory, [OAuthURLStreamHandlerFactory] @AT@ 1031 @LENGTH@ 770
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuthURLStreamHandlerFactory, [OAuthURLStreamHandlerFactory] @AT@ 1252 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]IgniteMessagingSendMode,  @TO@ [static]IgniteMessagingSendMode,  @AT@ 25281 @LENGTH@ 78
---DEL Modifier@@public @AT@ 25281 @LENGTH@ 6


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.23.0",scheme="corda",title="corda",syntax="corda:url",label="corda,blockchain"), public]CordaEndpoint, DefaultEndpoint @TO@ [@UriEndpoint(firstVersion="2.23.0",scheme="corda",title="corda",syntax="corda:configuration",label="corda,blockchain"), public]CordaEndpoint, DefaultEndpoint @AT@ 1442 @LENGTH@ 2304
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="2.23.0",scheme="corda",title="corda",syntax="corda:url",label="corda,blockchain") @TO@ @UriEndpoint(firstVersion="2.23.0",scheme="corda",title="corda",syntax="corda:configuration",label="corda,blockchain") @AT@ 1442 @LENGTH@ 122


UPD TypeDeclaration@@[public]Signer, [AlgorithmMetadata] @TO@ [@Deprecated, public]Signer, [AlgorithmMetadata] @AT@ 754 @LENGTH@ 81
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]Signer, [AlgorithmMetadata] @AT@ 932 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(mongoDbFactory()) @TO@ MethodDeclaration@@public, MappingMongoConverter, MethodName:mappingMongoConverter, Exception,  @AT@ 4243 @LENGTH@ 53
---INS MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4243 @LENGTH@ 52
------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4243 @LENGTH@ 9
------INS SimpleName@@MethodName:setCodecRegistryProvider:[mongoDbFactory()] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(mongoDbFactory()) @AT@ 4253 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:mongoDbFactory:[] @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[mongoDbFactory()] @AT@ 4278 @LENGTH@ 16


INS IfStatement@@if (info == null || info.getValue() < 0) {  return null;} @TO@ MethodDeclaration@@public, Duration, MethodName:getTimeout,  @AT@ 6192 @LENGTH@ 93
---INS InfixExpression@@info == null || info.getValue() < 0 @TO@ IfStatement@@if (info == null || info.getValue() < 0) {  return null;} @AT@ 6196 @LENGTH@ 35
------INS InfixExpression@@info == null @TO@ InfixExpression@@info == null || info.getValue() < 0 @AT@ 6196 @LENGTH@ 12
---------INS SimpleName@@info @TO@ InfixExpression@@info == null @AT@ 6196 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@info == null @AT@ 6200 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@info == null @AT@ 6204 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@info == null || info.getValue() < 0 @AT@ 6208 @LENGTH@ 2
------INS InfixExpression@@info.getValue() < 0 @TO@ InfixExpression@@info == null || info.getValue() < 0 @AT@ 6212 @LENGTH@ 19
---------INS MethodInvocation@@info.getValue() @TO@ InfixExpression@@info.getValue() < 0 @AT@ 6212 @LENGTH@ 15
------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getValue() @AT@ 6212 @LENGTH@ 4
------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@info.getValue() @AT@ 6217 @LENGTH@ 10
---------INS Operator@@< @TO@ InfixExpression@@info.getValue() < 0 @AT@ 6227 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ InfixExpression@@info.getValue() < 0 @AT@ 6230 @LENGTH@ 1
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (info == null || info.getValue() < 0) {  return null;} @AT@ 6233 @LENGTH@ 52
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 6255 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 6262 @LENGTH@ 4


UPD VariableDeclarationStatement@@Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ Task<?> currTask=(Task<?>)nd; @AT@ 42501 @LENGTH@ 74
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 42501 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 42530 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 42541 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 42542 @LENGTH@ 28


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1387 @LENGTH@ 973
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1394 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1399 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]ECSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ECSEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


INS MethodDeclaration@@PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @TO@ TypeDeclaration@@[public]PersistentPropertyPaths, [Streamable<PersistentPropertyPath<P>>] @AT@ 2033 @LENGTH@ 57
---INS ParameterizedType@@PersistentPropertyPaths<T,P> @TO@ MethodDeclaration@@PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 2003 @LENGTH@ 29
------INS SimpleType@@PersistentPropertyPaths @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 2003 @LENGTH@ 23
------INS SimpleType@@T @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 2027 @LENGTH@ 1
------INS SimpleType@@P @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 2030 @LENGTH@ 1
---INS SimpleName@@MethodName:dropPathIfSegmentMatches @TO@ MethodDeclaration@@PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 2033 @LENGTH@ 24
---INS SingleVariableDeclaration@@Predicate<? super P> predicate @TO@ MethodDeclaration@@PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 2058 @LENGTH@ 30
------INS ParameterizedType@@Predicate<? super P> @TO@ SingleVariableDeclaration@@Predicate<? super P> predicate @AT@ 2058 @LENGTH@ 20
---------INS SimpleType@@Predicate @TO@ ParameterizedType@@Predicate<? super P> @AT@ 2058 @LENGTH@ 9
---------INS WildcardType@@? @TO@ ParameterizedType@@Predicate<? super P> @AT@ 2068 @LENGTH@ 9
------INS SimpleName@@predicate @TO@ SingleVariableDeclaration@@Predicate<? super P> predicate @AT@ 2079 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @TO@ TypeDeclaration@@[public]StrictHttpFirewallTests,  @AT@ 19658 @LENGTH@ 303
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19658 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19665 @LENGTH@ 4
---INS SimpleName@@MethodName:getFirewalledRequestWhenTrustedDomainThenNoException @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19670 @LENGTH@ 52
---INS ExpressionStatement@@MethodInvocation:this.request.addHeader("Host","example.org") @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19729 @LENGTH@ 46
------INS MethodInvocation@@this.request.addHeader("Host","example.org") @TO@ ExpressionStatement@@MethodInvocation:this.request.addHeader("Host","example.org") @AT@ 19729 @LENGTH@ 45
---------INS FieldAccess@@this.request @TO@ MethodInvocation@@this.request.addHeader("Host","example.org") @AT@ 19729 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 19729 @LENGTH@ 4
------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 19734 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Host", "example.org"] @TO@ MethodInvocation@@this.request.addHeader("Host","example.org") @AT@ 19742 @LENGTH@ 32
------------INS StringLiteral@@"Host" @TO@ SimpleName@@MethodName:addHeader:["Host", "example.org"] @AT@ 19752 @LENGTH@ 6
------------INS StringLiteral@@"example.org" @TO@ SimpleName@@MethodName:addHeader:["Host", "example.org"] @AT@ 19760 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:this.firewall.setAllowedHostnames(hostname -> hostname.equals("example.org")) @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19778 @LENGTH@ 78
------INS MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("example.org")) @TO@ ExpressionStatement@@MethodInvocation:this.firewall.setAllowedHostnames(hostname -> hostname.equals("example.org")) @AT@ 19778 @LENGTH@ 77
---------INS FieldAccess@@this.firewall @TO@ MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("example.org")) @AT@ 19778 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ FieldAccess@@this.firewall @AT@ 19778 @LENGTH@ 4
------------INS SimpleName@@firewall @TO@ FieldAccess@@this.firewall @AT@ 19783 @LENGTH@ 8
---------INS SimpleName@@MethodName:setAllowedHostnames:[hostname -> hostname.equals("example.org")] @TO@ MethodInvocation@@this.firewall.setAllowedHostnames(hostname -> hostname.equals("example.org")) @AT@ 19792 @LENGTH@ 63
------------INS LambdaExpression@@hostname -> hostname.equals("example.org") @TO@ SimpleName@@MethodName:setAllowedHostnames:[hostname -> hostname.equals("example.org")] @AT@ 19812 @LENGTH@ 42
---------------INS VariableDeclarationFragment@@hostname @TO@ LambdaExpression@@hostname -> hostname.equals("example.org") @AT@ 19812 @LENGTH@ 8
------------------INS SimpleName@@hostname @TO@ VariableDeclarationFragment@@hostname @AT@ 19812 @LENGTH@ 8
---------------INS MethodInvocation@@hostname.equals("example.org") @TO@ LambdaExpression@@hostname -> hostname.equals("example.org") @AT@ 19824 @LENGTH@ 30
------------------INS SimpleName@@Name:hostname @TO@ MethodInvocation@@hostname.equals("example.org") @AT@ 19824 @LENGTH@ 8
------------------INS SimpleName@@MethodName:equals:["example.org"] @TO@ MethodInvocation@@hostname.equals("example.org") @AT@ 19833 @LENGTH@ 21
---------------------INS StringLiteral@@"example.org" @TO@ SimpleName@@MethodName:equals:["example.org"] @AT@ 19840 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.firewall.getFirewalledRequest(this.request)).doesNotThrowAnyException() @TO@ MethodDeclaration@@public, void, MethodName:getFirewalledRequestWhenTrustedDomainThenNoException,  @AT@ 19860 @LENGTH@ 98
------INS MethodInvocation@@assertThatCode(() -> this.firewall.getFirewalledRequest(this.request)).doesNotThrowAnyException() @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.firewall.getFirewalledRequest(this.request)).doesNotThrowAnyException() @AT@ 19860 @LENGTH@ 97
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.firewall.getFirewalledRequest(this.request)] @TO@ MethodInvocation@@assertThatCode(() -> this.firewall.getFirewalledRequest(this.request)).doesNotThrowAnyException() @AT@ 19860 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.firewall.getFirewalledRequest(this.request) @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.firewall.getFirewalledRequest(this.request)] @AT@ 19875 @LENGTH@ 54
---------------INS MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @TO@ LambdaExpression@@() -> this.firewall.getFirewalledRequest(this.request) @AT@ 19881 @LENGTH@ 48
------------------INS FieldAccess@@this.firewall @TO@ MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @AT@ 19881 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.firewall @AT@ 19881 @LENGTH@ 4
---------------------INS SimpleName@@firewall @TO@ FieldAccess@@this.firewall @AT@ 19886 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getFirewalledRequest:[this.request] @TO@ MethodInvocation@@this.firewall.getFirewalledRequest(this.request) @AT@ 19895 @LENGTH@ 34
---------------------INS FieldAccess@@this.request @TO@ SimpleName@@MethodName:getFirewalledRequest:[this.request] @AT@ 19916 @LENGTH@ 12
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.request @AT@ 19916 @LENGTH@ 4
------------------------INS SimpleName@@request @TO@ FieldAccess@@this.request @AT@ 19921 @LENGTH@ 7
---------INS SimpleName@@MethodName:doesNotThrowAnyException:[] @TO@ MethodInvocation@@assertThatCode(() -> this.firewall.getFirewalledRequest(this.request)).doesNotThrowAnyException() @AT@ 19931 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @TO@ TypeDeclaration@@[@Metadata(label="configuration"), @XmlRootElement(name="configuration"), @XmlAccessorType(XmlAccessType.FIELD), public]ConfigurationOptions,  @AT@ 1967 @LENGTH@ 121
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @AT@ 1967 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @AT@ 1974 @LENGTH@ 4
---INS SimpleName@@MethodName:setGlobalOptions @TO@ MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @AT@ 1979 @LENGTH@ 16
---INS SingleVariableDeclaration@@List<ConfigurationOption> globalOptions @TO@ MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @AT@ 1996 @LENGTH@ 39
------INS ParameterizedType@@List<ConfigurationOption> @TO@ SingleVariableDeclaration@@List<ConfigurationOption> globalOptions @AT@ 1996 @LENGTH@ 25
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ConfigurationOption> @AT@ 1996 @LENGTH@ 4
---------INS SimpleType@@ConfigurationOption @TO@ ParameterizedType@@List<ConfigurationOption> @AT@ 2001 @LENGTH@ 19
------INS SimpleName@@globalOptions @TO@ SingleVariableDeclaration@@List<ConfigurationOption> globalOptions @AT@ 2022 @LENGTH@ 13
---INS ExpressionStatement@@Assignment:this.globalOptions=globalOptions @TO@ MethodDeclaration@@public, void, MethodName:setGlobalOptions, List<ConfigurationOption> globalOptions,  @AT@ 2047 @LENGTH@ 35
------INS Assignment@@this.globalOptions=globalOptions @TO@ ExpressionStatement@@Assignment:this.globalOptions=globalOptions @AT@ 2047 @LENGTH@ 34
---------INS FieldAccess@@this.globalOptions @TO@ Assignment@@this.globalOptions=globalOptions @AT@ 2047 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.globalOptions @AT@ 2047 @LENGTH@ 4
------------INS SimpleName@@globalOptions @TO@ FieldAccess@@this.globalOptions @AT@ 2052 @LENGTH@ 13
---------INS Operator@@= @TO@ Assignment@@this.globalOptions=globalOptions @AT@ 2065 @LENGTH@ 1
---------INS SimpleName@@globalOptions @TO@ Assignment@@this.globalOptions=globalOptions @AT@ 2068 @LENGTH@ 13


UPD EnumDeclaration@@[public, static]ReadConsistency,  @TO@ [static]ReadConsistency,  @AT@ 43647 @LENGTH@ 91
---DEL Modifier@@public @AT@ 43647 @LENGTH@ 6


UPD Block@@ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,false);  if (config == null) {    config=getCamelContext().getRestConfiguration();  }  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @TO@ ThenBody:{  log.debug("Using RestProducerFactory: {}",factory);  RestConfiguration config=getCamelContext().getRestConfiguration(pname,true);  Producer producer;  if (apiDocFactory != null) {    parameters.put("restProducerFactory",factory);    producer=apiDocFactory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  } else {    producer=factory.createProducer(getCamelContext(),host,method,path,uriTemplate,queryParameters,consumes,produces,config,parameters);  }  RestProducer answer=new RestProducer(this,producer,config);  answer.setOutType(outType);  answer.setType(inType);  answer.setBindingMode(bindingMode);  return answer;} @AT@ 13399 @LENGTH@ 1164
---UPD VariableDeclarationStatement@@RestConfiguration config=getCamelContext().getRestConfiguration(pname,false); @TO@ RestConfiguration config=getCamelContext().getRestConfiguration(pname,true); @AT@ 13491 @LENGTH@ 80
------UPD VariableDeclarationFragment@@config=getCamelContext().getRestConfiguration(pname,false) @TO@ config=getCamelContext().getRestConfiguration(pname,true) @AT@ 13509 @LENGTH@ 61
---------UPD MethodInvocation@@getCamelContext().getRestConfiguration(pname,false) @TO@ getCamelContext().getRestConfiguration(pname,true) @AT@ 13518 @LENGTH@ 52
------------UPD SimpleName@@MethodName:getRestConfiguration:[pname, false] @TO@ MethodName:getRestConfiguration:[pname, true] @AT@ 13536 @LENGTH@ 34
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 13564 @LENGTH@ 5
---DEL IfStatement@@if (config == null) {  config=getCamelContext().getRestConfiguration();} @AT@ 13584 @LENGTH@ 141
------DEL InfixExpression@@config == null @AT@ 13588 @LENGTH@ 14
---------DEL SimpleName@@config @AT@ 13588 @LENGTH@ 6
---------DEL Operator@@== @AT@ 13594 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 13598 @LENGTH@ 4
------DEL Block@@ThenBody:{  config=getCamelContext().getRestConfiguration();} @AT@ 13604 @LENGTH@ 121
---------DEL ExpressionStatement@@Assignment:config=getCamelContext().getRestConfiguration() @AT@ 13661 @LENGTH@ 50
------------DEL Assignment@@config=getCamelContext().getRestConfiguration() @AT@ 13661 @LENGTH@ 49
---------------DEL SimpleName@@config @AT@ 13661 @LENGTH@ 6
---------------DEL Operator@@= @AT@ 13667 @LENGTH@ 1
---------------DEL MethodInvocation@@getCamelContext().getRestConfiguration() @AT@ 13670 @LENGTH@ 40
------------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 13670 @LENGTH@ 17
------------------DEL SimpleName@@MethodName:getRestConfiguration:[] @AT@ 13688 @LENGTH@ 22


UPD TypeDeclaration@@[public]OAuthProviderToken, [Serializable] @TO@ [@Deprecated, public]OAuthProviderToken, [Serializable] @AT@ 717 @LENGTH@ 849
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProviderToken, [Serializable] @AT@ 938 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedLdifEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLdifEndpointBuilder, [EndpointProducerBuilder] @AT@ 2259 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 2266 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]Action,  @TO@ [static]Action,  @AT@ 14689 @LENGTH@ 110
---DEL Modifier@@public @AT@ 14689 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]BeanValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]BeanValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 1460 @LENGTH@ 4410
---DEL Modifier@@static @AT@ 1467 @LENGTH@ 6


INS IfStatement@@if (statistics == null) {  return null;} @TO@ MethodDeclaration@@public, String, MethodName:getUserLevelStatistics,  @AT@ 1965 @LENGTH@ 50
---INS InfixExpression@@statistics == null @TO@ IfStatement@@if (statistics == null) {  return null;} @AT@ 1969 @LENGTH@ 18
------INS SimpleName@@statistics @TO@ InfixExpression@@statistics == null @AT@ 1969 @LENGTH@ 10
------INS Operator@@== @TO@ InfixExpression@@statistics == null @AT@ 1979 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@statistics == null @AT@ 1983 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (statistics == null) {  return null;} @AT@ 1989 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1997 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2004 @LENGTH@ 4


UPD MethodDeclaration@@private, static, MappingMongoConverter, MethodName:getDefaultMongoConverter,  @TO@ private, MappingMongoConverter, MethodName:getDefaultMongoConverter,  @AT@ 113869 @LENGTH@ 514
---DEL Modifier@@static @AT@ 113877 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(this.mongoDatabaseFactory) @TO@ MethodDeclaration@@private, static, MappingMongoConverter, MethodName:getDefaultMongoConverter,  @AT@ 114321 @LENGTH@ 62
------INS MethodInvocation@@converter.setCodecRegistryProvider(this.mongoDatabaseFactory) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(this.mongoDatabaseFactory) @AT@ 114321 @LENGTH@ 61
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(this.mongoDatabaseFactory) @AT@ 114321 @LENGTH@ 9
---------INS SimpleName@@MethodName:setCodecRegistryProvider:[this.mongoDatabaseFactory] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(this.mongoDatabaseFactory) @AT@ 114331 @LENGTH@ 51
------------INS FieldAccess@@this.mongoDatabaseFactory @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[this.mongoDatabaseFactory] @AT@ 114356 @LENGTH@ 25
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.mongoDatabaseFactory @AT@ 114356 @LENGTH@ 4
---------------INS SimpleName@@mongoDatabaseFactory @TO@ FieldAccess@@this.mongoDatabaseFactory @AT@ 114361 @LENGTH@ 20


UPD TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @TO@ [@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration, public, static]CustomMetadataSourceBeanProxyEnabledConfig, GlobalMethodSecurityConfiguration @AT@ 17686 @LENGTH@ 196
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 17738 @LENGTH@ 40
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17745 @LENGTH@ 14
---UPD SimpleName@@ClassName:CustomMetadataSourceProxylessConfig @TO@ ClassName:CustomMetadataSourceBeanProxyEnabledConfig @AT@ 17800 @LENGTH@ 35


INS MethodDeclaration@@static, RedisSerializer<byte[]>, MethodName:raw,  @TO@ TypeDeclaration@@[public]RedisSerializer,  @AT@ 3434 @LENGTH@ 79
---INS Modifier@@static @TO@ MethodDeclaration@@static, RedisSerializer<byte[]>, MethodName:raw,  @AT@ 3434 @LENGTH@ 6
---INS ParameterizedType@@RedisSerializer<byte[]> @TO@ MethodDeclaration@@static, RedisSerializer<byte[]>, MethodName:raw,  @AT@ 3441 @LENGTH@ 23
------INS SimpleType@@RedisSerializer @TO@ ParameterizedType@@RedisSerializer<byte[]> @AT@ 3441 @LENGTH@ 15
------INS ArrayType@@byte[] @TO@ ParameterizedType@@RedisSerializer<byte[]> @AT@ 3457 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 3457 @LENGTH@ 4
---INS SimpleName@@MethodName:raw @TO@ MethodDeclaration@@static, RedisSerializer<byte[]>, MethodName:raw,  @AT@ 3465 @LENGTH@ 3
---INS ReturnStatement@@QualifiedName:RawRedisSerializer.INSTANCE @TO@ MethodDeclaration@@static, RedisSerializer<byte[]>, MethodName:raw,  @AT@ 3475 @LENGTH@ 35
------INS QualifiedName@@RawRedisSerializer.INSTANCE @TO@ ReturnStatement@@QualifiedName:RawRedisSerializer.INSTANCE @AT@ 3482 @LENGTH@ 27
---------INS SimpleName@@RawRedisSerializer @TO@ QualifiedName@@RawRedisSerializer.INSTANCE @AT@ 3482 @LENGTH@ 18
---------INS SimpleName@@INSTANCE @TO@ QualifiedName@@RawRedisSerializer.INSTANCE @AT@ 3501 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:this.matcher.extractUriTemplateVariables(request) @TO@ MethodInvocation:this.matcher.matcher(request).getVariables() @AT@ 4429 @LENGTH@ 57
---UPD MethodInvocation@@this.matcher.extractUriTemplateVariables(request) @TO@ this.matcher.matcher(request).getVariables() @AT@ 4436 @LENGTH@ 49
------DEL SimpleName@@MethodName:extractUriTemplateVariables:[request] @AT@ 4449 @LENGTH@ 36
---------DEL SimpleName@@request @AT@ 4477 @LENGTH@ 7
------INS MethodInvocation@@MethodName:matcher:[request] @TO@ MethodInvocation@@this.matcher.extractUriTemplateVariables(request) @AT@ 4461 @LENGTH@ 29
---------INS SimpleName@@request @TO@ MethodInvocation@@MethodName:matcher:[request] @AT@ 4482 @LENGTH@ 7
------INS SimpleName@@MethodName:getVariables:[] @TO@ MethodInvocation@@this.matcher.extractUriTemplateVariables(request) @AT@ 4491 @LENGTH@ 14


UPD TypeDeclaration@@[public, final]JaxbOAuth2AccessTokenMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2AccessToken,OAuth2AccessToken> @TO@ [@Deprecated, public, final]JaxbOAuth2AccessTokenMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2AccessToken,OAuth2AccessToken> @AT@ 986 @LENGTH@ 1234
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]JaxbOAuth2AccessTokenMessageConverter, AbstractJaxbMessageConverter<JaxbOAuth2AccessToken,OAuth2AccessToken> @AT@ 1172 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedJettyHttpEndpointBuilder9, [EndpointConsumerBuilder] @TO@ [public]AdvancedJettyHttpEndpointBuilder9, [EndpointConsumerBuilder] @AT@ 11237 @LENGTH@ 6256
---DEL Modifier@@static @AT@ 11244 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthTokenLifecycleRegistry,  @TO@ [@Deprecated, public]OAuthTokenLifecycleRegistry,  @AT@ 246 @LENGTH@ 487
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthTokenLifecycleRegistry,  @AT@ 467 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthConsumerProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @TO@ [@Deprecated, public]OAuthConsumerProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 2721 @LENGTH@ 5269
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 2942 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedIgniteQueueEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIgniteQueueEndpointBuilder, [EndpointProducerBuilder] @AT@ 4157 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 4164 @LENGTH@ 6


UPD MethodDeclaration@@default, XmlSignatureEndpointBuilder, MethodName:xmlSignature, String path,  @TO@ default, XmlSignatureEndpointBuilder, MethodName:xmlsecurity, String path,  @AT@ 44848 @LENGTH@ 417
---UPD SimpleName@@MethodName:xmlSignature @TO@ MethodName:xmlsecurity @AT@ 44884 @LENGTH@ 12


UPD TypeDeclaration@@[public]ResourceOwnerPasswordTokenGranter, AbstractTokenGranter @TO@ [@Deprecated, public]ResourceOwnerPasswordTokenGranter, AbstractTokenGranter @AT@ 1904 @LENGTH@ 2195
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordTokenGranter, AbstractTokenGranter @AT@ 2082 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(3) @TO@ MethodInvocation:mock.expectedMessageCount(4) @AT@ 2375 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(3) @TO@ mock.expectedMessageCount(4) @AT@ 2375 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[3] @TO@ MethodName:expectedMessageCount:[4] @AT@ 2380 @LENGTH@ 23
---------UPD NumberLiteral@@3 @TO@ 4 @AT@ 2401 @LENGTH@ 1


UPD TypeDeclaration@@[@FrameworkEndpoint, public]CheckTokenEndpoint,  @TO@ [@FrameworkEndpoint, @Deprecated, public]CheckTokenEndpoint,  @AT@ 2078 @LENGTH@ 2442
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]CheckTokenEndpoint,  @AT@ 2274 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthVerifierServices,  @TO@ [@Deprecated, public]OAuthVerifierServices,  @AT@ 135 @LENGTH@ 138
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthVerifierServices,  @AT@ 356 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]GoogleSheetsApiName,  @TO@ [static]GoogleSheetsApiName,  @AT@ 25898 @LENGTH@ 74
---DEL Modifier@@public @AT@ 25898 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:resultProcessor.processResult(new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()),OptionalUnwrappingConverter.INSTANCE) @TO@ MethodInvocation:resultProcessor.processResult(new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()),OptionalUnwrappingConverter.INSTANCE) @AT@ 2021 @LENGTH@ 234
---UPD MethodInvocation@@resultProcessor.processResult(new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()),OptionalUnwrappingConverter.INSTANCE) @TO@ resultProcessor.processResult(new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()),OptionalUnwrappingConverter.INSTANCE) @AT@ 2028 @LENGTH@ 226
------UPD SimpleName@@MethodName:processResult:[new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()), OptionalUnwrappingConverter.INSTANCE] @TO@ MethodName:processResult:[new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()), OptionalUnwrappingConverter.INSTANCE] @AT@ 2044 @LENGTH@ 210
---------UPD MethodInvocation@@new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionQuery()) @TO@ new Neo4jQueryExecution.DefaultQueryExecution(neo4jClient).execute(prepareQuery(resultProcessor,parameterAccessor),queryMethod.isCollectionLikeQuery()) @AT@ 2058 @LENGTH@ 154
------------UPD SimpleName@@MethodName:execute:[prepareQuery(resultProcessor,parameterAccessor), queryMethod.isCollectionQuery()] @TO@ MethodName:execute:[prepareQuery(resultProcessor,parameterAccessor), queryMethod.isCollectionLikeQuery()] @AT@ 2122 @LENGTH@ 90
---------------UPD MethodInvocation@@queryMethod.isCollectionQuery() @TO@ queryMethod.isCollectionLikeQuery() @AT@ 2180 @LENGTH@ 31
------------------UPD SimpleName@@MethodName:isCollectionQuery:[] @TO@ MethodName:isCollectionLikeQuery:[] @AT@ 2192 @LENGTH@ 19


UPD TypeDeclaration@@[public, static]AdvancedGangliaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGangliaEndpointBuilder, [EndpointProducerBuilder] @AT@ 9528 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 9535 @LENGTH@ 6


UPD IfStatement@@if (this.httpBasic != null) {  this.httpBasic.authenticationManager(this.authenticationManager);  this.httpBasic.configure(this);} @TO@ if (this.httpBasic != null) {  if (this.httpBasic.authenticationManager == null) {    this.httpBasic.authenticationManager(this.authenticationManager);  }  this.httpBasic.configure(this);} @AT@ 67925 @LENGTH@ 137
---UPD Block@@ThenBody:{  this.httpBasic.authenticationManager(this.authenticationManager);  this.httpBasic.configure(this);} @TO@ ThenBody:{  if (this.httpBasic.authenticationManager == null) {    this.httpBasic.authenticationManager(this.authenticationManager);  }  this.httpBasic.configure(this);} @AT@ 67953 @LENGTH@ 109
------INS IfStatement@@if (this.httpBasic.authenticationManager == null) {  this.httpBasic.authenticationManager(this.authenticationManager);} @TO@ Block@@ThenBody:{  this.httpBasic.authenticationManager(this.authenticationManager);  this.httpBasic.configure(this);} @AT@ 67958 @LENGTH@ 126
---------INS InfixExpression@@this.httpBasic.authenticationManager == null @TO@ IfStatement@@if (this.httpBasic.authenticationManager == null) {  this.httpBasic.authenticationManager(this.authenticationManager);} @AT@ 67962 @LENGTH@ 44
------------INS FieldAccess@@this.httpBasic.authenticationManager @TO@ InfixExpression@@this.httpBasic.authenticationManager == null @AT@ 67962 @LENGTH@ 36
---------------INS FieldAccess@@this.httpBasic @TO@ FieldAccess@@this.httpBasic.authenticationManager @AT@ 67962 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.httpBasic @AT@ 67962 @LENGTH@ 4
------------------INS SimpleName@@httpBasic @TO@ FieldAccess@@this.httpBasic @AT@ 67967 @LENGTH@ 9
---------------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.httpBasic.authenticationManager @AT@ 67977 @LENGTH@ 21
------------INS Operator@@== @TO@ InfixExpression@@this.httpBasic.authenticationManager == null @AT@ 67998 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.httpBasic.authenticationManager == null @AT@ 68002 @LENGTH@ 4
---------INS Block@@ThenBody:{  this.httpBasic.authenticationManager(this.authenticationManager);} @TO@ IfStatement@@if (this.httpBasic.authenticationManager == null) {  this.httpBasic.authenticationManager(this.authenticationManager);} @AT@ 68008 @LENGTH@ 76
------------MOV ExpressionStatement@@MethodInvocation:this.httpBasic.authenticationManager(this.authenticationManager) @TO@ Block@@ThenBody:{  this.httpBasic.authenticationManager(this.authenticationManager);} @AT@ 67958 @LENGTH@ 65


MOV FieldDeclaration@@static, final, int, [DEFAULT_INDENT_SIZE=2] @TO@ TypeDeclaration@@[public]XMLConfiguration, BaseHierarchicalConfiguration[FileBasedConfiguration, FileLocatorAware, InputStreamSupport] @AT@ 8778 @LENGTH@ 41


UPD TypeDeclaration@@[public]RsaSigner, [Signer] @TO@ [@Deprecated, public]RsaSigner, [Signer] @AT@ 1025 @LENGTH@ 1341
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RsaSigner, [Signer] @AT@ 1203 @LENGTH@ 11


UPD MethodDeclaration@@default, ControlBusEndpointBuilder, MethodName:controlBus, String path,  @TO@ default, ControlBusEndpointBuilder, MethodName:controlbus, String path,  @AT@ 9057 @LENGTH@ 402
---UPD SimpleName@@MethodName:controlBus @TO@ MethodName:controlbus @AT@ 9091 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:Cypher.unwind(parameter(NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.properties(nameOfIdProperty,property(row,NAME_OF_ID_PARAM))).set(rootNode,property(row,NAME_OF_PROPERTIES_PARAM)).returning(rootNode.internalId()).build() @TO@ MethodInvocation:Cypher.unwind(parameter(NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.properties(nameOfIdProperty,property(row,NAME_OF_ID_PARAM))).set(rootNode,property(row,NAME_OF_PROPERTIES_PARAM)).returning(Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT)).build() @AT@ 8309 @LENGTH@ 266
---UPD MethodInvocation@@Cypher.unwind(parameter(NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.properties(nameOfIdProperty,property(row,NAME_OF_ID_PARAM))).set(rootNode,property(row,NAME_OF_PROPERTIES_PARAM)).returning(rootNode.internalId()).build() @TO@ Cypher.unwind(parameter(NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.properties(nameOfIdProperty,property(row,NAME_OF_ID_PARAM))).set(rootNode,property(row,NAME_OF_PROPERTIES_PARAM)).returning(Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT)).build() @AT@ 8316 @LENGTH@ 258
------UPD MethodInvocation@@MethodName:returning:[rootNode.internalId()] @TO@ MethodName:collect:[rootNode.property(nameOfIdProperty)] @AT@ 8316 @LENGTH@ 245
------INS MethodInvocation@@MethodName:returning:[Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT)] @TO@ MethodInvocation@@Cypher.unwind(parameter(NAME_OF_ENTITY_LIST_PARAM)).as(row).merge(rootNode.properties(nameOfIdProperty,property(row,NAME_OF_ID_PARAM))).set(rootNode,property(row,NAME_OF_PROPERTIES_PARAM)).returning(rootNode.internalId()).build() @AT@ 8316 @LENGTH@ 301
---------INS MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT) @TO@ MethodInvocation@@MethodName:returning:[Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT)] @AT@ 8539 @LENGTH@ 77
------------MOV MethodInvocation@@MethodName:returning:[rootNode.internalId()] @TO@ MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT) @AT@ 8316 @LENGTH@ 245
---------------UPD MethodInvocation@@rootNode.internalId() @TO@ rootNode.property(nameOfIdProperty) @AT@ 8539 @LENGTH@ 21
------------------UPD SimpleName@@MethodName:internalId:[] @TO@ MethodName:property:[nameOfIdProperty] @AT@ 8548 @LENGTH@ 12
---------------------INS SimpleName@@nameOfIdProperty @TO@ SimpleName@@MethodName:internalId:[] @AT@ 8575 @LENGTH@ 16
------------MOV MethodInvocation@@MethodName:returning:[rootNode.internalId()] @TO@ MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT) @AT@ 8316 @LENGTH@ 245
---------------UPD MethodInvocation@@rootNode.internalId() @TO@ rootNode.property(nameOfIdProperty) @AT@ 8539 @LENGTH@ 21
------------------UPD SimpleName@@MethodName:internalId:[] @TO@ MethodName:property:[nameOfIdProperty] @AT@ 8548 @LENGTH@ 12
---------------------INS SimpleName@@nameOfIdProperty @TO@ SimpleName@@MethodName:internalId:[] @AT@ 8575 @LENGTH@ 16
------------INS SimpleName@@Name:Functions @TO@ MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT) @AT@ 8539 @LENGTH@ 9
------------INS SimpleName@@MethodName:as:[NAME_OF_IDS_RESULT] @TO@ MethodInvocation@@Functions.collect(rootNode.property(nameOfIdProperty)).as(NAME_OF_IDS_RESULT) @AT@ 8594 @LENGTH@ 22
---------------INS SimpleName@@NAME_OF_IDS_RESULT @TO@ SimpleName@@MethodName:as:[NAME_OF_IDS_RESULT] @AT@ 8597 @LENGTH@ 18


UPD FieldDeclaration@@private, Scheduler, [scheduler=Schedulers.parallel()] @TO@ private, Scheduler, [scheduler=Schedulers.newParallel("password-encoder")] @AT@ 2439 @LENGTH@ 52
---UPD VariableDeclarationFragment@@scheduler=Schedulers.parallel() @TO@ scheduler=Schedulers.newParallel("password-encoder") @AT@ 2457 @LENGTH@ 33
------UPD MethodInvocation@@Schedulers.parallel() @TO@ Schedulers.newParallel("password-encoder") @AT@ 2469 @LENGTH@ 21
---------UPD SimpleName@@MethodName:parallel:[] @TO@ MethodName:newParallel:["password-encoder"] @AT@ 2480 @LENGTH@ 10
------------INS StringLiteral@@"password-encoder" @TO@ SimpleName@@MethodName:parallel:[] @AT@ 2492 @LENGTH@ 18


UPD MethodDeclaration@@default, EventEndpointBuilder, MethodName:event, String path,  @TO@ default, EventEndpointBuilder, MethodName:springEvent, String path,  @AT@ 15860 @LENGTH@ 369
---UPD SimpleName@@MethodName:event @TO@ MethodName:springEvent @AT@ 15889 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedEjbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedEjbEndpointBuilder, [EndpointProducerBuilder] @AT@ 4042 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 4049 @LENGTH@ 6


UPD Block@@ElseBody:if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @TO@ ElseBody:if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @AT@ 8350 @LENGTH@ 888
---UPD IfStatement@@if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @TO@ if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @AT@ 8350 @LENGTH@ 888
------UPD Block@@ThenBody:{  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);  }} @TO@ ThenBody:{  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);  }} @AT@ 8386 @LENGTH@ 623
---------UPD TryStatement@@try {  Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);  setScheduler(getCamelContext().getInjector().newInstance(clazz));} catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);} @TO@ try {  Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);  setScheduler(getCamelContext().getInjector().newInstance(clazz));} catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);} @AT@ 8473 @LENGTH@ 522
------------UPD CatchClause@@catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);} @TO@ catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);} @AT@ 8777 @LENGTH@ 218
---------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e) @TO@ ClassInstanceCreation:new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e) @AT@ 8832 @LENGTH@ 145
------------------UPD ClassInstanceCreation@@IllegalArgumentException["Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.", e] @TO@ IllegalArgumentException["Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.", e] @AT@ 8838 @LENGTH@ 138
---------------------UPD InfixExpression@@"Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath." @TO@ "Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath." @AT@ 8867 @LENGTH@ 105
------------------------UPD StringLiteral@@" from classpath. Make sure camel-quartz2.jar is on the classpath." @TO@ " from classpath. Make sure camel-quartz.jar is on the classpath." @AT@ 8905 @LENGTH@ 67
---UPD IfStatement@@if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @TO@ if ("quartz".equals(schedulerName)) {  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);  }} else {  setScheduler(CamelContextHelper.mandatoryLookup(getCamelContext(),schedulerName,ScheduledPollConsumerScheduler.class));} @AT@ 8350 @LENGTH@ 888
------UPD Block@@ThenBody:{  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);  }} @TO@ ThenBody:{  try {    Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);    setScheduler(getCamelContext().getInjector().newInstance(clazz));  } catch (  ClassNotFoundException e) {    throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);  }} @AT@ 8386 @LENGTH@ 623
---------UPD TryStatement@@try {  Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);  setScheduler(getCamelContext().getInjector().newInstance(clazz));} catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);} @TO@ try {  Class<? extends ScheduledPollConsumerScheduler> clazz=getCamelContext().getClassResolver().resolveMandatoryClass(QUARTZ_2_SCHEDULER,ScheduledPollConsumerScheduler.class);  setScheduler(getCamelContext().getInjector().newInstance(clazz));} catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);} @AT@ 8473 @LENGTH@ 522
------------UPD CatchClause@@catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e);} @TO@ catch (ClassNotFoundException e) {  throw new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e);} @AT@ 8777 @LENGTH@ 218
---------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.",e) @TO@ ClassInstanceCreation:new IllegalArgumentException("Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.",e) @AT@ 8832 @LENGTH@ 145
------------------UPD ClassInstanceCreation@@IllegalArgumentException["Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath.", e] @TO@ IllegalArgumentException["Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath.", e] @AT@ 8838 @LENGTH@ 138
---------------------UPD InfixExpression@@"Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz2.jar is on the classpath." @TO@ "Cannot load " + QUARTZ_2_SCHEDULER + " from classpath. Make sure camel-quartz.jar is on the classpath." @AT@ 8867 @LENGTH@ 105
------------------------UPD StringLiteral@@" from classpath. Make sure camel-quartz2.jar is on the classpath." @TO@ " from classpath. Make sure camel-quartz.jar is on the classpath." @AT@ 8905 @LENGTH@ 67


UPD TypeDeclaration@@[public]OAuth2ExceptionJackson2Serializer, StdSerializer<OAuth2Exception> @TO@ [@Deprecated, public]OAuth2ExceptionJackson2Serializer, StdSerializer<OAuth2Exception> @AT@ 995 @LENGTH@ 786
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ExceptionJackson2Serializer, StdSerializer<OAuth2Exception> @AT@ 1173 @LENGTH@ 11


INS MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @TO@ TypeDeclaration@@[public, final]ClearSiteDataHeaderWriter, [HeaderWriter] @AT@ 3020 @LENGTH@ 259
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3020 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3028 @LENGTH@ 6
---INS SimpleName@@MethodName:joinQuotes @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3035 @LENGTH@ 10
---INS SingleVariableDeclaration@@String... sources @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3046 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String... sources @AT@ 3046 @LENGTH@ 6
------INS SimpleName@@sources @TO@ SingleVariableDeclaration@@String... sources @AT@ 3056 @LENGTH@ 7
---INS VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3069 @LENGTH@ 39
------INS SimpleType@@StringBuilder @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 3069 @LENGTH@ 13
------INS VariableDeclarationFragment@@sb=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder sb=new StringBuilder(); @AT@ 3083 @LENGTH@ 24
---------INS SimpleName@@sb @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 3083 @LENGTH@ 2
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@sb=new StringBuilder() @AT@ 3088 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 3088 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 3092 @LENGTH@ 13
---INS ForStatement@@for (int i=0; i < sources.length - 1; i++) {  sb.append(quote(sources[i])).append(", ");} @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3111 @LENGTH@ 94
------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < sources.length - 1; i++) {  sb.append(quote(sources[i])).append(", ");} @AT@ 3116 @LENGTH@ 9
---------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3116 @LENGTH@ 3
---------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 3120 @LENGTH@ 5
------------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 3120 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 3124 @LENGTH@ 1
------INS InfixExpression@@i < sources.length - 1 @TO@ ForStatement@@for (int i=0; i < sources.length - 1; i++) {  sb.append(quote(sources[i])).append(", ");} @AT@ 3127 @LENGTH@ 20
---------INS SimpleName@@i @TO@ InfixExpression@@i < sources.length - 1 @AT@ 3127 @LENGTH@ 1
---------INS Operator@@< @TO@ InfixExpression@@i < sources.length - 1 @AT@ 3128 @LENGTH@ 1
---------INS InfixExpression@@sources.length - 1 @TO@ InfixExpression@@i < sources.length - 1 @AT@ 3131 @LENGTH@ 16
------------INS QualifiedName@@sources.length @TO@ InfixExpression@@sources.length - 1 @AT@ 3131 @LENGTH@ 14
---------------INS SimpleName@@sources @TO@ QualifiedName@@sources.length @AT@ 3131 @LENGTH@ 7
---------------INS SimpleName@@length @TO@ QualifiedName@@sources.length @AT@ 3139 @LENGTH@ 6
------------INS Operator@@- @TO@ InfixExpression@@sources.length - 1 @AT@ 3145 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@sources.length - 1 @AT@ 3146 @LENGTH@ 1
------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < sources.length - 1; i++) {  sb.append(quote(sources[i])).append(", ");} @AT@ 3149 @LENGTH@ 3
---------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 3149 @LENGTH@ 1
---------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 3151 @LENGTH@ 2
------INS ExpressionStatement@@MethodInvocation:sb.append(quote(sources[i])).append(", ") @TO@ ForStatement@@for (int i=0; i < sources.length - 1; i++) {  sb.append(quote(sources[i])).append(", ");} @AT@ 3159 @LENGTH@ 42
---------INS MethodInvocation@@sb.append(quote(sources[i])).append(", ") @TO@ ExpressionStatement@@MethodInvocation:sb.append(quote(sources[i])).append(", ") @AT@ 3159 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:append:[quote(sources[i])] @TO@ MethodInvocation@@sb.append(quote(sources[i])).append(", ") @AT@ 3159 @LENGTH@ 28
---------------INS MethodInvocation@@quote(sources[i]) @TO@ MethodInvocation@@MethodName:append:[quote(sources[i])] @AT@ 3169 @LENGTH@ 17
------------------INS SimpleName@@MethodName:quote:[sources[i]] @TO@ MethodInvocation@@quote(sources[i]) @AT@ 3169 @LENGTH@ 17
---------------------INS ArrayAccess@@sources[i] @TO@ SimpleName@@MethodName:quote:[sources[i]] @AT@ 3175 @LENGTH@ 10
------------------------INS SimpleName@@sources @TO@ ArrayAccess@@sources[i] @AT@ 3175 @LENGTH@ 7
------------------------INS SimpleName@@i @TO@ ArrayAccess@@sources[i] @AT@ 3183 @LENGTH@ 1
------------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(quote(sources[i])).append(", ") @AT@ 3159 @LENGTH@ 2
------------INS SimpleName@@MethodName:append:[", "] @TO@ MethodInvocation@@sb.append(quote(sources[i])).append(", ") @AT@ 3188 @LENGTH@ 12
---------------INS StringLiteral@@", " @TO@ SimpleName@@MethodName:append:[", "] @AT@ 3195 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:sb.append(quote(sources[sources.length - 1])) @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3208 @LENGTH@ 44
------INS MethodInvocation@@sb.append(quote(sources[sources.length - 1])) @TO@ ExpressionStatement@@MethodInvocation:sb.append(quote(sources[sources.length - 1])) @AT@ 3208 @LENGTH@ 43
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.append(quote(sources[sources.length - 1])) @AT@ 3208 @LENGTH@ 2
---------INS SimpleName@@MethodName:append:[quote(sources[sources.length - 1])] @TO@ MethodInvocation@@sb.append(quote(sources[sources.length - 1])) @AT@ 3211 @LENGTH@ 40
------------INS MethodInvocation@@quote(sources[sources.length - 1]) @TO@ SimpleName@@MethodName:append:[quote(sources[sources.length - 1])] @AT@ 3218 @LENGTH@ 32
---------------INS SimpleName@@MethodName:quote:[sources[sources.length - 1]] @TO@ MethodInvocation@@quote(sources[sources.length - 1]) @AT@ 3218 @LENGTH@ 32
------------------INS ArrayAccess@@sources[sources.length - 1] @TO@ SimpleName@@MethodName:quote:[sources[sources.length - 1]] @AT@ 3224 @LENGTH@ 25
---------------------INS SimpleName@@sources @TO@ ArrayAccess@@sources[sources.length - 1] @AT@ 3224 @LENGTH@ 7
---------------------INS InfixExpression@@sources.length - 1 @TO@ ArrayAccess@@sources[sources.length - 1] @AT@ 3232 @LENGTH@ 16
------------------------INS QualifiedName@@sources.length @TO@ InfixExpression@@sources.length - 1 @AT@ 3232 @LENGTH@ 14
---------------------------INS SimpleName@@sources @TO@ QualifiedName@@sources.length @AT@ 3232 @LENGTH@ 7
---------------------------INS SimpleName@@length @TO@ QualifiedName@@sources.length @AT@ 3240 @LENGTH@ 6
------------------------INS Operator@@- @TO@ InfixExpression@@sources.length - 1 @AT@ 3246 @LENGTH@ 1
------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@sources.length - 1 @AT@ 3247 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:sb.toString() @TO@ MethodDeclaration@@private, String, MethodName:joinQuotes, String... sources,  @AT@ 3255 @LENGTH@ 21
------INS MethodInvocation@@sb.toString() @TO@ ReturnStatement@@MethodInvocation:sb.toString() @AT@ 3262 @LENGTH@ 13
---------INS SimpleName@@Name:sb @TO@ MethodInvocation@@sb.toString() @AT@ 3262 @LENGTH@ 2
---------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@sb.toString() @AT@ 3265 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:handleResult(new InvocationResult(errorResult,null,null),amqpMessage,channel,message) @TO@ MethodInvocation:handleResult(this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()),amqpMessage,channel,message) @AT@ 5789 @LENGTH@ 91
---UPD MethodInvocation@@handleResult(new InvocationResult(errorResult,null,null),amqpMessage,channel,message) @TO@ handleResult(this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()),amqpMessage,channel,message) @AT@ 5789 @LENGTH@ 90
------UPD SimpleName@@MethodName:handleResult:[new InvocationResult(errorResult,null,null), amqpMessage, channel, message] @TO@ MethodName:handleResult:[this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()), amqpMessage, channel, message] @AT@ 5789 @LENGTH@ 90
---------INS MethodInvocation@@this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()) @TO@ SimpleName@@MethodName:handleResult:[new InvocationResult(errorResult,null,null), amqpMessage, channel, message] @AT@ 5802 @LENGTH@ 77
------------INS FieldAccess@@this.handlerAdapter @TO@ MethodInvocation@@this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()) @AT@ 5802 @LENGTH@ 19
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.handlerAdapter @AT@ 5802 @LENGTH@ 4
---------------INS SimpleName@@handlerAdapter @TO@ FieldAccess@@this.handlerAdapter @AT@ 5807 @LENGTH@ 14
------------INS SimpleName@@MethodName:getInvocationResultFor:[errorResult, message.getPayload()] @TO@ MethodInvocation@@this.handlerAdapter.getInvocationResultFor(errorResult,message.getPayload()) @AT@ 5822 @LENGTH@ 57
---------------INS SimpleName@@errorResult @TO@ SimpleName@@MethodName:getInvocationResultFor:[errorResult, message.getPayload()] @AT@ 5845 @LENGTH@ 11
---------------INS MethodInvocation@@message.getPayload() @TO@ SimpleName@@MethodName:getInvocationResultFor:[errorResult, message.getPayload()] @AT@ 5858 @LENGTH@ 20
------------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getPayload() @AT@ 5858 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPayload:[] @TO@ MethodInvocation@@message.getPayload() @AT@ 5866 @LENGTH@ 12
---------DEL ClassInstanceCreation@@InvocationResult[errorResult, null, null] @AT@ 5802 @LENGTH@ 45
------------DEL New@@new @AT@ 5802 @LENGTH@ 3
------------DEL SimpleType@@InvocationResult @AT@ 5806 @LENGTH@ 16
------------DEL SimpleName@@errorResult @AT@ 5823 @LENGTH@ 11
------------DEL NullLiteral@@null @AT@ 5836 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 5842 @LENGTH@ 4


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2IntrospectionAuthenticationToken(accessToken,claims,authorities) @TO@ ClassInstanceCreation:new OAuth2IntrospectionAuthenticationToken(accessToken,new OAuth2TokenAttributes(claims),authorities) @AT@ 5615 @LENGTH@ 84
---UPD ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[accessToken, claims, authorities] @TO@ OAuth2IntrospectionAuthenticationToken[accessToken, new OAuth2TokenAttributes(claims), authorities] @AT@ 5622 @LENGTH@ 76
------INS ClassInstanceCreation@@OAuth2TokenAttributes[claims] @TO@ ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[accessToken, claims, authorities] @AT@ 5749 @LENGTH@ 33
---------MOV SimpleName@@claims @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 5678 @LENGTH@ 6
---------INS New@@new @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 5749 @LENGTH@ 3
---------INS SimpleType@@OAuth2TokenAttributes @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 5753 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2148 @LENGTH@ 738
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2219 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2219 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2224 @LENGTH@ 28


INS IfStatement@@if (isNotEmpty(kerberosNamedNodes)) {  return Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList());} @TO@ MethodDeclaration@@private, List<String>, MethodName:getKerberosNamedNodeList, Map<String,Object> hdfsSettings,  @AT@ 8367 @LENGTH@ 152
---INS MethodInvocation@@isNotEmpty(kerberosNamedNodes) @TO@ IfStatement@@if (isNotEmpty(kerberosNamedNodes)) {  return Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList());} @AT@ 8371 @LENGTH@ 30
------INS SimpleName@@MethodName:isNotEmpty:[kerberosNamedNodes] @TO@ MethodInvocation@@isNotEmpty(kerberosNamedNodes) @AT@ 8371 @LENGTH@ 30
---------INS SimpleName@@kerberosNamedNodes @TO@ SimpleName@@MethodName:isNotEmpty:[kerberosNamedNodes] @AT@ 8382 @LENGTH@ 18
---INS Block@@ThenBody:{  return Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList());} @TO@ IfStatement@@if (isNotEmpty(kerberosNamedNodes)) {  return Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList());} @AT@ 8403 @LENGTH@ 116
------MOV ReturnStatement@@MethodInvocation:Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList()) @TO@ Block@@ThenBody:{  return Arrays.stream(kerberosNamedNodes.split(",")).distinct().collect(Collectors.toList());} @AT@ 8358 @LENGTH@ 92


UPD TypeDeclaration@@[public]OAuth2RestTemplate, RestTemplate[OAuth2RestOperations] @TO@ [@Deprecated, public]OAuth2RestTemplate, RestTemplate[OAuth2RestOperations] @AT@ 2113 @LENGTH@ 7876
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RestTemplate, RestTemplate[OAuth2RestOperations] @AT@ 2290 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]Action,  @TO@ [static]Action,  @AT@ 45095 @LENGTH@ 81
---DEL Modifier@@public @AT@ 45095 @LENGTH@ 6


UPD MethodDeclaration@@default, SnsEndpointBuilder, MethodName:sns, String path,  @TO@ default, SnsEndpointBuilder, MethodName:awsSns, String path,  @AT@ 13597 @LENGTH@ 350
---UPD SimpleName@@MethodName:sns @TO@ MethodName:awsSns @AT@ 13624 @LENGTH@ 3


INS MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @TO@ TypeDeclaration@@[public, final]AntPathRequestMatcher, [RequestMatcher, RequestVariablesExtractor] @AT@ 6400 @LENGTH@ 129
---INS Modifier@@public @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6400 @LENGTH@ 6
---INS ParameterizedType@@Map<String,String> @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6407 @LENGTH@ 19
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 6407 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 6411 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 6419 @LENGTH@ 6
---INS SimpleName@@MethodName:extractUriTemplateVariables @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6427 @LENGTH@ 27
---INS SingleVariableDeclaration@@HttpServletRequest request @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6455 @LENGTH@ 26
------INS SimpleType@@HttpServletRequest @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 6455 @LENGTH@ 18
------INS SimpleName@@request @TO@ SingleVariableDeclaration@@HttpServletRequest request @AT@ 6474 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:matcher(request).getVariables() @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6487 @LENGTH@ 39
------INS MethodInvocation@@matcher(request).getVariables() @TO@ ReturnStatement@@MethodInvocation:matcher(request).getVariables() @AT@ 6494 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:matcher:[request] @TO@ MethodInvocation@@matcher(request).getVariables() @AT@ 6494 @LENGTH@ 16
------------INS SimpleName@@request @TO@ MethodInvocation@@MethodName:matcher:[request] @AT@ 6502 @LENGTH@ 7
---------INS SimpleName@@MethodName:getVariables:[] @TO@ MethodInvocation@@matcher(request).getVariables() @AT@ 6511 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(reactiveMongoDbFactory()) @TO@ MethodDeclaration@@public, MappingMongoConverter, MethodName:mappingMongoConverter, Exception,  @AT@ 3255 @LENGTH@ 61
---INS MethodInvocation@@converter.setCodecRegistryProvider(reactiveMongoDbFactory()) @TO@ ExpressionStatement@@MethodInvocation:converter.setCodecRegistryProvider(reactiveMongoDbFactory()) @AT@ 3255 @LENGTH@ 60
------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCodecRegistryProvider(reactiveMongoDbFactory()) @AT@ 3255 @LENGTH@ 9
------INS SimpleName@@MethodName:setCodecRegistryProvider:[reactiveMongoDbFactory()] @TO@ MethodInvocation@@converter.setCodecRegistryProvider(reactiveMongoDbFactory()) @AT@ 3265 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:reactiveMongoDbFactory:[] @TO@ SimpleName@@MethodName:setCodecRegistryProvider:[reactiveMongoDbFactory()] @AT@ 3290 @LENGTH@ 24


UPD EnumDeclaration@@[public, static]EndpointMappingType,  @TO@ [static]EndpointMappingType,  @AT@ 43089 @LENGTH@ 129
---DEL Modifier@@public @AT@ 43089 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2263 @LENGTH@ 80
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2263 @LENGTH@ 79
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2263 @LENGTH@ 79
---------INS MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 2274 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 35
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 2300 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2274 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2321 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 2330 @LENGTH@ 10


INS MethodDeclaration@@default, boolean, MethodName:isInternal,  @TO@ TypeDeclaration@@[public]Field,  @AT@ 1350 @LENGTH@ 49
---INS Modifier@@default @TO@ MethodDeclaration@@default, boolean, MethodName:isInternal,  @AT@ 1350 @LENGTH@ 7
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@default, boolean, MethodName:isInternal,  @AT@ 1358 @LENGTH@ 7
---INS SimpleName@@MethodName:isInternal @TO@ MethodDeclaration@@default, boolean, MethodName:isInternal,  @AT@ 1366 @LENGTH@ 10
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@default, boolean, MethodName:isInternal,  @AT@ 1383 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1390 @LENGTH@ 5


UPD TypeDeclaration@@[public]SignatureSecret, [Serializable] @TO@ [@Deprecated, public]SignatureSecret, [Serializable] @AT@ 793 @LENGTH@ 57
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SignatureSecret, [Serializable] @AT@ 1013 @LENGTH@ 11


UPD TypeDeclaration@@[public, final]FormOAuth2ExceptionHttpMessageConverter, [HttpMessageConverter<OAuth2Exception>] @TO@ [@Deprecated, public, final]FormOAuth2ExceptionHttpMessageConverter, [HttpMessageConverter<OAuth2Exception>] @AT@ 1597 @LENGTH@ 1791
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]FormOAuth2ExceptionHttpMessageConverter, [HttpMessageConverter<OAuth2Exception>] @AT@ 1777 @LENGTH@ 11


UPD TypeDeclaration@@[public]FrameworkEndpointHandlerMapping, RequestMappingHandlerMapping @TO@ [@Deprecated, public]FrameworkEndpointHandlerMapping, RequestMappingHandlerMapping @AT@ 1604 @LENGTH@ 4554
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]FrameworkEndpointHandlerMapping, RequestMappingHandlerMapping @AT@ 1781 @LENGTH@ 11


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.23.0",scheme="websocket-jsr356",title="Javax Websocket",syntax="websocket-jsr356:/resourceUri",label="jsr356"), public]JSR356Endpoint, DefaultEndpoint @TO@ [@UriEndpoint(firstVersion="2.23.0",scheme="websocket-jsr356",title="Javax Websocket",syntax="websocket-jsr356:websocketPathOrUri",label="jsr356"), public]JSR356Endpoint, DefaultEndpoint @AT@ 1116 @LENGTH@ 1460
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="2.23.0",scheme="websocket-jsr356",title="Javax Websocket",syntax="websocket-jsr356:/resourceUri",label="jsr356") @TO@ @UriEndpoint(firstVersion="2.23.0",scheme="websocket-jsr356",title="Javax Websocket",syntax="websocket-jsr356:websocketPathOrUri",label="jsr356") @AT@ 1116 @LENGTH@ 153


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InsufficientScopeException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InsufficientScopeException, OAuth2Exception @AT@ 461 @LENGTH@ 544
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InsufficientScopeException, OAuth2Exception @AT@ 666 @LENGTH@ 11


INS TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @SecurityTestExecutionListeners, public]GlobalMethodSecurityConfigurationTests,  @AT@ 17686 @LENGTH@ 196
---INS NormalAnnotation@@@EnableGlobalMethodSecurity(prePostEnabled=true) @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17686 @LENGTH@ 50
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17738 @LENGTH@ 40
---INS Modifier@@public @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17780 @LENGTH@ 6
---INS Modifier@@static @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17787 @LENGTH@ 6
---INS SimpleName@@ClassName:CustomMetadataSourceProxylessConfig @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17800 @LENGTH@ 35
---INS SimpleType@@GlobalMethodSecurityConfiguration @TO@ TypeDeclaration@@[@EnableGlobalMethodSecurity(prePostEnabled=true), @Configuration(proxyBeanMethods=false), public, static]CustomMetadataSourceProxylessConfig, GlobalMethodSecurityConfiguration @AT@ 17844 @LENGTH@ 33


UPD MethodDeclaration@@public, static, String, MethodName:toJson, String name, String displayName, String kind, Boolean required, String type, String defaultValue, String description, Boolean deprecated, String deprecationNote, Boolean secret, String group, String label, boolean enumType, Set<String> enums, boolean oneOfType, Set<String> oneOffTypes, boolean asPredicate, String optionalPrefix, String prefix, boolean multiValue, String configurationClass, String configurtationField,  @TO@ public, static, String, MethodName:toJson, String name, String displayName, String kind, Boolean required, String type, String defaultValue, String description, Boolean deprecated, String deprecationNote, Boolean secret, String group, String label, boolean enumType, Set<String> enums, boolean oneOfType, Set<String> oneOffTypes, boolean asPredicate, String optionalPrefix, String prefix, boolean multiValue, String configurationClass, String configurationField,  @AT@ 1420 @LENGTH@ 5349
---UPD SingleVariableDeclaration@@String configurtationField @TO@ String configurationField @AT@ 1937 @LENGTH@ 26
------UPD SimpleName@@configurtationField @TO@ configurationField @AT@ 1944 @LENGTH@ 19
---UPD IfStatement@@if (!Strings.isNullOrEmpty(configurtationField)) {  sb.append(", \"configurationField\": ");  sb.append(Strings.doubleQuote(configurtationField));} @TO@ if (!Strings.isNullOrEmpty(configurationField)) {  sb.append(", \"configurationField\": ");  sb.append(Strings.doubleQuote(configurationField));} @AT@ 6304 @LENGTH@ 178
------UPD PrefixExpression@@!Strings.isNullOrEmpty(configurtationField) @TO@ !Strings.isNullOrEmpty(configurationField) @AT@ 6308 @LENGTH@ 43
---------UPD MethodInvocation@@Strings.isNullOrEmpty(configurtationField) @TO@ Strings.isNullOrEmpty(configurationField) @AT@ 6309 @LENGTH@ 42
------------UPD SimpleName@@MethodName:isNullOrEmpty:[configurtationField] @TO@ MethodName:isNullOrEmpty:[configurationField] @AT@ 6317 @LENGTH@ 34
---------------UPD SimpleName@@configurtationField @TO@ configurationField @AT@ 6331 @LENGTH@ 19
------UPD Block@@ThenBody:{  sb.append(", \"configurationField\": ");  sb.append(Strings.doubleQuote(configurtationField));} @TO@ ThenBody:{  sb.append(", \"configurationField\": ");  sb.append(Strings.doubleQuote(configurationField));} @AT@ 6353 @LENGTH@ 129
---------UPD ExpressionStatement@@MethodInvocation:sb.append(Strings.doubleQuote(configurtationField)) @TO@ MethodInvocation:sb.append(Strings.doubleQuote(configurationField)) @AT@ 6420 @LENGTH@ 52
------------UPD MethodInvocation@@sb.append(Strings.doubleQuote(configurtationField)) @TO@ sb.append(Strings.doubleQuote(configurationField)) @AT@ 6420 @LENGTH@ 51
---------------UPD SimpleName@@MethodName:append:[Strings.doubleQuote(configurtationField)] @TO@ MethodName:append:[Strings.doubleQuote(configurationField)] @AT@ 6423 @LENGTH@ 48
------------------UPD MethodInvocation@@Strings.doubleQuote(configurtationField) @TO@ Strings.doubleQuote(configurationField) @AT@ 6430 @LENGTH@ 40
---------------------UPD SimpleName@@MethodName:doubleQuote:[configurtationField] @TO@ MethodName:doubleQuote:[configurationField] @AT@ 6438 @LENGTH@ 32
------------------------UPD SimpleName@@configurtationField @TO@ configurationField @AT@ 6450 @LENGTH@ 19


UPD TypeDeclaration@@[public]ConsumerDetailsFactoryBean, [FactoryBean<ConsumerDetails>, ResourceLoaderAware] @TO@ [@Deprecated, public]ConsumerDetailsFactoryBean, [FactoryBean<ConsumerDetails>, ResourceLoaderAware] @AT@ 1638 @LENGTH@ 2688
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerDetailsFactoryBean, [FactoryBean<ConsumerDetails>, ResourceLoaderAware] @AT@ 1859 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2125 @LENGTH@ 96
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2125 @LENGTH@ 95
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2191 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2202 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]AdvancedXsltEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedXsltEndpointBuilder, [EndpointProducerBuilder] @AT@ 9715 @LENGTH@ 9495
---DEL Modifier@@static @AT@ 9722 @LENGTH@ 6


UPD MethodDeclaration@@default, HBaseEndpointBuilder, MethodName:hBase, String path,  @TO@ default, HBaseEndpointBuilder, MethodName:hbase, String path,  @AT@ 40840 @LENGTH@ 362
---UPD SimpleName@@MethodName:hBase @TO@ MethodName:hbase @AT@ 40869 @LENGTH@ 5


UPD VariableDeclarationStatement@@MailEndpoint endpoint=(MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin"); @TO@ MailEndpoint endpoint=(MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin"); @AT@ 16725 @LENGTH@ 166
---UPD VariableDeclarationFragment@@endpoint=(MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @TO@ endpoint=(MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @AT@ 16738 @LENGTH@ 152
------UPD CastExpression@@(MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @TO@ (MailEndpoint)comp.createEndpoint("imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @AT@ 16749 @LENGTH@ 141
---------UPD MethodInvocation@@comp.createEndpoint("imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @TO@ comp.createEndpoint("imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin") @AT@ 16763 @LENGTH@ 127
------------UPD SimpleName@@MethodName:createEndpoint:["imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin"] @TO@ MethodName:createEndpoint:["imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin"] @AT@ 16768 @LENGTH@ 122
---------------UPD StringLiteral@@"imap://myhost?scheduler=quartz2&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin" @TO@ "imap://myhost?scheduler=quartz&scheduler.cron=0%2F5+*+0-23+%3F+*+*+*&scheduler.timeZone=Europe%2FBerlin" @AT@ 16783 @LENGTH@ 106


UPD EnhancedForStatement@@for (Task<? extends Serializable> task : roots) {  Object work=task.getWork();  if (work instanceof MapredWork) {    MapredWork mapredWork=(MapredWork)work;    MapWork mapWork=mapredWork.getMapWork();    if (mapWork != null) {      rootOps.addAll(mapWork.getAllRootOperators());    }    ReduceWork reduceWork=mapredWork.getReduceWork();    if (reduceWork != null) {      rootOps.addAll(reduceWork.getAllRootOperators());    }  }  if (work instanceof TezWork) {    for (    BaseWork bw : ((TezWork)work).getAllWorkUnsorted()) {      rootOps.addAll(bw.getAllRootOperators());    }  }} @TO@ for (Task<?> task : roots) {  Object work=task.getWork();  if (work instanceof MapredWork) {    MapredWork mapredWork=(MapredWork)work;    MapWork mapWork=mapredWork.getMapWork();    if (mapWork != null) {      rootOps.addAll(mapWork.getAllRootOperators());    }    ReduceWork reduceWork=mapredWork.getReduceWork();    if (reduceWork != null) {      rootOps.addAll(reduceWork.getAllRootOperators());    }  }  if (work instanceof TezWork) {    for (    BaseWork bw : ((TezWork)work).getAllWorkUnsorted()) {      rootOps.addAll(bw.getAllRootOperators());    }  }} @AT@ 2677 @LENGTH@ 679
---UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 2682 @LENGTH@ 33
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2682 @LENGTH@ 28


UPD TypeDeclaration@@[public]StringSplitUtils,  @TO@ [@Deprecated, public]StringSplitUtils,  @AT@ 379 @LENGTH@ 4269
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]StringSplitUtils,  @AT@ 603 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenStore,  @TO@ [@Deprecated, public]TokenStore,  @AT@ 357 @LENGTH@ 3026
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenStore,  @AT@ 538 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]IgniteQueueEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IgniteQueueEndpointBuilder, [EndpointProducerBuilder] @AT@ 1475 @LENGTH@ 2590
---DEL Modifier@@static @AT@ 1482 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]EC2Operations,  @TO@ [static]EC2Operations,  @AT@ 4404 @LENGTH@ 245
---DEL Modifier@@public @AT@ 4404 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer(i -> defaultRes) @AT@ 2007 @LENGTH@ 113
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer(i -> defaultRes) @AT@ 2007 @LENGTH@ 112
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2090 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2101 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]ControlBusEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ControlBusEndpointBuilder, [EndpointProducerBuilder] @AT@ 1535 @LENGTH@ 5414
---DEL Modifier@@static @AT@ 1542 @LENGTH@ 6


UPD MethodDeclaration@@default, TwitterDirectMessageEndpointBuilder, MethodName:twitterDirectMessage, String path,  @TO@ default, TwitterDirectMessageEndpointBuilder, MethodName:twitterDirectmessage, String path,  @AT@ 56389 @LENGTH@ 483
---UPD SimpleName@@MethodName:twitterDirectMessage @TO@ MethodName:twitterDirectmessage @AT@ 56433 @LENGTH@ 20


UPD EnumDeclaration@@[public, static]IgniteQueueOperation,  @TO@ [static]IgniteQueueOperation,  @AT@ 6412 @LENGTH@ 166
---DEL Modifier@@public @AT@ 6412 @LENGTH@ 6


UPD TypeDeclaration@@[public]InMemoryProtectedResourceDetailsService, [ProtectedResourceDetailsService] @TO@ [@Deprecated, public]InMemoryProtectedResourceDetailsService, [ProtectedResourceDetailsService] @AT@ 809 @LENGTH@ 685
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryProtectedResourceDetailsService, [ProtectedResourceDetailsService] @AT@ 1030 @LENGTH@ 11


UPD VariableDeclarationStatement@@Predicate<String> i=(s) -> s.length() > 5; @TO@ Predicate<String> i=s -> s.length() > 5; @AT@ 4415 @LENGTH@ 44
---UPD VariableDeclarationFragment@@i=(s) -> s.length() > 5 @TO@ i=s -> s.length() > 5 @AT@ 4433 @LENGTH@ 25
------UPD LambdaExpression@@(s) -> s.length() > 5 @TO@ s -> s.length() > 5 @AT@ 4438 @LENGTH@ 20


UPD IfStatement@@if (System.getProperty("java.vendor.url","whatever").contains("ibm.com")) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ if (TestSuiteEnvironment.isIbmJvm()) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 28038 @LENGTH@ 550
---UPD MethodInvocation@@System.getProperty("java.vendor.url","whatever").contains("ibm.com") @TO@ TestSuiteEnvironment.isIbmJvm() @AT@ 28042 @LENGTH@ 68
------DEL MethodInvocation@@MethodName:getProperty:["java.vendor.url", "whatever"] @AT@ 28042 @LENGTH@ 48
---------DEL StringLiteral@@"java.vendor.url" @AT@ 28061 @LENGTH@ 17
---------DEL StringLiteral@@"whatever" @AT@ 28079 @LENGTH@ 10
------UPD SimpleName@@Name:System @TO@ Name:TestSuiteEnvironment @AT@ 28042 @LENGTH@ 6
------UPD SimpleName@@MethodName:contains:["ibm.com"] @TO@ MethodName:isIbmJvm:[] @AT@ 28091 @LENGTH@ 19
---------DEL StringLiteral@@"ibm.com" @AT@ 28100 @LENGTH@ 9
---UPD Block@@ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 28223 @LENGTH@ 365
------UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28518 @LENGTH@ 56
---------UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28525 @LENGTH@ 48
------------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28538 @LENGTH@ 35
---------------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 28535 @LENGTH@ 4
---------------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 28566 @LENGTH@ 5


UPD TypeDeclaration@@[public]UserApprovalHandler,  @TO@ [@Deprecated, public]UserApprovalHandler,  @AT@ 424 @LENGTH@ 2647
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UserApprovalHandler,  @AT@ 601 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedIPFSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIPFSEndpointBuilder, [EndpointProducerBuilder] @AT@ 2658 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 2665 @LENGTH@ 6


UPD FieldDeclaration@@public, final, List<Task<? extends Serializable>>, [rootTasks] @TO@ public, final, List<Task<?>>, [rootTasks] @AT@ 2890 @LENGTH@ 58
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2903 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2908 @LENGTH@ 28


UPD IfStatement@@if (coreDir != null && coreDir.isDirectory()) {  File target=new File(coreDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(coreDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @TO@ if (coreDir != null && coreDir.isDirectory()) {  File target=new File(coreDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @AT@ 45452 @LENGTH@ 409
---UPD Block@@ThenBody:{  File target=new File(coreDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());  target=new File(coreDir,"../camel-jaxp/src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @TO@ ThenBody:{  File target=new File(coreDir,"src/main/docs");  findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter());} @AT@ 45498 @LENGTH@ 363
------DEL ExpressionStatement@@MethodInvocation:findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter()) @AT@ 45774 @LENGTH@ 77
---------DEL MethodInvocation@@findAsciiDocFilesRecursive(target,adocFiles,new CamelAsciiDocFileFilter()) @AT@ 45774 @LENGTH@ 76
------------DEL SimpleName@@MethodName:findAsciiDocFilesRecursive:[target, adocFiles, new CamelAsciiDocFileFilter()] @AT@ 45774 @LENGTH@ 76
---------------DEL SimpleName@@target @AT@ 45801 @LENGTH@ 6
---------------DEL SimpleName@@adocFiles @AT@ 45809 @LENGTH@ 9
---------------DEL ClassInstanceCreation@@CamelAsciiDocFileFilter[] @AT@ 45820 @LENGTH@ 29
------------------DEL New@@new @AT@ 45820 @LENGTH@ 3
------------------DEL SimpleType@@CamelAsciiDocFileFilter @AT@ 45824 @LENGTH@ 23


UPD FieldDeclaration@@private, static, final, String[], [BASE32_IMPOSSIBLE_CASES={"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======"}] @TO@ private, static, final, String[], [BASE32_IMPOSSIBLE_CASES={"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======","AB======"}] @AT@ 1644 @LENGTH@ 175
---UPD VariableDeclarationFragment@@BASE32_IMPOSSIBLE_CASES={"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======"} @TO@ BASE32_IMPOSSIBLE_CASES={"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======","AB======"} @AT@ 1674 @LENGTH@ 144
------UPD ArrayInitializer@@{"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======"} @TO@ {"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======","AB======"} @AT@ 1700 @LENGTH@ 118
---------INS StringLiteral@@"AB======" @TO@ ArrayInitializer@@{"MC======","MZXE====","MZXWB===","MZXW6YB=","MZXW6YTBOC======"} @AT@ 1818 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:setExpectedDomain(".spring.io") @TO@ MethodInvocation:setExpectedDomain("spring.io") @AT@ 3276 @LENGTH@ 32
---UPD MethodInvocation@@setExpectedDomain(".spring.io") @TO@ setExpectedDomain("spring.io") @AT@ 3276 @LENGTH@ 31
------UPD SimpleName@@MethodName:setExpectedDomain:[".spring.io"] @TO@ MethodName:setExpectedDomain:["spring.io"] @AT@ 3276 @LENGTH@ 31
---------UPD StringLiteral@@".spring.io" @TO@ "spring.io" @AT@ 3294 @LENGTH@ 12


UPD VariableDeclarationStatement@@boolean shouldRequeue=defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException || throwable instanceof ImmediateRequeueAmqpException; @TO@ boolean shouldRequeue=defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException; @AT@ 1596 @LENGTH@ 171
---UPD VariableDeclarationFragment@@shouldRequeue=defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException || throwable instanceof ImmediateRequeueAmqpException @TO@ shouldRequeue=defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException @AT@ 1604 @LENGTH@ 162
------UPD InfixExpression@@defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException || throwable instanceof ImmediateRequeueAmqpException @TO@ defaultRequeueRejected || throwable instanceof MessageRejectedWhileStoppingException @AT@ 1620 @LENGTH@ 146
---------DEL InstanceofExpression@@throwable instanceof ImmediateRequeueAmqpException @AT@ 1716 @LENGTH@ 50
------------DEL SimpleName@@throwable @AT@ 1716 @LENGTH@ 9
------------DEL Instanceof@@instanceof @AT@ 1726 @LENGTH@ 10
------------DEL SimpleType@@ImmediateRequeueAmqpException @AT@ 1737 @LENGTH@ 29


UPD MethodDeclaration@@public, voidMethodName:TransactionManagerMixedDatabasesTest, Driver driver, Neo4jClient neo4jClient, Neo4jTransactionManager neo4jTransactionManager, PersonRepository repository,  @TO@ voidMethodName:TransactionManagerMixedDatabasesTest, Driver driver, Neo4jClient neo4jClient, Neo4jTransactionManager neo4jTransactionManager, PersonRepository repository,  @AT@ 2968 @LENGTH@ 339
---DEL Modifier@@public @AT@ 2968 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:testUnMarshalToStringOfXml, Exception,  @TO@ public, void, MethodName:testMarshalToRDFXMLFromHTML, Exception,  @AT@ 1211 @LENGTH@ 798
---UPD SimpleName@@MethodName:testUnMarshalToStringOfXml @TO@ MethodName:testMarshalToRDFXMLFromHTML @AT@ 1223 @LENGTH@ 26
---UPD EnhancedForStatement@@for (Exchange exchange : list) {  Message in=exchange.getIn();  String resultingRDF=in.getBody(String.class);  System.out.println(resultingRDF);} @TO@ for (Exchange exchange : list) {  Message in=exchange.getIn();  String resultingRDF=in.getBody(String.class);  InputStream toInputStream=IOUtils.toInputStream(resultingRDF);  Model parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML);  assertEquals(parse.size(),28);} @AT@ 1634 @LENGTH@ 371
------DEL ExpressionStatement@@MethodInvocation:System.out.println(resultingRDF) @AT@ 1764 @LENGTH@ 33
---------DEL MethodInvocation@@System.out.println(resultingRDF) @AT@ 1764 @LENGTH@ 32
------------DEL QualifiedName@@Name:System.out @AT@ 1764 @LENGTH@ 10
------INS VariableDeclarationStatement@@InputStream toInputStream=IOUtils.toInputStream(resultingRDF); @TO@ EnhancedForStatement@@for (Exchange exchange : list) {  Message in=exchange.getIn();  String resultingRDF=in.getBody(String.class);  System.out.println(resultingRDF);} @AT@ 1943 @LENGTH@ 64
---------INS SimpleType@@InputStream @TO@ VariableDeclarationStatement@@InputStream toInputStream=IOUtils.toInputStream(resultingRDF); @AT@ 1943 @LENGTH@ 11
---------INS VariableDeclarationFragment@@toInputStream=IOUtils.toInputStream(resultingRDF) @TO@ VariableDeclarationStatement@@InputStream toInputStream=IOUtils.toInputStream(resultingRDF); @AT@ 1955 @LENGTH@ 51
------------INS SimpleName@@toInputStream @TO@ VariableDeclarationFragment@@toInputStream=IOUtils.toInputStream(resultingRDF) @AT@ 1955 @LENGTH@ 13
------------INS MethodInvocation@@IOUtils.toInputStream(resultingRDF) @TO@ VariableDeclarationFragment@@toInputStream=IOUtils.toInputStream(resultingRDF) @AT@ 1971 @LENGTH@ 35
---------------MOV SimpleName@@MethodName:println:[resultingRDF] @TO@ MethodInvocation@@IOUtils.toInputStream(resultingRDF) @AT@ 1775 @LENGTH@ 21
---------------INS SimpleName@@Name:IOUtils @TO@ MethodInvocation@@IOUtils.toInputStream(resultingRDF) @AT@ 1971 @LENGTH@ 7
------INS VariableDeclarationStatement@@Model parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML); @TO@ EnhancedForStatement@@for (Exchange exchange : list) {  Message in=exchange.getIn();  String resultingRDF=in.getBody(String.class);  System.out.println(resultingRDF);} @AT@ 2014 @LENGTH@ 80
---------INS SimpleType@@Model @TO@ VariableDeclarationStatement@@Model parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML); @AT@ 2014 @LENGTH@ 5
---------INS VariableDeclarationFragment@@parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @TO@ VariableDeclarationStatement@@Model parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML); @AT@ 2020 @LENGTH@ 73
------------INS SimpleName@@parse @TO@ VariableDeclarationFragment@@parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @AT@ 2020 @LENGTH@ 5
------------INS MethodInvocation@@Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @TO@ VariableDeclarationFragment@@parse=Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @AT@ 2028 @LENGTH@ 65
---------------INS SimpleName@@Name:Rio @TO@ MethodInvocation@@Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @AT@ 2028 @LENGTH@ 3
---------------INS SimpleName@@MethodName:parse:[toInputStream, "http://mock.foo/bar", RDFFormat.RDFXML] @TO@ MethodInvocation@@Rio.parse(toInputStream,"http://mock.foo/bar",RDFFormat.RDFXML) @AT@ 2032 @LENGTH@ 61
------------------INS SimpleName@@toInputStream @TO@ SimpleName@@MethodName:parse:[toInputStream, "http://mock.foo/bar", RDFFormat.RDFXML] @AT@ 2038 @LENGTH@ 13
------------------INS StringLiteral@@"http://mock.foo/bar" @TO@ SimpleName@@MethodName:parse:[toInputStream, "http://mock.foo/bar", RDFFormat.RDFXML] @AT@ 2053 @LENGTH@ 21
------------------INS QualifiedName@@RDFFormat.RDFXML @TO@ SimpleName@@MethodName:parse:[toInputStream, "http://mock.foo/bar", RDFFormat.RDFXML] @AT@ 2076 @LENGTH@ 16
---------------------INS SimpleName@@RDFFormat @TO@ QualifiedName@@RDFFormat.RDFXML @AT@ 2076 @LENGTH@ 9
---------------------INS SimpleName@@RDFXML @TO@ QualifiedName@@RDFFormat.RDFXML @AT@ 2086 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),28) @TO@ EnhancedForStatement@@for (Exchange exchange : list) {  Message in=exchange.getIn();  String resultingRDF=in.getBody(String.class);  System.out.println(resultingRDF);} @AT@ 2101 @LENGTH@ 31
---------INS MethodInvocation@@assertEquals(parse.size(),28) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(parse.size(),28) @AT@ 2101 @LENGTH@ 30
------------INS SimpleName@@MethodName:assertEquals:[parse.size(), 28] @TO@ MethodInvocation@@assertEquals(parse.size(),28) @AT@ 2101 @LENGTH@ 30
---------------INS MethodInvocation@@parse.size() @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 28] @AT@ 2114 @LENGTH@ 12
------------------INS SimpleName@@Name:parse @TO@ MethodInvocation@@parse.size() @AT@ 2114 @LENGTH@ 5
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@parse.size() @AT@ 2120 @LENGTH@ 6
---------------INS NumberLiteral@@28 @TO@ SimpleName@@MethodName:assertEquals:[parse.size(), 28] @AT@ 2128 @LENGTH@ 2


UPD EnumDeclaration@@[public, static]LambdaOperations,  @TO@ [static]LambdaOperations,  @AT@ 7637 @LENGTH@ 287
---DEL Modifier@@public @AT@ 7637 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:verifyZeroInteractions(bcrypt) @TO@ MethodDeclaration@@public, void, MethodName:upgradeEncodingWhenDifferentIdThenTrue,  @AT@ 7852 @LENGTH@ 31
---INS MethodInvocation@@verifyZeroInteractions(bcrypt) @TO@ ExpressionStatement@@MethodInvocation:verifyZeroInteractions(bcrypt) @AT@ 7852 @LENGTH@ 30
------INS SimpleName@@MethodName:verifyZeroInteractions:[bcrypt] @TO@ MethodInvocation@@verifyZeroInteractions(bcrypt) @AT@ 7852 @LENGTH@ 30
---------INS SimpleName@@bcrypt @TO@ SimpleName@@MethodName:verifyZeroInteractions:[bcrypt] @AT@ 7875 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]KinesisShardClosedStrategyEnum,  @TO@ [static]KinesisShardClosedStrategyEnum,  @AT@ 44199 @LENGTH@ 87
---DEL Modifier@@public @AT@ 44199 @LENGTH@ 6


UPD IfStatement@@if (bindingReader.currentValue != null) {  Object value=bindingReader.currentValue;  bindingReader.setState(State.TYPE);  bindingReader.currentValue=null;  return value;} @TO@ if (bindingReader.currentValue != null) {  Object value=bindingReader.currentValue;  if (ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date)) {    if (value instanceof Number) {      value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));    } else     if (value instanceof String) {      value=new Date(DateTimeFormatter.parse((String)value));    }  }  bindingReader.setState(State.TYPE);  bindingReader.currentValue=null;  return value;} @AT@ 9826 @LENGTH@ 191
---UPD Block@@ThenBody:{  Object value=bindingReader.currentValue;  bindingReader.setState(State.TYPE);  bindingReader.currentValue=null;  return value;} @TO@ ThenBody:{  Object value=bindingReader.currentValue;  if (ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date)) {    if (value instanceof Number) {      value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));    } else     if (value instanceof String) {      value=new Date(DateTimeFormatter.parse((String)value));    }  }  bindingReader.setState(State.TYPE);  bindingReader.currentValue=null;  return value;} @AT@ 9866 @LENGTH@ 151
------INS IfStatement@@if (ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date)) {  if (value instanceof Number) {    value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));  } else   if (value instanceof String) {    value=new Date(DateTimeFormatter.parse((String)value));  }} @TO@ Block@@ThenBody:{  Object value=bindingReader.currentValue;  bindingReader.setState(State.TYPE);  bindingReader.currentValue=null;  return value;} @AT@ 9614 @LENGTH@ 373
---------INS InfixExpression@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date) @TO@ IfStatement@@if (ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date)) {  if (value instanceof Number) {    value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));  } else   if (value instanceof String) {    value=new Date(DateTimeFormatter.parse((String)value));  }} @AT@ 9618 @LENGTH@ 116
------------INS MethodInvocation@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) @TO@ InfixExpression@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date) @AT@ 9618 @LENGTH@ 82
---------------INS SimpleName@@Name:ObjectUtils @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) @AT@ 9618 @LENGTH@ 11
---------------INS SimpleName@@MethodName:nullSafeEquals:[BsonType.DATE_TIME, bindingReader.getCurrentBsonType()] @TO@ MethodInvocation@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) @AT@ 9630 @LENGTH@ 70
------------------INS QualifiedName@@BsonType.DATE_TIME @TO@ SimpleName@@MethodName:nullSafeEquals:[BsonType.DATE_TIME, bindingReader.getCurrentBsonType()] @AT@ 9645 @LENGTH@ 18
---------------------INS SimpleName@@BsonType @TO@ QualifiedName@@BsonType.DATE_TIME @AT@ 9645 @LENGTH@ 8
---------------------INS SimpleName@@DATE_TIME @TO@ QualifiedName@@BsonType.DATE_TIME @AT@ 9654 @LENGTH@ 9
------------------INS MethodInvocation@@bindingReader.getCurrentBsonType() @TO@ SimpleName@@MethodName:nullSafeEquals:[BsonType.DATE_TIME, bindingReader.getCurrentBsonType()] @AT@ 9665 @LENGTH@ 34
---------------------INS SimpleName@@Name:bindingReader @TO@ MethodInvocation@@bindingReader.getCurrentBsonType() @AT@ 9665 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getCurrentBsonType:[] @TO@ MethodInvocation@@bindingReader.getCurrentBsonType() @AT@ 9679 @LENGTH@ 20
------------INS Operator@@&& @TO@ InfixExpression@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date) @AT@ 9700 @LENGTH@ 2
------------INS PrefixExpression@@!(value instanceof Date) @TO@ InfixExpression@@ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date) @AT@ 9710 @LENGTH@ 24
---------------INS Operator@@! @TO@ PrefixExpression@@!(value instanceof Date) @AT@ 9710 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(value instanceof Date) @TO@ PrefixExpression@@!(value instanceof Date) @AT@ 9711 @LENGTH@ 23
------------------INS InstanceofExpression@@value instanceof Date @TO@ ParenthesizedExpression@@(value instanceof Date) @AT@ 9712 @LENGTH@ 21
---------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Date @AT@ 9712 @LENGTH@ 5
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Date @AT@ 9718 @LENGTH@ 10
---------------------INS SimpleType@@Date @TO@ InstanceofExpression@@value instanceof Date @AT@ 9729 @LENGTH@ 4
---------INS Block@@ThenBody:{  if (value instanceof Number) {    value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));  } else   if (value instanceof String) {    value=new Date(DateTimeFormatter.parse((String)value));  }} @TO@ IfStatement@@if (ObjectUtils.nullSafeEquals(BsonType.DATE_TIME,bindingReader.getCurrentBsonType()) && !(value instanceof Date)) {  if (value instanceof Number) {    value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));  } else   if (value instanceof String) {    value=new Date(DateTimeFormatter.parse((String)value));  }} @AT@ 9736 @LENGTH@ 251
------------INS IfStatement@@if (value instanceof Number) {  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} else if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ Block@@ThenBody:{  if (value instanceof Number) {    value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));  } else   if (value instanceof String) {    value=new Date(DateTimeFormatter.parse((String)value));  }} @AT@ 9744 @LENGTH@ 237
---------------INS InstanceofExpression@@value instanceof Number @TO@ IfStatement@@if (value instanceof Number) {  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} else if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9748 @LENGTH@ 23
------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof Number @AT@ 9748 @LENGTH@ 5
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof Number @AT@ 9754 @LENGTH@ 10
------------------INS SimpleType@@Number @TO@ InstanceofExpression@@value instanceof Number @AT@ 9765 @LENGTH@ 6
---------------INS Block@@ThenBody:{  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} @TO@ IfStatement@@if (value instanceof Number) {  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} else if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9773 @LENGTH@ 100
------------------INS ExpressionStatement@@Assignment:value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @TO@ Block@@ThenBody:{  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} @AT@ 9781 @LENGTH@ 85
---------------------INS Assignment@@value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @TO@ ExpressionStatement@@Assignment:value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @AT@ 9781 @LENGTH@ 84
------------------------INS SimpleName@@value @TO@ Assignment@@value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @AT@ 9781 @LENGTH@ 5
------------------------INS Operator@@= @TO@ Assignment@@value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @AT@ 9786 @LENGTH@ 1
------------------------INS ClassInstanceCreation@@Date[NumberUtils.convertNumberToTargetClass((Number)value,Long.class)] @TO@ Assignment@@value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class)) @AT@ 9789 @LENGTH@ 76
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[NumberUtils.convertNumberToTargetClass((Number)value,Long.class)] @AT@ 9789 @LENGTH@ 3
---------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[NumberUtils.convertNumberToTargetClass((Number)value,Long.class)] @AT@ 9793 @LENGTH@ 4
---------------------------INS MethodInvocation@@NumberUtils.convertNumberToTargetClass((Number)value,Long.class) @TO@ ClassInstanceCreation@@Date[NumberUtils.convertNumberToTargetClass((Number)value,Long.class)] @AT@ 9798 @LENGTH@ 66
------------------------------INS SimpleName@@Name:NumberUtils @TO@ MethodInvocation@@NumberUtils.convertNumberToTargetClass((Number)value,Long.class) @AT@ 9798 @LENGTH@ 11
------------------------------INS SimpleName@@MethodName:convertNumberToTargetClass:[(Number)value, Long.class] @TO@ MethodInvocation@@NumberUtils.convertNumberToTargetClass((Number)value,Long.class) @AT@ 9810 @LENGTH@ 54
---------------------------------INS CastExpression@@(Number)value @TO@ SimpleName@@MethodName:convertNumberToTargetClass:[(Number)value, Long.class] @AT@ 9837 @LENGTH@ 14
------------------------------------INS SimpleType@@Number @TO@ CastExpression@@(Number)value @AT@ 9838 @LENGTH@ 6
------------------------------------INS SimpleName@@value @TO@ CastExpression@@(Number)value @AT@ 9846 @LENGTH@ 5
---------------------------------INS TypeLiteral@@Long.class @TO@ SimpleName@@MethodName:convertNumberToTargetClass:[(Number)value, Long.class] @AT@ 9853 @LENGTH@ 10
---------------INS Block@@ElseBody:if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ IfStatement@@if (value instanceof Number) {  value=new Date(NumberUtils.convertNumberToTargetClass((Number)value,Long.class));} else if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9879 @LENGTH@ 102
------------------INS IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ Block@@ElseBody:if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9879 @LENGTH@ 102
---------------------INS InstanceofExpression@@value instanceof String @TO@ IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9883 @LENGTH@ 23
------------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof String @AT@ 9883 @LENGTH@ 5
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof String @AT@ 9889 @LENGTH@ 10
------------------------INS SimpleType@@String @TO@ InstanceofExpression@@value instanceof String @AT@ 9900 @LENGTH@ 6
---------------------INS Block@@ThenBody:{  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9908 @LENGTH@ 73
------------------------INS ExpressionStatement@@Assignment:value=new Date(DateTimeFormatter.parse((String)value)) @TO@ Block@@ThenBody:{  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9916 @LENGTH@ 58
---------------------------INS Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @TO@ ExpressionStatement@@Assignment:value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9916 @LENGTH@ 57
------------------------------INS SimpleName@@value @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9916 @LENGTH@ 5
------------------------------INS Operator@@= @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9921 @LENGTH@ 1
------------------------------INS ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9924 @LENGTH@ 49
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9924 @LENGTH@ 3
---------------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9928 @LENGTH@ 4
---------------------------------INS MethodInvocation@@DateTimeFormatter.parse((String)value) @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9933 @LENGTH@ 39
------------------------------------INS SimpleName@@Name:DateTimeFormatter @TO@ MethodInvocation@@DateTimeFormatter.parse((String)value) @AT@ 9933 @LENGTH@ 17
------------------------------------INS SimpleName@@MethodName:parse:[(String)value] @TO@ MethodInvocation@@DateTimeFormatter.parse((String)value) @AT@ 9951 @LENGTH@ 21
---------------------------------------INS CastExpression@@(String)value @TO@ SimpleName@@MethodName:parse:[(String)value] @AT@ 9957 @LENGTH@ 14
------------------------------------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 9958 @LENGTH@ 6
------------------------------------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 9966 @LENGTH@ 5
------------------INS IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ Block@@ElseBody:if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9879 @LENGTH@ 102
---------------------INS InstanceofExpression@@value instanceof String @TO@ IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9883 @LENGTH@ 23
------------------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof String @AT@ 9883 @LENGTH@ 5
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof String @AT@ 9889 @LENGTH@ 10
------------------------INS SimpleType@@String @TO@ InstanceofExpression@@value instanceof String @AT@ 9900 @LENGTH@ 6
---------------------INS Block@@ThenBody:{  value=new Date(DateTimeFormatter.parse((String)value));} @TO@ IfStatement@@if (value instanceof String) {  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9908 @LENGTH@ 73
------------------------INS ExpressionStatement@@Assignment:value=new Date(DateTimeFormatter.parse((String)value)) @TO@ Block@@ThenBody:{  value=new Date(DateTimeFormatter.parse((String)value));} @AT@ 9916 @LENGTH@ 58
---------------------------INS Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @TO@ ExpressionStatement@@Assignment:value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9916 @LENGTH@ 57
------------------------------INS SimpleName@@value @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9916 @LENGTH@ 5
------------------------------INS Operator@@= @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9921 @LENGTH@ 1
------------------------------INS ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @TO@ Assignment@@value=new Date(DateTimeFormatter.parse((String)value)) @AT@ 9924 @LENGTH@ 49
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9924 @LENGTH@ 3
---------------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9928 @LENGTH@ 4
---------------------------------INS MethodInvocation@@DateTimeFormatter.parse((String)value) @TO@ ClassInstanceCreation@@Date[DateTimeFormatter.parse((String)value)] @AT@ 9933 @LENGTH@ 39
------------------------------------INS SimpleName@@Name:DateTimeFormatter @TO@ MethodInvocation@@DateTimeFormatter.parse((String)value) @AT@ 9933 @LENGTH@ 17
------------------------------------INS SimpleName@@MethodName:parse:[(String)value] @TO@ MethodInvocation@@DateTimeFormatter.parse((String)value) @AT@ 9951 @LENGTH@ 21
---------------------------------------INS CastExpression@@(String)value @TO@ SimpleName@@MethodName:parse:[(String)value] @AT@ 9957 @LENGTH@ 14
------------------------------------------INS SimpleType@@String @TO@ CastExpression@@(String)value @AT@ 9958 @LENGTH@ 6
------------------------------------------INS SimpleName@@value @TO@ CastExpression@@(String)value @AT@ 9966 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]YammerFunctionType,  @TO@ [static]YammerFunctionType,  @AT@ 41352 @LENGTH@ 130
---DEL Modifier@@public @AT@ 41352 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]GenericFileExist,  @TO@ [static]GenericFileExist,  @AT@ 139809 @LENGTH@ 100
---DEL Modifier@@public @AT@ 139809 @LENGTH@ 6


UPD WhileStatement@@while (true) {  startArenaIx=(int)((threadId + discardsAttempt + allocationAttempt) % arenaCount);  destAllocIx=allocateWithSplit(dest,null,destAllocIx,dest.length,freeListIx,allocationSize,startArenaIx,arenaCount,-1);  if (destAllocIx == dest.length)   return;  boolean hasDiscardedAny=false;  DiscardContext ctx=threadCtx.get();  int maxListSize=1 << (doUseBruteDiscard ? freeListIx : (freeListIx - 1));  int requiredBlocks=dest.length - destAllocIx;  ctx.init(maxListSize,requiredBlocks);  if (doUseFreeListDiscard && freeListIx > 0) {    discardBlocksBasedOnFreeLists(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=ctx.resultCount > 0;    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (doUseBruteDiscard) {    ctx.resetResults();    discardBlocksBruteForce(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=hasDiscardedAny || (ctx.resultCount > 0);    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (hasDiscardedAny) {    discardFailed=0;  } else   if (++discardFailed > MAX_DISCARD_ATTEMPTS) {    isFailed=true;    for (int i=0; i < destAllocIx; ++i) {      try {        deallocate(dest[i]);      } catch (      Throwable t) {        LlapIoImpl.LOG.info("Failed to deallocate after a partially successful allocate: " + dest[i]);      }    }    memoryManager.releaseMemory(dest.length - destAllocIx << allocLog2);    String msg="Failed to allocate " + size + "; at "+ destAllocIx+ " out of "+ dest.length+ " (entire cache is fragmented and locked, or an internal issue)";    logOomErrorMessage(msg);    throw new AllocatorOutOfMemoryException(msg);  }  ++discardsAttempt;} @TO@ while (true) {  startArenaIx=(int)((threadId + discardsAttempt + allocationAttempt) % arenaCount);  destAllocIx=allocateWithSplit(dest,null,destAllocIx,dest.length,freeListIx,allocationSize,startArenaIx,arenaCount,-1);  if (destAllocIx == dest.length)   return;  boolean hasDiscardedAny=false;  DiscardContext ctx=threadCtx.get();  int maxListSize=1 << (doUseBruteDiscard ? freeListIx : (freeListIx - 1));  int requiredBlocks=dest.length - destAllocIx;  ctx.init(maxListSize,requiredBlocks);  if (doUseFreeListDiscard && freeListIx > 0) {    discardBlocksBasedOnFreeLists(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=ctx.resultCount > 0;    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (doUseBruteDiscard) {    ctx.resetResults();    discardBlocksBruteForce(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=hasDiscardedAny || (ctx.resultCount > 0);    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (hasDiscardedAny) {    discardFailed=0;  } else   if (++discardFailed > MAX_DISCARD_ATTEMPTS) {    isFailed=true;    for (int i=0; i < destAllocIx; ++i) {      try {        deallocate(dest[i]);      } catch (      Throwable t) {        LlapIoImpl.LOG.info("Failed to deallocate after a partially successful allocate: " + dest[i]);      }    }    memoryManager.releaseMemory(dest.length - destAllocIx << allocLog2);    String msg="Failed to allocate " + size + "; at "+ destAllocIx+ " out of "+ dest.length+ " (entire cache is fragmented and locked, or an internal issue)";    logOomErrorMessage(msg);    throw new AllocatorOutOfMemoryException(msg);  }  arenaCount=getArenaCount();  ++discardsAttempt;} @AT@ 18480 @LENGTH@ 2738
---UPD Block@@WhileBody:{  startArenaIx=(int)((threadId + discardsAttempt + allocationAttempt) % arenaCount);  destAllocIx=allocateWithSplit(dest,null,destAllocIx,dest.length,freeListIx,allocationSize,startArenaIx,arenaCount,-1);  if (destAllocIx == dest.length)   return;  boolean hasDiscardedAny=false;  DiscardContext ctx=threadCtx.get();  int maxListSize=1 << (doUseBruteDiscard ? freeListIx : (freeListIx - 1));  int requiredBlocks=dest.length - destAllocIx;  ctx.init(maxListSize,requiredBlocks);  if (doUseFreeListDiscard && freeListIx > 0) {    discardBlocksBasedOnFreeLists(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=ctx.resultCount > 0;    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (doUseBruteDiscard) {    ctx.resetResults();    discardBlocksBruteForce(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=hasDiscardedAny || (ctx.resultCount > 0);    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (hasDiscardedAny) {    discardFailed=0;  } else   if (++discardFailed > MAX_DISCARD_ATTEMPTS) {    isFailed=true;    for (int i=0; i < destAllocIx; ++i) {      try {        deallocate(dest[i]);      } catch (      Throwable t) {        LlapIoImpl.LOG.info("Failed to deallocate after a partially successful allocate: " + dest[i]);      }    }    memoryManager.releaseMemory(dest.length - destAllocIx << allocLog2);    String msg="Failed to allocate " + size + "; at "+ destAllocIx+ " out of "+ dest.length+ " (entire cache is fragmented and locked, or an internal issue)";    logOomErrorMessage(msg);    throw new AllocatorOutOfMemoryException(msg);  }  ++discardsAttempt;} @TO@ WhileBody:{  startArenaIx=(int)((threadId + discardsAttempt + allocationAttempt) % arenaCount);  destAllocIx=allocateWithSplit(dest,null,destAllocIx,dest.length,freeListIx,allocationSize,startArenaIx,arenaCount,-1);  if (destAllocIx == dest.length)   return;  boolean hasDiscardedAny=false;  DiscardContext ctx=threadCtx.get();  int maxListSize=1 << (doUseBruteDiscard ? freeListIx : (freeListIx - 1));  int requiredBlocks=dest.length - destAllocIx;  ctx.init(maxListSize,requiredBlocks);  if (doUseFreeListDiscard && freeListIx > 0) {    discardBlocksBasedOnFreeLists(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=ctx.resultCount > 0;    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (doUseBruteDiscard) {    ctx.resetResults();    discardBlocksBruteForce(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=hasDiscardedAny || (ctx.resultCount > 0);    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (hasDiscardedAny) {    discardFailed=0;  } else   if (++discardFailed > MAX_DISCARD_ATTEMPTS) {    isFailed=true;    for (int i=0; i < destAllocIx; ++i) {      try {        deallocate(dest[i]);      } catch (      Throwable t) {        LlapIoImpl.LOG.info("Failed to deallocate after a partially successful allocate: " + dest[i]);      }    }    memoryManager.releaseMemory(dest.length - destAllocIx << allocLog2);    String msg="Failed to allocate " + size + "; at "+ destAllocIx+ " out of "+ dest.length+ " (entire cache is fragmented and locked, or an internal issue)";    logOomErrorMessage(msg);    throw new AllocatorOutOfMemoryException(msg);  }  arenaCount=getArenaCount();  ++discardsAttempt;} @AT@ 18493 @LENGTH@ 2725
------INS ExpressionStatement@@Assignment:arenaCount=getArenaCount() @TO@ Block@@WhileBody:{  startArenaIx=(int)((threadId + discardsAttempt + allocationAttempt) % arenaCount);  destAllocIx=allocateWithSplit(dest,null,destAllocIx,dest.length,freeListIx,allocationSize,startArenaIx,arenaCount,-1);  if (destAllocIx == dest.length)   return;  boolean hasDiscardedAny=false;  DiscardContext ctx=threadCtx.get();  int maxListSize=1 << (doUseBruteDiscard ? freeListIx : (freeListIx - 1));  int requiredBlocks=dest.length - destAllocIx;  ctx.init(maxListSize,requiredBlocks);  if (doUseFreeListDiscard && freeListIx > 0) {    discardBlocksBasedOnFreeLists(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=ctx.resultCount > 0;    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (doUseBruteDiscard) {    ctx.resetResults();    discardBlocksBruteForce(freeListIx,startArenaIx,arenaCount,ctx);    memoryForceReleased+=ctx.memoryReleased;    hasDiscardedAny=hasDiscardedAny || (ctx.resultCount > 0);    destAllocIx=allocateFromDiscardResult(dest,destAllocIx,freeListIx,allocationSize,ctx);    if (destAllocIx == dest.length) {      return;    }  }  if (hasDiscardedAny) {    discardFailed=0;  } else   if (++discardFailed > MAX_DISCARD_ATTEMPTS) {    isFailed=true;    for (int i=0; i < destAllocIx; ++i) {      try {        deallocate(dest[i]);      } catch (      Throwable t) {        LlapIoImpl.LOG.info("Failed to deallocate after a partially successful allocate: " + dest[i]);      }    }    memoryManager.releaseMemory(dest.length - destAllocIx << allocLog2);    String msg="Failed to allocate " + size + "; at "+ destAllocIx+ " out of "+ dest.length+ " (entire cache is fragmented and locked, or an internal issue)";    logOomErrorMessage(msg);    throw new AllocatorOutOfMemoryException(msg);  }  ++discardsAttempt;} @AT@ 21357 @LENGTH@ 29
---------INS Assignment@@arenaCount=getArenaCount() @TO@ ExpressionStatement@@Assignment:arenaCount=getArenaCount() @AT@ 21357 @LENGTH@ 28
------------INS SimpleName@@arenaCount @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 21357 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 21367 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:getArenaCount:[] @TO@ Assignment@@arenaCount=getArenaCount() @AT@ 21370 @LENGTH@ 15


UPD VariableDeclarationStatement@@ServiceRegistry registry=context.getServiceRegistry(true); @TO@ ServiceRegistry registry=context.getServiceRegistry(false); @AT@ 3571 @LENGTH@ 60
---UPD VariableDeclarationFragment@@registry=context.getServiceRegistry(true) @TO@ registry=context.getServiceRegistry(false) @AT@ 3587 @LENGTH@ 43
------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 3598 @LENGTH@ 32
---------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 3606 @LENGTH@ 24
------------UPD BooleanLiteral@@true @TO@ false @AT@ 3625 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]S3Operations,  @TO@ [static]S3Operations,  @AT@ 77782 @LENGTH@ 138
---DEL Modifier@@public @AT@ 77782 @LENGTH@ 6


INS MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @TO@ TypeDeclaration@@[public, final]InMemoryClientRegistrationRepository, [ClientRegistrationRepository, Iterable<ClientRegistration>] @AT@ 1932 @LENGTH@ 234
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 1932 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 1940 @LENGTH@ 6
---INS ParameterizedType@@Map<String,ClientRegistration> @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 1947 @LENGTH@ 31
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 1947 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 1951 @LENGTH@ 6
------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@Map<String,ClientRegistration> @AT@ 1959 @LENGTH@ 18
---INS SimpleName@@MethodName:createRegistrationsMap @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 1979 @LENGTH@ 22
---INS ReturnStatement@@MethodInvocation:toUnmodifiableConcurrentMap(registrations) @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2113 @LENGTH@ 50
------INS MethodInvocation@@toUnmodifiableConcurrentMap(registrations) @TO@ ReturnStatement@@MethodInvocation:toUnmodifiableConcurrentMap(registrations) @AT@ 2120 @LENGTH@ 42
---------INS SimpleName@@MethodName:toUnmodifiableConcurrentMap:[registrations] @TO@ MethodInvocation@@toUnmodifiableConcurrentMap(registrations) @AT@ 2120 @LENGTH@ 42
------------INS SimpleName@@registrations @TO@ SimpleName@@MethodName:toUnmodifiableConcurrentMap:[registrations] @AT@ 2148 @LENGTH@ 13
---MOV SingleVariableDeclaration@@List<ClientRegistration> registrations @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2190 @LENGTH@ 38
---MOV ExpressionStatement@@MethodInvocation:Assert.notEmpty(registrations,"registrations cannot be empty") @TO@ MethodDeclaration@@private, static, Map<String,ClientRegistration>, MethodName:createRegistrationsMap, List<ClientRegistration> registrations,  @AT@ 2234 @LENGTH@ 64


UPD TypeDeclaration@@[public, static]JingEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]JingEndpointBuilder, [EndpointProducerBuilder] @AT@ 1409 @LENGTH@ 1657
---DEL Modifier@@static @AT@ 1416 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @TO@ [@Configuration, static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4178 @LENGTH@ 118
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ReactiveMethodSecurityConfiguration @AT@ 4177 @LENGTH@ 14
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 4178 @LENGTH@ 40


INS MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @TO@ TypeDeclaration@@[public]DefaultRedirectResolverTests,  @AT@ 13621 @LENGTH@ 300
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13621 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13628 @LENGTH@ 4
---INS SimpleName@@MethodName:testRedirectNoHost @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13633 @LENGTH@ 18
---INS VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")); @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13658 @LENGTH@ 78
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")); @AT@ 13658 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 13658 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 13662 @LENGTH@ 6
------INS VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")) @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")); @AT@ 13670 @LENGTH@ 65
---------INS SimpleName@@redirectUris @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")) @AT@ 13670 @LENGTH@ 12
---------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("scheme:/path")] @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("scheme:/path")) @AT@ 13685 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("scheme:/path")] @AT@ 13685 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("scheme:/path")] @AT@ 13689 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 13689 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 13697 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList("scheme:/path") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("scheme:/path")] @AT@ 13705 @LENGTH@ 29
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("scheme:/path") @AT@ 13705 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["scheme:/path"] @TO@ MethodInvocation@@Arrays.asList("scheme:/path") @AT@ 13712 @LENGTH@ 22
------------------INS StringLiteral@@"scheme:/path" @TO@ SimpleName@@MethodName:asList:["scheme:/path"] @AT@ 13719 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13739 @LENGTH@ 46
------INS MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @TO@ ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @AT@ 13739 @LENGTH@ 45
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 13739 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 13746 @LENGTH@ 38
------------INS SimpleName@@redirectUris @TO@ SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @AT@ 13771 @LENGTH@ 12
---INS VariableDeclarationStatement@@String requestedRedirect="scheme:/path"; @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13788 @LENGTH@ 42
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String requestedRedirect="scheme:/path"; @AT@ 13788 @LENGTH@ 6
------INS VariableDeclarationFragment@@requestedRedirect="scheme:/path" @TO@ VariableDeclarationStatement@@String requestedRedirect="scheme:/path"; @AT@ 13795 @LENGTH@ 34
---------INS SimpleName@@requestedRedirect @TO@ VariableDeclarationFragment@@requestedRedirect="scheme:/path" @AT@ 13795 @LENGTH@ 17
---------INS StringLiteral@@"scheme:/path" @TO@ VariableDeclarationFragment@@requestedRedirect="scheme:/path" @AT@ 13815 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNoHost,  @AT@ 13833 @LENGTH@ 85
------INS MethodInvocation@@assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @AT@ 13833 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @TO@ MethodInvocation@@assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @AT@ 13833 @LENGTH@ 84
------------INS SimpleName@@requestedRedirect @TO@ SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @AT@ 13846 @LENGTH@ 17
------------INS MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @TO@ SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @AT@ 13865 @LENGTH@ 51
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 13865 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 13874 @LENGTH@ 42
------------------INS SimpleName@@requestedRedirect @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 13890 @LENGTH@ 17
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 13909 @LENGTH@ 6


UPD IfStatement@@if (!header.startsWith(AUTHENTICATION_SCHEME_BASIC) && !header.startsWith(AUTHENTICATION_SCHEME_BASIC.toLowerCase())) {  return null;} @TO@ if (!StringUtils.startsWithIgnoreCase(header,AUTHENTICATION_SCHEME_BASIC)) {  return null;} @AT@ 3151 @LENGTH@ 139
---DEL InfixExpression@@!header.startsWith(AUTHENTICATION_SCHEME_BASIC) && !header.startsWith(AUTHENTICATION_SCHEME_BASIC.toLowerCase()) @AT@ 3155 @LENGTH@ 112
------DEL PrefixExpression@@!header.startsWith(AUTHENTICATION_SCHEME_BASIC) @AT@ 3155 @LENGTH@ 47
------DEL Operator@@&& @AT@ 3202 @LENGTH@ 2
------DEL PrefixExpression@@!header.startsWith(AUTHENTICATION_SCHEME_BASIC.toLowerCase()) @AT@ 3206 @LENGTH@ 61
---------DEL Operator@@! @AT@ 3206 @LENGTH@ 1
---------DEL MethodInvocation@@header.startsWith(AUTHENTICATION_SCHEME_BASIC.toLowerCase()) @AT@ 3207 @LENGTH@ 60
------------DEL SimpleName@@Name:header @AT@ 3207 @LENGTH@ 6
------------DEL SimpleName@@MethodName:startsWith:[AUTHENTICATION_SCHEME_BASIC.toLowerCase()] @AT@ 3214 @LENGTH@ 53
---------------DEL MethodInvocation@@AUTHENTICATION_SCHEME_BASIC.toLowerCase() @AT@ 3225 @LENGTH@ 41
------------------DEL SimpleName@@Name:AUTHENTICATION_SCHEME_BASIC @AT@ 3225 @LENGTH@ 27
------------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 3253 @LENGTH@ 13
---INS PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,AUTHENTICATION_SCHEME_BASIC) @TO@ IfStatement@@if (!header.startsWith(AUTHENTICATION_SCHEME_BASIC) && !header.startsWith(AUTHENTICATION_SCHEME_BASIC.toLowerCase())) {  return null;} @AT@ 3200 @LENGTH@ 70
------MOV Operator@@! @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,AUTHENTICATION_SCHEME_BASIC) @AT@ 3155 @LENGTH@ 1
------MOV MethodInvocation@@header.startsWith(AUTHENTICATION_SCHEME_BASIC) @TO@ PrefixExpression@@!StringUtils.startsWithIgnoreCase(header,AUTHENTICATION_SCHEME_BASIC) @AT@ 3156 @LENGTH@ 46
---------UPD SimpleName@@Name:header @TO@ Name:StringUtils @AT@ 3156 @LENGTH@ 6
---------UPD SimpleName@@MethodName:startsWith:[AUTHENTICATION_SCHEME_BASIC] @TO@ MethodName:startsWithIgnoreCase:[header, AUTHENTICATION_SCHEME_BASIC] @AT@ 3163 @LENGTH@ 39
------------INS SimpleName@@header @TO@ SimpleName@@MethodName:startsWith:[AUTHENTICATION_SCHEME_BASIC] @AT@ 3234 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedKubernetesServiceAccountsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesServiceAccountsEndpointBuilder, [EndpointProducerBuilder] @AT@ 9145 @LENGTH@ 3175
---DEL Modifier@@static @AT@ 9152 @LENGTH@ 6


MOV MethodDeclaration@@public, static, Function<RouteDefinition,Boolean>, MethodName:filterByPattern, String include, String exclude,  @TO@ TypeDeclaration@@[@XmlTransient, public, final]RouteFilters, [Function<RouteDefinition,Boolean>] @AT@ 2279 @LENGTH@ 155


UPD TypeDeclaration@@[public]ClientCredentialsTokenEndpointFilter, AbstractAuthenticationProcessingFilter @TO@ [@Deprecated, public]ClientCredentialsTokenEndpointFilter, AbstractAuthenticationProcessingFilter @AT@ 2272 @LENGTH@ 4114
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientCredentialsTokenEndpointFilter, AbstractAuthenticationProcessingFilter @AT@ 2449 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, WebFluxSecurityConfiguration @TO@ [@Configuration, static]SubclassConfig, WebFluxSecurityConfiguration @AT@ 2145 @LENGTH@ 111
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 2145 @LENGTH@ 40
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, WebFluxSecurityConfiguration @AT@ 2148 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]JsonValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]JsonValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 1431 @LENGTH@ 3515
---DEL Modifier@@static @AT@ 1438 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 2064 @LENGTH@ 2337
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2071 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2076 @LENGTH@ 28


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2016 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2028 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2036 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2036 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2076 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2084 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2103 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.26.0.Final").dependency("org.kie:kie-dmn-api:7.26.0.Final").dependency("org.kie:kie-dmn-model:7.26.0.Final").dependency("org.kie:kie-internal:7.26.0.Final").dependency("org.drools:drools-compiler:7.26.0.Final").dependency("org.drools:drools-core:7.26.0.Final").unitTestExpectedNumber(0).build() @AT@ 1441 @LENGTH@ 300
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.kie:kie-api:7.26.0.Final").dependency("org.kie:kie-dmn-api:7.26.0.Final").dependency("org.kie:kie-dmn-model:7.26.0.Final").dependency("org.kie:kie-internal:7.26.0.Final").dependency("org.drools:drools-compiler:7.26.0.Final").dependency("org.drools:drools-core:7.26.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 292
------INS MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-model:7.26.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 276
---------INS StringLiteral@@"org.kie:kie-dmn-model:7.26.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-model:7.26.0.Final"] @AT@ 1687 @LENGTH@ 36
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-compiler:7.22.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-core:7.26.0.Final"] @AT@ 1448 @LENGTH@ 224
---------UPD StringLiteral@@"org.drools:drools-compiler:7.22.0.Final" @TO@ "org.drools:drools-core:7.26.0.Final" @AT@ 1630 @LENGTH@ 41
------INS MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-api:7.26.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 210
---------INS StringLiteral@@"org.kie:kie-dmn-api:7.26.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.kie:kie-dmn-api:7.26.0.Final"] @AT@ 1623 @LENGTH@ 34
------UPD MethodInvocation@@MethodName:dependency:["org.drools:drools-core:7.22.0.Final"] @TO@ MethodName:dependency:["org.drools:drools-compiler:7.26.0.Final"] @AT@ 1448 @LENGTH@ 153
---------UPD StringLiteral@@"org.drools:drools-core:7.22.0.Final" @TO@ "org.drools:drools-compiler:7.26.0.Final" @AT@ 1563 @LENGTH@ 37
------INS MethodInvocation@@MethodName:dependency:["org.kie:kie-api:7.26.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 146
---------INS StringLiteral@@"org.kie:kie-api:7.26.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.kie:kie-api:7.26.0.Final"] @AT@ 1563 @LENGTH@ 30
------INS MethodInvocation@@MethodName:dependency:["org.kie:kie-internal:7.26.0.Final"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelJbpmTest.class)).dependency("org.drools:drools-core:7.22.0.Final").dependency("org.drools:drools-compiler:7.22.0.Final").unitTestExpectedNumber(0).build() @AT@ 1448 @LENGTH@ 341
---------INS StringLiteral@@"org.kie:kie-internal:7.26.0.Final" @TO@ MethodInvocation@@MethodName:dependency:["org.kie:kie-internal:7.26.0.Final"] @AT@ 1753 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @TO@ TypeDeclaration@@[public]CamelMicroProfilePropertiesSourceTest, CamelTestSupport @AT@ 3201 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3201 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3208 @LENGTH@ 4
---INS SimpleName@@MethodName:testLoadFiltered @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3213 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3239 @LENGTH@ 9
---INS VariableDeclarationStatement@@PropertiesComponent pc=context.getComponent("properties",PropertiesComponent.class); @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3259 @LENGTH@ 87
------INS SimpleType@@PropertiesComponent @TO@ VariableDeclarationStatement@@PropertiesComponent pc=context.getComponent("properties",PropertiesComponent.class); @AT@ 3259 @LENGTH@ 19
------INS VariableDeclarationFragment@@pc=context.getComponent("properties",PropertiesComponent.class) @TO@ VariableDeclarationStatement@@PropertiesComponent pc=context.getComponent("properties",PropertiesComponent.class); @AT@ 3279 @LENGTH@ 66
---------INS SimpleName@@pc @TO@ VariableDeclarationFragment@@pc=context.getComponent("properties",PropertiesComponent.class) @AT@ 3279 @LENGTH@ 2
---------INS MethodInvocation@@context.getComponent("properties",PropertiesComponent.class) @TO@ VariableDeclarationFragment@@pc=context.getComponent("properties",PropertiesComponent.class) @AT@ 3284 @LENGTH@ 61
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getComponent("properties",PropertiesComponent.class) @AT@ 3284 @LENGTH@ 7
------------INS SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @TO@ MethodInvocation@@context.getComponent("properties",PropertiesComponent.class) @AT@ 3292 @LENGTH@ 53
---------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @AT@ 3305 @LENGTH@ 12
---------------INS TypeLiteral@@PropertiesComponent.class @TO@ SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @AT@ 3319 @LENGTH@ 25
---INS VariableDeclarationStatement@@Properties properties=pc.loadProperties(k -> k.length() > 2); @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3355 @LENGTH@ 62
------INS SimpleType@@Properties @TO@ VariableDeclarationStatement@@Properties properties=pc.loadProperties(k -> k.length() > 2); @AT@ 3355 @LENGTH@ 10
------INS VariableDeclarationFragment@@properties=pc.loadProperties(k -> k.length() > 2) @TO@ VariableDeclarationStatement@@Properties properties=pc.loadProperties(k -> k.length() > 2); @AT@ 3366 @LENGTH@ 50
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=pc.loadProperties(k -> k.length() > 2) @AT@ 3366 @LENGTH@ 10
---------INS MethodInvocation@@pc.loadProperties(k -> k.length() > 2) @TO@ VariableDeclarationFragment@@properties=pc.loadProperties(k -> k.length() > 2) @AT@ 3379 @LENGTH@ 37
------------INS SimpleName@@Name:pc @TO@ MethodInvocation@@pc.loadProperties(k -> k.length() > 2) @AT@ 3379 @LENGTH@ 2
------------INS SimpleName@@MethodName:loadProperties:[k -> k.length() > 2] @TO@ MethodInvocation@@pc.loadProperties(k -> k.length() > 2) @AT@ 3382 @LENGTH@ 34
---------------INS LambdaExpression@@k -> k.length() > 2 @TO@ SimpleName@@MethodName:loadProperties:[k -> k.length() > 2] @AT@ 3397 @LENGTH@ 18
------------------INS VariableDeclarationFragment@@k @TO@ LambdaExpression@@k -> k.length() > 2 @AT@ 3397 @LENGTH@ 1
---------------------INS SimpleName@@k @TO@ VariableDeclarationFragment@@k @AT@ 3397 @LENGTH@ 1
------------------INS InfixExpression@@k.length() > 2 @TO@ LambdaExpression@@k -> k.length() > 2 @AT@ 3402 @LENGTH@ 13
---------------------INS MethodInvocation@@k.length() @TO@ InfixExpression@@k.length() > 2 @AT@ 3402 @LENGTH@ 10
------------------------INS SimpleName@@Name:k @TO@ MethodInvocation@@k.length() @AT@ 3402 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@k.length() @AT@ 3404 @LENGTH@ 8
---------------------INS Operator@@> @TO@ InfixExpression@@k.length() > 2 @AT@ 3412 @LENGTH@ 1
---------------------INS NumberLiteral@@2 @TO@ InfixExpression@@k.length() > 2 @AT@ 3414 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties).hasSize(2) @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3427 @LENGTH@ 45
------INS MethodInvocation@@Assertions.assertThat(properties).hasSize(2) @TO@ ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties).hasSize(2) @AT@ 3427 @LENGTH@ 44
---------INS MethodInvocation@@MethodName:assertThat:[properties] @TO@ MethodInvocation@@Assertions.assertThat(properties).hasSize(2) @AT@ 3427 @LENGTH@ 33
------------INS SimpleName@@properties @TO@ MethodInvocation@@MethodName:assertThat:[properties] @AT@ 3449 @LENGTH@ 10
---------INS SimpleName@@Name:Assertions @TO@ MethodInvocation@@Assertions.assertThat(properties).hasSize(2) @AT@ 3427 @LENGTH@ 10
---------INS SimpleName@@MethodName:hasSize:[2] @TO@ MethodInvocation@@Assertions.assertThat(properties).hasSize(2) @AT@ 3461 @LENGTH@ 10
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:hasSize:[2] @AT@ 3469 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3481 @LENGTH@ 73
------INS MethodInvocation@@Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @TO@ ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @AT@ 3481 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:assertThat:[properties.get("start")] @TO@ MethodInvocation@@Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @AT@ 3481 @LENGTH@ 46
------------INS MethodInvocation@@properties.get("start") @TO@ MethodInvocation@@MethodName:assertThat:[properties.get("start")] @AT@ 3503 @LENGTH@ 23
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.get("start") @AT@ 3503 @LENGTH@ 10
---------------INS SimpleName@@MethodName:get:["start"] @TO@ MethodInvocation@@properties.get("start") @AT@ 3514 @LENGTH@ 12
------------------INS StringLiteral@@"start" @TO@ SimpleName@@MethodName:get:["start"] @AT@ 3518 @LENGTH@ 7
---------INS SimpleName@@Name:Assertions @TO@ MethodInvocation@@Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @AT@ 3481 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["direct:start"] @TO@ MethodInvocation@@Assertions.assertThat(properties.get("start")).isEqualTo("direct:start") @AT@ 3528 @LENGTH@ 25
------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:isEqualTo:["direct:start"] @AT@ 3538 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @TO@ MethodDeclaration@@public, void, MethodName:testLoadFiltered, Exception,  @AT@ 3563 @LENGTH@ 69
------INS MethodInvocation@@Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @TO@ ExpressionStatement@@MethodInvocation:Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @AT@ 3563 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:assertThat:[properties.get("my-mock")] @TO@ MethodInvocation@@Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @AT@ 3563 @LENGTH@ 48
------------INS MethodInvocation@@properties.get("my-mock") @TO@ MethodInvocation@@MethodName:assertThat:[properties.get("my-mock")] @AT@ 3585 @LENGTH@ 25
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.get("my-mock") @AT@ 3585 @LENGTH@ 10
---------------INS SimpleName@@MethodName:get:["my-mock"] @TO@ MethodInvocation@@properties.get("my-mock") @AT@ 3596 @LENGTH@ 14
------------------INS StringLiteral@@"my-mock" @TO@ SimpleName@@MethodName:get:["my-mock"] @AT@ 3600 @LENGTH@ 9
---------INS SimpleName@@Name:Assertions @TO@ MethodInvocation@@Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @AT@ 3563 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["result"] @TO@ MethodInvocation@@Assertions.assertThat(properties.get("my-mock")).isEqualTo("result") @AT@ 3612 @LENGTH@ 19
------------INS StringLiteral@@"result" @TO@ SimpleName@@MethodName:isEqualTo:["result"] @AT@ 3622 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]MQOperations,  @TO@ [static]MQOperations,  @AT@ 4384 @LENGTH@ 132
---DEL Modifier@@public @AT@ 4384 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthRequestFailedException, AccessDeniedException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuthRequestFailedException, AccessDeniedException @AT@ 790 @LENGTH@ 262
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthRequestFailedException, AccessDeniedException @AT@ 1039 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]JcloudsCommand,  @TO@ [static]JcloudsCommand,  @AT@ 23069 @LENGTH@ 69
---DEL Modifier@@public @AT@ 23069 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]CachePeekMode,  @TO@ [static]CachePeekMode,  @AT@ 31446 @LENGTH@ 93
---DEL Modifier@@public @AT@ 31446 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]XChangeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]XChangeEndpointBuilder, [EndpointProducerBuilder] @AT@ 1462 @LENGTH@ 3355
---DEL Modifier@@static @AT@ 1469 @LENGTH@ 6


INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ MethodDeclaration@@private, List<String>, MethodName:getKerberosNamedNodeList, Map<String,Object> hdfsSettings,  @AT@ 8529 @LENGTH@ 31
---INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 8536 @LENGTH@ 23
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 8536 @LENGTH@ 11
------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 8548 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public, final]OAuth2AccessTokenJackson2Deserializer, StdDeserializer<OAuth2AccessToken> @TO@ [@SuppressWarnings("serial"), @Deprecated, public, final]OAuth2AccessTokenJackson2Deserializer, StdDeserializer<OAuth2AccessToken> @AT@ 1768 @LENGTH@ 2365
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public, final]OAuth2AccessTokenJackson2Deserializer, StdDeserializer<OAuth2AccessToken> @AT@ 1974 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]KubernetesResourcesQuotaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesResourcesQuotaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1489 @LENGTH@ 7479
---DEL Modifier@@static @AT@ 1496 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MvelEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MvelEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 1918
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD MethodDeclaration@@Map<String,java.util.Optional<Integer>>, MethodName:entityAnnotatedCustomNamedProcedurePlus1IO2, @Param("arg") Integer arg,  @TO@ Map<String,Integer>, MethodName:entityAnnotatedCustomNamedProcedurePlus1IO2, @Param("arg") Integer arg,  @AT@ 11733 @LENGTH@ 71
---UPD ParameterizedType@@Map<String,java.util.Optional<Integer>> @TO@ Map<String,Integer> @AT@ 11692 @LENGTH@ 40
------DEL ParameterizedType@@java.util.Optional<Integer> @AT@ 11704 @LENGTH@ 27
---------DEL SimpleType@@java.util.Optional @AT@ 11704 @LENGTH@ 18
------MOV SimpleType@@Integer @TO@ ParameterizedType@@Map<String,java.util.Optional<Integer>> @AT@ 11723 @LENGTH@ 7


UPD IfStatement@@if (roles == null) {  roles=new HashSet<>();  Collection<? extends GrantedAuthority> userAuthorities=authentication.getAuthorities();  if (roleHierarchy != null) {    userAuthorities=roleHierarchy.getReachableGrantedAuthorities(userAuthorities);  }  roles=AuthorityUtils.authorityListToSet(userAuthorities);} @TO@ if (roles == null) {  Collection<? extends GrantedAuthority> userAuthorities=authentication.getAuthorities();  if (roleHierarchy != null) {    userAuthorities=roleHierarchy.getReachableGrantedAuthorities(userAuthorities);  }  roles=AuthorityUtils.authorityListToSet(userAuthorities);} @AT@ 4705 @LENGTH@ 345
---UPD Block@@ThenBody:{  roles=new HashSet<>();  Collection<? extends GrantedAuthority> userAuthorities=authentication.getAuthorities();  if (roleHierarchy != null) {    userAuthorities=roleHierarchy.getReachableGrantedAuthorities(userAuthorities);  }  roles=AuthorityUtils.authorityListToSet(userAuthorities);} @TO@ ThenBody:{  Collection<? extends GrantedAuthority> userAuthorities=authentication.getAuthorities();  if (roleHierarchy != null) {    userAuthorities=roleHierarchy.getReachableGrantedAuthorities(userAuthorities);  }  roles=AuthorityUtils.authorityListToSet(userAuthorities);} @AT@ 4724 @LENGTH@ 326
------DEL ExpressionStatement@@Assignment:roles=new HashSet<>() @AT@ 4729 @LENGTH@ 24
---------DEL Assignment@@roles=new HashSet<>() @AT@ 4729 @LENGTH@ 23
------------DEL SimpleName@@roles @AT@ 4729 @LENGTH@ 5
------------DEL Operator@@= @AT@ 4734 @LENGTH@ 1
------------DEL ClassInstanceCreation@@HashSet<>[] @AT@ 4737 @LENGTH@ 15
---------------DEL New@@new @AT@ 4737 @LENGTH@ 3
---------------DEL ParameterizedType@@HashSet<> @AT@ 4741 @LENGTH@ 9
------------------DEL SimpleType@@HashSet @AT@ 4741 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:this.scopes(Arrays.stream(scope).collect(Collectors.toCollection(LinkedHashSet::new))) @TO@ MethodInvocation:this.scopes(toLinkedHashSet(scope)) @AT@ 8299 @LENGTH@ 100
---UPD MethodInvocation@@this.scopes(Arrays.stream(scope).collect(Collectors.toCollection(LinkedHashSet::new))) @TO@ this.scopes(toLinkedHashSet(scope)) @AT@ 8306 @LENGTH@ 92
------UPD SimpleName@@MethodName:scopes:[Arrays.stream(scope).collect(Collectors.toCollection(LinkedHashSet::new))] @TO@ MethodName:scopes:[toLinkedHashSet(scope)] @AT@ 8311 @LENGTH@ 87
---------UPD MethodInvocation@@Arrays.stream(scope).collect(Collectors.toCollection(LinkedHashSet::new)) @TO@ toLinkedHashSet(scope) @AT@ 8318 @LENGTH@ 79
------------DEL MethodInvocation@@MethodName:stream:[scope] @AT@ 8318 @LENGTH@ 20
---------------DEL SimpleName@@scope @AT@ 8332 @LENGTH@ 5
------------DEL SimpleName@@Name:Arrays @AT@ 8318 @LENGTH@ 6
------------UPD SimpleName@@MethodName:collect:[Collectors.toCollection(LinkedHashSet::new)] @TO@ MethodName:toLinkedHashSet:[scope] @AT@ 8339 @LENGTH@ 58
---------------INS SimpleName@@scope @TO@ SimpleName@@MethodName:collect:[Collectors.toCollection(LinkedHashSet::new)] @AT@ 8273 @LENGTH@ 5
---------------DEL MethodInvocation@@Collectors.toCollection(LinkedHashSet::new) @AT@ 8353 @LENGTH@ 43
------------------DEL SimpleName@@Name:Collectors @AT@ 8353 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:toCollection:[LinkedHashSet::new] @AT@ 8364 @LENGTH@ 32


UPD TryStatement@@try {  if (commitRenamer != null) {    Exchange copy=ExchangeHelper.createCopy(exchange,true);    FileEndpoint fe=null;    if (endpoint instanceof FileEndpoint) {      fe=(FileEndpoint)endpoint;      file.bindToExchange(copy,fe.isProbeContentType());    } else {      file.bindToExchange(copy);    }    copy.getIn().setMessageId(exchange.getIn().getMessageId());    copy.setExchangeId(exchange.getExchangeId());    GenericFile<T> newName=commitRenamer.renameFile(copy,file);    renameFile(operations,file,newName);  }}  finally {  super.commit(operations,endpoint,exchange,file);} @TO@ try {  operations.releaseRetrievedFileResources(exchange);  if (commitRenamer != null) {    Exchange copy=ExchangeHelper.createCopy(exchange,true);    FileEndpoint fe=null;    if (endpoint instanceof FileEndpoint) {      fe=(FileEndpoint)endpoint;      file.bindToExchange(copy,fe.isProbeContentType());    } else {      file.bindToExchange(copy);    }    copy.getIn().setMessageId(exchange.getIn().getMessageId());    copy.setExchangeId(exchange.getExchangeId());    GenericFile<T> newName=commitRenamer.renameFile(copy,file);    renameFile(operations,file,newName);  }}  finally {  deleteLocalWorkFile(exchange);  if (exclusiveReadLockStrategy != null) {    exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);  }} @AT@ 4040 @LENGTH@ 1006
---INS ExpressionStatement@@MethodInvocation:operations.releaseRetrievedFileResources(exchange) @TO@ TryStatement@@try {  if (commitRenamer != null) {    Exchange copy=ExchangeHelper.createCopy(exchange,true);    FileEndpoint fe=null;    if (endpoint instanceof FileEndpoint) {      fe=(FileEndpoint)endpoint;      file.bindToExchange(copy,fe.isProbeContentType());    } else {      file.bindToExchange(copy);    }    copy.getIn().setMessageId(exchange.getIn().getMessageId());    copy.setExchangeId(exchange.getExchangeId());    GenericFile<T> newName=commitRenamer.renameFile(copy,file);    renameFile(operations,file,newName);  }}  finally {  super.commit(operations,endpoint,exchange,file);} @AT@ 4058 @LENGTH@ 51
------INS MethodInvocation@@operations.releaseRetrievedFileResources(exchange) @TO@ ExpressionStatement@@MethodInvocation:operations.releaseRetrievedFileResources(exchange) @AT@ 4058 @LENGTH@ 50
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.releaseRetrievedFileResources(exchange) @AT@ 4058 @LENGTH@ 10
---------INS SimpleName@@MethodName:releaseRetrievedFileResources:[exchange] @TO@ MethodInvocation@@operations.releaseRetrievedFileResources(exchange) @AT@ 4069 @LENGTH@ 39
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:releaseRetrievedFileResources:[exchange] @AT@ 4099 @LENGTH@ 8
---DEL Block@@FinallyBody:{  super.commit(operations,endpoint,exchange,file);} @AT@ 4938 @LENGTH@ 108
---INS Block@@FinallyBody:{  deleteLocalWorkFile(exchange);  if (exclusiveReadLockStrategy != null) {    exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);  }} @TO@ TryStatement@@try {  if (commitRenamer != null) {    Exchange copy=ExchangeHelper.createCopy(exchange,true);    FileEndpoint fe=null;    if (endpoint instanceof FileEndpoint) {      fe=(FileEndpoint)endpoint;      file.bindToExchange(copy,fe.isProbeContentType());    } else {      file.bindToExchange(copy);    }    copy.getIn().setMessageId(exchange.getIn().getMessageId());    copy.setExchangeId(exchange.getExchangeId());    GenericFile<T> newName=commitRenamer.renameFile(copy,file);    renameFile(operations,file,newName);  }}  finally {  super.commit(operations,endpoint,exchange,file);} @AT@ 5003 @LENGTH@ 263
------INS ExpressionStatement@@MethodInvocation:deleteLocalWorkFile(exchange) @TO@ Block@@FinallyBody:{  deleteLocalWorkFile(exchange);  if (exclusiveReadLockStrategy != null) {    exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);  }} @AT@ 5017 @LENGTH@ 30
---------INS MethodInvocation@@deleteLocalWorkFile(exchange) @TO@ ExpressionStatement@@MethodInvocation:deleteLocalWorkFile(exchange) @AT@ 5017 @LENGTH@ 29
------------INS SimpleName@@MethodName:deleteLocalWorkFile:[exchange] @TO@ MethodInvocation@@deleteLocalWorkFile(exchange) @AT@ 5017 @LENGTH@ 29
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:deleteLocalWorkFile:[exchange] @AT@ 5037 @LENGTH@ 8
------INS IfStatement@@if (exclusiveReadLockStrategy != null) {  exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);} @TO@ Block@@FinallyBody:{  deleteLocalWorkFile(exchange);  if (exclusiveReadLockStrategy != null) {    exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);  }} @AT@ 5098 @LENGTH@ 158
---------INS InfixExpression@@exclusiveReadLockStrategy != null @TO@ IfStatement@@if (exclusiveReadLockStrategy != null) {  exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);} @AT@ 5102 @LENGTH@ 33
------------INS SimpleName@@exclusiveReadLockStrategy @TO@ InfixExpression@@exclusiveReadLockStrategy != null @AT@ 5102 @LENGTH@ 25
------------INS Operator@@!= @TO@ InfixExpression@@exclusiveReadLockStrategy != null @AT@ 5127 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@exclusiveReadLockStrategy != null @AT@ 5131 @LENGTH@ 4
---------INS Block@@ThenBody:{  exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);} @TO@ IfStatement@@if (exclusiveReadLockStrategy != null) {  exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);} @AT@ 5137 @LENGTH@ 119
------------MOV ExpressionStatement@@SuperMethodInvocation:super.commit(operations,endpoint,exchange,file) @TO@ Block@@ThenBody:{  exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange);} @AT@ 4985 @LENGTH@ 51
---------------DEL SuperMethodInvocation@@super.commit(operations,endpoint,exchange,file) @AT@ 4985 @LENGTH@ 50
------------------DEL SimpleName@@MethodName:commit:[operations, endpoint, exchange, file] @AT@ 4991 @LENGTH@ 6
------------------DEL SimpleName@@operations @AT@ 4998 @LENGTH@ 10
------------------DEL SimpleName@@endpoint @AT@ 5010 @LENGTH@ 8
------------------DEL SimpleName@@exchange @AT@ 5020 @LENGTH@ 8
------------------DEL SimpleName@@file @AT@ 5030 @LENGTH@ 4
---------------INS MethodInvocation@@exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange) @TO@ ExpressionStatement@@SuperMethodInvocation:super.commit(operations,endpoint,exchange,file) @AT@ 5155 @LENGTH@ 86
------------------INS SimpleName@@Name:exclusiveReadLockStrategy @TO@ MethodInvocation@@exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange) @AT@ 5155 @LENGTH@ 25
------------------INS SimpleName@@MethodName:releaseExclusiveReadLockOnCommit:[operations, file, exchange] @TO@ MethodInvocation@@exclusiveReadLockStrategy.releaseExclusiveReadLockOnCommit(operations,file,exchange) @AT@ 5181 @LENGTH@ 60
---------------------INS SimpleName@@operations @TO@ SimpleName@@MethodName:releaseExclusiveReadLockOnCommit:[operations, file, exchange] @AT@ 5214 @LENGTH@ 10
---------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:releaseExclusiveReadLockOnCommit:[operations, file, exchange] @AT@ 5226 @LENGTH@ 4
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:releaseExclusiveReadLockOnCommit:[operations, file, exchange] @AT@ 5232 @LENGTH@ 8


UPD VariableDeclarationStatement@@Task<? extends Serializable> oldTask=ctx.getOpTaskMap().get(reducer); @TO@ Task<?> oldTask=ctx.getOpTaskMap().get(reducer); @AT@ 2991 @LENGTH@ 71
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2991 @LENGTH@ 28


INS MethodDeclaration@@public, boolean, MethodName:isInternal,  @TO@ TypeDeclaration@@[static]AggregationField, [Field] @AT@ 7083 @LENGTH@ 104
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isInternal,  @AT@ 7083 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isInternal,  @AT@ 7090 @LENGTH@ 7
---INS SimpleName@@MethodName:isInternal @TO@ MethodDeclaration@@public, boolean, MethodName:isInternal,  @AT@ 7098 @LENGTH@ 10
---INS ReturnStatement@@InfixExpression:getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @TO@ MethodDeclaration@@public, boolean, MethodName:isInternal,  @AT@ 7116 @LENGTH@ 67
------INS InfixExpression@@getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @TO@ ReturnStatement@@InfixExpression:getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @AT@ 7123 @LENGTH@ 59
---------INS MethodInvocation@@getRaw().endsWith("$$this") @TO@ InfixExpression@@getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @AT@ 7123 @LENGTH@ 27
------------INS MethodInvocation@@MethodName:getRaw:[] @TO@ MethodInvocation@@getRaw().endsWith("$$this") @AT@ 7123 @LENGTH@ 8
------------INS SimpleName@@MethodName:endsWith:["$$this"] @TO@ MethodInvocation@@getRaw().endsWith("$$this") @AT@ 7132 @LENGTH@ 18
---------------INS StringLiteral@@"$$this" @TO@ SimpleName@@MethodName:endsWith:["$$this"] @AT@ 7141 @LENGTH@ 8
---------INS Operator@@|| @TO@ InfixExpression@@getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @AT@ 7150 @LENGTH@ 2
---------INS MethodInvocation@@getRaw().endsWith("$$value") @TO@ InfixExpression@@getRaw().endsWith("$$this") || getRaw().endsWith("$$value") @AT@ 7154 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:getRaw:[] @TO@ MethodInvocation@@getRaw().endsWith("$$value") @AT@ 7154 @LENGTH@ 8
------------INS SimpleName@@MethodName:endsWith:["$$value"] @TO@ MethodInvocation@@getRaw().endsWith("$$value") @AT@ 7163 @LENGTH@ 19
---------------INS StringLiteral@@"$$value" @TO@ SimpleName@@MethodName:endsWith:["$$value"] @AT@ 7172 @LENGTH@ 9


UPD TypeDeclaration@@[public]DefaultAccessTokenConverter, [AccessTokenConverter] @TO@ [@Deprecated, public]DefaultAccessTokenConverter, [AccessTokenConverter] @AT@ 1370 @LENGTH@ 5427
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultAccessTokenConverter, [AccessTokenConverter] @AT@ 1547 @LENGTH@ 11


UPD IfStatement@@if (targetType.isInterface()) {  ProjectionInformation projectionInformation=projectionFactory.getProjectionInformation(targetType);  if (projectionInformation.isClosed()) {    projectionInformation.getInputProperties().forEach(it -> projectedFields.append(it.getName(),1));  }} else {  mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @TO@ if (targetType.isInterface()) {  ProjectionInformation projectionInformation=projectionFactory.getProjectionInformation(targetType);  if (projectionInformation.isClosed()) {    projectionInformation.getInputProperties().forEach(it -> projectedFields.append(it.getName(),1));  }} else {  MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType);  if (entity != null) {    entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));  }} @AT@ 2406 @LENGTH@ 489
---INS Block@@ElseBody:{  MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType);  if (entity != null) {    entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));  }} @TO@ IfStatement@@if (targetType.isInterface()) {  ProjectionInformation projectionInformation=projectionFactory.getProjectionInformation(targetType);  if (projectionInformation.isClosed()) {    projectionInformation.getInputProperties().forEach(it -> projectedFields.append(it.getName(),1));  }} else {  mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @AT@ 2705 @LENGTH@ 259
------INS VariableDeclarationStatement@@MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType); @TO@ Block@@ElseBody:{  MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType);  if (entity != null) {    entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));  }} @AT@ 2711 @LENGTH@ 81
---------INS ParameterizedType@@MongoPersistentEntity<?> @TO@ VariableDeclarationStatement@@MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType); @AT@ 2711 @LENGTH@ 24
------------INS SimpleType@@MongoPersistentEntity @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 2711 @LENGTH@ 21
------------INS WildcardType@@? @TO@ ParameterizedType@@MongoPersistentEntity<?> @AT@ 2733 @LENGTH@ 1
---------INS VariableDeclarationFragment@@entity=mappingContext.getPersistentEntity(targetType) @TO@ VariableDeclarationStatement@@MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType); @AT@ 2736 @LENGTH@ 55
------------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=mappingContext.getPersistentEntity(targetType) @AT@ 2736 @LENGTH@ 6
------------INS MethodInvocation@@mappingContext.getPersistentEntity(targetType) @TO@ VariableDeclarationFragment@@entity=mappingContext.getPersistentEntity(targetType) @AT@ 2745 @LENGTH@ 46
---------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.getPersistentEntity(targetType) @AT@ 2745 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getPersistentEntity:[targetType] @TO@ MethodInvocation@@mappingContext.getPersistentEntity(targetType) @AT@ 2760 @LENGTH@ 31
------------------INS SimpleName@@targetType @TO@ SimpleName@@MethodName:getPersistentEntity:[targetType] @AT@ 2780 @LENGTH@ 10
------INS IfStatement@@if (entity != null) {  entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @TO@ Block@@ElseBody:{  MongoPersistentEntity<?> entity=mappingContext.getPersistentEntity(targetType);  if (entity != null) {    entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));  }} @AT@ 2796 @LENGTH@ 164
---------MOV Block@@ElseBody:{  mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @TO@ IfStatement@@if (entity != null) {  entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @AT@ 2705 @LENGTH@ 190
------------UPD ExpressionStatement@@MethodInvocation:mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1)) @TO@ MethodInvocation:entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1)) @AT@ 2710 @LENGTH@ 181
---------------UPD MethodInvocation@@mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1)) @TO@ entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1)) @AT@ 2710 @LENGTH@ 180
------------------DEL MethodInvocation@@MethodName:getRequiredPersistentEntity:[targetType] @AT@ 2710 @LENGTH@ 54
---------------------DEL SimpleName@@targetType @AT@ 2753 @LENGTH@ 10
------------------UPD SimpleName@@Name:mappingContext @TO@ Name:entity @AT@ 2710 @LENGTH@ 14
---------INS InfixExpression@@entity != null @TO@ IfStatement@@if (entity != null) {  entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @AT@ 2799 @LENGTH@ 14
------------INS SimpleName@@entity @TO@ InfixExpression@@entity != null @AT@ 2799 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@entity != null @AT@ 2805 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@entity != null @AT@ 2809 @LENGTH@ 4
---UPD Block@@ElseBody:{  mappingContext.getRequiredPersistentEntity(targetType).doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @TO@ ThenBody:{  entity.doWithProperties((SimplePropertyHandler)persistentProperty -> projectedFields.append(persistentProperty.getName(),1));} @AT@ 2705 @LENGTH@ 190


UPD TypeDeclaration@@[public]CompositeTokenGranter, [TokenGranter] @TO@ [@Deprecated, public]CompositeTokenGranter, [TokenGranter] @AT@ 833 @LENGTH@ 710
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]CompositeTokenGranter, [TokenGranter] @AT@ 1011 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]IgniteCacheOperation,  @TO@ [static]IgniteCacheOperation,  @AT@ 31677 @LENGTH@ 104
---DEL Modifier@@public @AT@ 31677 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThatIllegalStateException().isThrownBy(() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)))).withMessage("There is already an ongoing Spring transaction for 'boom', but you request the default database") @TO@ MethodInvocation:assertThatIllegalStateException().isThrownBy(() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)))).withMessage("There is already an ongoing Spring transaction for 'boom', but you request the default database") @AT@ 5170 @LENGTH@ 381
---UPD MethodInvocation@@assertThatIllegalStateException().isThrownBy(() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)))).withMessage("There is already an ongoing Spring transaction for 'boom', but you request the default database") @TO@ assertThatIllegalStateException().isThrownBy(() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)))).withMessage("There is already an ongoing Spring transaction for 'boom', but you request the default database") @AT@ 5170 @LENGTH@ 380
------UPD MethodInvocation@@MethodName:isThrownBy:[() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)))] @TO@ MethodName:isThrownBy:[() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)))] @AT@ 5170 @LENGTH@ 265
---------UPD LambdaExpression@@() -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null))) @TO@ () -> otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null))) @AT@ 5219 @LENGTH@ 215
------------UPD MethodInvocation@@otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null))) @TO@ otherTransactionTemplate.execute(tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null))) @AT@ 5225 @LENGTH@ 209
---------------UPD SimpleName@@MethodName:execute:[tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null))] @TO@ MethodName:execute:[tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null))] @AT@ 5250 @LENGTH@ 184
------------------UPD LambdaExpression@@tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)) @TO@ tx -> repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)) @AT@ 5263 @LENGTH@ 170
---------------------UPD MethodInvocation@@repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)) @TO@ repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)) @AT@ 5269 @LENGTH@ 164
------------------------UPD SimpleName@@MethodName:save:[new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)] @TO@ MethodName:save:[new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)] @AT@ 5280 @LENGTH@ 153
---------------------------UPD ClassInstanceCreation@@PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null] @TO@ PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null, null] @AT@ 5285 @LENGTH@ 147
------------------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null] @AT@ 5433 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]MicrometerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MicrometerEndpointBuilder, [EndpointProducerBuilder] @AT@ 1432 @LENGTH@ 3232
---DEL Modifier@@static @AT@ 1439 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]ServerHttpSecurityTests,  @AT@ 19798 @LENGTH@ 1045
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 19798 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 19805 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 19810 @LENGTH@ 59
---INS VariableDeclarationStatement@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 19876 @LENGTH@ 147
------INS ParameterizedType@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> @TO@ VariableDeclarationStatement@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class); @AT@ 19876 @LENGTH@ 64
---------INS SimpleType@@ServerAuthorizationRequestRepository @TO@ ParameterizedType@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> @AT@ 19876 @LENGTH@ 36
---------INS SimpleType@@OAuth2AuthorizationRequest @TO@ ParameterizedType@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> @AT@ 19913 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class) @TO@ VariableDeclarationStatement@@ServerAuthorizationRequestRepository<OAuth2AuthorizationRequest> authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class); @AT@ 19941 @LENGTH@ 81
---------INS SimpleName@@authorizationRequestRepository @TO@ VariableDeclarationFragment@@authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class) @AT@ 19941 @LENGTH@ 30
---------INS MethodInvocation@@mock(ServerAuthorizationRequestRepository.class) @TO@ VariableDeclarationFragment@@authorizationRequestRepository=mock(ServerAuthorizationRequestRepository.class) @AT@ 19974 @LENGTH@ 48
------------INS SimpleName@@MethodName:mock:[ServerAuthorizationRequestRepository.class] @TO@ MethodInvocation@@mock(ServerAuthorizationRequestRepository.class) @AT@ 19974 @LENGTH@ 48
---------------INS TypeLiteral@@ServerAuthorizationRequestRepository.class @TO@ SimpleName@@MethodName:mock:[ServerAuthorizationRequestRepository.class] @AT@ 19979 @LENGTH@ 42
---INS VariableDeclarationStatement@@ReactiveClientRegistrationRepository clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class); @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20026 @LENGTH@ 117
------INS SimpleType@@ReactiveClientRegistrationRepository @TO@ VariableDeclarationStatement@@ReactiveClientRegistrationRepository clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class); @AT@ 20026 @LENGTH@ 36
------INS VariableDeclarationFragment@@clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class) @TO@ VariableDeclarationStatement@@ReactiveClientRegistrationRepository clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class); @AT@ 20063 @LENGTH@ 79
---------INS SimpleName@@clientRegistrationRepository @TO@ VariableDeclarationFragment@@clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class) @AT@ 20063 @LENGTH@ 28
---------INS MethodInvocation@@mock(ReactiveClientRegistrationRepository.class) @TO@ VariableDeclarationFragment@@clientRegistrationRepository=mock(ReactiveClientRegistrationRepository.class) @AT@ 20094 @LENGTH@ 48
------------INS SimpleName@@MethodName:mock:[ReactiveClientRegistrationRepository.class] @TO@ MethodInvocation@@mock(ReactiveClientRegistrationRepository.class) @AT@ 20094 @LENGTH@ 48
---------------INS TypeLiteral@@ReactiveClientRegistrationRepository.class @TO@ SimpleName@@MethodName:mock:[ReactiveClientRegistrationRepository.class] @AT@ 20099 @LENGTH@ 42
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().build(); @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20147 @LENGTH@ 100
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().build(); @AT@ 20147 @LENGTH@ 26
------INS VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest authorizationRequest=TestOAuth2AuthorizationRequests.request().build(); @AT@ 20174 @LENGTH@ 72
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().build() @AT@ 20174 @LENGTH@ 20
---------INS MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @TO@ VariableDeclarationFragment@@authorizationRequest=TestOAuth2AuthorizationRequests.request().build() @AT@ 20197 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:request:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 20197 @LENGTH@ 41
------------INS SimpleName@@Name:TestOAuth2AuthorizationRequests @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 20197 @LENGTH@ 31
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 20239 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:when(authorizationRequestRepository.removeAuthorizationRequest(any())).thenReturn(Mono.just(authorizationRequest)) @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20251 @LENGTH@ 115
------INS MethodInvocation@@when(authorizationRequestRepository.removeAuthorizationRequest(any())).thenReturn(Mono.just(authorizationRequest)) @TO@ ExpressionStatement@@MethodInvocation:when(authorizationRequestRepository.removeAuthorizationRequest(any())).thenReturn(Mono.just(authorizationRequest)) @AT@ 20251 @LENGTH@ 114
---------INS MethodInvocation@@MethodName:when:[authorizationRequestRepository.removeAuthorizationRequest(any())] @TO@ MethodInvocation@@when(authorizationRequestRepository.removeAuthorizationRequest(any())).thenReturn(Mono.just(authorizationRequest)) @AT@ 20251 @LENGTH@ 70
------------INS MethodInvocation@@authorizationRequestRepository.removeAuthorizationRequest(any()) @TO@ MethodInvocation@@MethodName:when:[authorizationRequestRepository.removeAuthorizationRequest(any())] @AT@ 20256 @LENGTH@ 64
---------------INS SimpleName@@Name:authorizationRequestRepository @TO@ MethodInvocation@@authorizationRequestRepository.removeAuthorizationRequest(any()) @AT@ 20256 @LENGTH@ 30
---------------INS SimpleName@@MethodName:removeAuthorizationRequest:[any()] @TO@ MethodInvocation@@authorizationRequestRepository.removeAuthorizationRequest(any()) @AT@ 20287 @LENGTH@ 33
------------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[any()] @AT@ 20314 @LENGTH@ 5
---------INS SimpleName@@MethodName:thenReturn:[Mono.just(authorizationRequest)] @TO@ MethodInvocation@@when(authorizationRequestRepository.removeAuthorizationRequest(any())).thenReturn(Mono.just(authorizationRequest)) @AT@ 20322 @LENGTH@ 43
------------INS MethodInvocation@@Mono.just(authorizationRequest) @TO@ SimpleName@@MethodName:thenReturn:[Mono.just(authorizationRequest)] @AT@ 20333 @LENGTH@ 31
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(authorizationRequest) @AT@ 20333 @LENGTH@ 4
---------------INS SimpleName@@MethodName:just:[authorizationRequest] @TO@ MethodInvocation@@Mono.just(authorizationRequest) @AT@ 20338 @LENGTH@ 26
------------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:just:[authorizationRequest] @AT@ 20343 @LENGTH@ 20
---INS VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build(); @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20370 @LENGTH@ 230
------INS SimpleType@@SecurityWebFilterChain @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build(); @AT@ 20370 @LENGTH@ 22
------INS VariableDeclarationFragment@@securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @TO@ VariableDeclarationStatement@@SecurityWebFilterChain securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build(); @AT@ 20393 @LENGTH@ 206
---------INS SimpleName@@securityFilterChain @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20393 @LENGTH@ 19
---------INS MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @TO@ VariableDeclarationFragment@@securityFilterChain=this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 184
------------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 171
------------INS MethodInvocation@@MethodName:authorizationRequestRepository:[authorizationRequestRepository] @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 160
---------------INS SimpleName@@authorizationRequestRepository @TO@ MethodInvocation@@MethodName:authorizationRequestRepository:[authorizationRequestRepository] @AT@ 20544 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:clientRegistrationRepository:[clientRegistrationRepository] @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 92
---------------INS SimpleName@@clientRegistrationRepository @TO@ MethodInvocation@@MethodName:clientRegistrationRepository:[clientRegistrationRepository] @AT@ 20478 @LENGTH@ 28
------------INS MethodInvocation@@MethodName:oauth2Login:[] @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 28
------------INS FieldAccess@@this.http @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20415 @LENGTH@ 9
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.http @AT@ 20415 @LENGTH@ 4
---------------INS SimpleName@@http @TO@ FieldAccess@@this.http @AT@ 20420 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@this.http.oauth2Login().clientRegistrationRepository(clientRegistrationRepository).authorizationRequestRepository(authorizationRequestRepository).and().build() @AT@ 20592 @LENGTH@ 7
---INS VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build(); @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20604 @LENGTH@ 90
------INS SimpleType@@WebTestClient @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build(); @AT@ 20604 @LENGTH@ 13
------INS VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @TO@ VariableDeclarationStatement@@WebTestClient client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build(); @AT@ 20618 @LENGTH@ 75
---------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @AT@ 20618 @LENGTH@ 6
---------INS MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @TO@ VariableDeclarationFragment@@client=WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @AT@ 20627 @LENGTH@ 66
------------INS MethodInvocation@@MethodName:bindToWebFilters:[securityFilterChain] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @AT@ 20627 @LENGTH@ 58
---------------INS SimpleName@@securityFilterChain @TO@ MethodInvocation@@MethodName:bindToWebFilters:[securityFilterChain] @AT@ 20665 @LENGTH@ 19
------------INS SimpleName@@Name:WebTestClientBuilder @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @AT@ 20627 @LENGTH@ 20
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@WebTestClientBuilder.bindToWebFilters(securityFilterChain).build() @AT@ 20686 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:client.get().uri("/login/oauth2/code/registration-id").exchange() @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20697 @LENGTH@ 66
------INS MethodInvocation@@client.get().uri("/login/oauth2/code/registration-id").exchange() @TO@ ExpressionStatement@@MethodInvocation:client.get().uri("/login/oauth2/code/registration-id").exchange() @AT@ 20697 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:uri:["/login/oauth2/code/registration-id"] @TO@ MethodInvocation@@client.get().uri("/login/oauth2/code/registration-id").exchange() @AT@ 20697 @LENGTH@ 54
------------INS StringLiteral@@"/login/oauth2/code/registration-id" @TO@ MethodInvocation@@MethodName:uri:["/login/oauth2/code/registration-id"] @AT@ 20714 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@client.get().uri("/login/oauth2/code/registration-id").exchange() @AT@ 20697 @LENGTH@ 12
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.get().uri("/login/oauth2/code/registration-id").exchange() @AT@ 20697 @LENGTH@ 6
---------INS SimpleName@@MethodName:exchange:[] @TO@ MethodInvocation@@client.get().uri("/login/oauth2/code/registration-id").exchange() @AT@ 20752 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:verify(authorizationRequestRepository).removeAuthorizationRequest(any()) @TO@ MethodDeclaration@@public, void, MethodName:shouldConfigureAuthorizationRequestRepositoryForOAuth2Login,  @AT@ 20767 @LENGTH@ 73
------INS MethodInvocation@@verify(authorizationRequestRepository).removeAuthorizationRequest(any()) @TO@ ExpressionStatement@@MethodInvocation:verify(authorizationRequestRepository).removeAuthorizationRequest(any()) @AT@ 20767 @LENGTH@ 72
---------INS MethodInvocation@@MethodName:verify:[authorizationRequestRepository] @TO@ MethodInvocation@@verify(authorizationRequestRepository).removeAuthorizationRequest(any()) @AT@ 20767 @LENGTH@ 38
------------INS SimpleName@@authorizationRequestRepository @TO@ MethodInvocation@@MethodName:verify:[authorizationRequestRepository] @AT@ 20774 @LENGTH@ 30
---------INS SimpleName@@MethodName:removeAuthorizationRequest:[any()] @TO@ MethodInvocation@@verify(authorizationRequestRepository).removeAuthorizationRequest(any()) @AT@ 20806 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:removeAuthorizationRequest:[any()] @AT@ 20833 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerCredentials, [Serializable] @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ConsumerCredentials, [Serializable] @AT@ 764 @LENGTH@ 1302
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerCredentials, [Serializable] @AT@ 1013 @LENGTH@ 11


INS MethodDeclaration@@public, int, MethodName:getPort,  @TO@ TypeDeclaration@@[@Deprecated, public]ApacheDSContainer, [InitializingBean, DisposableBean, Lifecycle, ApplicationContextAware] @AT@ 7207 @LENGTH@ 45
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getPort,  @AT@ 7207 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getPort,  @AT@ 7214 @LENGTH@ 3
---INS SimpleName@@MethodName:getPort @TO@ MethodDeclaration@@public, int, MethodName:getPort,  @AT@ 7218 @LENGTH@ 7
---INS ReturnStatement@@FieldAccess:this.port @TO@ MethodDeclaration@@public, int, MethodName:getPort,  @AT@ 7232 @LENGTH@ 17
------INS FieldAccess@@this.port @TO@ ReturnStatement@@FieldAccess:this.port @AT@ 7239 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ FieldAccess@@this.port @AT@ 7239 @LENGTH@ 4
---------INS SimpleName@@port @TO@ FieldAccess@@this.port @AT@ 7244 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @TO@ Assignment:ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld'],"+ " n.anInstant = datetime('2019-09-26T20:34:23Z')"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @AT@ 6854 @LENGTH@ 993
---UPD Assignment@@ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @TO@ ID_OF_ADDITIONAL_TYPES_NODE=w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld'],"+ " n.anInstant = datetime('2019-09-26T20:34:23Z')"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @AT@ 6854 @LENGTH@ 992
------UPD MethodInvocation@@w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @TO@ w.run("CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld'],"+ " n.anInstant = datetime('2019-09-26T20:34:23Z')"+ " RETURN id(n) AS id",parameters).single().get("id").asLong() @AT@ 6884 @LENGTH@ 962
---------UPD MethodInvocation@@MethodName:run:["CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id", parameters] @TO@ MethodName:run:["CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld'],"+ " n.anInstant = datetime('2019-09-26T20:34:23Z')"+ " RETURN id(n) AS id", parameters] @AT@ 6884 @LENGTH@ 934
------------UPD InfixExpression@@"CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id" @TO@ "CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld'],"+ " n.anInstant = datetime('2019-09-26T20:34:23Z')"+ " RETURN id(n) AS id" @AT@ 6890 @LENGTH@ 915
---------------INS StringLiteral@@" n.anInstant = datetime('2019-09-26T20:34:23Z')" @TO@ InfixExpression@@"CREATE (n:AdditionalTypes) SET " + " n.booleanArray = [true, true, false]," + " n.aByte = $aByte,"+ " n.aChar = 'x',"+ " n.charArray = ['x', 'y', 'z'],"+ " n.aDate = '2019-09-21T13:23:11Z',"+ " n.doubleArray = [1.1, 2.2, 3.3],"+ " n.aFloat = '23.42',"+ " n.floatArray = ['4.4', '5.5'],"+ " n.anInt = 42,"+ " n.intArray = [21, 9],"+ " n.aLocale = 'de_DE',"+ " n.longArray = [-9223372036854775808, 9223372036854775807],"+ " n.aShort = 127,"+ " n.shortArray = [-10, 10],"+ " n.aBigDecimal = '1.79769313486231570E+309',"+ " n.aBigInteger = '92233720368547758070',"+ " n.aPeriod = duration('P23Y4M7D'),"+ " n.aDuration = duration('PT26H4M5S'),"+ " n.stringArray = ['Hallo', 'Welt'],"+ " n.listOfStrings = ['Hello', 'World'],"+ " n.setOfStrings = ['Hallo', 'wereld']"+ " RETURN id(n) AS id" @AT@ 7656 @LENGTH@ 49
---------------UPD StringLiteral@@" n.setOfStrings = ['Hallo', 'wereld']" @TO@ " n.setOfStrings = ['Hallo', 'wereld']," @AT@ 7737 @LENGTH@ 39


UPD SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;} @TO@ switch (s) {case "class":  s="clas";break;case "package":s="packag";break;case "rest":s="restEndpoint";break;} @AT@ 23506 @LENGTH@ 208
---INS SwitchCase@@case "rest": @TO@ SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;} @AT@ 23717 @LENGTH@ 12
------INS StringLiteral@@"rest" @TO@ SwitchCase@@case "rest": @AT@ 23722 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:s="restEndpoint" @TO@ SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;} @AT@ 23750 @LENGTH@ 19
------INS Assignment@@s="restEndpoint" @TO@ ExpressionStatement@@Assignment:s="restEndpoint" @AT@ 23750 @LENGTH@ 18
---------INS SimpleName@@s @TO@ Assignment@@s="restEndpoint" @AT@ 23750 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@s="restEndpoint" @AT@ 23751 @LENGTH@ 1
---------INS StringLiteral@@"restEndpoint" @TO@ Assignment@@s="restEndpoint" @AT@ 23754 @LENGTH@ 14
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;} @AT@ 23790 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]GoogleCalendarApiName,  @TO@ [static]GoogleCalendarApiName,  @AT@ 31193 @LENGTH@ 124
---DEL Modifier@@public @AT@ 31193 @LENGTH@ 6


INS MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="1.0"), public]ReactiveNeo4jTransactionManager, AbstractReactiveTransactionManager @AT@ 7764 @LENGTH@ 332
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7764 @LENGTH@ 9
---INS ParameterizedType@@Mono<Object> @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7774 @LENGTH@ 12
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Object> @AT@ 7774 @LENGTH@ 4
------INS SimpleType@@Object @TO@ ParameterizedType@@Mono<Object> @AT@ 7779 @LENGTH@ 6
---INS SimpleName@@MethodName:doSuspend @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7787 @LENGTH@ 9
---INS SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7797 @LENGTH@ 56
------INS SimpleType@@TransactionSynchronizationManager @TO@ SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @AT@ 7797 @LENGTH@ 33
------INS SimpleName@@synchronizationManager @TO@ SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @AT@ 7831 @LENGTH@ 22
---INS SingleVariableDeclaration@@Object transaction @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7855 @LENGTH@ 18
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object transaction @AT@ 7855 @LENGTH@ 6
------INS SimpleName@@transaction @TO@ SingleVariableDeclaration@@Object transaction @AT@ 7862 @LENGTH@ 11
---INS SimpleType@@TransactionException @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7882 @LENGTH@ 20
---INS ReturnStatement@@MethodInvocation:Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @TO@ MethodDeclaration@@protected, Mono<Object>, MethodName:doSuspend, TransactionSynchronizationManager synchronizationManager, Object transaction, TransactionException,  @AT@ 7908 @LENGTH@ 185
------INS MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @TO@ ReturnStatement@@MethodInvocation:Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @AT@ 7915 @LENGTH@ 177
---------INS MethodInvocation@@MethodName:doOnNext:[r -> r.setResourceHolder(null)] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @AT@ 7915 @LENGTH@ 96
------------INS LambdaExpression@@r -> r.setResourceHolder(null) @TO@ MethodInvocation@@MethodName:doOnNext:[r -> r.setResourceHolder(null)] @AT@ 7980 @LENGTH@ 30
---------------INS VariableDeclarationFragment@@r @TO@ LambdaExpression@@r -> r.setResourceHolder(null) @AT@ 7980 @LENGTH@ 1
------------------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r @AT@ 7980 @LENGTH@ 1
---------------INS MethodInvocation@@r.setResourceHolder(null) @TO@ LambdaExpression@@r -> r.setResourceHolder(null) @AT@ 7985 @LENGTH@ 25
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.setResourceHolder(null) @AT@ 7985 @LENGTH@ 1
------------------INS SimpleName@@MethodName:setResourceHolder:[null] @TO@ MethodInvocation@@r.setResourceHolder(null) @AT@ 7987 @LENGTH@ 23
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setResourceHolder:[null] @AT@ 8005 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:just:[extractNeo4jTransaction(transaction)] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @AT@ 7915 @LENGTH@ 51
------------INS MethodInvocation@@extractNeo4jTransaction(transaction) @TO@ MethodInvocation@@MethodName:just:[extractNeo4jTransaction(transaction)] @AT@ 7929 @LENGTH@ 36
---------------INS SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @TO@ MethodInvocation@@extractNeo4jTransaction(transaction) @AT@ 7929 @LENGTH@ 36
------------------INS SimpleName@@transaction @TO@ SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @AT@ 7953 @LENGTH@ 11
---------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @AT@ 7915 @LENGTH@ 4
---------INS SimpleName@@MethodName:then:[Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder(null)).then(Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))) @AT@ 8016 @LENGTH@ 76
------------INS MethodInvocation@@Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver)) @TO@ SimpleName@@MethodName:then:[Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver))] @AT@ 8021 @LENGTH@ 70
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver)) @AT@ 8021 @LENGTH@ 4
---------------INS SimpleName@@MethodName:fromSupplier:[() -> synchronizationManager.unbindResource(driver)] @TO@ MethodInvocation@@Mono.fromSupplier(() -> synchronizationManager.unbindResource(driver)) @AT@ 8026 @LENGTH@ 65
------------------INS LambdaExpression@@() -> synchronizationManager.unbindResource(driver) @TO@ SimpleName@@MethodName:fromSupplier:[() -> synchronizationManager.unbindResource(driver)] @AT@ 8039 @LENGTH@ 51
---------------------INS MethodInvocation@@synchronizationManager.unbindResource(driver) @TO@ LambdaExpression@@() -> synchronizationManager.unbindResource(driver) @AT@ 8045 @LENGTH@ 45
------------------------INS SimpleName@@Name:synchronizationManager @TO@ MethodInvocation@@synchronizationManager.unbindResource(driver) @AT@ 8045 @LENGTH@ 22
------------------------INS SimpleName@@MethodName:unbindResource:[driver] @TO@ MethodInvocation@@synchronizationManager.unbindResource(driver) @AT@ 8068 @LENGTH@ 22
---------------------------INS SimpleName@@driver @TO@ SimpleName@@MethodName:unbindResource:[driver] @AT@ 8083 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2AccessDeniedHandler, AbstractOAuth2SecurityExceptionHandler[AccessDeniedHandler] @TO@ [@Deprecated, public]OAuth2AccessDeniedHandler, AbstractOAuth2SecurityExceptionHandler[AccessDeniedHandler] @AT@ 1259 @LENGTH@ 328
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AccessDeniedHandler, AbstractOAuth2SecurityExceptionHandler[AccessDeniedHandler] @AT@ 1436 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenEnhancer,  @TO@ [@Deprecated, public]TokenEnhancer,  @AT@ 978 @LENGTH@ 560
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenEnhancer,  @AT@ 1155 @LENGTH@ 11


INS MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @TO@ TypeDeclaration@@[public]SecurityMockServerConfigurers,  @AT@ 6548 @LENGTH@ 76
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6548 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6555 @LENGTH@ 6
---INS SimpleType@@JwtMutator @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6562 @LENGTH@ 10
---INS SimpleName@@MethodName:mockJwt @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6573 @LENGTH@ 7
---INS SingleVariableDeclaration@@Jwt jwt @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6581 @LENGTH@ 7
------INS SimpleType@@Jwt @TO@ SingleVariableDeclaration@@Jwt jwt @AT@ 6581 @LENGTH@ 3
------INS SimpleName@@jwt @TO@ SingleVariableDeclaration@@Jwt jwt @AT@ 6585 @LENGTH@ 3
---INS ReturnStatement@@ClassInstanceCreation:new JwtMutator(jwt) @TO@ MethodDeclaration@@public, static, JwtMutator, MethodName:mockJwt, Jwt jwt,  @AT@ 6594 @LENGTH@ 27
------INS ClassInstanceCreation@@JwtMutator[jwt] @TO@ ReturnStatement@@ClassInstanceCreation:new JwtMutator(jwt) @AT@ 6601 @LENGTH@ 19
---------INS New@@new @TO@ ClassInstanceCreation@@JwtMutator[jwt] @AT@ 6601 @LENGTH@ 3
---------INS SimpleType@@JwtMutator @TO@ ClassInstanceCreation@@JwtMutator[jwt] @AT@ 6605 @LENGTH@ 10
---------INS SimpleName@@jwt @TO@ ClassInstanceCreation@@JwtMutator[jwt] @AT@ 6616 @LENGTH@ 3


UPD TryStatement@@try (InputStream fileStream=new FileInputStream(file)){  String text=loadText(fileStream);  String[] lines=text.split("\n");  List<String> newLines=new ArrayList<>();  newLines.addAll(Arrays.asList(lines));  boolean title=lines[1].startsWith("#") || lines[1].startsWith("=");  boolean empty=lines[2].trim().isEmpty();  boolean availableFrom=lines[3].trim().contains("Available as of") || lines[3].trim().contains("Available in");  boolean empty2=lines[4].trim().isEmpty();  if (title && empty && availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    if (!newLine.equals(lines[3])) {      newLines.set(3,newLine);      updated=true;    }    if (!empty2) {      newLines.add(4,"");      updated=true;    }  } else   if (!availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    newLines.add(3,newLine);    newLines.add(4,"");    updated=true;  }  if (updated) {    String newText=newLines.stream().collect(Collectors.joining("\n"));    writeText(file,newText);  }} catch (Exception e) {  throw new MojoExecutionException("Error reading file " + file + " Reason: "+ e,e);} @TO@ try (InputStream fileStream=new FileInputStream(file)){  String text=loadText(fileStream);  String[] lines=text.split("\n");  List<String> newLines=new ArrayList<>();  newLines.addAll(Arrays.asList(lines));  if (lines.length < 5) {    return false;  }  boolean title=lines[1].startsWith("#") || lines[1].startsWith("=");  boolean empty=lines[2].trim().isEmpty();  boolean availableFrom=lines[3].trim().contains("Available as of") || lines[3].trim().contains("Available in");  boolean empty2=lines[4].trim().isEmpty();  if (title && empty && availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    if (!newLine.equals(lines[3])) {      newLines.set(3,newLine);      updated=true;    }    if (!empty2) {      newLines.add(4,"");      updated=true;    }  } else   if (!availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    newLines.add(3,newLine);    newLines.add(4,"");    updated=true;  }  if (updated) {    String newText=newLines.stream().collect(Collectors.joining("\n"));    writeText(file,newText);  }} catch (Exception e) {  throw new MojoExecutionException("Error reading file " + file + " Reason: "+ e,e);} @AT@ 19993 @LENGTH@ 1681
---INS IfStatement@@if (lines.length < 5) {  return false;} @TO@ TryStatement@@try (InputStream fileStream=new FileInputStream(file)){  String text=loadText(fileStream);  String[] lines=text.split("\n");  List<String> newLines=new ArrayList<>();  newLines.addAll(Arrays.asList(lines));  boolean title=lines[1].startsWith("#") || lines[1].startsWith("=");  boolean empty=lines[2].trim().isEmpty();  boolean availableFrom=lines[3].trim().contains("Available as of") || lines[3].trim().contains("Available in");  boolean empty2=lines[4].trim().isEmpty();  if (title && empty && availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    if (!newLine.equals(lines[3])) {      newLines.set(3,newLine);      updated=true;    }    if (!empty2) {      newLines.add(4,"");      updated=true;    }  } else   if (!availableFrom) {    String newLine="*Available as of Camel version " + version + "*";    newLines.add(3,newLine);    newLines.add(4,"");    updated=true;  }  if (updated) {    String newText=newLines.stream().collect(Collectors.joining("\n"));    writeText(file,newText);  }} catch (Exception e) {  throw new MojoExecutionException("Error reading file " + file + " Reason: "+ e,e);} @AT@ 20408 @LENGTH@ 67
------INS InfixExpression@@lines.length < 5 @TO@ IfStatement@@if (lines.length < 5) {  return false;} @AT@ 20412 @LENGTH@ 16
---------INS QualifiedName@@lines.length @TO@ InfixExpression@@lines.length < 5 @AT@ 20412 @LENGTH@ 12
------------INS SimpleName@@lines @TO@ QualifiedName@@lines.length @AT@ 20412 @LENGTH@ 5
------------INS SimpleName@@length @TO@ QualifiedName@@lines.length @AT@ 20418 @LENGTH@ 6
---------INS Operator@@< @TO@ InfixExpression@@lines.length < 5 @AT@ 20424 @LENGTH@ 1
---------INS NumberLiteral@@5 @TO@ InfixExpression@@lines.length < 5 @AT@ 20427 @LENGTH@ 1
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (lines.length < 5) {  return false;} @AT@ 20430 @LENGTH@ 45
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 20448 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 20455 @LENGTH@ 5


UPD MethodDeclaration@@Mono<Map<String,Object>>, MethodName:introspect, String token,  @TO@ Mono<OAuth2AuthenticatedPrincipal>, MethodName:introspect, String token,  @AT@ 1586 @LENGTH@ 25
---UPD ParameterizedType@@Mono<Map<String,Object>> @TO@ Mono<OAuth2AuthenticatedPrincipal> @AT@ 1560 @LENGTH@ 25
------DEL ParameterizedType@@Map<String,Object> @AT@ 1565 @LENGTH@ 19
---------DEL SimpleType@@Map @AT@ 1565 @LENGTH@ 3
---------DEL SimpleType@@Object @AT@ 1577 @LENGTH@ 6
------MOV SimpleType@@String @TO@ ParameterizedType@@Mono<Map<String,Object>> @AT@ 1569 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]RSAKeySecret, [SignatureSecret] @TO@ [@SuppressWarnings("serial"), @Deprecated, public]RSAKeySecret, [SignatureSecret] @AT@ 1189 @LENGTH@ 4493
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]RSAKeySecret, [SignatureSecret] @AT@ 1438 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedGlanceEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGlanceEndpointBuilder, [EndpointProducerBuilder] @AT@ 4474 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 4481 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedSqlStoredEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSqlStoredEndpointBuilder, [EndpointProducerBuilder] @AT@ 6638 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 6645 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]AuthorizationRequest, BaseRequest[Serializable] @TO@ [@SuppressWarnings("serial"), @Deprecated, public]AuthorizationRequest, BaseRequest[Serializable] @AT@ 1548 @LENGTH@ 7481
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]AuthorizationRequest, BaseRequest[Serializable] @AT@ 1753 @LENGTH@ 11


UPD MethodDeclaration@@protected, void, MethodName:authorizeDDL, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ protected, void, MethodName:authorizeDDL, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 3765 @LENGTH@ 764
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 3850 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 3850 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3855 @LENGTH@ 28
---UPD TryStatement@@try {  hive=context.getHive();  for (  Task<? extends Serializable> task : rootTasks) {    if (task.getWork() instanceof DDLWork) {      DDLWork work=(DDLWork)task.getWork();      if (work != null) {        authorizeDDLWork(context,hive,work);      }    }  }} catch (SemanticException ex) {  throw ex;}catch (AuthorizationException ex) {  throw ex;}catch (Exception ex) {  throw new SemanticException(ex);} @TO@ try {  hive=context.getHive();  for (  Task<?> task : rootTasks) {    if (task.getWork() instanceof DDLWork) {      DDLWork work=(DDLWork)task.getWork();      if (work != null) {        authorizeDDLWork(context,hive,work);      }    }  }} catch (SemanticException ex) {  throw ex;}catch (AuthorizationException ex) {  throw ex;}catch (Exception ex) {  throw new SemanticException(ex);} @AT@ 4031 @LENGTH@ 494
------UPD EnhancedForStatement@@for (Task<? extends Serializable> task : rootTasks) {  if (task.getWork() instanceof DDLWork) {    DDLWork work=(DDLWork)task.getWork();    if (work != null) {      authorizeDDLWork(context,hive,work);    }  }} @TO@ for (Task<?> task : rootTasks) {  if (task.getWork() instanceof DDLWork) {    DDLWork work=(DDLWork)task.getWork();    if (work != null) {      authorizeDDLWork(context,hive,work);    }  }} @AT@ 4076 @LENGTH@ 264
---------UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 4081 @LENGTH@ 33
------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4081 @LENGTH@ 28


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedGrantTypeException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnsupportedGrantTypeException, OAuth2Exception @AT@ 95 @LENGTH@ 355
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedGrantTypeException, OAuth2Exception @AT@ 301 @LENGTH@ 11


INS FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @TO@ TypeDeclaration@@[public, final]AuthorizationGrantType, [Serializable] @AT@ 2027 @LENGTH@ 93
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @AT@ 2027 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @AT@ 2034 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @AT@ 2041 @LENGTH@ 5
---INS SimpleType@@AuthorizationGrantType @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @AT@ 2047 @LENGTH@ 22
---INS VariableDeclarationFragment@@PASSWORD=new AuthorizationGrantType("password") @TO@ FieldDeclaration@@public, static, final, AuthorizationGrantType, [PASSWORD=new AuthorizationGrantType("password")] @AT@ 2070 @LENGTH@ 49
------INS SimpleName@@PASSWORD @TO@ VariableDeclarationFragment@@PASSWORD=new AuthorizationGrantType("password") @AT@ 2070 @LENGTH@ 8
------INS ClassInstanceCreation@@AuthorizationGrantType["password"] @TO@ VariableDeclarationFragment@@PASSWORD=new AuthorizationGrantType("password") @AT@ 2081 @LENGTH@ 38
---------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationGrantType["password"] @AT@ 2081 @LENGTH@ 3
---------INS SimpleType@@AuthorizationGrantType @TO@ ClassInstanceCreation@@AuthorizationGrantType["password"] @AT@ 2085 @LENGTH@ 22
---------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@AuthorizationGrantType["password"] @AT@ 2108 @LENGTH@ 10


UPD MethodDeclaration@@boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @TO@ boolean, MethodName:connect, RemoteFileConfiguration configuration, Exchange exchange, GenericFileOperationFailedException,  @AT@ 1355 @LENGTH@ 90
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @AT@ 1506 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1506 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1515 @LENGTH@ 8


UPD TypeDeclaration@@[public]ResourceServerConfigurerAdapter, [ResourceServerConfigurer] @TO@ [@Deprecated, public]ResourceServerConfigurerAdapter, [ResourceServerConfigurer] @AT@ 915 @LENGTH@ 319
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceServerConfigurerAdapter, [ResourceServerConfigurer] @AT@ 1093 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedPrinterEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedPrinterEndpointBuilder, [EndpointProducerBuilder] @AT@ 7557 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 7564 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerAuthentication, AbstractAuthenticationToken @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ConsumerAuthentication, AbstractAuthenticationToken @AT@ 835 @LENGTH@ 3045
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ConsumerAuthentication, AbstractAuthenticationToken @AT@ 1083 @LENGTH@ 11


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(PropertiesComponent.class)] @TO@ TypeDeclaration@@[@Component("properties"), @ManagedResource(description="Managed PropertiesComponent"), public]PropertiesComponent, DefaultComponent[org.apache.camel.spi.PropertiesComponent] @AT@ 2320 @LENGTH@ 85


UPD TypeDeclaration@@[public]DefaultRequestEnhancer, [RequestEnhancer] @TO@ [@Deprecated, public]DefaultRequestEnhancer, [RequestEnhancer] @AT@ 965 @LENGTH@ 592
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultRequestEnhancer, [RequestEnhancer] @AT@ 1151 @LENGTH@ 11


UPD VariableDeclarationStatement@@Task<? extends Serializable> task=(Task<? extends Serializable>)nd; @TO@ Task<?> task=(Task<?>)nd; @AT@ 3867 @LENGTH@ 70
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3867 @LENGTH@ 28
---UPD VariableDeclarationFragment@@task=(Task<? extends Serializable>)nd @TO@ task=(Task<?>)nd @AT@ 3896 @LENGTH@ 40
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 3903 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3904 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]IgniteComputeExecutionType,  @TO@ [static]IgniteComputeExecutionType,  @AT@ 6621 @LENGTH@ 128
---DEL Modifier@@public @AT@ 6621 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]InMemoryReactiveClientRegistrationRepositoryTests,  @AT@ 2174 @LENGTH@ 258
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @AT@ 2174 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @AT@ 2181 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @AT@ 2186 @LENGTH@ 76
---INS VariableDeclarationStatement@@List<ClientRegistration> registrations=Arrays.asList(this.registration,this.registration); @TO@ MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @AT@ 2269 @LENGTH@ 93
------INS ParameterizedType@@List<ClientRegistration> @TO@ VariableDeclarationStatement@@List<ClientRegistration> registrations=Arrays.asList(this.registration,this.registration); @AT@ 2269 @LENGTH@ 24
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ClientRegistration> @AT@ 2269 @LENGTH@ 4
---------INS SimpleType@@ClientRegistration @TO@ ParameterizedType@@List<ClientRegistration> @AT@ 2274 @LENGTH@ 18
------INS VariableDeclarationFragment@@registrations=Arrays.asList(this.registration,this.registration) @TO@ VariableDeclarationStatement@@List<ClientRegistration> registrations=Arrays.asList(this.registration,this.registration); @AT@ 2294 @LENGTH@ 67
---------INS SimpleName@@registrations @TO@ VariableDeclarationFragment@@registrations=Arrays.asList(this.registration,this.registration) @AT@ 2294 @LENGTH@ 13
---------INS MethodInvocation@@Arrays.asList(this.registration,this.registration) @TO@ VariableDeclarationFragment@@registrations=Arrays.asList(this.registration,this.registration) @AT@ 2310 @LENGTH@ 51
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(this.registration,this.registration) @AT@ 2310 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[this.registration, this.registration] @TO@ MethodInvocation@@Arrays.asList(this.registration,this.registration) @AT@ 2317 @LENGTH@ 44
---------------INS FieldAccess@@this.registration @TO@ SimpleName@@MethodName:asList:[this.registration, this.registration] @AT@ 2324 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 2324 @LENGTH@ 4
------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 2329 @LENGTH@ 12
---------------INS FieldAccess@@this.registration @TO@ SimpleName@@MethodName:asList:[this.registration, this.registration] @AT@ 2343 @LENGTH@ 17
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.registration @AT@ 2343 @LENGTH@ 4
------------------INS SimpleName@@registration @TO@ FieldAccess@@this.registration @AT@ 2348 @LENGTH@ 12
---INS ExpressionStatement@@ClassInstanceCreation:new InMemoryReactiveClientRegistrationRepository(registrations) @TO@ MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @AT@ 2365 @LENGTH@ 64
------INS ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @TO@ ExpressionStatement@@ClassInstanceCreation:new InMemoryReactiveClientRegistrationRepository(registrations) @AT@ 2365 @LENGTH@ 63
---------INS New@@new @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2365 @LENGTH@ 3
---------INS SimpleType@@InMemoryReactiveClientRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2369 @LENGTH@ 44
---------INS SimpleName@@registrations @TO@ ClassInstanceCreation@@InMemoryReactiveClientRegistrationRepository[registrations] @AT@ 2414 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]AdvancedDrillEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDrillEndpointBuilder, [EndpointProducerBuilder] @AT@ 4321 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 4328 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]TextProcessingFactory,  @TO@ [static]TextProcessingFactory,  @AT@ 10787 @LENGTH@ 89
---DEL Modifier@@public @AT@ 10787 @LENGTH@ 6


UPD TypeDeclaration@@[public, abstract]OAuthProviderProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @TO@ [@Deprecated, public, abstract]OAuthProviderProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 2964 @LENGTH@ 19868
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]OAuthProviderProcessingFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 3185 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedGrapeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedGrapeEndpointBuilder, [EndpointProducerBuilder] @AT@ 2175 @LENGTH@ 2055
---DEL Modifier@@static @AT@ 2182 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]DataSetTestEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DataSetTestEndpointBuilder, [EndpointProducerBuilder] @AT@ 1494 @LENGTH@ 3519
---DEL Modifier@@static @AT@ 1501 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ClientContext,  @TO@ [@Deprecated, public]OAuth2ClientContext,  @AT@ 840 @LENGTH@ 801
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ClientContext,  @AT@ 1018 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]IgniteSetEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IgniteSetEndpointBuilder, [EndpointProducerBuilder] @AT@ 1468 @LENGTH@ 2572
---DEL Modifier@@static @AT@ 1475 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]ServletEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]ServletEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1477 @LENGTH@ 6973
---DEL Modifier@@static @AT@ 1484 @LENGTH@ 6


UPD TypeDeclaration@@[public]TestAccounts,  @TO@ [@Deprecated, public]TestAccounts,  @AT@ 1008 @LENGTH@ 646
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TestAccounts,  @AT@ 1186 @LENGTH@ 11


UPD ReturnStatement@@InfixExpression:registered.equals(requested) || requested.endsWith("." + registered) @TO@ InfixExpression:isEqual(registered,requested) || (requested != null && requested.endsWith("." + registered)) @AT@ 7353 @LENGTH@ 76
---UPD InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @TO@ requested != null && requested.endsWith("." + registered) @AT@ 7360 @LENGTH@ 68
---INS InfixExpression@@isEqual(registered,requested) || (requested != null && requested.endsWith("." + registered)) @TO@ ReturnStatement@@InfixExpression:registered.equals(requested) || requested.endsWith("." + registered) @AT@ 7388 @LENGTH@ 93
------INS MethodInvocation@@isEqual(registered,requested) @TO@ InfixExpression@@isEqual(registered,requested) || (requested != null && requested.endsWith("." + registered)) @AT@ 7388 @LENGTH@ 30
---------INS SimpleName@@MethodName:isEqual:[registered, requested] @TO@ MethodInvocation@@isEqual(registered,requested) @AT@ 7388 @LENGTH@ 30
------------INS SimpleName@@registered @TO@ SimpleName@@MethodName:isEqual:[registered, requested] @AT@ 7396 @LENGTH@ 10
------------INS SimpleName@@requested @TO@ SimpleName@@MethodName:isEqual:[registered, requested] @AT@ 7408 @LENGTH@ 9
------INS Operator@@|| @TO@ InfixExpression@@isEqual(registered,requested) || (requested != null && requested.endsWith("." + registered)) @AT@ 7418 @LENGTH@ 2
------INS ParenthesizedExpression@@(requested != null && requested.endsWith("." + registered)) @TO@ InfixExpression@@isEqual(registered,requested) || (requested != null && requested.endsWith("." + registered)) @AT@ 7422 @LENGTH@ 59
---------MOV InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @TO@ ParenthesizedExpression@@(requested != null && requested.endsWith("." + registered)) @AT@ 7360 @LENGTH@ 68
------------DEL MethodInvocation@@registered.equals(requested) @AT@ 7360 @LENGTH@ 28
---------------DEL SimpleName@@Name:registered @AT@ 7360 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:equals:[requested] @AT@ 7371 @LENGTH@ 17
------------------DEL SimpleName@@requested @AT@ 7378 @LENGTH@ 9
------------UPD Operator@@|| @TO@ != @AT@ 7388 @LENGTH@ 2
------------INS InfixExpression@@requested != null @TO@ InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @AT@ 7423 @LENGTH@ 17
---------------MOV Operator@@|| @TO@ InfixExpression@@requested != null @AT@ 7388 @LENGTH@ 2
---------------MOV Operator@@|| @TO@ InfixExpression@@requested != null @AT@ 7388 @LENGTH@ 2
---------------INS SimpleName@@requested @TO@ InfixExpression@@requested != null @AT@ 7423 @LENGTH@ 9
---------------INS NullLiteral@@null @TO@ InfixExpression@@requested != null @AT@ 7436 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @AT@ 7440 @LENGTH@ 2


DEL ExpressionStatement@@MethodInvocation:this.criteriaChain.add(this) @AT@ 17082 @LENGTH@ 29
---DEL MethodInvocation@@this.criteriaChain.add(this) @AT@ 17082 @LENGTH@ 28
------DEL FieldAccess@@this.criteriaChain @AT@ 17082 @LENGTH@ 18
---------DEL ThisExpression@@this @AT@ 17082 @LENGTH@ 4
---------DEL SimpleName@@criteriaChain @AT@ 17087 @LENGTH@ 13
------DEL SimpleName@@MethodName:add:[this] @AT@ 17101 @LENGTH@ 9
---------DEL ThisExpression@@this @AT@ 17105 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]ReactiveMongoRepositoryTests,  @AT@ 18284 @LENGTH@ 294
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 18284 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 18291 @LENGTH@ 4
---INS SimpleName@@MethodName:findsWithNativeProjection @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 18296 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 18329 @LENGTH@ 246
------INS MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18329 @LENGTH@ 245
---------INS MethodInvocation@@MethodName:consumeNextWith:[it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18329 @LENGTH@ 228
------------INS LambdaExpression@@it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
 @TO@ MethodInvocation@@MethodName:consumeNextWith:[it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
] @AT@ 18428 @LENGTH@ 128
---------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
 @AT@ 18428 @LENGTH@ 2
------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 18428 @LENGTH@ 2
---------------INS ExpressionStatement@@MethodInvocation:assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @TO@ LambdaExpression@@it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
 @AT@ 18441 @LENGTH@ 109
------------------INS MethodInvocation@@assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 18441 @LENGTH@ 108
---------------------INS MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @TO@ MethodInvocation@@assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 18441 @LENGTH@ 62
------------------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @AT@ 18470 @LENGTH@ 11
------------------------INS MethodInvocation@@dave.getFirstname() @TO@ MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @AT@ 18483 @LENGTH@ 19
---------------------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getFirstname() @AT@ 18483 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getFirstname:[] @TO@ MethodInvocation@@dave.getFirstname() @AT@ 18488 @LENGTH@ 14
---------------------INS MethodInvocation@@MethodName:assertThat:[it] @TO@ MethodInvocation@@assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 18441 @LENGTH@ 14
------------------------INS SimpleName@@it @TO@ MethodInvocation@@MethodName:assertThat:[it] @AT@ 18452 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @TO@ MethodInvocation@@assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 18504 @LENGTH@ 45
------------------------INS StringLiteral@@"lastname" @TO@ SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @AT@ 18518 @LENGTH@ 10
------------------------INS MethodInvocation@@dave.getLastname() @TO@ SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @AT@ 18530 @LENGTH@ 18
---------------------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getLastname() @AT@ 18530 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getLastname:[] @TO@ MethodInvocation@@dave.getLastname() @AT@ 18535 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:as:[StepVerifier::create] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18329 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:findDocumentById:[dave.getId()] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18329 @LENGTH@ 41
------------INS MethodInvocation@@dave.getId() @TO@ MethodInvocation@@MethodName:findDocumentById:[dave.getId()] @AT@ 18357 @LENGTH@ 12
---------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getId() @AT@ 18357 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@dave.getId() @AT@ 18362 @LENGTH@ 7
---------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18329 @LENGTH@ 10
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).as(StepVerifier::create).consumeNextWith(it -> {
  assertThat(it).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname());
}
).verifyComplete() @AT@ 18558 @LENGTH@ 16


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]NoSuchClientException, ClientRegistrationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]NoSuchClientException, ClientRegistrationException @AT@ 709 @LENGTH@ 251
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]NoSuchClientException, ClientRegistrationException @AT@ 915 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]SagaEndpointAction,  @TO@ [static]SagaEndpointAction,  @AT@ 4646 @LENGTH@ 75
---DEL Modifier@@public @AT@ 4646 @LENGTH@ 6


UPD TypeDeclaration@@[public, abstract]OAuth2AccessTokenSupport,  @TO@ [@Deprecated, public, abstract]OAuth2AccessTokenSupport,  @AT@ 2247 @LENGTH@ 6990
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]OAuth2AccessTokenSupport,  @AT@ 2424 @LENGTH@ 11


UPD TypeDeclaration@@[public, abstract]StandardStringSerializationStrategy, BaseRedisTokenStoreSerializationStrategy @TO@ [@Deprecated, public, abstract]StandardStringSerializationStrategy, BaseRedisTokenStoreSerializationStrategy @AT@ 243 @LENGTH@ 441
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]StandardStringSerializationStrategy, BaseRedisTokenStoreSerializationStrategy @AT@ 420 @LENGTH@ 11


UPD MethodDeclaration@@default, DigitalSignatureEndpointBuilder, MethodName:digitalSignature, String path,  @TO@ default, DigitalSignatureEndpointBuilder, MethodName:crypto, String path,  @AT@ 18496 @LENGTH@ 440
---UPD SimpleName@@MethodName:digitalSignature @TO@ MethodName:crypto @AT@ 18536 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration, @Import(ObjectPostProcessorConfiguration.class), public]AuthenticationConfiguration,  @TO@ [@Configuration(proxyBeanMethods=false), @Import(ObjectPostProcessorConfiguration.class), public]AuthenticationConfiguration,  @AT@ 2963 @LENGTH@ 9241
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, @Import(ObjectPostProcessorConfiguration.class), public]AuthenticationConfiguration,  @AT@ 2963 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 2963 @LENGTH@ 14


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> tasks=new ArrayList<Task<?>>(); @AT@ 4245 @LENGTH@ 89
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4245 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4250 @LENGTH@ 28
---UPD VariableDeclarationFragment@@tasks=new ArrayList<Task<? extends Serializable>>() @TO@ tasks=new ArrayList<Task<?>>() @AT@ 4280 @LENGTH@ 53
------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 4288 @LENGTH@ 45
---------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 4292 @LENGTH@ 39
------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4302 @LENGTH@ 28


UPD MethodDeclaration@@public, boolean, MethodName:upgradeEncoding, String encodedPassword,  @TO@ public, boolean, MethodName:upgradeEncoding, String prefixEncodedPassword,  @AT@ 9003 @LENGTH@ 150
---UPD SingleVariableDeclaration@@String encodedPassword @TO@ String prefixEncodedPassword @AT@ 9034 @LENGTH@ 22
------UPD SimpleName@@encodedPassword @TO@ prefixEncodedPassword @AT@ 9041 @LENGTH@ 15
---UPD VariableDeclarationStatement@@String id=extractId(encodedPassword); @TO@ String id=extractId(prefixEncodedPassword); @AT@ 9062 @LENGTH@ 39
------UPD VariableDeclarationFragment@@id=extractId(encodedPassword) @TO@ id=extractId(prefixEncodedPassword) @AT@ 9069 @LENGTH@ 31
---------UPD MethodInvocation@@extractId(encodedPassword) @TO@ extractId(prefixEncodedPassword) @AT@ 9074 @LENGTH@ 26
------------UPD SimpleName@@MethodName:extractId:[encodedPassword] @TO@ MethodName:extractId:[prefixEncodedPassword] @AT@ 9074 @LENGTH@ 26
---------------UPD SimpleName@@encodedPassword @TO@ prefixEncodedPassword @AT@ 9084 @LENGTH@ 15
---DEL ReturnStatement@@PrefixExpression:!this.idForEncode.equalsIgnoreCase(id) @AT@ 9104 @LENGTH@ 46
---INS IfStatement@@if (!this.idForEncode.equalsIgnoreCase(id)) {  return true;} else {  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @TO@ MethodDeclaration@@public, boolean, MethodName:upgradeEncoding, String encodedPassword,  @AT@ 9116 @LENGTH@ 230
------MOV PrefixExpression@@!this.idForEncode.equalsIgnoreCase(id) @TO@ IfStatement@@if (!this.idForEncode.equalsIgnoreCase(id)) {  return true;} else {  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @AT@ 9111 @LENGTH@ 38
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (!this.idForEncode.equalsIgnoreCase(id)) {  return true;} else {  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @AT@ 9160 @LENGTH@ 21
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 9165 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 9172 @LENGTH@ 4
------INS Block@@ElseBody:{  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @TO@ IfStatement@@if (!this.idForEncode.equalsIgnoreCase(id)) {  return true;} else {  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @AT@ 9189 @LENGTH@ 157
---------INS VariableDeclarationStatement@@String encodedPassword=extractEncodedPassword(prefixEncodedPassword); @TO@ Block@@ElseBody:{  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @AT@ 9194 @LENGTH@ 71
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String encodedPassword=extractEncodedPassword(prefixEncodedPassword); @AT@ 9194 @LENGTH@ 6
------------INS VariableDeclarationFragment@@encodedPassword=extractEncodedPassword(prefixEncodedPassword) @TO@ VariableDeclarationStatement@@String encodedPassword=extractEncodedPassword(prefixEncodedPassword); @AT@ 9201 @LENGTH@ 63
---------------INS SimpleName@@encodedPassword @TO@ VariableDeclarationFragment@@encodedPassword=extractEncodedPassword(prefixEncodedPassword) @AT@ 9201 @LENGTH@ 15
---------------INS MethodInvocation@@extractEncodedPassword(prefixEncodedPassword) @TO@ VariableDeclarationFragment@@encodedPassword=extractEncodedPassword(prefixEncodedPassword) @AT@ 9219 @LENGTH@ 45
------------------INS SimpleName@@MethodName:extractEncodedPassword:[prefixEncodedPassword] @TO@ MethodInvocation@@extractEncodedPassword(prefixEncodedPassword) @AT@ 9219 @LENGTH@ 45
---------------------INS SimpleName@@prefixEncodedPassword @TO@ SimpleName@@MethodName:extractEncodedPassword:[prefixEncodedPassword] @AT@ 9242 @LENGTH@ 21
---------INS ReturnStatement@@MethodInvocation:this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @TO@ Block@@ElseBody:{  String encodedPassword=extractEncodedPassword(prefixEncodedPassword);  return this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword);} @AT@ 9269 @LENGTH@ 73
------------INS MethodInvocation@@this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @TO@ ReturnStatement@@MethodInvocation:this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @AT@ 9276 @LENGTH@ 65
---------------INS MethodInvocation@@MethodName:get:[id] @TO@ MethodInvocation@@this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @AT@ 9276 @LENGTH@ 32
------------------INS SimpleName@@id @TO@ MethodInvocation@@MethodName:get:[id] @AT@ 9305 @LENGTH@ 2
---------------INS FieldAccess@@this.idToPasswordEncoder @TO@ MethodInvocation@@this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @AT@ 9276 @LENGTH@ 24
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.idToPasswordEncoder @AT@ 9276 @LENGTH@ 4
------------------INS SimpleName@@idToPasswordEncoder @TO@ FieldAccess@@this.idToPasswordEncoder @AT@ 9281 @LENGTH@ 19
---------------INS SimpleName@@MethodName:upgradeEncoding:[encodedPassword] @TO@ MethodInvocation@@this.idToPasswordEncoder.get(id).upgradeEncoding(encodedPassword) @AT@ 9309 @LENGTH@ 32
------------------INS SimpleName@@encodedPassword @TO@ SimpleName@@MethodName:upgradeEncoding:[encodedPassword] @AT@ 9325 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @TO@ TypeDeclaration@@[public]BasicAuthenticationFilterTests,  @AT@ 6923 @LENGTH@ 795
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 6923 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 6930 @LENGTH@ 4
---INS SimpleName@@MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 6935 @LENGTH@ 56
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7001 @LENGTH@ 9
---INS VariableDeclarationStatement@@String token="rod:koala"; @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7015 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 7015 @LENGTH@ 6
------INS VariableDeclarationFragment@@token="rod:koala" @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 7022 @LENGTH@ 19
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 7022 @LENGTH@ 5
---------INS StringLiteral@@"rod:koala" @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 7030 @LENGTH@ 11
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7045 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 7045 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 7068 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 7068 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 7078 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 7078 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 7082 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7110 @LENGTH@ 101
------INS MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 7110 @LENGTH@ 100
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 7110 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @TO@ MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 7118 @LENGTH@ 92
------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 7128 @LENGTH@ 15
------------INS InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @TO@ SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 7149 @LENGTH@ 60
---------------INS StringLiteral@@"BaSiC " @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 7149 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 7157 @LENGTH@ 1
---------------INS ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 7160 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 7160 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 7164 @LENGTH@ 6
------------------INS MethodInvocation@@Base64.encodeBase64(token.getBytes()) @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 7171 @LENGTH@ 37
---------------------INS SimpleName@@Name:Base64 @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 7171 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:encodeBase64:[token.getBytes()] @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 7178 @LENGTH@ 30
------------------------INS MethodInvocation@@token.getBytes() @TO@ SimpleName@@MethodName:encodeBase64:[token.getBytes()] @AT@ 7191 @LENGTH@ 16
---------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getBytes() @AT@ 7191 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@token.getBytes() @AT@ 7197 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7214 @LENGTH@ 42
------INS MethodInvocation@@request.setServletPath("/some_file.html") @TO@ ExpressionStatement@@MethodInvocation:request.setServletPath("/some_file.html") @AT@ 7214 @LENGTH@ 41
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 7214 @LENGTH@ 7
---------INS SimpleName@@MethodName:setServletPath:["/some_file.html"] @TO@ MethodInvocation@@request.setServletPath("/some_file.html") @AT@ 7222 @LENGTH@ 33
------------INS StringLiteral@@"/some_file.html" @TO@ SimpleName@@MethodName:setServletPath:["/some_file.html"] @AT@ 7237 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7260 @LENGTH@ 76
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 7260 @LENGTH@ 75
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 7260 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 7271 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7271 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7271 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7306 @LENGTH@ 19
---------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull() @AT@ 7327 @LENGTH@ 8
---INS VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7339 @LENGTH@ 44
------INS SimpleType@@FilterChain @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 7339 @LENGTH@ 11
------INS VariableDeclarationFragment@@chain=mock(FilterChain.class) @TO@ VariableDeclarationStatement@@FilterChain chain=mock(FilterChain.class); @AT@ 7351 @LENGTH@ 31
---------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 7351 @LENGTH@ 5
---------INS MethodInvocation@@mock(FilterChain.class) @TO@ VariableDeclarationFragment@@chain=mock(FilterChain.class) @AT@ 7359 @LENGTH@ 23
------------INS SimpleName@@MethodName:mock:[FilterChain.class] @TO@ MethodInvocation@@mock(FilterChain.class) @AT@ 7359 @LENGTH@ 23
---------------INS TypeLiteral@@FilterChain.class @TO@ SimpleName@@MethodName:mock:[FilterChain.class] @AT@ 7364 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7386 @LENGTH@ 63
------INS MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @TO@ ExpressionStatement@@MethodInvocation:filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 7386 @LENGTH@ 62
---------INS SimpleName@@Name:filter @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 7386 @LENGTH@ 6
---------INS SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @TO@ MethodInvocation@@filter.doFilter(request,new MockHttpServletResponse(),chain) @AT@ 7393 @LENGTH@ 55
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 7402 @LENGTH@ 7
------------INS ClassInstanceCreation@@MockHttpServletResponse[] @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 7411 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 7411 @LENGTH@ 3
---------------INS SimpleType@@MockHttpServletResponse @TO@ ClassInstanceCreation@@MockHttpServletResponse[] @AT@ 7415 @LENGTH@ 23
------------INS SimpleName@@chain @TO@ SimpleName@@MethodName:doFilter:[request, new MockHttpServletResponse(), chain] @AT@ 7442 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7453 @LENGTH@ 78
------INS MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 7453 @LENGTH@ 77
---------INS MethodInvocation@@MethodName:verify:[chain] @TO@ MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 7453 @LENGTH@ 13
------------INS SimpleName@@chain @TO@ MethodInvocation@@MethodName:verify:[chain] @AT@ 7460 @LENGTH@ 5
---------INS SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @TO@ MethodInvocation@@verify(chain).doFilter(any(ServletRequest.class),any(ServletResponse.class)) @AT@ 7467 @LENGTH@ 63
------------INS MethodInvocation@@any(ServletRequest.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 7476 @LENGTH@ 25
---------------INS SimpleName@@MethodName:any:[ServletRequest.class] @TO@ MethodInvocation@@any(ServletRequest.class) @AT@ 7476 @LENGTH@ 25
------------------INS TypeLiteral@@ServletRequest.class @TO@ SimpleName@@MethodName:any:[ServletRequest.class] @AT@ 7480 @LENGTH@ 20
------------INS MethodInvocation@@any(ServletResponse.class) @TO@ SimpleName@@MethodName:doFilter:[any(ServletRequest.class), any(ServletResponse.class)] @AT@ 7503 @LENGTH@ 26
---------------INS SimpleName@@MethodName:any:[ServletResponse.class] @TO@ MethodInvocation@@any(ServletResponse.class) @AT@ 7503 @LENGTH@ 26
------------------INS TypeLiteral@@ServletResponse.class @TO@ SimpleName@@MethodName:any:[ServletResponse.class] @AT@ 7507 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7534 @LENGTH@ 79
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 7534 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 7534 @LENGTH@ 66
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 7545 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7545 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7545 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 7580 @LENGTH@ 19
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication()).isNotNull() @AT@ 7601 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @TO@ MethodDeclaration@@public, void, MethodName:doFilterWhenSchemeMixedCaseThenCaseInsensitiveMatchWorks, Exception,  @AT@ 7616 @LENGTH@ 99
------INS MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @TO@ ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 7616 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 7616 @LENGTH@ 76
------------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication().getName()] @AT@ 7627 @LENGTH@ 64
---------------INS MethodInvocation@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 7627 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 7627 @LENGTH@ 34
---------------INS SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 7627 @LENGTH@ 21
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication().getName() @AT@ 7682 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["rod"] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("rod") @AT@ 7698 @LENGTH@ 16
------------INS StringLiteral@@"rod" @TO@ SimpleName@@MethodName:isEqualTo:["rod"] @AT@ 7708 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]CMEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]CMEndpointBuilder, [EndpointProducerBuilder] @AT@ 1403 @LENGTH@ 3216
---DEL Modifier@@static @AT@ 1410 @LENGTH@ 6


UPD MethodDeclaration@@default, CwEndpointBuilder, MethodName:cw, String path,  @TO@ default, CwEndpointBuilder, MethodName:awsCw, String path,  @AT@ 9250 @LENGTH@ 342
---UPD SimpleName@@MethodName:cw @TO@ MethodName:awsCw @AT@ 9276 @LENGTH@ 2


UPD MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @TO@ public, boolean, MethodName:connect, RemoteFileConfiguration configuration, Exchange exchange, GenericFileOperationFailedException,  @AT@ 6921 @LENGTH@ 557
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @AT@ 6983 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6983 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 6992 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]AdvancedValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 4066 @LENGTH@ 7728
---DEL Modifier@@static @AT@ 4073 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ClientContextFactoryBean, [FactoryBean<OAuth2ClientContext>] @TO@ [@Deprecated, public]OAuth2ClientContextFactoryBean, [FactoryBean<OAuth2ClientContext>] @AT@ 1336 @LENGTH@ 1010
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ClientContextFactoryBean, [FactoryBean<OAuth2ClientContext>] @AT@ 1513 @LENGTH@ 11


UPD TypeDeclaration@@[public]JsonDateDeserializer, JsonDeserializer<Date> @TO@ [@Deprecated, public]JsonDateDeserializer, JsonDeserializer<Date> @AT@ 1164 @LENGTH@ 566
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JsonDateDeserializer, JsonDeserializer<Date> @AT@ 1341 @LENGTH@ 11


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> roots=hookContext.getQueryPlan().getRootTasks(); @TO@ List<Task<?>> roots=hookContext.getQueryPlan().getRootTasks(); @AT@ 2587 @LENGTH@ 85
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2587 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2592 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]BoxApiName,  @TO@ [static]BoxApiName,  @AT@ 42684 @LENGTH@ 137
---DEL Modifier@@public @AT@ 42684 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:assertOnIndex, int index,  @TO@ void, MethodName:assertOnIndex, int index,  @AT@ 1128 @LENGTH@ 37
---DEL Modifier@@public @AT@ 1128 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]ReadConsistency,  @TO@ [static]ReadConsistency,  @AT@ 47238 @LENGTH@ 91
---DEL Modifier@@public @AT@ 47238 @LENGTH@ 6


UPD TypeDeclaration@@[public]ExactMatchRedirectResolver, DefaultRedirectResolver @TO@ [@Deprecated, public]ExactMatchRedirectResolver, DefaultRedirectResolver @AT@ 254 @LENGTH@ 543
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExactMatchRedirectResolver, DefaultRedirectResolver @AT@ 432 @LENGTH@ 11


UPD VariableDeclarationStatement@@ReactiveRedisTemplate<byte[],byte[]> rawTemplate=new ReactiveRedisTemplate<>(lettuceConnectionFactory,RedisSerializationContext.raw()); @TO@ ReactiveRedisTemplate<ByteBuffer,ByteBuffer> rawTemplate=new ReactiveRedisTemplate<>(lettuceConnectionFactory,RedisSerializationContext.raw()); @AT@ 6076 @LENGTH@ 143
---UPD ParameterizedType@@ReactiveRedisTemplate<byte[],byte[]> @TO@ ReactiveRedisTemplate<ByteBuffer,ByteBuffer> @AT@ 6076 @LENGTH@ 37
------INS SimpleType@@ByteBuffer @TO@ ParameterizedType@@ReactiveRedisTemplate<byte[],byte[]> @AT@ 6098 @LENGTH@ 10
------DEL ArrayType@@byte[] @AT@ 6098 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 6098 @LENGTH@ 4
------DEL ArrayType@@byte[] @AT@ 6106 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 6106 @LENGTH@ 4
------INS SimpleType@@ByteBuffer @TO@ ParameterizedType@@ReactiveRedisTemplate<byte[],byte[]> @AT@ 6110 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]ExecEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ExecEndpointBuilder, [EndpointProducerBuilder] @AT@ 1395 @LENGTH@ 5808
---DEL Modifier@@static @AT@ 1402 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:GenSparkProcContext, HiveConf conf, ParseContext parseContext, List<Task<MoveWork>> moveTask, List<Task<? extends Serializable>> rootTasks, Set<ReadEntity> inputs, Set<WriteEntity> outputs, Map<String,TableScanOperator> topOps,  @TO@ public, voidMethodName:GenSparkProcContext, HiveConf conf, ParseContext parseContext, List<Task<MoveWork>> moveTask, List<Task<?>> rootTasks, Set<ReadEntity> inputs, Set<WriteEntity> outputs, Map<String,TableScanOperator> topOps,  @AT@ 6300 @LENGTH@ 2195
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 6418 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 6418 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6423 @LENGTH@ 28


UPD TypeDeclaration@@[public]OAuth2RequestFactory,  @TO@ [@Deprecated, public]OAuth2RequestFactory,  @AT@ 867 @LENGTH@ 2466
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RequestFactory,  @AT@ 1044 @LENGTH@ 11


UPD TypeDeclaration@@[public]GoogleSheetsApiTestServer,  @TO@ [public, final]GoogleSheetsApiTestServer,  @AT@ 3316 @LENGTH@ 10816
---INS Modifier@@final @TO@ TypeDeclaration@@[public]GoogleSheetsApiTestServer,  @AT@ 3325 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:shouldStartFromBeginningWithEmptyOffsetRepository, InterruptedException,  @AT@ 2994 @LENGTH@ 33
---INS MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @AT@ 2994 @LENGTH@ 32
------INS QualifiedName@@Name:TimeUnit.MILLISECONDS @TO@ MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @AT@ 2994 @LENGTH@ 21
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@TimeUnit.MILLISECONDS.sleep(500) @AT@ 3016 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 3022 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:sb.append("Endpoint validation passsed at: ") @TO@ MethodInvocation:sb.append("Endpoint validation passed at: ") @AT@ 16474 @LENGTH@ 46
---UPD MethodInvocation@@sb.append("Endpoint validation passsed at: ") @TO@ sb.append("Endpoint validation passed at: ") @AT@ 16474 @LENGTH@ 45
------UPD SimpleName@@MethodName:append:["Endpoint validation passsed at: "] @TO@ MethodName:append:["Endpoint validation passed at: "] @AT@ 16477 @LENGTH@ 42
---------UPD StringLiteral@@"Endpoint validation passsed at: " @TO@ "Endpoint validation passed at: " @AT@ 16484 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:from("direct:start").to("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @TO@ MethodInvocation:from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @AT@ 2129 @LENGTH@ 328
---UPD MethodInvocation@@from("direct:start").to("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @TO@ from("direct:start").to("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").log("HL7 message: ${body}").to("mock:result") @AT@ 2129 @LENGTH@ 327
------UPD MethodInvocation@@MethodName:to:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:to:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 2129 @LENGTH@ 117
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2153 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2153 @LENGTH@ 25


UPD TypeDeclaration@@[public, static]SolrEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SolrEndpointBuilder, [EndpointProducerBuilder] @AT@ 1411 @LENGTH@ 8670
---DEL Modifier@@static @AT@ 1418 @LENGTH@ 6


UPD MethodDeclaration@@default, SparkEndpointBuilder, MethodName:spark, String path,  @TO@ default, SparkEndpointBuilder, MethodName:sparkRest, String path,  @AT@ 13125 @LENGTH@ 367
---UPD SimpleName@@MethodName:spark @TO@ MethodName:sparkRest @AT@ 13154 @LENGTH@ 5


UPD TypeDeclaration@@[public]TokenGranter,  @TO@ [@Deprecated, public]TokenGranter,  @AT@ 987 @LENGTH@ 106
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenGranter,  @AT@ 1164 @LENGTH@ 11


INS MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @TO@ TypeDeclaration@@[@API(status=API.Status.STABLE,since="1.0"), public]ReactiveNeo4jTransactionManager, AbstractReactiveTransactionManager @AT@ 8110 @LENGTH@ 421
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8110 @LENGTH@ 9
---INS ParameterizedType@@Mono<Void> @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8120 @LENGTH@ 10
------INS SimpleType@@Mono @TO@ ParameterizedType@@Mono<Void> @AT@ 8120 @LENGTH@ 4
------INS SimpleType@@Void @TO@ ParameterizedType@@Mono<Void> @AT@ 8125 @LENGTH@ 4
---INS SimpleName@@MethodName:doResume @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8131 @LENGTH@ 8
---INS SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8140 @LENGTH@ 56
------INS SimpleType@@TransactionSynchronizationManager @TO@ SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @AT@ 8140 @LENGTH@ 33
------INS SimpleName@@synchronizationManager @TO@ SingleVariableDeclaration@@TransactionSynchronizationManager synchronizationManager @AT@ 8174 @LENGTH@ 22
---INS SingleVariableDeclaration@@Object transaction @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8198 @LENGTH@ 18
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object transaction @AT@ 8198 @LENGTH@ 6
------INS SimpleName@@transaction @TO@ SingleVariableDeclaration@@Object transaction @AT@ 8205 @LENGTH@ 11
---INS SingleVariableDeclaration@@Object suspendedResources @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8218 @LENGTH@ 25
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object suspendedResources @AT@ 8218 @LENGTH@ 6
------INS SimpleName@@suspendedResources @TO@ SingleVariableDeclaration@@Object suspendedResources @AT@ 8225 @LENGTH@ 18
---INS SimpleType@@TransactionException @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8252 @LENGTH@ 20
---INS ReturnStatement@@MethodInvocation:Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @TO@ MethodDeclaration@@protected, Mono<Void>, MethodName:doResume, TransactionSynchronizationManager synchronizationManager, Object transaction, Object suspendedResources, TransactionException,  @AT@ 8278 @LENGTH@ 250
------INS MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @TO@ ReturnStatement@@MethodInvocation:Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @AT@ 8285 @LENGTH@ 242
---------INS MethodInvocation@@MethodName:doOnNext:[r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @AT@ 8285 @LENGTH@ 143
------------INS LambdaExpression@@r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @TO@ MethodInvocation@@MethodName:doOnNext:[r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)] @AT@ 8350 @LENGTH@ 77
---------------INS VariableDeclarationFragment@@r @TO@ LambdaExpression@@r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @AT@ 8350 @LENGTH@ 1
------------------INS SimpleName@@r @TO@ VariableDeclarationFragment@@r @AT@ 8350 @LENGTH@ 1
---------------INS MethodInvocation@@r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @TO@ LambdaExpression@@r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @AT@ 8355 @LENGTH@ 72
------------------INS SimpleName@@Name:r @TO@ MethodInvocation@@r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @AT@ 8355 @LENGTH@ 1
------------------INS SimpleName@@MethodName:setResourceHolder:[(ReactiveNeo4jTransactionHolder)suspendedResources] @TO@ MethodInvocation@@r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources) @AT@ 8357 @LENGTH@ 70
---------------------INS CastExpression@@(ReactiveNeo4jTransactionHolder)suspendedResources @TO@ SimpleName@@MethodName:setResourceHolder:[(ReactiveNeo4jTransactionHolder)suspendedResources] @AT@ 8375 @LENGTH@ 51
------------------------INS SimpleType@@ReactiveNeo4jTransactionHolder @TO@ CastExpression@@(ReactiveNeo4jTransactionHolder)suspendedResources @AT@ 8376 @LENGTH@ 30
------------------------INS SimpleName@@suspendedResources @TO@ CastExpression@@(ReactiveNeo4jTransactionHolder)suspendedResources @AT@ 8408 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:just:[extractNeo4jTransaction(transaction)] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @AT@ 8285 @LENGTH@ 51
------------INS MethodInvocation@@extractNeo4jTransaction(transaction) @TO@ MethodInvocation@@MethodName:just:[extractNeo4jTransaction(transaction)] @AT@ 8299 @LENGTH@ 36
---------------INS SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @TO@ MethodInvocation@@extractNeo4jTransaction(transaction) @AT@ 8299 @LENGTH@ 36
------------------INS SimpleName@@transaction @TO@ SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @AT@ 8323 @LENGTH@ 11
---------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @AT@ 8285 @LENGTH@ 4
---------INS SimpleName@@MethodName:then:[Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))] @TO@ MethodInvocation@@Mono.just(extractNeo4jTransaction(transaction)).doOnNext(r -> r.setResourceHolder((ReactiveNeo4jTransactionHolder)suspendedResources)).then(Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))) @AT@ 8433 @LENGTH@ 94
------------INS MethodInvocation@@Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources)) @TO@ SimpleName@@MethodName:then:[Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources))] @AT@ 8438 @LENGTH@ 88
---------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources)) @AT@ 8438 @LENGTH@ 4
---------------INS SimpleName@@MethodName:fromRunnable:[() -> synchronizationManager.bindResource(driver,suspendedResources)] @TO@ MethodInvocation@@Mono.fromRunnable(() -> synchronizationManager.bindResource(driver,suspendedResources)) @AT@ 8443 @LENGTH@ 83
------------------INS LambdaExpression@@() -> synchronizationManager.bindResource(driver,suspendedResources) @TO@ SimpleName@@MethodName:fromRunnable:[() -> synchronizationManager.bindResource(driver,suspendedResources)] @AT@ 8456 @LENGTH@ 69
---------------------INS MethodInvocation@@synchronizationManager.bindResource(driver,suspendedResources) @TO@ LambdaExpression@@() -> synchronizationManager.bindResource(driver,suspendedResources) @AT@ 8462 @LENGTH@ 63
------------------------INS SimpleName@@Name:synchronizationManager @TO@ MethodInvocation@@synchronizationManager.bindResource(driver,suspendedResources) @AT@ 8462 @LENGTH@ 22
------------------------INS SimpleName@@MethodName:bindResource:[driver, suspendedResources] @TO@ MethodInvocation@@synchronizationManager.bindResource(driver,suspendedResources) @AT@ 8485 @LENGTH@ 40
---------------------------INS SimpleName@@driver @TO@ SimpleName@@MethodName:bindResource:[driver, suspendedResources] @AT@ 8498 @LENGTH@ 6
---------------------------INS SimpleName@@suspendedResources @TO@ SimpleName@@MethodName:bindResource:[driver, suspendedResources] @AT@ 8506 @LENGTH@ 18


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public, abstract]ClientAuthenticationException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public, abstract]ClientAuthenticationException, OAuth2Exception @AT@ 138 @LENGTH@ 443
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public, abstract]ClientAuthenticationException, OAuth2Exception @AT@ 343 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:findAllAsDocumentDocument,  @TO@ TypeDeclaration@@[public]ReactiveFindOperationSupportTests,  @AT@ 4257 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocumentDocument,  @AT@ 4257 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocumentDocument,  @AT@ 4264 @LENGTH@ 4
---INS SimpleName@@MethodName:findAllAsDocumentDocument @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocumentDocument,  @AT@ 4269 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocumentDocument,  @AT@ 4301 @LENGTH@ 123
------INS MethodInvocation@@StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @TO@ ExpressionStatement@@MethodInvocation:StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @AT@ 4301 @LENGTH@ 122
---------INS MethodInvocation@@MethodName:expectNextCount:[2] @TO@ MethodInvocation@@StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @AT@ 4301 @LENGTH@ 100
------------INS NumberLiteral@@2 @TO@ MethodInvocation@@MethodName:expectNextCount:[2] @AT@ 4399 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:create:[template.query(Document.class).inCollection(STAR_WARS).all()] @TO@ MethodInvocation@@StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @AT@ 4301 @LENGTH@ 81
------------INS MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).all() @TO@ MethodInvocation@@MethodName:create:[template.query(Document.class).inCollection(STAR_WARS).all()] @AT@ 4321 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:inCollection:[STAR_WARS] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).all() @AT@ 4321 @LENGTH@ 54
------------------INS SimpleName@@STAR_WARS @TO@ MethodInvocation@@MethodName:inCollection:[STAR_WARS] @AT@ 4365 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:query:[Document.class] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).all() @AT@ 4321 @LENGTH@ 30
------------------INS TypeLiteral@@Document.class @TO@ MethodInvocation@@MethodName:query:[Document.class] @AT@ 4336 @LENGTH@ 14
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).all() @AT@ 4321 @LENGTH@ 8
---------------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).all() @AT@ 4376 @LENGTH@ 5
---------INS SimpleName@@Name:StepVerifier @TO@ MethodInvocation@@StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @AT@ 4301 @LENGTH@ 12
---------INS SimpleName@@MethodName:verifyComplete:[] @TO@ MethodInvocation@@StepVerifier.create(template.query(Document.class).inCollection(STAR_WARS).all()).expectNextCount(2).verifyComplete() @AT@ 4407 @LENGTH@ 16


UPD TypeDeclaration@@[public]ResourceServerConfigurer,  @TO@ [@Deprecated, public]ResourceServerConfigurer,  @AT@ 1507 @LENGTH@ 851
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceServerConfigurer,  @AT@ 1684 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]DrillConnectionMode,  @TO@ [static]DrillConnectionMode,  @AT@ 6457 @LENGTH@ 68
---DEL Modifier@@public @AT@ 6457 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.noNullElements(keys,"Keys must not be null!") @TO@ MethodInvocation:Assert.notNull(keys,"Keys must not be null!") @AT@ 3338 @LENGTH@ 54
---UPD MethodInvocation@@Assert.noNullElements(keys,"Keys must not be null!") @TO@ Assert.notNull(keys,"Keys must not be null!") @AT@ 3338 @LENGTH@ 53
------UPD SimpleName@@MethodName:noNullElements:[keys, "Keys must not be null!"] @TO@ MethodName:notNull:[keys, "Keys must not be null!"] @AT@ 3345 @LENGTH@ 46


DEL MethodDeclaration@@private, boolean, MethodName:matches, byte[] expected, byte[] actual,  @AT@ 3994 @LENGTH@ 252
---DEL Modifier@@private @AT@ 3994 @LENGTH@ 7
---DEL PrimitiveType@@boolean @AT@ 4002 @LENGTH@ 7
---DEL SimpleName@@MethodName:matches @AT@ 4010 @LENGTH@ 7
---DEL SingleVariableDeclaration@@byte[] expected @AT@ 4018 @LENGTH@ 15
------DEL ArrayType@@byte[] @AT@ 4018 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 4018 @LENGTH@ 4
------DEL SimpleName@@expected @AT@ 4025 @LENGTH@ 8
---DEL SingleVariableDeclaration@@byte[] actual @AT@ 4035 @LENGTH@ 13
------DEL ArrayType@@byte[] @AT@ 4035 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 4035 @LENGTH@ 4
------DEL SimpleName@@actual @AT@ 4042 @LENGTH@ 6
---DEL IfStatement@@if (expected.length != actual.length) {  return false;} @AT@ 4054 @LENGTH@ 60
------DEL InfixExpression@@expected.length != actual.length @AT@ 4058 @LENGTH@ 32
---------DEL QualifiedName@@expected.length @AT@ 4058 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 4058 @LENGTH@ 8
------------DEL SimpleName@@length @AT@ 4067 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 4073 @LENGTH@ 2
---------DEL QualifiedName@@actual.length @AT@ 4077 @LENGTH@ 13
------------DEL SimpleName@@actual @AT@ 4077 @LENGTH@ 6
------------DEL SimpleName@@length @AT@ 4084 @LENGTH@ 6
------DEL Block@@ThenBody:{  return false;} @AT@ 4092 @LENGTH@ 22
---------DEL ReturnStatement@@BooleanLiteral:false @AT@ 4097 @LENGTH@ 13
------------DEL BooleanLiteral@@false @AT@ 4104 @LENGTH@ 5
---DEL VariableDeclarationStatement@@int result=0; @AT@ 4118 @LENGTH@ 15
------DEL PrimitiveType@@int @AT@ 4118 @LENGTH@ 3
------DEL VariableDeclarationFragment@@result=0 @AT@ 4122 @LENGTH@ 10
---------DEL SimpleName@@result @AT@ 4122 @LENGTH@ 6
---------DEL NumberLiteral@@0 @AT@ 4131 @LENGTH@ 1
---DEL ForStatement@@for (int i=0; i < expected.length; i++) {  result|=expected[i] ^ actual[i];} @AT@ 4136 @LENGTH@ 85
------DEL VariableDeclarationExpression@@int i=0 @AT@ 4141 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 4141 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 4145 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 4145 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 4149 @LENGTH@ 1
------DEL InfixExpression@@i < expected.length @AT@ 4152 @LENGTH@ 19
---------DEL SimpleName@@i @AT@ 4152 @LENGTH@ 1
---------DEL Operator@@< @AT@ 4153 @LENGTH@ 1
---------DEL QualifiedName@@expected.length @AT@ 4156 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 4156 @LENGTH@ 8
------------DEL SimpleName@@length @AT@ 4165 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 4173 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 4173 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 4175 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:result|=expected[i] ^ actual[i] @AT@ 4183 @LENGTH@ 34
---------DEL Assignment@@result|=expected[i] ^ actual[i] @AT@ 4183 @LENGTH@ 33
------------DEL SimpleName@@result @AT@ 4183 @LENGTH@ 6
------------DEL Operator@@|= @AT@ 4189 @LENGTH@ 2
------------DEL InfixExpression@@expected[i] ^ actual[i] @AT@ 4193 @LENGTH@ 23
---------------DEL ArrayAccess@@expected[i] @AT@ 4193 @LENGTH@ 11
------------------DEL SimpleName@@expected @AT@ 4193 @LENGTH@ 8
------------------DEL SimpleName@@i @AT@ 4202 @LENGTH@ 1
---------------DEL Operator@@^ @AT@ 4204 @LENGTH@ 1
---------------DEL ArrayAccess@@actual[i] @AT@ 4207 @LENGTH@ 9
------------------DEL SimpleName@@actual @AT@ 4207 @LENGTH@ 6
------------------DEL SimpleName@@i @AT@ 4214 @LENGTH@ 1
---DEL ReturnStatement@@InfixExpression:result == 0 @AT@ 4224 @LENGTH@ 19
------DEL InfixExpression@@result == 0 @AT@ 4231 @LENGTH@ 11
---------DEL SimpleName@@result @AT@ 4231 @LENGTH@ 6
---------DEL Operator@@== @AT@ 4237 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 4241 @LENGTH@ 1


UPD ExpressionStatement@@Assignment:config=camelContext.getRestConfiguration("http",false) @TO@ Assignment:config=camelContext.getRestConfiguration("http",true) @AT@ 23008 @LENGTH@ 58
---UPD Assignment@@config=camelContext.getRestConfiguration("http",false) @TO@ config=camelContext.getRestConfiguration("http",true) @AT@ 23008 @LENGTH@ 57
------UPD MethodInvocation@@camelContext.getRestConfiguration("http",false) @TO@ camelContext.getRestConfiguration("http",true) @AT@ 23017 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getRestConfiguration:["http", false] @TO@ MethodName:getRestConfiguration:["http", true] @AT@ 23030 @LENGTH@ 35
------------UPD BooleanLiteral@@false @TO@ true @AT@ 23059 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2148 @LENGTH@ 133
---UPD MethodInvocation@@mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2148 @LENGTH@ 132
------UPD SimpleName@@MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)] @TO@ MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)] @AT@ 2159 @LENGTH@ 121
---------UPD MethodInvocation@@Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK) @TO@ Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK) @AT@ 2174 @LENGTH@ 105
------------UPD SimpleName@@MethodName:replaceFirst:["EVN", "EVN" + MllpProtocolConstants.END_OF_BLOCK] @TO@ MethodName:replaceFirst:["PID", "PID" + MllpProtocolConstants.END_OF_BLOCK] @AT@ 2216 @LENGTH@ 63
---------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2229 @LENGTH@ 5
---------------UPD InfixExpression@@"EVN" + MllpProtocolConstants.END_OF_BLOCK @TO@ "PID" + MllpProtocolConstants.END_OF_BLOCK @AT@ 2236 @LENGTH@ 42
------------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2236 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidScopeException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidScopeException, OAuth2Exception @AT@ 506 @LENGTH@ 399
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidScopeException, OAuth2Exception @AT@ 711 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, String[], [DEFAULT_REST_PRODUCER_COMPONENTS=new String[]{"http","netty4-http","restlet","undertow"}] @TO@ public, static, final, String[], [DEFAULT_REST_PRODUCER_COMPONENTS=new String[]{"http","netty-http","restlet","undertow"}] @AT@ 2276 @LENGTH@ 123
---UPD VariableDeclarationFragment@@DEFAULT_REST_PRODUCER_COMPONENTS=new String[]{"http","netty4-http","restlet","undertow"} @TO@ DEFAULT_REST_PRODUCER_COMPONENTS=new String[]{"http","netty-http","restlet","undertow"} @AT@ 2305 @LENGTH@ 93
------UPD ArrayCreation@@new String[]{"http","netty4-http","restlet","undertow"} @TO@ new String[]{"http","netty-http","restlet","undertow"} @AT@ 2340 @LENGTH@ 58
---------UPD ArrayInitializer@@{"http","netty4-http","restlet","undertow"} @TO@ {"http","netty-http","restlet","undertow"} @AT@ 2352 @LENGTH@ 46
------------UPD StringLiteral@@"netty4-http" @TO@ "netty-http" @AT@ 2361 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]MasterEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]MasterEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1435 @LENGTH@ 889
---DEL Modifier@@static @AT@ 1442 @LENGTH@ 6


UPD SwitchStatement@@switch (type) {case BETWEEN:  ParameterMetadata<Comparable> first=provider.next(part);ParameterMetadata<Comparable> second=provider.next(part);return builder.between(getComparablePath(root,part),first.getExpression(),second.getExpression());case AFTER:case GREATER_THAN:return builder.greaterThan(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case GREATER_THAN_EQUAL:return builder.greaterThanOrEqualTo(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case BEFORE:case LESS_THAN:return builder.lessThan(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case LESS_THAN_EQUAL:return builder.lessThanOrEqualTo(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case IS_NULL:return getTypedPath(root,part).isNull();case IS_NOT_NULL:return getTypedPath(root,part).isNotNull();case NOT_IN:return getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression()).not();case IN:return getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression());case STARTING_WITH:case ENDING_WITH:case CONTAINING:case NOT_CONTAINING:if (property.getLeafProperty().isCollection()) {Expression<Collection<Object>> propertyExpression=traversePath(root,property);ParameterExpression<Object> parameterExpression=provider.next(part).getExpression();return type.equals(NOT_CONTAINING) ? isNotMember(builder,parameterExpression,propertyExpression) : isMember(builder,parameterExpression,propertyExpression);}case LIKE:case NOT_LIKE:Expression<String> stringPath=getTypedPath(root,part);Expression<String> propertyExpression=upperIfIgnoreCase(stringPath);Expression<String> parameterExpression=upperIfIgnoreCase(provider.next(part,String.class).getExpression());Predicate like=builder.like(propertyExpression,parameterExpression,escape.getEscapeCharacter());return type.equals(NOT_LIKE) || type.equals(NOT_CONTAINING) ? like.not() : like;case TRUE:Expression<Boolean> truePath=getTypedPath(root,part);return builder.isTrue(truePath);case FALSE:Expression<Boolean> falsePath=getTypedPath(root,part);return builder.isFalse(falsePath);case SIMPLE_PROPERTY:ParameterMetadata<Object> expression=provider.next(part);Expression<Object> path=getTypedPath(root,part);return expression.isIsNullParameter() ? path.isNull() : builder.equal(upperIfIgnoreCase(path),upperIfIgnoreCase(expression.getExpression()));case NEGATING_SIMPLE_PROPERTY:return builder.notEqual(upperIfIgnoreCase(getTypedPath(root,part)),upperIfIgnoreCase(provider.next(part).getExpression()));case IS_EMPTY:case IS_NOT_EMPTY:if (!property.getLeafProperty().isCollection()) {throw new IllegalArgumentException("IsEmpty / IsNotEmpty can only be used on collection properties!");}Expression<Collection<Object>> collectionPath=traversePath(root,property);return type.equals(IS_NOT_EMPTY) ? builder.isNotEmpty(collectionPath) : builder.isEmpty(collectionPath);default :throw new IllegalArgumentException("Unsupported keyword " + type);} @TO@ switch (type) {case BETWEEN:  ParameterMetadata<Comparable> first=provider.next(part);ParameterMetadata<Comparable> second=provider.next(part);return builder.between(getComparablePath(root,part),first.getExpression(),second.getExpression());case AFTER:case GREATER_THAN:return builder.greaterThan(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case GREATER_THAN_EQUAL:return builder.greaterThanOrEqualTo(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case BEFORE:case LESS_THAN:return builder.lessThan(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case LESS_THAN_EQUAL:return builder.lessThanOrEqualTo(getComparablePath(root,part),provider.next(part,Comparable.class).getExpression());case IS_NULL:return getTypedPath(root,part).isNull();case IS_NOT_NULL:return getTypedPath(root,part).isNotNull();case NOT_IN:return getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()).not();case IN:return getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression());case STARTING_WITH:case ENDING_WITH:case CONTAINING:case NOT_CONTAINING:if (property.getLeafProperty().isCollection()) {Expression<Collection<Object>> propertyExpression=traversePath(root,property);ParameterExpression<Object> parameterExpression=provider.next(part).getExpression();return type.equals(NOT_CONTAINING) ? isNotMember(builder,parameterExpression,propertyExpression) : isMember(builder,parameterExpression,propertyExpression);}case LIKE:case NOT_LIKE:Expression<String> stringPath=getTypedPath(root,part);Expression<String> propertyExpression=upperIfIgnoreCase(stringPath);Expression<String> parameterExpression=upperIfIgnoreCase(provider.next(part,String.class).getExpression());Predicate like=builder.like(propertyExpression,parameterExpression,escape.getEscapeCharacter());return type.equals(NOT_LIKE) || type.equals(NOT_CONTAINING) ? like.not() : like;case TRUE:Expression<Boolean> truePath=getTypedPath(root,part);return builder.isTrue(truePath);case FALSE:Expression<Boolean> falsePath=getTypedPath(root,part);return builder.isFalse(falsePath);case SIMPLE_PROPERTY:ParameterMetadata<Object> expression=provider.next(part);Expression<Object> path=getTypedPath(root,part);return expression.isIsNullParameter() ? path.isNull() : builder.equal(upperIfIgnoreCase(path),upperIfIgnoreCase(expression.getExpression()));case NEGATING_SIMPLE_PROPERTY:return builder.notEqual(upperIfIgnoreCase(getTypedPath(root,part)),upperIfIgnoreCase(provider.next(part).getExpression()));case IS_EMPTY:case IS_NOT_EMPTY:if (!property.getLeafProperty().isCollection()) {throw new IllegalArgumentException("IsEmpty / IsNotEmpty can only be used on collection properties!");}Expression<Collection<Object>> collectionPath=traversePath(root,property);return type.equals(IS_NOT_EMPTY) ? builder.isNotEmpty(collectionPath) : builder.isEmpty(collectionPath);default :throw new IllegalArgumentException("Unsupported keyword " + type);} @AT@ 8112 @LENGTH@ 3560
---UPD ReturnStatement@@MethodInvocation:getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression()).not() @TO@ MethodInvocation:getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()).not() @AT@ 9181 @LENGTH@ 96
------UPD MethodInvocation@@getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression()).not() @TO@ getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()).not() @AT@ 9188 @LENGTH@ 88
---------UPD MethodInvocation@@MethodName:in:[provider.next(part,Collection.class).getExpression()] @TO@ MethodName:in:[(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()] @AT@ 9188 @LENGTH@ 82
------------INS CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @TO@ MethodInvocation@@MethodName:in:[provider.next(part,Collection.class).getExpression()] @AT@ 9307 @LENGTH@ 81
---------------MOV MethodInvocation@@provider.next(part,Collection.class).getExpression() @TO@ CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @AT@ 9216 @LENGTH@ 53
---------------INS ParameterizedType@@Expression<Collection<?>> @TO@ CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @AT@ 9308 @LENGTH@ 25
------------------INS SimpleType@@Expression @TO@ ParameterizedType@@Expression<Collection<?>> @AT@ 9308 @LENGTH@ 10
------------------INS ParameterizedType@@Collection<?> @TO@ ParameterizedType@@Expression<Collection<?>> @AT@ 9319 @LENGTH@ 13
---------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 9319 @LENGTH@ 10
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 9330 @LENGTH@ 1
---UPD ReturnStatement@@MethodInvocation:getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression()) @TO@ MethodInvocation:getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()) @AT@ 9296 @LENGTH@ 90
------UPD MethodInvocation@@getTypedPath(root,part).in(provider.next(part,Collection.class).getExpression()) @TO@ getTypedPath(root,part).in((Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()) @AT@ 9303 @LENGTH@ 82
---------UPD SimpleName@@MethodName:in:[provider.next(part,Collection.class).getExpression()] @TO@ MethodName:in:[(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression()] @AT@ 9328 @LENGTH@ 57
------------INS CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @TO@ SimpleName@@MethodName:in:[provider.next(part,Collection.class).getExpression()] @AT@ 9516 @LENGTH@ 81
---------------MOV MethodInvocation@@provider.next(part,Collection.class).getExpression() @TO@ CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @AT@ 9331 @LENGTH@ 53
---------------INS ParameterizedType@@Expression<Collection<?>> @TO@ CastExpression@@(Expression<Collection<?>>)provider.next(part,Collection.class).getExpression() @AT@ 9517 @LENGTH@ 25
------------------INS SimpleType@@Expression @TO@ ParameterizedType@@Expression<Collection<?>> @AT@ 9517 @LENGTH@ 10
------------------INS ParameterizedType@@Collection<?> @TO@ ParameterizedType@@Expression<Collection<?>> @AT@ 9528 @LENGTH@ 13
---------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<?> @AT@ 9528 @LENGTH@ 10
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Collection<?> @AT@ 9539 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:http.oauth2Login() @TO@ MethodInvocation:http.oauth2Login().and().oauth2Client() @AT@ 4385 @LENGTH@ 19
---UPD MethodInvocation@@http.oauth2Login() @TO@ http.oauth2Login().and().oauth2Client() @AT@ 4385 @LENGTH@ 18
------INS MethodInvocation@@MethodName:and:[] @TO@ MethodInvocation@@http.oauth2Login() @AT@ 4385 @LENGTH@ 29
------INS MethodInvocation@@MethodName:oauth2Login:[] @TO@ MethodInvocation@@http.oauth2Login() @AT@ 4385 @LENGTH@ 23
------UPD SimpleName@@MethodName:oauth2Login:[] @TO@ MethodName:oauth2Client:[] @AT@ 4390 @LENGTH@ 13


UPD EnumDeclaration@@[public, static]QueryStrategy,  @TO@ [static]QueryStrategy,  @AT@ 33947 @LENGTH@ 159
---DEL Modifier@@public @AT@ 33947 @LENGTH@ 6


UPD TypeDeclaration@@[public]BatchMessagingMessageListenerAdapter, MessagingMessageListenerAdapter[ChannelAwareBatchMessagelistener] @TO@ [public]BatchMessagingMessageListenerAdapter, MessagingMessageListenerAdapter[ChannelAwareBatchMessageListener] @AT@ 1477 @LENGTH@ 2532
---UPD SimpleType@@ChannelAwareBatchMessagelistener @TO@ ChannelAwareBatchMessageListener @AT@ 1581 @LENGTH@ 32


UPD TypeDeclaration@@[@Metadata(label="eip,transformation"), @XmlRootElement(name="marshal"), @XmlAccessorType(XmlAccessType.FIELD), public]MarshalDefinition, NoOutputDefinition<MarshalDefinition> @TO@ [@Metadata(label="dataformat,transformation"), @XmlRootElement(name="marshal"), @XmlAccessorType(XmlAccessType.FIELD), public]MarshalDefinition, NoOutputDefinition<MarshalDefinition> @AT@ 3661 @LENGTH@ 4856
---UPD NormalAnnotation@@@Metadata(label="eip,transformation") @TO@ @Metadata(label="dataformat,transformation") @AT@ 3661 @LENGTH@ 39


UPD TypeDeclaration@@[public]OAuthProviderSupport,  @TO@ [@Deprecated, public]OAuthProviderSupport,  @AT@ 792 @LENGTH@ 564
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProviderSupport,  @AT@ 1012 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]KubernetesSecretsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesSecretsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1457 @LENGTH@ 7182
---DEL Modifier@@static @AT@ 1464 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2Authentication, AbstractAuthenticationToken @TO@ [@Deprecated, public]OAuth2Authentication, AbstractAuthenticationToken @AT@ 513 @LENGTH@ 3005
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2Authentication, AbstractAuthenticationToken @AT@ 690 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(200,response.getResponseCode()) @TO@ MethodInvocation:assertEquals(204,response.getResponseCode()) @AT@ 4544 @LENGTH@ 46
---UPD MethodInvocation@@assertEquals(200,response.getResponseCode()) @TO@ assertEquals(204,response.getResponseCode()) @AT@ 4544 @LENGTH@ 45
------UPD SimpleName@@MethodName:assertEquals:[200, response.getResponseCode()] @TO@ MethodName:assertEquals:[204, response.getResponseCode()] @AT@ 4544 @LENGTH@ 45
---------UPD NumberLiteral@@200 @TO@ 204 @AT@ 4557 @LENGTH@ 3


INS IfStatement@@if (off == 4 && saltLength < 29) {  throw new IllegalArgumentException("Invalid salt");} @TO@ MethodDeclaration@@public, static, String, MethodName:hashpw, byte passwordb[], String salt,  @AT@ 29612 @LENGTH@ 93
---INS InfixExpression@@off == 4 && saltLength < 29 @TO@ IfStatement@@if (off == 4 && saltLength < 29) {  throw new IllegalArgumentException("Invalid salt");} @AT@ 29616 @LENGTH@ 27
------INS InfixExpression@@off == 4 @TO@ InfixExpression@@off == 4 && saltLength < 29 @AT@ 29616 @LENGTH@ 8
---------INS SimpleName@@off @TO@ InfixExpression@@off == 4 @AT@ 29616 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@off == 4 @AT@ 29619 @LENGTH@ 2
---------INS NumberLiteral@@4 @TO@ InfixExpression@@off == 4 @AT@ 29623 @LENGTH@ 1
------INS Operator@@&& @TO@ InfixExpression@@off == 4 && saltLength < 29 @AT@ 29624 @LENGTH@ 2
------INS InfixExpression@@saltLength < 29 @TO@ InfixExpression@@off == 4 && saltLength < 29 @AT@ 29628 @LENGTH@ 15
---------INS SimpleName@@saltLength @TO@ InfixExpression@@saltLength < 29 @AT@ 29628 @LENGTH@ 10
---------INS Operator@@< @TO@ InfixExpression@@saltLength < 29 @AT@ 29638 @LENGTH@ 1
---------INS NumberLiteral@@29 @TO@ InfixExpression@@saltLength < 29 @AT@ 29641 @LENGTH@ 2
---INS Block@@ThenBody:{  throw new IllegalArgumentException("Invalid salt");} @TO@ IfStatement@@if (off == 4 && saltLength < 29) {  throw new IllegalArgumentException("Invalid salt");} @AT@ 29645 @LENGTH@ 60
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Invalid salt") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Invalid salt");} @AT@ 29650 @LENGTH@ 51
---------INS ClassInstanceCreation@@IllegalArgumentException["Invalid salt"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Invalid salt") @AT@ 29656 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Invalid salt"] @AT@ 29656 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Invalid salt"] @AT@ 29660 @LENGTH@ 24
------------INS StringLiteral@@"Invalid salt" @TO@ ClassInstanceCreation@@IllegalArgumentException["Invalid salt"] @AT@ 29685 @LENGTH@ 14


UPD EnumDeclaration@@[public, static]PictureSize,  @TO@ [static]PictureSize,  @AT@ 158396 @LENGTH@ 94
---DEL Modifier@@public @AT@ 158396 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedJsonValidatorEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedJsonValidatorEndpointBuilder, [EndpointProducerBuilder] @AT@ 5046 @LENGTH@ 4285
---DEL Modifier@@static @AT@ 5053 @LENGTH@ 6


UPD MethodDeclaration@@default, AMQPEndpointBuilder, MethodName:aMQP, String path,  @TO@ default, AMQPEndpointBuilder, MethodName:amqp, String path,  @AT@ 225413 @LENGTH@ 354
---UPD SimpleName@@MethodName:aMQP @TO@ MethodName:amqp @AT@ 225441 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]JMXEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]JMXEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1453 @LENGTH@ 10012
---DEL Modifier@@static @AT@ 1460 @LENGTH@ 6


MOV FieldDeclaration@@private, boolean, [downloadVersion] @TO@ TypeDeclaration@@[@Mojo(name="autowire",defaultPhase=LifecyclePhase.PROCESS_CLASSES,threadSafe=true,requiresDependencyResolution=ResolutionScope.COMPILE), public]AutowireMojo, AbstractExecMojo @AT@ 3661 @LENGTH@ 32


UPD TypeDeclaration@@[public, abstract]AbstractOAuth2SecurityExceptionHandler,  @TO@ [@Deprecated, public, abstract]AbstractOAuth2SecurityExceptionHandler,  @AT@ 1365 @LENGTH@ 2388
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]AbstractOAuth2SecurityExceptionHandler,  @AT@ 1542 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]EC2EndpointBuilder, [EndpointProducerBuilder] @TO@ [public]EC2EndpointBuilder, [EndpointProducerBuilder] @AT@ 1390 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1397 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:successfulAuthentication, HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authentication, IOException, ServletException,  @TO@ private, void, MethodName:successfulAuthentication, HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authentication, IOException, ServletException,  @AT@ 6691 @LENGTH@ 443
---UPD Modifier@@protected @TO@ private @AT@ 6691 @LENGTH@ 9


UPD EnumDeclaration@@[public, static]ReadConsistency,  @TO@ [static]ReadConsistency,  @AT@ 45274 @LENGTH@ 91
---DEL Modifier@@public @AT@ 45274 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 4619 @LENGTH@ 2628
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 4698 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4698 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4703 @LENGTH@ 28


UPD TypeDeclaration@@[public]RandomValueStringGenerator,  @TO@ [@Deprecated, public]RandomValueStringGenerator,  @AT@ 230 @LENGTH@ 1686
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RandomValueStringGenerator,  @AT@ 407 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedKubernetesPersistentVolumesEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesPersistentVolumesEndpointBuilder, [EndpointProducerBuilder] @AT@ 9212 @LENGTH@ 3193
---DEL Modifier@@static @AT@ 9219 @LENGTH@ 6


INS MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @TO@ TypeDeclaration@@[public, final]HttpSecurity, AbstractConfiguredSecurityBuilder<DefaultSecurityFilterChain,HttpSecurity>[SecurityBuilder<DefaultSecurityFilterChain>, HttpSecurityBuilder<HttpSecurity>] @AT@ 45738 @LENGTH@ 220
---INS Modifier@@public @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45738 @LENGTH@ 6
---INS SimpleType@@HttpSecurity @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45745 @LENGTH@ 12
---INS SimpleName@@MethodName:httpBasic @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45758 @LENGTH@ 9
---INS SingleVariableDeclaration@@Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45768 @LENGTH@ 65
------INS ParameterizedType@@Customizer<HttpBasicConfigurer<HttpSecurity>> @TO@ SingleVariableDeclaration@@Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer @AT@ 45768 @LENGTH@ 45
---------INS SimpleType@@Customizer @TO@ ParameterizedType@@Customizer<HttpBasicConfigurer<HttpSecurity>> @AT@ 45768 @LENGTH@ 10
---------INS ParameterizedType@@HttpBasicConfigurer<HttpSecurity> @TO@ ParameterizedType@@Customizer<HttpBasicConfigurer<HttpSecurity>> @AT@ 45779 @LENGTH@ 33
------------INS SimpleType@@HttpBasicConfigurer @TO@ ParameterizedType@@HttpBasicConfigurer<HttpSecurity> @AT@ 45779 @LENGTH@ 19
------------INS SimpleType@@HttpSecurity @TO@ ParameterizedType@@HttpBasicConfigurer<HttpSecurity> @AT@ 45799 @LENGTH@ 12
------INS SimpleName@@httpBasicCustomizer @TO@ SingleVariableDeclaration@@Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer @AT@ 45814 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45842 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:httpBasicCustomizer.customize(getOrApply(new HttpBasicConfigurer<>())) @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45856 @LENGTH@ 71
------INS MethodInvocation@@httpBasicCustomizer.customize(getOrApply(new HttpBasicConfigurer<>())) @TO@ ExpressionStatement@@MethodInvocation:httpBasicCustomizer.customize(getOrApply(new HttpBasicConfigurer<>())) @AT@ 45856 @LENGTH@ 70
---------INS SimpleName@@Name:httpBasicCustomizer @TO@ MethodInvocation@@httpBasicCustomizer.customize(getOrApply(new HttpBasicConfigurer<>())) @AT@ 45856 @LENGTH@ 19
---------INS SimpleName@@MethodName:customize:[getOrApply(new HttpBasicConfigurer<>())] @TO@ MethodInvocation@@httpBasicCustomizer.customize(getOrApply(new HttpBasicConfigurer<>())) @AT@ 45876 @LENGTH@ 50
------------INS MethodInvocation@@getOrApply(new HttpBasicConfigurer<>()) @TO@ SimpleName@@MethodName:customize:[getOrApply(new HttpBasicConfigurer<>())] @AT@ 45886 @LENGTH@ 39
---------------INS SimpleName@@MethodName:getOrApply:[new HttpBasicConfigurer<>()] @TO@ MethodInvocation@@getOrApply(new HttpBasicConfigurer<>()) @AT@ 45886 @LENGTH@ 39
------------------INS ClassInstanceCreation@@HttpBasicConfigurer<>[] @TO@ SimpleName@@MethodName:getOrApply:[new HttpBasicConfigurer<>()] @AT@ 45897 @LENGTH@ 27
---------------------INS New@@new @TO@ ClassInstanceCreation@@HttpBasicConfigurer<>[] @AT@ 45897 @LENGTH@ 3
---------------------INS ParameterizedType@@HttpBasicConfigurer<> @TO@ ClassInstanceCreation@@HttpBasicConfigurer<>[] @AT@ 45901 @LENGTH@ 21
------------------------INS SimpleType@@HttpBasicConfigurer @TO@ ParameterizedType@@HttpBasicConfigurer<> @AT@ 45901 @LENGTH@ 19
---INS ReturnStatement@@ThisExpression:HttpSecurity.this @TO@ MethodDeclaration@@public, HttpSecurity, MethodName:httpBasic, Customizer<HttpBasicConfigurer<HttpSecurity>> httpBasicCustomizer, Exception,  @AT@ 45930 @LENGTH@ 25
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:HttpSecurity.this @AT@ 45937 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:oauth2LoginCustomizer.customize(getOrApply(new OAuth2LoginConfigurer<>())) @TO@ MethodInvocation:oauth2LoginCustomizer.customize(getOrApply(new OAuth2LoginConfigurer<>(getContext()))) @AT@ 78844 @LENGTH@ 75
---UPD MethodInvocation@@oauth2LoginCustomizer.customize(getOrApply(new OAuth2LoginConfigurer<>())) @TO@ oauth2LoginCustomizer.customize(getOrApply(new OAuth2LoginConfigurer<>(getContext()))) @AT@ 78844 @LENGTH@ 74
------UPD SimpleName@@MethodName:customize:[getOrApply(new OAuth2LoginConfigurer<>())] @TO@ MethodName:customize:[getOrApply(new OAuth2LoginConfigurer<>(getContext()))] @AT@ 78866 @LENGTH@ 52
---------UPD MethodInvocation@@getOrApply(new OAuth2LoginConfigurer<>()) @TO@ getOrApply(new OAuth2LoginConfigurer<>(getContext())) @AT@ 78876 @LENGTH@ 41
------------UPD SimpleName@@MethodName:getOrApply:[new OAuth2LoginConfigurer<>()] @TO@ MethodName:getOrApply:[new OAuth2LoginConfigurer<>(getContext())] @AT@ 78876 @LENGTH@ 41
---------------UPD ClassInstanceCreation@@OAuth2LoginConfigurer<>[] @TO@ OAuth2LoginConfigurer<>[getContext()] @AT@ 78887 @LENGTH@ 29
------------------INS MethodInvocation@@MethodName:getContext:[] @TO@ ClassInstanceCreation@@OAuth2LoginConfigurer<>[] @AT@ 78915 @LENGTH@ 12


INS FieldDeclaration@@String, [PASSWORD="password"] @TO@ TypeDeclaration@@[public]OAuth2ParameterNames,  @AT@ 2696 @LENGTH@ 29
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [PASSWORD="password"] @AT@ 2696 @LENGTH@ 6
---INS VariableDeclarationFragment@@PASSWORD="password" @TO@ FieldDeclaration@@String, [PASSWORD="password"] @AT@ 2703 @LENGTH@ 21
------INS SimpleName@@PASSWORD @TO@ VariableDeclarationFragment@@PASSWORD="password" @AT@ 2703 @LENGTH@ 8
------INS StringLiteral@@"password" @TO@ VariableDeclarationFragment@@PASSWORD="password" @AT@ 2714 @LENGTH@ 10


UPD IfStatement@@if (separatorIndex != -1) {  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} else {  setConcurrentConsumers(Integer.parseInt(concurrency));} @TO@ if (separatorIndex != -1) {  int concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex));  int maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1));  Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'");  this.concurrentConsumers=1;  this.maxConcurrentConsumers=null;  setConcurrentConsumers(concurrentConsumers);  setMaxConcurrentConsumers(maxConcurrentConsumers);} else {  setConcurrentConsumers(Integer.parseInt(concurrency));} @AT@ 8849 @LENGTH@ 315
---UPD Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @TO@ ThenBody:{  int concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex));  int maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1));  Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'");  this.concurrentConsumers=1;  this.maxConcurrentConsumers=null;  setConcurrentConsumers(concurrentConsumers);  setMaxConcurrentConsumers(maxConcurrentConsumers);} @AT@ 8875 @LENGTH@ 215
------INS VariableDeclarationStatement@@int concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)); @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 8881 @LENGTH@ 85
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)); @AT@ 8881 @LENGTH@ 3
---------INS VariableDeclarationFragment@@concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)) @TO@ VariableDeclarationStatement@@int concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)); @AT@ 8885 @LENGTH@ 80
------------INS SimpleName@@concurrentConsumers @TO@ VariableDeclarationFragment@@concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)) @AT@ 8885 @LENGTH@ 19
------------MOV MethodInvocation@@Integer.parseInt(concurrency.substring(0,separatorIndex)) @TO@ VariableDeclarationFragment@@concurrentConsumers=Integer.parseInt(concurrency.substring(0,separatorIndex)) @AT@ 8904 @LENGTH@ 58
------DEL ExpressionStatement@@MethodInvocation:setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex))) @AT@ 8881 @LENGTH@ 83
---------DEL MethodInvocation@@setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex))) @AT@ 8881 @LENGTH@ 82
------------DEL SimpleName@@MethodName:setConcurrentConsumers:[Integer.parseInt(concurrency.substring(0,separatorIndex))] @AT@ 8881 @LENGTH@ 82
------DEL ExpressionStatement@@MethodInvocation:setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length()))) @AT@ 8969 @LENGTH@ 116
---------DEL MethodInvocation@@setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length()))) @AT@ 8969 @LENGTH@ 115
------------DEL SimpleName@@MethodName:setMaxConcurrentConsumers:[Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length()))] @AT@ 8969 @LENGTH@ 115
---------------DEL MethodInvocation@@Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())) @AT@ 9002 @LENGTH@ 81
------INS VariableDeclarationStatement@@int maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)); @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 8971 @LENGTH@ 89
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)); @AT@ 8971 @LENGTH@ 3
---------INS VariableDeclarationFragment@@maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)) @TO@ VariableDeclarationStatement@@int maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)); @AT@ 8975 @LENGTH@ 84
------------INS SimpleName@@maxConcurrentConsumers @TO@ VariableDeclarationFragment@@maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)) @AT@ 8975 @LENGTH@ 22
------------INS MethodInvocation@@Integer.parseInt(concurrency.substring(separatorIndex + 1)) @TO@ VariableDeclarationFragment@@maxConcurrentConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)) @AT@ 9000 @LENGTH@ 59
---------------MOV SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(concurrency.substring(separatorIndex + 1)) @AT@ 9002 @LENGTH@ 7
---------------MOV SimpleName@@MethodName:parseInt:[concurrency.substring(separatorIndex + 1,concurrency.length())] @TO@ MethodInvocation@@Integer.parseInt(concurrency.substring(separatorIndex + 1)) @AT@ 9010 @LENGTH@ 73
------INS ExpressionStatement@@MethodInvocation:Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 9065 @LENGTH@ 140
---------INS MethodInvocation@@Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @TO@ ExpressionStatement@@MethodInvocation:Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @AT@ 9065 @LENGTH@ 139
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @AT@ 9065 @LENGTH@ 6
------------INS SimpleName@@MethodName:isTrue:[maxConcurrentConsumers >= concurrentConsumers, "'maxConcurrentConsumers' value must be at least 'concurrentConsumers'"] @TO@ MethodInvocation@@Assert.isTrue(maxConcurrentConsumers >= concurrentConsumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @AT@ 9072 @LENGTH@ 132
---------------INS InfixExpression@@maxConcurrentConsumers >= concurrentConsumers @TO@ SimpleName@@MethodName:isTrue:[maxConcurrentConsumers >= concurrentConsumers, "'maxConcurrentConsumers' value must be at least 'concurrentConsumers'"] @AT@ 9079 @LENGTH@ 45
------------------INS SimpleName@@maxConcurrentConsumers @TO@ InfixExpression@@maxConcurrentConsumers >= concurrentConsumers @AT@ 9079 @LENGTH@ 22
------------------INS Operator@@>= @TO@ InfixExpression@@maxConcurrentConsumers >= concurrentConsumers @AT@ 9101 @LENGTH@ 2
------------------INS SimpleName@@concurrentConsumers @TO@ InfixExpression@@maxConcurrentConsumers >= concurrentConsumers @AT@ 9105 @LENGTH@ 19
---------------INS StringLiteral@@"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'" @TO@ SimpleName@@MethodName:isTrue:[maxConcurrentConsumers >= concurrentConsumers, "'maxConcurrentConsumers' value must be at least 'concurrentConsumers'"] @AT@ 9132 @LENGTH@ 71
------INS ExpressionStatement@@Assignment:this.concurrentConsumers=1 @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 9210 @LENGTH@ 29
---------INS Assignment@@this.concurrentConsumers=1 @TO@ ExpressionStatement@@Assignment:this.concurrentConsumers=1 @AT@ 9210 @LENGTH@ 28
------------INS FieldAccess@@this.concurrentConsumers @TO@ Assignment@@this.concurrentConsumers=1 @AT@ 9210 @LENGTH@ 24
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.concurrentConsumers @AT@ 9210 @LENGTH@ 4
---------------INS SimpleName@@concurrentConsumers @TO@ FieldAccess@@this.concurrentConsumers @AT@ 9215 @LENGTH@ 19
------------INS Operator@@= @TO@ Assignment@@this.concurrentConsumers=1 @AT@ 9234 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ Assignment@@this.concurrentConsumers=1 @AT@ 9237 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:this.maxConcurrentConsumers=null @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 9244 @LENGTH@ 35
---------INS Assignment@@this.maxConcurrentConsumers=null @TO@ ExpressionStatement@@Assignment:this.maxConcurrentConsumers=null @AT@ 9244 @LENGTH@ 34
------------INS FieldAccess@@this.maxConcurrentConsumers @TO@ Assignment@@this.maxConcurrentConsumers=null @AT@ 9244 @LENGTH@ 27
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.maxConcurrentConsumers @AT@ 9244 @LENGTH@ 4
---------------INS SimpleName@@maxConcurrentConsumers @TO@ FieldAccess@@this.maxConcurrentConsumers @AT@ 9249 @LENGTH@ 22
------------INS Operator@@= @TO@ Assignment@@this.maxConcurrentConsumers=null @AT@ 9271 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@this.maxConcurrentConsumers=null @AT@ 9274 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:setConcurrentConsumers(concurrentConsumers) @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 9284 @LENGTH@ 44
---------INS MethodInvocation@@setConcurrentConsumers(concurrentConsumers) @TO@ ExpressionStatement@@MethodInvocation:setConcurrentConsumers(concurrentConsumers) @AT@ 9284 @LENGTH@ 43
------------INS SimpleName@@MethodName:setConcurrentConsumers:[concurrentConsumers] @TO@ MethodInvocation@@setConcurrentConsumers(concurrentConsumers) @AT@ 9284 @LENGTH@ 43
---------------INS SimpleName@@concurrentConsumers @TO@ SimpleName@@MethodName:setConcurrentConsumers:[concurrentConsumers] @AT@ 9307 @LENGTH@ 19
------INS ExpressionStatement@@MethodInvocation:setMaxConcurrentConsumers(maxConcurrentConsumers) @TO@ Block@@ThenBody:{  setConcurrentConsumers(Integer.parseInt(concurrency.substring(0,separatorIndex)));  setMaxConcurrentConsumers(Integer.parseInt(concurrency.substring(separatorIndex + 1,concurrency.length())));} @AT@ 9333 @LENGTH@ 50
---------INS MethodInvocation@@setMaxConcurrentConsumers(maxConcurrentConsumers) @TO@ ExpressionStatement@@MethodInvocation:setMaxConcurrentConsumers(maxConcurrentConsumers) @AT@ 9333 @LENGTH@ 49
------------INS SimpleName@@MethodName:setMaxConcurrentConsumers:[maxConcurrentConsumers] @TO@ MethodInvocation@@setMaxConcurrentConsumers(maxConcurrentConsumers) @AT@ 9333 @LENGTH@ 49
---------------INS SimpleName@@maxConcurrentConsumers @TO@ SimpleName@@MethodName:setMaxConcurrentConsumers:[maxConcurrentConsumers] @AT@ 9359 @LENGTH@ 22


UPD TypeDeclaration@@[public, static]AdvancedSagaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSagaEndpointBuilder, [EndpointProducerBuilder] @AT@ 2506 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 2513 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedCinderEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedCinderEndpointBuilder, [EndpointProducerBuilder] @AT@ 4787 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 4794 @LENGTH@ 6


UPD Block@@ThenBody:{  this.filter.setCsrfTokenRepository(this.csrfTokenRepository);  http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @TO@ ThenBody:{  this.filter.setCsrfTokenRepository(this.csrfTokenRepository);  if (ServerHttpSecurity.this.logout != null) {    ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));  }} @AT@ 107155 @LENGTH@ 163
---INS IfStatement@@if (ServerHttpSecurity.this.logout != null) {  ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @TO@ Block@@ThenBody:{  this.filter.setCsrfTokenRepository(this.csrfTokenRepository);  http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @AT@ 107227 @LENGTH@ 160
------INS InfixExpression@@ServerHttpSecurity.this.logout != null @TO@ IfStatement@@if (ServerHttpSecurity.this.logout != null) {  ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @AT@ 107231 @LENGTH@ 38
---------INS FieldAccess@@ServerHttpSecurity.this.logout @TO@ InfixExpression@@ServerHttpSecurity.this.logout != null @AT@ 107231 @LENGTH@ 30
------------INS ThisExpression@@this @TO@ FieldAccess@@ServerHttpSecurity.this.logout @AT@ 107231 @LENGTH@ 23
------------INS SimpleName@@logout @TO@ FieldAccess@@ServerHttpSecurity.this.logout @AT@ 107255 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@ServerHttpSecurity.this.logout != null @AT@ 107261 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@ServerHttpSecurity.this.logout != null @AT@ 107265 @LENGTH@ 4
------INS Block@@ThenBody:{  ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @TO@ IfStatement@@if (ServerHttpSecurity.this.logout != null) {  ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @AT@ 107271 @LENGTH@ 116
---------MOV ExpressionStatement@@MethodInvocation:http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @TO@ Block@@ThenBody:{  ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository));} @AT@ 107227 @LENGTH@ 86
------------UPD MethodInvocation@@http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @TO@ ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @AT@ 107227 @LENGTH@ 85
---------------DEL MethodInvocation@@MethodName:logout:[] @AT@ 107227 @LENGTH@ 13
---------------DEL SimpleName@@Name:http @AT@ 107227 @LENGTH@ 4
---------------INS FieldAccess@@ServerHttpSecurity.this.logout @TO@ MethodInvocation@@http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @AT@ 107278 @LENGTH@ 30
------------------INS ThisExpression@@this @TO@ FieldAccess@@ServerHttpSecurity.this.logout @AT@ 107278 @LENGTH@ 23
------------------INS SimpleName@@logout @TO@ FieldAccess@@ServerHttpSecurity.this.logout @AT@ 107302 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:http.logout().addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @TO@ MethodInvocation:ServerHttpSecurity.this.logout.addLogoutHandler(new CsrfServerLogoutHandler(this.csrfTokenRepository)) @AT@ 107227 @LENGTH@ 86


UPD TypeDeclaration@@[public]AccessTokenRequest, [MultiValueMap<String,String>] @TO@ [@Deprecated, public]AccessTokenRequest, [MultiValueMap<String,String>] @AT@ 844 @LENGTH@ 652
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AccessTokenRequest, [MultiValueMap<String,String>] @AT@ 1030 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedPdfEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedPdfEndpointBuilder, [EndpointProducerBuilder] @AT@ 8475 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 8482 @LENGTH@ 6


UPD TypeDeclaration@@[public]EllipticCurveVerifier, [SignatureVerifier] @TO@ [@Deprecated, public]EllipticCurveVerifier, [SignatureVerifier] @AT@ 943 @LENGTH@ 988
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]EllipticCurveVerifier, [SignatureVerifier] @AT@ 1121 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2294 @LENGTH@ 80
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2294 @LENGTH@ 79
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2294 @LENGTH@ 79
---------INS MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 2305 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2305 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2305 @LENGTH@ 35
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 2331 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2305 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2305 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2352 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 2361 @LENGTH@ 10


UPD VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 5975 @LENGTH@ 217
---UPD VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 6014 @LENGTH@ 177
------UPD MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 6045 @LENGTH@ 146
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 6045 @LENGTH@ 149


INS MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @TO@ TypeDeclaration@@[public]RabbitTemplate, RabbitAccessor[BeanFactoryAware, RabbitOperations, MessageListener, ListenerContainerAware, PublisherCallbackChannel.Listener, Lifecycle, BeanNameAware] @AT@ 37192 @LENGTH@ 633
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37192 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37202 @LENGTH@ 7
---INS SimpleName@@MethodName:useDirectReplyTo @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37210 @LENGTH@ 16
---MOV IfStatement@@if (this.useTemporaryReplyQueues) {  if (this.replyAddress != null) {    logger.warn("'useTemporaryReplyQueues' is ignored when a 'replyAddress' is provided");  } else {    return false;  }} @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37233 @LENGTH@ 204
---INS IfStatement@@if (this.replyAddress == null || Address.AMQ_RABBITMQ_REPLY_TO.equals(this.replyAddress)) {  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    if (shouldRethrow(ex)) {      throw ex;    }  }} @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37440 @LENGTH@ 366
------MOV InfixExpression@@this.replyAddress == null || Address.AMQ_RABBITMQ_REPLY_TO.equals(this.replyAddress) @TO@ IfStatement@@if (this.replyAddress == null || Address.AMQ_RABBITMQ_REPLY_TO.equals(this.replyAddress)) {  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    if (shouldRethrow(ex)) {      throw ex;    }  }} @AT@ 37444 @LENGTH@ 84
------INS Block@@ThenBody:{  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    if (shouldRethrow(ex)) {      throw ex;    }  }} @TO@ IfStatement@@if (this.replyAddress == null || Address.AMQ_RABBITMQ_REPLY_TO.equals(this.replyAddress)) {  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    if (shouldRethrow(ex)) {      throw ex;    }  }} @AT@ 37530 @LENGTH@ 276
---------INS TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @TO@ Block@@ThenBody:{  try {    return execute(channel -> {      channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);      return true;    });  } catch (  AmqpConnectException|AmqpIOException ex) {    if (shouldRethrow(ex)) {      throw ex;    }  }} @AT@ 37535 @LENGTH@ 267
------------MOV ReturnStatement@@MethodInvocation:execute(channel -> {
  channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);
  return true;
}
) @TO@ TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @AT@ 37545 @LENGTH@ 142
------------INS CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @TO@ TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @AT@ 37696 @LENGTH@ 106
---------------MOV SingleVariableDeclaration@@AmqpConnectException|AmqpIOException ex @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @AT@ 37703 @LENGTH@ 41
---------------INS IfStatement@@if (shouldRethrow(ex)) {  throw ex;} @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  if (shouldRethrow(ex)) {    throw ex;  }} @AT@ 37752 @LENGTH@ 45
------------------INS MethodInvocation@@shouldRethrow(ex) @TO@ IfStatement@@if (shouldRethrow(ex)) {  throw ex;} @AT@ 37756 @LENGTH@ 17
---------------------INS SimpleName@@MethodName:shouldRethrow:[ex] @TO@ MethodInvocation@@shouldRethrow(ex) @AT@ 37756 @LENGTH@ 17
------------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:shouldRethrow:[ex] @AT@ 37770 @LENGTH@ 2
------------------INS Block@@ThenBody:{  throw ex;} @TO@ IfStatement@@if (shouldRethrow(ex)) {  throw ex;} @AT@ 37775 @LENGTH@ 22
---------------------INS ThrowStatement@@SimpleName:ex @TO@ Block@@ThenBody:{  throw ex;} @AT@ 37782 @LENGTH@ 9
------------------------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 37788 @LENGTH@ 2
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:useDirectReplyTo,  @AT@ 37809 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 37816 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:BeanDefinitionBuilder.rootBeanDefinition(RedisKeyValueAdapter.class).addConstructorArgReference(configuration.getRequiredAttribute("redisTemplateRef",String.class)).addConstructorArgReference(REDIS_CONVERTER_BEAN_NAME).addPropertyValue("enableKeyspaceEvents",configuration.getRequiredAttribute("enableKeyspaceEvents",EnableKeyspaceEvents.class)).addPropertyValue("keyspaceNotificationsConfigParameter",configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class)).getBeanDefinition() @TO@ MethodInvocation:BeanDefinitionBuilder.rootBeanDefinition(RedisKeyValueAdapter.class).addConstructorArgReference(configuration.getRequiredAttribute("redisTemplateRef",String.class)).addConstructorArgReference(REDIS_CONVERTER_BEAN_NAME).addPropertyValue("enableKeyspaceEvents",configuration.getRequiredAttribute("enableKeyspaceEvents",EnableKeyspaceEvents.class)).addPropertyValue("keyspaceNotificationsConfigParameter",configuration.getAttribute("keyspaceNotificationsConfigParameter",String.class).orElse("")).getBeanDefinition() @AT@ 5936 @LENGTH@ 575
---UPD MethodInvocation@@BeanDefinitionBuilder.rootBeanDefinition(RedisKeyValueAdapter.class).addConstructorArgReference(configuration.getRequiredAttribute("redisTemplateRef",String.class)).addConstructorArgReference(REDIS_CONVERTER_BEAN_NAME).addPropertyValue("enableKeyspaceEvents",configuration.getRequiredAttribute("enableKeyspaceEvents",EnableKeyspaceEvents.class)).addPropertyValue("keyspaceNotificationsConfigParameter",configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class)).getBeanDefinition() @TO@ BeanDefinitionBuilder.rootBeanDefinition(RedisKeyValueAdapter.class).addConstructorArgReference(configuration.getRequiredAttribute("redisTemplateRef",String.class)).addConstructorArgReference(REDIS_CONVERTER_BEAN_NAME).addPropertyValue("enableKeyspaceEvents",configuration.getRequiredAttribute("enableKeyspaceEvents",EnableKeyspaceEvents.class)).addPropertyValue("keyspaceNotificationsConfigParameter",configuration.getAttribute("keyspaceNotificationsConfigParameter",String.class).orElse("")).getBeanDefinition() @AT@ 5943 @LENGTH@ 567
------UPD MethodInvocation@@MethodName:addPropertyValue:["keyspaceNotificationsConfigParameter", configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class)] @TO@ MethodName:addPropertyValue:["keyspaceNotificationsConfigParameter", configuration.getAttribute("keyspaceNotificationsConfigParameter",String.class).orElse("")] @AT@ 5943 @LENGTH@ 539
---------UPD MethodInvocation@@configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class) @TO@ configuration.getAttribute("keyspaceNotificationsConfigParameter",String.class).orElse("") @AT@ 6393 @LENGTH@ 88
------------INS MethodInvocation@@MethodName:getAttribute:["keyspaceNotificationsConfigParameter", String.class] @TO@ MethodInvocation@@configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class) @AT@ 6393 @LENGTH@ 80
---------------INS StringLiteral@@"keyspaceNotificationsConfigParameter" @TO@ MethodInvocation@@MethodName:getAttribute:["keyspaceNotificationsConfigParameter", String.class] @AT@ 6420 @LENGTH@ 38
---------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:getAttribute:["keyspaceNotificationsConfigParameter", String.class] @AT@ 6460 @LENGTH@ 12
------------DEL SimpleName@@MethodName:getRequiredAttribute:["keyspaceNotificationsConfigParameter", String.class] @AT@ 6407 @LENGTH@ 74
---------------DEL StringLiteral@@"keyspaceNotificationsConfigParameter" @AT@ 6428 @LENGTH@ 38
---------------DEL TypeLiteral@@String.class @AT@ 6468 @LENGTH@ 12
------------INS SimpleName@@MethodName:orElse:[""] @TO@ MethodInvocation@@configuration.getRequiredAttribute("keyspaceNotificationsConfigParameter",String.class) @AT@ 6474 @LENGTH@ 10
---------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:orElse:[""] @AT@ 6481 @LENGTH@ 2


UPD VariableDeclarationStatement@@OAuth2TokenIntrospectionClient introspectionClient=new NimbusOAuth2TokenIntrospectionClient(this.introspectionUri,"client","secret"); @TO@ OpaqueTokenIntrospector introspectionClient=new NimbusOpaqueTokenIntrospector(this.introspectionUri,"client","secret"); @AT@ 3302 @LENGTH@ 141
---UPD SimpleType@@OAuth2TokenIntrospectionClient @TO@ OpaqueTokenIntrospector @AT@ 3302 @LENGTH@ 30
---UPD VariableDeclarationFragment@@introspectionClient=new NimbusOAuth2TokenIntrospectionClient(this.introspectionUri,"client","secret") @TO@ introspectionClient=new NimbusOpaqueTokenIntrospector(this.introspectionUri,"client","secret") @AT@ 3333 @LENGTH@ 109
------UPD ClassInstanceCreation@@NimbusOAuth2TokenIntrospectionClient[this.introspectionUri, "client", "secret"] @TO@ NimbusOpaqueTokenIntrospector[this.introspectionUri, "client", "secret"] @AT@ 3359 @LENGTH@ 83
---------UPD SimpleType@@NimbusOAuth2TokenIntrospectionClient @TO@ NimbusOpaqueTokenIntrospector @AT@ 3363 @LENGTH@ 36


MOV MethodDeclaration@@public, void, MethodName:setHttpProxy, String host, Integer port,  @TO@ TypeDeclaration@@[public]TelegramServiceRestBotAPIAdapter, [TelegramService] @AT@ 3093 @LENGTH@ 253


UPD IfStatement@@if (processor != null) {  processor.process(exchange);} @TO@ if (processor != null) {  processor.process(exchange);} else {  LOG.debug("Cannot execute CamelJob as there are no active consumers.");} @AT@ 2374 @LENGTH@ 91
---INS Block@@ElseBody:{  LOG.debug("Cannot execute CamelJob as there are no active consumers.");} @TO@ IfStatement@@if (processor != null) {  processor.process(exchange);} @AT@ 2471 @LENGTH@ 111
------INS ExpressionStatement@@MethodInvocation:LOG.debug("Cannot execute CamelJob as there are no active consumers.") @TO@ Block@@ElseBody:{  LOG.debug("Cannot execute CamelJob as there are no active consumers.");} @AT@ 2493 @LENGTH@ 71
---------INS MethodInvocation@@LOG.debug("Cannot execute CamelJob as there are no active consumers.") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Cannot execute CamelJob as there are no active consumers.") @AT@ 2493 @LENGTH@ 70
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Cannot execute CamelJob as there are no active consumers.") @AT@ 2493 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Cannot execute CamelJob as there are no active consumers."] @TO@ MethodInvocation@@LOG.debug("Cannot execute CamelJob as there are no active consumers.") @AT@ 2497 @LENGTH@ 66
---------------INS StringLiteral@@"Cannot execute CamelJob as there are no active consumers." @TO@ SimpleName@@MethodName:debug:["Cannot execute CamelJob as there are no active consumers."] @AT@ 2503 @LENGTH@ 59


UPD TypeDeclaration@@[public]ConfigUtils,  @TO@ [@Deprecated, public]ConfigUtils,  @AT@ 1050 @LENGTH@ 4018
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConfigUtils,  @AT@ 1271 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]PrinterEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]PrinterEndpointBuilder, [EndpointProducerBuilder] @AT@ 1417 @LENGTH@ 6054
---DEL Modifier@@static @AT@ 1424 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedKubernetesConfigMapsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKubernetesConfigMapsEndpointBuilder, [EndpointProducerBuilder] @AT@ 8835 @LENGTH@ 3130
---DEL Modifier@@static @AT@ 8842 @LENGTH@ 6


INS MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @TO@ TypeDeclaration@@[@ToString, @RequiredArgsConstructor(access=AccessLevel.PRIVATE), static]DefaultPersistentPropertyPaths, [PersistentPropertyPaths<T,P>] @AT@ 12024 @LENGTH@ 410
---INS Modifier@@public @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12024 @LENGTH@ 6
---INS ParameterizedType@@PersistentPropertyPaths<T,P> @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12031 @LENGTH@ 29
------INS SimpleType@@PersistentPropertyPaths @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 12031 @LENGTH@ 23
------INS SimpleType@@T @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 12055 @LENGTH@ 1
------INS SimpleType@@P @TO@ ParameterizedType@@PersistentPropertyPaths<T,P> @AT@ 12058 @LENGTH@ 1
---INS SimpleName@@MethodName:dropPathIfSegmentMatches @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12061 @LENGTH@ 24
---INS SingleVariableDeclaration@@Predicate<? super P> predicate @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12086 @LENGTH@ 30
------INS ParameterizedType@@Predicate<? super P> @TO@ SingleVariableDeclaration@@Predicate<? super P> predicate @AT@ 12086 @LENGTH@ 20
---------INS SimpleType@@Predicate @TO@ ParameterizedType@@Predicate<? super P> @AT@ 12086 @LENGTH@ 9
---------INS WildcardType@@? @TO@ ParameterizedType@@Predicate<? super P> @AT@ 12096 @LENGTH@ 9
------INS SimpleName@@predicate @TO@ SingleVariableDeclaration@@Predicate<? super P> predicate @AT@ 12107 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.notNull(predicate,"Predicate must not be null!") @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12124 @LENGTH@ 57
------INS MethodInvocation@@Assert.notNull(predicate,"Predicate must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(predicate,"Predicate must not be null!") @AT@ 12124 @LENGTH@ 56
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(predicate,"Predicate must not be null!") @AT@ 12124 @LENGTH@ 6
---------INS SimpleName@@MethodName:notNull:[predicate, "Predicate must not be null!"] @TO@ MethodInvocation@@Assert.notNull(predicate,"Predicate must not be null!") @AT@ 12131 @LENGTH@ 49
------------INS SimpleName@@predicate @TO@ SimpleName@@MethodName:notNull:[predicate, "Predicate must not be null!"] @AT@ 12139 @LENGTH@ 9
------------INS StringLiteral@@"Predicate must not be null!" @TO@ SimpleName@@MethodName:notNull:[predicate, "Predicate must not be null!"] @AT@ 12150 @LENGTH@ 29
---INS VariableDeclarationStatement@@List<PersistentPropertyPath<P>> paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()); @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12186 @LENGTH@ 148
------INS ParameterizedType@@List<PersistentPropertyPath<P>> @TO@ VariableDeclarationStatement@@List<PersistentPropertyPath<P>> paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()); @AT@ 12186 @LENGTH@ 31
---------INS SimpleType@@List @TO@ ParameterizedType@@List<PersistentPropertyPath<P>> @AT@ 12186 @LENGTH@ 4
---------INS ParameterizedType@@PersistentPropertyPath<P> @TO@ ParameterizedType@@List<PersistentPropertyPath<P>> @AT@ 12191 @LENGTH@ 25
------------INS SimpleType@@PersistentPropertyPath @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 12191 @LENGTH@ 22
------------INS SimpleType@@P @TO@ ParameterizedType@@PersistentPropertyPath<P> @AT@ 12214 @LENGTH@ 1
------INS VariableDeclarationFragment@@paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @TO@ VariableDeclarationStatement@@List<PersistentPropertyPath<P>> paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()); @AT@ 12218 @LENGTH@ 115
---------INS SimpleName@@paths @TO@ VariableDeclarationFragment@@paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12218 @LENGTH@ 5
---------INS MethodInvocation@@this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @TO@ VariableDeclarationFragment@@paths=this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12226 @LENGTH@ 107
------------INS MethodInvocation@@MethodName:filter:[it -> !it.stream().anyMatch(predicate)] @TO@ MethodInvocation@@this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12226 @LENGTH@ 69
---------------INS LambdaExpression@@it -> !it.stream().anyMatch(predicate) @TO@ MethodInvocation@@MethodName:filter:[it -> !it.stream().anyMatch(predicate)] @AT@ 12256 @LENGTH@ 38
------------------INS VariableDeclarationFragment@@it @TO@ LambdaExpression@@it -> !it.stream().anyMatch(predicate) @AT@ 12256 @LENGTH@ 2
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it @AT@ 12256 @LENGTH@ 2
------------------INS PrefixExpression@@!it.stream().anyMatch(predicate) @TO@ LambdaExpression@@it -> !it.stream().anyMatch(predicate) @AT@ 12262 @LENGTH@ 32
---------------------INS Operator@@! @TO@ PrefixExpression@@!it.stream().anyMatch(predicate) @AT@ 12262 @LENGTH@ 1
---------------------INS MethodInvocation@@it.stream().anyMatch(predicate) @TO@ PrefixExpression@@!it.stream().anyMatch(predicate) @AT@ 12263 @LENGTH@ 31
------------------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@it.stream().anyMatch(predicate) @AT@ 12263 @LENGTH@ 11
------------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.stream().anyMatch(predicate) @AT@ 12263 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:anyMatch:[predicate] @TO@ MethodInvocation@@it.stream().anyMatch(predicate) @AT@ 12275 @LENGTH@ 19
---------------------------INS SimpleName@@predicate @TO@ SimpleName@@MethodName:anyMatch:[predicate] @AT@ 12284 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12226 @LENGTH@ 13
------------INS ThisExpression@@this @TO@ MethodInvocation@@this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12226 @LENGTH@ 4
------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@this.stream().filter(it -> !it.stream().anyMatch(predicate)).collect(Collectors.toList()) @AT@ 12305 @LENGTH@ 28
---------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 12313 @LENGTH@ 19
------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 12313 @LENGTH@ 10
------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 12324 @LENGTH@ 8
---INS ReturnStatement@@ConditionalExpression:paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @TO@ MethodDeclaration@@public, PersistentPropertyPaths<T,P>, MethodName:dropPathIfSegmentMatches, Predicate<? super P> predicate,  @AT@ 12339 @LENGTH@ 91
------INS ConditionalExpression@@paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @TO@ ReturnStatement@@ConditionalExpression:paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @AT@ 12346 @LENGTH@ 83
---------INS MethodInvocation@@paths.equals(this.paths) @TO@ ConditionalExpression@@paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @AT@ 12346 @LENGTH@ 24
------------INS SimpleName@@Name:paths @TO@ MethodInvocation@@paths.equals(this.paths) @AT@ 12346 @LENGTH@ 5
------------INS SimpleName@@MethodName:equals:[this.paths] @TO@ MethodInvocation@@paths.equals(this.paths) @AT@ 12352 @LENGTH@ 18
---------------INS FieldAccess@@this.paths @TO@ SimpleName@@MethodName:equals:[this.paths] @AT@ 12359 @LENGTH@ 10
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.paths @AT@ 12359 @LENGTH@ 4
------------------INS SimpleName@@paths @TO@ FieldAccess@@this.paths @AT@ 12364 @LENGTH@ 5
---------INS ThisExpression@@this @TO@ ConditionalExpression@@paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @AT@ 12373 @LENGTH@ 4
---------INS ClassInstanceCreation@@DefaultPersistentPropertyPaths<>[type, paths] @TO@ ConditionalExpression@@paths.equals(this.paths) ? this : new DefaultPersistentPropertyPaths<>(type,paths) @AT@ 12380 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPaths<>[type, paths] @AT@ 12380 @LENGTH@ 3
------------INS ParameterizedType@@DefaultPersistentPropertyPaths<> @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPaths<>[type, paths] @AT@ 12384 @LENGTH@ 32
---------------INS SimpleType@@DefaultPersistentPropertyPaths @TO@ ParameterizedType@@DefaultPersistentPropertyPaths<> @AT@ 12384 @LENGTH@ 30
------------INS SimpleName@@type @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPaths<>[type, paths] @AT@ 12417 @LENGTH@ 4
------------INS SimpleName@@paths @TO@ ClassInstanceCreation@@DefaultPersistentPropertyPaths<>[type, paths] @AT@ 12423 @LENGTH@ 5


INS VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @TO@ MethodDeclaration@@public, OAuth2AuthorizedClient, MethodName:authorize, OAuth2AuthorizeRequest authorizeRequest,  @AT@ 4075 @LENGTH@ 349
---INS SimpleType@@OAuth2AuthorizationContext @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @AT@ 4075 @LENGTH@ 26
---INS VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @AT@ 4102 @LENGTH@ 321
------INS SimpleName@@authorizationContext @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4102 @LENGTH@ 20
------INS MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4125 @LENGTH@ 298
---------INS MethodInvocation@@MethodName:attributes:[attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4125 @LENGTH@ 285
------------INS LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @TO@ MethodInvocation@@MethodName:attributes:[attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
] @AT@ 4182 @LENGTH@ 227
---------------MOV VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 4026 @LENGTH@ 174
------------------DEL SimpleType@@OAuth2AuthorizationContext @AT@ 4026 @LENGTH@ 26
------------------UPD VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @TO@ contextAttributes=this.contextAttributesMapper.apply(authorizeRequest) @AT@ 4053 @LENGTH@ 146
---------------------DEL SimpleName@@authorizationContext @AT@ 4053 @LENGTH@ 20
---------------------DEL MethodInvocation@@contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 4076 @LENGTH@ 123
------------------------DEL MethodInvocation@@MethodName:attributes:[this.contextAttributesMapper.apply(authorizeRequest)] @AT@ 4076 @LENGTH@ 110
------------------------DEL MethodInvocation@@MethodName:principal:[principal] @AT@ 4076 @LENGTH@ 40
---------------------------DEL SimpleName@@principal @AT@ 4106 @LENGTH@ 9
------------------------DEL SimpleName@@Name:contextBuilder @AT@ 4076 @LENGTH@ 14
------------------------DEL SimpleName@@MethodName:build:[] @AT@ 4192 @LENGTH@ 7
---------------------MOV MethodInvocation@@this.contextAttributesMapper.apply(authorizeRequest) @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 4133 @LENGTH@ 52
---------------------INS SimpleName@@contextAttributes @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 4223 @LENGTH@ 17
------------------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @AT@ 4203 @LENGTH@ 19
---------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4203 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 4207 @LENGTH@ 6
---------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 4215 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@attributes @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 4182 @LENGTH@ 10
------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 4182 @LENGTH@ 10
---------------INS IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 4302 @LENGTH@ 101
------------------INS PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @TO@ IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @AT@ 4306 @LENGTH@ 43
---------------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @AT@ 4306 @LENGTH@ 1
---------------------INS MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @AT@ 4307 @LENGTH@ 42
------------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @AT@ 4307 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:isEmpty:[contextAttributes] @TO@ MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @AT@ 4323 @LENGTH@ 26
---------------------------INS SimpleName@@contextAttributes @TO@ SimpleName@@MethodName:isEmpty:[contextAttributes] @AT@ 4331 @LENGTH@ 17
------------------INS Block@@ThenBody:{  attributes.putAll(contextAttributes);} @TO@ IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @AT@ 4351 @LENGTH@ 52
---------------------INS ExpressionStatement@@MethodInvocation:attributes.putAll(contextAttributes) @TO@ Block@@ThenBody:{  attributes.putAll(contextAttributes);} @AT@ 4359 @LENGTH@ 37
------------------------INS MethodInvocation@@attributes.putAll(contextAttributes) @TO@ ExpressionStatement@@MethodInvocation:attributes.putAll(contextAttributes) @AT@ 4359 @LENGTH@ 36
---------------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.putAll(contextAttributes) @AT@ 4359 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:putAll:[contextAttributes] @TO@ MethodInvocation@@attributes.putAll(contextAttributes) @AT@ 4370 @LENGTH@ 25
------------------------------INS SimpleName@@contextAttributes @TO@ SimpleName@@MethodName:putAll:[contextAttributes] @AT@ 4377 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:principal:[principal] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4125 @LENGTH@ 40
------------INS SimpleName@@principal @TO@ MethodInvocation@@MethodName:principal:[principal] @AT@ 4155 @LENGTH@ 9
---------INS SimpleName@@Name:contextBuilder @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4125 @LENGTH@ 14
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4416 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:when(securityContextRepository.load(any())).thenReturn(authentication(token)) @TO@ MethodDeclaration@@public, void, MethodName:oauth2LoginWhenCustomBeansThenUsed,  @AT@ 19504 @LENGTH@ 78
---INS MethodInvocation@@when(securityContextRepository.load(any())).thenReturn(authentication(token)) @TO@ ExpressionStatement@@MethodInvocation:when(securityContextRepository.load(any())).thenReturn(authentication(token)) @AT@ 19504 @LENGTH@ 77
------INS MethodInvocation@@MethodName:when:[securityContextRepository.load(any())] @TO@ MethodInvocation@@when(securityContextRepository.load(any())).thenReturn(authentication(token)) @AT@ 19504 @LENGTH@ 43
---------INS MethodInvocation@@securityContextRepository.load(any()) @TO@ MethodInvocation@@MethodName:when:[securityContextRepository.load(any())] @AT@ 19509 @LENGTH@ 37
------------INS SimpleName@@Name:securityContextRepository @TO@ MethodInvocation@@securityContextRepository.load(any()) @AT@ 19509 @LENGTH@ 25
------------INS SimpleName@@MethodName:load:[any()] @TO@ MethodInvocation@@securityContextRepository.load(any()) @AT@ 19535 @LENGTH@ 11
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:load:[any()] @AT@ 19540 @LENGTH@ 5
------INS SimpleName@@MethodName:thenReturn:[authentication(token)] @TO@ MethodInvocation@@when(securityContextRepository.load(any())).thenReturn(authentication(token)) @AT@ 19548 @LENGTH@ 33
---------INS MethodInvocation@@authentication(token) @TO@ SimpleName@@MethodName:thenReturn:[authentication(token)] @AT@ 19559 @LENGTH@ 21
------------INS SimpleName@@MethodName:authentication:[token] @TO@ MethodInvocation@@authentication(token) @AT@ 19559 @LENGTH@ 21
---------------INS SimpleName@@token @TO@ SimpleName@@MethodName:authentication:[token] @AT@ 19574 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]JiraType,  @TO@ [static]JiraType,  @AT@ 29812 @LENGTH@ 150
---DEL Modifier@@public @AT@ 29812 @LENGTH@ 6


UPD ReturnStatement@@BooleanLiteral:true @TO@ BooleanLiteral:false @AT@ 7912 @LENGTH@ 12
---UPD BooleanLiteral@@true @TO@ false @AT@ 7919 @LENGTH@ 4


UPD IfStatement@@if (this.formLogin != null) {  this.formLogin.authenticationManager(this.authenticationManager);  if (this.securityContextRepository != null) {    this.formLogin.securityContextRepository(this.securityContextRepository);  }  this.formLogin.configure(this);} @TO@ if (this.formLogin != null) {  if (this.formLogin.authenticationManager == null) {    this.formLogin.authenticationManager(this.authenticationManager);  }  if (this.securityContextRepository != null) {    this.formLogin.securityContextRepository(this.securityContextRepository);  }  this.formLogin.configure(this);} @AT@ 68065 @LENGTH@ 269
---UPD Block@@ThenBody:{  this.formLogin.authenticationManager(this.authenticationManager);  if (this.securityContextRepository != null) {    this.formLogin.securityContextRepository(this.securityContextRepository);  }  this.formLogin.configure(this);} @TO@ ThenBody:{  if (this.formLogin.authenticationManager == null) {    this.formLogin.authenticationManager(this.authenticationManager);  }  if (this.securityContextRepository != null) {    this.formLogin.securityContextRepository(this.securityContextRepository);  }  this.formLogin.configure(this);} @AT@ 68093 @LENGTH@ 241
------INS IfStatement@@if (this.formLogin.authenticationManager == null) {  this.formLogin.authenticationManager(this.authenticationManager);} @TO@ Block@@ThenBody:{  this.formLogin.authenticationManager(this.authenticationManager);  if (this.securityContextRepository != null) {    this.formLogin.securityContextRepository(this.securityContextRepository);  }  this.formLogin.configure(this);} @AT@ 68159 @LENGTH@ 126
---------INS InfixExpression@@this.formLogin.authenticationManager == null @TO@ IfStatement@@if (this.formLogin.authenticationManager == null) {  this.formLogin.authenticationManager(this.authenticationManager);} @AT@ 68163 @LENGTH@ 44
------------INS FieldAccess@@this.formLogin.authenticationManager @TO@ InfixExpression@@this.formLogin.authenticationManager == null @AT@ 68163 @LENGTH@ 36
---------------INS FieldAccess@@this.formLogin @TO@ FieldAccess@@this.formLogin.authenticationManager @AT@ 68163 @LENGTH@ 14
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.formLogin @AT@ 68163 @LENGTH@ 4
------------------INS SimpleName@@formLogin @TO@ FieldAccess@@this.formLogin @AT@ 68168 @LENGTH@ 9
---------------INS SimpleName@@authenticationManager @TO@ FieldAccess@@this.formLogin.authenticationManager @AT@ 68178 @LENGTH@ 21
------------INS Operator@@== @TO@ InfixExpression@@this.formLogin.authenticationManager == null @AT@ 68199 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.formLogin.authenticationManager == null @AT@ 68203 @LENGTH@ 4
---------INS Block@@ThenBody:{  this.formLogin.authenticationManager(this.authenticationManager);} @TO@ IfStatement@@if (this.formLogin.authenticationManager == null) {  this.formLogin.authenticationManager(this.authenticationManager);} @AT@ 68209 @LENGTH@ 76
------------MOV ExpressionStatement@@MethodInvocation:this.formLogin.authenticationManager(this.authenticationManager) @TO@ Block@@ThenBody:{  this.formLogin.authenticationManager(this.authenticationManager);} @AT@ 68098 @LENGTH@ 65


UPD ExpressionStatement@@MethodInvocation:requestList.forEach((requestItem) -> {
  requestObserver.onNext(requestItem);
}
) @TO@ MethodInvocation:requestList.forEach(requestObserver::onNext) @AT@ 5833 @LENGTH@ 115
---UPD MethodInvocation@@requestList.forEach((requestItem) -> {
  requestObserver.onNext(requestItem);
}
) @TO@ requestList.forEach(requestObserver::onNext) @AT@ 5833 @LENGTH@ 114
------DEL SimpleName@@MethodName:forEach:[(requestItem) -> {
  requestObserver.onNext(requestItem);
}
] @AT@ 5845 @LENGTH@ 102
---------DEL LambdaExpression@@(requestItem) -> {
  requestObserver.onNext(requestItem);
}
 @AT@ 5853 @LENGTH@ 93
------------DEL VariableDeclarationFragment@@requestItem @AT@ 5854 @LENGTH@ 11
---------------DEL SimpleName@@requestItem @AT@ 5854 @LENGTH@ 11
------------DEL ExpressionStatement@@MethodInvocation:requestObserver.onNext(requestItem) @AT@ 5892 @LENGTH@ 36
---------------DEL MethodInvocation@@requestObserver.onNext(requestItem) @AT@ 5892 @LENGTH@ 35
------------------DEL SimpleName@@Name:requestObserver @AT@ 5892 @LENGTH@ 15
------MOV SimpleName@@MethodName:onNext:[requestItem] @TO@ MethodInvocation@@requestList.forEach((requestItem) -> {
  requestObserver.onNext(requestItem);
}
) @AT@ 5908 @LENGTH@ 19
---------DEL SimpleName@@requestItem @AT@ 5915 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:sb.append(indent).append(isPublic ? "public " : "").append(isStatic ? "static " : "").append("enum ").append(name).append(" {\n").append(indent).append("    ").append(Strings.join(values,",\n")).append(";\n").append(indent).append("}") @TO@ MethodInvocation:sb.append(indent).append(isPublic ? "public " : "").append(isStatic ? "static " : "").append("enum ").append(name).append(" {\n").append(indent).append("    ").append(Strings.join(values,",\n" + indent + "    ")).append(";\n").append(indent).append("}") @AT@ 7607 @LENGTH@ 390
---UPD MethodInvocation@@sb.append(indent).append(isPublic ? "public " : "").append(isStatic ? "static " : "").append("enum ").append(name).append(" {\n").append(indent).append("    ").append(Strings.join(values,",\n")).append(";\n").append(indent).append("}") @TO@ sb.append(indent).append(isPublic ? "public " : "").append(isStatic ? "static " : "").append("enum ").append(name).append(" {\n").append(indent).append("    ").append(Strings.join(values,",\n" + indent + "    ")).append(";\n").append(indent).append("}") @AT@ 7607 @LENGTH@ 389
------UPD MethodInvocation@@MethodName:append:[Strings.join(values,",\n")] @TO@ MethodName:append:[Strings.join(values,",\n" + indent + "    ")] @AT@ 7607 @LENGTH@ 297
---------UPD MethodInvocation@@Strings.join(values,",\n") @TO@ Strings.join(values,",\n" + indent + "    ") @AT@ 7876 @LENGTH@ 27
------------UPD SimpleName@@MethodName:join:[values, ",\n"] @TO@ MethodName:join:[values, ",\n" + indent + "    "] @AT@ 7884 @LENGTH@ 19
---------------INS InfixExpression@@",\n" + indent + "    " @TO@ SimpleName@@MethodName:join:[values, ",\n"] @AT@ 7897 @LENGTH@ 23
------------------INS StringLiteral@@",\n" @TO@ InfixExpression@@",\n" + indent + "    " @AT@ 7897 @LENGTH@ 5
------------------INS Operator@@+ @TO@ InfixExpression@@",\n" + indent + "    " @AT@ 7902 @LENGTH@ 1
------------------INS SimpleName@@indent @TO@ InfixExpression@@",\n" + indent + "    " @AT@ 7905 @LENGTH@ 6
------------------INS StringLiteral@@"    " @TO@ InfixExpression@@",\n" + indent + "    " @AT@ 7914 @LENGTH@ 6
---------------DEL StringLiteral@@",\n" @AT@ 7897 @LENGTH@ 5


INS MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @TO@ TypeDeclaration@@[public]DelegatingInvocableHandler,  @AT@ 9949 @LENGTH@ 340
---INS Modifier@@public @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 9949 @LENGTH@ 6
---INS SimpleType@@InvocationResult @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 9956 @LENGTH@ 16
---INS SimpleName@@MethodName:getInvocationResultFor @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 9973 @LENGTH@ 22
---INS SingleVariableDeclaration@@Object result @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 9996 @LENGTH@ 13
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object result @AT@ 9996 @LENGTH@ 6
------INS SimpleName@@result @TO@ SingleVariableDeclaration@@Object result @AT@ 10003 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object inboundPayload @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 10011 @LENGTH@ 21
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object inboundPayload @AT@ 10011 @LENGTH@ 6
------INS SimpleName@@inboundPayload @TO@ SingleVariableDeclaration@@Object inboundPayload @AT@ 10018 @LENGTH@ 14
---INS VariableDeclarationStatement@@InvocableHandlerMethod handler=findHandlerForPayload(inboundPayload.getClass()); @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 10038 @LENGTH@ 82
------INS SimpleType@@InvocableHandlerMethod @TO@ VariableDeclarationStatement@@InvocableHandlerMethod handler=findHandlerForPayload(inboundPayload.getClass()); @AT@ 10038 @LENGTH@ 22
------INS VariableDeclarationFragment@@handler=findHandlerForPayload(inboundPayload.getClass()) @TO@ VariableDeclarationStatement@@InvocableHandlerMethod handler=findHandlerForPayload(inboundPayload.getClass()); @AT@ 10061 @LENGTH@ 58
---------INS SimpleName@@handler @TO@ VariableDeclarationFragment@@handler=findHandlerForPayload(inboundPayload.getClass()) @AT@ 10061 @LENGTH@ 7
---------INS MethodInvocation@@findHandlerForPayload(inboundPayload.getClass()) @TO@ VariableDeclarationFragment@@handler=findHandlerForPayload(inboundPayload.getClass()) @AT@ 10071 @LENGTH@ 48
------------INS SimpleName@@MethodName:findHandlerForPayload:[inboundPayload.getClass()] @TO@ MethodInvocation@@findHandlerForPayload(inboundPayload.getClass()) @AT@ 10071 @LENGTH@ 48
---------------INS MethodInvocation@@inboundPayload.getClass() @TO@ SimpleName@@MethodName:findHandlerForPayload:[inboundPayload.getClass()] @AT@ 10093 @LENGTH@ 25
------------------INS SimpleName@@Name:inboundPayload @TO@ MethodInvocation@@inboundPayload.getClass() @AT@ 10093 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@inboundPayload.getClass() @AT@ 10108 @LENGTH@ 10
---INS IfStatement@@if (handler != null) {  return new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType());} @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 10123 @LENGTH@ 148
------INS InfixExpression@@handler != null @TO@ IfStatement@@if (handler != null) {  return new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType());} @AT@ 10127 @LENGTH@ 15
---------INS SimpleName@@handler @TO@ InfixExpression@@handler != null @AT@ 10127 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@handler != null @AT@ 10134 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@handler != null @AT@ 10138 @LENGTH@ 4
------INS Block@@ThenBody:{  return new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType());} @TO@ IfStatement@@if (handler != null) {  return new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType());} @AT@ 10144 @LENGTH@ 127
---------INS ReturnStatement@@ClassInstanceCreation:new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType()) @TO@ Block@@ThenBody:{  return new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType());} @AT@ 10149 @LENGTH@ 118
------------INS ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @TO@ ReturnStatement@@ClassInstanceCreation:new InvocationResult(result,this.handlerSendTo.get(handler),handler.getMethod().getGenericReturnType()) @AT@ 10156 @LENGTH@ 110
---------------INS New@@new @TO@ ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @AT@ 10156 @LENGTH@ 3
---------------INS SimpleType@@InvocationResult @TO@ ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @AT@ 10160 @LENGTH@ 16
---------------INS SimpleName@@result @TO@ ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @AT@ 10177 @LENGTH@ 6
---------------INS MethodInvocation@@this.handlerSendTo.get(handler) @TO@ ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @AT@ 10185 @LENGTH@ 31
------------------INS FieldAccess@@this.handlerSendTo @TO@ MethodInvocation@@this.handlerSendTo.get(handler) @AT@ 10185 @LENGTH@ 18
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.handlerSendTo @AT@ 10185 @LENGTH@ 4
---------------------INS SimpleName@@handlerSendTo @TO@ FieldAccess@@this.handlerSendTo @AT@ 10190 @LENGTH@ 13
------------------INS SimpleName@@MethodName:get:[handler] @TO@ MethodInvocation@@this.handlerSendTo.get(handler) @AT@ 10204 @LENGTH@ 12
---------------------INS SimpleName@@handler @TO@ SimpleName@@MethodName:get:[handler] @AT@ 10208 @LENGTH@ 7
---------------INS MethodInvocation@@handler.getMethod().getGenericReturnType() @TO@ ClassInstanceCreation@@InvocationResult[result, this.handlerSendTo.get(handler), handler.getMethod().getGenericReturnType()] @AT@ 10223 @LENGTH@ 42
------------------INS MethodInvocation@@MethodName:getMethod:[] @TO@ MethodInvocation@@handler.getMethod().getGenericReturnType() @AT@ 10223 @LENGTH@ 19
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getMethod().getGenericReturnType() @AT@ 10223 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getGenericReturnType:[] @TO@ MethodInvocation@@handler.getMethod().getGenericReturnType() @AT@ 10243 @LENGTH@ 22
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, InvocationResult, MethodName:getInvocationResultFor, Object result, Object inboundPayload,  @AT@ 10274 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10281 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:setup, ModelControllerClient client, String serverGroupName, boolean ibm, IOException,  @TO@ public, void, MethodName:setup, ModelControllerClient client, String serverGroupName, IOException,  @AT@ 2977 @LENGTH@ 1072
---DEL SingleVariableDeclaration@@boolean ibm @AT@ 3049 @LENGTH@ 11
------DEL PrimitiveType@@boolean @AT@ 3049 @LENGTH@ 7
------DEL SimpleName@@ibm @AT@ 3057 @LENGTH@ 3
---UPD IfStatement@@if (ibm) {  additionalPermissions.add(new FilePermission(file.getAbsolutePath().replace("archives","domains/JmxControlledStateNotificationsTestCase/master").replace(file.getName(),""),"read"));} @TO@ if (TestSuiteEnvironment.isJ9Jvm()) {  additionalPermissions.add(new FilePermission(file.getAbsolutePath().replace("archives","domains/JmxControlledStateNotificationsTestCase/master").replace(file.getName(),""),"read"));} @AT@ 3338 @LENGTH@ 291
------DEL SimpleName@@ibm @AT@ 3341 @LENGTH@ 3
------INS MethodInvocation@@TestSuiteEnvironment.isJ9Jvm() @TO@ IfStatement@@if (ibm) {  additionalPermissions.add(new FilePermission(file.getAbsolutePath().replace("archives","domains/JmxControlledStateNotificationsTestCase/master").replace(file.getName(),""),"read"));} @AT@ 3382 @LENGTH@ 30
---------INS SimpleName@@Name:TestSuiteEnvironment @TO@ MethodInvocation@@TestSuiteEnvironment.isJ9Jvm() @AT@ 3382 @LENGTH@ 20
---------INS SimpleName@@MethodName:isJ9Jvm:[] @TO@ MethodInvocation@@TestSuiteEnvironment.isJ9Jvm() @AT@ 3403 @LENGTH@ 9


DEL ReturnStatement@@LambdaExpression:request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 2842 @LENGTH@ 301
---DEL LambdaExpression@@request -> {
  String[] pathParts=request.getRequestURI().split("/");
  String tenantId=pathParts.length > 0 ? pathParts[1] : null;
  return Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant"));
}
 @AT@ 2849 @LENGTH@ 293
------DEL VariableDeclarationFragment@@request @AT@ 2849 @LENGTH@ 7
---------DEL SimpleName@@request @AT@ 2849 @LENGTH@ 7
------DEL VariableDeclarationStatement@@String[] pathParts=request.getRequestURI().split("/"); @AT@ 2865 @LENGTH@ 56
---------DEL ArrayType@@String[] @AT@ 2865 @LENGTH@ 8
------------DEL SimpleType@@String @AT@ 2865 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@pathParts=request.getRequestURI().split("/") @AT@ 2874 @LENGTH@ 46
------------DEL SimpleName@@pathParts @AT@ 2874 @LENGTH@ 9
------------DEL MethodInvocation@@request.getRequestURI().split("/") @AT@ 2886 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getRequestURI:[] @AT@ 2886 @LENGTH@ 23
---------------DEL SimpleName@@Name:request @AT@ 2886 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:split:["/"] @AT@ 2910 @LENGTH@ 10
------------------DEL StringLiteral@@"/" @AT@ 2916 @LENGTH@ 3
------DEL VariableDeclarationStatement@@String tenantId=pathParts.length > 0 ? pathParts[1] : null; @AT@ 2925 @LENGTH@ 61
---------DEL SimpleType@@String @AT@ 2925 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@tenantId=pathParts.length > 0 ? pathParts[1] : null @AT@ 2932 @LENGTH@ 53
------------DEL SimpleName@@tenantId @AT@ 2932 @LENGTH@ 8
------------DEL ConditionalExpression@@pathParts.length > 0 ? pathParts[1] : null @AT@ 2943 @LENGTH@ 42
---------------DEL InfixExpression@@pathParts.length > 0 @AT@ 2943 @LENGTH@ 20
------------------DEL QualifiedName@@pathParts.length @AT@ 2943 @LENGTH@ 16
---------------------DEL SimpleName@@pathParts @AT@ 2943 @LENGTH@ 9
---------------------DEL SimpleName@@length @AT@ 2953 @LENGTH@ 6
------------------DEL Operator@@> @AT@ 2959 @LENGTH@ 1
------------------DEL NumberLiteral@@0 @AT@ 2962 @LENGTH@ 1
---------------DEL ArrayAccess@@pathParts[1] @AT@ 2966 @LENGTH@ 12
------------------DEL SimpleName@@pathParts @AT@ 2966 @LENGTH@ 9
------------------DEL NumberLiteral@@1 @AT@ 2976 @LENGTH@ 1
---------------DEL NullLiteral@@null @AT@ 2981 @LENGTH@ 4
------DEL ReturnStatement@@MethodInvocation:Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant")) @AT@ 2990 @LENGTH@ 148


UPD TypeDeclaration@@[public, static]AdvancedMustacheEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMustacheEndpointBuilder, [EndpointProducerBuilder] @AT@ 4106 @LENGTH@ 2076
---DEL Modifier@@static @AT@ 4113 @LENGTH@ 6


INS MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @TO@ TypeDeclaration@@[@Configuration, public]WebClientConfig,  @AT@ 1659 @LENGTH@ 331
---MOV ExpressionStatement@@MethodInvocation:oauth.setDefaultOAuth2AuthorizedClient(true) @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1599 @LENGTH@ 45
---MOV ReturnStatement@@MethodInvocation:WebClient.builder().filter(oauth).build() @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1647 @LENGTH@ 59
---INS SimpleType@@WebClient @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1649 @LENGTH@ 9
---INS SimpleName@@MethodName:webClient @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1659 @LENGTH@ 9
---INS SingleVariableDeclaration@@ServerOAuth2AuthorizedClientManager authorizedClientManager @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1669 @LENGTH@ 59
------INS SimpleType@@ServerOAuth2AuthorizedClientManager @TO@ SingleVariableDeclaration@@ServerOAuth2AuthorizedClientManager authorizedClientManager @AT@ 1669 @LENGTH@ 35
------INS SimpleName@@authorizedClientManager @TO@ SingleVariableDeclaration@@ServerOAuth2AuthorizedClientManager authorizedClientManager @AT@ 1705 @LENGTH@ 23
---INS VariableDeclarationStatement@@ServerOAuth2AuthorizedClientExchangeFilterFunction oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager); @TO@ MethodDeclaration@@WebClient, MethodName:webClient, ServerOAuth2AuthorizedClientManager authorizedClientManager,  @AT@ 1734 @LENGTH@ 143
------INS SimpleType@@ServerOAuth2AuthorizedClientExchangeFilterFunction @TO@ VariableDeclarationStatement@@ServerOAuth2AuthorizedClientExchangeFilterFunction oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager); @AT@ 1734 @LENGTH@ 50
------INS VariableDeclarationFragment@@oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager) @TO@ VariableDeclarationStatement@@ServerOAuth2AuthorizedClientExchangeFilterFunction oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager); @AT@ 1785 @LENGTH@ 91
---------INS SimpleName@@oauth @TO@ VariableDeclarationFragment@@oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager) @AT@ 1785 @LENGTH@ 5
---------INS ClassInstanceCreation@@ServerOAuth2AuthorizedClientExchangeFilterFunction[authorizedClientManager] @TO@ VariableDeclarationFragment@@oauth=new ServerOAuth2AuthorizedClientExchangeFilterFunction(authorizedClientManager) @AT@ 1797 @LENGTH@ 79
------------INS New@@new @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizedClientExchangeFilterFunction[authorizedClientManager] @AT@ 1797 @LENGTH@ 3
------------INS SimpleType@@ServerOAuth2AuthorizedClientExchangeFilterFunction @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizedClientExchangeFilterFunction[authorizedClientManager] @AT@ 1801 @LENGTH@ 50
------------INS SimpleName@@authorizedClientManager @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizedClientExchangeFilterFunction[authorizedClientManager] @AT@ 1852 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 1916 @LENGTH@ 129
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res).thenAnswer(i -> defaultRes) @AT@ 1916 @LENGTH@ 128
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2015 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2026 @LENGTH@ 17


UPD TypeDeclaration@@[@Metadata(label="eip,transformation"), @XmlRootElement(name="unmarshal"), @XmlAccessorType(XmlAccessType.FIELD), public]UnmarshalDefinition, NoOutputDefinition<UnmarshalDefinition> @TO@ [@Metadata(label="dataformat,transformation"), @XmlRootElement(name="unmarshal"), @XmlAccessorType(XmlAccessType.FIELD), public]UnmarshalDefinition, NoOutputDefinition<UnmarshalDefinition> @AT@ 3680 @LENGTH@ 4934
---UPD NormalAnnotation@@@Metadata(label="eip,transformation") @TO@ @Metadata(label="dataformat,transformation") @AT@ 3680 @LENGTH@ 39


UPD TypeDeclaration@@[public, abstract]AbstractTokenGranter, [TokenGranter] @TO@ [@Deprecated, public, abstract]AbstractTokenGranter, [TokenGranter] @AT@ 1463 @LENGTH@ 2164
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]AbstractTokenGranter, [TokenGranter] @AT@ 1641 @LENGTH@ 11


UPD TypeDeclaration@@[@FrameworkEndpoint, @SessionAttributes("authorizationRequest"), public]WhitelabelApprovalEndpoint,  @TO@ [@FrameworkEndpoint, @SessionAttributes("authorizationRequest"), @Deprecated, public]WhitelabelApprovalEndpoint,  @AT@ 771 @LENGTH@ 4005
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, @SessionAttributes("authorizationRequest"), public]WhitelabelApprovalEndpoint,  @AT@ 1010 @LENGTH@ 11


UPD TypeDeclaration@@[public]JwtAlgorithms,  @TO@ [@Deprecated, public]JwtAlgorithms,  @AT@ 802 @LENGTH@ 1709
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwtAlgorithms,  @AT@ 980 @LENGTH@ 11


UPD TypeDeclaration@@[public]JdbcClientTokenServices, [ClientTokenServices] @TO@ [@Deprecated, public]JdbcClientTokenServices, [ClientTokenServices] @AT@ 948 @LENGTH@ 3146
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcClientTokenServices, [ClientTokenServices] @AT@ 1125 @LENGTH@ 11


UPD TypeDeclaration@@[public]JdbcApprovalStore, [ApprovalStore] @TO@ [@Deprecated, public]JdbcApprovalStore, [ApprovalStore] @AT@ 1472 @LENGTH@ 6381
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcApprovalStore, [ApprovalStore] @AT@ 1650 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42430 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42430 @LENGTH@ 6


UPD MethodDeclaration@@default, ServiceNowEndpointBuilder, MethodName:serviceNow, String path,  @TO@ default, ServiceNowEndpointBuilder, MethodName:servicenow, String path,  @AT@ 35326 @LENGTH@ 402
---UPD SimpleName@@MethodName:serviceNow @TO@ MethodName:servicenow @AT@ 35360 @LENGTH@ 10


UPD IfStatement@@if (failIfNotSet) {  e.setOptionPrefix(optionPrefix);  e.setOptionKey(optionKey);  throw e;} else {  LOG.debug("Error setting property (" + key + ") with name: "+ name+ ") on bean: "+ target+ " with value: "+ stringValue+ ". This exception is ignored as failIfNotSet=false.",e);} @TO@ if (failIfNotSet) {  throw new PropertyBindingException(e.getTarget(),e.getPropertyName(),e.getValue(),optionPrefix,optionKey,e.getCause());} else {  LOG.debug("Error setting property (" + key + ") with name: "+ name+ ") on bean: "+ target+ " with value: "+ stringValue+ ". This exception is ignored as failIfNotSet=false.",e);} @AT@ 53628 @LENGTH@ 484
---UPD Block@@ThenBody:{  e.setOptionPrefix(optionPrefix);  e.setOptionKey(optionKey);  throw e;} @TO@ ThenBody:{  throw new PropertyBindingException(e.getTarget(),e.getPropertyName(),e.getValue(),optionPrefix,optionKey,e.getCause());} @AT@ 53646 @LENGTH@ 208
------DEL ExpressionStatement@@MethodInvocation:e.setOptionPrefix(optionPrefix) @AT@ 53728 @LENGTH@ 32
---------DEL MethodInvocation@@e.setOptionPrefix(optionPrefix) @AT@ 53728 @LENGTH@ 31
------INS ThrowStatement@@ClassInstanceCreation:new PropertyBindingException(e.getTarget(),e.getPropertyName(),e.getValue(),optionPrefix,optionKey,e.getCause()) @TO@ Block@@ThenBody:{  e.setOptionPrefix(optionPrefix);  e.setOptionKey(optionKey);  throw e;} @AT@ 53762 @LENGTH@ 124
---------INS ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @TO@ ThrowStatement@@ClassInstanceCreation:new PropertyBindingException(e.getTarget(),e.getPropertyName(),e.getValue(),optionPrefix,optionKey,e.getCause()) @AT@ 53768 @LENGTH@ 117
------------INS New@@new @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53768 @LENGTH@ 3
------------INS SimpleType@@PropertyBindingException @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53772 @LENGTH@ 24
------------INS MethodInvocation@@e.getTarget() @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53797 @LENGTH@ 13
---------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getTarget() @AT@ 53728 @LENGTH@ 1
---------------MOV SimpleName@@MethodName:setOptionPrefix:[optionPrefix] @TO@ MethodInvocation@@e.getTarget() @AT@ 53730 @LENGTH@ 29
------------------DEL SimpleName@@optionPrefix @AT@ 53746 @LENGTH@ 12
------------INS MethodInvocation@@e.getPropertyName() @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53812 @LENGTH@ 19
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getPropertyName() @AT@ 53812 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getPropertyName:[] @TO@ MethodInvocation@@e.getPropertyName() @AT@ 53814 @LENGTH@ 17
------------INS MethodInvocation@@e.getValue() @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53833 @LENGTH@ 12
---------------MOV SimpleName@@Name:e @TO@ MethodInvocation@@e.getValue() @AT@ 53781 @LENGTH@ 1
---------------MOV SimpleName@@MethodName:setOptionKey:[optionKey] @TO@ MethodInvocation@@e.getValue() @AT@ 53783 @LENGTH@ 23
------------------DEL SimpleName@@optionKey @AT@ 53796 @LENGTH@ 9
------------INS SimpleName@@optionPrefix @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53847 @LENGTH@ 12
------------INS SimpleName@@optionKey @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53861 @LENGTH@ 9
------------INS MethodInvocation@@e.getCause() @TO@ ClassInstanceCreation@@PropertyBindingException[e.getTarget(), e.getPropertyName(), e.getValue(), optionPrefix, optionKey, e.getCause()] @AT@ 53872 @LENGTH@ 12
---------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 53872 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 53874 @LENGTH@ 10
------DEL ExpressionStatement@@MethodInvocation:e.setOptionKey(optionKey) @AT@ 53781 @LENGTH@ 26
---------DEL MethodInvocation@@e.setOptionKey(optionKey) @AT@ 53781 @LENGTH@ 25
------DEL ThrowStatement@@SimpleName:e @AT@ 53828 @LENGTH@ 8
---------DEL SimpleName@@e @AT@ 53834 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,getTokenEndpointResponse().getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,getTokenEndpointResponse().getStatusCode()) @AT@ 4648 @LENGTH@ 75
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,getTokenEndpointResponse().getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,getTokenEndpointResponse().getStatusCode()) @AT@ 4648 @LENGTH@ 74
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, getTokenEndpointResponse().getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, getTokenEndpointResponse().getStatusCode()] @AT@ 4648 @LENGTH@ 74
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 4661 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 4672 @LENGTH@ 5


UPD TypeDeclaration@@[@FrameworkEndpoint, public]WhitelabelErrorEndpoint,  @TO@ [@FrameworkEndpoint, @Deprecated, public]WhitelabelErrorEndpoint,  @AT@ 599 @LENGTH@ 1187
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, public]WhitelabelErrorEndpoint,  @AT@ 796 @LENGTH@ 11


UPD TypeDeclaration@@[public]ClientCredentialsResourceDetails, BaseOAuth2ProtectedResourceDetails @TO@ [@Deprecated, public]ClientCredentialsResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 197 @LENGTH@ 245
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientCredentialsResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 375 @LENGTH@ 11


UPD VariableDeclarationStatement@@ServiceRegistry registry=context.getServiceRegistry(true); @TO@ ServiceRegistry registry=context.getServiceRegistry(false); @AT@ 3145 @LENGTH@ 60
---UPD VariableDeclarationFragment@@registry=context.getServiceRegistry(true) @TO@ registry=context.getServiceRegistry(false) @AT@ 3161 @LENGTH@ 43
------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 3172 @LENGTH@ 32
---------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 3180 @LENGTH@ 24
------------UPD BooleanLiteral@@true @TO@ false @AT@ 3199 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(restClient,(client) -> {
}
,Collections.emptyList());
 @TO@ super(restClient,client -> {
}
,Collections.emptyList());
 @AT@ 16827 @LENGTH@ 60
---UPD LambdaExpression@@(client) -> {
}
 @TO@ client -> {
}
 @AT@ 16845 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 42921 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 42921 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 42928 @LENGTH@ 4
---INS SimpleName@@MethodName:findsWithNativeProjection @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 42933 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @TO@ MethodDeclaration@@public, void, MethodName:findsWithNativeProjection,  @AT@ 42966 @LENGTH@ 159
------INS MethodInvocation@@assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 42966 @LENGTH@ 158
---------INS MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @TO@ MethodInvocation@@assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 42966 @LENGTH@ 107
------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @AT@ 43040 @LENGTH@ 11
------------INS MethodInvocation@@dave.getFirstname() @TO@ MethodInvocation@@MethodName:containsEntry:["firstname", dave.getFirstname()] @AT@ 43053 @LENGTH@ 19
---------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getFirstname() @AT@ 43053 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getFirstname:[] @TO@ MethodInvocation@@dave.getFirstname() @AT@ 43058 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:assertThat:[repository.findDocumentById(dave.getId()).get()] @TO@ MethodInvocation@@assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 42966 @LENGTH@ 59
------------INS MethodInvocation@@repository.findDocumentById(dave.getId()).get() @TO@ MethodInvocation@@MethodName:assertThat:[repository.findDocumentById(dave.getId()).get()] @AT@ 42977 @LENGTH@ 47
---------------INS MethodInvocation@@MethodName:findDocumentById:[dave.getId()] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).get() @AT@ 42977 @LENGTH@ 41
------------------INS MethodInvocation@@dave.getId() @TO@ MethodInvocation@@MethodName:findDocumentById:[dave.getId()] @AT@ 43005 @LENGTH@ 12
---------------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getId() @AT@ 43005 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@dave.getId() @AT@ 43010 @LENGTH@ 7
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).get() @AT@ 42977 @LENGTH@ 10
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@repository.findDocumentById(dave.getId()).get() @AT@ 43019 @LENGTH@ 5
---------INS SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @TO@ MethodInvocation@@assertThat(repository.findDocumentById(dave.getId()).get()).containsEntry("firstname",dave.getFirstname()).containsEntry("lastname",dave.getLastname()) @AT@ 43079 @LENGTH@ 45
------------INS StringLiteral@@"lastname" @TO@ SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @AT@ 43093 @LENGTH@ 10
------------INS MethodInvocation@@dave.getLastname() @TO@ SimpleName@@MethodName:containsEntry:["lastname", dave.getLastname()] @AT@ 43105 @LENGTH@ 18
---------------INS SimpleName@@Name:dave @TO@ MethodInvocation@@dave.getLastname() @AT@ 43105 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getLastname:[] @TO@ MethodInvocation@@dave.getLastname() @AT@ 43110 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ MethodInvocation:exchange.getMessage().setHeaders(exchange.getIn().getHeaders()) @AT@ 3091 @LENGTH@ 60
---UPD MethodInvocation@@exchange.getOut().setHeaders(exchange.getIn().getHeaders()) @TO@ exchange.getMessage().setHeaders(exchange.getIn().getHeaders()) @AT@ 3091 @LENGTH@ 59
------UPD MethodInvocation@@MethodName:getOut:[] @TO@ MethodName:getMessage:[] @AT@ 3091 @LENGTH@ 17


INS MethodDeclaration@@private, voidMethodName:Client2Application,  @TO@ TypeDeclaration@@[public]Client2Application,  @AT@ 1042 @LENGTH@ 36
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Client2Application,  @AT@ 1042 @LENGTH@ 7
---INS SimpleName@@MethodName:Client2Application @TO@ MethodDeclaration@@private, voidMethodName:Client2Application,  @AT@ 1050 @LENGTH@ 18


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FtpConsumerMoveExpressionTest, FtpServerTestSupport @AT@ 1304 @LENGTH@ 140


UPD ExpressionStatement@@MethodInvocation:this.claim(NBF,notBefore.getEpochSecond()) @TO@ MethodInvocation:this.claim(NBF,notBefore) @AT@ 7408 @LENGTH@ 44
---UPD MethodInvocation@@this.claim(NBF,notBefore.getEpochSecond()) @TO@ this.claim(NBF,notBefore) @AT@ 7408 @LENGTH@ 43
------UPD SimpleName@@MethodName:claim:[NBF, notBefore.getEpochSecond()] @TO@ MethodName:claim:[NBF, notBefore] @AT@ 7413 @LENGTH@ 38
---------DEL MethodInvocation@@notBefore.getEpochSecond() @AT@ 7424 @LENGTH@ 26
------------DEL SimpleName@@Name:notBefore @AT@ 7424 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getEpochSecond:[] @AT@ 7434 @LENGTH@ 16
---------INS SimpleName@@notBefore @TO@ SimpleName@@MethodName:claim:[NBF, notBefore.getEpochSecond()] @AT@ 7424 @LENGTH@ 9


UPD MethodDeclaration@@public, IOException, MethodName:getCause,  @TO@ public, synchronized, IOException, MethodName:getCause,  @AT@ 4502 @LENGTH@ 84
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, IOException, MethodName:getCause,  @AT@ 4509 @LENGTH@ 12


UPD TypeDeclaration@@[public, static]HazelcastRingbufferEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]HazelcastRingbufferEndpointBuilder, [EndpointProducerBuilder] @AT@ 1454 @LENGTH@ 8421
---DEL Modifier@@static @AT@ 1461 @LENGTH@ 6


UPD TypeDeclaration@@[public]ConsumerDetails, [Serializable] @TO@ [@Deprecated, public]ConsumerDetails, [Serializable] @AT@ 918 @LENGTH@ 777
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerDetails, [Serializable] @AT@ 1139 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]KubernetesConfigMapsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesConfigMapsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1468 @LENGTH@ 7268
---DEL Modifier@@static @AT@ 1475 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedDataFormatEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDataFormatEndpointBuilder, [EndpointProducerBuilder] @AT@ 2426 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 2433 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:ClientApplication,  @TO@ TypeDeclaration@@[@SpringBootApplication, public]ClientApplication,  @AT@ 1150 @LENGTH@ 35
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ClientApplication,  @AT@ 1150 @LENGTH@ 7
---INS SimpleName@@MethodName:ClientApplication @TO@ MethodDeclaration@@private, voidMethodName:ClientApplication,  @AT@ 1158 @LENGTH@ 17


UPD MethodDeclaration@@protected, void, MethodName:doAfterPropertiesSet,  @TO@ protected, void, MethodName:doAfterPropertiesSet, Exception,  @AT@ 10087 @LENGTH@ 42
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, void, MethodName:doAfterPropertiesSet,  @AT@ 10132 @LENGTH@ 9


UPD TypeDeclaration@@[public, static]JoltEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]JoltEndpointBuilder, [EndpointProducerBuilder] @AT@ 1457 @LENGTH@ 4154
---DEL Modifier@@static @AT@ 1464 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]DisruptorProducerType,  @TO@ [static]DisruptorProducerType,  @AT@ 28909 @LENGTH@ 71
---DEL Modifier@@public @AT@ 28909 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MQEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MQEndpointBuilder, [EndpointProducerBuilder] @AT@ 1386 @LENGTH@ 776
---DEL Modifier@@static @AT@ 1393 @LENGTH@ 6


UPD MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @TO@ public, MatchResult, MethodName:matcher, HttpServletRequest request,  @AT@ 6375 @LENGTH@ 272
---DEL ParameterizedType@@Map<String,String> @AT@ 6382 @LENGTH@ 19
------DEL SimpleType@@Map @AT@ 6382 @LENGTH@ 3
------DEL SimpleType@@String @AT@ 6386 @LENGTH@ 6
------DEL SimpleType@@String @AT@ 6394 @LENGTH@ 6
---UPD SimpleName@@MethodName:extractUriTemplateVariables @TO@ MethodName:matcher @AT@ 6402 @LENGTH@ 27
---UPD IfStatement@@if (this.matcher == null || !matches(request)) {  return Collections.emptyMap();} @TO@ if (this.matcher == null || !matches(request)) {  return MatchResult.notMatch();} @AT@ 6462 @LENGTH@ 86
------UPD Block@@ThenBody:{  return Collections.emptyMap();} @TO@ ThenBody:{  return MatchResult.notMatch();} @AT@ 6509 @LENGTH@ 39
---------UPD ReturnStatement@@MethodInvocation:Collections.emptyMap() @TO@ MethodInvocation:MatchResult.notMatch() @AT@ 6514 @LENGTH@ 30
------------UPD MethodInvocation@@Collections.emptyMap() @TO@ MatchResult.notMatch() @AT@ 6521 @LENGTH@ 22
---------------UPD SimpleName@@Name:Collections @TO@ Name:MatchResult @AT@ 6521 @LENGTH@ 11
---------------UPD SimpleName@@MethodName:emptyMap:[] @TO@ MethodName:notMatch:[] @AT@ 6533 @LENGTH@ 10
---INS SimpleType@@MatchResult @TO@ MethodDeclaration@@public, Map<String,String>, MethodName:extractUriTemplateVariables, HttpServletRequest request,  @AT@ 6550 @LENGTH@ 11
---UPD ReturnStatement@@MethodInvocation:this.matcher.extractUriTemplateVariables(url) @TO@ MethodInvocation:MatchResult.match(this.matcher.extractUriTemplateVariables(url)) @AT@ 6591 @LENGTH@ 53
------INS MethodInvocation@@MatchResult.match(this.matcher.extractUriTemplateVariables(url)) @TO@ ReturnStatement@@MethodInvocation:this.matcher.extractUriTemplateVariables(url) @AT@ 6738 @LENGTH@ 64
---------INS SimpleName@@Name:MatchResult @TO@ MethodInvocation@@MatchResult.match(this.matcher.extractUriTemplateVariables(url)) @AT@ 6738 @LENGTH@ 11
---------INS SimpleName@@MethodName:match:[this.matcher.extractUriTemplateVariables(url)] @TO@ MethodInvocation@@MatchResult.match(this.matcher.extractUriTemplateVariables(url)) @AT@ 6750 @LENGTH@ 52
------------MOV MethodInvocation@@this.matcher.extractUriTemplateVariables(url) @TO@ SimpleName@@MethodName:match:[this.matcher.extractUriTemplateVariables(url)] @AT@ 6598 @LENGTH@ 45


UPD EnumDeclaration@@[public, static]AsteriskAction,  @TO@ [static]AsteriskAction,  @AT@ 19553 @LENGTH@ 91
---DEL Modifier@@public @AT@ 19553 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]DisruptorWaitStrategy,  @TO@ [static]DisruptorWaitStrategy,  @AT@ 28493 @LENGTH@ 96
---DEL Modifier@@public @AT@ 28493 @LENGTH@ 6


UPD VariableDeclarationStatement@@NSQConsumer consumer=new NSQConsumer(lookup,"test","testconsumer",(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
); @TO@ NSQConsumer consumer=new NSQConsumer(lookup,"test","testconsumer",message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
); @AT@ 2581 @LENGTH@ 250
---UPD VariableDeclarationFragment@@consumer=new NSQConsumer(lookup,"test","testconsumer",(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
) @TO@ consumer=new NSQConsumer(lookup,"test","testconsumer",message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
) @AT@ 2593 @LENGTH@ 237
------UPD ClassInstanceCreation@@NSQConsumer[lookup, "test", "testconsumer", (message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
] @TO@ NSQConsumer[lookup, "test", "testconsumer", message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
] @AT@ 2604 @LENGTH@ 226
---------UPD LambdaExpression@@(message) -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
 @TO@ message -> {
  counter.incrementAndGet();
  message.finished();
  lock.countDown();
  assertTrue(message.getAttempts() == 1);
}
 @AT@ 2652 @LENGTH@ 177


UPD TypeDeclaration@@[public, static]AdvancedSchematronEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSchematronEndpointBuilder, [EndpointProducerBuilder] @AT@ 3511 @LENGTH@ 2950
---DEL Modifier@@static @AT@ 3518 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:cmd.expireat(command.getKey(),command.getExpireAt().toEpochMilli()).map(value -> new BooleanResponse<>(command,value)) @TO@ MethodInvocation:cmd.pexpireat(command.getKey(),command.getExpireAt().toEpochMilli()).map(value -> new BooleanResponse<>(command,value)) @AT@ 10851 @LENGTH@ 134
---UPD MethodInvocation@@cmd.expireat(command.getKey(),command.getExpireAt().toEpochMilli()).map(value -> new BooleanResponse<>(command,value)) @TO@ cmd.pexpireat(command.getKey(),command.getExpireAt().toEpochMilli()).map(value -> new BooleanResponse<>(command,value)) @AT@ 10858 @LENGTH@ 126
------UPD MethodInvocation@@MethodName:expireat:[command.getKey(), command.getExpireAt().toEpochMilli()] @TO@ MethodName:pexpireat:[command.getKey(), command.getExpireAt().toEpochMilli()] @AT@ 10858 @LENGTH@ 68


UPD MethodDeclaration@@void, MethodName:handle, Callback callback, Authentication auth,  @TO@ void, MethodName:handle, Callback callback, Authentication auth, IOException, UnsupportedCallbackException,  @AT@ 2363 @LENGTH@ 47
---INS SimpleType@@IOException @TO@ MethodDeclaration@@void, MethodName:handle, Callback callback, Authentication auth,  @AT@ 2511 @LENGTH@ 11
---INS SimpleType@@UnsupportedCallbackException @TO@ MethodDeclaration@@void, MethodName:handle, Callback callback, Authentication auth,  @AT@ 2527 @LENGTH@ 28


UPD TypeDeclaration@@[public]DefaultStateKeyGenerator, [StateKeyGenerator] @TO@ [@Deprecated, public]DefaultStateKeyGenerator, [StateKeyGenerator] @AT@ 884 @LENGTH@ 259
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultStateKeyGenerator, [StateKeyGenerator] @AT@ 1062 @LENGTH@ 11


UPD TypeDeclaration@@[public]JdbcClientDetailsService, [ClientDetailsService, ClientRegistrationService] @TO@ [@Deprecated, public]JdbcClientDetailsService, [ClientDetailsService, ClientRegistrationService] @AT@ 2252 @LENGTH@ 9869
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcClientDetailsService, [ClientDetailsService, ClientRegistrationService] @AT@ 2433 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]SnmpEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]SnmpEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1426 @LENGTH@ 11368
---DEL Modifier@@static @AT@ 1433 @LENGTH@ 6


UPD TypeDeclaration@@[public]ProtectedResourceDetailsBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ProtectedResourceDetailsBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1331 @LENGTH@ 5331
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProtectedResourceDetailsBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1552 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]ClientCredentialsOAuth2AuthorizedClientProviderTests,  @AT@ 3591 @LENGTH@ 232
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3598 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3603 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 3659 @LENGTH@ 161
------INS MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3659 @LENGTH@ 160
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3659 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 3748 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3659 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @AT@ 3678 @LENGTH@ 50
---------------INS MethodInvocation@@this.authorizedClientProvider.setClock(null) @TO@ LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @AT@ 3684 @LENGTH@ 44
------------------INS FieldAccess@@this.authorizedClientProvider @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 3684 @LENGTH@ 29
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 3684 @LENGTH@ 4
---------------------INS SimpleName@@authorizedClientProvider @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 3689 @LENGTH@ 24
------------------INS SimpleName@@MethodName:setClock:[null] @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 3714 @LENGTH@ 14
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClock:[null] @AT@ 3723 @LENGTH@ 4
---------INS SimpleName@@MethodName:hasMessage:["clock cannot be null"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 3785 @LENGTH@ 34
------------INS StringLiteral@@"clock cannot be null" @TO@ SimpleName@@MethodName:hasMessage:["clock cannot be null"] @AT@ 3796 @LENGTH@ 22


UPD Block@@ThenBody:{  int consumers=Integer.parseInt(concurrency.substring(0,separatorIndex));  int maxConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1));  Assert.isTrue(maxConsumers >= consumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'");  this.concurrentConsumers=1;  this.maxConcurrentConsumers=null;  setConcurrentConsumers(consumers);  setMaxConcurrentConsumers(maxConsumers);} @TO@ ThenBody:{  int consumersToSet=Integer.parseInt(concurrency.substring(0,separatorIndex));  int maxConsumersToSet=Integer.parseInt(concurrency.substring(separatorIndex + 1));  Assert.isTrue(maxConsumersToSet >= consumersToSet,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'");  this.concurrentConsumers=1;  this.maxConcurrentConsumers=null;  setConcurrentConsumers(consumersToSet);  setMaxConcurrentConsumers(maxConsumersToSet);} @AT@ 8875 @LENGTH@ 453
---UPD VariableDeclarationStatement@@int consumers=Integer.parseInt(concurrency.substring(0,separatorIndex)); @TO@ int consumersToSet=Integer.parseInt(concurrency.substring(0,separatorIndex)); @AT@ 8881 @LENGTH@ 75
------UPD VariableDeclarationFragment@@consumers=Integer.parseInt(concurrency.substring(0,separatorIndex)) @TO@ consumersToSet=Integer.parseInt(concurrency.substring(0,separatorIndex)) @AT@ 8885 @LENGTH@ 70
---------UPD SimpleName@@consumers @TO@ consumersToSet @AT@ 8885 @LENGTH@ 9
---UPD VariableDeclarationStatement@@int maxConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)); @TO@ int maxConsumersToSet=Integer.parseInt(concurrency.substring(separatorIndex + 1)); @AT@ 8961 @LENGTH@ 79
------UPD VariableDeclarationFragment@@maxConsumers=Integer.parseInt(concurrency.substring(separatorIndex + 1)) @TO@ maxConsumersToSet=Integer.parseInt(concurrency.substring(separatorIndex + 1)) @AT@ 8965 @LENGTH@ 74
---------UPD SimpleName@@maxConsumers @TO@ maxConsumersToSet @AT@ 8965 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(maxConsumers >= consumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @TO@ MethodInvocation:Assert.isTrue(maxConsumersToSet >= consumersToSet,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @AT@ 9045 @LENGTH@ 120
------UPD MethodInvocation@@Assert.isTrue(maxConsumers >= consumers,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @TO@ Assert.isTrue(maxConsumersToSet >= consumersToSet,"'maxConcurrentConsumers' value must be at least 'concurrentConsumers'") @AT@ 9045 @LENGTH@ 119
---------UPD SimpleName@@MethodName:isTrue:[maxConsumers >= consumers, "'maxConcurrentConsumers' value must be at least 'concurrentConsumers'"] @TO@ MethodName:isTrue:[maxConsumersToSet >= consumersToSet, "'maxConcurrentConsumers' value must be at least 'concurrentConsumers'"] @AT@ 9052 @LENGTH@ 112
------------UPD InfixExpression@@maxConsumers >= consumers @TO@ maxConsumersToSet >= consumersToSet @AT@ 9059 @LENGTH@ 25
---------------UPD SimpleName@@maxConsumers @TO@ maxConsumersToSet @AT@ 9059 @LENGTH@ 12
---------------UPD SimpleName@@consumers @TO@ consumersToSet @AT@ 9075 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:setConcurrentConsumers(consumers) @TO@ MethodInvocation:setConcurrentConsumers(consumersToSet) @AT@ 9244 @LENGTH@ 34
------UPD MethodInvocation@@setConcurrentConsumers(consumers) @TO@ setConcurrentConsumers(consumersToSet) @AT@ 9244 @LENGTH@ 33
---------UPD SimpleName@@MethodName:setConcurrentConsumers:[consumers] @TO@ MethodName:setConcurrentConsumers:[consumersToSet] @AT@ 9244 @LENGTH@ 33
------------UPD SimpleName@@consumers @TO@ consumersToSet @AT@ 9267 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:setMaxConcurrentConsumers(maxConsumers) @TO@ MethodInvocation:setMaxConcurrentConsumers(maxConsumersToSet) @AT@ 9283 @LENGTH@ 40
------UPD MethodInvocation@@setMaxConcurrentConsumers(maxConsumers) @TO@ setMaxConcurrentConsumers(maxConsumersToSet) @AT@ 9283 @LENGTH@ 39
---------UPD SimpleName@@MethodName:setMaxConcurrentConsumers:[maxConsumers] @TO@ MethodName:setMaxConcurrentConsumers:[maxConsumersToSet] @AT@ 9283 @LENGTH@ 39
------------UPD SimpleName@@maxConsumers @TO@ maxConsumersToSet @AT@ 9309 @LENGTH@ 12


INS MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), @Import(ObjectPostProcessorConfiguration.class), public]AuthenticationConfiguration,  @AT@ 7293 @LENGTH@ 445
---INS Modifier@@private @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7293 @LENGTH@ 7
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7301 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 7301 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 7306 @LENGTH@ 6
---INS SimpleName@@MethodName:getPrimaryBeanNames @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7314 @LENGTH@ 19
---INS SingleVariableDeclaration@@String[] beanNamesForType @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7334 @LENGTH@ 25
------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@String[] beanNamesForType @AT@ 7334 @LENGTH@ 8
---------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 7334 @LENGTH@ 6
------INS SimpleName@@beanNamesForType @TO@ SingleVariableDeclaration@@String[] beanNamesForType @AT@ 7343 @LENGTH@ 16
---INS VariableDeclarationStatement@@List<String> list=new ArrayList<>(); @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7365 @LENGTH@ 38
------INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> list=new ArrayList<>(); @AT@ 7365 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 7365 @LENGTH@ 4
---------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 7370 @LENGTH@ 6
------INS VariableDeclarationFragment@@list=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> list=new ArrayList<>(); @AT@ 7378 @LENGTH@ 24
---------INS SimpleName@@list @TO@ VariableDeclarationFragment@@list=new ArrayList<>() @AT@ 7378 @LENGTH@ 4
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@list=new ArrayList<>() @AT@ 7385 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 7385 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 7389 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 7389 @LENGTH@ 9
---INS IfStatement@@if (!(applicationContext instanceof ConfigurableApplicationContext)) {  return Collections.emptyList();} @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7406 @LENGTH@ 109
------INS PrefixExpression@@!(applicationContext instanceof ConfigurableApplicationContext) @TO@ IfStatement@@if (!(applicationContext instanceof ConfigurableApplicationContext)) {  return Collections.emptyList();} @AT@ 7410 @LENGTH@ 63
---------INS Operator@@! @TO@ PrefixExpression@@!(applicationContext instanceof ConfigurableApplicationContext) @AT@ 7410 @LENGTH@ 1
---------INS ParenthesizedExpression@@(applicationContext instanceof ConfigurableApplicationContext) @TO@ PrefixExpression@@!(applicationContext instanceof ConfigurableApplicationContext) @AT@ 7411 @LENGTH@ 62
------------INS InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @TO@ ParenthesizedExpression@@(applicationContext instanceof ConfigurableApplicationContext) @AT@ 7412 @LENGTH@ 60
---------------INS SimpleName@@applicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 7412 @LENGTH@ 18
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 7431 @LENGTH@ 10
---------------INS SimpleType@@ConfigurableApplicationContext @TO@ InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 7442 @LENGTH@ 30
------INS Block@@ThenBody:{  return Collections.emptyList();} @TO@ IfStatement@@if (!(applicationContext instanceof ConfigurableApplicationContext)) {  return Collections.emptyList();} @AT@ 7475 @LENGTH@ 40
---------INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ Block@@ThenBody:{  return Collections.emptyList();} @AT@ 7480 @LENGTH@ 31
------------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 7487 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 7487 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 7499 @LENGTH@ 11
---INS EnhancedForStatement@@for (String beanName : beanNamesForType) {  if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {    list.add(beanName);  }} @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7518 @LENGTH@ 202
------INS SingleVariableDeclaration@@String beanName @TO@ EnhancedForStatement@@for (String beanName : beanNamesForType) {  if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {    list.add(beanName);  }} @AT@ 7523 @LENGTH@ 15
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String beanName @AT@ 7523 @LENGTH@ 6
---------INS SimpleName@@beanName @TO@ SingleVariableDeclaration@@String beanName @AT@ 7530 @LENGTH@ 8
------INS SimpleName@@beanNamesForType @TO@ EnhancedForStatement@@for (String beanName : beanNamesForType) {  if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {    list.add(beanName);  }} @AT@ 7541 @LENGTH@ 16
------INS IfStatement@@if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {  list.add(beanName);} @TO@ EnhancedForStatement@@for (String beanName : beanNamesForType) {  if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {    list.add(beanName);  }} @AT@ 7564 @LENGTH@ 152
---------MOV MethodInvocation@@((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary() @TO@ IfStatement@@if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {  list.add(beanName);} @AT@ 6685 @LENGTH@ 103
------------UPD MethodInvocation@@MethodName:getBeanDefinition:[n] @TO@ MethodName:getBeanDefinition:[beanName] @AT@ 6685 @LENGTH@ 91
---------------UPD SimpleName@@n @TO@ beanName @AT@ 6774 @LENGTH@ 1
---------INS Block@@ThenBody:{  list.add(beanName);} @TO@ IfStatement@@if (((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(beanName).isPrimary()) {  list.add(beanName);} @AT@ 7686 @LENGTH@ 30
------------INS ExpressionStatement@@MethodInvocation:list.add(beanName) @TO@ Block@@ThenBody:{  list.add(beanName);} @AT@ 7692 @LENGTH@ 19
---------------INS MethodInvocation@@list.add(beanName) @TO@ ExpressionStatement@@MethodInvocation:list.add(beanName) @AT@ 7692 @LENGTH@ 18
------------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(beanName) @AT@ 7692 @LENGTH@ 4
------------------INS SimpleName@@MethodName:add:[beanName] @TO@ MethodInvocation@@list.add(beanName) @AT@ 7697 @LENGTH@ 13
---------------------INS SimpleName@@beanName @TO@ SimpleName@@MethodName:add:[beanName] @AT@ 7701 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:list @TO@ MethodDeclaration@@private, List<String>, MethodName:getPrimaryBeanNames, String[] beanNamesForType,  @AT@ 7723 @LENGTH@ 12
------INS SimpleName@@list @TO@ ReturnStatement@@SimpleName:list @AT@ 7730 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue("Size should be around 50, but was " + currentCacheSize,currentCacheSize <= 51) @TO@ MethodInvocation:assertTrue("Size should be around 50, but was " + currentCacheSize,currentCacheSize <= 53) @AT@ 2275 @LENGTH@ 92
---UPD MethodInvocation@@assertTrue("Size should be around 50, but was " + currentCacheSize,currentCacheSize <= 51) @TO@ assertTrue("Size should be around 50, but was " + currentCacheSize,currentCacheSize <= 53) @AT@ 2275 @LENGTH@ 91
------UPD SimpleName@@MethodName:assertTrue:["Size should be around 50, but was " + currentCacheSize, currentCacheSize <= 51] @TO@ MethodName:assertTrue:["Size should be around 50, but was " + currentCacheSize, currentCacheSize <= 53] @AT@ 2275 @LENGTH@ 91
---------UPD InfixExpression@@currentCacheSize <= 51 @TO@ currentCacheSize <= 53 @AT@ 2343 @LENGTH@ 22
------------UPD NumberLiteral@@51 @TO@ 53 @AT@ 2363 @LENGTH@ 2


UPD TypeDeclaration@@[public]AccessTokenProviderChain, OAuth2AccessTokenSupport[AccessTokenProvider] @TO@ [@Deprecated, public]AccessTokenProviderChain, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 1958 @LENGTH@ 4833
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AccessTokenProviderChain, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 2136 @LENGTH@ 11


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 2151 @LENGTH@ 201
---UPD VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 2182 @LENGTH@ 169
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 2213 @LENGTH@ 138
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 2213 @LENGTH@ 141


UPD Block@@ThenBody:{  this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository);} @TO@ ThenBody:{  ServerOAuth2AuthorizationCodeAuthenticationTokenConverter authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository);  authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository());  this.authenticationConverter=authenticationConverter;} @AT@ 44147 @LENGTH@ 134
---INS VariableDeclarationStatement@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository); @TO@ Block@@ThenBody:{  this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository);} @AT@ 44153 @LENGTH@ 176
------INS SimpleType@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter @TO@ VariableDeclarationStatement@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository); @AT@ 44153 @LENGTH@ 57
------INS VariableDeclarationFragment@@authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @TO@ VariableDeclarationStatement@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository); @AT@ 44211 @LENGTH@ 117
---------INS SimpleName@@authenticationConverter @TO@ VariableDeclarationFragment@@authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @AT@ 44211 @LENGTH@ 23
---------INS ClassInstanceCreation@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter[clientRegistrationRepository] @TO@ VariableDeclarationFragment@@authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @AT@ 44237 @LENGTH@ 91
------------INS New@@new @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter[clientRegistrationRepository] @AT@ 44237 @LENGTH@ 3
------------INS SimpleType@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter[clientRegistrationRepository] @AT@ 44241 @LENGTH@ 57
------------INS SimpleName@@clientRegistrationRepository @TO@ ClassInstanceCreation@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter[clientRegistrationRepository] @AT@ 44299 @LENGTH@ 28
---UPD ExpressionStatement@@Assignment:this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @TO@ Assignment:this.authenticationConverter=authenticationConverter @AT@ 44153 @LENGTH@ 123
------UPD Assignment@@this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @TO@ this.authenticationConverter=authenticationConverter @AT@ 44153 @LENGTH@ 122
---------DEL ClassInstanceCreation@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter[clientRegistrationRepository] @AT@ 44184 @LENGTH@ 91
------------DEL New@@new @AT@ 44184 @LENGTH@ 3
------------DEL SimpleType@@ServerOAuth2AuthorizationCodeAuthenticationTokenConverter @AT@ 44188 @LENGTH@ 57
------------DEL SimpleName@@clientRegistrationRepository @AT@ 44246 @LENGTH@ 28
---------INS SimpleName@@authenticationConverter @TO@ Assignment@@this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository) @AT@ 44465 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository()) @TO@ Block@@ThenBody:{  this.authenticationConverter=new ServerOAuth2AuthorizationCodeAuthenticationTokenConverter(clientRegistrationRepository);} @AT@ 44334 @LENGTH@ 95
------INS MethodInvocation@@authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository()) @TO@ ExpressionStatement@@MethodInvocation:authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository()) @AT@ 44334 @LENGTH@ 94
---------INS SimpleName@@Name:authenticationConverter @TO@ MethodInvocation@@authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository()) @AT@ 44334 @LENGTH@ 23
---------INS SimpleName@@MethodName:setAuthorizationRequestRepository:[getAuthorizationRequestRepository()] @TO@ MethodInvocation@@authenticationConverter.setAuthorizationRequestRepository(getAuthorizationRequestRepository()) @AT@ 44358 @LENGTH@ 70
------------INS MethodInvocation@@MethodName:getAuthorizationRequestRepository:[] @TO@ SimpleName@@MethodName:setAuthorizationRequestRepository:[getAuthorizationRequestRepository()] @AT@ 44392 @LENGTH@ 35


UPD TypeDeclaration@@[public]RedirectResolver,  @TO@ [@Deprecated, public]RedirectResolver,  @AT@ 315 @LENGTH@ 488
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RedirectResolver,  @AT@ 492 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]KubernetesServiceAccountsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesServiceAccountsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1480 @LENGTH@ 7553
---DEL Modifier@@static @AT@ 1487 @LENGTH@ 6


UPD MethodDeclaration@@default, PgEventEndpointBuilder, MethodName:pgEvent, String path,  @TO@ default, PgEventEndpointBuilder, MethodName:pgevent, String path,  @AT@ 20838 @LENGTH@ 378
---UPD SimpleName@@MethodName:pgEvent @TO@ MethodName:pgevent @AT@ 20869 @LENGTH@ 7


INS IfStatement@@if (source instanceof Example) {  return exampleMapper.getMappedExample((Example)source,entity);} @TO@ MethodDeclaration@@protected, Object, MethodName:convertSimpleOrDocument, Object source, @Nullable MongoPersistentEntity<?> entity,  @AT@ 15420 @LENGTH@ 102
---INS InstanceofExpression@@source instanceof Example @TO@ IfStatement@@if (source instanceof Example) {  return exampleMapper.getMappedExample((Example)source,entity);} @AT@ 15423 @LENGTH@ 25
------INS SimpleName@@source @TO@ InstanceofExpression@@source instanceof Example @AT@ 15423 @LENGTH@ 6
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@source instanceof Example @AT@ 15430 @LENGTH@ 10
------INS SimpleType@@Example @TO@ InstanceofExpression@@source instanceof Example @AT@ 15441 @LENGTH@ 7
---INS Block@@ThenBody:{  return exampleMapper.getMappedExample((Example)source,entity);} @TO@ IfStatement@@if (source instanceof Example) {  return exampleMapper.getMappedExample((Example)source,entity);} @AT@ 15450 @LENGTH@ 72
------INS ReturnStatement@@MethodInvocation:exampleMapper.getMappedExample((Example)source,entity) @TO@ Block@@ThenBody:{  return exampleMapper.getMappedExample((Example)source,entity);} @AT@ 15455 @LENGTH@ 63
---------INS MethodInvocation@@exampleMapper.getMappedExample((Example)source,entity) @TO@ ReturnStatement@@MethodInvocation:exampleMapper.getMappedExample((Example)source,entity) @AT@ 15462 @LENGTH@ 55
------------INS SimpleName@@Name:exampleMapper @TO@ MethodInvocation@@exampleMapper.getMappedExample((Example)source,entity) @AT@ 15462 @LENGTH@ 13
------------INS SimpleName@@MethodName:getMappedExample:[(Example)source, entity] @TO@ MethodInvocation@@exampleMapper.getMappedExample((Example)source,entity) @AT@ 15476 @LENGTH@ 41
---------------INS CastExpression@@(Example)source @TO@ SimpleName@@MethodName:getMappedExample:[(Example)source, entity] @AT@ 15493 @LENGTH@ 15
------------------INS SimpleType@@Example @TO@ CastExpression@@(Example)source @AT@ 15494 @LENGTH@ 7
------------------INS SimpleName@@source @TO@ CastExpression@@(Example)source @AT@ 15502 @LENGTH@ 6
---------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:getMappedExample:[(Example)source, entity] @AT@ 15510 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ClientAlreadyExistsException, ClientRegistrationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ClientAlreadyExistsException, ClientRegistrationException @AT@ 827 @LENGTH@ 272
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ClientAlreadyExistsException, ClientRegistrationException @AT@ 1032 @LENGTH@ 11


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FromFtpSimulateNetworkIssueRecoverTest, FtpServerTestSupport @AT@ 1393 @LENGTH@ 136


UPD TypeDeclaration@@[public]InMemoryProviderTokenServices, RandomValueProviderTokenServices @TO@ [@Deprecated, public]InMemoryProviderTokenServices, RandomValueProviderTokenServices @AT@ 803 @LENGTH@ 565
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryProviderTokenServices, RandomValueProviderTokenServices @AT@ 1024 @LENGTH@ 11


INS MethodDeclaration@@public, ExecutorService, MethodName:createExecutor,  @TO@ TypeDeclaration@@[@UriEndpoint(firstVersion="${version}",scheme="${scheme}",title="${name}",syntax="${scheme}:name",consumerClass=$), public]$,  @AT@ 2587 @LENGTH@ 157
---INS Modifier@@public @TO@ MethodDeclaration@@public, ExecutorService, MethodName:createExecutor,  @AT@ 2587 @LENGTH@ 6
---INS SimpleType@@ExecutorService @TO@ MethodDeclaration@@public, ExecutorService, MethodName:createExecutor,  @AT@ 2594 @LENGTH@ 15
---INS SimpleName@@MethodName:createExecutor @TO@ MethodDeclaration@@public, ExecutorService, MethodName:createExecutor,  @AT@ 2610 @LENGTH@ 14
---INS ReturnStatement@@MethodInvocation:getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @TO@ MethodDeclaration@@public, ExecutorService, MethodName:createExecutor,  @AT@ 2636 @LENGTH@ 102
------INS MethodInvocation@@getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @TO@ ReturnStatement@@MethodInvocation:getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @AT@ 2643 @LENGTH@ 94
---------INS MethodInvocation@@MethodName:getExecutorServiceManager:[] @TO@ MethodInvocation@@getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @AT@ 2643 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @AT@ 2643 @LENGTH@ 17
---------INS SimpleName@@MethodName:newSingleThreadExecutor:[this, "${name}Consumer"] @TO@ MethodInvocation@@getCamelContext().getExecutorServiceManager().newSingleThreadExecutor(this,"${name}Consumer") @AT@ 2689 @LENGTH@ 48
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:newSingleThreadExecutor:[this, "${name}Consumer"] @AT@ 2713 @LENGTH@ 4
------------INS StringLiteral@@"${name}Consumer" @TO@ SimpleName@@MethodName:newSingleThreadExecutor:[this, "${name}Consumer"] @AT@ 2719 @LENGTH@ 17


UPD TypeDeclaration@@[public]DefaultJdbcListFactory, [JdbcListFactory] @TO@ [@Deprecated, public]DefaultJdbcListFactory, [JdbcListFactory] @AT@ 886 @LENGTH@ 460
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultJdbcListFactory, [JdbcListFactory] @AT@ 1064 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringRunner.class), public]RSocketMessageHandlerConnectionITests,  @AT@ 5039 @LENGTH@ 691
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5039 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5046 @LENGTH@ 4
---INS SimpleName@@MethodName:routeWhenStreamCredentialsHaveAuthority @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5051 @LENGTH@ 39
---INS VariableDeclarationStatement@@UsernamePasswordMetadata connectCredentials=new UsernamePasswordMetadata("user","password"); @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5097 @LENGTH@ 95
------INS SimpleType@@UsernamePasswordMetadata @TO@ VariableDeclarationStatement@@UsernamePasswordMetadata connectCredentials=new UsernamePasswordMetadata("user","password"); @AT@ 5097 @LENGTH@ 24
------INS VariableDeclarationFragment@@connectCredentials=new UsernamePasswordMetadata("user","password") @TO@ VariableDeclarationStatement@@UsernamePasswordMetadata connectCredentials=new UsernamePasswordMetadata("user","password"); @AT@ 5122 @LENGTH@ 69
---------INS SimpleName@@connectCredentials @TO@ VariableDeclarationFragment@@connectCredentials=new UsernamePasswordMetadata("user","password") @AT@ 5122 @LENGTH@ 18
---------INS ClassInstanceCreation@@UsernamePasswordMetadata["user", "password"] @TO@ VariableDeclarationFragment@@connectCredentials=new UsernamePasswordMetadata("user","password") @AT@ 5143 @LENGTH@ 48
------------INS New@@new @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["user", "password"] @AT@ 5143 @LENGTH@ 3
------------INS SimpleType@@UsernamePasswordMetadata @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["user", "password"] @AT@ 5147 @LENGTH@ 24
------------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["user", "password"] @AT@ 5172 @LENGTH@ 6
------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["user", "password"] @AT@ 5180 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5195 @LENGTH@ 224
------INS Assignment@@this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @TO@ ExpressionStatement@@Assignment:this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5195 @LENGTH@ 223
---------INS FieldAccess@@this.requester @TO@ Assignment@@this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5195 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.requester @AT@ 5195 @LENGTH@ 4
------------INS SimpleName@@requester @TO@ FieldAccess@@this.requester @AT@ 5200 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5209 @LENGTH@ 1
---------INS MethodInvocation@@requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @TO@ Assignment@@this.requester=requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5212 @LENGTH@ 206
------------INS MethodInvocation@@MethodName:connectTcp:[this.server.address().getHostName(), this.server.address().getPort()] @TO@ MethodInvocation@@requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5212 @LENGTH@ 193
---------------INS MethodInvocation@@this.server.address().getHostName() @TO@ MethodInvocation@@MethodName:connectTcp:[this.server.address().getHostName(), this.server.address().getPort()] @AT@ 5336 @LENGTH@ 35
------------------INS MethodInvocation@@MethodName:address:[] @TO@ MethodInvocation@@this.server.address().getHostName() @AT@ 5336 @LENGTH@ 21
------------------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.address().getHostName() @AT@ 5336 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 5336 @LENGTH@ 4
---------------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 5341 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getHostName:[] @TO@ MethodInvocation@@this.server.address().getHostName() @AT@ 5358 @LENGTH@ 13
---------------INS MethodInvocation@@this.server.address().getPort() @TO@ MethodInvocation@@MethodName:connectTcp:[this.server.address().getHostName(), this.server.address().getPort()] @AT@ 5373 @LENGTH@ 31
------------------INS MethodInvocation@@MethodName:address:[] @TO@ MethodInvocation@@this.server.address().getPort() @AT@ 5373 @LENGTH@ 21
------------------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.address().getPort() @AT@ 5373 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 5373 @LENGTH@ 4
---------------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 5378 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@this.server.address().getPort() @AT@ 5395 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:setupMetadata:[connectCredentials, UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @TO@ MethodInvocation@@requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5212 @LENGTH@ 107
---------------INS SimpleName@@connectCredentials @TO@ MethodInvocation@@MethodName:setupMetadata:[connectCredentials, UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @AT@ 5243 @LENGTH@ 18
---------------INS QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @TO@ MethodInvocation@@MethodName:setupMetadata:[connectCredentials, UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @AT@ 5263 @LENGTH@ 55
------------------INS SimpleName@@UsernamePasswordMetadata @TO@ QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @AT@ 5263 @LENGTH@ 24
------------------INS SimpleName@@BASIC_AUTHENTICATION_MIME_TYPE @TO@ QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @AT@ 5288 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:requester:[] @TO@ MethodInvocation@@requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5212 @LENGTH@ 11
------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@requester().setupMetadata(connectCredentials,UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).connectTcp(this.server.address().getHostName(),this.server.address().getPort()).block() @AT@ 5411 @LENGTH@ 7
---INS VariableDeclarationStatement@@String hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block(); @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5423 @LENGTH@ 258
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block(); @AT@ 5423 @LENGTH@ 6
------INS VariableDeclarationFragment@@hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @TO@ VariableDeclarationStatement@@String hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block(); @AT@ 5430 @LENGTH@ 250
---------INS SimpleName@@hiUser @TO@ VariableDeclarationFragment@@hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5430 @LENGTH@ 6
---------INS MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @TO@ VariableDeclarationFragment@@hiUser=this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 241
------------INS MethodInvocation@@MethodName:retrieveMono:[String.class] @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 228
---------------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:retrieveMono:[String.class] @AT@ 5654 @LENGTH@ 12
------------INS MethodInvocation@@MethodName:data:["Felipe"] @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 196
---------------INS StringLiteral@@"Felipe" @TO@ MethodInvocation@@MethodName:data:["Felipe"] @AT@ 5626 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:metadata:[new UsernamePasswordMetadata("admin","password"), UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 176
---------------INS ClassInstanceCreation@@UsernamePasswordMetadata["admin", "password"] @TO@ MethodInvocation@@MethodName:metadata:[new UsernamePasswordMetadata("admin","password"), UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @AT@ 5508 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["admin", "password"] @AT@ 5508 @LENGTH@ 3
------------------INS SimpleType@@UsernamePasswordMetadata @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["admin", "password"] @AT@ 5512 @LENGTH@ 24
------------------INS StringLiteral@@"admin" @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["admin", "password"] @AT@ 5537 @LENGTH@ 7
------------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@UsernamePasswordMetadata["admin", "password"] @AT@ 5546 @LENGTH@ 10
---------------INS QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @TO@ MethodInvocation@@MethodName:metadata:[new UsernamePasswordMetadata("admin","password"), UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE] @AT@ 5559 @LENGTH@ 55
------------------INS SimpleName@@UsernamePasswordMetadata @TO@ QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @AT@ 5559 @LENGTH@ 24
------------------INS SimpleName@@BASIC_AUTHENTICATION_MIME_TYPE @TO@ QualifiedName@@UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE @AT@ 5584 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:route:["secure.authority.retrieve-mono"] @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 54
---------------INS StringLiteral@@"secure.authority.retrieve-mono" @TO@ MethodInvocation@@MethodName:route:["secure.authority.retrieve-mono"] @AT@ 5460 @LENGTH@ 32
------------INS FieldAccess@@this.requester @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5439 @LENGTH@ 14
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.requester @AT@ 5439 @LENGTH@ 4
---------------INS SimpleName@@requester @TO@ FieldAccess@@this.requester @AT@ 5444 @LENGTH@ 9
------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.requester.route("secure.authority.retrieve-mono").metadata(new UsernamePasswordMetadata("admin","password"),UsernamePasswordMetadata.BASIC_AUTHENTICATION_MIME_TYPE).data("Felipe").retrieveMono(String.class).block() @AT@ 5673 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(hiUser).isEqualTo("Hi Felipe") @TO@ MethodDeclaration@@public, void, MethodName:routeWhenStreamCredentialsHaveAuthority,  @AT@ 5685 @LENGTH@ 42
------INS MethodInvocation@@assertThat(hiUser).isEqualTo("Hi Felipe") @TO@ ExpressionStatement@@MethodInvocation:assertThat(hiUser).isEqualTo("Hi Felipe") @AT@ 5685 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:assertThat:[hiUser] @TO@ MethodInvocation@@assertThat(hiUser).isEqualTo("Hi Felipe") @AT@ 5685 @LENGTH@ 18
------------INS SimpleName@@hiUser @TO@ MethodInvocation@@MethodName:assertThat:[hiUser] @AT@ 5696 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEqualTo:["Hi Felipe"] @TO@ MethodInvocation@@assertThat(hiUser).isEqualTo("Hi Felipe") @AT@ 5704 @LENGTH@ 22
------------INS StringLiteral@@"Hi Felipe" @TO@ SimpleName@@MethodName:isEqualTo:["Hi Felipe"] @AT@ 5714 @LENGTH@ 11


INS IfStatement@@if (!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType())) {  return source;} @TO@ MethodDeclaration@@public, Object, MethodName:convert, Object source,  @AT@ 6150 @LENGTH@ 131
---INS PrefixExpression@@!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @TO@ IfStatement@@if (!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType())) {  return source;} @AT@ 6153 @LENGTH@ 101
------INS Operator@@! @TO@ PrefixExpression@@!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6153 @LENGTH@ 1
------INS MethodInvocation@@operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @TO@ PrefixExpression@@!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6154 @LENGTH@ 100
---------INS MethodInvocation@@MethodName:getMappingContext:[] @TO@ MethodInvocation@@operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6154 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:getConverter:[] @TO@ MethodInvocation@@operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6154 @LENGTH@ 25
---------INS SimpleName@@Name:operations @TO@ MethodInvocation@@operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6154 @LENGTH@ 10
---------INS SimpleName@@MethodName:hasPersistentEntityFor:[returnedType.getReturnedType()] @TO@ MethodInvocation@@operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType()) @AT@ 6200 @LENGTH@ 54
------------INS MethodInvocation@@returnedType.getReturnedType() @TO@ SimpleName@@MethodName:hasPersistentEntityFor:[returnedType.getReturnedType()] @AT@ 6223 @LENGTH@ 30
---------------INS SimpleName@@Name:returnedType @TO@ MethodInvocation@@returnedType.getReturnedType() @AT@ 6223 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getReturnedType:[] @TO@ MethodInvocation@@returnedType.getReturnedType() @AT@ 6236 @LENGTH@ 17
---INS Block@@ThenBody:{  return source;} @TO@ IfStatement@@if (!operations.getConverter().getMappingContext().hasPersistentEntityFor(returnedType.getReturnedType())) {  return source;} @AT@ 6256 @LENGTH@ 25
------INS ReturnStatement@@SimpleName:source @TO@ Block@@ThenBody:{  return source;} @AT@ 6262 @LENGTH@ 14
---------INS SimpleName@@source @TO@ ReturnStatement@@SimpleName:source @AT@ 6269 @LENGTH@ 6


UPD MethodDeclaration@@default, IPFSEndpointBuilder, MethodName:iPFS, String path,  @TO@ default, IPFSEndpointBuilder, MethodName:ipfs, String path,  @AT@ 5114 @LENGTH@ 354
---UPD SimpleName@@MethodName:iPFS @TO@ MethodName:ipfs @AT@ 5142 @LENGTH@ 4


UPD MethodDeclaration@@default, XChangeEndpointBuilder, MethodName:xChange, String path,  @TO@ default, XChangeEndpointBuilder, MethodName:xchange, String path,  @AT@ 8083 @LENGTH@ 378
---UPD SimpleName@@MethodName:xChange @TO@ MethodName:xchange @AT@ 8114 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ServerHttpSecurityConfiguration @TO@ [@Configuration, static]SubclassConfig, ServerHttpSecurityConfiguration @AT@ 2109 @LENGTH@ 114
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, ServerHttpSecurityConfiguration @AT@ 2108 @LENGTH@ 14
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 2109 @LENGTH@ 40


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsUserTests,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SecurityMockMvcRequestPostProcessorsUserTests,  @AT@ 2018 @LENGTH@ 3218
---INS SingleMemberAnnotation@@@PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}) @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsUserTests,  @AT@ 2161 @LENGTH@ 123


UPD EnumDeclaration@@[public, static]PahoPersistence,  @TO@ [static]PahoPersistence,  @AT@ 34052 @LENGTH@ 64
---DEL Modifier@@public @AT@ 34052 @LENGTH@ 6


UPD SuperConstructorInvocation@@super(new Parameters(PathElement.pathElement(AGGREGATE_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(AGGREGATE_PROVIDER)).setAddHandler(AggregateProviderAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY));
 @TO@ super(new Parameters(PathElement.pathElement(AGGREGATE_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(AGGREGATE_PROVIDER)).setAddHandler(AggregateProviderAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY));
 @AT@ 1927 @LENGTH@ 375
---UPD MethodInvocation@@new Parameters(PathElement.pathElement(AGGREGATE_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(AGGREGATE_PROVIDER)).setAddHandler(AggregateProviderAddHandler.getInstance()).setRemoveHandler(new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY) @TO@ new Parameters(PathElement.pathElement(AGGREGATE_PROVIDER),DiscoveryExtension.getResourceDescriptionResolver(AGGREGATE_PROVIDER)).setAddHandler(AggregateProviderAddHandler.getInstance()).setRemoveHandler(TrivialRemoveStepHandler.getInstance()).setCapabilities(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY) @AT@ 1933 @LENGTH@ 367
------UPD MethodInvocation@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)] @TO@ MethodName:setRemoveHandler:[TrivialRemoveStepHandler.getInstance()] @AT@ 1933 @LENGTH@ 299
---------DEL ClassInstanceCreation@@TrivialRemoveStepHandler[DISCOVERY_PROVIDER_RUNTIME_CAPABILITY] @AT@ 2164 @LENGTH@ 67
------------DEL New@@new @AT@ 2164 @LENGTH@ 3
------------DEL SimpleType@@TrivialRemoveStepHandler @AT@ 2168 @LENGTH@ 24
------------DEL SimpleName@@DISCOVERY_PROVIDER_RUNTIME_CAPABILITY @AT@ 2193 @LENGTH@ 37
---------INS MethodInvocation@@TrivialRemoveStepHandler.getInstance() @TO@ MethodInvocation@@MethodName:setRemoveHandler:[new TrivialRemoveStepHandler(DISCOVERY_PROVIDER_RUNTIME_CAPABILITY)] @AT@ 2164 @LENGTH@ 38
------------INS SimpleName@@Name:TrivialRemoveStepHandler @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 2164 @LENGTH@ 24
------------INS SimpleName@@MethodName:getInstance:[] @TO@ MethodInvocation@@TrivialRemoveStepHandler.getInstance() @AT@ 2189 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]AdvancedSpringLdapEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSpringLdapEndpointBuilder, [EndpointProducerBuilder] @AT@ 3206 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 3213 @LENGTH@ 6


UPD MethodDeclaration@@default, JGroupsRaftEndpointBuilder, MethodName:jGroupsRaft, String path,  @TO@ default, JGroupsRaftEndpointBuilder, MethodName:jgroupsRaft, String path,  @AT@ 17414 @LENGTH@ 411
---UPD SimpleName@@MethodName:jGroupsRaft @TO@ MethodName:jgroupsRaft @AT@ 17449 @LENGTH@ 11


UPD TypeDeclaration@@[@FrameworkEndpoint, @SessionAttributes({AuthorizationEndpoint.AUTHORIZATION_REQUEST_ATTR_NAME,AuthorizationEndpoint.ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME}), public]AuthorizationEndpoint, AbstractEndpoint @TO@ [@FrameworkEndpoint, @SessionAttributes({AuthorizationEndpoint.AUTHORIZATION_REQUEST_ATTR_NAME,AuthorizationEndpoint.ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME}), @Deprecated, public]AuthorizationEndpoint, AbstractEndpoint @AT@ 5239 @LENGTH@ 23365
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@FrameworkEndpoint, @SessionAttributes({AuthorizationEndpoint.AUTHORIZATION_REQUEST_ATTR_NAME,AuthorizationEndpoint.ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME}), public]AuthorizationEndpoint, AbstractEndpoint @AT@ 5575 @LENGTH@ 11


UPD TypeDeclaration@@[public]AbstractEndpoint, [InitializingBean] @TO@ [@Deprecated, public]AbstractEndpoint, [InitializingBean] @AT@ 1473 @LENGTH@ 1911
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AbstractEndpoint, [InitializingBean] @AT@ 1651 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 7318 @LENGTH@ 193
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 7391 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 7391 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7396 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]OnCommittedResponseWrapperTests,  @AT@ 23558 @LENGTH@ 240
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23558 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23565 @LENGTH@ 4
---INS SimpleName@@MethodName:contentLengthLongOutputStreamWriteStringCommits @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23570 @LENGTH@ 47
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23627 @LENGTH@ 11
---INS VariableDeclarationStatement@@String body="something"; @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23643 @LENGTH@ 26
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body="something"; @AT@ 23643 @LENGTH@ 6
------INS VariableDeclarationFragment@@body="something" @TO@ VariableDeclarationStatement@@String body="something"; @AT@ 23650 @LENGTH@ 18
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body="something" @AT@ 23650 @LENGTH@ 4
---------INS StringLiteral@@"something" @TO@ VariableDeclarationFragment@@body="something" @AT@ 23657 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:response.setContentLengthLong(body.length()) @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23672 @LENGTH@ 45
------INS MethodInvocation@@response.setContentLengthLong(body.length()) @TO@ ExpressionStatement@@MethodInvocation:response.setContentLengthLong(body.length()) @AT@ 23672 @LENGTH@ 44
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setContentLengthLong(body.length()) @AT@ 23672 @LENGTH@ 8
---------INS SimpleName@@MethodName:setContentLengthLong:[body.length()] @TO@ MethodInvocation@@response.setContentLengthLong(body.length()) @AT@ 23681 @LENGTH@ 35
------------INS MethodInvocation@@body.length() @TO@ SimpleName@@MethodName:setContentLengthLong:[body.length()] @AT@ 23702 @LENGTH@ 13
---------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.length() @AT@ 23702 @LENGTH@ 4
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@body.length() @AT@ 23707 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:response.getOutputStream().print(body) @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23721 @LENGTH@ 39
------INS MethodInvocation@@response.getOutputStream().print(body) @TO@ ExpressionStatement@@MethodInvocation:response.getOutputStream().print(body) @AT@ 23721 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getOutputStream:[] @TO@ MethodInvocation@@response.getOutputStream().print(body) @AT@ 23721 @LENGTH@ 26
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getOutputStream().print(body) @AT@ 23721 @LENGTH@ 8
---------INS SimpleName@@MethodName:print:[body] @TO@ MethodInvocation@@response.getOutputStream().print(body) @AT@ 23748 @LENGTH@ 11
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:print:[body] @AT@ 23754 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(committed).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:contentLengthLongOutputStreamWriteStringCommits, IOException,  @AT@ 23764 @LENGTH@ 31
------INS MethodInvocation@@assertThat(committed).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(committed).isTrue() @AT@ 23764 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThat:[committed] @TO@ MethodInvocation@@assertThat(committed).isTrue() @AT@ 23764 @LENGTH@ 21
------------INS SimpleName@@committed @TO@ MethodInvocation@@MethodName:assertThat:[committed] @AT@ 23775 @LENGTH@ 9
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(committed).isTrue() @AT@ 23786 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]KubernetesPersistentVolumesClaimsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KubernetesPersistentVolumesClaimsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1531 @LENGTH@ 7737
---DEL Modifier@@static @AT@ 1538 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]EKSOperations,  @TO@ [static]EKSOperations,  @AT@ 4393 @LENGTH@ 109
---DEL Modifier@@public @AT@ 4393 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientDetailsServiceConfigurer, SecurityConfigurerAdapter<ClientDetailsService,ClientDetailsServiceBuilder<?>> @TO@ [@Deprecated, public]ClientDetailsServiceConfigurer, SecurityConfigurerAdapter<ClientDetailsService,ClientDetailsServiceBuilder<?>> @AT@ 1226 @LENGTH@ 1031
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetailsServiceConfigurer, SecurityConfigurerAdapter<ClientDetailsService,ClientDetailsServiceBuilder<?>> @AT@ 1404 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")),"permissions.xml") @TO@ MethodDeclaration@@public, static, Archive<?>, MethodName:deploy,  @AT@ 2802 @LENGTH@ 296
---INS MethodInvocation@@jar.addAsManifestResource(createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")),"permissions.xml") @TO@ ExpressionStatement@@MethodInvocation:jar.addAsManifestResource(createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")),"permissions.xml") @AT@ 2802 @LENGTH@ 295
------INS SimpleName@@Name:jar @TO@ MethodInvocation@@jar.addAsManifestResource(createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")),"permissions.xml") @AT@ 2802 @LENGTH@ 3
------INS SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")), "permissions.xml"] @TO@ MethodInvocation@@jar.addAsManifestResource(createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")),"permissions.xml") @AT@ 2806 @LENGTH@ 291
---------INS MethodInvocation@@createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")) @TO@ SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")), "permissions.xml"] @AT@ 2828 @LENGTH@ 249
------------INS SimpleName@@MethodName:createPermissionsXmlAsset:[new RemotingPermission("createEndpoint"), new RemotingPermission("connect"), new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")] @TO@ MethodInvocation@@createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")) @AT@ 2828 @LENGTH@ 249
---------------INS ClassInstanceCreation@@RemotingPermission["createEndpoint"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new RemotingPermission("createEndpoint"), new RemotingPermission("connect"), new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")] @AT@ 2871 @LENGTH@ 40
------------------INS New@@new @TO@ ClassInstanceCreation@@RemotingPermission["createEndpoint"] @AT@ 2871 @LENGTH@ 3
------------------INS SimpleType@@RemotingPermission @TO@ ClassInstanceCreation@@RemotingPermission["createEndpoint"] @AT@ 2875 @LENGTH@ 18
------------------INS StringLiteral@@"createEndpoint" @TO@ ClassInstanceCreation@@RemotingPermission["createEndpoint"] @AT@ 2894 @LENGTH@ 16
---------------INS ClassInstanceCreation@@RemotingPermission["connect"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new RemotingPermission("createEndpoint"), new RemotingPermission("connect"), new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")] @AT@ 2929 @LENGTH@ 33
------------------INS New@@new @TO@ ClassInstanceCreation@@RemotingPermission["connect"] @AT@ 2929 @LENGTH@ 3
------------------INS SimpleType@@RemotingPermission @TO@ ClassInstanceCreation@@RemotingPermission["connect"] @AT@ 2933 @LENGTH@ 18
------------------INS StringLiteral@@"connect" @TO@ ClassInstanceCreation@@RemotingPermission["connect"] @AT@ 2952 @LENGTH@ 9
---------------INS ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + "/standalone/tmp/auth/*", "read"] @TO@ SimpleName@@MethodName:createPermissionsXmlAsset:[new RemotingPermission("createEndpoint"), new RemotingPermission("connect"), new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")] @AT@ 2980 @LENGTH@ 87
------------------INS New@@new @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + "/standalone/tmp/auth/*", "read"] @AT@ 2980 @LENGTH@ 3
------------------INS SimpleType@@FilePermission @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + "/standalone/tmp/auth/*", "read"] @AT@ 2984 @LENGTH@ 14
------------------INS InfixExpression@@System.getProperty("jboss.inst") + "/standalone/tmp/auth/*" @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + "/standalone/tmp/auth/*", "read"] @AT@ 2999 @LENGTH@ 59
---------------------INS MethodInvocation@@System.getProperty("jboss.inst") @TO@ InfixExpression@@System.getProperty("jboss.inst") + "/standalone/tmp/auth/*" @AT@ 2999 @LENGTH@ 32
------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("jboss.inst") @AT@ 2999 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getProperty:["jboss.inst"] @TO@ MethodInvocation@@System.getProperty("jboss.inst") @AT@ 3006 @LENGTH@ 25
---------------------------INS StringLiteral@@"jboss.inst" @TO@ SimpleName@@MethodName:getProperty:["jboss.inst"] @AT@ 3018 @LENGTH@ 12
---------------------INS Operator@@+ @TO@ InfixExpression@@System.getProperty("jboss.inst") + "/standalone/tmp/auth/*" @AT@ 3031 @LENGTH@ 1
---------------------INS StringLiteral@@"/standalone/tmp/auth/*" @TO@ InfixExpression@@System.getProperty("jboss.inst") + "/standalone/tmp/auth/*" @AT@ 3034 @LENGTH@ 24
------------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@FilePermission[System.getProperty("jboss.inst") + "/standalone/tmp/auth/*", "read"] @AT@ 3060 @LENGTH@ 6
---------INS StringLiteral@@"permissions.xml" @TO@ SimpleName@@MethodName:addAsManifestResource:[createPermissionsXmlAsset(new RemotingPermission("createEndpoint"),new RemotingPermission("connect"),new FilePermission(System.getProperty("jboss.inst") + "/standalone/tmp/auth/*","read")), "permissions.xml"] @AT@ 3079 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:when(mongoOperationsMock.remove(any(),eq(Person.class),eq("persons"))).thenReturn(deleteResultMock) @TO@ MethodInvocation:when(deleteResultMock.wasAcknowledged()).thenReturn(true) @AT@ 5632 @LENGTH@ 102
---UPD MethodInvocation@@when(mongoOperationsMock.remove(any(),eq(Person.class),eq("persons"))).thenReturn(deleteResultMock) @TO@ when(deleteResultMock.wasAcknowledged()).thenReturn(true) @AT@ 5632 @LENGTH@ 101
------UPD MethodInvocation@@MethodName:when:[mongoOperationsMock.remove(any(),eq(Person.class),eq("persons"))] @TO@ MethodName:when:[deleteResultMock.wasAcknowledged()] @AT@ 5632 @LENGTH@ 72
---------UPD MethodInvocation@@mongoOperationsMock.remove(any(),eq(Person.class),eq("persons")) @TO@ deleteResultMock.wasAcknowledged() @AT@ 5637 @LENGTH@ 66
------------UPD SimpleName@@Name:mongoOperationsMock @TO@ Name:deleteResultMock @AT@ 5637 @LENGTH@ 19
------------DEL SimpleName@@MethodName:remove:[any(), eq(Person.class), eq("persons")] @AT@ 5657 @LENGTH@ 46
---------------DEL MethodInvocation@@MethodName:any:[] @AT@ 5664 @LENGTH@ 5
---------------DEL MethodInvocation@@eq(Person.class) @AT@ 5671 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:eq:[Person.class] @AT@ 5671 @LENGTH@ 16
---------------------DEL TypeLiteral@@Person.class @AT@ 5674 @LENGTH@ 12
---------------DEL MethodInvocation@@eq("persons") @AT@ 5689 @LENGTH@ 13
------------MOV SimpleName@@MethodName:eq:["persons"] @TO@ MethodInvocation@@mongoOperationsMock.remove(any(),eq(Person.class),eq("persons")) @AT@ 5689 @LENGTH@ 13
---------------DEL StringLiteral@@"persons" @AT@ 5692 @LENGTH@ 9
------UPD SimpleName@@MethodName:thenReturn:[deleteResultMock] @TO@ MethodName:thenReturn:[true] @AT@ 5705 @LENGTH@ 28
---------DEL SimpleName@@deleteResultMock @AT@ 5716 @LENGTH@ 16
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:thenReturn:[deleteResultMock] @AT@ 5777 @LENGTH@ 4


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1395 @LENGTH@ 1205
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1402 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1407 @LENGTH@ 28


UPD MethodDeclaration@@default, RabbitMQEndpointBuilder, MethodName:rabbitMQ, String path,  @TO@ default, RabbitMQEndpointBuilder, MethodName:rabbitmq, String path,  @AT@ 114024 @LENGTH@ 386
---UPD SimpleName@@MethodName:rabbitMQ @TO@ MethodName:rabbitmq @AT@ 114056 @LENGTH@ 8


UPD TypeDeclaration@@[public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @TO@ [@Deprecated, public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 917 @LENGTH@ 219
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExpressionHandlerBeanDefinitionParser, AbstractSingleBeanDefinitionParser @AT@ 1095 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer(i -> defaultRes) @AT@ 2096 @LENGTH@ 113
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenReturn(res2).thenAnswer(i -> defaultRes) @AT@ 2096 @LENGTH@ 112
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2179 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2190 @LENGTH@ 17


UPD EnumDeclaration@@[public, static]Endpoint,  @TO@ [static]Endpoint,  @AT@ 62051 @LENGTH@ 94
---DEL Modifier@@public @AT@ 62051 @LENGTH@ 6


UPD VariableDeclarationStatement@@List<String> primaryBeanNames=Arrays.stream(beanNamesForType).filter(i -> applicationContext instanceof ConfigurableApplicationContext).filter(n -> ((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary()).collect(Collectors.toList()); @TO@ List<String> primaryBeanNames=getPrimaryBeanNames(beanNamesForType); @AT@ 6525 @LENGTH@ 299
---UPD VariableDeclarationFragment@@primaryBeanNames=Arrays.stream(beanNamesForType).filter(i -> applicationContext instanceof ConfigurableApplicationContext).filter(n -> ((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary()).collect(Collectors.toList()) @TO@ primaryBeanNames=getPrimaryBeanNames(beanNamesForType) @AT@ 6538 @LENGTH@ 285
------UPD MethodInvocation@@Arrays.stream(beanNamesForType).filter(i -> applicationContext instanceof ConfigurableApplicationContext).filter(n -> ((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary()).collect(Collectors.toList()) @TO@ getPrimaryBeanNames(beanNamesForType) @AT@ 6557 @LENGTH@ 266
---------DEL MethodInvocation@@MethodName:filter:[n -> ((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary()] @AT@ 6557 @LENGTH@ 232
------------DEL LambdaExpression@@n -> ((ConfigurableApplicationContext)applicationContext).getBeanFactory().getBeanDefinition(n).isPrimary() @AT@ 6680 @LENGTH@ 108
---------------DEL VariableDeclarationFragment@@n @AT@ 6680 @LENGTH@ 1
------------------DEL SimpleName@@n @AT@ 6680 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:filter:[i -> applicationContext instanceof ConfigurableApplicationContext] @AT@ 6557 @LENGTH@ 110
------------DEL LambdaExpression@@i -> applicationContext instanceof ConfigurableApplicationContext @AT@ 6601 @LENGTH@ 65
---------------DEL VariableDeclarationFragment@@i @AT@ 6601 @LENGTH@ 1
------------------DEL SimpleName@@i @AT@ 6601 @LENGTH@ 1
---------------DEL InstanceofExpression@@applicationContext instanceof ConfigurableApplicationContext @AT@ 6606 @LENGTH@ 60
------------------DEL SimpleName@@applicationContext @AT@ 6606 @LENGTH@ 18
------------------DEL Instanceof@@instanceof @AT@ 6625 @LENGTH@ 10
------------------DEL SimpleType@@ConfigurableApplicationContext @AT@ 6636 @LENGTH@ 30
---------DEL MethodInvocation@@MethodName:stream:[beanNamesForType] @AT@ 6557 @LENGTH@ 31
------------DEL SimpleName@@beanNamesForType @AT@ 6571 @LENGTH@ 16
---------DEL SimpleName@@Name:Arrays @AT@ 6557 @LENGTH@ 6
---------UPD SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodName:getPrimaryBeanNames:[beanNamesForType] @AT@ 6795 @LENGTH@ 28
------------INS SimpleName@@beanNamesForType @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 6544 @LENGTH@ 16
------------DEL MethodInvocation@@Collectors.toList() @AT@ 6803 @LENGTH@ 19
---------------DEL SimpleName@@Name:Collectors @AT@ 6803 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:toList:[] @AT@ 6814 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]LambdaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LambdaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1423 @LENGTH@ 3130
---DEL Modifier@@static @AT@ 1430 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 1731 @LENGTH@ 220
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 1804 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1804 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1809 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedDigitalOceanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDigitalOceanEndpointBuilder, [EndpointProducerBuilder] @AT@ 6971 @LENGTH@ 3048
---DEL Modifier@@static @AT@ 6978 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]MongoDbOutputType,  @TO@ [static]MongoDbOutputType,  @AT@ 55022 @LENGTH@ 91
---DEL Modifier@@public @AT@ 55022 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedBonitaEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedBonitaEndpointBuilder, [EndpointConsumerBuilder] @AT@ 4033 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 4040 @LENGTH@ 6


UPD ReturnStatement@@CastExpression:(AutoCloseableStatementRunner)Proxy.newProxyInstance(StatementRunner.class.getClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @TO@ CastExpression:(AutoCloseableStatementRunner)Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @AT@ 3237 @LENGTH@ 220
---UPD CastExpression@@(AutoCloseableStatementRunner)Proxy.newProxyInstance(StatementRunner.class.getClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @TO@ (AutoCloseableStatementRunner)Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @AT@ 3244 @LENGTH@ 212
------UPD MethodInvocation@@Proxy.newProxyInstance(StatementRunner.class.getClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @TO@ Proxy.newProxyInstance(ClassUtils.getDefaultClassLoader(),new Class<?>[]{AutoCloseableStatementRunner.class},new AutoCloseableStatementRunnerHandler(statementRunner)) @AT@ 3275 @LENGTH@ 181
---------UPD SimpleName@@MethodName:newProxyInstance:[StatementRunner.class.getClassLoader(), new Class<?>[]{AutoCloseableStatementRunner.class}, new AutoCloseableStatementRunnerHandler(statementRunner)] @TO@ MethodName:newProxyInstance:[ClassUtils.getDefaultClassLoader(), new Class<?>[]{AutoCloseableStatementRunner.class}, new AutoCloseableStatementRunnerHandler(statementRunner)] @AT@ 3281 @LENGTH@ 175
------------UPD MethodInvocation@@StatementRunner.class.getClassLoader() @TO@ ClassUtils.getDefaultClassLoader() @AT@ 3298 @LENGTH@ 38
---------------DEL TypeLiteral@@StatementRunner.class @AT@ 3298 @LENGTH@ 21
---------------UPD SimpleName@@MethodName:getClassLoader:[] @TO@ MethodName:getDefaultClassLoader:[] @AT@ 3320 @LENGTH@ 16
---------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@StatementRunner.class.getClassLoader() @AT@ 3342 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]AdvancedIgniteIdGenEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIgniteIdGenEndpointBuilder, [EndpointProducerBuilder] @AT@ 4192 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 4199 @LENGTH@ 6


UPD TypeDeclaration@@[public]StateKeyGenerator,  @TO@ [@Deprecated, public]StateKeyGenerator,  @AT@ 948 @LENGTH@ 247
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]StateKeyGenerator,  @AT@ 1125 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42271 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42271 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ MethodInvocation:when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2020 @LENGTH@ 96
---UPD MethodInvocation@@when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer((i) -> defaultRes) @TO@ when(api.getUpdates(any(),any(),any(),any())).thenReturn(res1).thenAnswer(i -> defaultRes) @AT@ 2020 @LENGTH@ 95
------UPD SimpleName@@MethodName:thenAnswer:[(i) -> defaultRes] @TO@ MethodName:thenAnswer:[i -> defaultRes] @AT@ 2086 @LENGTH@ 29
---------UPD LambdaExpression@@(i) -> defaultRes @TO@ i -> defaultRes @AT@ 2097 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]ServiceEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]ServiceEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1429 @LENGTH@ 567
---DEL Modifier@@static @AT@ 1436 @LENGTH@ 6


UPD TypeDeclaration@@[public]InMemoryTokenStore, [TokenStore] @TO@ [@Deprecated, public]InMemoryTokenStore, [TokenStore] @AT@ 1036 @LENGTH@ 10457
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryTokenStore, [TokenStore] @AT@ 1213 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @TO@ TypeDeclaration@@[public]NettyConcurrentTest, BaseNettyTest @AT@ 1686 @LENGTH@ 103
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @AT@ 1686 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @AT@ 1693 @LENGTH@ 4
---INS SimpleName@@MethodName:testMediumConcurrentProducers @TO@ MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @AT@ 1698 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @AT@ 1737 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:doSendMessages(10000,20) @TO@ MethodDeclaration@@public, void, MethodName:testMediumConcurrentProducers, Exception,  @AT@ 1757 @LENGTH@ 26
------INS MethodInvocation@@doSendMessages(10000,20) @TO@ ExpressionStatement@@MethodInvocation:doSendMessages(10000,20) @AT@ 1757 @LENGTH@ 25
---------INS SimpleName@@MethodName:doSendMessages:[10000, 20] @TO@ MethodInvocation@@doSendMessages(10000,20) @AT@ 1757 @LENGTH@ 25
------------INS NumberLiteral@@10000 @TO@ SimpleName@@MethodName:doSendMessages:[10000, 20] @AT@ 1772 @LENGTH@ 5
------------INS NumberLiteral@@20 @TO@ SimpleName@@MethodName:doSendMessages:[10000, 20] @AT@ 1779 @LENGTH@ 2


UPD IfStatement@@if (exchange.getFromEndpoint().getEndpointUri().startsWith("direct:")) {  return true;} @TO@ if (exchange.getFromEndpoint() != null && exchange.getFromEndpoint().getEndpointUri().startsWith("direct:")) {  return true;} @AT@ 7427 @LENGTH@ 123
---INS InfixExpression@@exchange.getFromEndpoint() != null && exchange.getFromEndpoint().getEndpointUri().startsWith("direct:") @TO@ IfStatement@@if (exchange.getFromEndpoint().getEndpointUri().startsWith("direct:")) {  return true;} @AT@ 7570 @LENGTH@ 103
------MOV MethodInvocation@@exchange.getFromEndpoint().getEndpointUri().startsWith("direct:") @TO@ InfixExpression@@exchange.getFromEndpoint() != null && exchange.getFromEndpoint().getEndpointUri().startsWith("direct:") @AT@ 7431 @LENGTH@ 65
------INS InfixExpression@@exchange.getFromEndpoint() != null @TO@ InfixExpression@@exchange.getFromEndpoint() != null && exchange.getFromEndpoint().getEndpointUri().startsWith("direct:") @AT@ 7570 @LENGTH@ 34
---------INS MethodInvocation@@exchange.getFromEndpoint() @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 7570 @LENGTH@ 26
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 7570 @LENGTH@ 8
------------INS SimpleName@@MethodName:getFromEndpoint:[] @TO@ MethodInvocation@@exchange.getFromEndpoint() @AT@ 7579 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 7596 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getFromEndpoint() != null @AT@ 7600 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@exchange.getFromEndpoint() != null && exchange.getFromEndpoint().getEndpointUri().startsWith("direct:") @AT@ 7604 @LENGTH@ 2


UPD TypeDeclaration@@[public, static]AhcEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AhcEndpointBuilder, [EndpointProducerBuilder] @AT@ 1480 @LENGTH@ 8385
---DEL Modifier@@static @AT@ 1487 @LENGTH@ 6


INS FieldDeclaration@@String, [USERNAME="username"] @TO@ TypeDeclaration@@[public]OAuth2ParameterNames,  @AT@ 2601 @LENGTH@ 29
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [USERNAME="username"] @AT@ 2601 @LENGTH@ 6
---INS VariableDeclarationFragment@@USERNAME="username" @TO@ FieldDeclaration@@String, [USERNAME="username"] @AT@ 2608 @LENGTH@ 21
------INS SimpleName@@USERNAME @TO@ VariableDeclarationFragment@@USERNAME="username" @AT@ 2608 @LENGTH@ 8
------INS StringLiteral@@"username" @TO@ VariableDeclarationFragment@@USERNAME="username" @AT@ 2619 @LENGTH@ 10


UPD VariableDeclarationStatement@@ConcurrentSessionFilter concurrentSessionFilter=createConccurencyFilter(http); @TO@ ConcurrentSessionFilter concurrentSessionFilter=createConcurrencyFilter(http); @AT@ 21723 @LENGTH@ 80
---UPD VariableDeclarationFragment@@concurrentSessionFilter=createConccurencyFilter(http) @TO@ concurrentSessionFilter=createConcurrencyFilter(http) @AT@ 21747 @LENGTH@ 55
------UPD MethodInvocation@@createConccurencyFilter(http) @TO@ createConcurrencyFilter(http) @AT@ 21773 @LENGTH@ 29
---------UPD SimpleName@@MethodName:createConccurencyFilter:[http] @TO@ MethodName:createConcurrencyFilter:[http] @AT@ 21773 @LENGTH@ 29


UPD ExpressionStatement@@Assignment:authToken="IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @TO@ Assignment:authToken="" @AT@ 1472 @LENGTH@ 58
---UPD Assignment@@authToken="IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @TO@ authToken="" @AT@ 1472 @LENGTH@ 57
------UPD StringLiteral@@"IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @TO@ "" @AT@ 1484 @LENGTH@ 45


UPD ExpressionStatement@@MethodInvocation:from("netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder").to(mockGmond) @TO@ MethodInvocation:from("netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder").to(mockGmond) @AT@ 9452 @LENGTH@ 97
---UPD MethodInvocation@@from("netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder").to(mockGmond) @TO@ from("netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder").to(mockGmond) @AT@ 9452 @LENGTH@ 96
------UPD MethodInvocation@@MethodName:from:["netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder"] @TO@ MethodName:from:["netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder"] @AT@ 9452 @LENGTH@ 82
---------UPD InfixExpression@@"netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder" @TO@ "netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV31Decoder" @AT@ 9457 @LENGTH@ 76
------------UPD StringLiteral@@"netty4:udp://localhost:" @TO@ "netty:udp://localhost:" @AT@ 9457 @LENGTH@ 25


UPD TypeDeclaration@@[public, static]AdvancedGoogleSheetsStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedGoogleSheetsStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 9659 @LENGTH@ 2180
---DEL Modifier@@static @AT@ 9666 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertThat(detectAlias("select * from User\nu\norder \n by name")).isEqualTo("u") @TO@ MethodDeclaration@@public, void, MethodName:detectsAliasWithGroupAndOrderByWithLineBreaks,  @AT@ 17035 @LENGTH@ 82
---INS MethodInvocation@@assertThat(detectAlias("select * from User\nu\norder \n by name")).isEqualTo("u") @TO@ ExpressionStatement@@MethodInvocation:assertThat(detectAlias("select * from User\nu\norder \n by name")).isEqualTo("u") @AT@ 17035 @LENGTH@ 81
------INS MethodInvocation@@MethodName:assertThat:[detectAlias("select * from User\nu\norder \n by name")] @TO@ MethodInvocation@@assertThat(detectAlias("select * from User\nu\norder \n by name")).isEqualTo("u") @AT@ 17035 @LENGTH@ 66
---------INS MethodInvocation@@detectAlias("select * from User\nu\norder \n by name") @TO@ MethodInvocation@@MethodName:assertThat:[detectAlias("select * from User\nu\norder \n by name")] @AT@ 17046 @LENGTH@ 54
------------INS SimpleName@@MethodName:detectAlias:["select * from User\nu\norder \n by name"] @TO@ MethodInvocation@@detectAlias("select * from User\nu\norder \n by name") @AT@ 17046 @LENGTH@ 54
---------------INS StringLiteral@@"select * from User\nu\norder \n by name" @TO@ SimpleName@@MethodName:detectAlias:["select * from User\nu\norder \n by name"] @AT@ 17058 @LENGTH@ 41
------INS SimpleName@@MethodName:isEqualTo:["u"] @TO@ MethodInvocation@@assertThat(detectAlias("select * from User\nu\norder \n by name")).isEqualTo("u") @AT@ 17102 @LENGTH@ 14
---------INS StringLiteral@@"u" @TO@ SimpleName@@MethodName:isEqualTo:["u"] @AT@ 17112 @LENGTH@ 3


UPD TypeDeclaration@@[public, static]AdvancedAtomEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedAtomEndpointBuilder, [EndpointConsumerBuilder] @AT@ 7522 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 7529 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedStringTemplateEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedStringTemplateEndpointBuilder, [EndpointProducerBuilder] @AT@ 4488 @LENGTH@ 2152
---DEL Modifier@@static @AT@ 4495 @LENGTH@ 6


UPD MethodDeclaration@@default, ECSEndpointBuilder, MethodName:eCS, String path,  @TO@ default, ECSEndpointBuilder, MethodName:awsEcs, String path,  @AT@ 4932 @LENGTH@ 350
---UPD SimpleName@@MethodName:eCS @TO@ MethodName:awsEcs @AT@ 4959 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 2791 @LENGTH@ 274
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 2870 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2870 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2875 @LENGTH@ 28


UPD TypeDeclaration@@[public]RSA_SHA1SignatureMethod, [OAuthSignatureMethod] @TO@ [@Deprecated, public]RSA_SHA1SignatureMethod, [OAuthSignatureMethod] @AT@ 1039 @LENGTH@ 4924
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RSA_SHA1SignatureMethod, [OAuthSignatureMethod] @AT@ 1260 @LENGTH@ 11


UPD FieldDeclaration@@PayloadSocketAcceptorInterceptor, [interceptor] @TO@ SecuritySocketAcceptorInterceptor, [interceptor] @AT@ 2643 @LENGTH@ 45
---UPD SimpleType@@PayloadSocketAcceptorInterceptor @TO@ SecuritySocketAcceptorInterceptor @AT@ 2643 @LENGTH@ 32


INS MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @TO@ TypeDeclaration@@[public]TestClientRegistrations,  @AT@ 2556 @LENGTH@ 426
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @AT@ 2556 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @AT@ 2563 @LENGTH@ 6
---INS SimpleType@@ClientRegistration.Builder @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @AT@ 2570 @LENGTH@ 26
---INS SimpleName@@MethodName:password @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @AT@ 2597 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @TO@ MethodDeclaration@@public, static, ClientRegistration.Builder, MethodName:password,  @AT@ 2612 @LENGTH@ 367
------INS MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @TO@ ReturnStatement@@MethodInvocation:ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 359
---------INS MethodInvocation@@MethodName:clientId:["client-id"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 324
------------INS StringLiteral@@"client-id" @TO@ MethodInvocation@@MethodName:clientId:["client-id"] @AT@ 2931 @LENGTH@ 11
---------INS MethodInvocation@@MethodName:clientName:["Client Name"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 297
------------INS StringLiteral@@"Client Name" @TO@ MethodInvocation@@MethodName:clientName:["Client Name"] @AT@ 2902 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:tokenUri:["https://example.com/login/oauth/access_token"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 266
------------INS StringLiteral@@"https://example.com/login/oauth/access_token" @TO@ MethodInvocation@@MethodName:tokenUri:["https://example.com/login/oauth/access_token"] @AT@ 2838 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:scope:["read", "write"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 204
------------INS StringLiteral@@"read" @TO@ MethodInvocation@@MethodName:scope:["read", "write"] @AT@ 2807 @LENGTH@ 6
------------INS StringLiteral@@"write" @TO@ MethodInvocation@@MethodName:scope:["read", "write"] @AT@ 2815 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.PASSWORD] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 176
------------INS QualifiedName@@AuthorizationGrantType.PASSWORD @TO@ MethodInvocation@@MethodName:authorizationGrantType:[AuthorizationGrantType.PASSWORD] @AT@ 2763 @LENGTH@ 31
---------------INS SimpleName@@AuthorizationGrantType @TO@ QualifiedName@@AuthorizationGrantType.PASSWORD @AT@ 2763 @LENGTH@ 22
---------------INS SimpleName@@PASSWORD @TO@ QualifiedName@@AuthorizationGrantType.PASSWORD @AT@ 2786 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.BASIC] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 115
------------INS QualifiedName@@ClientAuthenticationMethod.BASIC @TO@ MethodInvocation@@MethodName:clientAuthenticationMethod:[ClientAuthenticationMethod.BASIC] @AT@ 2701 @LENGTH@ 32
---------------INS SimpleName@@ClientAuthenticationMethod @TO@ QualifiedName@@ClientAuthenticationMethod.BASIC @AT@ 2701 @LENGTH@ 26
---------------INS SimpleName@@BASIC @TO@ QualifiedName@@ClientAuthenticationMethod.BASIC @AT@ 2728 @LENGTH@ 5
---------INS MethodInvocation@@MethodName:withRegistrationId:["password"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 49
------------INS StringLiteral@@"password" @TO@ MethodInvocation@@MethodName:withRegistrationId:["password"] @AT@ 2657 @LENGTH@ 10
---------INS SimpleName@@Name:ClientRegistration @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2619 @LENGTH@ 18
---------INS SimpleName@@MethodName:clientSecret:["client-secret"] @TO@ MethodInvocation@@ClientRegistration.withRegistrationId("password").clientAuthenticationMethod(ClientAuthenticationMethod.BASIC).authorizationGrantType(AuthorizationGrantType.PASSWORD).scope("read","write").tokenUri("https://example.com/login/oauth/access_token").clientName("Client Name").clientId("client-id").clientSecret("client-secret") @AT@ 2949 @LENGTH@ 29
------------INS StringLiteral@@"client-secret" @TO@ SimpleName@@MethodName:clientSecret:["client-secret"] @AT@ 2962 @LENGTH@ 15


UPD TypeDeclaration@@[public]RedisTokenStore, [TokenStore] @TO@ [@Deprecated, public]RedisTokenStore, [TokenStore] @AT@ 1152 @LENGTH@ 14843
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RedisTokenStore, [TokenStore] @AT@ 1330 @LENGTH@ 11


UPD IfStatement@@if (System.getProperty("java.vendor.url","whatever").contains("ibm.com")) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ if (TestSuiteEnvironment.isIbmJvm()) {  return new String[]{"sh","-c","ps -ef | awk '{$1=\"\"; print $0}'"};} else {  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 14301 @LENGTH@ 550
---UPD MethodInvocation@@System.getProperty("java.vendor.url","whatever").contains("ibm.com") @TO@ TestSuiteEnvironment.isIbmJvm() @AT@ 14305 @LENGTH@ 68
------DEL MethodInvocation@@MethodName:getProperty:["java.vendor.url", "whatever"] @AT@ 14305 @LENGTH@ 48
---------DEL StringLiteral@@"java.vendor.url" @AT@ 14324 @LENGTH@ 17
---------DEL StringLiteral@@"whatever" @AT@ 14342 @LENGTH@ 10
------UPD SimpleName@@Name:System @TO@ Name:TestSuiteEnvironment @AT@ 14305 @LENGTH@ 6
------UPD SimpleName@@MethodName:contains:["ibm.com"] @TO@ MethodName:isIbmJvm:[] @AT@ 14354 @LENGTH@ 19
---------DEL StringLiteral@@"ibm.com" @AT@ 14363 @LENGTH@ 9
---UPD Block@@ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-lv"};} @TO@ ElseBody:{  File jpsExe=new File(jreHome,"bin/jps");  if (!jpsExe.exists()) {    jpsExe=new File(jreHome,"../bin/jps");  }  Assert.assertTrue("JPS executable not found. File: " + jpsExe,jpsExe.exists());  return new String[]{jpsExe.getAbsolutePath(),"-l","-v"};} @AT@ 14486 @LENGTH@ 365
------UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 14781 @LENGTH@ 56
---------UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 14788 @LENGTH@ 48
------------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 14801 @LENGTH@ 35
---------------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 14798 @LENGTH@ 4
---------------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 14829 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:GenTezProcContext, HiveConf conf, ParseContext parseContext, List<Task<MoveWork>> moveTask, List<Task<? extends Serializable>> rootTasks, Set<ReadEntity> inputs, Set<WriteEntity> outputs,  @TO@ public, voidMethodName:GenTezProcContext, HiveConf conf, ParseContext parseContext, List<Task<MoveWork>> moveTask, List<Task<?>> rootTasks, Set<ReadEntity> inputs, Set<WriteEntity> outputs,  @AT@ 7040 @LENGTH@ 2581
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 7144 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 7144 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7149 @LENGTH@ 28


UPD TypeDeclaration@@[@Configuration]WebFluxSecurityConfiguration,  @TO@ [@Configuration(proxyBeanMethods=false)]WebFluxSecurityConfiguration,  @AT@ 1689 @LENGTH@ 3054
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration]WebFluxSecurityConfiguration,  @AT@ 1689 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 1689 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]AdvancedRestApiEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedRestApiEndpointBuilder, [EndpointConsumerBuilder] @AT@ 3699 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 3706 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]XChangeService,  @TO@ [static]XChangeService,  @AT@ 7369 @LENGTH@ 80
---DEL Modifier@@public @AT@ 7369 @LENGTH@ 6


UPD TypeDeclaration@@[public]Jwt, [BinaryFormat] @TO@ [@Deprecated, public]Jwt, [BinaryFormat] @AT@ 754 @LENGTH@ 141
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]Jwt, [BinaryFormat] @AT@ 932 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(clientCredentialsGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(clientCredentialsGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 13190 @LENGTH@ 298
---UPD MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(clientCredentialsGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(clientCredentialsGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 13190 @LENGTH@ 297
------UPD SimpleName@@MethodName:hasMessage:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error"] @TO@ MethodName:hasMessageContaining:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response"] @AT@ 13348 @LENGTH@ 139
---------UPD StringLiteral@@"[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error" @TO@ "[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response" @AT@ 13359 @LENGTH@ 127


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2076 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2088 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2096 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2096 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2136 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2144 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2163 @LENGTH@ 4


UPD VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @TO@ Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest); @AT@ 4820 @LENGTH@ 174


UPD TypeDeclaration@@[public, static]WebhookEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]WebhookEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1526 @LENGTH@ 3129
---DEL Modifier@@static @AT@ 1533 @LENGTH@ 6


INS VariableDeclarationStatement@@Neo4jTransactionObject transactionObject=extractNeo4jTransaction(transaction); @TO@ MethodDeclaration@@protected, void, MethodName:doResume, @Nullable Object transaction, Object suspendedResources,  @AT@ 7162 @LENGTH@ 80
---INS SimpleType@@Neo4jTransactionObject @TO@ VariableDeclarationStatement@@Neo4jTransactionObject transactionObject=extractNeo4jTransaction(transaction); @AT@ 7162 @LENGTH@ 22
---INS VariableDeclarationFragment@@transactionObject=extractNeo4jTransaction(transaction) @TO@ VariableDeclarationStatement@@Neo4jTransactionObject transactionObject=extractNeo4jTransaction(transaction); @AT@ 7185 @LENGTH@ 56
------INS SimpleName@@transactionObject @TO@ VariableDeclarationFragment@@transactionObject=extractNeo4jTransaction(transaction) @AT@ 7185 @LENGTH@ 17
------INS MethodInvocation@@extractNeo4jTransaction(transaction) @TO@ VariableDeclarationFragment@@transactionObject=extractNeo4jTransaction(transaction) @AT@ 7205 @LENGTH@ 36
---------INS SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @TO@ MethodInvocation@@extractNeo4jTransaction(transaction) @AT@ 7205 @LENGTH@ 36
------------INS SimpleName@@transaction @TO@ SimpleName@@MethodName:extractNeo4jTransaction:[transaction] @AT@ 7229 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @TO@ TypeDeclaration@@[public]RedisRepositoryConfigurationExtensionUnitTests,  @AT@ 4847 @LENGTH@ 356
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 4847 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 4854 @LENGTH@ 4
---INS SimpleName@@MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 4859 @LENGTH@ 76
---INS ExpressionStatement@@Assignment:metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 4943 @LENGTH@ 86
------INS Assignment@@metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @TO@ ExpressionStatement@@Assignment:metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @AT@ 4943 @LENGTH@ 85
---------INS SimpleName@@metadata @TO@ Assignment@@metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @AT@ 4943 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @AT@ 4951 @LENGTH@ 1
---------INS ClassInstanceCreation@@StandardAnnotationMetadata[ConfigWithEmptyConfigParameter.class, true] @TO@ Assignment@@metadata=new StandardAnnotationMetadata(ConfigWithEmptyConfigParameter.class,true) @AT@ 4954 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[ConfigWithEmptyConfigParameter.class, true] @AT@ 4954 @LENGTH@ 3
------------INS SimpleType@@StandardAnnotationMetadata @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[ConfigWithEmptyConfigParameter.class, true] @AT@ 4958 @LENGTH@ 26
------------INS TypeLiteral@@ConfigWithEmptyConfigParameter.class @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[ConfigWithEmptyConfigParameter.class, true] @AT@ 4985 @LENGTH@ 36
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@StandardAnnotationMetadata[ConfigWithEmptyConfigParameter.class, true] @AT@ 5023 @LENGTH@ 4
---INS VariableDeclarationStatement@@BeanDefinitionRegistry beanDefintionRegistry=getBeanDefinitionRegistry(); @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 5032 @LENGTH@ 75
------INS SimpleType@@BeanDefinitionRegistry @TO@ VariableDeclarationStatement@@BeanDefinitionRegistry beanDefintionRegistry=getBeanDefinitionRegistry(); @AT@ 5032 @LENGTH@ 22
------INS VariableDeclarationFragment@@beanDefintionRegistry=getBeanDefinitionRegistry() @TO@ VariableDeclarationStatement@@BeanDefinitionRegistry beanDefintionRegistry=getBeanDefinitionRegistry(); @AT@ 5055 @LENGTH@ 51
---------INS SimpleName@@beanDefintionRegistry @TO@ VariableDeclarationFragment@@beanDefintionRegistry=getBeanDefinitionRegistry() @AT@ 5055 @LENGTH@ 21
---------INS MethodInvocation@@MethodName:getBeanDefinitionRegistry:[] @TO@ VariableDeclarationFragment@@beanDefintionRegistry=getBeanDefinitionRegistry() @AT@ 5079 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:assertThat(getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)).isEqualTo("") @TO@ MethodDeclaration@@public, void, MethodName:explicitlyEmptyKeyspaceNotificationsConfigParameterShouldBeCapturedCorrectly,  @AT@ 5111 @LENGTH@ 89
------INS MethodInvocation@@assertThat(getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)).isEqualTo("") @TO@ ExpressionStatement@@MethodInvocation:assertThat(getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)).isEqualTo("") @AT@ 5111 @LENGTH@ 88
---------INS MethodInvocation@@MethodName:assertThat:[getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)] @TO@ MethodInvocation@@assertThat(getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)).isEqualTo("") @AT@ 5111 @LENGTH@ 74
------------INS MethodInvocation@@getKeyspaceNotificationsConfigParameter(beanDefintionRegistry) @TO@ MethodInvocation@@MethodName:assertThat:[getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)] @AT@ 5122 @LENGTH@ 62
---------------INS SimpleName@@MethodName:getKeyspaceNotificationsConfigParameter:[beanDefintionRegistry] @TO@ MethodInvocation@@getKeyspaceNotificationsConfigParameter(beanDefintionRegistry) @AT@ 5122 @LENGTH@ 62
------------------INS SimpleName@@beanDefintionRegistry @TO@ SimpleName@@MethodName:getKeyspaceNotificationsConfigParameter:[beanDefintionRegistry] @AT@ 5162 @LENGTH@ 21
---------INS SimpleName@@MethodName:isEqualTo:[""] @TO@ MethodInvocation@@assertThat(getKeyspaceNotificationsConfigParameter(beanDefintionRegistry)).isEqualTo("") @AT@ 5186 @LENGTH@ 13
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:isEqualTo:[""] @AT@ 5196 @LENGTH@ 2


UPD EnumDeclaration@@[public, static]JdbcOutputType,  @TO@ [static]JdbcOutputType,  @AT@ 16698 @LENGTH@ 84
---DEL Modifier@@public @AT@ 16698 @LENGTH@ 6


INS TryStatement@@try {  roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B");  fail("Cycle in role hierarchy was not detected!");} catch (CycleInRoleHierarchyException e) {} @TO@ MethodDeclaration@@public, void, MethodName:testCyclesInRoleHierarchy,  @AT@ 6419 @LENGTH@ 197
---INS ExpressionStatement@@MethodInvocation:roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B") @TO@ TryStatement@@try {  roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B");  fail("Cycle in role hierarchy was not detected!");} catch (CycleInRoleHierarchyException e) {} @AT@ 6428 @LENGTH@ 84
------INS MethodInvocation@@roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B") @TO@ ExpressionStatement@@MethodInvocation:roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B") @AT@ 6428 @LENGTH@ 83
---------INS SimpleName@@Name:roleHierarchyImpl @TO@ MethodInvocation@@roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B") @AT@ 6428 @LENGTH@ 17
---------INS SimpleName@@MethodName:setHierarchy:["ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B"] @TO@ MethodInvocation@@roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B") @AT@ 6446 @LENGTH@ 65
------------INS StringLiteral@@"ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B" @TO@ SimpleName@@MethodName:setHierarchy:["ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B"] @AT@ 6459 @LENGTH@ 51
---INS ExpressionStatement@@MethodInvocation:fail("Cycle in role hierarchy was not detected!") @TO@ TryStatement@@try {  roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B");  fail("Cycle in role hierarchy was not detected!");} catch (CycleInRoleHierarchyException e) {} @AT@ 6516 @LENGTH@ 50
------INS MethodInvocation@@fail("Cycle in role hierarchy was not detected!") @TO@ ExpressionStatement@@MethodInvocation:fail("Cycle in role hierarchy was not detected!") @AT@ 6516 @LENGTH@ 49
---------INS SimpleName@@MethodName:fail:["Cycle in role hierarchy was not detected!"] @TO@ MethodInvocation@@fail("Cycle in role hierarchy was not detected!") @AT@ 6516 @LENGTH@ 49
------------INS StringLiteral@@"Cycle in role hierarchy was not detected!" @TO@ SimpleName@@MethodName:fail:["Cycle in role hierarchy was not detected!"] @AT@ 6521 @LENGTH@ 43
---INS CatchClause@@catch (CycleInRoleHierarchyException e) {} @TO@ TryStatement@@try {  roleHierarchyImpl.setHierarchy("ROLE_C > ROLE_B\nROLE_B > ROLE_A\nROLE_A > ROLE_B");  fail("Cycle in role hierarchy was not detected!");} catch (CycleInRoleHierarchyException e) {} @AT@ 6571 @LENGTH@ 45
------INS SingleVariableDeclaration@@CycleInRoleHierarchyException e @TO@ CatchClause@@catch (CycleInRoleHierarchyException e) {} @AT@ 6578 @LENGTH@ 31
---------INS SimpleType@@CycleInRoleHierarchyException @TO@ SingleVariableDeclaration@@CycleInRoleHierarchyException e @AT@ 6578 @LENGTH@ 29
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@CycleInRoleHierarchyException e @AT@ 6608 @LENGTH@ 1


UPD TypeDeclaration@@[public]DefaultSecurityContextAccessor, [SecurityContextAccessor] @TO@ [@Deprecated, public]DefaultSecurityContextAccessor, [SecurityContextAccessor] @AT@ 1050 @LENGTH@ 937
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultSecurityContextAccessor, [SecurityContextAccessor] @AT@ 1227 @LENGTH@ 11


UPD VariableDeclarationStatement@@ModClusterServiceMBean service=new ActiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(true),serviceName).get(); @TO@ ModClusterServiceMBean service=new PassiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(!executable.isReadOnly()),serviceName).get(); @AT@ 3749 @LENGTH@ 136
---UPD VariableDeclarationFragment@@service=new ActiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(true),serviceName).get() @TO@ service=new PassiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(!executable.isReadOnly()),serviceName).get() @AT@ 3772 @LENGTH@ 112
------UPD MethodInvocation@@new ActiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(true),serviceName).get() @TO@ new PassiveServiceSupplier<ModClusterServiceMBean>(context.getServiceRegistry(!executable.isReadOnly()),serviceName).get() @AT@ 3782 @LENGTH@ 102
---------UPD ClassInstanceCreation@@ActiveServiceSupplier<ModClusterServiceMBean>[context.getServiceRegistry(true), serviceName] @TO@ PassiveServiceSupplier<ModClusterServiceMBean>[context.getServiceRegistry(!executable.isReadOnly()), serviceName] @AT@ 3782 @LENGTH@ 96
------------UPD ParameterizedType@@ActiveServiceSupplier<ModClusterServiceMBean> @TO@ PassiveServiceSupplier<ModClusterServiceMBean> @AT@ 3786 @LENGTH@ 45
---------------UPD SimpleType@@ActiveServiceSupplier @TO@ PassiveServiceSupplier @AT@ 3786 @LENGTH@ 21
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(!executable.isReadOnly()) @AT@ 3832 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[!executable.isReadOnly()] @AT@ 3840 @LENGTH@ 24
------------------DEL BooleanLiteral@@true @AT@ 3859 @LENGTH@ 4
------------------INS PrefixExpression@@!executable.isReadOnly() @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 3861 @LENGTH@ 24
---------------------INS Operator@@! @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 3861 @LENGTH@ 1
---------------------INS MethodInvocation@@executable.isReadOnly() @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 3862 @LENGTH@ 23
------------------------INS SimpleName@@Name:executable @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 3862 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:isReadOnly:[] @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 3873 @LENGTH@ 12


UPD VariableDeclarationStatement@@Instant instant=Instant.now(); @TO@ Instant instant=new Date().toInstant(); @AT@ 2834 @LENGTH@ 32
---UPD VariableDeclarationFragment@@instant=Instant.now() @TO@ instant=new Date().toInstant() @AT@ 2842 @LENGTH@ 23
------UPD MethodInvocation@@Instant.now() @TO@ new Date().toInstant() @AT@ 2852 @LENGTH@ 13
---------INS ClassInstanceCreation@@Date[] @TO@ MethodInvocation@@Instant.now() @AT@ 2852 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@Date[] @AT@ 2852 @LENGTH@ 3
------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[] @AT@ 2856 @LENGTH@ 4
---------DEL SimpleName@@Name:Instant @AT@ 2852 @LENGTH@ 7
---------UPD SimpleName@@MethodName:now:[] @TO@ MethodName:toInstant:[] @AT@ 2860 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2AuthenticationFailureEvent, AbstractAuthenticationFailureEvent @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuth2AuthenticationFailureEvent, AbstractAuthenticationFailureEvent @AT@ 300 @LENGTH@ 262
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2AuthenticationFailureEvent, AbstractAuthenticationFailureEvent @AT@ 514 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]CryptoCmsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]CryptoCmsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1589 @LENGTH@ 17491
---DEL Modifier@@static @AT@ 1596 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]IgniteComputeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IgniteComputeEndpointBuilder, [EndpointProducerBuilder] @AT@ 1616 @LENGTH@ 2642
---DEL Modifier@@static @AT@ 1623 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]AckMode,  @TO@ [static]AckMode,  @AT@ 29490 @LENGTH@ 54
---DEL Modifier@@public @AT@ 29490 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordProviderTests, AbstractResourceOwnerPasswordProviderTests @AT@ 1591 @LENGTH@ 644
---MOV ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.OK,response.getStatusCode()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 868 @LENGTH@ 54
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1598 @LENGTH@ 4
---INS SimpleName@@MethodName:testCheckTokenPostRequestCall @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1603 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1642 @LENGTH@ 9
---INS VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1656 @LENGTH@ 74
------INS SimpleType@@TestRestTemplate @TO@ VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @AT@ 1656 @LENGTH@ 16
------INS VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @TO@ VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @AT@ 1673 @LENGTH@ 56
---------INS SimpleName@@template @TO@ VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @AT@ 1673 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @TO@ VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @AT@ 1684 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1684 @LENGTH@ 3
------------INS SimpleType@@TestRestTemplate @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1688 @LENGTH@ 16
------------INS StringLiteral@@"my-trusted-client" @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1705 @LENGTH@ 19
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1726 @LENGTH@ 2
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1733 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 1733 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 1745 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 1745 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 1755 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 1755 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 1759 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1776 @LENGTH@ 62
------INS MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @TO@ ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1776 @LENGTH@ 61
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1776 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_FORM_URLENCODED] @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1784 @LENGTH@ 53
------------INS QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @TO@ SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_FORM_URLENCODED] @AT@ 1799 @LENGTH@ 37
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @AT@ 1799 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_FORM_URLENCODED @TO@ QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @AT@ 1809 @LENGTH@ 27
---INS VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1841 @LENGTH@ 67
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @AT@ 1841 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1841 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1855 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1863 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @AT@ 1871 @LENGTH@ 36
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @AT@ 1871 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedMultiValueMap<>[] @TO@ VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @AT@ 1880 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1880 @LENGTH@ 3
------------INS ParameterizedType@@LinkedMultiValueMap<> @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1884 @LENGTH@ 21
---------------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<> @AT@ 1884 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:params.add("token",context.getAccessToken().getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1911 @LENGTH@ 57
------INS MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @TO@ ExpressionStatement@@MethodInvocation:params.add("token",context.getAccessToken().getValue()) @AT@ 1911 @LENGTH@ 56
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @AT@ 1911 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @TO@ MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @AT@ 1918 @LENGTH@ 49
------------INS StringLiteral@@"token" @TO@ SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @AT@ 1922 @LENGTH@ 7
------------INS MethodInvocation@@context.getAccessToken().getValue() @TO@ SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @AT@ 1931 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1931 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1931 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1956 @LENGTH@ 10
---INS VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1971 @LENGTH@ 86
------INS ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @TO@ VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @AT@ 1971 @LENGTH@ 41
---------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @AT@ 1971 @LENGTH@ 10
---------INS ParameterizedType@@MultiValueMap<String,String> @TO@ ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @AT@ 1982 @LENGTH@ 29
------------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1982 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1996 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 2004 @LENGTH@ 6
------INS VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @TO@ VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @AT@ 2013 @LENGTH@ 43
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @AT@ 2013 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpEntity<>[params, headers] @TO@ VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @AT@ 2023 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2023 @LENGTH@ 3
------------INS ParameterizedType@@HttpEntity<> @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2027 @LENGTH@ 12
---------------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<> @AT@ 2027 @LENGTH@ 10
------------INS SimpleName@@params @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2040 @LENGTH@ 6
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2048 @LENGTH@ 7
---INS VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 2060 @LENGTH@ 115
------INS ParameterizedType@@ResponseEntity<String> @TO@ VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @AT@ 2060 @LENGTH@ 22
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 2060 @LENGTH@ 14
---------INS SimpleType@@String @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 2075 @LENGTH@ 6
------INS VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @TO@ VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @AT@ 2083 @LENGTH@ 91
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2083 @LENGTH@ 8
---------INS MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @TO@ VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2094 @LENGTH@ 80
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2094 @LENGTH@ 8
------------INS SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @TO@ MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2103 @LENGTH@ 71
---------------INS MethodInvocation@@http.getUrl("/oauth/check_token") @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2117 @LENGTH@ 33
------------------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.getUrl("/oauth/check_token") @AT@ 2117 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getUrl:["/oauth/check_token"] @TO@ MethodInvocation@@http.getUrl("/oauth/check_token") @AT@ 2122 @LENGTH@ 28
---------------------INS StringLiteral@@"/oauth/check_token" @TO@ SimpleName@@MethodName:getUrl:["/oauth/check_token"] @AT@ 2129 @LENGTH@ 20
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2152 @LENGTH@ 7
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2161 @LENGTH@ 12


UPD VariableDeclarationStatement@@final Stack<int[]> backtrack=new Stack<>(); @TO@ final Deque<int[]> backtrack=new ArrayDeque<>(wcs.length); @AT@ 55639 @LENGTH@ 45
---UPD ParameterizedType@@Stack<int[]> @TO@ Deque<int[]> @AT@ 55645 @LENGTH@ 12
------UPD SimpleType@@Stack @TO@ Deque @AT@ 55645 @LENGTH@ 5
---UPD VariableDeclarationFragment@@backtrack=new Stack<>() @TO@ backtrack=new ArrayDeque<>(wcs.length) @AT@ 55658 @LENGTH@ 25
------UPD ClassInstanceCreation@@Stack<>[] @TO@ ArrayDeque<>[wcs.length] @AT@ 55670 @LENGTH@ 13
---------UPD ParameterizedType@@Stack<> @TO@ ArrayDeque<> @AT@ 55674 @LENGTH@ 7
------------UPD SimpleType@@Stack @TO@ ArrayDeque @AT@ 55674 @LENGTH@ 5
---------INS QualifiedName@@wcs.length @TO@ ClassInstanceCreation@@Stack<>[] @AT@ 55716 @LENGTH@ 10
------------INS SimpleName@@wcs @TO@ QualifiedName@@wcs.length @AT@ 55716 @LENGTH@ 3
------------INS SimpleName@@length @TO@ QualifiedName@@wcs.length @AT@ 55720 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]LumberjackEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]LumberjackEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1431 @LENGTH@ 2002
---DEL Modifier@@static @AT@ 1438 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:handler.close() @TO@ MethodDeclaration@@public, void, MethodName:marshal, Exchange exchange, Object object, OutputStream outputStream, Exception,  @AT@ 3483 @LENGTH@ 16
---INS MethodInvocation@@handler.close() @TO@ ExpressionStatement@@MethodInvocation:handler.close() @AT@ 3483 @LENGTH@ 15
------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.close() @AT@ 3483 @LENGTH@ 7
------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@handler.close() @AT@ 3491 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, WebSecurityConfiguration @TO@ [@Configuration, static]SubclassConfig, WebSecurityConfiguration @AT@ 14985 @LENGTH@ 107
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 14985 @LENGTH@ 40
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]SubclassConfig, WebSecurityConfiguration @AT@ 14988 @LENGTH@ 14


UPD VariableDeclarationStatement@@MapRecord<S,byte[],byte[]> binaryMap=mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next()); @TO@ MapRecord<S,byte[],byte[]> binaryMap=mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next()); @AT@ 4926 @LENGTH@ 248
---UPD VariableDeclarationFragment@@binaryMap=mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next()) @TO@ binaryMap=mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next()) @AT@ 4955 @LENGTH@ 218
------UPD MethodInvocation@@mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next()) @TO@ mapEntries(it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next()) @AT@ 4967 @LENGTH@ 206
---------UPD SimpleName@@MethodName:mapEntries:[it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next()] @TO@ MethodName:mapEntries:[it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next()] @AT@ 4967 @LENGTH@ 206
------------UPD LambdaExpression@@it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next() @TO@ it -> Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next() @AT@ 4983 @LENGTH@ 189
---------------UPD MethodInvocation@@Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(fieldSerializer,it.getValue())).entrySet().iterator().next() @TO@ Collections.singletonMap(StreamSerialization.serialize(fieldSerializer,it.getKey()),StreamSerialization.serialize(valueSerializer,it.getValue())).entrySet().iterator().next() @AT@ 4989 @LENGTH@ 183
------------------UPD MethodInvocation@@MethodName:singletonMap:[StreamSerialization.serialize(fieldSerializer,it.getKey()), StreamSerialization.serialize(fieldSerializer,it.getValue())] @TO@ MethodName:singletonMap:[StreamSerialization.serialize(fieldSerializer,it.getKey()), StreamSerialization.serialize(valueSerializer,it.getValue())] @AT@ 4989 @LENGTH@ 154
---------------------UPD MethodInvocation@@StreamSerialization.serialize(fieldSerializer,it.getValue()) @TO@ StreamSerialization.serialize(valueSerializer,it.getValue()) @AT@ 5081 @LENGTH@ 61
------------------------UPD SimpleName@@MethodName:serialize:[fieldSerializer, it.getValue()] @TO@ MethodName:serialize:[valueSerializer, it.getValue()] @AT@ 5101 @LENGTH@ 41
---------------------------UPD SimpleName@@fieldSerializer @TO@ valueSerializer @AT@ 5111 @LENGTH@ 15


INS MethodDeclaration@@public, QueueBuilder, MethodName:quorum,  @TO@ TypeDeclaration@@[public, final]QueueBuilder, AbstractBuilder @AT@ 6591 @LENGTH@ 82
---INS Modifier@@public @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:quorum,  @AT@ 6591 @LENGTH@ 6
---INS SimpleType@@QueueBuilder @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:quorum,  @AT@ 6598 @LENGTH@ 12
---INS SimpleName@@MethodName:quorum @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:quorum,  @AT@ 6611 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:withArgument("x-queue-type","quorum") @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:quorum,  @AT@ 6624 @LENGTH@ 46
------INS MethodInvocation@@withArgument("x-queue-type","quorum") @TO@ ReturnStatement@@MethodInvocation:withArgument("x-queue-type","quorum") @AT@ 6631 @LENGTH@ 38
---------INS SimpleName@@MethodName:withArgument:["x-queue-type", "quorum"] @TO@ MethodInvocation@@withArgument("x-queue-type","quorum") @AT@ 6631 @LENGTH@ 38
------------INS StringLiteral@@"x-queue-type" @TO@ SimpleName@@MethodName:withArgument:["x-queue-type", "quorum"] @AT@ 6644 @LENGTH@ 14
------------INS StringLiteral@@"quorum" @TO@ SimpleName@@MethodName:withArgument:["x-queue-type", "quorum"] @AT@ 6660 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]SjmsBatchEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]SjmsBatchEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1652 @LENGTH@ 13781
---DEL Modifier@@static @AT@ 1659 @LENGTH@ 6


DEL TryStatement@@try {  return this.saml.toXml(auth,request.getCredentials(),request.getLocalSpEntityId());} catch (MarshallingException|SignatureException|SecurityException e) {  throw new IllegalStateException(e);} @AT@ 2003 @LENGTH@ 237
---DEL CatchClause@@catch (MarshallingException|SignatureException|SecurityException e) {  throw new IllegalStateException(e);} @AT@ 2124 @LENGTH@ 116
------DEL SingleVariableDeclaration@@MarshallingException|SignatureException|SecurityException e @AT@ 2131 @LENGTH@ 63
---------DEL UnionType@@MarshallingException|SignatureException|SecurityException @AT@ 2131 @LENGTH@ 61
------------DEL SimpleType@@MarshallingException @AT@ 2131 @LENGTH@ 20
------------DEL SimpleType@@SignatureException @AT@ 2154 @LENGTH@ 18
------------DEL SimpleType@@SecurityException @AT@ 2175 @LENGTH@ 17
---------DEL SimpleName@@e @AT@ 2193 @LENGTH@ 1
------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException(e) @AT@ 2201 @LENGTH@ 35
---------DEL ClassInstanceCreation@@IllegalStateException[e] @AT@ 2207 @LENGTH@ 28
------------DEL New@@new @AT@ 2207 @LENGTH@ 3
------------DEL SimpleType@@IllegalStateException @AT@ 2211 @LENGTH@ 21
------------DEL SimpleName@@e @AT@ 2233 @LENGTH@ 1


UPD TypeDeclaration@@[public]PlainTextSignatureMethod, [OAuthSignatureMethod] @TO@ [@Deprecated, public]PlainTextSignatureMethod, [OAuthSignatureMethod] @AT@ 802 @LENGTH@ 2286
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]PlainTextSignatureMethod, [OAuthSignatureMethod] @AT@ 1023 @LENGTH@ 11


MOV FieldDeclaration@@private, DataStreamSource<String>, [dss=streamExecutionEnvironment.readTextFile("src/test/resources/testds.txt")] @TO@ TypeDeclaration@@[public]FlinkProducerTest, CamelTestSupport @AT@ 1962 @LENGTH@ 112


UPD MethodDeclaration@@default, EventAdminEndpointBuilder, MethodName:eventAdmin, String path,  @TO@ default, EventAdminEndpointBuilder, MethodName:eventadmin, String path,  @AT@ 18517 @LENGTH@ 402
---UPD SimpleName@@MethodName:eventAdmin @TO@ MethodName:eventadmin @AT@ 18551 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @TO@ TypeDeclaration@@[public]PropertyBindingSupportTest, ContextTestSupport @AT@ 9436 @LENGTH@ 480
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9436 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9443 @LENGTH@ 4
---INS SimpleName@@MethodName:testDoesNotExistClass @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9448 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9479 @LENGTH@ 9
---INS VariableDeclarationStatement@@Foo foo=new Foo(); @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9499 @LENGTH@ 20
------INS SimpleType@@Foo @TO@ VariableDeclarationStatement@@Foo foo=new Foo(); @AT@ 9499 @LENGTH@ 3
------INS VariableDeclarationFragment@@foo=new Foo() @TO@ VariableDeclarationStatement@@Foo foo=new Foo(); @AT@ 9503 @LENGTH@ 15
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=new Foo() @AT@ 9503 @LENGTH@ 3
---------INS ClassInstanceCreation@@Foo[] @TO@ VariableDeclarationFragment@@foo=new Foo() @AT@ 9509 @LENGTH@ 9
------------INS New@@new @TO@ ClassInstanceCreation@@Foo[] @AT@ 9509 @LENGTH@ 3
------------INS SimpleType@@Foo @TO@ ClassInstanceCreation@@Foo[] @AT@ 9513 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"name","James") @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9529 @LENGTH@ 67
------INS MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @TO@ ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 9529 @LENGTH@ 66
---------INS SimpleName@@Name:PropertyBindingSupport @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 9529 @LENGTH@ 22
---------INS SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 9552 @LENGTH@ 43
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 9565 @LENGTH@ 7
------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 9574 @LENGTH@ 3
------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 9579 @LENGTH@ 6
------------INS StringLiteral@@"James" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 9587 @LENGTH@ 7
---INS TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @TO@ MethodDeclaration@@public, void, MethodName:testDoesNotExistClass, Exception,  @AT@ 9605 @LENGTH@ 305
------INS ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist") @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @AT@ 9623 @LENGTH@ 110
---------INS MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist") @TO@ ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist") @AT@ 9623 @LENGTH@ 109
------------INS SimpleName@@Name:PropertyBindingSupport @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist") @AT@ 9623 @LENGTH@ 22
------------INS SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.DoesNotExist"] @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist") @AT@ 9646 @LENGTH@ 86
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.DoesNotExist"] @AT@ 9659 @LENGTH@ 7
---------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.DoesNotExist"] @AT@ 9668 @LENGTH@ 3
---------------INS StringLiteral@@"bar.work" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.DoesNotExist"] @AT@ 9673 @LENGTH@ 10
---------------INS StringLiteral@@"#class:org.apache.camel.support.DoesNotExist" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.DoesNotExist"] @AT@ 9685 @LENGTH@ 46
------INS ExpressionStatement@@MethodInvocation:fail("Should throw exception") @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @AT@ 9746 @LENGTH@ 31
---------INS MethodInvocation@@fail("Should throw exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should throw exception") @AT@ 9746 @LENGTH@ 30
------------INS SimpleName@@MethodName:fail:["Should throw exception"] @TO@ MethodInvocation@@fail("Should throw exception") @AT@ 9746 @LENGTH@ 30
---------------INS StringLiteral@@"Should throw exception" @TO@ SimpleName@@MethodName:fail:["Should throw exception"] @AT@ 9751 @LENGTH@ 24
------INS CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.DoesNotExist");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @AT@ 9788 @LENGTH@ 122
---------INS SingleVariableDeclaration@@PropertyBindingException e @TO@ CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @AT@ 9795 @LENGTH@ 26
------------INS SimpleType@@PropertyBindingException @TO@ SingleVariableDeclaration@@PropertyBindingException e @AT@ 9795 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@PropertyBindingException e @AT@ 9820 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClassNotFoundException.class,e.getCause()) @TO@ CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(ClassNotFoundException.class,e.getCause());} @AT@ 9837 @LENGTH@ 63
------------INS MethodInvocation@@assertIsInstanceOf(ClassNotFoundException.class,e.getCause()) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(ClassNotFoundException.class,e.getCause()) @AT@ 9837 @LENGTH@ 62
---------------INS SimpleName@@MethodName:assertIsInstanceOf:[ClassNotFoundException.class, e.getCause()] @TO@ MethodInvocation@@assertIsInstanceOf(ClassNotFoundException.class,e.getCause()) @AT@ 9837 @LENGTH@ 62
------------------INS TypeLiteral@@ClassNotFoundException.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClassNotFoundException.class, e.getCause()] @AT@ 9856 @LENGTH@ 28
------------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:assertIsInstanceOf:[ClassNotFoundException.class, e.getCause()] @AT@ 9886 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 9886 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 9888 @LENGTH@ 10


UPD TypeDeclaration@@[public, static]AdvancedSolrEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedSolrEndpointBuilder, [EndpointProducerBuilder] @AT@ 10164 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 10171 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]BadClientCredentialsException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]BadClientCredentialsException, ClientAuthenticationException @AT@ 181 @LENGTH@ 367
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]BadClientCredentialsException, ClientAuthenticationException @AT@ 387 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]FlinkEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]FlinkEndpointBuilder, [EndpointProducerBuilder] @AT@ 1420 @LENGTH@ 4742
---DEL Modifier@@static @AT@ 1427 @LENGTH@ 6


INS MethodDeclaration@@void, MethodName:optionalMatchThenDelete,  @TO@ TypeDeclaration@@[@Nested]MultipleMatches,  @AT@ 15844 @LENGTH@ 320
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:optionalMatchThenDelete,  @AT@ 15839 @LENGTH@ 4
---INS SimpleName@@MethodName:optionalMatchThenDelete @TO@ MethodDeclaration@@void, MethodName:optionalMatchThenDelete,  @AT@ 15844 @LENGTH@ 23
---INS VariableDeclarationStatement@@Statement statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build(); @TO@ MethodDeclaration@@void, MethodName:optionalMatchThenDelete,  @AT@ 15875 @LENGTH@ 153
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build(); @AT@ 15875 @LENGTH@ 9
------INS VariableDeclarationFragment@@statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @TO@ VariableDeclarationStatement@@Statement statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build(); @AT@ 15885 @LENGTH@ 142
---------INS SimpleName@@statement @TO@ VariableDeclarationFragment@@statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15885 @LENGTH@ 9
---------INS MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @TO@ VariableDeclarationFragment@@statement=Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15897 @LENGTH@ 130
------------INS MethodInvocation@@MethodName:delete:[userNode, bikeNode] @TO@ MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15897 @LENGTH@ 117
---------------INS SimpleName@@userNode @TO@ MethodInvocation@@MethodName:delete:[userNode, bikeNode] @AT@ 15995 @LENGTH@ 8
---------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:delete:[userNode, bikeNode] @AT@ 16005 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:optionalMatch:[userNode, Cypher.node("U").named("o")] @TO@ MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15897 @LENGTH@ 85
---------------INS SimpleName@@userNode @TO@ MethodInvocation@@MethodName:optionalMatch:[userNode, Cypher.node("U").named("o")] @AT@ 15944 @LENGTH@ 8
---------------INS MethodInvocation@@Cypher.node("U").named("o") @TO@ MethodInvocation@@MethodName:optionalMatch:[userNode, Cypher.node("U").named("o")] @AT@ 15954 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:node:["U"] @TO@ MethodInvocation@@Cypher.node("U").named("o") @AT@ 15954 @LENGTH@ 16
---------------------INS StringLiteral@@"U" @TO@ MethodInvocation@@MethodName:node:["U"] @AT@ 15966 @LENGTH@ 3
------------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.node("U").named("o") @AT@ 15954 @LENGTH@ 6
------------------INS SimpleName@@MethodName:named:["o"] @TO@ MethodInvocation@@Cypher.node("U").named("o") @AT@ 15971 @LENGTH@ 10
---------------------INS StringLiteral@@"o" @TO@ SimpleName@@MethodName:named:["o"] @AT@ 15977 @LENGTH@ 3
------------INS MethodInvocation@@MethodName:match:[bikeNode] @TO@ MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15897 @LENGTH@ 27
---------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:match:[bikeNode] @AT@ 15915 @LENGTH@ 8
------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 15897 @LENGTH@ 6
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@Cypher.match(bikeNode).optionalMatch(userNode,Cypher.node("U").named("o")).delete(userNode,bikeNode).build() @AT@ 16020 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b") @TO@ MethodDeclaration@@void, MethodName:optionalMatchThenDelete,  @AT@ 16033 @LENGTH@ 127
------INS MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b") @AT@ 16033 @LENGTH@ 126
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b") @AT@ 16033 @LENGTH@ 44
------------INS MethodInvocation@@cypherRenderer.render(statement) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @AT@ 16044 @LENGTH@ 32
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 16044 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[statement] @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 16059 @LENGTH@ 17
------------------INS SimpleName@@statement @TO@ SimpleName@@MethodName:render:[statement] @AT@ 16066 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b") @AT@ 16083 @LENGTH@ 76
------------INS StringLiteral@@"MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (b:`Bike`) OPTIONAL MATCH (u:`User`), (o:`U`) DELETE u, b"] @AT@ 16093 @LENGTH@ 65


UPD TypeDeclaration@@[public]OAuth2MethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @TO@ [@Deprecated, public]OAuth2MethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @AT@ 1062 @LENGTH@ 550
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2MethodSecurityExpressionHandler, DefaultMethodSecurityExpressionHandler @AT@ 1239 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthCodec, URLCodec @TO@ [@Deprecated, public]OAuthCodec, URLCodec @AT@ 913 @LENGTH@ 1347
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthCodec, URLCodec @AT@ 1134 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2173 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2173 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2173 @LENGTH@ 86
---------INS MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 2184 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 42
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 2210 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2184 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2238 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 2247 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]DefaultIndexOperationsIntegrationTests,  @AT@ 6123 @LENGTH@ 671
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6123 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6130 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6135 @LENGTH@ 56
---INS VariableDeclarationStatement@@BsonDocument partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }"); @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6199 @LENGTH@ 164
------INS SimpleType@@BsonDocument @TO@ VariableDeclarationStatement@@BsonDocument partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }"); @AT@ 6199 @LENGTH@ 12
------INS VariableDeclarationFragment@@partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @TO@ VariableDeclarationStatement@@BsonDocument partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }"); @AT@ 6212 @LENGTH@ 150
---------INS SimpleName@@partialFilter @TO@ VariableDeclarationFragment@@partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @AT@ 6212 @LENGTH@ 13
---------INS MethodInvocation@@BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @TO@ VariableDeclarationFragment@@partialFilter=BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @AT@ 6228 @LENGTH@ 134
------------INS SimpleName@@Name:BsonDocument @TO@ MethodInvocation@@BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @AT@ 6228 @LENGTH@ 12
------------INS SimpleName@@MethodName:parse:["{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }"] @TO@ MethodInvocation@@BsonDocument.parse("{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }") @AT@ 6241 @LENGTH@ 121
---------------INS StringLiteral@@"{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }" @TO@ SimpleName@@MethodName:parse:["{ \"the-ref\" : { \"$ref\" : \"other-collection\", \"$id\" : { \"$oid\" : \"59ce08baf264b906810fe8c5\"} } }"] @AT@ 6252 @LENGTH@ 109
---INS VariableDeclarationStatement@@IndexOptions indexOptions=new IndexOptions(); @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6366 @LENGTH@ 47
------INS SimpleType@@IndexOptions @TO@ VariableDeclarationStatement@@IndexOptions indexOptions=new IndexOptions(); @AT@ 6366 @LENGTH@ 12
------INS VariableDeclarationFragment@@indexOptions=new IndexOptions() @TO@ VariableDeclarationStatement@@IndexOptions indexOptions=new IndexOptions(); @AT@ 6379 @LENGTH@ 33
---------INS SimpleName@@indexOptions @TO@ VariableDeclarationFragment@@indexOptions=new IndexOptions() @AT@ 6379 @LENGTH@ 12
---------INS ClassInstanceCreation@@IndexOptions[] @TO@ VariableDeclarationFragment@@indexOptions=new IndexOptions() @AT@ 6394 @LENGTH@ 18
------------INS New@@new @TO@ ClassInstanceCreation@@IndexOptions[] @AT@ 6394 @LENGTH@ 3
------------INS SimpleType@@IndexOptions @TO@ ClassInstanceCreation@@IndexOptions[] @AT@ 6398 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:indexOptions.name("partial-with-dbref") @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6416 @LENGTH@ 40
------INS MethodInvocation@@indexOptions.name("partial-with-dbref") @TO@ ExpressionStatement@@MethodInvocation:indexOptions.name("partial-with-dbref") @AT@ 6416 @LENGTH@ 39
---------INS SimpleName@@Name:indexOptions @TO@ MethodInvocation@@indexOptions.name("partial-with-dbref") @AT@ 6416 @LENGTH@ 12
---------INS SimpleName@@MethodName:name:["partial-with-dbref"] @TO@ MethodInvocation@@indexOptions.name("partial-with-dbref") @AT@ 6429 @LENGTH@ 26
------------INS StringLiteral@@"partial-with-dbref" @TO@ SimpleName@@MethodName:name:["partial-with-dbref"] @AT@ 6434 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:indexOptions.partialFilterExpression(partialFilter) @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6459 @LENGTH@ 52
------INS MethodInvocation@@indexOptions.partialFilterExpression(partialFilter) @TO@ ExpressionStatement@@MethodInvocation:indexOptions.partialFilterExpression(partialFilter) @AT@ 6459 @LENGTH@ 51
---------INS SimpleName@@Name:indexOptions @TO@ MethodInvocation@@indexOptions.partialFilterExpression(partialFilter) @AT@ 6459 @LENGTH@ 12
---------INS SimpleName@@MethodName:partialFilterExpression:[partialFilter] @TO@ MethodInvocation@@indexOptions.partialFilterExpression(partialFilter) @AT@ 6472 @LENGTH@ 38
------------INS SimpleName@@partialFilter @TO@ SimpleName@@MethodName:partialFilterExpression:[partialFilter] @AT@ 6496 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:collection.createIndex(BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"),indexOptions) @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6515 @LENGTH@ 91
------INS MethodInvocation@@collection.createIndex(BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"),indexOptions) @TO@ ExpressionStatement@@MethodInvocation:collection.createIndex(BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"),indexOptions) @AT@ 6515 @LENGTH@ 90
---------INS SimpleName@@Name:collection @TO@ MethodInvocation@@collection.createIndex(BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"),indexOptions) @AT@ 6515 @LENGTH@ 10
---------INS SimpleName@@MethodName:createIndex:[BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"), indexOptions] @TO@ MethodInvocation@@collection.createIndex(BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"),indexOptions) @AT@ 6526 @LENGTH@ 79
------------INS MethodInvocation@@BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}") @TO@ SimpleName@@MethodName:createIndex:[BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"), indexOptions] @AT@ 6538 @LENGTH@ 52
---------------INS SimpleName@@Name:BsonDocument @TO@ MethodInvocation@@BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}") @AT@ 6538 @LENGTH@ 12
---------------INS SimpleName@@MethodName:parse:["{ \"key-1\" : 1, \"key-2\": 1}"] @TO@ MethodInvocation@@BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}") @AT@ 6551 @LENGTH@ 39
------------------INS StringLiteral@@"{ \"key-1\" : 1, \"key-2\": 1}" @TO@ SimpleName@@MethodName:parse:["{ \"key-1\" : 1, \"key-2\": 1}"] @AT@ 6557 @LENGTH@ 32
------------INS SimpleName@@indexOptions @TO@ SimpleName@@MethodName:createIndex:[BsonDocument.parse("{ \"key-1\" : 1, \"key-2\": 1}"), indexOptions] @AT@ 6592 @LENGTH@ 12
---INS VariableDeclarationStatement@@IndexInfo info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref"); @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6610 @LENGTH@ 87
------INS SimpleType@@IndexInfo @TO@ VariableDeclarationStatement@@IndexInfo info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref"); @AT@ 6610 @LENGTH@ 9
------INS VariableDeclarationFragment@@info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref") @TO@ VariableDeclarationStatement@@IndexInfo info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref"); @AT@ 6620 @LENGTH@ 76
---------INS SimpleName@@info @TO@ VariableDeclarationFragment@@info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref") @AT@ 6620 @LENGTH@ 4
---------INS MethodInvocation@@findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref") @TO@ VariableDeclarationFragment@@info=findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref") @AT@ 6627 @LENGTH@ 69
------------INS SimpleName@@MethodName:findAndReturnIndexInfo:[indexOps.getIndexInfo(), "partial-with-dbref"] @TO@ MethodInvocation@@findAndReturnIndexInfo(indexOps.getIndexInfo(),"partial-with-dbref") @AT@ 6627 @LENGTH@ 69
---------------INS MethodInvocation@@indexOps.getIndexInfo() @TO@ SimpleName@@MethodName:findAndReturnIndexInfo:[indexOps.getIndexInfo(), "partial-with-dbref"] @AT@ 6650 @LENGTH@ 23
------------------INS SimpleName@@Name:indexOps @TO@ MethodInvocation@@indexOps.getIndexInfo() @AT@ 6650 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getIndexInfo:[] @TO@ MethodInvocation@@indexOps.getIndexInfo() @AT@ 6659 @LENGTH@ 14
---------------INS StringLiteral@@"partial-with-dbref" @TO@ SimpleName@@MethodName:findAndReturnIndexInfo:[indexOps.getIndexInfo(), "partial-with-dbref"] @AT@ 6675 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertThat(BsonDocument.parse(info.getPartialFilterExpression())).isEqualTo(partialFilter) @TO@ MethodDeclaration@@public, void, MethodName:shouldReadIndexWithPartialFilterContainingDbRefCorrectly,  @AT@ 6700 @LENGTH@ 91
------INS MethodInvocation@@assertThat(BsonDocument.parse(info.getPartialFilterExpression())).isEqualTo(partialFilter) @TO@ ExpressionStatement@@MethodInvocation:assertThat(BsonDocument.parse(info.getPartialFilterExpression())).isEqualTo(partialFilter) @AT@ 6700 @LENGTH@ 90
---------INS MethodInvocation@@MethodName:assertThat:[BsonDocument.parse(info.getPartialFilterExpression())] @TO@ MethodInvocation@@assertThat(BsonDocument.parse(info.getPartialFilterExpression())).isEqualTo(partialFilter) @AT@ 6700 @LENGTH@ 65
------------INS MethodInvocation@@BsonDocument.parse(info.getPartialFilterExpression()) @TO@ MethodInvocation@@MethodName:assertThat:[BsonDocument.parse(info.getPartialFilterExpression())] @AT@ 6711 @LENGTH@ 53
---------------INS SimpleName@@Name:BsonDocument @TO@ MethodInvocation@@BsonDocument.parse(info.getPartialFilterExpression()) @AT@ 6711 @LENGTH@ 12
---------------INS SimpleName@@MethodName:parse:[info.getPartialFilterExpression()] @TO@ MethodInvocation@@BsonDocument.parse(info.getPartialFilterExpression()) @AT@ 6724 @LENGTH@ 40
------------------INS MethodInvocation@@info.getPartialFilterExpression() @TO@ SimpleName@@MethodName:parse:[info.getPartialFilterExpression()] @AT@ 6730 @LENGTH@ 33
---------------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getPartialFilterExpression() @AT@ 6730 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getPartialFilterExpression:[] @TO@ MethodInvocation@@info.getPartialFilterExpression() @AT@ 6735 @LENGTH@ 28
---------INS SimpleName@@MethodName:isEqualTo:[partialFilter] @TO@ MethodInvocation@@assertThat(BsonDocument.parse(info.getPartialFilterExpression())).isEqualTo(partialFilter) @AT@ 6766 @LENGTH@ 24
------------INS SimpleName@@partialFilter @TO@ SimpleName@@MethodName:isEqualTo:[partialFilter] @AT@ 6776 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]SpringLdapEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SpringLdapEndpointBuilder, [EndpointProducerBuilder] @AT@ 1460 @LENGTH@ 1656
---DEL Modifier@@static @AT@ 1467 @LENGTH@ 6


UPD EnhancedForStatement@@for (Object o : FileUtils.readLines(pom)) {  String line=o.toString();  if (line.contains("<parent>")) {    parent=true;    continue;  }  if (line.contains("</parent>")) {    parent=false;    continue;  }  if (parent) {    String version=between(line,"<version>","</version>");    if (version != null) {      model.setVersion(version);    }    continue;  }  String groupId=between(line,"<groupId>","</groupId>");  String artifactId=between(line,"<artifactId>","</artifactId>");  String description=between(line,"<description>","</description>");  if (groupId != null && model.getGroupId() == null) {    model.setGroupId(groupId);  }  if (artifactId != null && model.getArtifactId() == null) {    model.setArtifactId(artifactId);  }  if (description != null && model.getDescription() == null) {    model.setDescription(description);  }} @TO@ for (Object o : FileUtils.readLines(pom,StandardCharsets.UTF_8)) {  String line=o.toString();  if (line.contains("<parent>")) {    parent=true;    continue;  }  if (line.contains("</parent>")) {    parent=false;    continue;  }  if (parent) {    String version=between(line,"<version>","</version>");    if (version != null) {      model.setVersion(version);    }    continue;  }  String groupId=between(line,"<groupId>","</groupId>");  String artifactId=between(line,"<artifactId>","</artifactId>");  String description=between(line,"<description>","</description>");  if (groupId != null && model.getGroupId() == null) {    model.setGroupId(groupId);  }  if (artifactId != null && model.getArtifactId() == null) {    model.setArtifactId(artifactId);  }  if (description != null && model.getDescription() == null) {    model.setDescription(description);  }} @AT@ 4320 @LENGTH@ 1428
---UPD MethodInvocation@@FileUtils.readLines(pom) @TO@ FileUtils.readLines(pom,StandardCharsets.UTF_8) @AT@ 4336 @LENGTH@ 24
------UPD SimpleName@@MethodName:readLines:[pom] @TO@ MethodName:readLines:[pom, StandardCharsets.UTF_8] @AT@ 4346 @LENGTH@ 14
---------INS QualifiedName@@StandardCharsets.UTF_8 @TO@ SimpleName@@MethodName:readLines:[pom] @AT@ 4403 @LENGTH@ 22
------------INS SimpleName@@StandardCharsets @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4403 @LENGTH@ 16
------------INS SimpleName@@UTF_8 @TO@ QualifiedName@@StandardCharsets.UTF_8 @AT@ 4420 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]SSLSecurityProtocol,  @TO@ [static]SSLSecurityProtocol,  @AT@ 50866 @LENGTH@ 86
---DEL Modifier@@public @AT@ 50866 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]GeoCoderEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GeoCoderEndpointBuilder, [EndpointProducerBuilder] @AT@ 1464 @LENGTH@ 5572
---DEL Modifier@@static @AT@ 1471 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).build() @TO@ MethodInvocation:new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).ignoreLibraryMismatch("org.scala-lang.modules:scala-parser-combinators_2.11").ignoreLibraryMismatch("org.scala-lang.modules:scala-xml_2.11").build() @AT@ 1442 @LENGTH@ 120
---UPD MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).build() @TO@ new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).ignoreLibraryMismatch("org.scala-lang.modules:scala-parser-combinators_2.11").ignoreLibraryMismatch("org.scala-lang.modules:scala-xml_2.11").build() @AT@ 1449 @LENGTH@ 112
------INS MethodInvocation@@MethodName:ignoreLibraryMismatch:["org.scala-lang.modules:scala-xml_2.11"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).build() @AT@ 1449 @LENGTH@ 262
---------INS StringLiteral@@"org.scala-lang.modules:scala-xml_2.11" @TO@ MethodInvocation@@MethodName:ignoreLibraryMismatch:["org.scala-lang.modules:scala-xml_2.11"] @AT@ 1671 @LENGTH@ 39
------INS MethodInvocation@@MethodName:ignoreLibraryMismatch:["org.scala-lang.modules:scala-parser-combinators_2.11"] @TO@ MethodInvocation@@new ITestConfigBuilder().module(inferModuleName(CamelSparkTest.class)).build() @AT@ 1449 @LENGTH@ 182
---------INS StringLiteral@@"org.scala-lang.modules:scala-parser-combinators_2.11" @TO@ MethodInvocation@@MethodName:ignoreLibraryMismatch:["org.scala-lang.modules:scala-parser-combinators_2.11"] @AT@ 1576 @LENGTH@ 54


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @AT@ 2109 @LENGTH@ 393
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().getBody(MDM_T02.class);
  }
}
).to("mock:result") @AT@ 2109 @LENGTH@ 392
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 2109 @LENGTH@ 98
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2114 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2114 @LENGTH@ 25


UPD MethodDeclaration@@default, GoogleBigQueryEndpointBuilder, MethodName:googleBigQuery, String path,  @TO@ default, GoogleBigQueryEndpointBuilder, MethodName:googleBigquery, String path,  @AT@ 6034 @LENGTH@ 435
---UPD SimpleName@@MethodName:googleBigQuery @TO@ MethodName:googleBigquery @AT@ 6072 @LENGTH@ 14


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1347 @LENGTH@ 426
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1354 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1359 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]GitHubType,  @TO@ [static]GitHubType,  @AT@ 23289 @LENGTH@ 173
---DEL Modifier@@public @AT@ 23289 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, public]ResourceServerConfiguration, WebSecurityConfigurerAdapter[Ordered] @TO@ [@Configuration, @Deprecated, public]ResourceServerConfiguration, WebSecurityConfigurerAdapter[Ordered] @AT@ 2057 @LENGTH@ 4516
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration, public]ResourceServerConfiguration, WebSecurityConfigurerAdapter[Ordered] @AT@ 2250 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]BonitaOperation,  @TO@ [static]BonitaOperation,  @AT@ 6178 @LENGTH@ 61
---DEL Modifier@@public @AT@ 6178 @LENGTH@ 6


UPD FieldDeclaration@@RedisTemplate<K,V>, [template] @TO@ final, RedisTemplate<K,V>, [template] @AT@ 2337 @LENGTH@ 29
---INS Modifier@@final @TO@ FieldDeclaration@@RedisTemplate<K,V>, [template] @AT@ 2363 @LENGTH@ 5


UPD MethodDeclaration@@default, DdbEndpointBuilder, MethodName:ddb, String path,  @TO@ default, DdbEndpointBuilder, MethodName:awsDdb, String path,  @AT@ 11952 @LENGTH@ 350
---UPD SimpleName@@MethodName:ddb @TO@ MethodName:awsDdb @AT@ 11979 @LENGTH@ 3


UPD MethodDeclaration@@default, ClassEndpointBuilder, MethodName:classEndpoint, String path,  @TO@ default, ClassEndpointBuilder, MethodName:clas, String path,  @AT@ 6422 @LENGTH@ 370
---UPD SimpleName@@MethodName:classEndpoint @TO@ MethodName:clas @AT@ 6451 @LENGTH@ 13


UPD EnumDeclaration@@[public, static]ECSOperations,  @TO@ [static]ECSOperations,  @AT@ 4393 @LENGTH@ 109
---DEL Modifier@@public @AT@ 4393 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedMQEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMQEndpointBuilder, [EndpointProducerBuilder] @AT@ 2247 @LENGTH@ 2034
---DEL Modifier@@static @AT@ 2254 @LENGTH@ 6


UPD MethodDeclaration@@default, S3EndpointBuilder, MethodName:s3, String path,  @TO@ default, S3EndpointBuilder, MethodName:awsS3, String path,  @AT@ 81995 @LENGTH@ 342
---UPD SimpleName@@MethodName:s3 @TO@ MethodName:awsS3 @AT@ 82021 @LENGTH@ 2


UPD TypeDeclaration@@[public, static]AdvancedMockEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMockEndpointBuilder, [EndpointProducerBuilder] @AT@ 2009 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 2016 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidGrantException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidGrantException, ClientAuthenticationException @AT@ 116 @LENGTH@ 323
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidGrantException, ClientAuthenticationException @AT@ 322 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]InMemoryOAuth2AuthorizedClientServiceTests,  @AT@ 2724 @LENGTH@ 278
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException,  @AT@ 2724 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException,  @AT@ 2731 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException,  @AT@ 2736 @LENGTH@ 66
---INS ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:constructorWhenAuthorizedClientsIsNullThenIllegalArgumentException,  @AT@ 2809 @LENGTH@ 190
------INS MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @TO@ ExpressionStatement@@MethodInvocation:assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @AT@ 2809 @LENGTH@ 189
---------INS MethodInvocation@@MethodName:isThrownBy:[() -> this.authorizedClientService.setAuthorizedClients(null)] @TO@ MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @AT@ 2809 @LENGTH@ 136
------------INS LambdaExpression@@() -> this.authorizedClientService.setAuthorizedClients(null) @TO@ MethodInvocation@@MethodName:isThrownBy:[() -> this.authorizedClientService.setAuthorizedClients(null)] @AT@ 2883 @LENGTH@ 61
---------------INS MethodInvocation@@this.authorizedClientService.setAuthorizedClients(null) @TO@ LambdaExpression@@() -> this.authorizedClientService.setAuthorizedClients(null) @AT@ 2889 @LENGTH@ 55
------------------INS FieldAccess@@this.authorizedClientService @TO@ MethodInvocation@@this.authorizedClientService.setAuthorizedClients(null) @AT@ 2889 @LENGTH@ 28
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientService @AT@ 2889 @LENGTH@ 4
---------------------INS SimpleName@@authorizedClientService @TO@ FieldAccess@@this.authorizedClientService @AT@ 2894 @LENGTH@ 23
------------------INS SimpleName@@MethodName:setAuthorizedClients:[null] @TO@ MethodInvocation@@this.authorizedClientService.setAuthorizedClients(null) @AT@ 2918 @LENGTH@ 26
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setAuthorizedClients:[null] @AT@ 2939 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:assertThatExceptionOfType:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @AT@ 2809 @LENGTH@ 57
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:assertThatExceptionOfType:[IllegalArgumentException.class] @AT@ 2835 @LENGTH@ 30
---------INS SimpleName@@MethodName:withMessage:["authorizedClients cannot be null"] @TO@ MethodInvocation@@assertThatExceptionOfType(IllegalArgumentException.class).isThrownBy(() -> this.authorizedClientService.setAuthorizedClients(null)).withMessage("authorizedClients cannot be null") @AT@ 2951 @LENGTH@ 47
------------INS StringLiteral@@"authorizedClients cannot be null" @TO@ SimpleName@@MethodName:withMessage:["authorizedClients cannot be null"] @AT@ 2963 @LENGTH@ 34


UPD TypeDeclaration@@[public, static]KMSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]KMSEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context withinContext, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context withinContext, SemanticException,  @AT@ 1125 @LENGTH@ 138
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1132 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1137 @LENGTH@ 28


UPD MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @TO@ public, boolean, MethodName:connect, RemoteFileConfiguration configuration, Exchange exchange, GenericFileOperationFailedException,  @AT@ 3210 @LENGTH@ 445
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @AT@ 3272 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3272 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3281 @LENGTH@ 8
---UPD TryStatement@@try {  return doConnect(configuration);} catch (GenericFileOperationFailedException e) {  clientActivityListener.onGeneralError(endpoint.getConfiguration().remoteServerInformation(),e.getMessage());  throw e;} @TO@ try {  return doConnect(configuration,exchange);} catch (GenericFileOperationFailedException e) {  clientActivityListener.onGeneralError(endpoint.getConfiguration().remoteServerInformation(),e.getMessage());  throw e;} @AT@ 3388 @LENGTH@ 261
------UPD ReturnStatement@@MethodInvocation:doConnect(configuration) @TO@ MethodInvocation:doConnect(configuration,exchange) @AT@ 3406 @LENGTH@ 32
---------UPD MethodInvocation@@doConnect(configuration) @TO@ doConnect(configuration,exchange) @AT@ 3413 @LENGTH@ 24
------------UPD SimpleName@@MethodName:doConnect:[configuration] @TO@ MethodName:doConnect:[configuration, exchange] @AT@ 3413 @LENGTH@ 24
---------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:doConnect:[configuration] @AT@ 3457 @LENGTH@ 8


UPD MethodDeclaration@@private, void, MethodName:createFunctionReplLogTask, List<Task<? extends Serializable>> functionTasks, String functionName,  @TO@ private, void, MethodName:createFunctionReplLogTask, List<Task<?>> functionTasks, String functionName,  @AT@ 2944 @LENGTH@ 410
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> functionTasks @TO@ List<Task<?>> functionTasks @AT@ 2983 @LENGTH@ 48
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2983 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2988 @LENGTH@ 28


UPD TypeDeclaration@@[public]DelegatingJwtClaimsSetVerifier, [JwtClaimsSetVerifier] @TO@ [@Deprecated, public]DelegatingJwtClaimsSetVerifier, [JwtClaimsSetVerifier] @AT@ 1137 @LENGTH@ 662
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DelegatingJwtClaimsSetVerifier, [JwtClaimsSetVerifier] @AT@ 1315 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:factoryBean.setTransportFilters(Arrays.asList(mockGatewayTransportFilter)) @TO@ MethodInvocation:factoryBean.setTransportFilters(Collections.singletonList(mockGatewayTransportFilter)) @AT@ 2374 @LENGTH@ 75
---UPD MethodInvocation@@factoryBean.setTransportFilters(Arrays.asList(mockGatewayTransportFilter)) @TO@ factoryBean.setTransportFilters(Collections.singletonList(mockGatewayTransportFilter)) @AT@ 2374 @LENGTH@ 74
------UPD SimpleName@@MethodName:setTransportFilters:[Arrays.asList(mockGatewayTransportFilter)] @TO@ MethodName:setTransportFilters:[Collections.singletonList(mockGatewayTransportFilter)] @AT@ 2386 @LENGTH@ 62
---------UPD MethodInvocation@@Arrays.asList(mockGatewayTransportFilter) @TO@ Collections.singletonList(mockGatewayTransportFilter) @AT@ 2406 @LENGTH@ 41
------------UPD SimpleName@@Name:Arrays @TO@ Name:Collections @AT@ 2406 @LENGTH@ 6
------------UPD SimpleName@@MethodName:asList:[mockGatewayTransportFilter] @TO@ MethodName:singletonList:[mockGatewayTransportFilter] @AT@ 2413 @LENGTH@ 34


INS MethodDeclaration@@public, void, MethodName:clear,  @TO@ TypeDeclaration@@[public]FixedSizedObjectPool, [Pool<T>] @AT@ 6669 @LENGTH@ 114
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:clear,  @AT@ 6669 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:clear,  @AT@ 6676 @LENGTH@ 4
---INS SimpleName@@MethodName:clear @TO@ MethodDeclaration@@public, void, MethodName:clear,  @AT@ 6681 @LENGTH@ 5
---INS VariableDeclarationStatement@@T result=takeImpl(); @TO@ MethodDeclaration@@public, void, MethodName:clear,  @AT@ 6695 @LENGTH@ 22
------INS SimpleType@@T @TO@ VariableDeclarationStatement@@T result=takeImpl(); @AT@ 6695 @LENGTH@ 1
------INS VariableDeclarationFragment@@result=takeImpl() @TO@ VariableDeclarationStatement@@T result=takeImpl(); @AT@ 6697 @LENGTH@ 19
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=takeImpl() @AT@ 6697 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:takeImpl:[] @TO@ VariableDeclarationFragment@@result=takeImpl() @AT@ 6706 @LENGTH@ 10
---INS WhileStatement@@while (result != null) {  result=takeImpl();} @TO@ MethodDeclaration@@public, void, MethodName:clear,  @AT@ 6722 @LENGTH@ 57
------INS InfixExpression@@result != null @TO@ WhileStatement@@while (result != null) {  result=takeImpl();} @AT@ 6729 @LENGTH@ 14
---------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 6729 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 6735 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 6739 @LENGTH@ 4
------INS Block@@WhileBody:{  result=takeImpl();} @TO@ WhileStatement@@while (result != null) {  result=takeImpl();} @AT@ 6745 @LENGTH@ 34
---------INS ExpressionStatement@@Assignment:result=takeImpl() @TO@ Block@@WhileBody:{  result=takeImpl();} @AT@ 6753 @LENGTH@ 20
------------INS Assignment@@result=takeImpl() @TO@ ExpressionStatement@@Assignment:result=takeImpl() @AT@ 6753 @LENGTH@ 19
---------------INS SimpleName@@result @TO@ Assignment@@result=takeImpl() @AT@ 6753 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@result=takeImpl() @AT@ 6759 @LENGTH@ 1
---------------INS MethodInvocation@@MethodName:takeImpl:[] @TO@ Assignment@@result=takeImpl() @AT@ 6762 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:hlp.put("anInstant",Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))) @TO@ Initializer@@Initializer @AT@ 3811 @LENGTH@ 103
---INS MethodInvocation@@hlp.put("anInstant",Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))) @TO@ ExpressionStatement@@MethodInvocation:hlp.put("anInstant",Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))) @AT@ 3811 @LENGTH@ 102
------INS SimpleName@@Name:hlp @TO@ MethodInvocation@@hlp.put("anInstant",Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))) @AT@ 3811 @LENGTH@ 3
------INS SimpleName@@MethodName:put:["anInstant", Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))] @TO@ MethodInvocation@@hlp.put("anInstant",Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))) @AT@ 3815 @LENGTH@ 98
---------INS StringLiteral@@"anInstant" @TO@ SimpleName@@MethodName:put:["anInstant", Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))] @AT@ 3819 @LENGTH@ 11
---------INS MethodInvocation@@Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC)) @TO@ SimpleName@@MethodName:put:["anInstant", Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC))] @AT@ 3832 @LENGTH@ 80
------------INS SimpleName@@Name:Instant @TO@ MethodInvocation@@Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC)) @AT@ 3832 @LENGTH@ 7
------------INS SimpleName@@MethodName:from:[LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC)] @TO@ MethodInvocation@@Instant.from(LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC)) @AT@ 3840 @LENGTH@ 72
---------------INS MethodInvocation@@LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC) @TO@ SimpleName@@MethodName:from:[LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC)] @AT@ 3845 @LENGTH@ 66
------------------INS MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @TO@ MethodInvocation@@LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC) @AT@ 3845 @LENGTH@ 41
---------------------INS NumberLiteral@@2019 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3862 @LENGTH@ 4
---------------------INS NumberLiteral@@9 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3868 @LENGTH@ 1
---------------------INS NumberLiteral@@26 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3871 @LENGTH@ 2
---------------------INS NumberLiteral@@20 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3875 @LENGTH@ 2
---------------------INS NumberLiteral@@34 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3879 @LENGTH@ 2
---------------------INS NumberLiteral@@23 @TO@ MethodInvocation@@MethodName:of:[2019, 9, 26, 20, 34, 23] @AT@ 3883 @LENGTH@ 2
------------------INS SimpleName@@Name:LocalDateTime @TO@ MethodInvocation@@LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC) @AT@ 3845 @LENGTH@ 13
------------------INS SimpleName@@MethodName:atOffset:[ZoneOffset.UTC] @TO@ MethodInvocation@@LocalDateTime.of(2019,9,26,20,34,23).atOffset(ZoneOffset.UTC) @AT@ 3887 @LENGTH@ 24
---------------------INS QualifiedName@@ZoneOffset.UTC @TO@ SimpleName@@MethodName:atOffset:[ZoneOffset.UTC] @AT@ 3896 @LENGTH@ 14
------------------------INS SimpleName@@ZoneOffset @TO@ QualifiedName@@ZoneOffset.UTC @AT@ 3896 @LENGTH@ 10
------------------------INS SimpleName@@UTC @TO@ QualifiedName@@ZoneOffset.UTC @AT@ 3907 @LENGTH@ 3


DEL IfStatement@@if (model.hasDefined(SERVER_INTERCEPTORS)) {  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  context.addStep(new AbstractDeploymentChainStep(){    protected void execute(    DeploymentProcessorTarget processorTarget){      processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));    }  },OperationContext.Stage.RUNTIME);  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  context.addStep(new AbstractDeploymentChainStep(){    protected void execute(    DeploymentProcessorTarget processorTarget){      processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));    }  },OperationContext.Stage.RUNTIME);} @AT@ 32164 @LENGTH@ 1537
---DEL Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  context.addStep(new AbstractDeploymentChainStep(){    protected void execute(    DeploymentProcessorTarget processorTarget){      processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));    }  },OperationContext.Stage.RUNTIME);  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  context.addStep(new AbstractDeploymentChainStep(){    protected void execute(    DeploymentProcessorTarget processorTarget){      processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));    }  },OperationContext.Stage.RUNTIME);} @AT@ 32207 @LENGTH@ 1494
------DEL ExpressionStatement@@MethodInvocation:context.addStep(new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));
  }
}
,OperationContext.Stage.RUNTIME) @AT@ 32655 @LENGTH@ 462
---------DEL MethodInvocation@@context.addStep(new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));
  }
}
,OperationContext.Stage.RUNTIME) @AT@ 32655 @LENGTH@ 461
------------DEL SimpleName@@Name:context @AT@ 32655 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addStep:[new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));
  }
}
, OperationContext.Stage.RUNTIME] @AT@ 32663 @LENGTH@ 453
---------------DEL ClassInstanceCreation@@AbstractDeploymentChainStep[] @AT@ 32671 @LENGTH@ 412
------------------DEL New@@new @AT@ 32671 @LENGTH@ 3
------------------DEL SimpleType@@AbstractDeploymentChainStep @AT@ 32675 @LENGTH@ 27
------------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 32705 @LENGTH@ 378
---------------------DEL MethodDeclaration@@protected, void, MethodName:execute, DeploymentProcessorTarget processorTarget,  @AT@ 32723 @LENGTH@ 346
------------------------DEL Modifier@@protected @AT@ 32723 @LENGTH@ 9
------------------------DEL PrimitiveType@@void @AT@ 32733 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:execute @AT@ 32738 @LENGTH@ 7
------------------------DEL SingleVariableDeclaration@@DeploymentProcessorTarget processorTarget @AT@ 32746 @LENGTH@ 41
---------------------------DEL SimpleType@@DeploymentProcessorTarget @AT@ 32746 @LENGTH@ 25
---------------------------DEL SimpleName@@processorTarget @AT@ 32772 @LENGTH@ 15
---------------DEL QualifiedName@@OperationContext.Stage.RUNTIME @AT@ 33085 @LENGTH@ 30
------------------DEL QualifiedName@@OperationContext.Stage @AT@ 33085 @LENGTH@ 22
---------------------DEL SimpleName@@OperationContext @AT@ 33085 @LENGTH@ 16
---------------------DEL SimpleName@@Stage @AT@ 33102 @LENGTH@ 5
------------------DEL SimpleName@@RUNTIME @AT@ 33108 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:context.addStep(new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));
  }
}
,OperationContext.Stage.RUNTIME) @AT@ 33245 @LENGTH@ 446
---------DEL MethodInvocation@@context.addStep(new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));
  }
}
,OperationContext.Stage.RUNTIME) @AT@ 33245 @LENGTH@ 445
------------DEL SimpleName@@Name:context @AT@ 33245 @LENGTH@ 7
------------DEL SimpleName@@MethodName:addStep:[new AbstractDeploymentChainStep(){
  protected void execute(  DeploymentProcessorTarget processorTarget){
    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));
  }
}
, OperationContext.Stage.RUNTIME] @AT@ 33253 @LENGTH@ 437
---------------DEL ClassInstanceCreation@@AbstractDeploymentChainStep[] @AT@ 33261 @LENGTH@ 396
------------------DEL New@@new @AT@ 33261 @LENGTH@ 3
------------------DEL SimpleType@@AbstractDeploymentChainStep @AT@ 33265 @LENGTH@ 27
------------------DEL AnonymousClassDeclaration@@AnonymousClass @AT@ 33295 @LENGTH@ 362
---------------------DEL MethodDeclaration@@protected, void, MethodName:execute, DeploymentProcessorTarget processorTarget,  @AT@ 33313 @LENGTH@ 330
------------------------DEL Modifier@@protected @AT@ 33313 @LENGTH@ 9
------------------------DEL PrimitiveType@@void @AT@ 33323 @LENGTH@ 4
------------------------DEL SimpleName@@MethodName:execute @AT@ 33328 @LENGTH@ 7
------------------------DEL SingleVariableDeclaration@@DeploymentProcessorTarget processorTarget @AT@ 33336 @LENGTH@ 41
---------------------------DEL SimpleType@@DeploymentProcessorTarget @AT@ 33336 @LENGTH@ 25
---------------------------DEL SimpleName@@processorTarget @AT@ 33362 @LENGTH@ 15
---------------DEL QualifiedName@@OperationContext.Stage.RUNTIME @AT@ 33659 @LENGTH@ 30
------------------DEL QualifiedName@@OperationContext.Stage @AT@ 33659 @LENGTH@ 22
---------------------DEL SimpleName@@OperationContext @AT@ 33659 @LENGTH@ 16
---------------------DEL SimpleName@@Stage @AT@ 33676 @LENGTH@ 5
------------------DEL SimpleName@@RUNTIME @AT@ 33682 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]AdvancedHazelcastAtomicnumberEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedHazelcastAtomicnumberEndpointBuilder, [EndpointProducerBuilder] @AT@ 10134 @LENGTH@ 2201
---DEL Modifier@@static @AT@ 10141 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedMetricsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMetricsEndpointBuilder, [EndpointProducerBuilder] @AT@ 6646 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 6653 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator<OAuth2Exception>] @TO@ [@Deprecated, public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator<OAuth2Exception>] @AT@ 1650 @LENGTH@ 3587
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultWebResponseExceptionTranslator, [WebResponseExceptionTranslator<OAuth2Exception>] @AT@ 1827 @LENGTH@ 11


UPD Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @TO@ ThenBody:{  List<String> audiences=new ArrayList<>();  for (  Audience audience : response.getAudience()) {    audiences.add(audience.getValue());  }  claims.put(AUDIENCE,Collections.unmodifiableList(audiences));} @AT@ 8409 @LENGTH@ 189
---INS VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @TO@ Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @AT@ 8406 @LENGTH@ 43
------MOV ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @AT@ 8414 @LENGTH@ 12
------INS VariableDeclarationFragment@@audiences=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @AT@ 8419 @LENGTH@ 29
---------INS SimpleName@@audiences @TO@ VariableDeclarationFragment@@audiences=new ArrayList<>() @AT@ 8419 @LENGTH@ 9
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@audiences=new ArrayList<>() @AT@ 8431 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8431 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 8435 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 8435 @LENGTH@ 9
---DEL VariableDeclarationStatement@@List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()); @AT@ 8414 @LENGTH@ 115
------DEL VariableDeclarationFragment@@audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()) @AT@ 8427 @LENGTH@ 101
---------DEL SimpleName@@audience @AT@ 8427 @LENGTH@ 8
---------DEL MethodInvocation@@response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()) @AT@ 8438 @LENGTH@ 90
------------DEL MethodInvocation@@MethodName:map:[Audience::getValue] @AT@ 8438 @LENGTH@ 61
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 8438 @LENGTH@ 31
------------DEL MethodInvocation@@MethodName:getAudience:[] @AT@ 8438 @LENGTH@ 22
---INS EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @TO@ Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @AT@ 8453 @LENGTH@ 95
------INS SingleVariableDeclaration@@Audience audience @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 8458 @LENGTH@ 17
---------INS SimpleType@@Audience @TO@ SingleVariableDeclaration@@Audience audience @AT@ 8458 @LENGTH@ 8
---------INS SimpleName@@audience @TO@ SingleVariableDeclaration@@Audience audience @AT@ 8467 @LENGTH@ 8
------INS MethodInvocation@@response.getAudience() @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 8478 @LENGTH@ 22
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getAudience() @AT@ 8478 @LENGTH@ 8
---------INS SimpleName@@MethodName:getAudience:[] @TO@ MethodInvocation@@response.getAudience() @AT@ 8487 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:audiences.add(audience.getValue()) @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 8508 @LENGTH@ 35
---------INS MethodInvocation@@audiences.add(audience.getValue()) @TO@ ExpressionStatement@@MethodInvocation:audiences.add(audience.getValue()) @AT@ 8508 @LENGTH@ 34
------------MOV SimpleName@@Name:response @TO@ MethodInvocation@@audiences.add(audience.getValue()) @AT@ 8438 @LENGTH@ 8
------------MOV SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@audiences.add(audience.getValue()) @AT@ 8500 @LENGTH@ 28
---------------UPD MethodInvocation@@Collectors.toList() @TO@ audience.getValue() @AT@ 8508 @LENGTH@ 19
------------------UPD SimpleName@@Name:Collectors @TO@ Name:audience @AT@ 8508 @LENGTH@ 10
------------------UPD SimpleName@@MethodName:toList:[] @TO@ MethodName:getValue:[] @AT@ 8519 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:claims.put(AUDIENCE,Collections.unmodifiableList(audience)) @TO@ MethodInvocation:claims.put(AUDIENCE,Collections.unmodifiableList(audiences)) @AT@ 8533 @LENGTH@ 61
------UPD MethodInvocation@@claims.put(AUDIENCE,Collections.unmodifiableList(audience)) @TO@ claims.put(AUDIENCE,Collections.unmodifiableList(audiences)) @AT@ 8533 @LENGTH@ 60
---------UPD SimpleName@@MethodName:put:[AUDIENCE, Collections.unmodifiableList(audience)] @TO@ MethodName:put:[AUDIENCE, Collections.unmodifiableList(audiences)] @AT@ 8540 @LENGTH@ 53
------------UPD MethodInvocation@@Collections.unmodifiableList(audience) @TO@ Collections.unmodifiableList(audiences) @AT@ 8554 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:unmodifiableList:[audience] @TO@ MethodName:unmodifiableList:[audiences] @AT@ 8566 @LENGTH@ 26
------------------UPD SimpleName@@audience @TO@ audiences @AT@ 8583 @LENGTH@ 8


INS IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @TO@ MethodDeclaration@@public, void, MethodName:serviceInit, Configuration conf,  @AT@ 3578 @LENGTH@ 329
---INS MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @TO@ IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3582 @LENGTH@ 128
------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @AT@ 3582 @LENGTH@ 4
------INS SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @TO@ MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @AT@ 3587 @LENGTH@ 123
---------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @TO@ SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @AT@ 3598 @LENGTH@ 47
------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @AT@ 3598 @LENGTH@ 39
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3598 @LENGTH@ 8
---------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3607 @LENGTH@ 30
------------INS SimpleName@@varname @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @AT@ 3638 @LENGTH@ 7
---------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @TO@ SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @AT@ 3655 @LENGTH@ 54
------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @AT@ 3655 @LENGTH@ 39
---------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3655 @LENGTH@ 8
---------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3664 @LENGTH@ 30
------------INS SimpleName@@defaultBoolVal @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @AT@ 3695 @LENGTH@ 14
---INS Block@@ThenBody:{  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @TO@ IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3712 @LENGTH@ 195
------INS ExpressionStatement@@MethodInvocation:builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @TO@ Block@@ThenBody:{  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3720 @LENGTH@ 181
---------INS MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @TO@ ExpressionStatement@@MethodInvocation:builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 180
------------INS MethodInvocation@@MethodName:configureXFrame:[true] @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 29
---------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:configureXFrame:[true] @AT@ 3744 @LENGTH@ 4
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 7
------------INS SimpleName@@MethodName:setXFrameOption:[conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)] @TO@ MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3750 @LENGTH@ 150
---------------INS MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @TO@ SimpleName@@MethodName:setXFrameOption:[conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)] @AT@ 3777 @LENGTH@ 122
------------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @AT@ 3777 @LENGTH@ 4
------------------INS SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @TO@ MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @AT@ 3782 @LENGTH@ 117
---------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @TO@ SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @AT@ 3786 @LENGTH@ 45
------------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @AT@ 3786 @LENGTH@ 37
---------------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3786 @LENGTH@ 8
---------------------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3795 @LENGTH@ 28
------------------------INS SimpleName@@varname @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @AT@ 3824 @LENGTH@ 7
---------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @TO@ SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @AT@ 3847 @LENGTH@ 51
------------------------INS QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @AT@ 3847 @LENGTH@ 37
---------------------------INS SimpleName@@ConfVars @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3847 @LENGTH@ 8
---------------------------INS SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3856 @LENGTH@ 28
------------------------INS SimpleName@@defaultStrVal @TO@ QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @AT@ 3885 @LENGTH@ 13


UPD TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @TO@ [@Configuration, static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22332 @LENGTH@ 131
---DEL NormalAnnotation@@@Configuration(proxyBeanMethods=false) @AT@ 22332 @LENGTH@ 40
---INS MarkerAnnotation@@@Configuration @TO@ TypeDeclaration@@[@Configuration(proxyBeanMethods=false), static]AuthenticationConfigurationSubclass, AuthenticationConfiguration @AT@ 22332 @LENGTH@ 14


UPD MethodDeclaration@@default, JettyHttpEndpointBuilder9, MethodName:jettyHttp9, String path,  @TO@ default, JettyHttpEndpointBuilder9, MethodName:jetty, String path,  @AT@ 17878 @LENGTH@ 397
---UPD SimpleName@@MethodName:jettyHttp9 @TO@ MethodName:jetty @AT@ 17912 @LENGTH@ 10


INS MethodDeclaration@@default, void, MethodName:clear,  @TO@ TypeDeclaration@@[public]Pool,  @AT@ 1440 @LENGTH@ 38
---INS Modifier@@default @TO@ MethodDeclaration@@default, void, MethodName:clear,  @AT@ 1440 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@default, void, MethodName:clear,  @AT@ 1448 @LENGTH@ 4
---INS SimpleName@@MethodName:clear @TO@ MethodDeclaration@@default, void, MethodName:clear,  @AT@ 1453 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:cacheManager.getCacheNames().forEach((s) -> cacheManager.destroyCache(s)) @TO@ MethodInvocation:cacheManager.getCacheNames().forEach(s -> cacheManager.destroyCache(s)) @AT@ 1963 @LENGTH@ 74
---UPD MethodInvocation@@cacheManager.getCacheNames().forEach((s) -> cacheManager.destroyCache(s)) @TO@ cacheManager.getCacheNames().forEach(s -> cacheManager.destroyCache(s)) @AT@ 1963 @LENGTH@ 73
------UPD SimpleName@@MethodName:forEach:[(s) -> cacheManager.destroyCache(s)] @TO@ MethodName:forEach:[s -> cacheManager.destroyCache(s)] @AT@ 1992 @LENGTH@ 44
---------UPD LambdaExpression@@(s) -> cacheManager.destroyCache(s) @TO@ s -> cacheManager.destroyCache(s) @AT@ 2000 @LENGTH@ 35


UPD TypeDeclaration@@[public, final]ResourceServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @TO@ [@Deprecated, public, final]ResourceServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 3145 @LENGTH@ 8154
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]ResourceServerSecurityConfigurer, SecurityConfigurerAdapter<DefaultSecurityFilterChain,HttpSecurity> @AT@ 3320 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @TO@ TypeDeclaration@@[private, static]RestOperationsResourceRetriever, [ResourceRetriever] @AT@ 11704 @LENGTH@ 103
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 11704 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 11712 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 11719 @LENGTH@ 5
---INS SimpleType@@MediaType @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 11725 @LENGTH@ 9
---INS VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 11735 @LENGTH@ 71
------INS SimpleName@@APPLICATION_JWK_SET_JSON @TO@ VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @AT@ 11735 @LENGTH@ 24
------INS ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @TO@ VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @AT@ 11762 @LENGTH@ 44
---------INS New@@new @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 11762 @LENGTH@ 3
---------INS SimpleType@@MediaType @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 11766 @LENGTH@ 9
---------INS StringLiteral@@"application" @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 11776 @LENGTH@ 13
---------INS StringLiteral@@"jwk-set+json" @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 11791 @LENGTH@ 14


UPD TypeDeclaration@@[public]AccessTokenProvider,  @TO@ [@Deprecated, public]AccessTokenProvider,  @AT@ 1295 @LENGTH@ 1713
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AccessTokenProvider,  @AT@ 1472 @LENGTH@ 11


UPD MethodDeclaration@@default, CaffeineLoadCacheEndpointBuilder, MethodName:caffeineLoadCache, String path,  @TO@ default, CaffeineLoadCacheEndpointBuilder, MethodName:caffeineLoadcache, String path,  @AT@ 31919 @LENGTH@ 459
---UPD SimpleName@@MethodName:caffeineLoadCache @TO@ MethodName:caffeineLoadcache @AT@ 31960 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]AdvancedJMXEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedJMXEndpointBuilder, [EndpointConsumerBuilder] @AT@ 11547 @LENGTH@ 9407
---DEL Modifier@@static @AT@ 11554 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 43449 @LENGTH@ 75
---DEL Modifier@@public @AT@ 43449 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckToken, Exception,  @AT@ 1099 @LENGTH@ 70
---INS MethodInvocation@@assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @AT@ 1099 @LENGTH@ 69
------INS SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @TO@ MethodInvocation@@assertEquals(HttpStatus.METHOD_NOT_ALLOWED,response.getStatusCode()) @AT@ 1099 @LENGTH@ 69
---------INS QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @AT@ 1112 @LENGTH@ 29
------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @AT@ 1112 @LENGTH@ 10
------------INS SimpleName@@METHOD_NOT_ALLOWED @TO@ QualifiedName@@HttpStatus.METHOD_NOT_ALLOWED @AT@ 1123 @LENGTH@ 18
---------INS MethodInvocation@@response.getStatusCode() @TO@ SimpleName@@MethodName:assertEquals:[HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode()] @AT@ 1143 @LENGTH@ 24
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getStatusCode() @AT@ 1143 @LENGTH@ 8
------------INS SimpleName@@MethodName:getStatusCode:[] @TO@ MethodInvocation@@response.getStatusCode() @AT@ 1152 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("netty4-http:http:someserver:80/hello",details.get(2).getEndpointUri()) @TO@ MethodInvocation:Assert.assertEquals("netty-http:http:someserver:80/hello",details.get(2).getEndpointUri()) @AT@ 2795 @LENGTH@ 93
---UPD MethodInvocation@@Assert.assertEquals("netty4-http:http:someserver:80/hello",details.get(2).getEndpointUri()) @TO@ Assert.assertEquals("netty-http:http:someserver:80/hello",details.get(2).getEndpointUri()) @AT@ 2795 @LENGTH@ 92
------UPD SimpleName@@MethodName:assertEquals:["netty4-http:http:someserver:80/hello", details.get(2).getEndpointUri()] @TO@ MethodName:assertEquals:["netty-http:http:someserver:80/hello", details.get(2).getEndpointUri()] @AT@ 2802 @LENGTH@ 85
---------UPD StringLiteral@@"netty4-http:http:someserver:80/hello" @TO@ "netty-http:http:someserver:80/hello" @AT@ 2815 @LENGTH@ 38


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build(); @TO@ OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build(); @AT@ 10306 @LENGTH@ 301
---UPD VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @TO@ authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build() @AT@ 10337 @LENGTH@ 269
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).password(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).build() @AT@ 10368 @LENGTH@ 238
---------INS MethodInvocation@@MethodName:password:[configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)).clientCredentials(this::updateClientCredentialsProvider).build() @AT@ 10386 @LENGTH@ 304
------------INS LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @TO@ MethodInvocation@@MethodName:password:[configurer -> configurer.clockSkew(this.accessTokenExpiresSkew)] @AT@ 10626 @LENGTH@ 63
---------------INS VariableDeclarationFragment@@configurer @TO@ LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 10626 @LENGTH@ 10
------------------INS SimpleName@@configurer @TO@ VariableDeclarationFragment@@configurer @AT@ 10626 @LENGTH@ 10
---------------INS MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @TO@ LambdaExpression@@configurer -> configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 10640 @LENGTH@ 49
------------------INS SimpleName@@Name:configurer @TO@ MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 10640 @LENGTH@ 10
------------------INS SimpleName@@MethodName:clockSkew:[this.accessTokenExpiresSkew] @TO@ MethodInvocation@@configurer.clockSkew(this.accessTokenExpiresSkew) @AT@ 10651 @LENGTH@ 38
---------------------INS FieldAccess@@this.accessTokenExpiresSkew @TO@ SimpleName@@MethodName:clockSkew:[this.accessTokenExpiresSkew] @AT@ 10661 @LENGTH@ 27
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.accessTokenExpiresSkew @AT@ 10661 @LENGTH@ 4
------------------------INS SimpleName@@accessTokenExpiresSkew @TO@ FieldAccess@@this.accessTokenExpiresSkew @AT@ 10666 @LENGTH@ 22


INS TypeDeclaration@@[@EnableRedisRepositories(considerNestedRepositories=true,enableKeyspaceEvents=EnableKeyspaceEvents.ON_STARTUP,keyspaceNotificationsConfigParameter=""), static]ConfigWithEmptyConfigParameter,  @TO@ TypeDeclaration@@[public]RedisRepositoryConfigurationExtensionUnitTests,  @AT@ 7573 @LENGTH@ 212
---INS NormalAnnotation@@@EnableRedisRepositories(considerNestedRepositories=true,enableKeyspaceEvents=EnableKeyspaceEvents.ON_STARTUP,keyspaceNotificationsConfigParameter="") @TO@ TypeDeclaration@@[@EnableRedisRepositories(considerNestedRepositories=true,enableKeyspaceEvents=EnableKeyspaceEvents.ON_STARTUP,keyspaceNotificationsConfigParameter=""), static]ConfigWithEmptyConfigParameter,  @AT@ 7573 @LENGTH@ 161
---INS Modifier@@static @TO@ TypeDeclaration@@[@EnableRedisRepositories(considerNestedRepositories=true,enableKeyspaceEvents=EnableKeyspaceEvents.ON_STARTUP,keyspaceNotificationsConfigParameter=""), static]ConfigWithEmptyConfigParameter,  @AT@ 7736 @LENGTH@ 6
---INS SimpleName@@ClassName:ConfigWithEmptyConfigParameter @TO@ TypeDeclaration@@[@EnableRedisRepositories(considerNestedRepositories=true,enableKeyspaceEvents=EnableKeyspaceEvents.ON_STARTUP,keyspaceNotificationsConfigParameter=""), static]ConfigWithEmptyConfigParameter,  @AT@ 7749 @LENGTH@ 30


UPD IfStatement@@if (source.getLinks().hasSingleLink()) {  throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");} @TO@ if (!source.getLinks().hasSingleLink()) {  throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");} @AT@ 12892 @LENGTH@ 179
---DEL MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12896 @LENGTH@ 33
---INS PrefixExpression@@!source.getLinks().hasSingleLink() @TO@ IfStatement@@if (source.getLinks().hasSingleLink()) {  throw new IllegalArgumentException("Must send only 1 link to update a property reference that isn't a List or a Map.");} @AT@ 12921 @LENGTH@ 34
------INS Operator@@! @TO@ PrefixExpression@@!source.getLinks().hasSingleLink() @AT@ 12921 @LENGTH@ 1
------INS MethodInvocation@@source.getLinks().hasSingleLink() @TO@ PrefixExpression@@!source.getLinks().hasSingleLink() @AT@ 12922 @LENGTH@ 33
---------MOV MethodInvocation@@MethodName:getLinks:[] @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12896 @LENGTH@ 17
---------MOV MethodInvocation@@MethodName:getLinks:[] @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12896 @LENGTH@ 17
---------MOV SimpleName@@Name:source @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12896 @LENGTH@ 6
---------MOV SimpleName@@Name:source @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12896 @LENGTH@ 6
---------MOV SimpleName@@MethodName:hasSingleLink:[] @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12914 @LENGTH@ 15
---------MOV SimpleName@@MethodName:hasSingleLink:[] @TO@ MethodInvocation@@source.getLinks().hasSingleLink() @AT@ 12914 @LENGTH@ 15


INS MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @TO@ TypeDeclaration@@[public]TestOAuth2AuthorizationExchanges,  @AT@ 1104 @LENGTH@ 298
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1104 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1111 @LENGTH@ 6
---INS SimpleType@@OAuth2AuthorizationExchange @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1118 @LENGTH@ 27
---INS SimpleName@@MethodName:failure @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1146 @LENGTH@ 7
---INS VariableDeclarationStatement@@OAuth2AuthorizationRequest request=TestOAuth2AuthorizationRequests.request().build(); @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1160 @LENGTH@ 87
------INS SimpleType@@OAuth2AuthorizationRequest @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=TestOAuth2AuthorizationRequests.request().build(); @AT@ 1160 @LENGTH@ 26
------INS VariableDeclarationFragment@@request=TestOAuth2AuthorizationRequests.request().build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationRequest request=TestOAuth2AuthorizationRequests.request().build(); @AT@ 1187 @LENGTH@ 59
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=TestOAuth2AuthorizationRequests.request().build() @AT@ 1187 @LENGTH@ 7
---------INS MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @TO@ VariableDeclarationFragment@@request=TestOAuth2AuthorizationRequests.request().build() @AT@ 1197 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:request:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 1197 @LENGTH@ 41
------------INS SimpleName@@Name:TestOAuth2AuthorizationRequests @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 1197 @LENGTH@ 31
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationRequests.request().build() @AT@ 1239 @LENGTH@ 7
---INS VariableDeclarationStatement@@OAuth2AuthorizationResponse response=TestOAuth2AuthorizationResponses.error().build(); @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1250 @LENGTH@ 88
------INS SimpleType@@OAuth2AuthorizationResponse @TO@ VariableDeclarationStatement@@OAuth2AuthorizationResponse response=TestOAuth2AuthorizationResponses.error().build(); @AT@ 1250 @LENGTH@ 27
------INS VariableDeclarationFragment@@response=TestOAuth2AuthorizationResponses.error().build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationResponse response=TestOAuth2AuthorizationResponses.error().build(); @AT@ 1278 @LENGTH@ 59
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=TestOAuth2AuthorizationResponses.error().build() @AT@ 1278 @LENGTH@ 8
---------INS MethodInvocation@@TestOAuth2AuthorizationResponses.error().build() @TO@ VariableDeclarationFragment@@response=TestOAuth2AuthorizationResponses.error().build() @AT@ 1289 @LENGTH@ 48
------------INS MethodInvocation@@MethodName:error:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationResponses.error().build() @AT@ 1289 @LENGTH@ 40
------------INS SimpleName@@Name:TestOAuth2AuthorizationResponses @TO@ MethodInvocation@@TestOAuth2AuthorizationResponses.error().build() @AT@ 1289 @LENGTH@ 32
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@TestOAuth2AuthorizationResponses.error().build() @AT@ 1330 @LENGTH@ 7
---INS ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizationExchange(request,response) @TO@ MethodDeclaration@@public, static, OAuth2AuthorizationExchange, MethodName:failure,  @AT@ 1341 @LENGTH@ 58
------INS ClassInstanceCreation@@OAuth2AuthorizationExchange[request, response] @TO@ ReturnStatement@@ClassInstanceCreation:new OAuth2AuthorizationExchange(request,response) @AT@ 1348 @LENGTH@ 50
---------INS New@@new @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[request, response] @AT@ 1348 @LENGTH@ 3
---------INS SimpleType@@OAuth2AuthorizationExchange @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[request, response] @AT@ 1352 @LENGTH@ 27
---------INS SimpleName@@request @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[request, response] @AT@ 1380 @LENGTH@ 7
---------INS SimpleName@@response @TO@ ClassInstanceCreation@@OAuth2AuthorizationExchange[request, response] @AT@ 1389 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2385 @LENGTH@ 80
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2385 @LENGTH@ 79
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 2385 @LENGTH@ 79
---------INS MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 2396 @LENGTH@ 67
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2396 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2396 @LENGTH@ 35
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 2422 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2396 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2396 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@response.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 2443 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 2452 @LENGTH@ 10


UPD TypeDeclaration@@[public]SaltedConsumerSecret,  @TO@ [@Deprecated, public]SaltedConsumerSecret,  @AT@ 169 @LENGTH@ 189
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SaltedConsumerSecret,  @AT@ 390 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes=SecurityConfig.class), public]SecurityConfigTests,  @AT@ 1521 @LENGTH@ 798
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1521 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1528 @LENGTH@ 4
---INS SimpleName@@MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1533 @LENGTH@ 63
---INS VariableDeclarationStatement@@FilterChainProxy filterChain=context.getBean(FilterChainProxy.class); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1603 @LENGTH@ 71
------INS SimpleType@@FilterChainProxy @TO@ VariableDeclarationStatement@@FilterChainProxy filterChain=context.getBean(FilterChainProxy.class); @AT@ 1603 @LENGTH@ 16
------INS VariableDeclarationFragment@@filterChain=context.getBean(FilterChainProxy.class) @TO@ VariableDeclarationStatement@@FilterChainProxy filterChain=context.getBean(FilterChainProxy.class); @AT@ 1620 @LENGTH@ 53
---------INS SimpleName@@filterChain @TO@ VariableDeclarationFragment@@filterChain=context.getBean(FilterChainProxy.class) @AT@ 1620 @LENGTH@ 11
---------INS MethodInvocation@@context.getBean(FilterChainProxy.class) @TO@ VariableDeclarationFragment@@filterChain=context.getBean(FilterChainProxy.class) @AT@ 1634 @LENGTH@ 39
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBean(FilterChainProxy.class) @AT@ 1634 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBean:[FilterChainProxy.class] @TO@ MethodInvocation@@context.getBean(FilterChainProxy.class) @AT@ 1642 @LENGTH@ 31
---------------INS TypeLiteral@@FilterChainProxy.class @TO@ SimpleName@@MethodName:getBean:[FilterChainProxy.class] @AT@ 1650 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(filterChain) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1677 @LENGTH@ 34
------INS MethodInvocation@@Assert.assertNotNull(filterChain) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(filterChain) @AT@ 1677 @LENGTH@ 33
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(filterChain) @AT@ 1677 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[filterChain] @TO@ MethodInvocation@@Assert.assertNotNull(filterChain) @AT@ 1684 @LENGTH@ 26
------------INS SimpleName@@filterChain @TO@ SimpleName@@MethodName:assertNotNull:[filterChain] @AT@ 1698 @LENGTH@ 11
---INS VariableDeclarationStatement@@final List<Filter> filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id"); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1714 @LENGTH@ 84
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<Filter> filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id"); @AT@ 1714 @LENGTH@ 5
------INS ParameterizedType@@List<Filter> @TO@ VariableDeclarationStatement@@final List<Filter> filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id"); @AT@ 1720 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Filter> @AT@ 1720 @LENGTH@ 4
---------INS SimpleType@@Filter @TO@ ParameterizedType@@List<Filter> @AT@ 1725 @LENGTH@ 6
------INS VariableDeclarationFragment@@filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id") @TO@ VariableDeclarationStatement@@final List<Filter> filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id"); @AT@ 1733 @LENGTH@ 64
---------INS SimpleName@@filters @TO@ VariableDeclarationFragment@@filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id") @AT@ 1733 @LENGTH@ 7
---------INS MethodInvocation@@filterChain.getFilters("/sample/jc/saml2/sso/test-id") @TO@ VariableDeclarationFragment@@filters=filterChain.getFilters("/sample/jc/saml2/sso/test-id") @AT@ 1743 @LENGTH@ 54
------------INS SimpleName@@Name:filterChain @TO@ MethodInvocation@@filterChain.getFilters("/sample/jc/saml2/sso/test-id") @AT@ 1743 @LENGTH@ 11
------------INS SimpleName@@MethodName:getFilters:["/sample/jc/saml2/sso/test-id"] @TO@ MethodInvocation@@filterChain.getFilters("/sample/jc/saml2/sso/test-id") @AT@ 1755 @LENGTH@ 42
---------------INS StringLiteral@@"/sample/jc/saml2/sso/test-id" @TO@ SimpleName@@MethodName:getFilters:["/sample/jc/saml2/sso/test-id"] @AT@ 1766 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:Assert.assertNotNull(filters) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1801 @LENGTH@ 30
------INS MethodInvocation@@Assert.assertNotNull(filters) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertNotNull(filters) @AT@ 1801 @LENGTH@ 29
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertNotNull(filters) @AT@ 1801 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertNotNull:[filters] @TO@ MethodInvocation@@Assert.assertNotNull(filters) @AT@ 1808 @LENGTH@ 22
------------INS SimpleName@@filters @TO@ SimpleName@@MethodName:assertNotNull:[filters] @AT@ 1822 @LENGTH@ 7
---INS VariableDeclarationStatement@@Saml2WebSsoAuthenticationFilter filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get(); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 1834 @LENGTH@ 200
------INS SimpleType@@Saml2WebSsoAuthenticationFilter @TO@ VariableDeclarationStatement@@Saml2WebSsoAuthenticationFilter filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get(); @AT@ 1834 @LENGTH@ 31
------INS VariableDeclarationFragment@@filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @TO@ VariableDeclarationStatement@@Saml2WebSsoAuthenticationFilter filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get(); @AT@ 1866 @LENGTH@ 167
---------INS SimpleName@@filter @TO@ VariableDeclarationFragment@@filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1866 @LENGTH@ 6
---------INS CastExpression@@(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @TO@ VariableDeclarationFragment@@filter=(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1875 @LENGTH@ 158
------------INS SimpleType@@Saml2WebSsoAuthenticationFilter @TO@ CastExpression@@(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1876 @LENGTH@ 31
------------INS MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @TO@ CastExpression@@(Saml2WebSsoAuthenticationFilter)filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1909 @LENGTH@ 124
---------------INS MethodInvocation@@MethodName:findFirst:[] @TO@ MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1909 @LENGTH@ 113
---------------INS MethodInvocation@@MethodName:filter:[f -> f instanceof Saml2WebSsoAuthenticationFilter] @TO@ MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1909 @LENGTH@ 96
------------------INS LambdaExpression@@f -> f instanceof Saml2WebSsoAuthenticationFilter @TO@ MethodInvocation@@MethodName:filter:[f -> f instanceof Saml2WebSsoAuthenticationFilter] @AT@ 1950 @LENGTH@ 49
---------------------INS VariableDeclarationFragment@@f @TO@ LambdaExpression@@f -> f instanceof Saml2WebSsoAuthenticationFilter @AT@ 1950 @LENGTH@ 1
------------------------INS SimpleName@@f @TO@ VariableDeclarationFragment@@f @AT@ 1950 @LENGTH@ 1
---------------------INS InstanceofExpression@@f instanceof Saml2WebSsoAuthenticationFilter @TO@ LambdaExpression@@f -> f instanceof Saml2WebSsoAuthenticationFilter @AT@ 1955 @LENGTH@ 44
------------------------INS SimpleName@@f @TO@ InstanceofExpression@@f instanceof Saml2WebSsoAuthenticationFilter @AT@ 1955 @LENGTH@ 1
------------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@f instanceof Saml2WebSsoAuthenticationFilter @AT@ 1957 @LENGTH@ 10
------------------------INS SimpleType@@Saml2WebSsoAuthenticationFilter @TO@ InstanceofExpression@@f instanceof Saml2WebSsoAuthenticationFilter @AT@ 1968 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1909 @LENGTH@ 21
---------------INS SimpleName@@Name:filters @TO@ MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 1909 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@filters.stream().filter(f -> f instanceof Saml2WebSsoAuthenticationFilter).findFirst().get() @AT@ 2028 @LENGTH@ 5
---INS VariableDeclarationStatement@@final Object matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher"); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 2037 @LENGTH@ 100
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Object matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher"); @AT@ 2037 @LENGTH@ 5
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@final Object matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher"); @AT@ 2043 @LENGTH@ 6
------INS VariableDeclarationFragment@@matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @TO@ VariableDeclarationStatement@@final Object matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher"); @AT@ 2050 @LENGTH@ 86
---------INS SimpleName@@matcher @TO@ VariableDeclarationFragment@@matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @AT@ 2050 @LENGTH@ 7
---------INS MethodInvocation@@ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @TO@ VariableDeclarationFragment@@matcher=ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @AT@ 2060 @LENGTH@ 76
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @AT@ 2060 @LENGTH@ 19
------------INS SimpleName@@MethodName:getField:[filter, "requiresAuthenticationRequestMatcher"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(filter,"requiresAuthenticationRequestMatcher") @AT@ 2080 @LENGTH@ 56
---------------INS SimpleName@@filter @TO@ SimpleName@@MethodName:getField:[filter, "requiresAuthenticationRequestMatcher"] @AT@ 2089 @LENGTH@ 6
---------------INS StringLiteral@@"requiresAuthenticationRequestMatcher" @TO@ SimpleName@@MethodName:getField:[filter, "requiresAuthenticationRequestMatcher"] @AT@ 2097 @LENGTH@ 38
---INS VariableDeclarationStatement@@final Object pattern=ReflectionTestUtils.getField(matcher,"pattern"); @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 2140 @LENGTH@ 72
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Object pattern=ReflectionTestUtils.getField(matcher,"pattern"); @AT@ 2140 @LENGTH@ 5
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@final Object pattern=ReflectionTestUtils.getField(matcher,"pattern"); @AT@ 2146 @LENGTH@ 6
------INS VariableDeclarationFragment@@pattern=ReflectionTestUtils.getField(matcher,"pattern") @TO@ VariableDeclarationStatement@@final Object pattern=ReflectionTestUtils.getField(matcher,"pattern"); @AT@ 2153 @LENGTH@ 58
---------INS SimpleName@@pattern @TO@ VariableDeclarationFragment@@pattern=ReflectionTestUtils.getField(matcher,"pattern") @AT@ 2153 @LENGTH@ 7
---------INS MethodInvocation@@ReflectionTestUtils.getField(matcher,"pattern") @TO@ VariableDeclarationFragment@@pattern=ReflectionTestUtils.getField(matcher,"pattern") @AT@ 2163 @LENGTH@ 48
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.getField(matcher,"pattern") @AT@ 2163 @LENGTH@ 19
------------INS SimpleName@@MethodName:getField:[matcher, "pattern"] @TO@ MethodInvocation@@ReflectionTestUtils.getField(matcher,"pattern") @AT@ 2183 @LENGTH@ 28
---------------INS SimpleName@@matcher @TO@ SimpleName@@MethodName:getField:[matcher, "pattern"] @AT@ 2192 @LENGTH@ 7
---------------INS StringLiteral@@"pattern" @TO@ SimpleName@@MethodName:getField:[matcher, "pattern"] @AT@ 2201 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("loginProcessingUrl mismatch","/sample/jc/saml2/sso/{registrationId}",pattern) @TO@ MethodDeclaration@@public, void, MethodName:filterWhenLoginProcessingUrlIsSetInJavaConfigThenTheFilterHasIt,  @AT@ 2215 @LENGTH@ 101
------INS MethodInvocation@@Assert.assertEquals("loginProcessingUrl mismatch","/sample/jc/saml2/sso/{registrationId}",pattern) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("loginProcessingUrl mismatch","/sample/jc/saml2/sso/{registrationId}",pattern) @AT@ 2215 @LENGTH@ 100
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("loginProcessingUrl mismatch","/sample/jc/saml2/sso/{registrationId}",pattern) @AT@ 2215 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["loginProcessingUrl mismatch", "/sample/jc/saml2/sso/{registrationId}", pattern] @TO@ MethodInvocation@@Assert.assertEquals("loginProcessingUrl mismatch","/sample/jc/saml2/sso/{registrationId}",pattern) @AT@ 2222 @LENGTH@ 93
------------INS StringLiteral@@"loginProcessingUrl mismatch" @TO@ SimpleName@@MethodName:assertEquals:["loginProcessingUrl mismatch", "/sample/jc/saml2/sso/{registrationId}", pattern] @AT@ 2235 @LENGTH@ 29
------------INS StringLiteral@@"/sample/jc/saml2/sso/{registrationId}" @TO@ SimpleName@@MethodName:assertEquals:["loginProcessingUrl mismatch", "/sample/jc/saml2/sso/{registrationId}", pattern] @AT@ 2266 @LENGTH@ 39
------------INS SimpleName@@pattern @TO@ SimpleName@@MethodName:assertEquals:["loginProcessingUrl mismatch", "/sample/jc/saml2/sso/{registrationId}", pattern] @AT@ 2307 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @TO@ TypeDeclaration@@[@FrameworkEndpoint, @SessionAttributes({AuthorizationEndpoint.AUTHORIZATION_REQUEST_ATTR_NAME,AuthorizationEndpoint.ORIGINAL_AUTHORIZATION_REQUEST_ATTR_NAME}), public]AuthorizationEndpoint, AbstractEndpoint @AT@ 27443 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27443 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27450 @LENGTH@ 4
---INS SimpleName@@MethodName:addAdditionalResponseHeader @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27455 @LENGTH@ 27
---INS SingleVariableDeclaration@@HttpServletResponse response @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27483 @LENGTH@ 28
------INS SimpleType@@HttpServletResponse @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 27483 @LENGTH@ 19
------INS SimpleName@@response @TO@ SingleVariableDeclaration@@HttpServletResponse response @AT@ 27503 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:response.setHeader(HttpHeaders.CACHE_CONTROL,"no-store") @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27520 @LENGTH@ 58
------INS MethodInvocation@@response.setHeader(HttpHeaders.CACHE_CONTROL,"no-store") @TO@ ExpressionStatement@@MethodInvocation:response.setHeader(HttpHeaders.CACHE_CONTROL,"no-store") @AT@ 27520 @LENGTH@ 57
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setHeader(HttpHeaders.CACHE_CONTROL,"no-store") @AT@ 27520 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[HttpHeaders.CACHE_CONTROL, "no-store"] @TO@ MethodInvocation@@response.setHeader(HttpHeaders.CACHE_CONTROL,"no-store") @AT@ 27529 @LENGTH@ 48
------------INS QualifiedName@@HttpHeaders.CACHE_CONTROL @TO@ SimpleName@@MethodName:setHeader:[HttpHeaders.CACHE_CONTROL, "no-store"] @AT@ 27539 @LENGTH@ 25
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.CACHE_CONTROL @AT@ 27539 @LENGTH@ 11
---------------INS SimpleName@@CACHE_CONTROL @TO@ QualifiedName@@HttpHeaders.CACHE_CONTROL @AT@ 27551 @LENGTH@ 13
------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:setHeader:[HttpHeaders.CACHE_CONTROL, "no-store"] @AT@ 27566 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:response.setHeader(HttpHeaders.PRAGMA,"no-cache") @TO@ MethodDeclaration@@public, void, MethodName:addAdditionalResponseHeader, HttpServletResponse response,  @AT@ 27584 @LENGTH@ 51
------INS MethodInvocation@@response.setHeader(HttpHeaders.PRAGMA,"no-cache") @TO@ ExpressionStatement@@MethodInvocation:response.setHeader(HttpHeaders.PRAGMA,"no-cache") @AT@ 27584 @LENGTH@ 50
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setHeader(HttpHeaders.PRAGMA,"no-cache") @AT@ 27584 @LENGTH@ 8
---------INS SimpleName@@MethodName:setHeader:[HttpHeaders.PRAGMA, "no-cache"] @TO@ MethodInvocation@@response.setHeader(HttpHeaders.PRAGMA,"no-cache") @AT@ 27593 @LENGTH@ 41
------------INS QualifiedName@@HttpHeaders.PRAGMA @TO@ SimpleName@@MethodName:setHeader:[HttpHeaders.PRAGMA, "no-cache"] @AT@ 27603 @LENGTH@ 18
---------------INS SimpleName@@HttpHeaders @TO@ QualifiedName@@HttpHeaders.PRAGMA @AT@ 27603 @LENGTH@ 11
---------------INS SimpleName@@PRAGMA @TO@ QualifiedName@@HttpHeaders.PRAGMA @AT@ 27615 @LENGTH@ 6
------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:setHeader:[HttpHeaders.PRAGMA, "no-cache"] @AT@ 27623 @LENGTH@ 10


UPD TypeDeclaration@@[private, static]PropertyOptionKey,  @TO@ [private, static, final]PropertyOptionKey,  @AT@ 51636 @LENGTH@ 918
---INS Modifier@@final @TO@ TypeDeclaration@@[private, static]PropertyOptionKey,  @AT@ 51651 @LENGTH@ 5


UPD MethodDeclaration@@protected, void, MethodName:onSuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, Authentication authResult,  @TO@ protected, void, MethodName:onSuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, Authentication authResult, IOException,  @AT@ 9432 @LENGTH@ 134
---INS SimpleType@@IOException @TO@ MethodDeclaration@@protected, void, MethodName:onSuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, Authentication authResult,  @AT@ 9569 @LENGTH@ 11


UPD TypeDeclaration@@[public]BaseProtectedResourceDetails, [ProtectedResourceDetails] @TO@ [@Deprecated, public]BaseProtectedResourceDetails, [ProtectedResourceDetails] @AT@ 924 @LENGTH@ 3414
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]BaseProtectedResourceDetails, [ProtectedResourceDetails] @AT@ 1145 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1475 @LENGTH@ 922
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1482 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1487 @LENGTH@ 28


UPD TypeDeclaration@@[public]NonceFactory,  @TO@ [@Deprecated, public]NonceFactory,  @AT@ 710 @LENGTH@ 143
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]NonceFactory,  @AT@ 931 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]TimelineType,  @TO@ [static]TimelineType,  @AT@ 57479 @LENGTH@ 100
---DEL Modifier@@public @AT@ 57479 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AtomEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AtomEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1413 @LENGTH@ 6026
---DEL Modifier@@static @AT@ 1420 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]SharedConsumerSecretImpl, [SharedConsumerSecret] @TO@ [@SuppressWarnings("serial"), @Deprecated, public]SharedConsumerSecretImpl, [SharedConsumerSecret] @AT@ 741 @LENGTH@ 318
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]SharedConsumerSecretImpl, [SharedConsumerSecret] @AT@ 990 @LENGTH@ 11


INS MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @TO@ TypeDeclaration@@[public, abstract]AbstractMessageListenerContainer, RabbitAccessor[MessageListenerContainer, ApplicationContextAware, BeanNameAware, DisposableBean, ApplicationEventPublisherAware] @AT@ 47829 @LENGTH@ 569
---MOV IfStatement@@if (message.getMessageProperties().isFinalRetryForMessageWithNoId()) {  if (this.statefulRetryFatalWithNullMessageId) {    throw new FatalListenerExecutionException("Illegal null id in message. Failed to manage retry for message: " + message,ex);  } else {    throw new ListenerExecutionFailedException("Cannot retry message more than once without an ID",new AmqpRejectAndDontRequeueException("Not retryable; rejecting and not requeuing",ex),message);  }} @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47742 @LENGTH@ 502
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47829 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47837 @LENGTH@ 4
---INS SimpleName@@MethodName:checkStatefulRetry @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47842 @LENGTH@ 18
---INS SingleVariableDeclaration@@RuntimeException ex @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47861 @LENGTH@ 19
------INS SimpleType@@RuntimeException @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 47861 @LENGTH@ 16
------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@RuntimeException ex @AT@ 47878 @LENGTH@ 2
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@private, void, MethodName:checkStatefulRetry, RuntimeException ex, Message message,  @AT@ 47882 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 47882 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 47890 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]SesEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SesEndpointBuilder, [EndpointProducerBuilder] @AT@ 1451 @LENGTH@ 5751
---DEL Modifier@@static @AT@ 1458 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:matches(digested,encode(rawPassword,salt)) @TO@ MethodInvocation:MessageDigest.isEqual(digested,encode(rawPassword,salt)) @AT@ 5303 @LENGTH@ 52
---UPD MethodInvocation@@matches(digested,encode(rawPassword,salt)) @TO@ MessageDigest.isEqual(digested,encode(rawPassword,salt)) @AT@ 5310 @LENGTH@ 44
------UPD SimpleName@@MethodName:matches:[digested, encode(rawPassword,salt)] @TO@ MethodName:isEqual:[digested, encode(rawPassword,salt)] @AT@ 5310 @LENGTH@ 44
------INS SimpleName@@Name:MessageDigest @TO@ MethodInvocation@@matches(digested,encode(rawPassword,salt)) @AT@ 5346 @LENGTH@ 13


UPD MethodDeclaration@@default, IgniteIdGenEndpointBuilder, MethodName:igniteIdGen, String path,  @TO@ default, IgniteIdGenEndpointBuilder, MethodName:igniteIdgen, String path,  @AT@ 7005 @LENGTH@ 411
---UPD SimpleName@@MethodName:igniteIdGen @TO@ MethodName:igniteIdgen @AT@ 7040 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2127 @LENGTH@ 698
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2127 @LENGTH@ 697
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 2127 @LENGTH@ 98
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2132 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2132 @LENGTH@ 25


UPD MethodDeclaration@@public, void, MethodName:preWriteCheck, Exception,  @TO@ public, void, MethodName:preWriteCheck, Exchange exchange, Exception,  @AT@ 12651 @LENGTH@ 87
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:preWriteCheck, Exception,  @AT@ 12685 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 12685 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 12694 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:logger.error("Consumer received fatal=" + isMismatchedQueuesFatal() + " exception on startup",ex) @TO@ MethodInvocation:logger.error("Consumer threw missing queues exception, fatal=" + isMissingQueuesFatal(),ex) @AT@ 42573 @LENGTH@ 99
---UPD MethodInvocation@@logger.error("Consumer received fatal=" + isMismatchedQueuesFatal() + " exception on startup",ex) @TO@ logger.error("Consumer threw missing queues exception, fatal=" + isMissingQueuesFatal(),ex) @AT@ 42573 @LENGTH@ 98
------UPD SimpleName@@MethodName:error:["Consumer received fatal=" + isMismatchedQueuesFatal() + " exception on startup", ex] @TO@ MethodName:error:["Consumer threw missing queues exception, fatal=" + isMissingQueuesFatal(), ex] @AT@ 42580 @LENGTH@ 91
---------UPD InfixExpression@@"Consumer received fatal=" + isMismatchedQueuesFatal() + " exception on startup" @TO@ "Consumer threw missing queues exception, fatal=" + isMissingQueuesFatal() @AT@ 42586 @LENGTH@ 80
------------UPD StringLiteral@@"Consumer received fatal=" @TO@ "Consumer threw missing queues exception, fatal=" @AT@ 42586 @LENGTH@ 26
------------UPD MethodInvocation@@MethodName:isMismatchedQueuesFatal:[] @TO@ MethodName:isMissingQueuesFatal:[] @AT@ 42615 @LENGTH@ 25
------------DEL StringLiteral@@" exception on startup" @AT@ 42643 @LENGTH@ 23


UPD TypeDeclaration@@[public]OAuthSecurityNamespaceHandler, NamespaceHandlerSupport @TO@ [@Deprecated, public]OAuthSecurityNamespaceHandler, NamespaceHandlerSupport @AT@ 750 @LENGTH@ 790
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSecurityNamespaceHandler, NamespaceHandlerSupport @AT@ 971 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenEnhancerChain, [TokenEnhancer] @TO@ [@Deprecated, public]TokenEnhancerChain, [TokenEnhancer] @AT@ 974 @LENGTH@ 893
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenEnhancerChain, [TokenEnhancer] @AT@ 1151 @LENGTH@ 11


UPD MethodDeclaration@@default, PrinterEndpointBuilder, MethodName:printer, String path,  @TO@ default, PrinterEndpointBuilder, MethodName:lpr, String path,  @AT@ 9430 @LENGTH@ 374
---UPD SimpleName@@MethodName:printer @TO@ MethodName:lpr @AT@ 9461 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42905 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42905 @LENGTH@ 6


INS MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @TO@ TypeDeclaration@@[public, final]QueueBuilder, AbstractBuilder @AT@ 6834 @LENGTH@ 99
---INS Modifier@@public @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @AT@ 6834 @LENGTH@ 6
---INS SimpleType@@QueueBuilder @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @AT@ 6841 @LENGTH@ 12
---INS SimpleName@@MethodName:deliveryLimit @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @AT@ 6854 @LENGTH@ 13
---INS SingleVariableDeclaration@@int limit @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @AT@ 6868 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int limit @AT@ 6868 @LENGTH@ 3
------INS SimpleName@@limit @TO@ SingleVariableDeclaration@@int limit @AT@ 6872 @LENGTH@ 5
---INS ReturnStatement@@MethodInvocation:withArgument("x-delivery-limit",limit) @TO@ MethodDeclaration@@public, QueueBuilder, MethodName:deliveryLimit, int limit,  @AT@ 6883 @LENGTH@ 47
------INS MethodInvocation@@withArgument("x-delivery-limit",limit) @TO@ ReturnStatement@@MethodInvocation:withArgument("x-delivery-limit",limit) @AT@ 6890 @LENGTH@ 39
---------INS SimpleName@@MethodName:withArgument:["x-delivery-limit", limit] @TO@ MethodInvocation@@withArgument("x-delivery-limit",limit) @AT@ 6890 @LENGTH@ 39
------------INS StringLiteral@@"x-delivery-limit" @TO@ SimpleName@@MethodName:withArgument:["x-delivery-limit", limit] @AT@ 6903 @LENGTH@ 18
------------INS SimpleName@@limit @TO@ SimpleName@@MethodName:withArgument:["x-delivery-limit", limit] @AT@ 6923 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("serial"), @com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2ExceptionJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2ExceptionJackson2Deserializer.class), public]OAuth2Exception, RuntimeException @TO@ [@SuppressWarnings("serial"), @com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2ExceptionJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2ExceptionJackson2Deserializer.class), @Deprecated, public]OAuth2Exception, RuntimeException @AT@ 254 @LENGTH@ 5409
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), @com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2ExceptionJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2ExceptionJackson2Deserializer.class), public]OAuth2Exception, RuntimeException @AT@ 675 @LENGTH@ 11


UPD MethodDeclaration@@default, NeutronEndpointBuilder, MethodName:neutron, String path,  @TO@ default, NeutronEndpointBuilder, MethodName:openstackNeutron, String path,  @AT@ 7435 @LENGTH@ 388
---UPD SimpleName@@MethodName:neutron @TO@ MethodName:openstackNeutron @AT@ 7466 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:sb.append(this.getAttributes().entrySet().stream().map(e -> e.getKey() + "=" + e.getValue()).collect(Collectors.joining(", "))) @TO@ MethodInvocation:sb.append(getAttributes()) @AT@ 4589 @LENGTH@ 128
---UPD MethodInvocation@@sb.append(this.getAttributes().entrySet().stream().map(e -> e.getKey() + "=" + e.getValue()).collect(Collectors.joining(", "))) @TO@ sb.append(getAttributes()) @AT@ 4589 @LENGTH@ 127
------UPD SimpleName@@MethodName:append:[this.getAttributes().entrySet().stream().map(e -> e.getKey() + "=" + e.getValue()).collect(Collectors.joining(", "))] @TO@ MethodName:append:[getAttributes()] @AT@ 4592 @LENGTH@ 124
---------INS MethodInvocation@@MethodName:getAttributes:[] @TO@ SimpleName@@MethodName:append:[this.getAttributes().entrySet().stream().map(e -> e.getKey() + "=" + e.getValue()).collect(Collectors.joining(", "))] @AT@ 4491 @LENGTH@ 15
---------DEL MethodInvocation@@this.getAttributes().entrySet().stream().map(e -> e.getKey() + "=" + e.getValue()).collect(Collectors.joining(", ")) @AT@ 4599 @LENGTH@ 116
------------DEL MethodInvocation@@MethodName:map:[e -> e.getKey() + "=" + e.getValue()] @AT@ 4599 @LENGTH@ 82
---------------DEL LambdaExpression@@e -> e.getKey() + "=" + e.getValue() @AT@ 4644 @LENGTH@ 36
------------------DEL VariableDeclarationFragment@@e @AT@ 4644 @LENGTH@ 1
---------------------DEL SimpleName@@e @AT@ 4644 @LENGTH@ 1
------------------DEL InfixExpression@@e.getKey() + "=" + e.getValue() @AT@ 4649 @LENGTH@ 31
---------------------DEL MethodInvocation@@e.getKey() @AT@ 4649 @LENGTH@ 10
------------------------DEL SimpleName@@Name:e @AT@ 4649 @LENGTH@ 1
------------------------DEL SimpleName@@MethodName:getKey:[] @AT@ 4651 @LENGTH@ 8
---------------------DEL Operator@@+ @AT@ 4659 @LENGTH@ 1
---------------------DEL StringLiteral@@"=" @AT@ 4662 @LENGTH@ 3
---------------------DEL MethodInvocation@@e.getValue() @AT@ 4668 @LENGTH@ 12
------------------------DEL SimpleName@@Name:e @AT@ 4668 @LENGTH@ 1
------------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 4670 @LENGTH@ 10
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 4599 @LENGTH@ 40
------------DEL MethodInvocation@@MethodName:entrySet:[] @AT@ 4599 @LENGTH@ 31
------------DEL MethodInvocation@@MethodName:getAttributes:[] @AT@ 4599 @LENGTH@ 20
------------DEL ThisExpression@@this @AT@ 4599 @LENGTH@ 4
------------DEL SimpleName@@MethodName:collect:[Collectors.joining(", ")] @AT@ 4682 @LENGTH@ 33
---------------DEL MethodInvocation@@Collectors.joining(", ") @AT@ 4690 @LENGTH@ 24
------------------DEL SimpleName@@Name:Collectors @AT@ 4690 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:joining:[", "] @AT@ 4701 @LENGTH@ 13
---------------------DEL StringLiteral@@", " @AT@ 4709 @LENGTH@ 4


UPD TypeDeclaration@@[public]InMemoryClientDetailsServiceBuilder, ClientDetailsServiceBuilder<InMemoryClientDetailsServiceBuilder> @TO@ [@Deprecated, public]InMemoryClientDetailsServiceBuilder, ClientDetailsServiceBuilder<InMemoryClientDetailsServiceBuilder> @AT@ 1008 @LENGTH@ 584
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryClientDetailsServiceBuilder, ClientDetailsServiceBuilder<InMemoryClientDetailsServiceBuilder> @AT@ 1186 @LENGTH@ 11


UPD TypeDeclaration@@[public]TokenApprovalStore, [ApprovalStore] @TO@ [@Deprecated, public]TokenApprovalStore, [ApprovalStore] @AT@ 1696 @LENGTH@ 2310
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]TokenApprovalStore, [ApprovalStore] @AT@ 1873 @LENGTH@ 11


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2091 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2103 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2111 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2111 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2151 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2159 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2178 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:authorize.route("secure.*").authenticated().anyRequest().permitAll() @TO@ MethodInvocation:authorize.route("secure.*").authenticated().anyExchange().permitAll() @AT@ 8239 @LENGTH@ 87
---UPD MethodInvocation@@authorize.route("secure.*").authenticated().anyRequest().permitAll() @TO@ authorize.route("secure.*").authenticated().anyExchange().permitAll() @AT@ 8239 @LENGTH@ 86
------UPD MethodInvocation@@MethodName:anyRequest:[] @TO@ MethodName:anyExchange:[] @AT@ 8239 @LENGTH@ 74


UPD FieldDeclaration@@IronMQClientMock, [mock=new IronMQClientMock("dummy","dummy")] @TO@ private, IronMQClientMock, [mock=new IronMQClientMock("dummy","dummy")] @AT@ 1688 @LENGTH@ 63
---INS Modifier@@private @TO@ FieldDeclaration@@IronMQClientMock, [mock=new IronMQClientMock("dummy","dummy")] @AT@ 1688 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 12454 @LENGTH@ 404
---DEL Modifier@@public @AT@ 12454 @LENGTH@ 6


UPD MethodDeclaration@@default, CinderEndpointBuilder, MethodName:cinder, String path,  @TO@ default, CinderEndpointBuilder, MethodName:openstackCinder, String path,  @AT@ 7420 @LENGTH@ 380
---UPD SimpleName@@MethodName:cinder @TO@ MethodName:openstackCinder @AT@ 7450 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientDetails, [Serializable] @TO@ [@Deprecated, public]ClientDetails, [Serializable] @AT@ 283 @LENGTH@ 2857
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetails, [Serializable] @AT@ 460 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:sb.append(this.getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.joining(", "))) @TO@ MethodInvocation:sb.append(getAuthorities()) @AT@ 4436 @LENGTH@ 112
---UPD MethodInvocation@@sb.append(this.getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.joining(", "))) @TO@ sb.append(getAuthorities()) @AT@ 4436 @LENGTH@ 111
------UPD SimpleName@@MethodName:append:[this.getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.joining(", "))] @TO@ MethodName:append:[getAuthorities()] @AT@ 4439 @LENGTH@ 108
---------INS MethodInvocation@@MethodName:getAuthorities:[] @TO@ SimpleName@@MethodName:append:[this.getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.joining(", "))] @AT@ 4422 @LENGTH@ 16
---------DEL MethodInvocation@@this.getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.joining(", ")) @AT@ 4446 @LENGTH@ 100
------------DEL MethodInvocation@@MethodName:map:[GrantedAuthority::getAuthority] @AT@ 4446 @LENGTH@ 66
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 4446 @LENGTH@ 30
------------DEL MethodInvocation@@MethodName:getAuthorities:[] @AT@ 4446 @LENGTH@ 21
------------DEL ThisExpression@@this @AT@ 4446 @LENGTH@ 4
------------DEL SimpleName@@MethodName:collect:[Collectors.joining(", ")] @AT@ 4513 @LENGTH@ 33
---------------DEL MethodInvocation@@Collectors.joining(", ") @AT@ 4521 @LENGTH@ 24
------------------DEL SimpleName@@Name:Collectors @AT@ 4521 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:joining:[", "] @AT@ 4532 @LENGTH@ 13
---------------------DEL StringLiteral@@", " @AT@ 4540 @LENGTH@ 4


UPD TypeDeclaration@@[public]OAuthProviderTokenServices,  @TO@ [@Deprecated, public]OAuthProviderTokenServices,  @AT@ 811 @LENGTH@ 2625
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthProviderTokenServices,  @AT@ 1032 @LENGTH@ 11


UPD MethodDeclaration@@default, ServerEndpointBuilder, MethodName:server, String path,  @TO@ default, ServerEndpointBuilder, MethodName:iec60870Server, String path,  @AT@ 55336 @LENGTH@ 379
---UPD SimpleName@@MethodName:server @TO@ MethodName:iec60870Server @AT@ 55366 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, String[], [DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"coap","netty4-http","jetty","restlet","servlet","spark-java","undertow"}] @TO@ public, static, final, String[], [DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"coap","netty-http","jetty","restlet","servlet","spark-java","undertow"}] @AT@ 2114 @LENGTH@ 157
---UPD VariableDeclarationFragment@@DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"coap","netty4-http","jetty","restlet","servlet","spark-java","undertow"} @TO@ DEFAULT_REST_CONSUMER_COMPONENTS=new String[]{"coap","netty-http","jetty","restlet","servlet","spark-java","undertow"} @AT@ 2143 @LENGTH@ 127
------UPD ArrayCreation@@new String[]{"coap","netty4-http","jetty","restlet","servlet","spark-java","undertow"} @TO@ new String[]{"coap","netty-http","jetty","restlet","servlet","spark-java","undertow"} @AT@ 2178 @LENGTH@ 92
---------UPD ArrayInitializer@@{"coap","netty4-http","jetty","restlet","servlet","spark-java","undertow"} @TO@ {"coap","netty-http","jetty","restlet","servlet","spark-java","undertow"} @AT@ 2190 @LENGTH@ 80
------------UPD StringLiteral@@"netty4-http" @TO@ "netty-http" @AT@ 2199 @LENGTH@ 13


UPD MethodDeclaration@@void, MethodName:commence, HttpServletRequest request, HttpServletResponse response, IOException,  @TO@ void, MethodName:commence, HttpServletRequest request, HttpServletResponse response, IOException, ServletException,  @AT@ 1726 @LENGTH@ 89
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@void, MethodName:commence, HttpServletRequest request, HttpServletResponse response, IOException,  @AT@ 1854 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:Assert.state(!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessagelistener,"When setting 'consumerBatchEnabled' to true, the listener must support batching") @TO@ MethodInvocation:Assert.state(!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessageListener,"When setting 'consumerBatchEnabled' to true, the listener must support batching") @AT@ 19965 @LENGTH@ 256
---UPD MethodInvocation@@Assert.state(!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessagelistener,"When setting 'consumerBatchEnabled' to true, the listener must support batching") @TO@ Assert.state(!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessageListener,"When setting 'consumerBatchEnabled' to true, the listener must support batching") @AT@ 19965 @LENGTH@ 255
------UPD SimpleName@@MethodName:state:[!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessagelistener, "When setting 'consumerBatchEnabled' to true, the listener must support batching"] @TO@ MethodName:state:[!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessageListener, "When setting 'consumerBatchEnabled' to true, the listener must support batching"] @AT@ 19972 @LENGTH@ 248
---------UPD InfixExpression@@!this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessagelistener @TO@ !this.consumerBatchEnabled || getMessageListener() instanceof BatchMessageListener || getMessageListener() instanceof ChannelAwareBatchMessageListener @AT@ 19978 @LENGTH@ 154
------------UPD InstanceofExpression@@getMessageListener() instanceof ChannelAwareBatchMessagelistener @TO@ getMessageListener() instanceof ChannelAwareBatchMessageListener @AT@ 20068 @LENGTH@ 64
---------------UPD SimpleType@@ChannelAwareBatchMessagelistener @TO@ ChannelAwareBatchMessageListener @AT@ 20100 @LENGTH@ 32


MOV MethodDeclaration@@public, static, RouteDefinition, MethodName:adviceWith, CamelContext camelContext, Object routeId, ThrowingConsumer<AdviceWithRouteBuilder,Exception> builder, Exception,  @TO@ TypeDeclaration@@[public, abstract]AdviceWithRouteBuilder, RouteBuilder @AT@ 3700 @LENGTH@ 1743


UPD TypeDeclaration@@[public, static]LdapEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LdapEndpointBuilder, [EndpointProducerBuilder] @AT@ 1440 @LENGTH@ 3432
---DEL Modifier@@static @AT@ 1447 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]HazelcastAtomicnumberEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]HazelcastAtomicnumberEndpointBuilder, [EndpointProducerBuilder] @AT@ 1518 @LENGTH@ 8514
---DEL Modifier@@static @AT@ 1525 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientDetailsUserDetailsService, [UserDetailsService] @TO@ [@Deprecated, public]ClientDetailsUserDetailsService, [UserDetailsService] @AT@ 1270 @LENGTH@ 1044
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetailsUserDetailsService, [UserDetailsService] @AT@ 1448 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:neo4jNativeTypes.add(Instant.class) @TO@ Initializer@@Initializer @AT@ 2287 @LENGTH@ 36
---INS MethodInvocation@@neo4jNativeTypes.add(Instant.class) @TO@ ExpressionStatement@@MethodInvocation:neo4jNativeTypes.add(Instant.class) @AT@ 2287 @LENGTH@ 35
------INS SimpleName@@Name:neo4jNativeTypes @TO@ MethodInvocation@@neo4jNativeTypes.add(Instant.class) @AT@ 2287 @LENGTH@ 16
------INS SimpleName@@MethodName:add:[Instant.class] @TO@ MethodInvocation@@neo4jNativeTypes.add(Instant.class) @AT@ 2304 @LENGTH@ 18
---------INS TypeLiteral@@Instant.class @TO@ SimpleName@@MethodName:add:[Instant.class] @AT@ 2308 @LENGTH@ 13


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProviderBuilder authorizedClientProviderBuilder=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken(); @TO@ OAuth2AuthorizedClientProviderBuilder authorizedClientProviderBuilder=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().password(); @AT@ 3506 @LENGTH@ 179
---UPD VariableDeclarationFragment@@authorizedClientProviderBuilder=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken() @TO@ authorizedClientProviderBuilder=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().password() @AT@ 3544 @LENGTH@ 140
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().password() @AT@ 3584 @LENGTH@ 100
---------INS MethodInvocation@@MethodName:refreshToken:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken() @AT@ 3584 @LENGTH@ 100
---------UPD SimpleName@@MethodName:refreshToken:[] @TO@ MethodName:password:[] @AT@ 3670 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]AdvancedMasterEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedMasterEndpointBuilder, [EndpointConsumerBuilder] @AT@ 2409 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 2416 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:fileWatcher=new FileWatcherStrategy(dir,(file) -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
) @TO@ Assignment:fileWatcher=new FileWatcherStrategy(dir,file -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
) @AT@ 2829 @LENGTH@ 402
---UPD Assignment@@fileWatcher=new FileWatcherStrategy(dir,(file) -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
) @TO@ fileWatcher=new FileWatcherStrategy(dir,file -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
) @AT@ 2829 @LENGTH@ 401
------UPD ClassInstanceCreation@@FileWatcherStrategy[dir, (file) -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
] @TO@ FileWatcherStrategy[dir, file -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
] @AT@ 2843 @LENGTH@ 387
---------UPD LambdaExpression@@(file) -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
 @TO@ file -> {
  String onlyName=file.getName();
  String target=FileUtil.stripPath(endpoint.getFileName());
  log.trace("File changed: {}",onlyName);
  if (onlyName.equals(target)) {
    watchFileChanged=true;
  }
}
 @AT@ 2872 @LENGTH@ 357


MOV FieldDeclaration@@private, ProvokeExceptionExecCommandExecutor, [provokerMock=new ProvokeExceptionExecCommandExecutor()] @TO@ TypeDeclaration@@[public]ExecJavaProcessTest, CamelTestSupport @AT@ 3727 @LENGTH@ 101


UPD MethodDeclaration@@public, void, MethodName:close,  @TO@ public, void, MethodName:close, IOException,  @AT@ 5337 @LENGTH@ 35
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 5364 @LENGTH@ 11
---INS IfStatement@@if (cipherInputStream != null) {  cipherInputStream.close();} @TO@ MethodDeclaration@@public, void, MethodName:close,  @AT@ 5394 @LENGTH@ 97
------INS InfixExpression@@cipherInputStream != null @TO@ IfStatement@@if (cipherInputStream != null) {  cipherInputStream.close();} @AT@ 5398 @LENGTH@ 25
---------INS SimpleName@@cipherInputStream @TO@ InfixExpression@@cipherInputStream != null @AT@ 5398 @LENGTH@ 17
---------INS Operator@@!= @TO@ InfixExpression@@cipherInputStream != null @AT@ 5415 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@cipherInputStream != null @AT@ 5419 @LENGTH@ 4
------INS Block@@ThenBody:{  cipherInputStream.close();} @TO@ IfStatement@@if (cipherInputStream != null) {  cipherInputStream.close();} @AT@ 5425 @LENGTH@ 66
---------INS ExpressionStatement@@MethodInvocation:cipherInputStream.close() @TO@ Block@@ThenBody:{  cipherInputStream.close();} @AT@ 5447 @LENGTH@ 26
------------INS MethodInvocation@@cipherInputStream.close() @TO@ ExpressionStatement@@MethodInvocation:cipherInputStream.close() @AT@ 5447 @LENGTH@ 25
---------------INS SimpleName@@Name:cipherInputStream @TO@ MethodInvocation@@cipherInputStream.close() @AT@ 5447 @LENGTH@ 17
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@cipherInputStream.close() @AT@ 5465 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @TO@ TypeDeclaration@@[public]RedisSerializationContextUnitTests,  @AT@ 4422 @LENGTH@ 393
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4422 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4429 @LENGTH@ 4
---INS SimpleName@@MethodName:shouldEncodeAndDecodeByteArrayValue @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4434 @LENGTH@ 35
---INS VariableDeclarationStatement@@RedisSerializationContext<byte[],byte[]> serializationContext=RedisSerializationContext.byteArray(); @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4477 @LENGTH@ 108
------INS ParameterizedType@@RedisSerializationContext<byte[],byte[]> @TO@ VariableDeclarationStatement@@RedisSerializationContext<byte[],byte[]> serializationContext=RedisSerializationContext.byteArray(); @AT@ 4477 @LENGTH@ 41
---------INS SimpleType@@RedisSerializationContext @TO@ ParameterizedType@@RedisSerializationContext<byte[],byte[]> @AT@ 4477 @LENGTH@ 25
---------INS ArrayType@@byte[] @TO@ ParameterizedType@@RedisSerializationContext<byte[],byte[]> @AT@ 4503 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4503 @LENGTH@ 4
---------INS ArrayType@@byte[] @TO@ ParameterizedType@@RedisSerializationContext<byte[],byte[]> @AT@ 4511 @LENGTH@ 6
------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4511 @LENGTH@ 4
------INS VariableDeclarationFragment@@serializationContext=RedisSerializationContext.byteArray() @TO@ VariableDeclarationStatement@@RedisSerializationContext<byte[],byte[]> serializationContext=RedisSerializationContext.byteArray(); @AT@ 4519 @LENGTH@ 65
---------INS SimpleName@@serializationContext @TO@ VariableDeclarationFragment@@serializationContext=RedisSerializationContext.byteArray() @AT@ 4519 @LENGTH@ 20
---------INS MethodInvocation@@RedisSerializationContext.byteArray() @TO@ VariableDeclarationFragment@@serializationContext=RedisSerializationContext.byteArray() @AT@ 4542 @LENGTH@ 42
------------INS SimpleName@@Name:RedisSerializationContext @TO@ MethodInvocation@@RedisSerializationContext.byteArray() @AT@ 4542 @LENGTH@ 25
------------INS SimpleName@@MethodName:byteArray:[] @TO@ MethodInvocation@@RedisSerializationContext.byteArray() @AT@ 4573 @LENGTH@ 11
---INS VariableDeclarationStatement@@byte[] deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())); @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4589 @LENGTH@ 164
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())); @AT@ 4589 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 4589 @LENGTH@ 4
------INS VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @TO@ VariableDeclarationStatement@@byte[] deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())); @AT@ 4596 @LENGTH@ 156
---------INS SimpleName@@deserialized @TO@ VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @AT@ 4596 @LENGTH@ 12
---------INS MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @TO@ VariableDeclarationFragment@@deserialized=serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @AT@ 4611 @LENGTH@ 141
------------INS MethodInvocation@@MethodName:getValueSerializationPair:[] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @AT@ 4611 @LENGTH@ 48
------------INS SimpleName@@Name:serializationContext @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @AT@ 4611 @LENGTH@ 20
------------INS SimpleName@@MethodName:read:[serializationContext.getValueSerializationPair().write("hello".getBytes())] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().read(serializationContext.getValueSerializationPair().write("hello".getBytes())) @AT@ 4665 @LENGTH@ 87
---------------INS MethodInvocation@@serializationContext.getValueSerializationPair().write("hello".getBytes()) @TO@ SimpleName@@MethodName:read:[serializationContext.getValueSerializationPair().write("hello".getBytes())] @AT@ 4670 @LENGTH@ 81
------------------INS MethodInvocation@@MethodName:getValueSerializationPair:[] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write("hello".getBytes()) @AT@ 4670 @LENGTH@ 48
------------------INS SimpleName@@Name:serializationContext @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write("hello".getBytes()) @AT@ 4670 @LENGTH@ 20
------------------INS SimpleName@@MethodName:write:["hello".getBytes()] @TO@ MethodInvocation@@serializationContext.getValueSerializationPair().write("hello".getBytes()) @AT@ 4726 @LENGTH@ 25
---------------------INS MethodInvocation@@"hello".getBytes() @TO@ SimpleName@@MethodName:write:["hello".getBytes()] @AT@ 4732 @LENGTH@ 18
------------------------INS StringLiteral@@"hello" @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4732 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4740 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo("hello".getBytes()) @TO@ MethodDeclaration@@public, void, MethodName:shouldEncodeAndDecodeByteArrayValue,  @AT@ 4757 @LENGTH@ 55
------INS MethodInvocation@@assertThat(deserialized).isEqualTo("hello".getBytes()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(deserialized).isEqualTo("hello".getBytes()) @AT@ 4757 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:assertThat:[deserialized] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo("hello".getBytes()) @AT@ 4757 @LENGTH@ 24
------------INS SimpleName@@deserialized @TO@ MethodInvocation@@MethodName:assertThat:[deserialized] @AT@ 4768 @LENGTH@ 12
---------INS SimpleName@@MethodName:isEqualTo:["hello".getBytes()] @TO@ MethodInvocation@@assertThat(deserialized).isEqualTo("hello".getBytes()) @AT@ 4782 @LENGTH@ 29
------------INS MethodInvocation@@"hello".getBytes() @TO@ SimpleName@@MethodName:isEqualTo:["hello".getBytes()] @AT@ 4792 @LENGTH@ 18
---------------INS StringLiteral@@"hello" @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4792 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@"hello".getBytes() @AT@ 4800 @LENGTH@ 10


UPD TypeDeclaration@@[public, abstract]BaseRedisTokenStoreSerializationStrategy, [RedisTokenStoreSerializationStrategy] @TO@ [@Deprecated, public, abstract]BaseRedisTokenStoreSerializationStrategy, [RedisTokenStoreSerializationStrategy] @AT@ 188 @LENGTH@ 1132
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]BaseRedisTokenStoreSerializationStrategy, [RedisTokenStoreSerializationStrategy] @AT@ 366 @LENGTH@ 11


UPD IfStatement@@if (queue == null || refreshWanted.compareAndSet(true,false)) {  queue=session.createTemporaryQueue();  setReplyTo(queue);  if (log.isDebugEnabled()) {    log.debug("Refreshed Temporary ReplyTo Queue. New queue: {}",queue.getQueueName());  }  refreshWanted.notifyAll();} @TO@ if (queue == null || refreshWanted.get()) {  refreshWanted.set(false);  queue=session.createTemporaryQueue();  setReplyTo(queue);  if (log.isDebugEnabled()) {    log.debug("Refreshed Temporary ReplyTo Queue. New queue: {}",queue.getQueueName());  }  refreshWanted.notifyAll();} @AT@ 9593 @LENGTH@ 407
---UPD InfixExpression@@queue == null || refreshWanted.compareAndSet(true,false) @TO@ queue == null || refreshWanted.get() @AT@ 9597 @LENGTH@ 57
------UPD MethodInvocation@@refreshWanted.compareAndSet(true,false) @TO@ refreshWanted.get() @AT@ 9614 @LENGTH@ 40
---------UPD SimpleName@@MethodName:compareAndSet:[true, false] @TO@ MethodName:get:[] @AT@ 9628 @LENGTH@ 26
------------DEL BooleanLiteral@@true @AT@ 9642 @LENGTH@ 4
------------DEL BooleanLiteral@@false @AT@ 9648 @LENGTH@ 5
---UPD Block@@ThenBody:{  queue=session.createTemporaryQueue();  setReplyTo(queue);  if (log.isDebugEnabled()) {    log.debug("Refreshed Temporary ReplyTo Queue. New queue: {}",queue.getQueueName());  }  refreshWanted.notifyAll();} @TO@ ThenBody:{  refreshWanted.set(false);  queue=session.createTemporaryQueue();  setReplyTo(queue);  if (log.isDebugEnabled()) {    log.debug("Refreshed Temporary ReplyTo Queue. New queue: {}",queue.getQueueName());  }  refreshWanted.notifyAll();} @AT@ 9656 @LENGTH@ 344
------INS ExpressionStatement@@MethodInvocation:refreshWanted.set(false) @TO@ Block@@ThenBody:{  queue=session.createTemporaryQueue();  setReplyTo(queue);  if (log.isDebugEnabled()) {    log.debug("Refreshed Temporary ReplyTo Queue. New queue: {}",queue.getQueueName());  }  refreshWanted.notifyAll();} @AT@ 9657 @LENGTH@ 25
---------INS MethodInvocation@@refreshWanted.set(false) @TO@ ExpressionStatement@@MethodInvocation:refreshWanted.set(false) @AT@ 9657 @LENGTH@ 24
------------INS SimpleName@@Name:refreshWanted @TO@ MethodInvocation@@refreshWanted.set(false) @AT@ 9657 @LENGTH@ 13
------------INS SimpleName@@MethodName:set:[false] @TO@ MethodInvocation@@refreshWanted.set(false) @AT@ 9671 @LENGTH@ 10
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:set:[false] @AT@ 9675 @LENGTH@ 5


INS MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @TO@ TypeDeclaration@@[public]IndexInfo,  @AT@ 4507 @LENGTH@ 254
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4507 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4515 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4522 @LENGTH@ 6
---INS SimpleName@@MethodName:extractPartialFilterString @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4529 @LENGTH@ 26
---INS SingleVariableDeclaration@@Document sourceDocument @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4556 @LENGTH@ 23
------INS SimpleType@@Document @TO@ SingleVariableDeclaration@@Document sourceDocument @AT@ 4556 @LENGTH@ 8
------INS SimpleName@@sourceDocument @TO@ SingleVariableDeclaration@@Document sourceDocument @AT@ 4565 @LENGTH@ 14
---INS IfStatement@@if (!sourceDocument.containsKey("partialFilterExpression")) {  return null;} @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4586 @LENGTH@ 81
------INS PrefixExpression@@!sourceDocument.containsKey("partialFilterExpression") @TO@ IfStatement@@if (!sourceDocument.containsKey("partialFilterExpression")) {  return null;} @AT@ 4590 @LENGTH@ 54
---------MOV MethodInvocation@@sourceDocument.containsKey("partialFilterExpression") @TO@ PrefixExpression@@!sourceDocument.containsKey("partialFilterExpression") @AT@ 3773 @LENGTH@ 53
---------INS Operator@@! @TO@ PrefixExpression@@!sourceDocument.containsKey("partialFilterExpression") @AT@ 4590 @LENGTH@ 1
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (!sourceDocument.containsKey("partialFilterExpression")) {  return null;} @AT@ 4646 @LENGTH@ 21
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 4651 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4658 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:BsonUtils.toJson(sourceDocument.get("partialFilterExpression",Document.class)) @TO@ MethodDeclaration@@private, static, String, MethodName:extractPartialFilterString, Document sourceDocument,  @AT@ 4671 @LENGTH@ 87
------INS MethodInvocation@@BsonUtils.toJson(sourceDocument.get("partialFilterExpression",Document.class)) @TO@ ReturnStatement@@MethodInvocation:BsonUtils.toJson(sourceDocument.get("partialFilterExpression",Document.class)) @AT@ 4678 @LENGTH@ 79
---------INS SimpleName@@Name:BsonUtils @TO@ MethodInvocation@@BsonUtils.toJson(sourceDocument.get("partialFilterExpression",Document.class)) @AT@ 4678 @LENGTH@ 9
---------INS SimpleName@@MethodName:toJson:[sourceDocument.get("partialFilterExpression",Document.class)] @TO@ MethodInvocation@@BsonUtils.toJson(sourceDocument.get("partialFilterExpression",Document.class)) @AT@ 4688 @LENGTH@ 69
------------INS MethodInvocation@@sourceDocument.get("partialFilterExpression",Document.class) @TO@ SimpleName@@MethodName:toJson:[sourceDocument.get("partialFilterExpression",Document.class)] @AT@ 4695 @LENGTH@ 61
---------------INS SimpleName@@Name:sourceDocument @TO@ MethodInvocation@@sourceDocument.get("partialFilterExpression",Document.class) @AT@ 4695 @LENGTH@ 14
---------------INS SimpleName@@MethodName:get:["partialFilterExpression", Document.class] @TO@ MethodInvocation@@sourceDocument.get("partialFilterExpression",Document.class) @AT@ 4710 @LENGTH@ 46
------------------INS StringLiteral@@"partialFilterExpression" @TO@ SimpleName@@MethodName:get:["partialFilterExpression", Document.class] @AT@ 4714 @LENGTH@ 25
------------------INS TypeLiteral@@Document.class @TO@ SimpleName@@MethodName:get:["partialFilterExpression", Document.class] @AT@ 4741 @LENGTH@ 14


UPD TypeDeclaration@@[public, static]DigitalOceanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DigitalOceanEndpointBuilder, [EndpointProducerBuilder] @AT@ 1454 @LENGTH@ 5426
---DEL Modifier@@static @AT@ 1461 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedServiceEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedServiceEndpointBuilder, [EndpointConsumerBuilder] @AT@ 2082 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 2089 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]XmlSignatureEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]XmlSignatureEndpointBuilder, [EndpointProducerBuilder] @AT@ 1467 @LENGTH@ 38686
---DEL Modifier@@static @AT@ 1474 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedKinesisFirehoseEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedKinesisFirehoseEndpointBuilder, [EndpointProducerBuilder] @AT@ 5205 @LENGTH@ 2159
---DEL Modifier@@static @AT@ 5212 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("deprecation"), public]OAuth2ContextSetup, TestWatchman @TO@ [@SuppressWarnings("deprecation"), @Deprecated, public]OAuth2ContextSetup, TestWatchman @AT@ 4233 @LENGTH@ 10778
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation"), public]OAuth2ContextSetup, TestWatchman @AT@ 4443 @LENGTH@ 11


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 5299 @LENGTH@ 201
---UPD VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 5330 @LENGTH@ 169
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 5361 @LENGTH@ 138
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 5361 @LENGTH@ 141


UPD VariableDeclarationStatement@@String baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString(); @TO@ String baseUrl=UriComponentsBuilder.fromUri(request.getURI()).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString(); @AT@ 7918 @LENGTH@ 209
---UPD VariableDeclarationFragment@@baseUrl=UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @TO@ baseUrl=UriComponentsBuilder.fromUri(request.getURI()).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @AT@ 7925 @LENGTH@ 201
------UPD MethodInvocation@@UriComponentsBuilder.fromHttpRequest(new ServerHttpRequestDecorator(request)).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @TO@ UriComponentsBuilder.fromUri(request.getURI()).replacePath(request.getPath().contextPath().value()).replaceQuery(null).build().toUriString() @AT@ 7935 @LENGTH@ 191
---------UPD MethodInvocation@@MethodName:fromHttpRequest:[new ServerHttpRequestDecorator(request)] @TO@ MethodName:fromUri:[request.getURI()] @AT@ 7935 @LENGTH@ 77
------------INS MethodInvocation@@request.getURI() @TO@ MethodInvocation@@MethodName:fromHttpRequest:[new ServerHttpRequestDecorator(request)] @AT@ 7888 @LENGTH@ 16
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getURI() @AT@ 7888 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getURI:[] @TO@ MethodInvocation@@request.getURI() @AT@ 7896 @LENGTH@ 8
------------DEL ClassInstanceCreation@@ServerHttpRequestDecorator[request] @AT@ 7972 @LENGTH@ 39
---------------DEL New@@new @AT@ 7972 @LENGTH@ 3
---------------DEL SimpleType@@ServerHttpRequestDecorator @AT@ 7976 @LENGTH@ 26
---------------DEL SimpleName@@request @AT@ 8003 @LENGTH@ 7


UPD TypeDeclaration@@[public]DefaultUserApprovalHandler, [UserApprovalHandler] @TO@ [@Deprecated, public]DefaultUserApprovalHandler, [UserApprovalHandler] @AT@ 1045 @LENGTH@ 1839
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultUserApprovalHandler, [UserApprovalHandler] @AT@ 1222 @LENGTH@ 11


UPD TypeDeclaration@@[@Configuration, public]WebSecurityConfiguration, [ImportAware, BeanClassLoaderAware] @TO@ [@Configuration(proxyBeanMethods=false), public]WebSecurityConfiguration, [ImportAware, BeanClassLoaderAware] @AT@ 3135 @LENGTH@ 5691
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, public]WebSecurityConfiguration, [ImportAware, BeanClassLoaderAware] @AT@ 3135 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 3135 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 33136 @LENGTH@ 473
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33136 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33143 @LENGTH@ 4
---INS SimpleName@@MethodName:leavesDistanceUntouchedWhenUsingGeoJson @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33148 @LENGTH@ 39
---INS VariableDeclarationStatement@@Query query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)); @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33195 @LENGTH@ 107
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)); @AT@ 33195 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)) @TO@ VariableDeclarationStatement@@Query query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)); @AT@ 33201 @LENGTH@ 100
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)) @AT@ 33201 @LENGTH@ 5
---------INS MethodInvocation@@query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)) @TO@ VariableDeclarationFragment@@query=query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)) @AT@ 33209 @LENGTH@ 92
------------INS SimpleName@@MethodName:query:[where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)] @TO@ MethodInvocation@@query(where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)) @AT@ 33209 @LENGTH@ 92
---------------INS MethodInvocation@@where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000) @TO@ SimpleName@@MethodName:query:[where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000)] @AT@ 33215 @LENGTH@ 85
------------------INS MethodInvocation@@MethodName:near:[new GeoJsonPoint(27.987901,86.9165379)] @TO@ MethodInvocation@@where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000) @AT@ 33215 @LENGTH@ 67
---------------------INS ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @TO@ MethodInvocation@@MethodName:near:[new GeoJsonPoint(27.987901,86.9165379)] @AT@ 33242 @LENGTH@ 39
------------------------INS New@@new @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 33242 @LENGTH@ 3
------------------------INS SimpleType@@GeoJsonPoint @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 33246 @LENGTH@ 12
------------------------INS NumberLiteral@@27.987901 @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 33259 @LENGTH@ 9
------------------------INS NumberLiteral@@86.9165379 @TO@ ClassInstanceCreation@@GeoJsonPoint[27.987901, 86.9165379] @AT@ 33270 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:where:["geoJsonPoint"] @TO@ MethodInvocation@@where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000) @AT@ 33215 @LENGTH@ 21
---------------------INS StringLiteral@@"geoJsonPoint" @TO@ MethodInvocation@@MethodName:where:["geoJsonPoint"] @AT@ 33221 @LENGTH@ 14
------------------INS SimpleName@@MethodName:maxDistance:[1000] @TO@ MethodInvocation@@where("geoJsonPoint").near(new GeoJsonPoint(27.987901,86.9165379)).maxDistance(1000) @AT@ 33283 @LENGTH@ 17
---------------------INS NumberLiteral@@1000 @TO@ SimpleName@@MethodName:maxDistance:[1000] @AT@ 33295 @LENGTH@ 4
---INS VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)); @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33306 @LENGTH@ 134
------INS SimpleType@@org.bson.Document @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)); @AT@ 33306 @LENGTH@ 17
------INS VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @TO@ VariableDeclarationStatement@@org.bson.Document document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)); @AT@ 33324 @LENGTH@ 115
---------INS SimpleName@@document @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @AT@ 33324 @LENGTH@ 8
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @TO@ VariableDeclarationFragment@@document=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @AT@ 33335 @LENGTH@ 104
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @AT@ 33335 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithGeoTypes.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(ClassWithGeoTypes.class)) @AT@ 33342 @LENGTH@ 97
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithGeoTypes.class)] @AT@ 33358 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 33358 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 33364 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(ClassWithGeoTypes.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(ClassWithGeoTypes.class)] @AT@ 33386 @LENGTH@ 52
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithGeoTypes.class) @AT@ 33386 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[ClassWithGeoTypes.class] @TO@ MethodInvocation@@context.getPersistentEntity(ClassWithGeoTypes.class) @AT@ 33394 @LENGTH@ 44
---------------------INS TypeLiteral@@ClassWithGeoTypes.class @TO@ SimpleName@@MethodName:getPersistentEntity:[ClassWithGeoTypes.class] @AT@ 33414 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertThat(document).containsEntry("geoJsonPoint.$near.$geometry.type","Point") @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33443 @LENGTH@ 81
------INS MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$geometry.type","Point") @TO@ ExpressionStatement@@MethodInvocation:assertThat(document).containsEntry("geoJsonPoint.$near.$geometry.type","Point") @AT@ 33443 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:assertThat:[document] @TO@ MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$geometry.type","Point") @AT@ 33443 @LENGTH@ 20
------------INS SimpleName@@document @TO@ MethodInvocation@@MethodName:assertThat:[document] @AT@ 33454 @LENGTH@ 8
---------INS SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$geometry.type", "Point"] @TO@ MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$geometry.type","Point") @AT@ 33464 @LENGTH@ 59
------------INS StringLiteral@@"geoJsonPoint.$near.$geometry.type" @TO@ SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$geometry.type", "Point"] @AT@ 33478 @LENGTH@ 35
------------INS StringLiteral@@"Point" @TO@ SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$geometry.type", "Point"] @AT@ 33515 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(document).containsEntry("geoJsonPoint.$near.$maxDistance",1000.0D) @TO@ MethodDeclaration@@public, void, MethodName:leavesDistanceUntouchedWhenUsingGeoJson,  @AT@ 33527 @LENGTH@ 79
------INS MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$maxDistance",1000.0D) @TO@ ExpressionStatement@@MethodInvocation:assertThat(document).containsEntry("geoJsonPoint.$near.$maxDistance",1000.0D) @AT@ 33527 @LENGTH@ 78
---------INS MethodInvocation@@MethodName:assertThat:[document] @TO@ MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$maxDistance",1000.0D) @AT@ 33527 @LENGTH@ 20
------------INS SimpleName@@document @TO@ MethodInvocation@@MethodName:assertThat:[document] @AT@ 33538 @LENGTH@ 8
---------INS SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$maxDistance", 1000.0D] @TO@ MethodInvocation@@assertThat(document).containsEntry("geoJsonPoint.$near.$maxDistance",1000.0D) @AT@ 33548 @LENGTH@ 57
------------INS StringLiteral@@"geoJsonPoint.$near.$maxDistance" @TO@ SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$maxDistance", 1000.0D] @AT@ 33562 @LENGTH@ 33
------------INS NumberLiteral@@1000.0D @TO@ SimpleName@@MethodName:containsEntry:["geoJsonPoint.$near.$maxDistance", 1000.0D] @AT@ 33597 @LENGTH@ 7


UPD TypeDeclaration@@[public, static]AdvancedCryptoCmsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedCryptoCmsEndpointBuilder, [EndpointProducerBuilder] @AT@ 19169 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 19176 @LENGTH@ 6


UPD MethodDeclaration@@private, static, Task<? extends Serializable>, MethodName:alterTableTask, ImportTableDesc tableDesc, EximUtil.SemanticAnalyzerWrapperContext x, ReplicationSpec replicationSpec,  @TO@ private, static, Task<?>, MethodName:alterTableTask, ImportTableDesc tableDesc, EximUtil.SemanticAnalyzerWrapperContext x, ReplicationSpec replicationSpec,  @AT@ 25020 @LENGTH@ 550
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 25035 @LENGTH@ 28


INS IfStatement@@if (a.getSubject() != null) {  for (  SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {    if (sc.getSubjectConfirmationData() != null) {      sc.getSubjectConfirmationData().setAddress(null);    }  }} @TO@ MethodDeclaration@@private, void, MethodName:validateAssertion, String recipient, Assertion a, Saml2AuthenticationToken token, boolean signatureRequired,  @AT@ 15080 @LENGTH@ 227
---INS InfixExpression@@a.getSubject() != null @TO@ IfStatement@@if (a.getSubject() != null) {  for (  SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {    if (sc.getSubjectConfirmationData() != null) {      sc.getSubjectConfirmationData().setAddress(null);    }  }} @AT@ 15084 @LENGTH@ 22
------INS MethodInvocation@@a.getSubject() @TO@ InfixExpression@@a.getSubject() != null @AT@ 15084 @LENGTH@ 14
---------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.getSubject() @AT@ 15084 @LENGTH@ 1
---------INS SimpleName@@MethodName:getSubject:[] @TO@ MethodInvocation@@a.getSubject() @AT@ 15086 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@a.getSubject() != null @AT@ 15098 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@a.getSubject() != null @AT@ 15102 @LENGTH@ 4
---INS Block@@ThenBody:{  for (  SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {    if (sc.getSubjectConfirmationData() != null) {      sc.getSubjectConfirmationData().setAddress(null);    }  }} @TO@ IfStatement@@if (a.getSubject() != null) {  for (  SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {    if (sc.getSubjectConfirmationData() != null) {      sc.getSubjectConfirmationData().setAddress(null);    }  }} @AT@ 15108 @LENGTH@ 199
------INS EnhancedForStatement@@for (SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {  if (sc.getSubjectConfirmationData() != null) {    sc.getSubjectConfirmationData().setAddress(null);  }} @TO@ Block@@ThenBody:{  for (  SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {    if (sc.getSubjectConfirmationData() != null) {      sc.getSubjectConfirmationData().setAddress(null);    }  }} @AT@ 15113 @LENGTH@ 190
---------INS SingleVariableDeclaration@@SubjectConfirmation sc @TO@ EnhancedForStatement@@for (SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {  if (sc.getSubjectConfirmationData() != null) {    sc.getSubjectConfirmationData().setAddress(null);  }} @AT@ 15118 @LENGTH@ 22
------------INS SimpleType@@SubjectConfirmation @TO@ SingleVariableDeclaration@@SubjectConfirmation sc @AT@ 15118 @LENGTH@ 19
------------INS SimpleName@@sc @TO@ SingleVariableDeclaration@@SubjectConfirmation sc @AT@ 15138 @LENGTH@ 2
---------INS MethodInvocation@@a.getSubject().getSubjectConfirmations() @TO@ EnhancedForStatement@@for (SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {  if (sc.getSubjectConfirmationData() != null) {    sc.getSubjectConfirmationData().setAddress(null);  }} @AT@ 15143 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:getSubject:[] @TO@ MethodInvocation@@a.getSubject().getSubjectConfirmations() @AT@ 15143 @LENGTH@ 14
------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.getSubject().getSubjectConfirmations() @AT@ 15143 @LENGTH@ 1
------------INS SimpleName@@MethodName:getSubjectConfirmations:[] @TO@ MethodInvocation@@a.getSubject().getSubjectConfirmations() @AT@ 15158 @LENGTH@ 25
---------INS IfStatement@@if (sc.getSubjectConfirmationData() != null) {  sc.getSubjectConfirmationData().setAddress(null);} @TO@ EnhancedForStatement@@for (SubjectConfirmation sc : a.getSubject().getSubjectConfirmations()) {  if (sc.getSubjectConfirmationData() != null) {    sc.getSubjectConfirmationData().setAddress(null);  }} @AT@ 15191 @LENGTH@ 107
------------INS InfixExpression@@sc.getSubjectConfirmationData() != null @TO@ IfStatement@@if (sc.getSubjectConfirmationData() != null) {  sc.getSubjectConfirmationData().setAddress(null);} @AT@ 15195 @LENGTH@ 39
---------------INS MethodInvocation@@sc.getSubjectConfirmationData() @TO@ InfixExpression@@sc.getSubjectConfirmationData() != null @AT@ 15195 @LENGTH@ 31
------------------INS SimpleName@@Name:sc @TO@ MethodInvocation@@sc.getSubjectConfirmationData() @AT@ 15195 @LENGTH@ 2
------------------INS SimpleName@@MethodName:getSubjectConfirmationData:[] @TO@ MethodInvocation@@sc.getSubjectConfirmationData() @AT@ 15198 @LENGTH@ 28
---------------INS Operator@@!= @TO@ InfixExpression@@sc.getSubjectConfirmationData() != null @AT@ 15226 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@sc.getSubjectConfirmationData() != null @AT@ 15230 @LENGTH@ 4
------------INS Block@@ThenBody:{  sc.getSubjectConfirmationData().setAddress(null);} @TO@ IfStatement@@if (sc.getSubjectConfirmationData() != null) {  sc.getSubjectConfirmationData().setAddress(null);} @AT@ 15236 @LENGTH@ 62
---------------INS ExpressionStatement@@MethodInvocation:sc.getSubjectConfirmationData().setAddress(null) @TO@ Block@@ThenBody:{  sc.getSubjectConfirmationData().setAddress(null);} @AT@ 15243 @LENGTH@ 49
------------------INS MethodInvocation@@sc.getSubjectConfirmationData().setAddress(null) @TO@ ExpressionStatement@@MethodInvocation:sc.getSubjectConfirmationData().setAddress(null) @AT@ 15243 @LENGTH@ 48
---------------------INS MethodInvocation@@MethodName:getSubjectConfirmationData:[] @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress(null) @AT@ 15243 @LENGTH@ 31
---------------------INS SimpleName@@Name:sc @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress(null) @AT@ 15243 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:setAddress:[null] @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress(null) @AT@ 15275 @LENGTH@ 16
------------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setAddress:[null] @AT@ 15286 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]GlanceEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GlanceEndpointBuilder, [EndpointProducerBuilder] @AT@ 1440 @LENGTH@ 2939
---DEL Modifier@@static @AT@ 1447 @LENGTH@ 6


INS IfStatement@@if (field.isInternal()) {  return new DirectFieldReference(new ExposedField(field,true));} @TO@ MethodDeclaration@@public, FieldReference, MethodName:getReference, Field field,  @AT@ 2811 @LENGTH@ 95
---INS MethodInvocation@@field.isInternal() @TO@ IfStatement@@if (field.isInternal()) {  return new DirectFieldReference(new ExposedField(field,true));} @AT@ 2814 @LENGTH@ 18
------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.isInternal() @AT@ 2814 @LENGTH@ 5
------INS SimpleName@@MethodName:isInternal:[] @TO@ MethodInvocation@@field.isInternal() @AT@ 2820 @LENGTH@ 12
---INS Block@@ThenBody:{  return new DirectFieldReference(new ExposedField(field,true));} @TO@ IfStatement@@if (field.isInternal()) {  return new DirectFieldReference(new ExposedField(field,true));} @AT@ 2834 @LENGTH@ 72
------INS ReturnStatement@@ClassInstanceCreation:new DirectFieldReference(new ExposedField(field,true)) @TO@ Block@@ThenBody:{  return new DirectFieldReference(new ExposedField(field,true));} @AT@ 2839 @LENGTH@ 63
---------INS ClassInstanceCreation@@DirectFieldReference[new ExposedField(field,true)] @TO@ ReturnStatement@@ClassInstanceCreation:new DirectFieldReference(new ExposedField(field,true)) @AT@ 2846 @LENGTH@ 55
------------INS New@@new @TO@ ClassInstanceCreation@@DirectFieldReference[new ExposedField(field,true)] @AT@ 2846 @LENGTH@ 3
------------INS SimpleType@@DirectFieldReference @TO@ ClassInstanceCreation@@DirectFieldReference[new ExposedField(field,true)] @AT@ 2850 @LENGTH@ 20
------------INS ClassInstanceCreation@@ExposedField[field, true] @TO@ ClassInstanceCreation@@DirectFieldReference[new ExposedField(field,true)] @AT@ 2871 @LENGTH@ 29
---------------INS New@@new @TO@ ClassInstanceCreation@@ExposedField[field, true] @AT@ 2871 @LENGTH@ 3
---------------INS SimpleType@@ExposedField @TO@ ClassInstanceCreation@@ExposedField[field, true] @AT@ 2875 @LENGTH@ 12
---------------INS SimpleName@@field @TO@ ClassInstanceCreation@@ExposedField[field, true] @AT@ 2888 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@ExposedField[field, true] @AT@ 2895 @LENGTH@ 4


UPD FieldDeclaration@@Producer<String>, [producer] @TO@ private, Producer<String>, [producer] @AT@ 2397 @LENGTH@ 26
---INS Modifier@@private @TO@ FieldDeclaration@@Producer<String>, [producer] @AT@ 2397 @LENGTH@ 7


UPD EnumDeclaration@@[public, static]TwilioApiName,  @TO@ [static]TwilioApiName,  @AT@ 19412 @LENGTH@ 1214
---DEL Modifier@@public @AT@ 19412 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]DrillEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DrillEndpointBuilder, [EndpointProducerBuilder] @AT@ 1418 @LENGTH@ 2819
---DEL Modifier@@static @AT@ 1425 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedMvelEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMvelEndpointBuilder, [EndpointProducerBuilder] @AT@ 3380 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 3387 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientCredentialsAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @TO@ [@Deprecated, public]ClientCredentialsAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 1089 @LENGTH@ 1682
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientCredentialsAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 1266 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]StringTemplateEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]StringTemplateEndpointBuilder, [EndpointProducerBuilder] @AT@ 1402 @LENGTH@ 2992
---DEL Modifier@@static @AT@ 1409 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]GitType,  @TO@ [static]GitType,  @AT@ 23036 @LENGTH@ 63
---DEL Modifier@@public @AT@ 23036 @LENGTH@ 6


UPD MethodDeclaration@@public, abstract, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException,  @TO@ public, abstract, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException, ServletException,  @AT@ 12432 @LENGTH@ 158
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@public, abstract, Authentication, MethodName:attemptAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException, IOException,  @AT@ 12594 @LENGTH@ 16


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsSecurityContextTests,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SecurityMockMvcRequestPostProcessorsSecurityContextTests,  @AT@ 1833 @LENGTH@ 1011
---INS SingleMemberAnnotation@@@PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}) @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsSecurityContextTests,  @AT@ 1976 @LENGTH@ 123


UPD TypeDeclaration@@[public]OAuthSignatureMethod,  @TO@ [@Deprecated, public]OAuthSignatureMethod,  @AT@ 689 @LENGTH@ 653
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthSignatureMethod,  @AT@ 910 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:withJwkSetUri(jwkSetUri).jwsAlgorithm(jwsAlgorithm).build() @TO@ MethodInvocation:withJwkSetUri(jwkSetUri).jwsAlgorithm((SignatureAlgorithm)jwsAlgorithm).build() @AT@ 7987 @LENGTH@ 67
---UPD MethodInvocation@@withJwkSetUri(jwkSetUri).jwsAlgorithm(jwsAlgorithm).build() @TO@ withJwkSetUri(jwkSetUri).jwsAlgorithm((SignatureAlgorithm)jwsAlgorithm).build() @AT@ 7994 @LENGTH@ 59
------UPD MethodInvocation@@MethodName:jwsAlgorithm:[jwsAlgorithm] @TO@ MethodName:jwsAlgorithm:[(SignatureAlgorithm)jwsAlgorithm] @AT@ 7994 @LENGTH@ 51
---------INS CastExpression@@(SignatureAlgorithm)jwsAlgorithm @TO@ MethodInvocation@@MethodName:jwsAlgorithm:[jwsAlgorithm] @AT@ 8032 @LENGTH@ 33
------------INS SimpleType@@SignatureAlgorithm @TO@ CastExpression@@(SignatureAlgorithm)jwsAlgorithm @AT@ 8033 @LENGTH@ 18
------------INS SimpleName@@jwsAlgorithm @TO@ CastExpression@@(SignatureAlgorithm)jwsAlgorithm @AT@ 8053 @LENGTH@ 12
---------DEL SimpleName@@jwsAlgorithm @AT@ 8032 @LENGTH@ 12


UPD TypeDeclaration@@[public, static]DdbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]DdbEndpointBuilder, [EndpointProducerBuilder] @AT@ 1437 @LENGTH@ 6953
---DEL Modifier@@static @AT@ 1444 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedIgniteComputeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedIgniteComputeEndpointBuilder, [EndpointProducerBuilder] @AT@ 4351 @LENGTH@ 2145
---DEL Modifier@@static @AT@ 4358 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.notEmpty(directives,"directives cannot be empty or null.") @TO@ MethodInvocation:Assert.notEmpty(directives,"directives cannot be empty or null") @AT@ 1605 @LENGTH@ 67
---UPD MethodInvocation@@Assert.notEmpty(directives,"directives cannot be empty or null.") @TO@ Assert.notEmpty(directives,"directives cannot be empty or null") @AT@ 1605 @LENGTH@ 66
------UPD SimpleName@@MethodName:notEmpty:[directives, "directives cannot be empty or null."] @TO@ MethodName:notEmpty:[directives, "directives cannot be empty or null"] @AT@ 1612 @LENGTH@ 59
---------UPD StringLiteral@@"directives cannot be empty or null." @TO@ "directives cannot be empty or null" @AT@ 1633 @LENGTH@ 37


UPD MethodDeclaration@@default, AS2EndpointBuilder, MethodName:aS2, String path,  @TO@ default, AS2EndpointBuilder, MethodName:as2, String path,  @AT@ 70087 @LENGTH@ 346
---UPD SimpleName@@MethodName:aS2 @TO@ MethodName:as2 @AT@ 70114 @LENGTH@ 3


UPD VariableDeclarationStatement@@String neo4jUrl=Optional.ofNullable(System.getenv(SYS_PROPERTY_NEOJ4_URL)).orElse(""); @TO@ String neo4jUrl=Optional.ofNullable(System.getenv(SYS_PROPERTY_NEO4J_URL)).orElse(""); @AT@ 3927 @LENGTH@ 88
---UPD VariableDeclarationFragment@@neo4jUrl=Optional.ofNullable(System.getenv(SYS_PROPERTY_NEOJ4_URL)).orElse("") @TO@ neo4jUrl=Optional.ofNullable(System.getenv(SYS_PROPERTY_NEO4J_URL)).orElse("") @AT@ 3934 @LENGTH@ 80
------UPD MethodInvocation@@Optional.ofNullable(System.getenv(SYS_PROPERTY_NEOJ4_URL)).orElse("") @TO@ Optional.ofNullable(System.getenv(SYS_PROPERTY_NEO4J_URL)).orElse("") @AT@ 3945 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:ofNullable:[System.getenv(SYS_PROPERTY_NEOJ4_URL)] @TO@ MethodName:ofNullable:[System.getenv(SYS_PROPERTY_NEO4J_URL)] @AT@ 3945 @LENGTH@ 58
------------UPD MethodInvocation@@System.getenv(SYS_PROPERTY_NEOJ4_URL) @TO@ System.getenv(SYS_PROPERTY_NEO4J_URL) @AT@ 3965 @LENGTH@ 37
---------------UPD SimpleName@@MethodName:getenv:[SYS_PROPERTY_NEOJ4_URL] @TO@ MethodName:getenv:[SYS_PROPERTY_NEO4J_URL] @AT@ 3972 @LENGTH@ 30
------------------UPD SimpleName@@SYS_PROPERTY_NEOJ4_URL @TO@ SYS_PROPERTY_NEO4J_URL @AT@ 3979 @LENGTH@ 22


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 1999 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 1999 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 1999 @LENGTH@ 86
---------INS MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 2010 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2010 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2010 @LENGTH@ 42
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 2036 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2010 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2010 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2064 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 2073 @LENGTH@ 10


UPD FieldDeclaration@@private, boolean, [blockIfQueueFull=false] @TO@ private, boolean, [blockIfQueueFull] @AT@ 2642 @LENGTH@ 41
---UPD VariableDeclarationFragment@@blockIfQueueFull=false @TO@ blockIfQueueFull @AT@ 2658 @LENGTH@ 24
------DEL BooleanLiteral@@false @AT@ 2677 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:findAllAsDocument,  @TO@ TypeDeclaration@@[public]ExecutableFindOperationSupportTests,  @AT@ 4967 @LENGTH@ 182
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocument,  @AT@ 4967 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocument,  @AT@ 4974 @LENGTH@ 4
---INS SimpleName@@MethodName:findAllAsDocument @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocument,  @AT@ 4979 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()).hasSize(1) @TO@ MethodDeclaration@@public, void, MethodName:findAllAsDocument,  @AT@ 5003 @LENGTH@ 143
------INS MethodInvocation@@assertThat(template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()).hasSize(1) @TO@ ExpressionStatement@@MethodInvocation:assertThat(template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()).hasSize(1) @AT@ 5003 @LENGTH@ 142
---------INS MethodInvocation@@MethodName:assertThat:[template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()] @TO@ MethodInvocation@@assertThat(template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()).hasSize(1) @AT@ 5003 @LENGTH@ 124
------------INS MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @TO@ MethodInvocation@@MethodName:assertThat:[template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()] @AT@ 5019 @LENGTH@ 107
---------------INS MethodInvocation@@MethodName:matching:[query(where("firstname").is("luke"))] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @AT@ 5019 @LENGTH@ 101
------------------INS MethodInvocation@@query(where("firstname").is("luke")) @TO@ MethodInvocation@@MethodName:matching:[query(where("firstname").is("luke"))] @AT@ 5083 @LENGTH@ 36
---------------------INS SimpleName@@MethodName:query:[where("firstname").is("luke")] @TO@ MethodInvocation@@query(where("firstname").is("luke")) @AT@ 5083 @LENGTH@ 36
------------------------INS MethodInvocation@@where("firstname").is("luke") @TO@ SimpleName@@MethodName:query:[where("firstname").is("luke")] @AT@ 5089 @LENGTH@ 29
---------------------------INS MethodInvocation@@MethodName:where:["firstname"] @TO@ MethodInvocation@@where("firstname").is("luke") @AT@ 5089 @LENGTH@ 18
------------------------------INS StringLiteral@@"firstname" @TO@ MethodInvocation@@MethodName:where:["firstname"] @AT@ 5095 @LENGTH@ 11
---------------------------INS SimpleName@@MethodName:is:["luke"] @TO@ MethodInvocation@@where("firstname").is("luke") @AT@ 5108 @LENGTH@ 10
------------------------------INS StringLiteral@@"luke" @TO@ SimpleName@@MethodName:is:["luke"] @AT@ 5111 @LENGTH@ 6
---------------INS MethodInvocation@@MethodName:inCollection:[STAR_WARS] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @AT@ 5019 @LENGTH@ 54
------------------INS SimpleName@@STAR_WARS @TO@ MethodInvocation@@MethodName:inCollection:[STAR_WARS] @AT@ 5063 @LENGTH@ 9
---------------INS MethodInvocation@@MethodName:query:[Document.class] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @AT@ 5019 @LENGTH@ 30
------------------INS TypeLiteral@@Document.class @TO@ MethodInvocation@@MethodName:query:[Document.class] @AT@ 5034 @LENGTH@ 14
---------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @AT@ 5019 @LENGTH@ 8
---------------INS SimpleName@@MethodName:all:[] @TO@ MethodInvocation@@template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all() @AT@ 5121 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(template.query(Document.class).inCollection(STAR_WARS).matching(query(where("firstname").is("luke"))).all()).hasSize(1) @AT@ 5135 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 5143 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @TO@ TypeDeclaration@@[public]RabbitTemplateTests,  @AT@ 22977 @LENGTH@ 922
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 22977 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 22984 @LENGTH@ 4
---INS SimpleName@@MethodName:testPublisherConnWithInvoke @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 22989 @LENGTH@ 27
---INS VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23023 @LENGTH@ 144
------INS SimpleType@@org.springframework.amqp.rabbit.connection.ConnectionFactory @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 23023 @LENGTH@ 60
------INS VariableDeclarationFragment@@cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 23084 @LENGTH@ 82
---------INS SimpleName@@cf @TO@ VariableDeclarationFragment@@cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23084 @LENGTH@ 2
---------INS MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationFragment@@cf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23089 @LENGTH@ 77
------------INS SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @TO@ MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23089 @LENGTH@ 77
---------------INS TypeLiteral@@org.springframework.amqp.rabbit.connection.ConnectionFactory.class @TO@ SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @AT@ 23099 @LENGTH@ 66
---INS VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23170 @LENGTH@ 145
------INS SimpleType@@org.springframework.amqp.rabbit.connection.ConnectionFactory @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 23170 @LENGTH@ 60
------INS VariableDeclarationFragment@@pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.ConnectionFactory pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class); @AT@ 23231 @LENGTH@ 83
---------INS SimpleName@@pcf @TO@ VariableDeclarationFragment@@pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23231 @LENGTH@ 3
---------INS MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @TO@ VariableDeclarationFragment@@pcf=mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23237 @LENGTH@ 77
------------INS SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @TO@ MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.ConnectionFactory.class) @AT@ 23237 @LENGTH@ 77
---------------INS TypeLiteral@@org.springframework.amqp.rabbit.connection.ConnectionFactory.class @TO@ SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.ConnectionFactory.class] @AT@ 23247 @LENGTH@ 66
---INS ExpressionStatement@@MethodInvocation:given(cf.getPublisherConnectionFactory()).willReturn(pcf) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23318 @LENGTH@ 58
------INS MethodInvocation@@given(cf.getPublisherConnectionFactory()).willReturn(pcf) @TO@ ExpressionStatement@@MethodInvocation:given(cf.getPublisherConnectionFactory()).willReturn(pcf) @AT@ 23318 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:given:[cf.getPublisherConnectionFactory()] @TO@ MethodInvocation@@given(cf.getPublisherConnectionFactory()).willReturn(pcf) @AT@ 23318 @LENGTH@ 41
------------INS MethodInvocation@@cf.getPublisherConnectionFactory() @TO@ MethodInvocation@@MethodName:given:[cf.getPublisherConnectionFactory()] @AT@ 23324 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory() @AT@ 23324 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory() @AT@ 23327 @LENGTH@ 31
---------INS SimpleName@@MethodName:willReturn:[pcf] @TO@ MethodInvocation@@given(cf.getPublisherConnectionFactory()).willReturn(pcf) @AT@ 23360 @LENGTH@ 15
------------INS SimpleName@@pcf @TO@ SimpleName@@MethodName:willReturn:[pcf] @AT@ 23371 @LENGTH@ 3
---INS VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(cf); @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23379 @LENGTH@ 49
------INS SimpleType@@RabbitTemplate @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(cf); @AT@ 23379 @LENGTH@ 14
------INS VariableDeclarationFragment@@template=new RabbitTemplate(cf) @TO@ VariableDeclarationStatement@@RabbitTemplate template=new RabbitTemplate(cf); @AT@ 23394 @LENGTH@ 33
---------INS SimpleName@@template @TO@ VariableDeclarationFragment@@template=new RabbitTemplate(cf) @AT@ 23394 @LENGTH@ 8
---------INS ClassInstanceCreation@@RabbitTemplate[cf] @TO@ VariableDeclarationFragment@@template=new RabbitTemplate(cf) @AT@ 23405 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@RabbitTemplate[cf] @AT@ 23405 @LENGTH@ 3
------------INS SimpleType@@RabbitTemplate @TO@ ClassInstanceCreation@@RabbitTemplate[cf] @AT@ 23409 @LENGTH@ 14
------------INS SimpleName@@cf @TO@ ClassInstanceCreation@@RabbitTemplate[cf] @AT@ 23424 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:template.setUsePublisherConnection(true) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23431 @LENGTH@ 41
------INS MethodInvocation@@template.setUsePublisherConnection(true) @TO@ ExpressionStatement@@MethodInvocation:template.setUsePublisherConnection(true) @AT@ 23431 @LENGTH@ 40
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.setUsePublisherConnection(true) @AT@ 23431 @LENGTH@ 8
---------INS SimpleName@@MethodName:setUsePublisherConnection:[true] @TO@ MethodInvocation@@template.setUsePublisherConnection(true) @AT@ 23440 @LENGTH@ 31
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setUsePublisherConnection:[true] @AT@ 23466 @LENGTH@ 4
---INS VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.Connection conn=mock(org.springframework.amqp.rabbit.connection.Connection.class); @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23475 @LENGTH@ 132
------INS SimpleType@@org.springframework.amqp.rabbit.connection.Connection @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.Connection conn=mock(org.springframework.amqp.rabbit.connection.Connection.class); @AT@ 23475 @LENGTH@ 53
------INS VariableDeclarationFragment@@conn=mock(org.springframework.amqp.rabbit.connection.Connection.class) @TO@ VariableDeclarationStatement@@org.springframework.amqp.rabbit.connection.Connection conn=mock(org.springframework.amqp.rabbit.connection.Connection.class); @AT@ 23529 @LENGTH@ 77
---------INS SimpleName@@conn @TO@ VariableDeclarationFragment@@conn=mock(org.springframework.amqp.rabbit.connection.Connection.class) @AT@ 23529 @LENGTH@ 4
---------INS MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.Connection.class) @TO@ VariableDeclarationFragment@@conn=mock(org.springframework.amqp.rabbit.connection.Connection.class) @AT@ 23536 @LENGTH@ 70
------------INS SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.Connection.class] @TO@ MethodInvocation@@mock(org.springframework.amqp.rabbit.connection.Connection.class) @AT@ 23536 @LENGTH@ 70
---------------INS TypeLiteral@@org.springframework.amqp.rabbit.connection.Connection.class @TO@ SimpleName@@MethodName:mock:[org.springframework.amqp.rabbit.connection.Connection.class] @AT@ 23546 @LENGTH@ 59
---INS VariableDeclarationStatement@@Channel channel=mock(Channel.class); @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23610 @LENGTH@ 38
------INS SimpleType@@Channel @TO@ VariableDeclarationStatement@@Channel channel=mock(Channel.class); @AT@ 23610 @LENGTH@ 7
------INS VariableDeclarationFragment@@channel=mock(Channel.class) @TO@ VariableDeclarationStatement@@Channel channel=mock(Channel.class); @AT@ 23618 @LENGTH@ 29
---------INS SimpleName@@channel @TO@ VariableDeclarationFragment@@channel=mock(Channel.class) @AT@ 23618 @LENGTH@ 7
---------INS MethodInvocation@@mock(Channel.class) @TO@ VariableDeclarationFragment@@channel=mock(Channel.class) @AT@ 23628 @LENGTH@ 19
------------INS SimpleName@@MethodName:mock:[Channel.class] @TO@ MethodInvocation@@mock(Channel.class) @AT@ 23628 @LENGTH@ 19
---------------INS TypeLiteral@@Channel.class @TO@ SimpleName@@MethodName:mock:[Channel.class] @AT@ 23633 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:given(pcf.createConnection()).willReturn(conn) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23651 @LENGTH@ 47
------INS MethodInvocation@@given(pcf.createConnection()).willReturn(conn) @TO@ ExpressionStatement@@MethodInvocation:given(pcf.createConnection()).willReturn(conn) @AT@ 23651 @LENGTH@ 46
---------INS MethodInvocation@@MethodName:given:[pcf.createConnection()] @TO@ MethodInvocation@@given(pcf.createConnection()).willReturn(conn) @AT@ 23651 @LENGTH@ 29
------------INS MethodInvocation@@pcf.createConnection() @TO@ MethodInvocation@@MethodName:given:[pcf.createConnection()] @AT@ 23657 @LENGTH@ 22
---------------INS SimpleName@@Name:pcf @TO@ MethodInvocation@@pcf.createConnection() @AT@ 23657 @LENGTH@ 3
---------------INS SimpleName@@MethodName:createConnection:[] @TO@ MethodInvocation@@pcf.createConnection() @AT@ 23661 @LENGTH@ 18
---------INS SimpleName@@MethodName:willReturn:[conn] @TO@ MethodInvocation@@given(pcf.createConnection()).willReturn(conn) @AT@ 23681 @LENGTH@ 16
------------INS SimpleName@@conn @TO@ SimpleName@@MethodName:willReturn:[conn] @AT@ 23692 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:given(conn.isOpen()).willReturn(true) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23701 @LENGTH@ 38
------INS MethodInvocation@@given(conn.isOpen()).willReturn(true) @TO@ ExpressionStatement@@MethodInvocation:given(conn.isOpen()).willReturn(true) @AT@ 23701 @LENGTH@ 37
---------INS MethodInvocation@@MethodName:given:[conn.isOpen()] @TO@ MethodInvocation@@given(conn.isOpen()).willReturn(true) @AT@ 23701 @LENGTH@ 20
------------INS MethodInvocation@@conn.isOpen() @TO@ MethodInvocation@@MethodName:given:[conn.isOpen()] @AT@ 23707 @LENGTH@ 13
---------------INS SimpleName@@Name:conn @TO@ MethodInvocation@@conn.isOpen() @AT@ 23707 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isOpen:[] @TO@ MethodInvocation@@conn.isOpen() @AT@ 23712 @LENGTH@ 8
---------INS SimpleName@@MethodName:willReturn:[true] @TO@ MethodInvocation@@given(conn.isOpen()).willReturn(true) @AT@ 23722 @LENGTH@ 16
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:willReturn:[true] @AT@ 23733 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:given(conn.createChannel(false)).willReturn(channel) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23742 @LENGTH@ 53
------INS MethodInvocation@@given(conn.createChannel(false)).willReturn(channel) @TO@ ExpressionStatement@@MethodInvocation:given(conn.createChannel(false)).willReturn(channel) @AT@ 23742 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:given:[conn.createChannel(false)] @TO@ MethodInvocation@@given(conn.createChannel(false)).willReturn(channel) @AT@ 23742 @LENGTH@ 32
------------INS MethodInvocation@@conn.createChannel(false) @TO@ MethodInvocation@@MethodName:given:[conn.createChannel(false)] @AT@ 23748 @LENGTH@ 25
---------------INS SimpleName@@Name:conn @TO@ MethodInvocation@@conn.createChannel(false) @AT@ 23748 @LENGTH@ 4
---------------INS SimpleName@@MethodName:createChannel:[false] @TO@ MethodInvocation@@conn.createChannel(false) @AT@ 23753 @LENGTH@ 20
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createChannel:[false] @AT@ 23767 @LENGTH@ 5
---------INS SimpleName@@MethodName:willReturn:[channel] @TO@ MethodInvocation@@given(conn.createChannel(false)).willReturn(channel) @AT@ 23775 @LENGTH@ 19
------------INS SimpleName@@channel @TO@ SimpleName@@MethodName:willReturn:[channel] @AT@ 23786 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:template.invoke(t -> null) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23798 @LENGTH@ 27
------INS MethodInvocation@@template.invoke(t -> null) @TO@ ExpressionStatement@@MethodInvocation:template.invoke(t -> null) @AT@ 23798 @LENGTH@ 26
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.invoke(t -> null) @AT@ 23798 @LENGTH@ 8
---------INS SimpleName@@MethodName:invoke:[t -> null] @TO@ MethodInvocation@@template.invoke(t -> null) @AT@ 23807 @LENGTH@ 17
------------INS LambdaExpression@@t -> null @TO@ SimpleName@@MethodName:invoke:[t -> null] @AT@ 23814 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@t @TO@ LambdaExpression@@t -> null @AT@ 23814 @LENGTH@ 1
------------------INS SimpleName@@t @TO@ VariableDeclarationFragment@@t @AT@ 23814 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ LambdaExpression@@t -> null @AT@ 23819 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:verify(pcf).createConnection() @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23828 @LENGTH@ 31
------INS MethodInvocation@@verify(pcf).createConnection() @TO@ ExpressionStatement@@MethodInvocation:verify(pcf).createConnection() @AT@ 23828 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:verify:[pcf] @TO@ MethodInvocation@@verify(pcf).createConnection() @AT@ 23828 @LENGTH@ 11
------------INS SimpleName@@pcf @TO@ MethodInvocation@@MethodName:verify:[pcf] @AT@ 23835 @LENGTH@ 3
---------INS SimpleName@@MethodName:createConnection:[] @TO@ MethodInvocation@@verify(pcf).createConnection() @AT@ 23840 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:verify(conn).createChannel(false) @TO@ MethodDeclaration@@public, void, MethodName:testPublisherConnWithInvoke,  @AT@ 23862 @LENGTH@ 34
------INS MethodInvocation@@verify(conn).createChannel(false) @TO@ ExpressionStatement@@MethodInvocation:verify(conn).createChannel(false) @AT@ 23862 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:verify:[conn] @TO@ MethodInvocation@@verify(conn).createChannel(false) @AT@ 23862 @LENGTH@ 12
------------INS SimpleName@@conn @TO@ MethodInvocation@@MethodName:verify:[conn] @AT@ 23869 @LENGTH@ 4
---------INS SimpleName@@MethodName:createChannel:[false] @TO@ MethodInvocation@@verify(conn).createChannel(false) @AT@ 23875 @LENGTH@ 20
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createChannel:[false] @AT@ 23889 @LENGTH@ 5


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ImplicitTokenRequest, TokenRequest @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ImplicitTokenRequest, TokenRequest @AT@ 859 @LENGTH@ 454
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ImplicitTokenRequest, TokenRequest @AT@ 1065 @LENGTH@ 11


INS MethodDeclaration@@List<PersonWithAllConstructor>, MethodName:findAllByCreatedAtBefore, Instant instant,  @TO@ TypeDeclaration@@[public]PersonRepository, [Neo4jRepository<PersonWithAllConstructor,Long>] @AT@ 6546 @LENGTH@ 42
---INS ParameterizedType@@List<PersonWithAllConstructor> @TO@ MethodDeclaration@@List<PersonWithAllConstructor>, MethodName:findAllByCreatedAtBefore, Instant instant,  @AT@ 6515 @LENGTH@ 30
------INS SimpleType@@List @TO@ ParameterizedType@@List<PersonWithAllConstructor> @AT@ 6515 @LENGTH@ 4
------INS SimpleType@@PersonWithAllConstructor @TO@ ParameterizedType@@List<PersonWithAllConstructor> @AT@ 6520 @LENGTH@ 24
---INS SimpleName@@MethodName:findAllByCreatedAtBefore @TO@ MethodDeclaration@@List<PersonWithAllConstructor>, MethodName:findAllByCreatedAtBefore, Instant instant,  @AT@ 6546 @LENGTH@ 24
---INS SingleVariableDeclaration@@Instant instant @TO@ MethodDeclaration@@List<PersonWithAllConstructor>, MethodName:findAllByCreatedAtBefore, Instant instant,  @AT@ 6571 @LENGTH@ 15
------INS SimpleType@@Instant @TO@ SingleVariableDeclaration@@Instant instant @AT@ 6571 @LENGTH@ 7
------INS SimpleName@@instant @TO@ SingleVariableDeclaration@@Instant instant @AT@ 6579 @LENGTH@ 7


UPD TypeDeclaration@@[public, final]AuthorizationServerEndpointsConfigurer,  @TO@ [@Deprecated, public, final]AuthorizationServerEndpointsConfigurer,  @AT@ 5446 @LENGTH@ 16472
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, final]AuthorizationServerEndpointsConfigurer,  @AT@ 5623 @LENGTH@ 11


UPD VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 4954 @LENGTH@ 217
---UPD VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 4993 @LENGTH@ 177
------UPD MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 5024 @LENGTH@ 146
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 5024 @LENGTH@ 149


UPD ExpressionStatement@@Assignment:handler=(ContentHandler)this.contentHandlerClass.newInstance() @TO@ Assignment:handler=this.contentHandlerClass.newInstance() @AT@ 2260 @LENGTH@ 66
---UPD Assignment@@handler=(ContentHandler)this.contentHandlerClass.newInstance() @TO@ handler=this.contentHandlerClass.newInstance() @AT@ 2260 @LENGTH@ 65
------DEL CastExpression@@(ContentHandler)this.contentHandlerClass.newInstance() @AT@ 2270 @LENGTH@ 55
---------DEL SimpleType@@ContentHandler @AT@ 2271 @LENGTH@ 14
------MOV MethodInvocation@@this.contentHandlerClass.newInstance() @TO@ Assignment@@handler=(ContentHandler)this.contentHandlerClass.newInstance() @AT@ 2287 @LENGTH@ 38


UPD TypeDeclaration@@[public, static]AdvancedRestSwaggerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedRestSwaggerEndpointBuilder, [EndpointProducerBuilder] @AT@ 1752 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 1759 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedFreemarkerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedFreemarkerEndpointBuilder, [EndpointProducerBuilder] @AT@ 5036 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 5043 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 43568 @LENGTH@ 404
---DEL Modifier@@public @AT@ 43568 @LENGTH@ 6


UPD CatchClause@@catch (RuntimeException ex) {  if (sample != null) {    this.micrometerHolder.failure(sample,data instanceof Message ? ((Message)data).getMessageProperties().getConsumerQueue() : queuesAsListString(),ex.getClass().getSimpleName());  }  Message message;  if (data instanceof Message) {    message=(Message)data;  } else {    message=((List<Message>)data).get(0);  }  if (message.getMessageProperties().isFinalRetryForMessageWithNoId()) {    if (this.statefulRetryFatalWithNullMessageId) {      throw new FatalListenerExecutionException("Illegal null id in message. Failed to manage retry for message: " + message,ex);    } else {      throw new ListenerExecutionFailedException("Cannot retry message more than once without an ID",new AmqpRejectAndDontRequeueException("Not retryable; rejecting and not requeuing",ex),message);    }  }  handleListenerException(ex);  throw ex;} @TO@ catch (RuntimeException ex) {  if (sample != null) {    this.micrometerHolder.failure(sample,data instanceof Message ? ((Message)data).getMessageProperties().getConsumerQueue() : queuesAsListString(),ex.getClass().getSimpleName());  }  Message message;  if (data instanceof Message) {    message=(Message)data;  } else {    message=((List<Message>)data).get(0);  }  checkStatefulRetry(ex,message);  handleListenerException(ex);  throw ex;} @AT@ 47335 @LENGTH@ 958
---INS ExpressionStatement@@MethodInvocation:checkStatefulRetry(ex,message) @TO@ CatchClause@@catch (RuntimeException ex) {  if (sample != null) {    this.micrometerHolder.failure(sample,data instanceof Message ? ((Message)data).getMessageProperties().getConsumerQueue() : queuesAsListString(),ex.getClass().getSimpleName());  }  Message message;  if (data instanceof Message) {    message=(Message)data;  } else {    message=((List<Message>)data).get(0);  }  if (message.getMessageProperties().isFinalRetryForMessageWithNoId()) {    if (this.statefulRetryFatalWithNullMessageId) {      throw new FatalListenerExecutionException("Illegal null id in message. Failed to manage retry for message: " + message,ex);    } else {      throw new ListenerExecutionFailedException("Cannot retry message more than once without an ID",new AmqpRejectAndDontRequeueException("Not retryable; rejecting and not requeuing",ex),message);    }  }  handleListenerException(ex);  throw ex;} @AT@ 47742 @LENGTH@ 32
------INS MethodInvocation@@checkStatefulRetry(ex,message) @TO@ ExpressionStatement@@MethodInvocation:checkStatefulRetry(ex,message) @AT@ 47742 @LENGTH@ 31
---------INS SimpleName@@MethodName:checkStatefulRetry:[ex, message] @TO@ MethodInvocation@@checkStatefulRetry(ex,message) @AT@ 47742 @LENGTH@ 31
------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:checkStatefulRetry:[ex, message] @AT@ 47761 @LENGTH@ 2
------------INS SimpleName@@message @TO@ SimpleName@@MethodName:checkStatefulRetry:[ex, message] @AT@ 47765 @LENGTH@ 7


UPD TypeDeclaration@@[public]DefaultOAuth2RequestValidator, [OAuth2RequestValidator] @TO@ [@Deprecated, public]DefaultOAuth2RequestValidator, [OAuth2RequestValidator] @AT@ 557 @LENGTH@ 929
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2RequestValidator, [OAuth2RequestValidator] @AT@ 734 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]ElasticsearchEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ElasticsearchEndpointBuilder, [EndpointProducerBuilder] @AT@ 1454 @LENGTH@ 8075
---DEL Modifier@@static @AT@ 1461 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:amq.getConfiguration().getConnectionFactory() @TO@ MethodInvocation:amq.getConfiguration().getOrCreateConnectionFactory() @AT@ 2113 @LENGTH@ 46
---UPD MethodInvocation@@amq.getConfiguration().getConnectionFactory() @TO@ amq.getConfiguration().getOrCreateConnectionFactory() @AT@ 2113 @LENGTH@ 45
------UPD SimpleName@@MethodName:getConnectionFactory:[] @TO@ MethodName:getOrCreateConnectionFactory:[] @AT@ 2136 @LENGTH@ 22


MOV FieldDeclaration@@protected, static, final, int, [UNDERTOW_PORT=AvailablePortFinder.getNextAvailable()] @TO@ TypeDeclaration@@[public]SlackProducerTest, CamelTestSupport @AT@ 1360 @LENGTH@ 82


UPD VariableDeclarationStatement@@String description=null; @TO@ String description; @AT@ 4192 @LENGTH@ 26
---UPD VariableDeclarationFragment@@description=null @TO@ description @AT@ 4199 @LENGTH@ 18
------DEL NullLiteral@@null @AT@ 4213 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:preWriteCheck() @TO@ MethodInvocation:preWriteCheck(exchange) @AT@ 4127 @LENGTH@ 16
---UPD MethodInvocation@@MethodName:preWriteCheck:[] @TO@ preWriteCheck(exchange) @AT@ 4127 @LENGTH@ 15
------INS SimpleName@@MethodName:preWriteCheck:[exchange] @TO@ MethodInvocation@@MethodName:preWriteCheck:[] @AT@ 4127 @LENGTH@ 23
---------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:preWriteCheck:[exchange] @AT@ 4141 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]AdvancedEC2EndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedEC2EndpointBuilder, [EndpointProducerBuilder] @AT@ 2286 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2293 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedResponseTypeException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnsupportedResponseTypeException, OAuth2Exception @AT@ 95 @LENGTH@ 367
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnsupportedResponseTypeException, OAuth2Exception @AT@ 301 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedGoogleCalendarStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedGoogleCalendarStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 8166 @LENGTH@ 2194
---DEL Modifier@@static @AT@ 8173 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedScpEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedScpEndpointBuilder, [EndpointProducerBuilder] @AT@ 12369 @LENGTH@ 5371
---DEL Modifier@@static @AT@ 12376 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]MetricsTimerAction,  @TO@ [static]MetricsTimerAction,  @AT@ 9001 @LENGTH@ 66
---DEL Modifier@@public @AT@ 9001 @LENGTH@ 6


UPD MethodDeclaration@@default, NovaEndpointBuilder, MethodName:nova, String path,  @TO@ default, NovaEndpointBuilder, MethodName:openstackNova, String path,  @AT@ 7354 @LENGTH@ 364
---UPD SimpleName@@MethodName:nova @TO@ MethodName:openstackNova @AT@ 7382 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]OutputStyle,  @TO@ [static]OutputStyle,  @AT@ 22633 @LENGTH@ 67
---DEL Modifier@@public @AT@ 22633 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]Flag,  @TO@ [static]Flag,  @AT@ 46698 @LENGTH@ 668
---DEL Modifier@@public @AT@ 46698 @LENGTH@ 6


DEL IfStatement@@if (isJava19()) {  return;} @AT@ 2490 @LENGTH@ 47
---DEL MethodInvocation@@MethodName:isJava19:[] @AT@ 2494 @LENGTH@ 10
---DEL Block@@ThenBody:{  return;} @AT@ 2506 @LENGTH@ 31
------DEL ReturnStatement@@ @AT@ 2520 @LENGTH@ 7


UPD MethodDeclaration@@default, SqsEndpointBuilder, MethodName:sqs, String path,  @TO@ default, SqsEndpointBuilder, MethodName:awsSqs, String path,  @AT@ 81173 @LENGTH@ 350
---UPD SimpleName@@MethodName:sqs @TO@ MethodName:awsSqs @AT@ 81200 @LENGTH@ 3


UPD VariableDeclarationStatement@@CacheContainer container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get(); @TO@ CacheContainer container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get(); @AT@ 1893 @LENGTH@ 182
---UPD VariableDeclarationFragment@@container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @TO@ container=new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @AT@ 1908 @LENGTH@ 166
------UPD MethodInvocation@@new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(true),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @TO@ new PassiveServiceSupplier<CacheContainer>(context.getServiceRegistry(false),InfinispanRequirement.CONTAINER.getServiceName(context,containerName)).get() @AT@ 1920 @LENGTH@ 154
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(true), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @TO@ PassiveServiceSupplier<CacheContainer>[context.getServiceRegistry(false), InfinispanRequirement.CONTAINER.getServiceName(context,containerName)] @AT@ 1920 @LENGTH@ 148
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 1963 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 1971 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 1990 @LENGTH@ 4


UPD CatchClause@@catch (AmqpConnectException ex) {  throw ex;} @TO@ catch (AmqpConnectException ex) {  if (logger.isDebugEnabled()) {    logger.debug("Connection error, deferring directReplyTo detection");  }  throw ex;} @AT@ 37569 @LENGTH@ 52
---INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Connection error, deferring directReplyTo detection");} @TO@ CatchClause@@catch (AmqpConnectException ex) {  throw ex;} @AT@ 37631 @LENGTH@ 110
------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Connection error, deferring directReplyTo detection");} @AT@ 37635 @LENGTH@ 23
---------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 37635 @LENGTH@ 6
---------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 37642 @LENGTH@ 16
------INS Block@@ThenBody:{  logger.debug("Connection error, deferring directReplyTo detection");} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Connection error, deferring directReplyTo detection");} @AT@ 37660 @LENGTH@ 81
---------INS ExpressionStatement@@MethodInvocation:logger.debug("Connection error, deferring directReplyTo detection") @TO@ Block@@ThenBody:{  logger.debug("Connection error, deferring directReplyTo detection");} @AT@ 37667 @LENGTH@ 68
------------INS MethodInvocation@@logger.debug("Connection error, deferring directReplyTo detection") @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Connection error, deferring directReplyTo detection") @AT@ 37667 @LENGTH@ 67
---------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Connection error, deferring directReplyTo detection") @AT@ 37667 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:["Connection error, deferring directReplyTo detection"] @TO@ MethodInvocation@@logger.debug("Connection error, deferring directReplyTo detection") @AT@ 37674 @LENGTH@ 60
------------------INS StringLiteral@@"Connection error, deferring directReplyTo detection" @TO@ SimpleName@@MethodName:debug:["Connection error, deferring directReplyTo detection"] @AT@ 37680 @LENGTH@ 53


UPD TypeDeclaration@@[public, static]FopEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]FopEndpointBuilder, [EndpointProducerBuilder] @AT@ 1431 @LENGTH@ 2265
---DEL Modifier@@static @AT@ 1438 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:this.authorizationRequestMatcher.extractUriTemplateVariables(request).get(REGISTRATION_ID_URI_VARIABLE_NAME) @TO@ MethodInvocation:this.authorizationRequestMatcher.matcher(request).getVariables().get(REGISTRATION_ID_URI_VARIABLE_NAME) @AT@ 6950 @LENGTH@ 122
---UPD MethodInvocation@@this.authorizationRequestMatcher.extractUriTemplateVariables(request).get(REGISTRATION_ID_URI_VARIABLE_NAME) @TO@ this.authorizationRequestMatcher.matcher(request).getVariables().get(REGISTRATION_ID_URI_VARIABLE_NAME) @AT@ 6957 @LENGTH@ 114
------UPD MethodInvocation@@MethodName:extractUriTemplateVariables:[request] @TO@ MethodName:matcher:[request] @AT@ 6957 @LENGTH@ 75
------INS MethodInvocation@@MethodName:getVariables:[] @TO@ MethodInvocation@@this.authorizationRequestMatcher.extractUriTemplateVariables(request).get(REGISTRATION_ID_URI_VARIABLE_NAME) @AT@ 6982 @LENGTH@ 70


UPD EnhancedForStatement@@for (File dir : others) {  if (!features.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @TO@ for (File dir : others) {  if (!features.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName());  boolean special3="camel-debezium".equals(dir.getName());  if (special || special2 || special3) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @AT@ 16226 @LENGTH@ 1775
---UPD VariableDeclarationStatement@@boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()); @TO@ boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()); @AT@ 16797 @LENGTH@ 512
------UPD VariableDeclarationFragment@@special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()) @AT@ 16805 @LENGTH@ 503
---------UPD InfixExpression@@"camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ "camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()) @AT@ 16816 @LENGTH@ 492
---INS VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @TO@ EnhancedForStatement@@for (File dir : others) {  if (!features.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @AT@ 17264 @LENGTH@ 58
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 17264 @LENGTH@ 7
------INS VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 17272 @LENGTH@ 49
---------MOV MethodInvocation@@"camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 17270 @LENGTH@ 38
---------INS SimpleName@@special3 @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 17272 @LENGTH@ 8
---UPD IfStatement@@if (special || special2) {  continue;} @TO@ if (special || special2 || special3) {  continue;} @AT@ 17330 @LENGTH@ 82
------UPD InfixExpression@@special || special2 @TO@ special || special2 || special3 @AT@ 17334 @LENGTH@ 19
---------INS SimpleName@@special3 @TO@ InfixExpression@@special || special2 @AT@ 17370 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(connection.getClientName(),equalTo("clientName")) @TO@ MethodInvocation:assertThat(connection.getClientName()).isEqualTo("clientName") @AT@ 2437 @LENGTH@ 62
---UPD MethodInvocation@@assertThat(connection.getClientName(),equalTo("clientName")) @TO@ assertThat(connection.getClientName()).isEqualTo("clientName") @AT@ 2437 @LENGTH@ 61
------DEL SimpleName@@MethodName:assertThat:[connection.getClientName(), equalTo("clientName")] @AT@ 2437 @LENGTH@ 61
---------DEL MethodInvocation@@connection.getClientName() @AT@ 2448 @LENGTH@ 26
---------DEL MethodInvocation@@equalTo("clientName") @AT@ 2476 @LENGTH@ 21
------INS MethodInvocation@@MethodName:assertThat:[connection.getClientName()] @TO@ MethodInvocation@@assertThat(connection.getClientName(),equalTo("clientName")) @AT@ 2438 @LENGTH@ 38
---------INS MethodInvocation@@connection.getClientName() @TO@ MethodInvocation@@MethodName:assertThat:[connection.getClientName()] @AT@ 2449 @LENGTH@ 26
------------MOV SimpleName@@Name:connection @TO@ MethodInvocation@@connection.getClientName() @AT@ 2448 @LENGTH@ 10
------------MOV SimpleName@@MethodName:getClientName:[] @TO@ MethodInvocation@@connection.getClientName() @AT@ 2459 @LENGTH@ 15
------MOV SimpleName@@MethodName:equalTo:["clientName"] @TO@ MethodInvocation@@assertThat(connection.getClientName(),equalTo("clientName")) @AT@ 2476 @LENGTH@ 21


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UserApprovalRequiredException, RuntimeException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UserApprovalRequiredException, RuntimeException @AT@ 875 @LENGTH@ 1203
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UserApprovalRequiredException, RuntimeException @AT@ 1080 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuthAuthenticationHandler,  @TO@ [@Deprecated, public]OAuthAuthenticationHandler,  @AT@ 415 @LENGTH@ 807
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthAuthenticationHandler,  @AT@ 636 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:when(mongoOperationsMock.remove(any(),any(),anyString())).thenReturn(deleteResultMock) @TO@ MethodDeclaration@@public, void, MethodName:setUp,  @AT@ 4457 @LENGTH@ 89
---INS MethodInvocation@@when(mongoOperationsMock.remove(any(),any(),anyString())).thenReturn(deleteResultMock) @TO@ ExpressionStatement@@MethodInvocation:when(mongoOperationsMock.remove(any(),any(),anyString())).thenReturn(deleteResultMock) @AT@ 4457 @LENGTH@ 88
------INS MethodInvocation@@MethodName:when:[mongoOperationsMock.remove(any(),any(),anyString())] @TO@ MethodInvocation@@when(mongoOperationsMock.remove(any(),any(),anyString())).thenReturn(deleteResultMock) @AT@ 4457 @LENGTH@ 59
---------INS MethodInvocation@@mongoOperationsMock.remove(any(),any(),anyString()) @TO@ MethodInvocation@@MethodName:when:[mongoOperationsMock.remove(any(),any(),anyString())] @AT@ 4462 @LENGTH@ 53
------------INS SimpleName@@Name:mongoOperationsMock @TO@ MethodInvocation@@mongoOperationsMock.remove(any(),any(),anyString()) @AT@ 4462 @LENGTH@ 19
------------INS SimpleName@@MethodName:remove:[any(), any(), anyString()] @TO@ MethodInvocation@@mongoOperationsMock.remove(any(),any(),anyString()) @AT@ 4482 @LENGTH@ 33
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:remove:[any(), any(), anyString()] @AT@ 4489 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:remove:[any(), any(), anyString()] @AT@ 4496 @LENGTH@ 5
---------------INS MethodInvocation@@MethodName:anyString:[] @TO@ SimpleName@@MethodName:remove:[any(), any(), anyString()] @AT@ 4503 @LENGTH@ 11
------INS SimpleName@@MethodName:thenReturn:[deleteResultMock] @TO@ MethodInvocation@@when(mongoOperationsMock.remove(any(),any(),anyString())).thenReturn(deleteResultMock) @AT@ 4517 @LENGTH@ 28
---------INS SimpleName@@deleteResultMock @TO@ SimpleName@@MethodName:thenReturn:[deleteResultMock] @AT@ 4528 @LENGTH@ 16


INS FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @TO@ TypeDeclaration@@[public]NimbusJwtDecoderTests,  @AT@ 8439 @LENGTH@ 103
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 8439 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 8447 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 8454 @LENGTH@ 5
---INS SimpleType@@MediaType @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 8460 @LENGTH@ 9
---INS VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @TO@ FieldDeclaration@@private, static, final, MediaType, [APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json")] @AT@ 8470 @LENGTH@ 71
------INS SimpleName@@APPLICATION_JWK_SET_JSON @TO@ VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @AT@ 8470 @LENGTH@ 24
------INS ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @TO@ VariableDeclarationFragment@@APPLICATION_JWK_SET_JSON=new MediaType("application","jwk-set+json") @AT@ 8497 @LENGTH@ 44
---------INS New@@new @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 8497 @LENGTH@ 3
---------INS SimpleType@@MediaType @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 8501 @LENGTH@ 9
---------INS StringLiteral@@"application" @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 8511 @LENGTH@ 13
---------INS StringLiteral@@"jwk-set+json" @TO@ ClassInstanceCreation@@MediaType["application", "jwk-set+json"] @AT@ 8526 @LENGTH@ 14


UPD TypeDeclaration@@[public]UnauthenticatedRequestTokenProcessingFilter, OAuthProviderProcessingFilter @TO@ [@Deprecated, public]UnauthenticatedRequestTokenProcessingFilter, OAuthProviderProcessingFilter @AT@ 1809 @LENGTH@ 4014
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UnauthenticatedRequestTokenProcessingFilter, OAuthProviderProcessingFilter @AT@ 2030 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]EtcdNamespace,  @TO@ [static]EtcdNamespace,  @AT@ 45508 @LENGTH@ 68
---DEL Modifier@@public @AT@ 45508 @LENGTH@ 6


UPD MethodDeclaration@@protected, ProviderManager, MethodName:performBuild,  @TO@ protected, ProviderManager, MethodName:performBuild, Exception,  @AT@ 10150 @LENGTH@ 607
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, ProviderManager, MethodName:performBuild,  @AT@ 10198 @LENGTH@ 9


UPD MethodDeclaration@@public, Task<? extends Serializable>, MethodName:processCurrentTask, MapRedTask currTask, ConditionalTask conditionalTask, Context context, SemanticException,  @TO@ public, Task<?>, MethodName:processCurrentTask, MapRedTask currTask, ConditionalTask conditionalTask, Context context, SemanticException,  @AT@ 9343 @LENGTH@ 5815
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9350 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> listTasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> listTasks=new ArrayList<Task<?>>(); @AT@ 11027 @LENGTH@ 93
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 11027 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 11032 @LENGTH@ 28
------UPD VariableDeclarationFragment@@listTasks=new ArrayList<Task<? extends Serializable>>() @TO@ listTasks=new ArrayList<Task<?>>() @AT@ 11062 @LENGTH@ 57
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 11074 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 11078 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 11088 @LENGTH@ 28
---UPD VariableDeclarationStatement@@HashMap<Task<? extends Serializable>,Set<String>> taskToAliases=new LinkedHashMap<Task<? extends Serializable>,Set<String>>(); @TO@ HashMap<Task<?>,Set<String>> taskToAliases=new LinkedHashMap<Task<?>,Set<String>>(); @AT@ 11298 @LENGTH@ 138
------UPD ParameterizedType@@HashMap<Task<? extends Serializable>,Set<String>> @TO@ HashMap<Task<?>,Set<String>> @AT@ 11298 @LENGTH@ 50
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 11306 @LENGTH@ 28
------UPD VariableDeclarationFragment@@taskToAliases=new LinkedHashMap<Task<? extends Serializable>,Set<String>>() @TO@ taskToAliases=new LinkedHashMap<Task<?>,Set<String>>() @AT@ 11349 @LENGTH@ 86
---------UPD ClassInstanceCreation@@LinkedHashMap<Task<? extends Serializable>,Set<String>>[] @TO@ LinkedHashMap<Task<?>,Set<String>>[] @AT@ 11373 @LENGTH@ 62
------------UPD ParameterizedType@@LinkedHashMap<Task<? extends Serializable>,Set<String>> @TO@ LinkedHashMap<Task<?>,Set<String>> @AT@ 11377 @LENGTH@ 56
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 11391 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]EndpointType,  @TO@ [static]EndpointType,  @AT@ 8382 @LENGTH@ 68
---DEL Modifier@@public @AT@ 8382 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 12222 @LENGTH@ 404
---DEL Modifier@@public @AT@ 12222 @LENGTH@ 6


MOV MethodDeclaration@@private, String, MethodName:getFtpUrl,  @TO@ TypeDeclaration@@[public]FromFtpRemoteFileFilterTest, FtpServerTestSupport @AT@ 1417 @LENGTH@ 135


UPD MethodDeclaration@@protected, void, MethodName:handle, HttpServletRequest request, HttpServletResponse response, Authentication authentication, IOException,  @TO@ protected, void, MethodName:handle, HttpServletRequest request, HttpServletResponse response, Authentication authentication, IOException, ServletException,  @AT@ 3257 @LENGTH@ 422
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@protected, void, MethodName:handle, HttpServletRequest request, HttpServletResponse response, Authentication authentication, IOException,  @AT@ 3430 @LENGTH@ 16


UPD TypeDeclaration@@[public, static]BonitaEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]BonitaEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1401 @LENGTH@ 2547
---DEL Modifier@@static @AT@ 1408 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthConsumerTokenServices,  @TO@ [@Deprecated, public]OAuthConsumerTokenServices,  @AT@ 870 @LENGTH@ 978
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerTokenServices,  @AT@ 1090 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42109 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42109 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]CwEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]CwEndpointBuilder, [EndpointProducerBuilder] @AT@ 1438 @LENGTH@ 4904
---DEL Modifier@@static @AT@ 1445 @LENGTH@ 6


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get(); @AT@ 2271 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get() @AT@ 2283 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(!executable.isReadOnly()),name).get() @AT@ 2291 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(!executable.isReadOnly()), name] @AT@ 2291 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(!executable.isReadOnly()) @AT@ 2331 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[!executable.isReadOnly()] @AT@ 2339 @LENGTH@ 24
------------------DEL BooleanLiteral@@true @AT@ 2358 @LENGTH@ 4
------------------INS PrefixExpression@@!executable.isReadOnly() @TO@ SimpleName@@MethodName:getServiceRegistry:[true] @AT@ 2511 @LENGTH@ 24
---------------------INS Operator@@! @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 2511 @LENGTH@ 1
---------------------INS MethodInvocation@@executable.isReadOnly() @TO@ PrefixExpression@@!executable.isReadOnly() @AT@ 2512 @LENGTH@ 23
------------------------INS SimpleName@@Name:executable @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 2512 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:isReadOnly:[] @TO@ MethodInvocation@@executable.isReadOnly() @AT@ 2523 @LENGTH@ 12
------------INS SimpleName@@name @TO@ ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2538 @LENGTH@ 4


UPD TypeDeclaration@@[public]SharedConsumerSecret, [SignatureSecret] @TO@ [@Deprecated, public]SharedConsumerSecret, [SignatureSecret] @AT@ 834 @LENGTH@ 167
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SharedConsumerSecret, [SignatureSecret] @AT@ 1055 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertTrue(names.contains("hystrix")) @TO@ MethodInvocation:assertTrue(names.contains("circuitBreaker")) @AT@ 4695 @LENGTH@ 38
---UPD MethodInvocation@@assertTrue(names.contains("hystrix")) @TO@ assertTrue(names.contains("circuitBreaker")) @AT@ 4695 @LENGTH@ 37
------UPD SimpleName@@MethodName:assertTrue:[names.contains("hystrix")] @TO@ MethodName:assertTrue:[names.contains("circuitBreaker")] @AT@ 4695 @LENGTH@ 37
---------UPD MethodInvocation@@names.contains("hystrix") @TO@ names.contains("circuitBreaker") @AT@ 4706 @LENGTH@ 25
------------UPD SimpleName@@MethodName:contains:["hystrix"] @TO@ MethodName:contains:["circuitBreaker"] @AT@ 4712 @LENGTH@ 19
---------------UPD StringLiteral@@"hystrix" @TO@ "circuitBreaker" @AT@ 4721 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:confirmsSimple,  @TO@ TypeDeclaration@@[public]CachingConnectionFactoryTests, AbstractConnectionFactoryTests @AT@ 71594 @LENGTH@ 675
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71594 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71601 @LENGTH@ 4
---INS SimpleName@@MethodName:confirmsSimple @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71606 @LENGTH@ 14
---INS VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71627 @LENGTH@ 90
------INS SimpleType@@CachingConnectionFactory @TO@ VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @AT@ 71627 @LENGTH@ 24
------INS VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @TO@ VariableDeclarationStatement@@CachingConnectionFactory cf=new CachingConnectionFactory(mock(ConnectionFactory.class)); @AT@ 71652 @LENGTH@ 64
---------INS SimpleName@@cf @TO@ VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @AT@ 71652 @LENGTH@ 2
---------INS ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @TO@ VariableDeclarationFragment@@cf=new CachingConnectionFactory(mock(ConnectionFactory.class)) @AT@ 71657 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 71657 @LENGTH@ 3
------------INS SimpleType@@CachingConnectionFactory @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 71661 @LENGTH@ 24
------------INS MethodInvocation@@mock(ConnectionFactory.class) @TO@ ClassInstanceCreation@@CachingConnectionFactory[mock(ConnectionFactory.class)] @AT@ 71686 @LENGTH@ 29
---------------INS SimpleName@@MethodName:mock:[ConnectionFactory.class] @TO@ MethodInvocation@@mock(ConnectionFactory.class) @AT@ 71686 @LENGTH@ 29
------------------INS TypeLiteral@@ConnectionFactory.class @TO@ SimpleName@@MethodName:mock:[ConnectionFactory.class] @AT@ 71691 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(false) @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71720 @LENGTH@ 37
------INS MethodInvocation@@cf.setSimplePublisherConfirms(false) @TO@ ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(false) @AT@ 71720 @LENGTH@ 36
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(false) @AT@ 71720 @LENGTH@ 2
---------INS SimpleName@@MethodName:setSimplePublisherConfirms:[false] @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(false) @AT@ 71723 @LENGTH@ 33
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setSimplePublisherConfirms:[false] @AT@ 71750 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71760 @LENGTH@ 53
------INS MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 71760 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 71760 @LENGTH@ 42
------------INS MethodInvocation@@cf.isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @AT@ 71771 @LENGTH@ 30
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 71771 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 71774 @LENGTH@ 27
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 71803 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71816 @LENGTH@ 85
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 71816 @LENGTH@ 84
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 71816 @LENGTH@ 74
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @AT@ 71827 @LENGTH@ 62
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 71827 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 71827 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 71862 @LENGTH@ 27
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 71891 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(true) @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71904 @LENGTH@ 36
------INS MethodInvocation@@cf.setSimplePublisherConfirms(true) @TO@ ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(true) @AT@ 71904 @LENGTH@ 35
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(true) @AT@ 71904 @LENGTH@ 2
---------INS SimpleName@@MethodName:setSimplePublisherConfirms:[true] @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(true) @AT@ 71907 @LENGTH@ 32
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setSimplePublisherConfirms:[true] @AT@ 71934 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71943 @LENGTH@ 52
------INS MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isTrue() @AT@ 71943 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isTrue() @AT@ 71943 @LENGTH@ 42
------------INS MethodInvocation@@cf.isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @AT@ 71954 @LENGTH@ 30
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 71954 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 71957 @LENGTH@ 27
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isTrue() @AT@ 71986 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isTrue() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 71998 @LENGTH@ 84
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isTrue() @AT@ 71998 @LENGTH@ 83
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isTrue() @AT@ 71998 @LENGTH@ 74
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @AT@ 72009 @LENGTH@ 62
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72009 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72009 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72044 @LENGTH@ 27
---------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isTrue() @AT@ 72073 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(false) @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 72085 @LENGTH@ 37
------INS MethodInvocation@@cf.setSimplePublisherConfirms(false) @TO@ ExpressionStatement@@MethodInvocation:cf.setSimplePublisherConfirms(false) @AT@ 72085 @LENGTH@ 36
---------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(false) @AT@ 72085 @LENGTH@ 2
---------INS SimpleName@@MethodName:setSimplePublisherConfirms:[false] @TO@ MethodInvocation@@cf.setSimplePublisherConfirms(false) @AT@ 72088 @LENGTH@ 33
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setSimplePublisherConfirms:[false] @AT@ 72115 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 72125 @LENGTH@ 53
------INS MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 72125 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 72125 @LENGTH@ 42
------------INS MethodInvocation@@cf.isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.isSimplePublisherConfirms()] @AT@ 72136 @LENGTH@ 30
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 72136 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.isSimplePublisherConfirms() @AT@ 72139 @LENGTH@ 27
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.isSimplePublisherConfirms()).isFalse() @AT@ 72168 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @TO@ MethodDeclaration@@public, void, MethodName:confirmsSimple,  @AT@ 72181 @LENGTH@ 85
------INS MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 72181 @LENGTH@ 84
---------INS MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 72181 @LENGTH@ 74
------------INS MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @TO@ MethodInvocation@@MethodName:assertThat:[cf.getPublisherConnectionFactory().isSimplePublisherConfirms()] @AT@ 72192 @LENGTH@ 62
---------------INS MethodInvocation@@MethodName:getPublisherConnectionFactory:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72192 @LENGTH@ 34
---------------INS SimpleName@@Name:cf @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72192 @LENGTH@ 2
---------------INS SimpleName@@MethodName:isSimplePublisherConfirms:[] @TO@ MethodInvocation@@cf.getPublisherConnectionFactory().isSimplePublisherConfirms() @AT@ 72227 @LENGTH@ 27
---------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(cf.getPublisherConnectionFactory().isSimplePublisherConfirms()).isFalse() @AT@ 72256 @LENGTH@ 9


INS FieldDeclaration@@private, Instant, [anInstant] @TO@ TypeDeclaration@@[@Node("AdditionalTypes"), @Data, @AllArgsConstructor(access=AccessLevel.PRIVATE), @Builder, public]ThingWithAllAdditionalTypes,  @AT@ 2153 @LENGTH@ 26
---INS Modifier@@private @TO@ FieldDeclaration@@private, Instant, [anInstant] @AT@ 2153 @LENGTH@ 7
---INS SimpleType@@Instant @TO@ FieldDeclaration@@private, Instant, [anInstant] @AT@ 2161 @LENGTH@ 7
---INS VariableDeclarationFragment@@anInstant @TO@ FieldDeclaration@@private, Instant, [anInstant] @AT@ 2169 @LENGTH@ 9
------INS SimpleName@@anInstant @TO@ VariableDeclarationFragment@@anInstant @AT@ 2169 @LENGTH@ 9


DEL MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 42818 @LENGTH@ 98
---DEL Modifier@@public @AT@ 42818 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 42825 @LENGTH@ 4
---DEL SimpleName@@MethodName:stop @AT@ 42830 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Runnable callback @AT@ 42835 @LENGTH@ 17
------DEL SimpleType@@Runnable @AT@ 42835 @LENGTH@ 8
------DEL SimpleName@@callback @AT@ 42844 @LENGTH@ 8
---DEL TryStatement@@try {  stop();}  finally {  callback.run();} @AT@ 42858 @LENGTH@ 55
------DEL ExpressionStatement@@MethodInvocation:stop() @AT@ 42867 @LENGTH@ 7
---------DEL MethodInvocation@@MethodName:stop:[] @AT@ 42867 @LENGTH@ 6
------DEL Block@@FinallyBody:{  callback.run();} @AT@ 42889 @LENGTH@ 24
---------DEL ExpressionStatement@@MethodInvocation:callback.run() @AT@ 42894 @LENGTH@ 15
------------DEL MethodInvocation@@callback.run() @AT@ 42894 @LENGTH@ 14
---------------DEL SimpleName@@Name:callback @AT@ 42894 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:run:[] @AT@ 42903 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]SagaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SagaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1430 @LENGTH@ 993
---DEL Modifier@@static @AT@ 1437 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:result.setOrder(PayloadInterceptorOrder.AUTHENTICATION.getOrder()) @TO@ MethodInvocation:result.setOrder(PayloadInterceptorOrder.AUTHORIZATION.getOrder()) @AT@ 10483 @LENGTH@ 67
---UPD MethodInvocation@@result.setOrder(PayloadInterceptorOrder.AUTHENTICATION.getOrder()) @TO@ result.setOrder(PayloadInterceptorOrder.AUTHORIZATION.getOrder()) @AT@ 10483 @LENGTH@ 66
------UPD SimpleName@@MethodName:setOrder:[PayloadInterceptorOrder.AUTHENTICATION.getOrder()] @TO@ MethodName:setOrder:[PayloadInterceptorOrder.AUTHORIZATION.getOrder()] @AT@ 10490 @LENGTH@ 59
---------UPD MethodInvocation@@PayloadInterceptorOrder.AUTHENTICATION.getOrder() @TO@ PayloadInterceptorOrder.AUTHORIZATION.getOrder() @AT@ 10499 @LENGTH@ 49
------------UPD QualifiedName@@Name:PayloadInterceptorOrder.AUTHENTICATION @TO@ Name:PayloadInterceptorOrder.AUTHORIZATION @AT@ 10499 @LENGTH@ 38


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ @SuppressWarnings("unchecked") Task<?> currTask=(Task<?>)nd; @AT@ 4270 @LENGTH@ 109
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4305 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 4334 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 4345 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4346 @LENGTH@ 28


UPD ReturnStatement@@MethodInvocation:expression.toDocument(new NestedDelegatingExpressionAggregationOperationContext(context)) @TO@ MethodInvocation:expression.toDocument(new NestedDelegatingExpressionAggregationOperationContext(context,this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()))) @AT@ 10238 @LENGTH@ 97
---UPD MethodInvocation@@expression.toDocument(new NestedDelegatingExpressionAggregationOperationContext(context)) @TO@ expression.toDocument(new NestedDelegatingExpressionAggregationOperationContext(context,this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()))) @AT@ 10245 @LENGTH@ 89
------UPD SimpleName@@MethodName:toDocument:[new NestedDelegatingExpressionAggregationOperationContext(context)] @TO@ MethodName:toDocument:[new NestedDelegatingExpressionAggregationOperationContext(context,this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()))] @AT@ 10256 @LENGTH@ 78
---------UPD ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[context] @TO@ NestedDelegatingExpressionAggregationOperationContext[context, this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList())] @AT@ 10267 @LENGTH@ 66
------------INS MethodInvocation@@this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()) @TO@ ClassInstanceCreation@@NestedDelegatingExpressionAggregationOperationContext[context] @AT@ 10474 @LENGTH@ 90
---------------INS MethodInvocation@@MethodName:map:[var -> Fields.field(var.variableName)] @TO@ MethodInvocation@@this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()) @AT@ 10474 @LENGTH@ 61
------------------INS LambdaExpression@@var -> Fields.field(var.variableName) @TO@ MethodInvocation@@MethodName:map:[var -> Fields.field(var.variableName)] @AT@ 10497 @LENGTH@ 37
---------------------INS VariableDeclarationFragment@@var @TO@ LambdaExpression@@var -> Fields.field(var.variableName) @AT@ 10497 @LENGTH@ 3
------------------------INS SimpleName@@var @TO@ VariableDeclarationFragment@@var @AT@ 10497 @LENGTH@ 3
---------------------INS MethodInvocation@@Fields.field(var.variableName) @TO@ LambdaExpression@@var -> Fields.field(var.variableName) @AT@ 10504 @LENGTH@ 30
------------------------INS SimpleName@@Name:Fields @TO@ MethodInvocation@@Fields.field(var.variableName) @AT@ 10504 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:field:[var.variableName] @TO@ MethodInvocation@@Fields.field(var.variableName) @AT@ 10511 @LENGTH@ 23
---------------------------INS QualifiedName@@var.variableName @TO@ SimpleName@@MethodName:field:[var.variableName] @AT@ 10517 @LENGTH@ 16
------------------------------INS SimpleName@@var @TO@ QualifiedName@@var.variableName @AT@ 10517 @LENGTH@ 3
------------------------------INS SimpleName@@variableName @TO@ QualifiedName@@var.variableName @AT@ 10521 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:stream:[] @TO@ MethodInvocation@@this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()) @AT@ 10474 @LENGTH@ 18
---------------INS FieldAccess@@this.vars @TO@ MethodInvocation@@this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()) @AT@ 10474 @LENGTH@ 9
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.vars @AT@ 10474 @LENGTH@ 4
------------------INS SimpleName@@vars @TO@ FieldAccess@@this.vars @AT@ 10479 @LENGTH@ 4
---------------INS SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@this.vars.stream().map(var -> Fields.field(var.variableName)).collect(Collectors.toList()) @AT@ 10536 @LENGTH@ 28
------------------INS MethodInvocation@@Collectors.toList() @TO@ SimpleName@@MethodName:collect:[Collectors.toList()] @AT@ 10544 @LENGTH@ 19
---------------------INS SimpleName@@Name:Collectors @TO@ MethodInvocation@@Collectors.toList() @AT@ 10544 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:toList:[] @TO@ MethodInvocation@@Collectors.toList() @AT@ 10555 @LENGTH@ 8


UPD MethodDeclaration@@default, IAMEndpointBuilder, MethodName:iAM, String path,  @TO@ default, IAMEndpointBuilder, MethodName:awsIam, String path,  @AT@ 5130 @LENGTH@ 350
---UPD SimpleName@@MethodName:iAM @TO@ MethodName:awsIam @AT@ 5157 @LENGTH@ 3


UPD TypeDeclaration@@[public]OAuth2AuthenticationEntryPoint, AbstractOAuth2SecurityExceptionHandler[AuthenticationEntryPoint] @TO@ [@Deprecated, public]OAuth2AuthenticationEntryPoint, AbstractOAuth2SecurityExceptionHandler[AuthenticationEntryPoint] @AT@ 1470 @LENGTH@ 1625
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2AuthenticationEntryPoint, AbstractOAuth2SecurityExceptionHandler[AuthenticationEntryPoint] @AT@ 1647 @LENGTH@ 11


INS MethodDeclaration@@public, ReadPreference, MethodName:getReadPreference,  @TO@ TypeDeclaration@@[static]DelegatingQueryCursorPreparer, [CursorPreparer] @AT@ 8161 @LENGTH@ 87
---INS Modifier@@public @TO@ MethodDeclaration@@public, ReadPreference, MethodName:getReadPreference,  @AT@ 8161 @LENGTH@ 6
---INS SimpleType@@ReadPreference @TO@ MethodDeclaration@@public, ReadPreference, MethodName:getReadPreference,  @AT@ 8168 @LENGTH@ 14
---INS SimpleName@@MethodName:getReadPreference @TO@ MethodDeclaration@@public, ReadPreference, MethodName:getReadPreference,  @AT@ 8183 @LENGTH@ 17
---INS ReturnStatement@@MethodInvocation:delegate.getReadPreference() @TO@ MethodDeclaration@@public, ReadPreference, MethodName:getReadPreference,  @AT@ 8208 @LENGTH@ 36
------INS MethodInvocation@@delegate.getReadPreference() @TO@ ReturnStatement@@MethodInvocation:delegate.getReadPreference() @AT@ 8215 @LENGTH@ 28
---------INS SimpleName@@Name:delegate @TO@ MethodInvocation@@delegate.getReadPreference() @AT@ 8215 @LENGTH@ 8
---------INS SimpleName@@MethodName:getReadPreference:[] @TO@ MethodInvocation@@delegate.getReadPreference() @AT@ 8224 @LENGTH@ 19


UPD EnumDeclaration@@[public, static]ServiceNowRelease,  @TO@ [static]ServiceNowRelease,  @AT@ 33178 @LENGTH@ 76
---DEL Modifier@@public @AT@ 33178 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @TO@ TypeDeclaration@@[public]PropertyBindingSupportTest, ContextTestSupport @AT@ 9932 @LENGTH@ 916
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 9932 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 9939 @LENGTH@ 4
---INS SimpleName@@MethodName:testNullInjectorClass @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 9944 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 9975 @LENGTH@ 9
---INS VariableDeclarationStatement@@Foo foo=new Foo(); @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 9995 @LENGTH@ 20
------INS SimpleType@@Foo @TO@ VariableDeclarationStatement@@Foo foo=new Foo(); @AT@ 9995 @LENGTH@ 3
------INS VariableDeclarationFragment@@foo=new Foo() @TO@ VariableDeclarationStatement@@Foo foo=new Foo(); @AT@ 9999 @LENGTH@ 15
---------INS SimpleName@@foo @TO@ VariableDeclarationFragment@@foo=new Foo() @AT@ 9999 @LENGTH@ 3
---------INS ClassInstanceCreation@@Foo[] @TO@ VariableDeclarationFragment@@foo=new Foo() @AT@ 10005 @LENGTH@ 9
------------INS New@@new @TO@ ClassInstanceCreation@@Foo[] @AT@ 10005 @LENGTH@ 3
------------INS SimpleType@@Foo @TO@ ClassInstanceCreation@@Foo[] @AT@ 10009 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:context.setInjector(new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 10025 @LENGTH@ 429
------INS MethodInvocation@@context.setInjector(new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.setInjector(new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
) @AT@ 10025 @LENGTH@ 428
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.setInjector(new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
) @AT@ 10025 @LENGTH@ 7
---------INS SimpleName@@MethodName:setInjector:[new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
] @TO@ MethodInvocation@@context.setInjector(new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
) @AT@ 10033 @LENGTH@ 420
------------INS ClassInstanceCreation@@Injector[] @TO@ SimpleName@@MethodName:setInjector:[new Injector(){
  @Override public <T>T newInstance(  Class<T> type){
    return null;
  }
  @Override public <T>T newInstance(  Class<T> type,  boolean postProcessBean){
    return null;
  }
  @Override public boolean supportsAutoWiring(){
    return false;
  }
}
] @AT@ 10045 @LENGTH@ 407
---------------INS New@@new @TO@ ClassInstanceCreation@@Injector[] @AT@ 10045 @LENGTH@ 3
---------------INS SimpleType@@Injector @TO@ ClassInstanceCreation@@Injector[] @AT@ 10049 @LENGTH@ 8
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Injector[] @AT@ 10060 @LENGTH@ 392
------------------INS MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10096 @LENGTH@ 84
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 10096 @LENGTH@ 6
---------------------INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 10107 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:newInstance @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 10109 @LENGTH@ 11
---------------------INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 10121 @LENGTH@ 13
------------------------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 10121 @LENGTH@ 8
---------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 10121 @LENGTH@ 5
---------------------------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 10127 @LENGTH@ 1
------------------------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 10130 @LENGTH@ 4
---------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type,  @AT@ 10154 @LENGTH@ 12
------------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10161 @LENGTH@ 4
------------------INS MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10216 @LENGTH@ 109
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10216 @LENGTH@ 6
---------------------INS SimpleType@@T @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10227 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:newInstance @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10229 @LENGTH@ 11
---------------------INS SingleVariableDeclaration@@Class<T> type @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10241 @LENGTH@ 13
------------------------INS ParameterizedType@@Class<T> @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 10241 @LENGTH@ 8
---------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<T> @AT@ 10241 @LENGTH@ 5
---------------------------INS SimpleType@@T @TO@ ParameterizedType@@Class<T> @AT@ 10247 @LENGTH@ 1
------------------------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<T> type @AT@ 10250 @LENGTH@ 4
---------------------INS SingleVariableDeclaration@@boolean postProcessBean @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10256 @LENGTH@ 23
------------------------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean postProcessBean @AT@ 10256 @LENGTH@ 7
------------------------INS SimpleName@@postProcessBean @TO@ SingleVariableDeclaration@@boolean postProcessBean @AT@ 10264 @LENGTH@ 15
---------------------INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, T, T, MethodName:newInstance, Class<T> type, boolean postProcessBean,  @AT@ 10299 @LENGTH@ 12
------------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 10306 @LENGTH@ 4
------------------INS MethodDeclaration@@public, boolean, MethodName:supportsAutoWiring,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 10361 @LENGTH@ 81
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:supportsAutoWiring,  @AT@ 10361 @LENGTH@ 6
---------------------INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:supportsAutoWiring,  @AT@ 10368 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:supportsAutoWiring @TO@ MethodDeclaration@@public, boolean, MethodName:supportsAutoWiring,  @AT@ 10376 @LENGTH@ 18
---------------------INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:supportsAutoWiring,  @AT@ 10415 @LENGTH@ 13
------------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 10422 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"name","James") @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 10464 @LENGTH@ 67
------INS MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @TO@ ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 10464 @LENGTH@ 66
---------INS SimpleName@@Name:PropertyBindingSupport @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 10464 @LENGTH@ 22
---------INS SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"name","James") @AT@ 10487 @LENGTH@ 43
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 10500 @LENGTH@ 7
------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 10509 @LENGTH@ 3
------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 10514 @LENGTH@ 6
------------INS StringLiteral@@"James" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "name", "James"] @AT@ 10522 @LENGTH@ 7
---INS TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @TO@ MethodDeclaration@@public, void, MethodName:testNullInjectorClass, Exception,  @AT@ 10540 @LENGTH@ 302
------INS ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company") @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @AT@ 10558 @LENGTH@ 105
---------INS MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company") @TO@ ExpressionStatement@@MethodInvocation:PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company") @AT@ 10558 @LENGTH@ 104
------------INS SimpleName@@Name:PropertyBindingSupport @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company") @AT@ 10558 @LENGTH@ 22
------------INS SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.Company"] @TO@ MethodInvocation@@PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company") @AT@ 10581 @LENGTH@ 81
---------------INS SimpleName@@context @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.Company"] @AT@ 10594 @LENGTH@ 7
---------------INS SimpleName@@foo @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.Company"] @AT@ 10603 @LENGTH@ 3
---------------INS StringLiteral@@"bar.work" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.Company"] @AT@ 10608 @LENGTH@ 10
---------------INS StringLiteral@@"#class:org.apache.camel.support.Company" @TO@ SimpleName@@MethodName:bindProperty:[context, foo, "bar.work", "#class:org.apache.camel.support.Company"] @AT@ 10620 @LENGTH@ 41
------INS ExpressionStatement@@MethodInvocation:fail("Should throw exception") @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @AT@ 10676 @LENGTH@ 31
---------INS MethodInvocation@@fail("Should throw exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should throw exception") @AT@ 10676 @LENGTH@ 30
------------INS SimpleName@@MethodName:fail:["Should throw exception"] @TO@ MethodInvocation@@fail("Should throw exception") @AT@ 10676 @LENGTH@ 30
---------------INS StringLiteral@@"Should throw exception" @TO@ SimpleName@@MethodName:fail:["Should throw exception"] @AT@ 10681 @LENGTH@ 24
------INS CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @TO@ TryStatement@@try {  PropertyBindingSupport.bindProperty(context,foo,"bar.work","#class:org.apache.camel.support.Company");  fail("Should throw exception");} catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @AT@ 10718 @LENGTH@ 124
---------INS SingleVariableDeclaration@@PropertyBindingException e @TO@ CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @AT@ 10725 @LENGTH@ 26
------------INS SimpleType@@PropertyBindingException @TO@ SingleVariableDeclaration@@PropertyBindingException e @AT@ 10725 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@PropertyBindingException e @AT@ 10750 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ CatchClause@@catch (PropertyBindingException e) {  assertIsInstanceOf(IllegalArgumentException.class,e.getCause());} @AT@ 10767 @LENGTH@ 65
------------INS MethodInvocation@@assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ ExpressionStatement@@MethodInvocation:assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 10767 @LENGTH@ 64
---------------INS SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @TO@ MethodInvocation@@assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @AT@ 10767 @LENGTH@ 64
------------------INS TypeLiteral@@IllegalArgumentException.class @TO@ SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @AT@ 10786 @LENGTH@ 30
------------------INS MethodInvocation@@e.getCause() @TO@ SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @AT@ 10818 @LENGTH@ 12
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getCause() @AT@ 10818 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 10820 @LENGTH@ 10


UPD VariableDeclarationStatement@@List<String> extc=new ArrayList(); @TO@ List<String> extc=new ArrayList<String>(); @AT@ 2699 @LENGTH@ 36
---UPD VariableDeclarationFragment@@extc=new ArrayList() @TO@ extc=new ArrayList<String>() @AT@ 2712 @LENGTH@ 22
------UPD ClassInstanceCreation@@ArrayList[] @TO@ ArrayList<String>[] @AT@ 2719 @LENGTH@ 15
---------DEL SimpleType@@ArrayList @AT@ 2723 @LENGTH@ 9
---------INS ParameterizedType@@ArrayList<String> @TO@ ClassInstanceCreation@@ArrayList[] @AT@ 2739 @LENGTH@ 17
------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<String> @AT@ 2739 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@ArrayList<String> @AT@ 2749 @LENGTH@ 6


UPD TypeDeclaration@@[public, abstract]AbstractRedirectResourceDetails, BaseOAuth2ProtectedResourceDetails @TO@ [@Deprecated, public, abstract]AbstractRedirectResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 358 @LENGTH@ 2855
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]AbstractRedirectResourceDetails, BaseOAuth2ProtectedResourceDetails @AT@ 536 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2ExceptionJackson2Deserializer, StdDeserializer<OAuth2Exception> @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuth2ExceptionJackson2Deserializer, StdDeserializer<OAuth2Exception> @AT@ 1180 @LENGTH@ 3333
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2ExceptionJackson2Deserializer, StdDeserializer<OAuth2Exception> @AT@ 1386 @LENGTH@ 11


MOV FieldDeclaration@@public, boolean, [endpointBasicPropertyBinding] @TO@ TypeDeclaration@@[@ConfigurationProperties(prefix="camel.springboot"), public]CamelConfigurationProperties, DefaultConfigurationProperties<CamelConfigurationProperties> @AT@ 13587 @LENGTH@ 44


UPD TypeDeclaration@@[public, static]AdvancedMyBatisBeanEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMyBatisBeanEndpointBuilder, [EndpointProducerBuilder] @AT@ 2524 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 2531 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1422 @LENGTH@ 910
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1429 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1434 @LENGTH@ 28


UPD TryStatement@@try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} finally {  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @TO@ try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} finally {  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 1708 @LENGTH@ 2013
---DEL IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2643 @LENGTH@ 319
------DEL InfixExpression@@exchange != null @AT@ 2647 @LENGTH@ 16
---------DEL SimpleName@@exchange @AT@ 2647 @LENGTH@ 8
---------DEL Operator@@!= @AT@ 2655 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2659 @LENGTH@ 4
------DEL Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2665 @LENGTH@ 297
---------DEL ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2761 @LENGTH@ 79
------------DEL MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2761 @LENGTH@ 78
---------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2761 @LENGTH@ 16
---------------DEL SimpleName@@Name:exchange @AT@ 2761 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 2778 @LENGTH@ 61
------------------DEL QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 2788 @LENGTH@ 27
---------------------DEL SimpleName@@FtpConstants @AT@ 2788 @LENGTH@ 12
---------------------DEL SimpleName@@FTP_REPLY_CODE @AT@ 2801 @LENGTH@ 14
------------------DEL MethodInvocation@@client.getReplyCode() @AT@ 2817 @LENGTH@ 21
---------------------DEL SimpleName@@Name:client @AT@ 2817 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getReplyCode:[] @AT@ 2824 @LENGTH@ 14
---------DEL ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2861 @LENGTH@ 83
------------DEL MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2861 @LENGTH@ 82
---------------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2861 @LENGTH@ 16
---------------DEL SimpleName@@Name:exchange @AT@ 2861 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 2878 @LENGTH@ 65
------------------DEL QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 2888 @LENGTH@ 29
---------------------DEL SimpleName@@FtpConstants @AT@ 2888 @LENGTH@ 12
---------------------DEL SimpleName@@FTP_REPLY_STRING @AT@ 2901 @LENGTH@ 16
------------------DEL MethodInvocation@@client.getReplyString() @AT@ 2919 @LENGTH@ 23
---------------------DEL SimpleName@@Name:client @AT@ 2919 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getReplyString:[] @AT@ 2926 @LENGTH@ 16


UPD FieldDeclaration@@PayloadSocketAcceptorInterceptor, [interceptor] @TO@ SecuritySocketAcceptorInterceptor, [interceptor] @AT@ 2615 @LENGTH@ 45
---UPD SimpleType@@PayloadSocketAcceptorInterceptor @TO@ SecuritySocketAcceptorInterceptor @AT@ 2615 @LENGTH@ 32


INS FieldDeclaration@@String, [NONCE="nonce"] @TO@ TypeDeclaration@@[public]OidcParameterNames,  @AT@ 1258 @LENGTH@ 23
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [NONCE="nonce"] @AT@ 1258 @LENGTH@ 6
---INS VariableDeclarationFragment@@NONCE="nonce" @TO@ FieldDeclaration@@String, [NONCE="nonce"] @AT@ 1265 @LENGTH@ 15
------INS SimpleName@@NONCE @TO@ VariableDeclarationFragment@@NONCE="nonce" @AT@ 1265 @LENGTH@ 5
------INS StringLiteral@@"nonce" @TO@ VariableDeclarationFragment@@NONCE="nonce" @AT@ 1273 @LENGTH@ 7


UPD TypeDeclaration@@[public]ExpiringOAuth2RefreshToken, [OAuth2RefreshToken] @TO@ [@Deprecated, public]ExpiringOAuth2RefreshToken, [OAuth2RefreshToken] @AT@ 717 @LENGTH@ 99
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExpiringOAuth2RefreshToken, [OAuth2RefreshToken] @AT@ 895 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]Olingo2ApiName,  @TO@ [static]Olingo2ApiName,  @AT@ 44673 @LENGTH@ 58
---DEL Modifier@@public @AT@ 44673 @LENGTH@ 6


UPD EnumDeclaration@@[public]AuthenticationScheme,  @TO@ [@Deprecated, public]AuthenticationScheme,  @AT@ 752 @LENGTH@ 234
---INS MarkerAnnotation@@@Deprecated @TO@ EnumDeclaration@@[public]AuthenticationScheme,  @AT@ 930 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 4120 @LENGTH@ 440
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 4193 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4193 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4198 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedStAXEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedStAXEndpointBuilder, [EndpointProducerBuilder] @AT@ 2128 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 2135 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:httpHandlerBuilder.filter((exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
) @TO@ MethodDeclaration@@public, void, MethodName:afterConfigurerAdded, WebTestClient.Builder builder, @Nullable WebHttpHandlerBuilder httpHandlerBuilder, @Nullable ClientHttpConnector connector,  @AT@ 14878 @LENGTH@ 132
---INS MethodInvocation@@httpHandlerBuilder.filter((exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
) @TO@ ExpressionStatement@@MethodInvocation:httpHandlerBuilder.filter((exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
) @AT@ 14878 @LENGTH@ 131
------INS SimpleName@@Name:httpHandlerBuilder @TO@ MethodInvocation@@httpHandlerBuilder.filter((exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
) @AT@ 14878 @LENGTH@ 18
------INS SimpleName@@MethodName:filter:[(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
] @TO@ MethodInvocation@@httpHandlerBuilder.filter((exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
) @AT@ 14897 @LENGTH@ 112
---------INS LambdaExpression@@(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
 @TO@ SimpleName@@MethodName:filter:[(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
] @AT@ 14904 @LENGTH@ 104
------------INS VariableDeclarationFragment@@exchange @TO@ LambdaExpression@@(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
 @AT@ 14905 @LENGTH@ 8
---------------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange @AT@ 14905 @LENGTH@ 8
------------INS VariableDeclarationFragment@@chain @TO@ LambdaExpression@@(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
 @AT@ 14915 @LENGTH@ 5
---------------INS SimpleName@@chain @TO@ VariableDeclarationFragment@@chain @AT@ 14915 @LENGTH@ 5
------------INS ExpressionStatement@@MethodInvocation:CsrfWebFilter.skipExchange(exchange) @TO@ LambdaExpression@@(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
 @AT@ 14931 @LENGTH@ 37
---------------INS MethodInvocation@@CsrfWebFilter.skipExchange(exchange) @TO@ ExpressionStatement@@MethodInvocation:CsrfWebFilter.skipExchange(exchange) @AT@ 14931 @LENGTH@ 36
------------------INS SimpleName@@Name:CsrfWebFilter @TO@ MethodInvocation@@CsrfWebFilter.skipExchange(exchange) @AT@ 14931 @LENGTH@ 13
------------------INS SimpleName@@MethodName:skipExchange:[exchange] @TO@ MethodInvocation@@CsrfWebFilter.skipExchange(exchange) @AT@ 14945 @LENGTH@ 22
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:skipExchange:[exchange] @AT@ 14958 @LENGTH@ 8
------------INS ReturnStatement@@MethodInvocation:chain.filter(exchange) @TO@ LambdaExpression@@(exchange,chain) -> {
  CsrfWebFilter.skipExchange(exchange);
  return chain.filter(exchange);
}
 @AT@ 14973 @LENGTH@ 30
---------------INS MethodInvocation@@chain.filter(exchange) @TO@ ReturnStatement@@MethodInvocation:chain.filter(exchange) @AT@ 14980 @LENGTH@ 22
------------------INS SimpleName@@Name:chain @TO@ MethodInvocation@@chain.filter(exchange) @AT@ 14980 @LENGTH@ 5
------------------INS SimpleName@@MethodName:filter:[exchange] @TO@ MethodInvocation@@chain.filter(exchange) @AT@ 14986 @LENGTH@ 16
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:filter:[exchange] @AT@ 14993 @LENGTH@ 8


UPD TypeDeclaration@@[@Value, @Wither, @AllArgsConstructor(onConstructor=@__(@PersistenceConstructor)), @Persistent, public]ImmutableAuditableThing,  @TO@ [@Value, @With, @AllArgsConstructor(onConstructor=@__(@PersistenceConstructor)), @Persistent, public]ImmutableAuditableThing,  @AT@ 1357 @LENGTH@ 424
---UPD MarkerAnnotation@@@Wither @TO@ @With @AT@ 1364 @LENGTH@ 7


UPD MethodDeclaration@@default, RestEndpointBuilder, MethodName:restEndpoint, String path,  @TO@ default, RestEndpointBuilder, MethodName:rest, String path,  @AT@ 26445 @LENGTH@ 362
---UPD SimpleName@@MethodName:restEndpoint @TO@ MethodName:rest @AT@ 26473 @LENGTH@ 12


UPD EnumDeclaration@@[public, static]ExecutorType,  @TO@ [static]ExecutorType,  @AT@ 4743 @LENGTH@ 69
---DEL Modifier@@public @AT@ 4743 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2SecurityNamespaceHandler, NamespaceHandlerSupport @TO@ [@Deprecated, public]OAuth2SecurityNamespaceHandler, NamespaceHandlerSupport @AT@ 768 @LENGTH@ 857
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2SecurityNamespaceHandler, NamespaceHandlerSupport @AT@ 946 @LENGTH@ 11


UPD TryStatement@@try {  startedProcessingMultiAcksLatch.countDown();  delayAckProcessingLatch.await(2,TimeUnit.SECONDS);  delayAckProcessingLatch.countDown();  waitForAll3AcksLatch.countDown();  acks.incrementAndGet();} catch (InterruptedException e) {  e.printStackTrace();} @TO@ try {  startedProcessingMultiAcksLatch.countDown();  delayAckProcessingLatch.await(2,TimeUnit.SECONDS);  delayAckProcessingLatch.countDown();  acks.incrementAndGet();  waitForAll3AcksLatch.countDown();} catch (InterruptedException e) {  e.printStackTrace();} @AT@ 26295 @LENGTH@ 396
---MOV ExpressionStatement@@MethodInvocation:waitForAll3AcksLatch.countDown() @TO@ TryStatement@@try {  startedProcessingMultiAcksLatch.countDown();  delayAckProcessingLatch.await(2,TimeUnit.SECONDS);  delayAckProcessingLatch.countDown();  waitForAll3AcksLatch.countDown();  acks.incrementAndGet();} catch (InterruptedException e) {  e.printStackTrace();} @AT@ 26559 @LENGTH@ 33


UPD IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @TO@ if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14109 @LENGTH@ 176
---INS Block@@ElseBody:if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else {  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 136
------INS IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ Block@@ElseBody:if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 136
---------MOV Block@@ElseBody:{  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 53
---------INS MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14236 @LENGTH@ 77
------------INS QualifiedName@@Name:AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14236 @LENGTH@ 41
------------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14278 @LENGTH@ 35
---------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 14285 @LENGTH@ 27
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14285 @LENGTH@ 4
------------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14290 @LENGTH@ 22
------INS IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ Block@@ElseBody:if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 136
---------MOV Block@@ElseBody:{  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 53
---------INS MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @TO@ IfStatement@@if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14236 @LENGTH@ 77
------------INS QualifiedName@@Name:AuthorizationGrantType.AUTHORIZATION_CODE @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14236 @LENGTH@ 41
------------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType) @AT@ 14278 @LENGTH@ 35
---------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 14285 @LENGTH@ 27
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14285 @LENGTH@ 4
------------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14290 @LENGTH@ 22
---UPD Block@@ElseBody:{  this.validateAuthorizationCodeGrantType();} @TO@ ThenBody:{  this.validateAuthorizationCodeGrantType();} @AT@ 14232 @LENGTH@ 53


UPD TypeDeclaration@@[public, static]JdbcEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]JdbcEndpointBuilder, [EndpointProducerBuilder] @AT@ 1471 @LENGTH@ 10623
---DEL Modifier@@static @AT@ 1478 @LENGTH@ 6


UPD VariableDeclarationStatement@@AuthorizationRequest other=(AuthorizationRequest)SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)); @TO@ AuthorizationRequest other=SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)); @AT@ 6234 @LENGTH@ 140
---UPD VariableDeclarationFragment@@other=(AuthorizationRequest)SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)) @TO@ other=SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)) @AT@ 6255 @LENGTH@ 118
------DEL CastExpression@@(AuthorizationRequest)SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)) @AT@ 6263 @LENGTH@ 110
---------DEL SimpleType@@AuthorizationRequest @AT@ 6264 @LENGTH@ 20
------MOV MethodInvocation@@SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)) @TO@ VariableDeclarationFragment@@other=(AuthorizationRequest)SerializationUtils.deserialize(SerializationUtils.serialize(authorizationRequest)) @AT@ 6286 @LENGTH@ 87


UPD TypeDeclaration@@[public, static]DdbStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]DdbStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1432 @LENGTH@ 2242
---DEL Modifier@@static @AT@ 1439 @LENGTH@ 6


UPD VariableDeclarationStatement@@final Map<String,String> headers=result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,(entry) -> entry.getValue().toString())); @TO@ final Map<String,String> headers=result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())); @AT@ 8224 @LENGTH@ 219
---UPD VariableDeclarationFragment@@headers=result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,(entry) -> entry.getValue().toString())) @TO@ headers=result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 8250 @LENGTH@ 192
------UPD MethodInvocation@@result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,(entry) -> entry.getValue().toString())) @TO@ result.getHeaders().entrySet().stream().collect(Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())) @AT@ 8260 @LENGTH@ 182
---------UPD SimpleName@@MethodName:collect:[Collectors.toMap(Map.Entry::getKey,(entry) -> entry.getValue().toString())] @TO@ MethodName:collect:[Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString())] @AT@ 8358 @LENGTH@ 84
------------UPD MethodInvocation@@Collectors.toMap(Map.Entry::getKey,(entry) -> entry.getValue().toString()) @TO@ Collectors.toMap(Map.Entry::getKey,entry -> entry.getValue().toString()) @AT@ 8366 @LENGTH@ 75
---------------UPD SimpleName@@MethodName:toMap:[Map.Entry::getKey, (entry) -> entry.getValue().toString()] @TO@ MethodName:toMap:[Map.Entry::getKey, entry -> entry.getValue().toString()] @AT@ 8377 @LENGTH@ 64
------------------UPD LambdaExpression@@(entry) -> entry.getValue().toString() @TO@ entry -> entry.getValue().toString() @AT@ 8402 @LENGTH@ 38


INS MethodDeclaration@@public, void, MethodName:getValueWhenPasswordGrantTypeThenReturnPassword,  @TO@ TypeDeclaration@@[public]AuthorizationGrantTypeTests,  @AT@ 1578 @LENGTH@ 146
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenPasswordGrantTypeThenReturnPassword,  @AT@ 1578 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenPasswordGrantTypeThenReturnPassword,  @AT@ 1585 @LENGTH@ 4
---INS SimpleName@@MethodName:getValueWhenPasswordGrantTypeThenReturnPassword @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenPasswordGrantTypeThenReturnPassword,  @AT@ 1590 @LENGTH@ 47
---INS ExpressionStatement@@MethodInvocation:assertThat(AuthorizationGrantType.PASSWORD.getValue()).isEqualTo("password") @TO@ MethodDeclaration@@public, void, MethodName:getValueWhenPasswordGrantTypeThenReturnPassword,  @AT@ 1644 @LENGTH@ 77
------INS MethodInvocation@@assertThat(AuthorizationGrantType.PASSWORD.getValue()).isEqualTo("password") @TO@ ExpressionStatement@@MethodInvocation:assertThat(AuthorizationGrantType.PASSWORD.getValue()).isEqualTo("password") @AT@ 1644 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:assertThat:[AuthorizationGrantType.PASSWORD.getValue()] @TO@ MethodInvocation@@assertThat(AuthorizationGrantType.PASSWORD.getValue()).isEqualTo("password") @AT@ 1644 @LENGTH@ 54
------------INS MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @TO@ MethodInvocation@@MethodName:assertThat:[AuthorizationGrantType.PASSWORD.getValue()] @AT@ 1655 @LENGTH@ 42
---------------INS QualifiedName@@Name:AuthorizationGrantType.PASSWORD @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @AT@ 1655 @LENGTH@ 31
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.getValue() @AT@ 1687 @LENGTH@ 10
---------INS SimpleName@@MethodName:isEqualTo:["password"] @TO@ MethodInvocation@@assertThat(AuthorizationGrantType.PASSWORD.getValue()).isEqualTo("password") @AT@ 1699 @LENGTH@ 21
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:isEqualTo:["password"] @AT@ 1709 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]RefreshTokenOAuth2AuthorizedClientProviderTests,  @AT@ 4119 @LENGTH@ 232
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4119 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4126 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4131 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4187 @LENGTH@ 161
------INS MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4187 @LENGTH@ 160
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4187 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 4276 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4187 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @AT@ 4206 @LENGTH@ 50
---------------INS MethodInvocation@@this.authorizedClientProvider.setClock(null) @TO@ LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @AT@ 4212 @LENGTH@ 44
------------------INS FieldAccess@@this.authorizedClientProvider @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 4212 @LENGTH@ 29
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 4212 @LENGTH@ 4
---------------------INS SimpleName@@authorizedClientProvider @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 4217 @LENGTH@ 24
------------------INS SimpleName@@MethodName:setClock:[null] @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 4242 @LENGTH@ 14
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClock:[null] @AT@ 4251 @LENGTH@ 4
---------INS SimpleName@@MethodName:hasMessage:["clock cannot be null"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4313 @LENGTH@ 34
------------INS StringLiteral@@"clock cannot be null" @TO@ SimpleName@@MethodName:hasMessage:["clock cannot be null"] @AT@ 4324 @LENGTH@ 22


UPD TypeDeclaration@@[public]BearerTokenExtractor, [TokenExtractor] @TO@ [@Deprecated, public]BearerTokenExtractor, [TokenExtractor] @AT@ 1398 @LENGTH@ 2151
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]BearerTokenExtractor, [TokenExtractor] @AT@ 1575 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]ReadConsistency,  @TO@ [static]ReadConsistency,  @AT@ 14897 @LENGTH@ 91
---DEL Modifier@@public @AT@ 14897 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]GoogleCalendarStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]GoogleCalendarStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1479 @LENGTH@ 6586
---DEL Modifier@@static @AT@ 1486 @LENGTH@ 6


UPD EnhancedForStatement@@for (Task<? extends Serializable> childTask : childTasks) {  if (hasTask(childTask)) {    return true;  }} @TO@ for (Task<?> childTask : childTasks) {  if (hasTask(childTask)) {    return true;  }} @AT@ 16907 @LENGTH@ 134
---UPD SingleVariableDeclaration@@Task<? extends Serializable> childTask @TO@ Task<?> childTask @AT@ 16912 @LENGTH@ 38
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 16912 @LENGTH@ 28


UPD MethodDeclaration@@protected, void, MethodName:doPrepareConnection, HttpURLConnection con, int contentLength,  @TO@ protected, void, MethodName:doPrepareConnection, HttpURLConnection con, int contentLength, IOException,  @AT@ 2341 @LENGTH@ 81
---INS SimpleType@@IOException @TO@ MethodDeclaration@@protected, void, MethodName:doPrepareConnection, HttpURLConnection con, int contentLength,  @AT@ 2428 @LENGTH@ 11


UPD ExpressionStatement@@Assignment:authToken="" @TO@ Assignment:authToken="IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @AT@ 1472 @LENGTH@ 15
---UPD Assignment@@authToken="" @TO@ authToken="IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @AT@ 1472 @LENGTH@ 14
------UPD StringLiteral@@"" @TO@ "IVStwJAV_7p26ifo1NX1R3cjNDLkGFUaU0R6VW6dbwo" @AT@ 1484 @LENGTH@ 2


UPD IfStatement@@if (table == null) {  table=tableDesc.toTable(context.hiveConf);  if (isPartitioned(tableDesc)) {    updateReplicationState(initialReplicationState());    if (!forNewTable().hasReplicationState()) {      Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} else {  if (table.isPartitioned()) {    List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);    if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {      updateReplicationState(initialReplicationState());      if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {        Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);        tracker.addDependentTask(replLogTask);      }      return tracker;    }  }} @TO@ if (table == null) {  table=tableDesc.toTable(context.hiveConf);  if (isPartitioned(tableDesc)) {    updateReplicationState(initialReplicationState());    if (!forNewTable().hasReplicationState()) {      Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} else {  if (table.isPartitioned()) {    List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);    if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {      updateReplicationState(initialReplicationState());      if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {        Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);        tracker.addDependentTask(replLogTask);      }      return tracker;    }  }} @AT@ 5315 @LENGTH@ 1307
---UPD Block@@ThenBody:{  table=tableDesc.toTable(context.hiveConf);  if (isPartitioned(tableDesc)) {    updateReplicationState(initialReplicationState());    if (!forNewTable().hasReplicationState()) {      Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @TO@ ThenBody:{  table=tableDesc.toTable(context.hiveConf);  if (isPartitioned(tableDesc)) {    updateReplicationState(initialReplicationState());    if (!forNewTable().hasReplicationState()) {      Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @AT@ 5334 @LENGTH@ 549
------UPD IfStatement@@if (isPartitioned(tableDesc)) {  updateReplicationState(initialReplicationState());  if (!forNewTable().hasReplicationState()) {    Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @TO@ if (isPartitioned(tableDesc)) {  updateReplicationState(initialReplicationState());  if (!forNewTable().hasReplicationState()) {    Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @AT@ 5411 @LENGTH@ 466
---------UPD Block@@ThenBody:{  updateReplicationState(initialReplicationState());  if (!forNewTable().hasReplicationState()) {    Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @TO@ ThenBody:{  updateReplicationState(initialReplicationState());  if (!forNewTable().hasReplicationState()) {    Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @AT@ 5441 @LENGTH@ 436
------------UPD IfStatement@@if (!forNewTable().hasReplicationState()) {  Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @TO@ if (!forNewTable().hasReplicationState()) {  Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @AT@ 5510 @LENGTH@ 335
---------------UPD Block@@ThenBody:{  Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @TO@ ThenBody:{  Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @AT@ 5552 @LENGTH@ 293
------------------UPD VariableDeclarationStatement@@Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @TO@ Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @AT@ 5654 @LENGTH@ 132
---------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 5654 @LENGTH@ 28
---UPD Block@@ElseBody:{  if (table.isPartitioned()) {    List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);    if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {      updateReplicationState(initialReplicationState());      if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {        Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);        tracker.addDependentTask(replLogTask);      }      return tracker;    }  }} @TO@ ElseBody:{  if (table.isPartitioned()) {    List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);    if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {      updateReplicationState(initialReplicationState());      if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {        Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);        tracker.addDependentTask(replLogTask);      }      return tracker;    }  }} @AT@ 5889 @LENGTH@ 733
------UPD IfStatement@@if (table.isPartitioned()) {  List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);  if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {    updateReplicationState(initialReplicationState());    if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {      Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @TO@ if (table.isPartitioned()) {  List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);  if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {    updateReplicationState(initialReplicationState());    if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {      Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @AT@ 5915 @LENGTH@ 701
---------UPD Block@@ThenBody:{  List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);  if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {    updateReplicationState(initialReplicationState());    if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {      Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @TO@ ThenBody:{  List<AlterTableAddPartitionDesc> partitionDescs=event.partitionDescriptions(tableDesc);  if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {    updateReplicationState(initialReplicationState());    if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {      Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);      tracker.addDependentTask(replLogTask);    }    return tracker;  }} @AT@ 5942 @LENGTH@ 674
------------UPD IfStatement@@if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {  updateReplicationState(initialReplicationState());  if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {    Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @TO@ if (!event.replicationSpec().isMetadataOnly() && !partitionDescs.isEmpty()) {  updateReplicationState(initialReplicationState());  if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {    Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @AT@ 6050 @LENGTH@ 558
---------------UPD Block@@ThenBody:{  updateReplicationState(initialReplicationState());  if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {    Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @TO@ ThenBody:{  updateReplicationState(initialReplicationState());  if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {    Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);    tracker.addDependentTask(replLogTask);  }  return tracker;} @AT@ 6126 @LENGTH@ 482
------------------UPD IfStatement@@if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {  Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @TO@ if (!forExistingTable(lastReplicatedPartition).hasReplicationState()) {  Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @AT@ 6199 @LENGTH@ 373
---------------------UPD Block@@ThenBody:{  Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @TO@ ThenBody:{  Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf);  tracker.addDependentTask(replLogTask);} @AT@ 6269 @LENGTH@ 303
------------------------UPD VariableDeclarationStatement@@Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @TO@ Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @AT@ 6375 @LENGTH@ 134
---------------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 6375 @LENGTH@ 28


UPD FieldDeclaration@@private, static, final, int, [RECONNECT_TIMEOUT=10] @TO@ private, static, final, int, [RECONNECT_TIMEOUT=450] @AT@ 1766 @LENGTH@ 48
---UPD VariableDeclarationFragment@@RECONNECT_TIMEOUT=10 @TO@ RECONNECT_TIMEOUT=450 @AT@ 1791 @LENGTH@ 22
------UPD NumberLiteral@@10 @TO@ 450 @AT@ 1811 @LENGTH@ 2


UPD VariableDeclarationStatement@@JChannel channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get(); @TO@ JChannel channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(false),serviceName).get(); @AT@ 2061 @LENGTH@ 109
---UPD VariableDeclarationFragment@@channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @TO@ channel=new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(false),serviceName).get() @AT@ 2070 @LENGTH@ 99
------UPD MethodInvocation@@new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(true),serviceName).get() @TO@ new PassiveServiceSupplier<JChannel>(context.getServiceRegistry(false),serviceName).get() @AT@ 2080 @LENGTH@ 89
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<JChannel>[context.getServiceRegistry(true), serviceName] @TO@ PassiveServiceSupplier<JChannel>[context.getServiceRegistry(false), serviceName] @AT@ 2080 @LENGTH@ 83
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2117 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2125 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2144 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(this.authorizationCodeGrantRequest())).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(this.authorizationCodeGrantRequest())).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 12625 @LENGTH@ 305
---UPD MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(this.authorizationCodeGrantRequest())).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(this.authorizationCodeGrantRequest())).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 12625 @LENGTH@ 304
------UPD SimpleName@@MethodName:hasMessage:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error"] @TO@ MethodName:hasMessageContaining:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response"] @AT@ 12790 @LENGTH@ 139
---------UPD StringLiteral@@"[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error" @TO@ "[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response" @AT@ 12801 @LENGTH@ 127


UPD TypeDeclaration@@[public, static]IAMEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]IAMEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD MethodDeclaration@@public, JwkSetUriReactiveJwtDecoderBuilder, MethodName:jwsAlgorithm, JwsAlgorithm jwsAlgorithm,  @TO@ public, JwkSetUriReactiveJwtDecoderBuilder, MethodName:jwsAlgorithm, SignatureAlgorithm signatureAlgorithm,  @AT@ 9241 @LENGTH@ 234
---UPD SingleVariableDeclaration@@JwsAlgorithm jwsAlgorithm @TO@ SignatureAlgorithm signatureAlgorithm @AT@ 9296 @LENGTH@ 25
------UPD SimpleType@@JwsAlgorithm @TO@ SignatureAlgorithm @AT@ 9296 @LENGTH@ 12
------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 9309 @LENGTH@ 12
---UPD ExpressionStatement@@MethodInvocation:Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ MethodInvocation:Assert.notNull(signatureAlgorithm,"sig cannot be null") @AT@ 9328 @LENGTH@ 60
------UPD MethodInvocation@@Assert.notNull(jwsAlgorithm,"jwsAlgorithm cannot be null") @TO@ Assert.notNull(signatureAlgorithm,"sig cannot be null") @AT@ 9328 @LENGTH@ 59
---------UPD SimpleName@@MethodName:notNull:[jwsAlgorithm, "jwsAlgorithm cannot be null"] @TO@ MethodName:notNull:[signatureAlgorithm, "sig cannot be null"] @AT@ 9335 @LENGTH@ 52
------------UPD SimpleName@@jwsAlgorithm @TO@ signatureAlgorithm @AT@ 9343 @LENGTH@ 12
------------UPD StringLiteral@@"jwsAlgorithm cannot be null" @TO@ "sig cannot be null" @AT@ 9357 @LENGTH@ 29
---UPD ExpressionStatement@@Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ Assignment:this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9392 @LENGTH@ 63
------UPD Assignment@@this.jwsAlgorithm=JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ this.jwsAlgorithm=JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9392 @LENGTH@ 62
---------UPD MethodInvocation@@JWSAlgorithm.parse(jwsAlgorithm.getName()) @TO@ JWSAlgorithm.parse(signatureAlgorithm.getName()) @AT@ 9412 @LENGTH@ 42
------------UPD SimpleName@@MethodName:parse:[jwsAlgorithm.getName()] @TO@ MethodName:parse:[signatureAlgorithm.getName()] @AT@ 9425 @LENGTH@ 29
---------------UPD MethodInvocation@@jwsAlgorithm.getName() @TO@ signatureAlgorithm.getName() @AT@ 9431 @LENGTH@ 22
------------------UPD SimpleName@@Name:jwsAlgorithm @TO@ Name:signatureAlgorithm @AT@ 9431 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @TO@ TypeDeclaration@@[public]MapReactiveUserDetailsServiceTests,  @AT@ 1558 @LENGTH@ 333
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1558 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1565 @LENGTH@ 4
---INS SimpleName@@MethodName:constructorCaseIntensiveKey @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1570 @LENGTH@ 27
---INS VariableDeclarationStatement@@UserDetails userDetails=User.withUsername("USER").password("password").roles("USER").build(); @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1604 @LENGTH@ 95
------INS SimpleType@@UserDetails @TO@ VariableDeclarationStatement@@UserDetails userDetails=User.withUsername("USER").password("password").roles("USER").build(); @AT@ 1604 @LENGTH@ 11
------INS VariableDeclarationFragment@@userDetails=User.withUsername("USER").password("password").roles("USER").build() @TO@ VariableDeclarationStatement@@UserDetails userDetails=User.withUsername("USER").password("password").roles("USER").build(); @AT@ 1616 @LENGTH@ 82
---------INS SimpleName@@userDetails @TO@ VariableDeclarationFragment@@userDetails=User.withUsername("USER").password("password").roles("USER").build() @AT@ 1616 @LENGTH@ 11
---------INS MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @TO@ VariableDeclarationFragment@@userDetails=User.withUsername("USER").password("password").roles("USER").build() @AT@ 1630 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:roles:["USER"] @TO@ MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @AT@ 1630 @LENGTH@ 60
---------------INS StringLiteral@@"USER" @TO@ MethodInvocation@@MethodName:roles:["USER"] @AT@ 1683 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:password:["password"] @TO@ MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @AT@ 1630 @LENGTH@ 46
---------------INS StringLiteral@@"password" @TO@ MethodInvocation@@MethodName:password:["password"] @AT@ 1665 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:withUsername:["USER"] @TO@ MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @AT@ 1630 @LENGTH@ 25
---------------INS StringLiteral@@"USER" @TO@ MethodInvocation@@MethodName:withUsername:["USER"] @AT@ 1648 @LENGTH@ 6
------------INS SimpleName@@Name:User @TO@ MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @AT@ 1630 @LENGTH@ 4
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@User.withUsername("USER").password("password").roles("USER").build() @AT@ 1691 @LENGTH@ 7
---INS VariableDeclarationStatement@@MapReactiveUserDetailsService userDetailsService=new MapReactiveUserDetailsService(userDetails); @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1702 @LENGTH@ 98
------INS SimpleType@@MapReactiveUserDetailsService @TO@ VariableDeclarationStatement@@MapReactiveUserDetailsService userDetailsService=new MapReactiveUserDetailsService(userDetails); @AT@ 1702 @LENGTH@ 29
------INS VariableDeclarationFragment@@userDetailsService=new MapReactiveUserDetailsService(userDetails) @TO@ VariableDeclarationStatement@@MapReactiveUserDetailsService userDetailsService=new MapReactiveUserDetailsService(userDetails); @AT@ 1732 @LENGTH@ 67
---------INS SimpleName@@userDetailsService @TO@ VariableDeclarationFragment@@userDetailsService=new MapReactiveUserDetailsService(userDetails) @AT@ 1732 @LENGTH@ 18
---------INS ClassInstanceCreation@@MapReactiveUserDetailsService[userDetails] @TO@ VariableDeclarationFragment@@userDetailsService=new MapReactiveUserDetailsService(userDetails) @AT@ 1753 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@MapReactiveUserDetailsService[userDetails] @AT@ 1753 @LENGTH@ 3
------------INS SimpleType@@MapReactiveUserDetailsService @TO@ ClassInstanceCreation@@MapReactiveUserDetailsService[userDetails] @AT@ 1757 @LENGTH@ 29
------------INS SimpleName@@userDetails @TO@ ClassInstanceCreation@@MapReactiveUserDetailsService[userDetails] @AT@ 1787 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(userDetailsService.findByUsername("user").block()).isEqualTo(userDetails) @TO@ MethodDeclaration@@public, void, MethodName:constructorCaseIntensiveKey,  @AT@ 1803 @LENGTH@ 85
------INS MethodInvocation@@assertThat(userDetailsService.findByUsername("user").block()).isEqualTo(userDetails) @TO@ ExpressionStatement@@MethodInvocation:assertThat(userDetailsService.findByUsername("user").block()).isEqualTo(userDetails) @AT@ 1803 @LENGTH@ 84
---------INS MethodInvocation@@MethodName:assertThat:[userDetailsService.findByUsername("user").block()] @TO@ MethodInvocation@@assertThat(userDetailsService.findByUsername("user").block()).isEqualTo(userDetails) @AT@ 1803 @LENGTH@ 61
------------INS MethodInvocation@@userDetailsService.findByUsername("user").block() @TO@ MethodInvocation@@MethodName:assertThat:[userDetailsService.findByUsername("user").block()] @AT@ 1814 @LENGTH@ 49
---------------INS MethodInvocation@@MethodName:findByUsername:["user"] @TO@ MethodInvocation@@userDetailsService.findByUsername("user").block() @AT@ 1814 @LENGTH@ 41
------------------INS StringLiteral@@"user" @TO@ MethodInvocation@@MethodName:findByUsername:["user"] @AT@ 1848 @LENGTH@ 6
---------------INS SimpleName@@Name:userDetailsService @TO@ MethodInvocation@@userDetailsService.findByUsername("user").block() @AT@ 1814 @LENGTH@ 18
---------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@userDetailsService.findByUsername("user").block() @AT@ 1856 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEqualTo:[userDetails] @TO@ MethodInvocation@@assertThat(userDetailsService.findByUsername("user").block()).isEqualTo(userDetails) @AT@ 1865 @LENGTH@ 22
------------INS SimpleName@@userDetails @TO@ SimpleName@@MethodName:isEqualTo:[userDetails] @AT@ 1875 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,tokenEndpointResponse.getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,tokenEndpointResponse.getStatusCode()) @AT@ 7198 @LENGTH@ 70
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,tokenEndpointResponse.getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,tokenEndpointResponse.getStatusCode()) @AT@ 7198 @LENGTH@ 69
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, tokenEndpointResponse.getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, tokenEndpointResponse.getStatusCode()] @AT@ 7198 @LENGTH@ 69
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 7211 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 7222 @LENGTH@ 5


UPD TypeDeclaration@@[public]ImplicitTokenGranter, AbstractTokenGranter @TO@ [@Deprecated, public]ImplicitTokenGranter, AbstractTokenGranter @AT@ 1573 @LENGTH@ 1389
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ImplicitTokenGranter, AbstractTokenGranter @AT@ 1751 @LENGTH@ 11


MOV FieldDeclaration@@private, Spreadsheet, [spreadsheet] @TO@ TypeDeclaration@@[public]AbstractGoogleSheetsTestSupport, CamelTestSupport @AT@ 2328 @LENGTH@ 32


INS FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @TO@ TypeDeclaration@@[public, final]OAuth2AuthorizationContext,  @AT@ 2177 @LENGTH@ 116
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @AT@ 2177 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @AT@ 2184 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @AT@ 2191 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @AT@ 2197 @LENGTH@ 6
---INS VariableDeclarationFragment@@PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @TO@ FieldDeclaration@@public, static, final, String, [PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD")] @AT@ 2204 @LENGTH@ 88
------INS SimpleName@@PASSWORD_ATTRIBUTE_NAME @TO@ VariableDeclarationFragment@@PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @AT@ 2204 @LENGTH@ 23
------INS MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @TO@ VariableDeclarationFragment@@PASSWORD_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @AT@ 2230 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @AT@ 2230 @LENGTH@ 42
---------INS TypeLiteral@@OAuth2AuthorizationContext.class @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @AT@ 2230 @LENGTH@ 32
---------INS SimpleName@@MethodName:concat:[".PASSWORD"] @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".PASSWORD") @AT@ 2273 @LENGTH@ 19
------------INS StringLiteral@@".PASSWORD" @TO@ SimpleName@@MethodName:concat:[".PASSWORD"] @AT@ 2280 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedOpenshiftBuildConfigsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedOpenshiftBuildConfigsEndpointBuilder, [EndpointProducerBuilder] @AT@ 8953 @LENGTH@ 3139
---DEL Modifier@@static @AT@ 8960 @LENGTH@ 6


UPD TypeDeclaration@@[public]IssuerClaimVerifier, [JwtClaimsSetVerifier] @TO@ [@Deprecated, public]IssuerClaimVerifier, [JwtClaimsSetVerifier] @AT@ 1151 @LENGTH@ 628
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]IssuerClaimVerifier, [JwtClaimsSetVerifier] @AT@ 1329 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UserRedirectRequiredException, RuntimeException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UserRedirectRequiredException, RuntimeException @AT@ 224 @LENGTH@ 1715
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UserRedirectRequiredException, RuntimeException @AT@ 429 @LENGTH@ 11


UPD Block@@ThenBody:{  List<Task<? extends Serializable>> taskList=((ConditionalTask)currTask).getListTasks();  for (  Task<? extends Serializable> task : taskList) {    dispatch(task,stack,nodeOutputs);  }} @TO@ ThenBody:{  List<Task<?>> taskList=((ConditionalTask)currTask).getListTasks();  for (  Task<?> task : taskList) {    dispatch(task,stack,nodeOutputs);  }} @AT@ 2819 @LENGTH@ 215
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> taskList=((ConditionalTask)currTask).getListTasks(); @TO@ List<Task<?>> taskList=((ConditionalTask)currTask).getListTasks(); @AT@ 2827 @LENGTH@ 90
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2827 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2832 @LENGTH@ 28
---UPD EnhancedForStatement@@for (Task<? extends Serializable> task : taskList) {  dispatch(task,stack,nodeOutputs);} @TO@ for (Task<?> task : taskList) {  dispatch(task,stack,nodeOutputs);} @AT@ 2924 @LENGTH@ 104
------UPD SingleVariableDeclaration@@Task<? extends Serializable> task @TO@ Task<?> task @AT@ 2929 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2929 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedSchedulerEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedSchedulerEndpointBuilder, [EndpointConsumerBuilder] @AT@ 2861 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 2868 @LENGTH@ 6


UPD TypeDeclaration@@[public]ProviderDiscoveryClient,  @TO@ [@Deprecated, public]ProviderDiscoveryClient,  @AT@ 1437 @LENGTH@ 2133
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ProviderDiscoveryClient,  @AT@ 1615 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]DisruptorWaitStrategy,  @TO@ [static]DisruptorWaitStrategy,  @AT@ 28677 @LENGTH@ 96
---DEL Modifier@@public @AT@ 28677 @LENGTH@ 6


UPD TypeDeclaration@@[public]StringSplitUtils,  @TO@ [@Deprecated, public]StringSplitUtils,  @AT@ 385 @LENGTH@ 4140
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]StringSplitUtils,  @AT@ 566 @LENGTH@ 11


UPD ReturnStatement@@ConditionalExpression:writeResult != null && writeResult.wasAcknowledged() ? writeResult.getDeletedCount() : 0L @TO@ ConditionalExpression:writeResult.wasAcknowledged() ? writeResult.getDeletedCount() : 0L @AT@ 8346 @LENGTH@ 97
---UPD ConditionalExpression@@writeResult != null && writeResult.wasAcknowledged() ? writeResult.getDeletedCount() : 0L @TO@ writeResult.wasAcknowledged() ? writeResult.getDeletedCount() : 0L @AT@ 8353 @LENGTH@ 89
------DEL InfixExpression@@writeResult != null && writeResult.wasAcknowledged() @AT@ 8353 @LENGTH@ 52
---------DEL InfixExpression@@writeResult != null @AT@ 8353 @LENGTH@ 19
------------DEL SimpleName@@writeResult @AT@ 8353 @LENGTH@ 11
------------DEL Operator@@!= @AT@ 8364 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 8368 @LENGTH@ 4
---------DEL Operator@@&& @AT@ 8372 @LENGTH@ 2
---------DEL MethodInvocation@@writeResult.wasAcknowledged() @AT@ 8376 @LENGTH@ 29
------INS MethodInvocation@@writeResult.wasAcknowledged() @TO@ ConditionalExpression@@writeResult != null && writeResult.wasAcknowledged() ? writeResult.getDeletedCount() : 0L @AT@ 8382 @LENGTH@ 29
---------MOV SimpleName@@Name:writeResult @TO@ MethodInvocation@@writeResult.wasAcknowledged() @AT@ 8376 @LENGTH@ 11
---------MOV SimpleName@@MethodName:wasAcknowledged:[] @TO@ MethodInvocation@@writeResult.wasAcknowledged() @AT@ 8388 @LENGTH@ 17


UPD TypeDeclaration@@[public, static]AdvancedIgniteEventsEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedIgniteEventsEndpointBuilder, [EndpointConsumerBuilder] @AT@ 4234 @LENGTH@ 2138
---DEL Modifier@@static @AT@ 4241 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42974 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42974 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedHazelcastRingbufferEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedHazelcastRingbufferEndpointBuilder, [EndpointProducerBuilder] @AT@ 9974 @LENGTH@ 2187
---DEL Modifier@@static @AT@ 9981 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:setMuteException, Boolean MuteException,  @TO@ void, MethodName:setMuteException, Boolean muteException,  @AT@ 2063 @LENGTH@ 40
---UPD SingleVariableDeclaration@@Boolean MuteException @TO@ Boolean muteException @AT@ 2080 @LENGTH@ 21
------UPD SimpleName@@MuteException @TO@ muteException @AT@ 2088 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]TikaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]TikaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1441 @LENGTH@ 3832
---DEL Modifier@@static @AT@ 1448 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]PathSeparator,  @TO@ [static]PathSeparator,  @AT@ 222147 @LENGTH@ 69
---DEL Modifier@@public @AT@ 222147 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientRegistrationService,  @TO@ [@Deprecated, public]ClientRegistrationService,  @AT@ 866 @LENGTH@ 429
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientRegistrationService,  @AT@ 1043 @LENGTH@ 11


INS MethodDeclaration@@private, voidMethodName:SecurityUtils,  @TO@ TypeDeclaration@@[public]SecurityUtils,  @AT@ 981 @LENGTH@ 31
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:SecurityUtils,  @AT@ 981 @LENGTH@ 7
---INS SimpleName@@MethodName:SecurityUtils @TO@ MethodDeclaration@@private, voidMethodName:SecurityUtils,  @AT@ 989 @LENGTH@ 13


UPD TypeDeclaration@@[public]InMemoryAuthorizationCodeServices, RandomValueAuthorizationCodeServices @TO@ [@Deprecated, public]InMemoryAuthorizationCodeServices, RandomValueAuthorizationCodeServices @AT@ 340 @LENGTH@ 541
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InMemoryAuthorizationCodeServices, RandomValueAuthorizationCodeServices @AT@ 517 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]XsltEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]XsltEndpointBuilder, [EndpointProducerBuilder] @AT@ 1402 @LENGTH@ 8230
---DEL Modifier@@static @AT@ 1409 @LENGTH@ 6


UPD IfStatement@@if (pageable == null || pageable.getSort() == null) {  return pageable;} @TO@ if (pageable.isUnpaged() || pageable.getSort().isUnsorted()) {  return pageable;} @AT@ 2933 @LENGTH@ 77
---UPD InfixExpression@@pageable == null || pageable.getSort() == null @TO@ pageable.isUnpaged() || pageable.getSort().isUnsorted() @AT@ 2937 @LENGTH@ 46
------INS MethodInvocation@@pageable.isUnpaged() @TO@ InfixExpression@@pageable == null || pageable.getSort() == null @AT@ 2937 @LENGTH@ 20
---------INS SimpleName@@Name:pageable @TO@ MethodInvocation@@pageable.isUnpaged() @AT@ 2937 @LENGTH@ 8
---------INS SimpleName@@MethodName:isUnpaged:[] @TO@ MethodInvocation@@pageable.isUnpaged() @AT@ 2946 @LENGTH@ 11
------DEL InfixExpression@@pageable == null @AT@ 2937 @LENGTH@ 16
---------DEL SimpleName@@pageable @AT@ 2937 @LENGTH@ 8
---------DEL Operator@@== @AT@ 2945 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2949 @LENGTH@ 4
------DEL InfixExpression@@pageable.getSort() == null @AT@ 2957 @LENGTH@ 26
---------DEL Operator@@== @AT@ 2975 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 2979 @LENGTH@ 4
------MOV MethodInvocation@@pageable.getSort() @TO@ InfixExpression@@pageable == null || pageable.getSort() == null @AT@ 2957 @LENGTH@ 18
---------INS MethodInvocation@@MethodName:getSort:[] @TO@ MethodInvocation@@pageable.getSort() @AT@ 2961 @LENGTH@ 18
---------UPD SimpleName@@MethodName:getSort:[] @TO@ MethodName:isUnsorted:[] @AT@ 2966 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @TO@ TypeDeclaration@@[public]Saml2WebSsoAuthenticationFilter, AbstractAuthenticationProcessingFilter @AT@ 2106 @LENGTH@ 188
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2106 @LENGTH@ 6
---INS SimpleName@@MethodName:Saml2WebSsoAuthenticationFilter @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2113 @LENGTH@ 31
---INS SingleVariableDeclaration@@RelyingPartyRegistrationRepository relyingPartyRegistrationRepository @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2145 @LENGTH@ 69
------INS SimpleType@@RelyingPartyRegistrationRepository @TO@ SingleVariableDeclaration@@RelyingPartyRegistrationRepository relyingPartyRegistrationRepository @AT@ 2145 @LENGTH@ 34
------INS SimpleName@@relyingPartyRegistrationRepository @TO@ SingleVariableDeclaration@@RelyingPartyRegistrationRepository relyingPartyRegistrationRepository @AT@ 2180 @LENGTH@ 34
---INS ConstructorInvocation@@this(relyingPartyRegistrationRepository,DEFAULT_FILTER_PROCESSES_URI); @TO@ MethodDeclaration@@public, voidMethodName:Saml2WebSsoAuthenticationFilter, RelyingPartyRegistrationRepository relyingPartyRegistrationRepository,  @AT@ 2220 @LENGTH@ 71
------INS SimpleName@@relyingPartyRegistrationRepository @TO@ ConstructorInvocation@@this(relyingPartyRegistrationRepository,DEFAULT_FILTER_PROCESSES_URI); @AT@ 2225 @LENGTH@ 34
------INS SimpleName@@DEFAULT_FILTER_PROCESSES_URI @TO@ ConstructorInvocation@@this(relyingPartyRegistrationRepository,DEFAULT_FILTER_PROCESSES_URI); @AT@ 2261 @LENGTH@ 28


UPD TypeDeclaration@@[public]ResourceServerBeanDefinitionParser, ProviderBeanDefinitionParser @TO@ [@Deprecated, public]ResourceServerBeanDefinitionParser, ProviderBeanDefinitionParser @AT@ 1321 @LENGTH@ 2169
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceServerBeanDefinitionParser, ProviderBeanDefinitionParser @AT@ 1498 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]BasicAuthenticationConverterTests,  @AT@ 2346 @LENGTH@ 514
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2346 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2353 @LENGTH@ 4
---INS SimpleName@@MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2358 @LENGTH@ 58
---INS VariableDeclarationStatement@@String token="rod:koala"; @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2423 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 2423 @LENGTH@ 6
------INS VariableDeclarationFragment@@token="rod:koala" @TO@ VariableDeclarationStatement@@String token="rod:koala"; @AT@ 2430 @LENGTH@ 19
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 2430 @LENGTH@ 5
---------INS StringLiteral@@"rod:koala" @TO@ VariableDeclarationFragment@@token="rod:koala" @AT@ 2438 @LENGTH@ 11
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2453 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2453 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 2476 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2476 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 2486 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2486 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2490 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2518 @LENGTH@ 97
------INS MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 2518 @LENGTH@ 96
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 2518 @LENGTH@ 7
---------INS SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @TO@ MethodInvocation@@request.addHeader("Authorization","BaSiC " + new String(Base64.encodeBase64(token.getBytes()))) @AT@ 2526 @LENGTH@ 88
------------INS StringLiteral@@"Authorization" @TO@ SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 2536 @LENGTH@ 15
------------INS InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @TO@ SimpleName@@MethodName:addHeader:["Authorization", "BaSiC " + new String(Base64.encodeBase64(token.getBytes()))] @AT@ 2553 @LENGTH@ 60
---------------INS StringLiteral@@"BaSiC " @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 2553 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 2561 @LENGTH@ 1
---------------INS ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @TO@ InfixExpression@@"BaSiC " + new String(Base64.encodeBase64(token.getBytes())) @AT@ 2564 @LENGTH@ 49
------------------INS New@@new @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 2564 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 2568 @LENGTH@ 6
------------------INS MethodInvocation@@Base64.encodeBase64(token.getBytes()) @TO@ ClassInstanceCreation@@String[Base64.encodeBase64(token.getBytes())] @AT@ 2575 @LENGTH@ 37
---------------------INS SimpleName@@Name:Base64 @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 2575 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:encodeBase64:[token.getBytes()] @TO@ MethodInvocation@@Base64.encodeBase64(token.getBytes()) @AT@ 2582 @LENGTH@ 30
------------------------INS MethodInvocation@@token.getBytes() @TO@ SimpleName@@MethodName:encodeBase64:[token.getBytes()] @AT@ 2595 @LENGTH@ 16
---------------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getBytes() @AT@ 2595 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@token.getBytes() @AT@ 2601 @LENGTH@ 10
---INS VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=converter.convert(request); @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2618 @LENGTH@ 80
------INS SimpleType@@UsernamePasswordAuthenticationToken @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=converter.convert(request); @AT@ 2618 @LENGTH@ 35
------INS VariableDeclarationFragment@@authentication=converter.convert(request) @TO@ VariableDeclarationStatement@@UsernamePasswordAuthenticationToken authentication=converter.convert(request); @AT@ 2654 @LENGTH@ 43
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=converter.convert(request) @AT@ 2654 @LENGTH@ 14
---------INS MethodInvocation@@converter.convert(request) @TO@ VariableDeclarationFragment@@authentication=converter.convert(request) @AT@ 2671 @LENGTH@ 26
------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convert(request) @AT@ 2671 @LENGTH@ 9
------------INS SimpleName@@MethodName:convert:[request] @TO@ MethodInvocation@@converter.convert(request) @AT@ 2681 @LENGTH@ 16
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:convert:[request] @AT@ 2689 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:verify(authenticationDetailsSource).buildDetails(any()) @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2702 @LENGTH@ 56
------INS MethodInvocation@@verify(authenticationDetailsSource).buildDetails(any()) @TO@ ExpressionStatement@@MethodInvocation:verify(authenticationDetailsSource).buildDetails(any()) @AT@ 2702 @LENGTH@ 55
---------INS MethodInvocation@@MethodName:verify:[authenticationDetailsSource] @TO@ MethodInvocation@@verify(authenticationDetailsSource).buildDetails(any()) @AT@ 2702 @LENGTH@ 35
------------INS SimpleName@@authenticationDetailsSource @TO@ MethodInvocation@@MethodName:verify:[authenticationDetailsSource] @AT@ 2709 @LENGTH@ 27
---------INS SimpleName@@MethodName:buildDetails:[any()] @TO@ MethodInvocation@@verify(authenticationDetailsSource).buildDetails(any()) @AT@ 2738 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:any:[] @TO@ SimpleName@@MethodName:buildDetails:[any()] @AT@ 2751 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication).isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2761 @LENGTH@ 39
------INS MethodInvocation@@assertThat(authentication).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication).isNotNull() @AT@ 2761 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:assertThat:[authentication] @TO@ MethodInvocation@@assertThat(authentication).isNotNull() @AT@ 2761 @LENGTH@ 26
------------INS SimpleName@@authentication @TO@ MethodInvocation@@MethodName:assertThat:[authentication] @AT@ 2772 @LENGTH@ 14
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(authentication).isNotNull() @AT@ 2788 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(authentication.getName()).isEqualTo("rod") @TO@ MethodDeclaration@@public, void, MethodName:requestWhenAuthorizationSchemeInMixedCaseThenAuthenticates,  @AT@ 2803 @LENGTH@ 54
------INS MethodInvocation@@assertThat(authentication.getName()).isEqualTo("rod") @TO@ ExpressionStatement@@MethodInvocation:assertThat(authentication.getName()).isEqualTo("rod") @AT@ 2803 @LENGTH@ 53
---------INS MethodInvocation@@MethodName:assertThat:[authentication.getName()] @TO@ MethodInvocation@@assertThat(authentication.getName()).isEqualTo("rod") @AT@ 2803 @LENGTH@ 36
------------INS MethodInvocation@@authentication.getName() @TO@ MethodInvocation@@MethodName:assertThat:[authentication.getName()] @AT@ 2814 @LENGTH@ 24
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getName() @AT@ 2814 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@authentication.getName() @AT@ 2829 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["rod"] @TO@ MethodInvocation@@assertThat(authentication.getName()).isEqualTo("rod") @AT@ 2840 @LENGTH@ 16
------------INS StringLiteral@@"rod" @TO@ SimpleName@@MethodName:isEqualTo:["rod"] @AT@ 2850 @LENGTH@ 5


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2080 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2092 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2100 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2100 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2140 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2148 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2167 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.clientIdToClientRegistration=new ConcurrentReferenceHashMap<>() @TO@ Assignment:this.clientIdToClientRegistration=new ConcurrentHashMap<>() @AT@ 1739 @LENGTH@ 71
---UPD Assignment@@this.clientIdToClientRegistration=new ConcurrentReferenceHashMap<>() @TO@ this.clientIdToClientRegistration=new ConcurrentHashMap<>() @AT@ 1739 @LENGTH@ 70
------UPD ClassInstanceCreation@@ConcurrentReferenceHashMap<>[] @TO@ ConcurrentHashMap<>[] @AT@ 1775 @LENGTH@ 34
---------UPD ParameterizedType@@ConcurrentReferenceHashMap<> @TO@ ConcurrentHashMap<> @AT@ 1779 @LENGTH@ 28
------------UPD SimpleType@@ConcurrentReferenceHashMap @TO@ ConcurrentHashMap @AT@ 1779 @LENGTH@ 26


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1558 @LENGTH@ 1638
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1565 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1570 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> tasks=new ArrayList<Task<?>>(); @AT@ 2071 @LENGTH@ 89
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2071 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2076 @LENGTH@ 28
------UPD VariableDeclarationFragment@@tasks=new ArrayList<Task<? extends Serializable>>() @TO@ tasks=new ArrayList<Task<?>>() @AT@ 2106 @LENGTH@ 53
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 2114 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 2118 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2128 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedDataSetTestEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDataSetTestEndpointBuilder, [EndpointProducerBuilder] @AT@ 5104 @LENGTH@ 2131
---DEL Modifier@@static @AT@ 5111 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MetricsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MetricsEndpointBuilder, [EndpointProducerBuilder] @AT@ 1434 @LENGTH@ 5126
---DEL Modifier@@static @AT@ 1441 @LENGTH@ 6


UPD MethodDeclaration@@default, SpringWebserviceEndpointBuilder, MethodName:springWebservice, String path,  @TO@ default, SpringWebserviceEndpointBuilder, MethodName:springWs, String path,  @AT@ 42578 @LENGTH@ 443
---UPD SimpleName@@MethodName:springWebservice @TO@ MethodName:springWs @AT@ 42618 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:runPostAnalyzeHooks, HiveSemanticAnalyzerHookContext hookCtx, List<Task<? extends Serializable>> allRootTasks, HiveException,  @TO@ public, void, MethodName:runPostAnalyzeHooks, HiveSemanticAnalyzerHookContext hookCtx, List<Task<?>> allRootTasks, HiveException,  @AT@ 9042 @LENGTH@ 491
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> allRootTasks @TO@ List<Task<?>> allRootTasks @AT@ 9121 @LENGTH@ 47
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 9121 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9126 @LENGTH@ 28


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4607 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 4614 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 4614 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 4614 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 4614 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 4619 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 4614 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 4635 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 4644 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 4644 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 4656 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 4656 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 4661 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 4644 @LENGTH@ 7


UPD Block@@ThenBody:{  getJavaTypeMapper().fromJavaType(this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType),messageProperties);} @TO@ ThenBody:{  JavaType type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType);  if (genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()))) {    type=this.objectMapper.constructType(objectToConvert.getClass());  }  getJavaTypeMapper().fromJavaType(type,messageProperties);} @AT@ 12498 @LENGTH@ 164
---UPD ExpressionStatement@@MethodInvocation:getJavaTypeMapper().fromJavaType(this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType),messageProperties) @TO@ MethodInvocation:getJavaTypeMapper().fromJavaType(type,messageProperties) @AT@ 12503 @LENGTH@ 155
------UPD MethodInvocation@@getJavaTypeMapper().fromJavaType(this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType),messageProperties) @TO@ getJavaTypeMapper().fromJavaType(type,messageProperties) @AT@ 12503 @LENGTH@ 154
---------UPD SimpleName@@MethodName:fromJavaType:[this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType), messageProperties] @TO@ MethodName:fromJavaType:[type, messageProperties] @AT@ 12523 @LENGTH@ 134
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:fromJavaType:[this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType), messageProperties] @AT@ 12925 @LENGTH@ 4
---INS VariableDeclarationStatement@@JavaType type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType); @TO@ Block@@ThenBody:{  getJavaTypeMapper().fromJavaType(this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType),messageProperties);} @AT@ 12535 @LENGTH@ 118
------INS SimpleType@@JavaType @TO@ VariableDeclarationStatement@@JavaType type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType); @AT@ 12535 @LENGTH@ 8
------INS VariableDeclarationFragment@@type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType) @TO@ VariableDeclarationStatement@@JavaType type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType); @AT@ 12544 @LENGTH@ 108
---------MOV MethodInvocation@@this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType) @TO@ VariableDeclarationFragment@@type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType) @AT@ 12536 @LENGTH@ 101
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType) @AT@ 12544 @LENGTH@ 4
---INS IfStatement@@if (genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()))) {  type=this.objectMapper.constructType(objectToConvert.getClass());} @TO@ Block@@ThenBody:{  getJavaTypeMapper().fromJavaType(this.objectMapper.constructType(genericType == null ? objectToConvert.getClass() : genericType),messageProperties);} @AT@ 12657 @LENGTH@ 231
------INS InfixExpression@@genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @TO@ IfStatement@@if (genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()))) {  type=this.objectMapper.constructType(objectToConvert.getClass());} @AT@ 12661 @LENGTH@ 147
---------INS InfixExpression@@genericType != null && !type.isContainerType() @TO@ InfixExpression@@genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @AT@ 12661 @LENGTH@ 46
------------INS InfixExpression@@genericType != null @TO@ InfixExpression@@genericType != null && !type.isContainerType() @AT@ 12661 @LENGTH@ 19
---------------INS SimpleName@@genericType @TO@ InfixExpression@@genericType != null @AT@ 12661 @LENGTH@ 11
---------------INS Operator@@!= @TO@ InfixExpression@@genericType != null @AT@ 12672 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@genericType != null @AT@ 12676 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@genericType != null && !type.isContainerType() @AT@ 12680 @LENGTH@ 2
------------INS PrefixExpression@@!type.isContainerType() @TO@ InfixExpression@@genericType != null && !type.isContainerType() @AT@ 12684 @LENGTH@ 23
---------------INS Operator@@! @TO@ PrefixExpression@@!type.isContainerType() @AT@ 12684 @LENGTH@ 1
---------------INS MethodInvocation@@type.isContainerType() @TO@ PrefixExpression@@!type.isContainerType() @AT@ 12685 @LENGTH@ 22
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.isContainerType() @AT@ 12685 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isContainerType:[] @TO@ MethodInvocation@@type.isContainerType() @AT@ 12690 @LENGTH@ 17
---------INS Operator@@&& @TO@ InfixExpression@@genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @AT@ 12707 @LENGTH@ 2
---------INS ParenthesizedExpression@@(type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @TO@ InfixExpression@@genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @AT@ 12716 @LENGTH@ 92
------------INS InfixExpression@@type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()) @TO@ ParenthesizedExpression@@(type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers())) @AT@ 12717 @LENGTH@ 90
---------------INS MethodInvocation@@type.getRawClass().isInterface() @TO@ InfixExpression@@type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()) @AT@ 12717 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:getRawClass:[] @TO@ MethodInvocation@@type.getRawClass().isInterface() @AT@ 12717 @LENGTH@ 18
------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getRawClass().isInterface() @AT@ 12717 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isInterface:[] @TO@ MethodInvocation@@type.getRawClass().isInterface() @AT@ 12736 @LENGTH@ 13
---------------INS Operator@@|| @TO@ InfixExpression@@type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()) @AT@ 12749 @LENGTH@ 2
---------------INS MethodInvocation@@Modifier.isAbstract(type.getRawClass().getModifiers()) @TO@ InfixExpression@@type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()) @AT@ 12753 @LENGTH@ 54
------------------INS SimpleName@@Name:Modifier @TO@ MethodInvocation@@Modifier.isAbstract(type.getRawClass().getModifiers()) @AT@ 12753 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isAbstract:[type.getRawClass().getModifiers()] @TO@ MethodInvocation@@Modifier.isAbstract(type.getRawClass().getModifiers()) @AT@ 12762 @LENGTH@ 45
---------------------INS MethodInvocation@@type.getRawClass().getModifiers() @TO@ SimpleName@@MethodName:isAbstract:[type.getRawClass().getModifiers()] @AT@ 12773 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:getRawClass:[] @TO@ MethodInvocation@@type.getRawClass().getModifiers() @AT@ 12773 @LENGTH@ 18
------------------------INS SimpleName@@Name:type @TO@ MethodInvocation@@type.getRawClass().getModifiers() @AT@ 12773 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:getModifiers:[] @TO@ MethodInvocation@@type.getRawClass().getModifiers() @AT@ 12792 @LENGTH@ 14
------INS Block@@ThenBody:{  type=this.objectMapper.constructType(objectToConvert.getClass());} @TO@ IfStatement@@if (genericType != null && !type.isContainerType() && (type.getRawClass().isInterface() || Modifier.isAbstract(type.getRawClass().getModifiers()))) {  type=this.objectMapper.constructType(objectToConvert.getClass());} @AT@ 12810 @LENGTH@ 78
---------INS ExpressionStatement@@Assignment:type=this.objectMapper.constructType(objectToConvert.getClass()) @TO@ Block@@ThenBody:{  type=this.objectMapper.constructType(objectToConvert.getClass());} @AT@ 12816 @LENGTH@ 67
------------INS Assignment@@type=this.objectMapper.constructType(objectToConvert.getClass()) @TO@ ExpressionStatement@@Assignment:type=this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12816 @LENGTH@ 66
---------------INS SimpleName@@type @TO@ Assignment@@type=this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12816 @LENGTH@ 4
---------------INS Operator@@= @TO@ Assignment@@type=this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12820 @LENGTH@ 1
---------------INS MethodInvocation@@this.objectMapper.constructType(objectToConvert.getClass()) @TO@ Assignment@@type=this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12823 @LENGTH@ 59
------------------INS FieldAccess@@this.objectMapper @TO@ MethodInvocation@@this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12823 @LENGTH@ 17
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.objectMapper @AT@ 12823 @LENGTH@ 4
---------------------INS SimpleName@@objectMapper @TO@ FieldAccess@@this.objectMapper @AT@ 12828 @LENGTH@ 12
------------------INS SimpleName@@MethodName:constructType:[objectToConvert.getClass()] @TO@ MethodInvocation@@this.objectMapper.constructType(objectToConvert.getClass()) @AT@ 12841 @LENGTH@ 41
---------------------INS MethodInvocation@@objectToConvert.getClass() @TO@ SimpleName@@MethodName:constructType:[objectToConvert.getClass()] @AT@ 12855 @LENGTH@ 26
------------------------INS SimpleName@@Name:objectToConvert @TO@ MethodInvocation@@objectToConvert.getClass() @AT@ 12855 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@objectToConvert.getClass() @AT@ 12871 @LENGTH@ 10


UPD EnumDeclaration@@[public, static]SnmpActionType,  @TO@ [static]SnmpActionType,  @AT@ 15000 @LENGTH@ 71
---DEL Modifier@@public @AT@ 15000 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientCredentialsTokenGranter, AbstractTokenGranter @TO@ [@Deprecated, public]ClientCredentialsTokenGranter, AbstractTokenGranter @AT@ 1250 @LENGTH@ 1248
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientCredentialsTokenGranter, AbstractTokenGranter @AT@ 1428 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidSignatureException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidSignatureException, OAuthException @AT@ 797 @LENGTH@ 249
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidSignatureException, OAuthException @AT@ 1046 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnapprovedClientAuthenticationException, InsufficientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnapprovedClientAuthenticationException, InsufficientAuthenticationException @AT@ 184 @LENGTH@ 312
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnapprovedClientAuthenticationException, InsufficientAuthenticationException @AT@ 390 @LENGTH@ 11


UPD TypeDeclaration@@[public]JwtHelper,  @TO@ [@Deprecated, public]JwtHelper,  @AT@ 1406 @LENGTH@ 2206
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwtHelper,  @AT@ 1584 @LENGTH@ 11


UPD TypeDeclaration@@[@UriEndpoint(firstVersion="2.8.0",scheme="aws-s3",title="AWS S3 Storage Service",syntax="aws-s3:bucketNameOrArn",label="cloud,file"), public]S3Endpoint, ScheduledPollEndpoint @TO@ [@UriEndpoint(firstVersion="2.8.0",scheme="aws-s3",title="AWS S3 Storage Service",syntax="aws-s3://bucketNameOrArn",label="cloud,file"), public]S3Endpoint, ScheduledPollEndpoint @AT@ 1984 @LENGTH@ 7508
---UPD NormalAnnotation@@@UriEndpoint(firstVersion="2.8.0",scheme="aws-s3",title="AWS S3 Storage Service",syntax="aws-s3:bucketNameOrArn",label="cloud,file") @TO@ @UriEndpoint(firstVersion="2.8.0",scheme="aws-s3",title="AWS S3 Storage Service",syntax="aws-s3://bucketNameOrArn",label="cloud,file") @AT@ 1984 @LENGTH@ 146


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnauthorizedClientException, ClientAuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnauthorizedClientException, ClientAuthenticationException @AT@ 161 @LENGTH@ 453
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnauthorizedClientException, ClientAuthenticationException @AT@ 366 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedNeutronEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedNeutronEndpointBuilder, [EndpointProducerBuilder] @AT@ 4799 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 4806 @LENGTH@ 6


UPD VariableDeclarationStatement@@OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).build(); @TO@ OAuth2AuthorizedClientProvider authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).password().build(); @AT@ 10002 @LENGTH@ 289
---UPD VariableDeclarationFragment@@authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).build() @TO@ authorizedClientProvider=OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).password().build() @AT@ 10033 @LENGTH@ 257
------UPD MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).build() @TO@ OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).password().build() @AT@ 10064 @LENGTH@ 226
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@OAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials(configurer -> configurer.accessTokenResponseClient(clientCredentialsTokenResponseClient)).build() @AT@ 10082 @LENGTH@ 229


UPD VariableDeclarationStatement@@Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @TO@ Cache<?,?> cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get(); @AT@ 2120 @LENGTH@ 184
---UPD VariableDeclarationFragment@@cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ cache=new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2132 @LENGTH@ 171
------UPD MethodInvocation@@new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(true),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @TO@ new PassiveServiceSupplier<Cache<?,?>>(context.getServiceRegistry(false),InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)).get() @AT@ 2140 @LENGTH@ 163
---------UPD ClassInstanceCreation@@PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(true), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @TO@ PassiveServiceSupplier<Cache<?,?>>[context.getServiceRegistry(false), InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName)] @AT@ 2140 @LENGTH@ 157
------------UPD MethodInvocation@@context.getServiceRegistry(true) @TO@ context.getServiceRegistry(false) @AT@ 2180 @LENGTH@ 32
---------------UPD SimpleName@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 2188 @LENGTH@ 24
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 2207 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]BeanstalkCommand,  @TO@ [static]BeanstalkCommand,  @AT@ 45292 @LENGTH@ 92
---DEL Modifier@@public @AT@ 45292 @LENGTH@ 6


UPD TypeDeclaration@@[public]AuthorizationCodeResourceDetails, AbstractRedirectResourceDetails @TO@ [@Deprecated, public]AuthorizationCodeResourceDetails, AbstractRedirectResourceDetails @AT@ 227 @LENGTH@ 177
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationCodeResourceDetails, AbstractRedirectResourceDetails @AT@ 405 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]SchedulerEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]SchedulerEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1435 @LENGTH@ 1338
---DEL Modifier@@static @AT@ 1442 @LENGTH@ 6


UPD TryStatement@@try {  Authentication authenticationResult=attemptAuthentication(request,response);  if (authenticationResult == null) {    filterChain.doFilter(request,response);    return;  }  successfulAuthentication(request,response,filterChain,authenticationResult);} catch (AuthenticationException e) {  unsuccessfulAuthentication(request,response,e);} @TO@ try {  Authentication authenticationResult=attemptAuthentication(request,response);  if (authenticationResult == null) {    filterChain.doFilter(request,response);    return;  }  HttpSession session=request.getSession(false);  if (session != null) {    request.changeSessionId();  }  successfulAuthentication(request,response,filterChain,authenticationResult);} catch (AuthenticationException e) {  unsuccessfulAuthentication(request,response,e);} @AT@ 6024 @LENGTH@ 370
---INS VariableDeclarationStatement@@HttpSession session=request.getSession(false); @TO@ TryStatement@@try {  Authentication authenticationResult=attemptAuthentication(request,response);  if (authenticationResult == null) {    filterChain.doFilter(request,response);    return;  }  successfulAuthentication(request,response,filterChain,authenticationResult);} catch (AuthenticationException e) {  unsuccessfulAuthentication(request,response,e);} @AT@ 6256 @LENGTH@ 48
------INS SimpleType@@HttpSession @TO@ VariableDeclarationStatement@@HttpSession session=request.getSession(false); @AT@ 6256 @LENGTH@ 11
------INS VariableDeclarationFragment@@session=request.getSession(false) @TO@ VariableDeclarationStatement@@HttpSession session=request.getSession(false); @AT@ 6268 @LENGTH@ 35
---------INS SimpleName@@session @TO@ VariableDeclarationFragment@@session=request.getSession(false) @AT@ 6268 @LENGTH@ 7
---------INS MethodInvocation@@request.getSession(false) @TO@ VariableDeclarationFragment@@session=request.getSession(false) @AT@ 6278 @LENGTH@ 25
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getSession(false) @AT@ 6278 @LENGTH@ 7
------------INS SimpleName@@MethodName:getSession:[false] @TO@ MethodInvocation@@request.getSession(false) @AT@ 6286 @LENGTH@ 17
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getSession:[false] @AT@ 6297 @LENGTH@ 5
---INS IfStatement@@if (session != null) {  request.changeSessionId();} @TO@ TryStatement@@try {  Authentication authenticationResult=attemptAuthentication(request,response);  if (authenticationResult == null) {    filterChain.doFilter(request,response);    return;  }  successfulAuthentication(request,response,filterChain,authenticationResult);} catch (AuthenticationException e) {  unsuccessfulAuthentication(request,response,e);} @AT@ 6308 @LENGTH@ 58
------INS InfixExpression@@session != null @TO@ IfStatement@@if (session != null) {  request.changeSessionId();} @AT@ 6312 @LENGTH@ 15
---------INS SimpleName@@session @TO@ InfixExpression@@session != null @AT@ 6312 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@session != null @AT@ 6319 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@session != null @AT@ 6323 @LENGTH@ 4
------INS Block@@ThenBody:{  request.changeSessionId();} @TO@ IfStatement@@if (session != null) {  request.changeSessionId();} @AT@ 6329 @LENGTH@ 37
---------INS ExpressionStatement@@MethodInvocation:request.changeSessionId() @TO@ Block@@ThenBody:{  request.changeSessionId();} @AT@ 6335 @LENGTH@ 26
------------INS MethodInvocation@@request.changeSessionId() @TO@ ExpressionStatement@@MethodInvocation:request.changeSessionId() @AT@ 6335 @LENGTH@ 25
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.changeSessionId() @AT@ 6335 @LENGTH@ 7
---------------INS SimpleName@@MethodName:changeSessionId:[] @TO@ MethodInvocation@@request.changeSessionId() @AT@ 6343 @LENGTH@ 17


UPD TypeDeclaration@@[public]OAuthConsumerSupport,  @TO@ [@Deprecated, public]OAuthConsumerSupport,  @AT@ 793 @LENGTH@ 4379
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerSupport,  @AT@ 1014 @LENGTH@ 11


UPD VariableDeclarationStatement@@Saml2WebSsoAuthenticationFilter webSsoFilter=new Saml2WebSsoAuthenticationFilter(this.relyingPartyRegistrationRepository); @TO@ Saml2WebSsoAuthenticationFilter webSsoFilter=new Saml2WebSsoAuthenticationFilter(this.relyingPartyRegistrationRepository,this.loginProcessingUrl); @AT@ 6994 @LENGTH@ 124
---UPD VariableDeclarationFragment@@webSsoFilter=new Saml2WebSsoAuthenticationFilter(this.relyingPartyRegistrationRepository) @TO@ webSsoFilter=new Saml2WebSsoAuthenticationFilter(this.relyingPartyRegistrationRepository,this.loginProcessingUrl) @AT@ 7026 @LENGTH@ 91
------UPD ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[this.relyingPartyRegistrationRepository] @TO@ Saml2WebSsoAuthenticationFilter[this.relyingPartyRegistrationRepository, this.loginProcessingUrl] @AT@ 7041 @LENGTH@ 76
---------INS FieldAccess@@this.loginProcessingUrl @TO@ ClassInstanceCreation@@Saml2WebSsoAuthenticationFilter[this.relyingPartyRegistrationRepository] @AT@ 7127 @LENGTH@ 23
------------INS ThisExpression@@this @TO@ FieldAccess@@this.loginProcessingUrl @AT@ 7127 @LENGTH@ 4
------------INS SimpleName@@loginProcessingUrl @TO@ FieldAccess@@this.loginProcessingUrl @AT@ 7132 @LENGTH@ 18


UPD EnumDeclaration@@[public, static]DropboxUploadMode,  @TO@ [static]DropboxUploadMode,  @AT@ 30844 @LENGTH@ 64
---DEL Modifier@@public @AT@ 30844 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]NonceAlreadyUsedException, OAuthException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]NonceAlreadyUsedException, OAuthException @AT@ 753 @LENGTH@ 162
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]NonceAlreadyUsedException, OAuthException @AT@ 1002 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, long, [SERIAL_VERSION_UID=520L] @TO@ public, static, final, long, [SERIAL_VERSION_UID=530L] @AT@ 1460 @LENGTH@ 51
---UPD VariableDeclarationFragment@@SERIAL_VERSION_UID=520L @TO@ SERIAL_VERSION_UID=530L @AT@ 1485 @LENGTH@ 25
------UPD NumberLiteral@@520L @TO@ 530L @AT@ 1506 @LENGTH@ 4


UPD LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining());
  byte[] x509=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPublicKey)keyFactory.generatePublic(new X509EncodedKeySpec(x509));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @TO@ source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----");
  StringBuilder base64Encoded=new StringBuilder();
  for (  String line : lines) {
    if (RsaKeyConverters.isNotX509Wrapper(line)) {
      base64Encoded.append(line);
    }
  }
  byte[] x509=Base64.getDecoder().decode(base64Encoded.toString());
  try {
    return (RSAPublicKey)keyFactory.generatePublic(new X509EncodedKeySpec(x509));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 3726 @LENGTH@ 638
---DEL VariableDeclarationStatement@@String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining()); @AT@ 4002 @LENGTH@ 123
------DEL VariableDeclarationFragment@@base64Encoded=lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining()) @AT@ 4009 @LENGTH@ 115
---------DEL MethodInvocation@@lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining()) @AT@ 4025 @LENGTH@ 99
------------DEL MethodInvocation@@MethodName:filter:[RsaKeyConverters::isNotX509Wrapper] @AT@ 4025 @LENGTH@ 63
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 4025 @LENGTH@ 14
------------DEL SimpleName@@Name:lines @AT@ 4025 @LENGTH@ 5
------------DEL SimpleName@@MethodName:collect:[Collectors.joining()] @AT@ 4095 @LENGTH@ 29
---------------DEL MethodInvocation@@Collectors.joining() @AT@ 4103 @LENGTH@ 20
---INS VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @TO@ LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining());
  byte[] x509=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPublicKey)keyFactory.generatePublic(new X509EncodedKeySpec(x509));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 4066 @LENGTH@ 50
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @AT@ 4002 @LENGTH@ 6
------INS VariableDeclarationFragment@@base64Encoded=new StringBuilder() @TO@ VariableDeclarationStatement@@StringBuilder base64Encoded=new StringBuilder(); @AT@ 4080 @LENGTH@ 35
---------MOV SimpleName@@base64Encoded @TO@ VariableDeclarationFragment@@base64Encoded=new StringBuilder() @AT@ 4009 @LENGTH@ 13
---------INS ClassInstanceCreation@@StringBuilder[] @TO@ VariableDeclarationFragment@@base64Encoded=new StringBuilder() @AT@ 4096 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4096 @LENGTH@ 3
------------INS SimpleType@@StringBuilder @TO@ ClassInstanceCreation@@StringBuilder[] @AT@ 4100 @LENGTH@ 13
---INS EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotX509Wrapper(line)) {    base64Encoded.append(line);  }} @TO@ LambdaExpression@@source -> {
  List<String> lines=readAllLines(source);
  Assert.isTrue(!lines.isEmpty() && lines.get(0).startsWith(X509_PEM_HEADER),"Key is not in PEM-encoded X.509 format, " + "please check that the header begins with -----" + X509_PEM_HEADER + "-----");
  String base64Encoded=lines.stream().filter(RsaKeyConverters::isNotX509Wrapper).collect(Collectors.joining());
  byte[] x509=Base64.getDecoder().decode(base64Encoded);
  try {
    return (RSAPublicKey)keyFactory.generatePublic(new X509EncodedKeySpec(x509));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException(e);
  }
}
 @AT@ 4120 @LENGTH@ 122
------INS SingleVariableDeclaration@@String line @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotX509Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 4125 @LENGTH@ 11
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String line @AT@ 4125 @LENGTH@ 6
---------INS SimpleName@@line @TO@ SingleVariableDeclaration@@String line @AT@ 4132 @LENGTH@ 4
------INS SimpleName@@lines @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotX509Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 4139 @LENGTH@ 5
------INS IfStatement@@if (RsaKeyConverters.isNotX509Wrapper(line)) {  base64Encoded.append(line);} @TO@ EnhancedForStatement@@for (String line : lines) {  if (RsaKeyConverters.isNotX509Wrapper(line)) {    base64Encoded.append(line);  }} @AT@ 4152 @LENGTH@ 85
---------INS MethodInvocation@@RsaKeyConverters.isNotX509Wrapper(line) @TO@ IfStatement@@if (RsaKeyConverters.isNotX509Wrapper(line)) {  base64Encoded.append(line);} @AT@ 4156 @LENGTH@ 39
------------INS SimpleName@@Name:RsaKeyConverters @TO@ MethodInvocation@@RsaKeyConverters.isNotX509Wrapper(line) @AT@ 4156 @LENGTH@ 16
------------INS SimpleName@@MethodName:isNotX509Wrapper:[line] @TO@ MethodInvocation@@RsaKeyConverters.isNotX509Wrapper(line) @AT@ 4173 @LENGTH@ 22
---------------INS SimpleName@@line @TO@ SimpleName@@MethodName:isNotX509Wrapper:[line] @AT@ 4190 @LENGTH@ 4
---------INS Block@@ThenBody:{  base64Encoded.append(line);} @TO@ IfStatement@@if (RsaKeyConverters.isNotX509Wrapper(line)) {  base64Encoded.append(line);} @AT@ 4197 @LENGTH@ 40
------------INS ExpressionStatement@@MethodInvocation:base64Encoded.append(line) @TO@ Block@@ThenBody:{  base64Encoded.append(line);} @AT@ 4204 @LENGTH@ 27
---------------INS MethodInvocation@@base64Encoded.append(line) @TO@ ExpressionStatement@@MethodInvocation:base64Encoded.append(line) @AT@ 4204 @LENGTH@ 26
------------------MOV SimpleName@@Name:Collectors @TO@ MethodInvocation@@base64Encoded.append(line) @AT@ 4103 @LENGTH@ 10
------------------MOV SimpleName@@MethodName:joining:[] @TO@ MethodInvocation@@base64Encoded.append(line) @AT@ 4114 @LENGTH@ 9
---------------------INS SimpleName@@line @TO@ SimpleName@@MethodName:joining:[] @AT@ 4225 @LENGTH@ 4
---UPD VariableDeclarationStatement@@byte[] x509=Base64.getDecoder().decode(base64Encoded); @TO@ byte[] x509=Base64.getDecoder().decode(base64Encoded.toString()); @AT@ 4129 @LENGTH@ 56
------UPD VariableDeclarationFragment@@x509=Base64.getDecoder().decode(base64Encoded) @TO@ x509=Base64.getDecoder().decode(base64Encoded.toString()) @AT@ 4136 @LENGTH@ 48
---------UPD MethodInvocation@@Base64.getDecoder().decode(base64Encoded) @TO@ Base64.getDecoder().decode(base64Encoded.toString()) @AT@ 4143 @LENGTH@ 41
------------UPD SimpleName@@MethodName:decode:[base64Encoded] @TO@ MethodName:decode:[base64Encoded.toString()] @AT@ 4163 @LENGTH@ 21
---------------DEL SimpleName@@base64Encoded @AT@ 4170 @LENGTH@ 13
---------------INS MethodInvocation@@base64Encoded.toString() @TO@ SimpleName@@MethodName:decode:[base64Encoded] @AT@ 4287 @LENGTH@ 24
------------------INS SimpleName@@Name:base64Encoded @TO@ MethodInvocation@@base64Encoded.toString() @AT@ 4287 @LENGTH@ 13
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@base64Encoded.toString() @AT@ 4301 @LENGTH@ 10


UPD TypeDeclaration@@[public]Client2Application,  @TO@ [public, final]Client2Application,  @AT@ 997 @LENGTH@ 261
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Client2Application,  @AT@ 1004 @LENGTH@ 5


UPD TypeDeclaration@@[public]OAuthConsumerContextFilter, [Filter, InitializingBean, MessageSourceAware] @TO@ [@Deprecated, public]OAuthConsumerContextFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 3172 @LENGTH@ 15539
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthConsumerContextFilter, [Filter, InitializingBean, MessageSourceAware] @AT@ 3393 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]ScpEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ScpEndpointBuilder, [EndpointProducerBuilder] @AT@ 1419 @LENGTH@ 10868
---DEL Modifier@@static @AT@ 1426 @LENGTH@ 6


UPD MethodDeclaration@@default, DataSetTestEndpointBuilder, MethodName:dataSetTest, String path,  @TO@ default, DataSetTestEndpointBuilder, MethodName:datasetTest, String path,  @AT@ 7699 @LENGTH@ 411
---UPD SimpleName@@MethodName:dataSetTest @TO@ MethodName:datasetTest @AT@ 7734 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]GenericFileExist,  @TO@ [static]GenericFileExist,  @AT@ 222335 @LENGTH@ 100
---DEL Modifier@@public @AT@ 222335 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedTimerEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedTimerEndpointBuilder, [EndpointConsumerBuilder] @AT@ 6022 @LENGTH@ 4705
---DEL Modifier@@static @AT@ 6029 @LENGTH@ 6


INS FieldDeclaration@@private, final, Instant, [createdAt] @TO@ TypeDeclaration@@[@Getter, @Setter, @Node, @ToString, @AllArgsConstructor, @EqualsAndHashCode, public]PersonWithAllConstructor,  @AT@ 1784 @LENGTH@ 32
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, Instant, [createdAt] @AT@ 1784 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, Instant, [createdAt] @AT@ 1792 @LENGTH@ 5
---INS SimpleType@@Instant @TO@ FieldDeclaration@@private, final, Instant, [createdAt] @AT@ 1798 @LENGTH@ 7
---INS VariableDeclarationFragment@@createdAt @TO@ FieldDeclaration@@private, final, Instant, [createdAt] @AT@ 1806 @LENGTH@ 9
------INS SimpleName@@createdAt @TO@ VariableDeclarationFragment@@createdAt @AT@ 1806 @LENGTH@ 9


UPD FieldDeclaration@@private, static, final, OAuth2IntrospectionAuthenticationToken, [INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),JWT_CLAIMS,Collections.emptyList())] @TO@ private, static, final, OAuth2IntrospectionAuthenticationToken, [INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),new OAuth2TokenAttributes(JWT_CLAIMS),Collections.emptyList())] @AT@ 9165 @LENGTH@ 192
---UPD VariableDeclarationFragment@@INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),JWT_CLAIMS,Collections.emptyList()) @TO@ INTROSPECTION_AUTHENTICATION_TOKEN=new OAuth2IntrospectionAuthenticationToken(noScopes(),new OAuth2TokenAttributes(JWT_CLAIMS),Collections.emptyList()) @AT@ 9225 @LENGTH@ 131
------UPD ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[noScopes(), JWT_CLAIMS, Collections.emptyList()] @TO@ OAuth2IntrospectionAuthenticationToken[noScopes(), new OAuth2TokenAttributes(JWT_CLAIMS), Collections.emptyList()] @AT@ 9265 @LENGTH@ 91
---------INS ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @TO@ ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[noScopes(), JWT_CLAIMS, Collections.emptyList()] @AT@ 9391 @LENGTH@ 37
------------MOV SimpleName@@JWT_CLAIMS @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @AT@ 9320 @LENGTH@ 10
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @AT@ 9391 @LENGTH@ 3
------------INS SimpleType@@OAuth2TokenAttributes @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[JWT_CLAIMS] @AT@ 9395 @LENGTH@ 21


INS TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @TO@ MethodDeclaration@@private, String, MethodName:readString, final DataInputStream dataIn, IOException,  @AT@ 4490 @LENGTH@ 506
---INS VariableDeclarationExpression@@final ByteArrayOutputStream buffer=new ByteArrayOutputStream() @TO@ TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @AT@ 4495 @LENGTH@ 64
------INS Modifier@@final @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream buffer=new ByteArrayOutputStream() @AT@ 4495 @LENGTH@ 5
------INS SimpleType@@ByteArrayOutputStream @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream buffer=new ByteArrayOutputStream() @AT@ 4501 @LENGTH@ 21
------MOV VariableDeclarationFragment@@buffer=new ByteArrayOutputStream() @TO@ VariableDeclarationExpression@@final ByteArrayOutputStream buffer=new ByteArrayOutputStream() @AT@ 4518 @LENGTH@ 36
---MOV VariableDeclarationStatement@@int nextByte; @TO@ TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @AT@ 4564 @LENGTH@ 13
---MOV WhileStatement@@while ((nextByte=dataIn.readUnsignedByte()) != 0) {  buffer.write(nextByte);} @TO@ TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @AT@ 4586 @LENGTH@ 99
---MOV IfStatement@@if (charsetName != null) {  return new String(buffer.toByteArray(),charsetName);} @TO@ TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @AT@ 4694 @LENGTH@ 102
---MOV ReturnStatement@@ClassInstanceCreation:new String(buffer.toByteArray()) @TO@ TryStatement@@try (final ByteArrayOutputStream buffer=new ByteArrayOutputStream()){  int nextByte;  while ((nextByte=dataIn.readUnsignedByte()) != 0) {    buffer.write(nextByte);  }  if (charsetName != null) {    return new String(buffer.toByteArray(),charsetName);  }  return new String(buffer.toByteArray());}  @AT@ 4903 @LENGTH@ 40


UPD IfStatement@@if (hashValueSerializer() == null & value instanceof byte[]) {  return (byte[])value;} @TO@ if (hashValueSerializer() == null && value instanceof byte[]) {  return (byte[])value;} @AT@ 4884 @LENGTH@ 92
---UPD InfixExpression@@hashValueSerializer() == null & value instanceof byte[] @TO@ hashValueSerializer() == null && value instanceof byte[] @AT@ 4888 @LENGTH@ 55
------UPD Operator@@& @TO@ && @AT@ 4917 @LENGTH@ 1


UPD TypeDeclaration@@[public]RefreshTokenGranter, AbstractTokenGranter @TO@ [@Deprecated, public]RefreshTokenGranter, AbstractTokenGranter @AT@ 1242 @LENGTH@ 890
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]RefreshTokenGranter, AbstractTokenGranter @AT@ 1420 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedLogEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLogEndpointBuilder, [EndpointProducerBuilder] @AT@ 20492 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 20499 @LENGTH@ 6


UPD VariableDeclarationStatement@@HashMap<Task<? extends Serializable>,Set<String>> taskToAliases=new LinkedHashMap<Task<? extends Serializable>,Set<String>>(); @TO@ HashMap<Task<?>,Set<String>> taskToAliases=new LinkedHashMap<Task<?>,Set<String>>(); @AT@ 2250 @LENGTH@ 138
---UPD ParameterizedType@@HashMap<Task<? extends Serializable>,Set<String>> @TO@ HashMap<Task<?>,Set<String>> @AT@ 2250 @LENGTH@ 50
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2258 @LENGTH@ 28
---UPD VariableDeclarationFragment@@taskToAliases=new LinkedHashMap<Task<? extends Serializable>,Set<String>>() @TO@ taskToAliases=new LinkedHashMap<Task<?>,Set<String>>() @AT@ 2301 @LENGTH@ 86
------UPD ClassInstanceCreation@@LinkedHashMap<Task<? extends Serializable>,Set<String>>[] @TO@ LinkedHashMap<Task<?>,Set<String>>[] @AT@ 2325 @LENGTH@ 62
---------UPD ParameterizedType@@LinkedHashMap<Task<? extends Serializable>,Set<String>> @TO@ LinkedHashMap<Task<?>,Set<String>> @AT@ 2329 @LENGTH@ 56
------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2343 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]TimerEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]TimerEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1466 @LENGTH@ 4472
---DEL Modifier@@static @AT@ 1473 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]EndpointType,  @TO@ [static]EndpointType,  @AT@ 57702 @LENGTH@ 71
---DEL Modifier@@public @AT@ 57702 @LENGTH@ 6


UPD FieldDeclaration@@Producer<String>, [producer] @TO@ private, Producer<String>, [producer] @AT@ 2827 @LENGTH@ 26
---INS Modifier@@private @TO@ FieldDeclaration@@Producer<String>, [producer] @AT@ 2828 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @AT@ 19212 @LENGTH@ 173
---DEL MethodInvocation@@authenticationFilter.setRequiresAuthenticationRequestMatcher(new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)) @AT@ 19212 @LENGTH@ 172
------DEL SimpleName@@Name:authenticationFilter @AT@ 19212 @LENGTH@ 20
------DEL SimpleName@@MethodName:setRequiresAuthenticationRequestMatcher:[new AndRequestMatcher(createLoginProcessingUrlMatcher(this.loginProcessingUrl),authenticationNullMatcher)] @AT@ 19233 @LENGTH@ 151
---------DEL ClassInstanceCreation@@AndRequestMatcher[createLoginProcessingUrlMatcher(this.loginProcessingUrl), authenticationNullMatcher] @AT@ 19273 @LENGTH@ 110
------------DEL New@@new @AT@ 19273 @LENGTH@ 3
------------DEL SimpleType@@AndRequestMatcher @AT@ 19277 @LENGTH@ 17
------------DEL MethodInvocation@@createLoginProcessingUrlMatcher(this.loginProcessingUrl) @AT@ 19295 @LENGTH@ 56
---------------DEL SimpleName@@MethodName:createLoginProcessingUrlMatcher:[this.loginProcessingUrl] @AT@ 19295 @LENGTH@ 56
------------------DEL FieldAccess@@this.loginProcessingUrl @AT@ 19327 @LENGTH@ 23
---------------------DEL ThisExpression@@this @AT@ 19327 @LENGTH@ 4
---------------------DEL SimpleName@@loginProcessingUrl @AT@ 19332 @LENGTH@ 18
------------DEL SimpleName@@authenticationNullMatcher @AT@ 19357 @LENGTH@ 25


UPD TypeDeclaration@@[public, static]AdvancedDnsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDnsEndpointBuilder, [EndpointProducerBuilder] @AT@ 2372 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2379 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MustacheEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MustacheEndpointBuilder, [EndpointProducerBuilder] @AT@ 1391 @LENGTH@ 2628
---DEL Modifier@@static @AT@ 1398 @LENGTH@ 6


INS MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @TO@ TypeDeclaration@@[@Configuration, static]Config, AbstractMongoClientConfiguration @AT@ 2903 @LENGTH@ 60
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2903 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2913 @LENGTH@ 7
---INS SimpleName@@MethodName:autoIndexCreation @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2921 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2946 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2953 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ MethodInvocation:this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 5197 @LENGTH@ 84
---UPD MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @TO@ this.clock.instant().isAfter(token.getExpiresAt().minus(this.clockSkew)) @AT@ 5204 @LENGTH@ 76
------UPD MethodInvocation@@MethodName:getExpiresAt:[] @TO@ MethodName:instant:[] @AT@ 5204 @LENGTH@ 20
------INS FieldAccess@@this.clock @TO@ MethodInvocation@@token.getExpiresAt().isBefore(Instant.now(this.clock).minus(this.clockSkew)) @AT@ 5204 @LENGTH@ 10
---------INS ThisExpression@@this @TO@ FieldAccess@@this.clock @AT@ 5204 @LENGTH@ 4
---------INS SimpleName@@clock @TO@ FieldAccess@@this.clock @AT@ 5209 @LENGTH@ 5
------DEL SimpleName@@Name:token @AT@ 5204 @LENGTH@ 5
------UPD SimpleName@@MethodName:isBefore:[Instant.now(this.clock).minus(this.clockSkew)] @TO@ MethodName:isAfter:[token.getExpiresAt().minus(this.clockSkew)] @AT@ 5225 @LENGTH@ 55
---------UPD MethodInvocation@@Instant.now(this.clock).minus(this.clockSkew) @TO@ token.getExpiresAt().minus(this.clockSkew) @AT@ 5234 @LENGTH@ 45
------------UPD MethodInvocation@@MethodName:now:[this.clock] @TO@ MethodName:getExpiresAt:[] @AT@ 5234 @LENGTH@ 23
---------------DEL FieldAccess@@this.clock @AT@ 5246 @LENGTH@ 10
------------------DEL ThisExpression@@this @AT@ 5246 @LENGTH@ 4
------------------DEL SimpleName@@clock @AT@ 5251 @LENGTH@ 5
------------UPD SimpleName@@Name:Instant @TO@ Name:token @AT@ 5234 @LENGTH@ 7


UPD TypeDeclaration@@[public]DefaultAuthenticationKeyGenerator, [AuthenticationKeyGenerator] @TO@ [@Deprecated, public]DefaultAuthenticationKeyGenerator, [AuthenticationKeyGenerator] @AT@ 1281 @LENGTH@ 1379
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultAuthenticationKeyGenerator, [AuthenticationKeyGenerator] @AT@ 1459 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @TO@ TypeDeclaration@@[public, abstract]AbstractMessageListenerContainer, RabbitAccessor[MessageListenerContainer, ApplicationContextAware, BeanNameAware, DisposableBean, ApplicationEventPublisherAware] @AT@ 4761 @LENGTH@ 52
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @AT@ 4761 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @AT@ 4769 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @AT@ 4776 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @AT@ 4782 @LENGTH@ 6
---INS VariableDeclarationFragment@@UNCHECKED="unchecked" @TO@ FieldDeclaration@@private, static, final, String, [UNCHECKED="unchecked"] @AT@ 4789 @LENGTH@ 23
------INS SimpleName@@UNCHECKED @TO@ VariableDeclarationFragment@@UNCHECKED="unchecked" @AT@ 4789 @LENGTH@ 9
------INS StringLiteral@@"unchecked" @TO@ VariableDeclarationFragment@@UNCHECKED="unchecked" @AT@ 4801 @LENGTH@ 11


UPD LambdaExpression@@(cd,a,c) -> {
  if (confirmLatch.getCount() == 2) {
    template.convertAndSend(QUEUE1,((MyCD)cd).payload);
  }
  confirmLatch.countDown();
}
 @TO@ (cd,a,c) -> {
  confirmLatch.countDown();
  if (confirmLatch.getCount() == 1) {
    template.convertAndSend(QUEUE1,((MyCD)cd).payload);
  }
}
 @AT@ 2398 @LENGTH@ 150
---UPD IfStatement@@if (confirmLatch.getCount() == 2) {  template.convertAndSend(QUEUE1,((MyCD)cd).payload);} @TO@ if (confirmLatch.getCount() == 1) {  template.convertAndSend(QUEUE1,((MyCD)cd).payload);} @AT@ 2417 @LENGTH@ 98
------UPD InfixExpression@@confirmLatch.getCount() == 2 @TO@ confirmLatch.getCount() == 1 @AT@ 2421 @LENGTH@ 28
---------UPD NumberLiteral@@2 @TO@ 1 @AT@ 2448 @LENGTH@ 1
---MOV IfStatement@@if (confirmLatch.getCount() == 2) {  template.convertAndSend(QUEUE1,((MyCD)cd).payload);} @TO@ LambdaExpression@@(cd,a,c) -> {
  if (confirmLatch.getCount() == 2) {
    template.convertAndSend(QUEUE1,((MyCD)cd).payload);
  }
  confirmLatch.countDown();
}
 @AT@ 2417 @LENGTH@ 98


UPD TypeDeclaration@@[public]ExpiringTimestampNonceServices, [OAuthNonceServices] @TO@ [@Deprecated, public]ExpiringTimestampNonceServices, [OAuthNonceServices] @AT@ 1260 @LENGTH@ 986
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ExpiringTimestampNonceServices, [OAuthNonceServices] @AT@ 1481 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("deprecation"), public]InMemoryImplicitGrantService, [ImplicitGrantService] @TO@ [@SuppressWarnings("deprecation"), @Deprecated, public]InMemoryImplicitGrantService, [ImplicitGrantService] @AT@ 344 @LENGTH@ 531
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("deprecation"), public]InMemoryImplicitGrantService, [ImplicitGrantService] @AT@ 554 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]VelocityEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]VelocityEndpointBuilder, [EndpointProducerBuilder] @AT@ 1391 @LENGTH@ 3099
---DEL Modifier@@static @AT@ 1398 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]ShardIteratorType,  @TO@ [static]ShardIteratorType,  @AT@ 5949 @LENGTH@ 117
---DEL Modifier@@public @AT@ 5949 @LENGTH@ 6


UPD TypeDeclaration@@[public]ClientDetailsService,  @TO@ [@Deprecated, public]ClientDetailsService,  @AT@ 749 @LENGTH@ 429
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ClientDetailsService,  @AT@ 927 @LENGTH@ 11


UPD TypeDeclaration@@[public]AuthorizationServerBeanDefinitionParser, ProviderBeanDefinitionParser @TO@ [@Deprecated, public]AuthorizationServerBeanDefinitionParser, ProviderBeanDefinitionParser @AT@ 2402 @LENGTH@ 13589
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationServerBeanDefinitionParser, ProviderBeanDefinitionParser @AT@ 2579 @LENGTH@ 11


UPD TypeDeclaration@@[public]OAuth2RestOperations, [RestOperations] @TO@ [@Deprecated, public]OAuth2RestOperations, [RestOperations] @AT@ 1014 @LENGTH@ 237
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RestOperations, [RestOperations] @AT@ 1192 @LENGTH@ 11


UPD SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;case "rest":s="restEndpoint";break;} @TO@ switch (s) {case "class":  s="clas";break;case "package":s="packag";break;case "rest":s="restEndpoint";break;default :break;} @AT@ 23506 @LENGTH@ 268
---INS SwitchCase@@default @TO@ SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;case "rest":s="restEndpoint";break;} @AT@ 23715 @LENGTH@ 8
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (s) {case "class":  s="clas";break;case "package":s="packag";break;case "rest":s="restEndpoint";break;} @AT@ 23740 @LENGTH@ 6


MOV FieldDeclaration@@private, String, [uri] @TO@ TypeDeclaration@@[@Metadata(label="eip,endpoint,routing"), @XmlRootElement(name="toD"), @XmlAccessorType(XmlAccessType.FIELD), public]ToDynamicDefinition, NoOutputDefinition<ToDynamicDefinition> @AT@ 1915 @LENGTH@ 19


UPD TypeDeclaration@@[public, static]SparkEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]SparkEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1447 @LENGTH@ 7332
---DEL Modifier@@static @AT@ 1454 @LENGTH@ 6


INS VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @TO@ MethodDeclaration@@public, OAuth2AuthorizedClient, MethodName:authorize, OAuth2AuthorizeRequest authorizeRequest,  @AT@ 4869 @LENGTH@ 349
---INS SimpleType@@OAuth2AuthorizationContext @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @AT@ 4869 @LENGTH@ 26
---INS VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build(); @AT@ 4896 @LENGTH@ 321
------INS SimpleName@@authorizationContext @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4896 @LENGTH@ 20
------INS MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4919 @LENGTH@ 298
---------INS MethodInvocation@@MethodName:attributes:[attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4919 @LENGTH@ 285
------------INS LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @TO@ MethodInvocation@@MethodName:attributes:[attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
] @AT@ 4976 @LENGTH@ 227
---------------MOV VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 4820 @LENGTH@ 174
------------------DEL SimpleType@@OAuth2AuthorizationContext @AT@ 4820 @LENGTH@ 26
------------------UPD VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @TO@ contextAttributes=this.contextAttributesMapper.apply(authorizeRequest) @AT@ 4847 @LENGTH@ 146
---------------------DEL SimpleName@@authorizationContext @AT@ 4847 @LENGTH@ 20
---------------------DEL MethodInvocation@@contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 4870 @LENGTH@ 123
------------------------DEL MethodInvocation@@MethodName:attributes:[this.contextAttributesMapper.apply(authorizeRequest)] @AT@ 4870 @LENGTH@ 110
------------------------DEL MethodInvocation@@MethodName:principal:[principal] @AT@ 4870 @LENGTH@ 40
---------------------------DEL SimpleName@@principal @AT@ 4900 @LENGTH@ 9
------------------------DEL SimpleName@@Name:contextBuilder @AT@ 4870 @LENGTH@ 14
------------------------DEL SimpleName@@MethodName:build:[] @AT@ 4986 @LENGTH@ 7
---------------------MOV MethodInvocation@@this.contextAttributesMapper.apply(authorizeRequest) @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 4927 @LENGTH@ 52
---------------------INS SimpleName@@contextAttributes @TO@ VariableDeclarationFragment@@authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build() @AT@ 5017 @LENGTH@ 17
------------------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@OAuth2AuthorizationContext authorizationContext=contextBuilder.principal(principal).attributes(this.contextAttributesMapper.apply(authorizeRequest)).build(); @AT@ 4997 @LENGTH@ 19
---------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 4997 @LENGTH@ 3
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 5001 @LENGTH@ 6
---------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 5009 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@attributes @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 4976 @LENGTH@ 10
------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 4976 @LENGTH@ 10
---------------INS IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @TO@ LambdaExpression@@attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
 @AT@ 5096 @LENGTH@ 101
------------------INS PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @TO@ IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @AT@ 5100 @LENGTH@ 43
---------------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @AT@ 5100 @LENGTH@ 1
---------------------INS MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(contextAttributes) @AT@ 5101 @LENGTH@ 42
------------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @AT@ 5101 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:isEmpty:[contextAttributes] @TO@ MethodInvocation@@CollectionUtils.isEmpty(contextAttributes) @AT@ 5117 @LENGTH@ 26
---------------------------INS SimpleName@@contextAttributes @TO@ SimpleName@@MethodName:isEmpty:[contextAttributes] @AT@ 5125 @LENGTH@ 17
------------------INS Block@@ThenBody:{  attributes.putAll(contextAttributes);} @TO@ IfStatement@@if (!CollectionUtils.isEmpty(contextAttributes)) {  attributes.putAll(contextAttributes);} @AT@ 5145 @LENGTH@ 52
---------------------INS ExpressionStatement@@MethodInvocation:attributes.putAll(contextAttributes) @TO@ Block@@ThenBody:{  attributes.putAll(contextAttributes);} @AT@ 5153 @LENGTH@ 37
------------------------INS MethodInvocation@@attributes.putAll(contextAttributes) @TO@ ExpressionStatement@@MethodInvocation:attributes.putAll(contextAttributes) @AT@ 5153 @LENGTH@ 36
---------------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.putAll(contextAttributes) @AT@ 5153 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:putAll:[contextAttributes] @TO@ MethodInvocation@@attributes.putAll(contextAttributes) @AT@ 5164 @LENGTH@ 25
------------------------------INS SimpleName@@contextAttributes @TO@ SimpleName@@MethodName:putAll:[contextAttributes] @AT@ 5171 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:principal:[principal] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4919 @LENGTH@ 40
------------INS SimpleName@@principal @TO@ MethodInvocation@@MethodName:principal:[principal] @AT@ 4949 @LENGTH@ 9
---------INS SimpleName@@Name:contextBuilder @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 4919 @LENGTH@ 14
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@contextBuilder.principal(principal).attributes(attributes -> {
  Map<String,Object> contextAttributes=this.contextAttributesMapper.apply(authorizeRequest);
  if (!CollectionUtils.isEmpty(contextAttributes)) {
    attributes.putAll(contextAttributes);
  }
}
).build() @AT@ 5210 @LENGTH@ 7


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1477 @LENGTH@ 1153
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1484 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1489 @LENGTH@ 28


UPD TypeDeclaration@@[public]OAuth2Request, BaseRequest[Serializable] @TO@ [@Deprecated, public]OAuth2Request, BaseRequest[Serializable] @AT@ 677 @LENGTH@ 7216
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2Request, BaseRequest[Serializable] @AT@ 854 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ MethodInvocation:responseList.forEach(responseObserver::onNext) @AT@ 2602 @LENGTH@ 119
---UPD MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ responseList.forEach(responseObserver::onNext) @AT@ 2602 @LENGTH@ 118
------DEL SimpleName@@MethodName:forEach:[(responseItem) -> {
  responseObserver.onNext(responseItem);
}
] @AT@ 2615 @LENGTH@ 105
---------DEL LambdaExpression@@(responseItem) -> {
  responseObserver.onNext(responseItem);
}
 @AT@ 2623 @LENGTH@ 96
------------DEL VariableDeclarationFragment@@responseItem @AT@ 2624 @LENGTH@ 12
---------------DEL SimpleName@@responseItem @AT@ 2624 @LENGTH@ 12
------------DEL ExpressionStatement@@MethodInvocation:responseObserver.onNext(responseItem) @AT@ 2663 @LENGTH@ 38
---------------DEL MethodInvocation@@responseObserver.onNext(responseItem) @AT@ 2663 @LENGTH@ 37
------------------DEL SimpleName@@Name:responseObserver @AT@ 2663 @LENGTH@ 16
------MOV SimpleName@@MethodName:onNext:[responseItem] @TO@ MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @AT@ 2680 @LENGTH@ 20
---------DEL SimpleName@@responseItem @AT@ 2687 @LENGTH@ 12


UPD MethodDeclaration@@protected, boolean, MethodName:doConnect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @TO@ protected, boolean, MethodName:doConnect, RemoteFileConfiguration configuration, Exchange exchange, GenericFileOperationFailedException,  @AT@ 3661 @LENGTH@ 7338
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@protected, boolean, MethodName:doConnect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @AT@ 3757 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3757 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3766 @LENGTH@ 8
---UPD WhileStatement@@while (!connected) {  try {    if (log.isTraceEnabled() && attempt > 0) {      log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());    }    clientActivityListener.onConnecting(host);    client.connect(host,port);    int reply=client.getReplyCode();    if (FTPReply.isPositiveCompletion(reply)) {      connected=true;    } else {      throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");    }  } catch (  Exception e) {    if (client.isConnected()) {      log.trace("Disconnecting due to exception during connect");      try {        client.disconnect();      } catch (      IOException ignore) {        log.trace("Ignore exception during disconnect: {}",ignore.getMessage());      }    }    if (Thread.currentThread().isInterrupted()) {      throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));    }    GenericFileOperationFailedException failed;    if (e instanceof GenericFileOperationFailedException) {      failed=(GenericFileOperationFailedException)e;    } else {      failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);    }    log.trace("Cannot connect due: {}",failed.getMessage());    attempt++;    if (attempt > endpoint.getMaximumReconnectAttempts()) {      throw failed;    }    if (endpoint.getReconnectDelay() > 0) {      try {        Thread.sleep(endpoint.getReconnectDelay());      } catch (      InterruptedException ie) {        Thread.currentThread().interrupt();        throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);      }    }  }} @TO@ while (!connected) {  try {    if (log.isTraceEnabled() && attempt > 0) {      log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());    }    clientActivityListener.onConnecting(host);    client.connect(host,port);    int reply=client.getReplyCode();    if (FTPReply.isPositiveCompletion(reply)) {      connected=true;    } else {      throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");    }  } catch (  Exception e) {    if (client.isConnected()) {      log.trace("Disconnecting due to exception during connect");      try {        client.disconnect();      } catch (      IOException ignore) {        log.trace("Ignore exception during disconnect: {}",ignore.getMessage());      }    }    if (Thread.currentThread().isInterrupted()) {      throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));    }    GenericFileOperationFailedException failed;    if (e instanceof GenericFileOperationFailedException) {      failed=(GenericFileOperationFailedException)e;    } else {      failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);    }    log.trace("Cannot connect due: {}",failed.getMessage());    attempt++;    if (attempt > endpoint.getMaximumReconnectAttempts()) {      throw failed;    }    if (endpoint.getReconnectDelay() > 0) {      try {        Thread.sleep(endpoint.getReconnectDelay());      } catch (      InterruptedException ie) {        Thread.currentThread().interrupt();        throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);      }    }  } finally {    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  }} @AT@ 4502 @LENGTH@ 2759
------UPD Block@@WhileBody:{  try {    if (log.isTraceEnabled() && attempt > 0) {      log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());    }    clientActivityListener.onConnecting(host);    client.connect(host,port);    int reply=client.getReplyCode();    if (FTPReply.isPositiveCompletion(reply)) {      connected=true;    } else {      throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");    }  } catch (  Exception e) {    if (client.isConnected()) {      log.trace("Disconnecting due to exception during connect");      try {        client.disconnect();      } catch (      IOException ignore) {        log.trace("Ignore exception during disconnect: {}",ignore.getMessage());      }    }    if (Thread.currentThread().isInterrupted()) {      throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));    }    GenericFileOperationFailedException failed;    if (e instanceof GenericFileOperationFailedException) {      failed=(GenericFileOperationFailedException)e;    } else {      failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);    }    log.trace("Cannot connect due: {}",failed.getMessage());    attempt++;    if (attempt > endpoint.getMaximumReconnectAttempts()) {      throw failed;    }    if (endpoint.getReconnectDelay() > 0) {      try {        Thread.sleep(endpoint.getReconnectDelay());      } catch (      InterruptedException ie) {        Thread.currentThread().interrupt();        throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);      }    }  }} @TO@ WhileBody:{  try {    if (log.isTraceEnabled() && attempt > 0) {      log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());    }    clientActivityListener.onConnecting(host);    client.connect(host,port);    int reply=client.getReplyCode();    if (FTPReply.isPositiveCompletion(reply)) {      connected=true;    } else {      throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");    }  } catch (  Exception e) {    if (client.isConnected()) {      log.trace("Disconnecting due to exception during connect");      try {        client.disconnect();      } catch (      IOException ignore) {        log.trace("Ignore exception during disconnect: {}",ignore.getMessage());      }    }    if (Thread.currentThread().isInterrupted()) {      throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));    }    GenericFileOperationFailedException failed;    if (e instanceof GenericFileOperationFailedException) {      failed=(GenericFileOperationFailedException)e;    } else {      failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);    }    log.trace("Cannot connect due: {}",failed.getMessage());    attempt++;    if (attempt > endpoint.getMaximumReconnectAttempts()) {      throw failed;    }    if (endpoint.getReconnectDelay() > 0) {      try {        Thread.sleep(endpoint.getReconnectDelay());      } catch (      InterruptedException ie) {        Thread.currentThread().interrupt();        throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);      }    }  } finally {    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  }} @AT@ 4521 @LENGTH@ 2740
---------UPD TryStatement@@try {  if (log.isTraceEnabled() && attempt > 0) {    log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());  }  clientActivityListener.onConnecting(host);  client.connect(host,port);  int reply=client.getReplyCode();  if (FTPReply.isPositiveCompletion(reply)) {    connected=true;  } else {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");  }} catch (Exception e) {  if (client.isConnected()) {    log.trace("Disconnecting due to exception during connect");    try {      client.disconnect();    } catch (    IOException ignore) {      log.trace("Ignore exception during disconnect: {}",ignore.getMessage());    }  }  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} @TO@ try {  if (log.isTraceEnabled() && attempt > 0) {    log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());  }  clientActivityListener.onConnecting(host);  client.connect(host,port);  int reply=client.getReplyCode();  if (FTPReply.isPositiveCompletion(reply)) {    connected=true;  } else {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");  }} catch (Exception e) {  if (client.isConnected()) {    log.trace("Disconnecting due to exception during connect");    try {      client.disconnect();    } catch (    IOException ignore) {      log.trace("Ignore exception during disconnect: {}",ignore.getMessage());    }  }  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} finally {  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 4535 @LENGTH@ 2716
------------INS Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @TO@ TryStatement@@try {  if (log.isTraceEnabled() && attempt > 0) {    log.trace("Reconnect attempt #{} connecting to {}",attempt,configuration.remoteServerInformation());  }  clientActivityListener.onConnecting(host);  client.connect(host,port);  int reply=client.getReplyCode();  if (FTPReply.isPositiveCompletion(reply)) {    connected=true;  } else {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),"Server refused connection");  }} catch (Exception e) {  if (client.isConnected()) {    log.trace("Disconnecting due to exception during connect");    try {      client.disconnect();    } catch (    IOException ignore) {      log.trace("Ignore exception during disconnect: {}",ignore.getMessage());    }  }  if (Thread.currentThread().isInterrupted()) {    throw new GenericFileOperationFailedException("Interrupted during connecting",new InterruptedException("Interrupted during connecting"));  }  GenericFileOperationFailedException failed;  if (e instanceof GenericFileOperationFailedException) {    failed=(GenericFileOperationFailedException)e;  } else {    failed=new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }  log.trace("Cannot connect due: {}",failed.getMessage());  attempt++;  if (attempt > endpoint.getMaximumReconnectAttempts()) {    throw failed;  }  if (endpoint.getReconnectDelay() > 0) {    try {      Thread.sleep(endpoint.getReconnectDelay());    } catch (    InterruptedException ie) {      Thread.currentThread().interrupt();      throw new GenericFileOperationFailedException("Interrupted during sleeping",ie);    }  }} @AT@ 7308 @LENGTH@ 351
---------------INS IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 7326 @LENGTH@ 319
------------------INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 7330 @LENGTH@ 16
---------------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 7330 @LENGTH@ 8
---------------------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 7338 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 7342 @LENGTH@ 4
------------------INS Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 7348 @LENGTH@ 297
---------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 7444 @LENGTH@ 79
------------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 7444 @LENGTH@ 78
---------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 7444 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 7444 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 7461 @LENGTH@ 61
------------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_CODE @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 7471 @LENGTH@ 27
---------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 7471 @LENGTH@ 12
---------------------------------INS SimpleName@@FTP_REPLY_CODE @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 7484 @LENGTH@ 14
------------------------------INS MethodInvocation@@client.getReplyCode() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 7500 @LENGTH@ 21
---------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyCode() @AT@ 7500 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@client.getReplyCode() @AT@ 7507 @LENGTH@ 14
---------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 7544 @LENGTH@ 83
------------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 7544 @LENGTH@ 82
---------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 7544 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 7544 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 7561 @LENGTH@ 65
------------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_STRING @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 7571 @LENGTH@ 29
---------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 7571 @LENGTH@ 12
---------------------------------INS SimpleName@@FTP_REPLY_STRING @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 7584 @LENGTH@ 16
------------------------------INS MethodInvocation@@client.getReplyString() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 7602 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyString() @AT@ 7602 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getReplyString:[] @TO@ MethodInvocation@@client.getReplyString() @AT@ 7609 @LENGTH@ 16
---UPD TryStatement@@try {  clientActivityListener.onLogin(host);  boolean login;  if (username != null) {    if (account != null) {      log.trace("Attempting to login user: {} using password: ******** and account: {}",username,account);      login=client.login(username,configuration.getPassword(),account);    } else {      log.trace("Attempting to login user: {} using password: ********",username);      login=client.login(username,configuration.getPassword());    }  } else {    if (account != null) {      log.trace("Attempting to login anonymous using account: {}",account);      login=client.login("anonymous","",account);    } else {      log.trace("Attempting to login anonymous");      login=client.login("anonymous","");    }  }  log.trace("User {} logged in: {}",username != null ? username : "anonymous",login);  if (!login) {    String replyString=client.getReplyString();    int replyCode=client.getReplyCode();    clientActivityListener.onLoginFailed(replyCode,replyString);    client.disconnect();    throw new GenericFileOperationFailedException(replyCode,replyString);  }  clientActivityListener.onLoginComplete(host);  client.setFileType(configuration.isBinary() ? FTP.BINARY_FILE_TYPE : FTP.ASCII_FILE_TYPE);} catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} @TO@ try {  clientActivityListener.onLogin(host);  boolean login;  if (username != null) {    if (account != null) {      log.trace("Attempting to login user: {} using password: ******** and account: {}",username,account);      login=client.login(username,configuration.getPassword(),account);    } else {      log.trace("Attempting to login user: {} using password: ********",username);      login=client.login(username,configuration.getPassword());    }  } else {    if (account != null) {      log.trace("Attempting to login anonymous using account: {}",account);      login=client.login("anonymous","",account);    } else {      log.trace("Attempting to login anonymous");      login=client.login("anonymous","");    }  }  log.trace("User {} logged in: {}",username != null ? username : "anonymous",login);  if (!login) {    String replyString=client.getReplyString();    int replyCode=client.getReplyCode();    clientActivityListener.onLoginFailed(replyCode,replyString);    client.disconnect();    throw new GenericFileOperationFailedException(replyCode,replyString);  }  clientActivityListener.onLoginComplete(host);  client.setFileType(configuration.isBinary() ? FTP.BINARY_FILE_TYPE : FTP.ASCII_FILE_TYPE);} catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} finally {  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 8148 @LENGTH@ 1993
------INS Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @TO@ TryStatement@@try {  clientActivityListener.onLogin(host);  boolean login;  if (username != null) {    if (account != null) {      log.trace("Attempting to login user: {} using password: ******** and account: {}",username,account);      login=client.login(username,configuration.getPassword(),account);    } else {      log.trace("Attempting to login user: {} using password: ********",username);      login=client.login(username,configuration.getPassword());    }  } else {    if (account != null) {      log.trace("Attempting to login anonymous using account: {}",account);      login=client.login("anonymous","",account);    } else {      log.trace("Attempting to login anonymous");      login=client.login("anonymous","");    }  }  log.trace("User {} logged in: {}",username != null ? username : "anonymous",login);  if (!login) {    String replyString=client.getReplyString();    int replyCode=client.getReplyCode();    clientActivityListener.onLoginFailed(replyCode,replyString);    client.disconnect();    throw new GenericFileOperationFailedException(replyCode,replyString);  }  clientActivityListener.onLoginComplete(host);  client.setFileType(configuration.isBinary() ? FTP.BINARY_FILE_TYPE : FTP.ASCII_FILE_TYPE);} catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} @AT@ 10558 @LENGTH@ 327
---------INS IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 10572 @LENGTH@ 303
------------INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 10576 @LENGTH@ 16
---------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 10576 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 10584 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 10588 @LENGTH@ 4
------------INS Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 10594 @LENGTH@ 281
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 10682 @LENGTH@ 79
------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 10682 @LENGTH@ 78
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 10682 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 10682 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 10699 @LENGTH@ 61
------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_CODE @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 10709 @LENGTH@ 27
---------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 10709 @LENGTH@ 12
---------------------------INS SimpleName@@FTP_REPLY_CODE @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 10722 @LENGTH@ 14
------------------------INS MethodInvocation@@client.getReplyCode() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 10738 @LENGTH@ 21
---------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyCode() @AT@ 10738 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@client.getReplyCode() @AT@ 10745 @LENGTH@ 14
---------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 10778 @LENGTH@ 83
------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 10778 @LENGTH@ 82
---------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 10778 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 10778 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 10795 @LENGTH@ 65
------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_STRING @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 10805 @LENGTH@ 29
---------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 10805 @LENGTH@ 12
---------------------------INS SimpleName@@FTP_REPLY_STRING @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 10818 @LENGTH@ 16
------------------------INS MethodInvocation@@client.getReplyString() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 10836 @LENGTH@ 23
---------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyString() @AT@ 10836 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:getReplyString:[] @TO@ MethodInvocation@@client.getReplyString() @AT@ 10843 @LENGTH@ 16


UPD TypeDeclaration@@[@Configuration]ReactiveMethodSecurityConfiguration, [ImportAware] @TO@ [@Configuration(proxyBeanMethods=false)]ReactiveMethodSecurityConfiguration, [ImportAware] @AT@ 1808 @LENGTH@ 2297
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration]ReactiveMethodSecurityConfiguration, [ImportAware] @AT@ 1808 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 1808 @LENGTH@ 14


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]UnverifiedRequestTokenException, OAuthRequestFailedException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]UnverifiedRequestTokenException, OAuthRequestFailedException @AT@ 754 @LENGTH@ 280
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]UnverifiedRequestTokenException, OAuthRequestFailedException @AT@ 1003 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:logger.debug("Connection error, deferring directReplyTo detection") @TO@ Assignment:cause=cause.getCause() @AT@ 37667 @LENGTH@ 68


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 2337 @LENGTH@ 3081
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2344 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2349 @LENGTH@ 28
---UPD TryStatement@@try {  FunctionDescBuilder builder=new FunctionDescBuilder(context);  CreateFunctionDesc descToLoad=builder.build();  this.functionName=builder.metadata.function.getFunctionName();  context.log.debug("Loading function desc : {}",descToLoad.toString());  Task<DDLWork> createTask=TaskFactory.get(new DDLWork(readEntitySet,writeEntitySet,descToLoad),context.hiveConf);  context.log.debug("Added create function task : {}:{},{}",createTask.getId(),descToLoad.getName(),descToLoad.getClassName());  if (context.dmd != null) {    updatedMetadata.set(context.dmd.getEventTo().toString(),builder.destinationDbName,null,null);  }  readEntitySet.add(toReadEntity(new Path(context.location),context.hiveConf));  if (builder.replCopyTasks.isEmpty()) {    return Collections.singletonList(createTask);  } else {    Task<? extends Serializable> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);    builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));    barrierTask.addDependentTask(createTask);    return builder.replCopyTasks;  }} catch (Exception e) {  throw (e instanceof SemanticException) ? (SemanticException)e : new SemanticException("Error reading message members",e);} @TO@ try {  FunctionDescBuilder builder=new FunctionDescBuilder(context);  CreateFunctionDesc descToLoad=builder.build();  this.functionName=builder.metadata.function.getFunctionName();  context.log.debug("Loading function desc : {}",descToLoad.toString());  Task<DDLWork> createTask=TaskFactory.get(new DDLWork(readEntitySet,writeEntitySet,descToLoad),context.hiveConf);  context.log.debug("Added create function task : {}:{},{}",createTask.getId(),descToLoad.getName(),descToLoad.getClassName());  if (context.dmd != null) {    updatedMetadata.set(context.dmd.getEventTo().toString(),builder.destinationDbName,null,null);  }  readEntitySet.add(toReadEntity(new Path(context.location),context.hiveConf));  if (builder.replCopyTasks.isEmpty()) {    return Collections.singletonList(createTask);  } else {    Task<?> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);    builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));    barrierTask.addDependentTask(createTask);    return builder.replCopyTasks;  }} catch (Exception e) {  throw (e instanceof SemanticException) ? (SemanticException)e : new SemanticException("Error reading message members",e);} @AT@ 2440 @LENGTH@ 2974
------UPD IfStatement@@if (builder.replCopyTasks.isEmpty()) {  return Collections.singletonList(createTask);} else {  Task<? extends Serializable> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);  builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));  barrierTask.addDependentTask(createTask);  return builder.replCopyTasks;} @TO@ if (builder.replCopyTasks.isEmpty()) {  return Collections.singletonList(createTask);} else {  Task<?> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);  builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));  barrierTask.addDependentTask(createTask);  return builder.replCopyTasks;} @AT@ 3764 @LENGTH@ 1466
---------UPD Block@@ElseBody:{  Task<? extends Serializable> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);  builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));  barrierTask.addDependentTask(createTask);  return builder.replCopyTasks;} @TO@ ElseBody:{  Task<?> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf);  builder.replCopyTasks.forEach(t -> t.addDependentTask(barrierTask));  barrierTask.addDependentTask(createTask);  return builder.replCopyTasks;} @AT@ 3937 @LENGTH@ 1293
------------UPD VariableDeclarationStatement@@Task<? extends Serializable> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf); @TO@ Task<?> barrierTask=TaskFactory.get(new DependencyCollectionWork(),context.hiveConf); @AT@ 4936 @LENGTH@ 121
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4936 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedJdbcEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedJdbcEndpointBuilder, [EndpointProducerBuilder] @AT@ 12177 @LENGTH@ 4446
---DEL Modifier@@static @AT@ 12184 @LENGTH@ 6


UPD VariableDeclarationStatement@@Task<? extends Serializable> currTask=mapredCtx.getCurrTask(); @TO@ Task<?> currTask=mapredCtx.getCurrTask(); @AT@ 2530 @LENGTH@ 64
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2530 @LENGTH@ 28


UPD MethodDeclaration@@void, MethodName:usingSameDatabaseExplizitTx,  @TO@ void, MethodName:usingSameDatabaseExplicitTx,  @AT@ 3747 @LENGTH@ 442
---UPD SimpleName@@MethodName:usingSameDatabaseExplizitTx @TO@ MethodName:usingSameDatabaseExplicitTx @AT@ 3747 @LENGTH@ 27


UPD MethodDeclaration@@default, SoroushBotEndpointBuilder, MethodName:soroushBot, String path,  @TO@ default, SoroushBotEndpointBuilder, MethodName:soroush, String path,  @AT@ 50463 @LENGTH@ 399
---UPD SimpleName@@MethodName:soroushBot @TO@ MethodName:soroush @AT@ 50497 @LENGTH@ 10


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1554 @LENGTH@ 2695
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1561 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1566 @LENGTH@ 28


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2AccessDeniedException, OAuth2Exception @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuth2AccessDeniedException, OAuth2Exception @AT@ 375 @LENGTH@ 1047
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuth2AccessDeniedException, OAuth2Exception @AT@ 580 @LENGTH@ 11


UPD IfStatement@@if (token.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {} @TO@ if (token.getAuthorizationExchange().getAuthorizationRequest().getScopes().contains("openid")) {  return Mono.empty();} @AT@ 4587 @LENGTH@ 405
---UPD Block@@ThenBody:{} @TO@ ThenBody:{  return Mono.empty();} @AT@ 4688 @LENGTH@ 304
------INS ReturnStatement@@MethodInvocation:Mono.empty() @TO@ Block@@ThenBody:{} @AT@ 4869 @LENGTH@ 20
---------INS MethodInvocation@@Mono.empty() @TO@ ReturnStatement@@MethodInvocation:Mono.empty() @AT@ 4876 @LENGTH@ 12
------------INS SimpleName@@Name:Mono @TO@ MethodInvocation@@Mono.empty() @AT@ 4876 @LENGTH@ 4
------------INS SimpleName@@MethodName:empty:[] @TO@ MethodInvocation@@Mono.empty() @AT@ 4881 @LENGTH@ 7


UPD EnhancedForStatement@@for (GraphPropertyDescription graphProperty : graphProperties) {  String currentPath=graphProperty.getFieldName();  if (matcherAccessor.isIgnoredPath(currentPath)) {    continue;  }  boolean internalId=graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds();  String propertyName=graphProperty.getPropertyName();  ExampleMatcher.PropertyValueTransformer transformer=matcherAccessor.getValueTransformerForPath(currentPath);  Optional<Object> optionalValue=transformer.apply(Optional.ofNullable(beanWrapper.getPropertyValue(currentPath)));  if (!optionalValue.isPresent()) {    if (!internalId && matcherAccessor.getNullHandler().equals(ExampleMatcher.NullHandler.INCLUDE)) {      predicate.add(mode,property(rootNode,propertyName).isNull());    }    continue;  }  if (graphProperty.isRelationship()) {    log.error("Querying by example does not support traversing of relationships.");  } else   if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {    predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));  } else {    Expression property=property(rootNode,propertyName);    Expression parameter=parameter(propertyName);    Condition condition=property.isEqualTo(parameter);    if (String.class.equals(graphProperty.getActualType())) {      if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {        property=Functions.toLower(property);        parameter=Functions.toLower(parameter);      }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:        condition=property.isEqualTo(parameter);      break;case CONTAINING:    condition=property.contains(parameter);  break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());}} @TO@ for (GraphPropertyDescription graphProperty : graphProperties) {  String currentPath=graphProperty.getFieldName();  if (matcherAccessor.isIgnoredPath(currentPath)) {    continue;  }  boolean internalId=graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds();  String propertyName=graphProperty.getPropertyName();  ExampleMatcher.PropertyValueTransformer transformer=matcherAccessor.getValueTransformerForPath(currentPath);  Optional<Object> optionalValue=transformer.apply(Optional.ofNullable(beanWrapper.getPropertyValue(currentPath)));  if (!optionalValue.isPresent()) {    if (!internalId && matcherAccessor.getNullHandler().equals(ExampleMatcher.NullHandler.INCLUDE)) {      predicate.add(mode,property(rootNode,propertyName).isNull());    }    continue;  }  Neo4jConverter converter=mappingContext.getConverter();  if (graphProperty.isRelationship()) {    log.error("Querying by example does not support traversing of relationships.");  } else   if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {    predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));  } else {    Expression property=property(rootNode,propertyName);    Expression parameter=parameter(propertyName);    Condition condition=property.isEqualTo(parameter);    if (String.class.equals(graphProperty.getActualType())) {      if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {        property=Functions.toLower(property);        parameter=Functions.toLower(parameter);      }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:        condition=property.isEqualTo(parameter);      break;case CONTAINING:    condition=property.contains(parameter);  break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get());}} @AT@ 3230 @LENGTH@ 2490
---UPD IfStatement@@if (graphProperty.isRelationship()) {  log.error("Querying by example does not support traversing of relationships.");} else if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());} @TO@ if (graphProperty.isRelationship()) {  log.error("Querying by example does not support traversing of relationships.");} else if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get());} @AT@ 4107 @LENGTH@ 1609
------UPD Block@@ElseBody:if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());} @TO@ ElseBody:if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get());} @AT@ 4239 @LENGTH@ 1477
---------UPD IfStatement@@if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());} @TO@ if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {  predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));} else {  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get());} @AT@ 4239 @LENGTH@ 1477
------------UPD Block@@ElseBody:{  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());} @TO@ ElseBody:{  Expression property=property(rootNode,propertyName);  Expression parameter=parameter(propertyName);  Condition condition=property.isEqualTo(parameter);  if (String.class.equals(graphProperty.getActualType())) {    if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {      property=Functions.toLower(property);      parameter=Functions.toLower(parameter);    }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:      condition=property.isEqualTo(parameter);    break;case CONTAINING:  condition=property.contains(parameter);break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get());} @AT@ 4450 @LENGTH@ 1266
---------------UPD ExpressionStatement@@MethodInvocation:predicate.parameters.put(propertyName,optionalValue.get()) @TO@ MethodInvocation:predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get()) @AT@ 5651 @LENGTH@ 60
------------------UPD MethodInvocation@@predicate.parameters.put(propertyName,optionalValue.get()) @TO@ predicate.parameters.put(propertyName,optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get()) @AT@ 5651 @LENGTH@ 59
---------------------UPD SimpleName@@MethodName:put:[propertyName, optionalValue.get()] @TO@ MethodName:put:[propertyName, optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get()] @AT@ 5672 @LENGTH@ 38
------------------------UPD MethodInvocation@@optionalValue.get() @TO@ optionalValue.map(v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())).get() @AT@ 5690 @LENGTH@ 19
---------------------------INS MethodInvocation@@MethodName:map:[v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())] @TO@ MethodInvocation@@optionalValue.get() @AT@ 5895 @LENGTH@ 117
------------------------------INS LambdaExpression@@v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @TO@ MethodInvocation@@MethodName:map:[v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation())] @AT@ 5919 @LENGTH@ 92
---------------------------------INS VariableDeclarationFragment@@v @TO@ LambdaExpression@@v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @AT@ 5919 @LENGTH@ 1
------------------------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 5919 @LENGTH@ 1
------------------------------------INS SimpleName@@v @TO@ VariableDeclarationFragment@@v @AT@ 5919 @LENGTH@ 1
---------------------------------INS MethodInvocation@@converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @TO@ LambdaExpression@@v -> converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @AT@ 5924 @LENGTH@ 87
------------------------------------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @AT@ 5924 @LENGTH@ 9
------------------------------------INS SimpleName@@MethodName:writeValue:[v, ((Neo4jPersistentProperty)graphProperty).getTypeInformation()] @TO@ MethodInvocation@@converter.writeValue(v,((Neo4jPersistentProperty)graphProperty).getTypeInformation()) @AT@ 5934 @LENGTH@ 77
---------------------------------------INS SimpleName@@v @TO@ SimpleName@@MethodName:writeValue:[v, ((Neo4jPersistentProperty)graphProperty).getTypeInformation()] @AT@ 5945 @LENGTH@ 1
---------------------------------------INS MethodInvocation@@((Neo4jPersistentProperty)graphProperty).getTypeInformation() @TO@ SimpleName@@MethodName:writeValue:[v, ((Neo4jPersistentProperty)graphProperty).getTypeInformation()] @AT@ 5948 @LENGTH@ 62
------------------------------------------INS ParenthesizedExpression@@((Neo4jPersistentProperty)graphProperty) @TO@ MethodInvocation@@((Neo4jPersistentProperty)graphProperty).getTypeInformation() @AT@ 5948 @LENGTH@ 41
---------------------------------------------INS CastExpression@@(Neo4jPersistentProperty)graphProperty @TO@ ParenthesizedExpression@@((Neo4jPersistentProperty)graphProperty) @AT@ 5949 @LENGTH@ 39
------------------------------------------------INS SimpleType@@Neo4jPersistentProperty @TO@ CastExpression@@(Neo4jPersistentProperty)graphProperty @AT@ 5950 @LENGTH@ 23
------------------------------------------------INS SimpleName@@graphProperty @TO@ CastExpression@@(Neo4jPersistentProperty)graphProperty @AT@ 5975 @LENGTH@ 13
------------------------------------------INS SimpleName@@MethodName:getTypeInformation:[] @TO@ MethodInvocation@@((Neo4jPersistentProperty)graphProperty).getTypeInformation() @AT@ 5990 @LENGTH@ 20
---INS VariableDeclarationStatement@@Neo4jConverter converter=mappingContext.getConverter(); @TO@ EnhancedForStatement@@for (GraphPropertyDescription graphProperty : graphProperties) {  String currentPath=graphProperty.getFieldName();  if (matcherAccessor.isIgnoredPath(currentPath)) {    continue;  }  boolean internalId=graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds();  String propertyName=graphProperty.getPropertyName();  ExampleMatcher.PropertyValueTransformer transformer=matcherAccessor.getValueTransformerForPath(currentPath);  Optional<Object> optionalValue=transformer.apply(Optional.ofNullable(beanWrapper.getPropertyValue(currentPath)));  if (!optionalValue.isPresent()) {    if (!internalId && matcherAccessor.getNullHandler().equals(ExampleMatcher.NullHandler.INCLUDE)) {      predicate.add(mode,property(rootNode,propertyName).isNull());    }    continue;  }  if (graphProperty.isRelationship()) {    log.error("Querying by example does not support traversing of relationships.");  } else   if (graphProperty.isIdProperty() && probeNodeDescription.isUsingInternalIds()) {    predicate.add(mode,createIdExpression(predicate.nodeDescription).isEqualTo(literalOf(optionalValue.get())));  } else {    Expression property=property(rootNode,propertyName);    Expression parameter=parameter(propertyName);    Condition condition=property.isEqualTo(parameter);    if (String.class.equals(graphProperty.getActualType())) {      if (matcherAccessor.isIgnoreCaseForPath(currentPath)) {        property=Functions.toLower(property);        parameter=Functions.toLower(parameter);      }switch (matcherAccessor.getStringMatcherForPath(currentPath)) {case DEFAULT:case EXACT:        condition=property.isEqualTo(parameter);      break;case CONTAINING:    condition=property.contains(parameter);  break;case STARTING:condition=property.startsWith(parameter);break;case ENDING:condition=property.endsWith(parameter);break;case REGEX:condition=property.matches(parameter);break;default :throw new IllegalArgumentException("Unsupported StringMatcher " + matcherAccessor.getStringMatcherForPath(currentPath));}}predicate.add(mode,condition);predicate.parameters.put(propertyName,optionalValue.get());}} @AT@ 4250 @LENGTH@ 57
------INS SimpleType@@Neo4jConverter @TO@ VariableDeclarationStatement@@Neo4jConverter converter=mappingContext.getConverter(); @AT@ 4250 @LENGTH@ 14
------INS VariableDeclarationFragment@@converter=mappingContext.getConverter() @TO@ VariableDeclarationStatement@@Neo4jConverter converter=mappingContext.getConverter(); @AT@ 4265 @LENGTH@ 41
---------INS SimpleName@@converter @TO@ VariableDeclarationFragment@@converter=mappingContext.getConverter() @AT@ 4265 @LENGTH@ 9
---------INS MethodInvocation@@mappingContext.getConverter() @TO@ VariableDeclarationFragment@@converter=mappingContext.getConverter() @AT@ 4277 @LENGTH@ 29
------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.getConverter() @AT@ 4277 @LENGTH@ 14
------------INS SimpleName@@MethodName:getConverter:[] @TO@ MethodInvocation@@mappingContext.getConverter() @AT@ 4292 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:from("direct://UPLOADFILEOVERWRITE").to("box://" + PATH_PREFIX + "/uploadFile?check=true") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 22567 @LENGTH@ 91
---INS MethodInvocation@@from("direct://UPLOADFILEOVERWRITE").to("box://" + PATH_PREFIX + "/uploadFile?check=true") @TO@ ExpressionStatement@@MethodInvocation:from("direct://UPLOADFILEOVERWRITE").to("box://" + PATH_PREFIX + "/uploadFile?check=true") @AT@ 22567 @LENGTH@ 90
------INS MethodInvocation@@MethodName:from:["direct://UPLOADFILEOVERWRITE"] @TO@ MethodInvocation@@from("direct://UPLOADFILEOVERWRITE").to("box://" + PATH_PREFIX + "/uploadFile?check=true") @AT@ 22567 @LENGTH@ 36
---------INS StringLiteral@@"direct://UPLOADFILEOVERWRITE" @TO@ MethodInvocation@@MethodName:from:["direct://UPLOADFILEOVERWRITE"] @AT@ 22572 @LENGTH@ 30
------INS SimpleName@@MethodName:to:["box://" + PATH_PREFIX + "/uploadFile?check=true"] @TO@ MethodInvocation@@from("direct://UPLOADFILEOVERWRITE").to("box://" + PATH_PREFIX + "/uploadFile?check=true") @AT@ 22604 @LENGTH@ 53
---------INS InfixExpression@@"box://" + PATH_PREFIX + "/uploadFile?check=true" @TO@ SimpleName@@MethodName:to:["box://" + PATH_PREFIX + "/uploadFile?check=true"] @AT@ 22607 @LENGTH@ 49
------------INS StringLiteral@@"box://" @TO@ InfixExpression@@"box://" + PATH_PREFIX + "/uploadFile?check=true" @AT@ 22607 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@"box://" + PATH_PREFIX + "/uploadFile?check=true" @AT@ 22615 @LENGTH@ 1
------------INS SimpleName@@PATH_PREFIX @TO@ InfixExpression@@"box://" + PATH_PREFIX + "/uploadFile?check=true" @AT@ 22618 @LENGTH@ 11
------------INS StringLiteral@@"/uploadFile?check=true" @TO@ InfixExpression@@"box://" + PATH_PREFIX + "/uploadFile?check=true" @AT@ 22632 @LENGTH@ 24


UPD TypeDeclaration@@[public]Codecs,  @TO@ [@Deprecated, public]Codecs,  @AT@ 887 @LENGTH@ 2010
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]Codecs,  @AT@ 1065 @LENGTH@ 11


DEL MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1692 @LENGTH@ 211
---DEL Modifier@@protected @AT@ 1692 @LENGTH@ 9
---DEL SimpleType@@JndiRegistry @AT@ 1702 @LENGTH@ 12
---DEL SimpleName@@MethodName:createRegistry @AT@ 1715 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 1739 @LENGTH@ 9
---DEL VariableDeclarationStatement@@JndiRegistry registry=super.createRegistry(); @AT@ 1759 @LENGTH@ 47
------DEL SimpleType@@JndiRegistry @AT@ 1759 @LENGTH@ 12
------DEL VariableDeclarationFragment@@registry=super.createRegistry() @AT@ 1772 @LENGTH@ 33
---------DEL SimpleName@@registry @AT@ 1772 @LENGTH@ 8
---------DEL SuperMethodInvocation@@super.createRegistry() @AT@ 1783 @LENGTH@ 22
------------DEL SimpleName@@MethodName:createRegistry:[] @AT@ 1789 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:registry.bind("ssl",createServerSSLContextParameters()) @AT@ 1815 @LENGTH@ 57
------DEL MethodInvocation@@registry.bind("ssl",createServerSSLContextParameters()) @AT@ 1815 @LENGTH@ 56
---------DEL SimpleName@@Name:registry @AT@ 1815 @LENGTH@ 8
---------DEL SimpleName@@MethodName:bind:["ssl", createServerSSLContextParameters()] @AT@ 1824 @LENGTH@ 47
------------DEL StringLiteral@@"ssl" @AT@ 1829 @LENGTH@ 5
------------DEL MethodInvocation@@MethodName:createServerSSLContextParameters:[] @AT@ 1836 @LENGTH@ 34
---DEL ReturnStatement@@SimpleName:registry @AT@ 1881 @LENGTH@ 16
------DEL SimpleName@@registry @AT@ 1888 @LENGTH@ 8


UPD MethodDeclaration@@default, QueueServiceEndpointBuilder, MethodName:queueService, String path,  @TO@ default, QueueServiceEndpointBuilder, MethodName:azureQueue, String path,  @AT@ 24905 @LENGTH@ 417
---UPD SimpleName@@MethodName:queueService @TO@ MethodName:azureQueue @AT@ 24941 @LENGTH@ 12


INS MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @TO@ TypeDeclaration@@[public]ClaimAccessor,  @AT@ 1531 @LENGTH@ 109
---INS Modifier@@default @TO@ MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @AT@ 1531 @LENGTH@ 7
---INS SimpleType@@T @TO@ MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @AT@ 1543 @LENGTH@ 1
---INS SimpleName@@MethodName:getClaim @TO@ MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @AT@ 1545 @LENGTH@ 8
---INS SingleVariableDeclaration@@String claim @TO@ MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @AT@ 1554 @LENGTH@ 12
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String claim @AT@ 1554 @LENGTH@ 6
------INS SimpleName@@claim @TO@ SingleVariableDeclaration@@String claim @AT@ 1561 @LENGTH@ 5
---INS ReturnStatement@@ConditionalExpression:!containsClaim(claim) ? null : (T)getClaims().get(claim) @TO@ MethodDeclaration@@default, T, T, MethodName:getClaim, String claim,  @AT@ 1572 @LENGTH@ 65
------INS ConditionalExpression@@!containsClaim(claim) ? null : (T)getClaims().get(claim) @TO@ ReturnStatement@@ConditionalExpression:!containsClaim(claim) ? null : (T)getClaims().get(claim) @AT@ 1579 @LENGTH@ 57
---------INS PrefixExpression@@!containsClaim(claim) @TO@ ConditionalExpression@@!containsClaim(claim) ? null : (T)getClaims().get(claim) @AT@ 1579 @LENGTH@ 21
------------INS Operator@@! @TO@ PrefixExpression@@!containsClaim(claim) @AT@ 1579 @LENGTH@ 1
------------INS MethodInvocation@@containsClaim(claim) @TO@ PrefixExpression@@!containsClaim(claim) @AT@ 1580 @LENGTH@ 20
---------------INS SimpleName@@MethodName:containsClaim:[claim] @TO@ MethodInvocation@@containsClaim(claim) @AT@ 1580 @LENGTH@ 20
------------------INS SimpleName@@claim @TO@ SimpleName@@MethodName:containsClaim:[claim] @AT@ 1594 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ ConditionalExpression@@!containsClaim(claim) ? null : (T)getClaims().get(claim) @AT@ 1603 @LENGTH@ 4
---------INS CastExpression@@(T)getClaims().get(claim) @TO@ ConditionalExpression@@!containsClaim(claim) ? null : (T)getClaims().get(claim) @AT@ 1610 @LENGTH@ 26
------------INS SimpleType@@T @TO@ CastExpression@@(T)getClaims().get(claim) @AT@ 1611 @LENGTH@ 1
------------INS MethodInvocation@@getClaims().get(claim) @TO@ CastExpression@@(T)getClaims().get(claim) @AT@ 1614 @LENGTH@ 22
---------------INS MethodInvocation@@MethodName:getClaims:[] @TO@ MethodInvocation@@getClaims().get(claim) @AT@ 1614 @LENGTH@ 11
---------------INS SimpleName@@MethodName:get:[claim] @TO@ MethodInvocation@@getClaims().get(claim) @AT@ 1626 @LENGTH@ 10
------------------INS SimpleName@@claim @TO@ SimpleName@@MethodName:get:[claim] @AT@ 1630 @LENGTH@ 5


UPD VariableDeclarationStatement@@Value driverValue=conversionService.convert(domainValue,Value.class); @TO@ Value driverValue; @AT@ 5448 @LENGTH@ 72
---UPD VariableDeclarationFragment@@driverValue=conversionService.convert(domainValue,Value.class) @TO@ driverValue @AT@ 5454 @LENGTH@ 65


INS MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @TO@ TypeDeclaration@@[@Configuration, static]Config, AbstractMongoClientConfiguration @AT@ 2207 @LENGTH@ 60
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2207 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2217 @LENGTH@ 7
---INS SimpleName@@MethodName:autoIndexCreation @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2225 @LENGTH@ 17
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:autoIndexCreation,  @AT@ 2250 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2257 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:hashpwFailsWhenSaltIsTooShort,  @TO@ TypeDeclaration@@[public]BCryptTests,  @AT@ 12421 @LENGTH@ 109
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:hashpwFailsWhenSaltIsTooShort,  @AT@ 12421 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:hashpwFailsWhenSaltIsTooShort,  @AT@ 12428 @LENGTH@ 4
---INS SimpleName@@MethodName:hashpwFailsWhenSaltIsTooShort @TO@ MethodDeclaration@@public, void, MethodName:hashpwFailsWhenSaltIsTooShort,  @AT@ 12433 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:BCrypt.hashpw("password","$2a$10$123456789012345678901") @TO@ MethodDeclaration@@public, void, MethodName:hashpwFailsWhenSaltIsTooShort,  @AT@ 12469 @LENGTH@ 58
------INS MethodInvocation@@BCrypt.hashpw("password","$2a$10$123456789012345678901") @TO@ ExpressionStatement@@MethodInvocation:BCrypt.hashpw("password","$2a$10$123456789012345678901") @AT@ 12469 @LENGTH@ 57
---------INS SimpleName@@Name:BCrypt @TO@ MethodInvocation@@BCrypt.hashpw("password","$2a$10$123456789012345678901") @AT@ 12469 @LENGTH@ 6
---------INS SimpleName@@MethodName:hashpw:["password", "$2a$10$123456789012345678901"] @TO@ MethodInvocation@@BCrypt.hashpw("password","$2a$10$123456789012345678901") @AT@ 12476 @LENGTH@ 50
------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:hashpw:["password", "$2a$10$123456789012345678901"] @AT@ 12483 @LENGTH@ 10
------------INS StringLiteral@@"$2a$10$123456789012345678901" @TO@ SimpleName@@MethodName:hashpw:["password", "$2a$10$123456789012345678901"] @AT@ 12495 @LENGTH@ 30


INS ExpressionStatement@@MethodInvocation:authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @TO@ MethodDeclaration@@public, void, MethodName:resolveArgumentWhenAuthorizedClientNotFoundForPasswordClientThenResolvesFromTokenResponseClient, Exception,  @AT@ 16424 @LENGTH@ 629
---INS MethodInvocation@@authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @TO@ ExpressionStatement@@MethodInvocation:authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @AT@ 16424 @LENGTH@ 628
------INS SimpleName@@Name:authorizedClientManager @TO@ MethodInvocation@@authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @AT@ 16424 @LENGTH@ 23
------INS SimpleName@@MethodName:setContextAttributesMapper:[authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
] @TO@ MethodInvocation@@authorizedClientManager.setContextAttributesMapper(authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
) @AT@ 16448 @LENGTH@ 604
---------INS LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @TO@ SimpleName@@MethodName:setContextAttributesMapper:[authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
] @AT@ 16475 @LENGTH@ 576
------------INS VariableDeclarationFragment@@authorizeRequest @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 16475 @LENGTH@ 16
---------------INS SimpleName@@authorizeRequest @TO@ VariableDeclarationFragment@@authorizeRequest @AT@ 16475 @LENGTH@ 16
------------INS VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 16500 @LENGTH@ 56
---------------INS ParameterizedType@@Map<String,Object> @TO@ VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @AT@ 16500 @LENGTH@ 19
------------------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,Object> @AT@ 16500 @LENGTH@ 3
------------------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,Object> @AT@ 16504 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Map<String,Object> @AT@ 16512 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@contextAttributes=new HashMap<>() @TO@ VariableDeclarationStatement@@Map<String,Object> contextAttributes=new HashMap<>(); @AT@ 16520 @LENGTH@ 35
------------------INS SimpleName@@contextAttributes @TO@ VariableDeclarationFragment@@contextAttributes=new HashMap<>() @AT@ 16520 @LENGTH@ 17
------------------INS ClassInstanceCreation@@HashMap<>[] @TO@ VariableDeclarationFragment@@contextAttributes=new HashMap<>() @AT@ 16540 @LENGTH@ 15
---------------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 16540 @LENGTH@ 3
---------------------INS ParameterizedType@@HashMap<> @TO@ ClassInstanceCreation@@HashMap<>[] @AT@ 16544 @LENGTH@ 9
------------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<> @AT@ 16544 @LENGTH@ 7
------------INS VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 16560 @LENGTH@ 99
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @AT@ 16560 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @TO@ VariableDeclarationStatement@@String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME); @AT@ 16567 @LENGTH@ 91
------------------INS SimpleName@@username @TO@ VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 16567 @LENGTH@ 8
------------------INS MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @TO@ VariableDeclarationFragment@@username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 16578 @LENGTH@ 80
---------------------INS MethodInvocation@@MethodName:getServletRequest:[] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 16578 @LENGTH@ 36
---------------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 16578 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.USERNAME] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME) @AT@ 16615 @LENGTH@ 43
------------------------INS QualifiedName@@OAuth2ParameterNames.USERNAME @TO@ SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.USERNAME] @AT@ 16628 @LENGTH@ 29
---------------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.USERNAME @AT@ 16628 @LENGTH@ 20
---------------------------INS SimpleName@@USERNAME @TO@ QualifiedName@@OAuth2ParameterNames.USERNAME @AT@ 16649 @LENGTH@ 8
------------INS VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 16663 @LENGTH@ 99
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @AT@ 16663 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @TO@ VariableDeclarationStatement@@String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD); @AT@ 16670 @LENGTH@ 91
------------------INS SimpleName@@password @TO@ VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 16670 @LENGTH@ 8
------------------INS MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @TO@ VariableDeclarationFragment@@password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 16681 @LENGTH@ 80
---------------------INS MethodInvocation@@MethodName:getServletRequest:[] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 16681 @LENGTH@ 36
---------------------INS SimpleName@@Name:authorizeRequest @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 16681 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.PASSWORD] @TO@ MethodInvocation@@authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD) @AT@ 16718 @LENGTH@ 43
------------------------INS QualifiedName@@OAuth2ParameterNames.PASSWORD @TO@ SimpleName@@MethodName:getParameter:[OAuth2ParameterNames.PASSWORD] @AT@ 16731 @LENGTH@ 29
---------------------------INS SimpleName@@OAuth2ParameterNames @TO@ QualifiedName@@OAuth2ParameterNames.PASSWORD @AT@ 16731 @LENGTH@ 20
---------------------------INS SimpleName@@PASSWORD @TO@ QualifiedName@@OAuth2ParameterNames.PASSWORD @AT@ 16752 @LENGTH@ 8
------------INS IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 16766 @LENGTH@ 252
---------------INS InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @TO@ IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 16770 @LENGTH@ 62
------------------INS MethodInvocation@@StringUtils.hasText(username) @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 16770 @LENGTH@ 29
---------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(username) @AT@ 16770 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:hasText:[username] @TO@ MethodInvocation@@StringUtils.hasText(username) @AT@ 16782 @LENGTH@ 17
------------------------INS SimpleName@@username @TO@ SimpleName@@MethodName:hasText:[username] @AT@ 16790 @LENGTH@ 8
------------------INS Operator@@&& @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 16799 @LENGTH@ 2
------------------INS MethodInvocation@@StringUtils.hasText(password) @TO@ InfixExpression@@StringUtils.hasText(username) && StringUtils.hasText(password) @AT@ 16803 @LENGTH@ 29
---------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(password) @AT@ 16803 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:hasText:[password] @TO@ MethodInvocation@@StringUtils.hasText(password) @AT@ 16815 @LENGTH@ 17
------------------------INS SimpleName@@password @TO@ SimpleName@@MethodName:hasText:[password] @AT@ 16823 @LENGTH@ 8
---------------INS Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @TO@ IfStatement@@if (StringUtils.hasText(username) && StringUtils.hasText(password)) {  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 16834 @LENGTH@ 184
------------------INS ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @TO@ Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 16840 @LENGTH@ 84
---------------------INS MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @TO@ ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 16840 @LENGTH@ 83
------------------------INS SimpleName@@Name:contextAttributes @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 16840 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username) @AT@ 16858 @LENGTH@ 65
---------------------------INS QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @AT@ 16862 @LENGTH@ 50
------------------------------INS SimpleName@@OAuth2AuthorizationContext @TO@ QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @AT@ 16862 @LENGTH@ 26
------------------------------INS SimpleName@@USERNAME_ATTRIBUTE_NAME @TO@ QualifiedName@@OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME @AT@ 16889 @LENGTH@ 23
---------------------------INS SimpleName@@username @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME, username] @AT@ 16914 @LENGTH@ 8
------------------INS ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @TO@ Block@@ThenBody:{  contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);  contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);} @AT@ 16929 @LENGTH@ 84
---------------------INS MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @TO@ ExpressionStatement@@MethodInvocation:contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 16929 @LENGTH@ 83
------------------------INS SimpleName@@Name:contextAttributes @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 16929 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @TO@ MethodInvocation@@contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password) @AT@ 16947 @LENGTH@ 65
---------------------------INS QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @AT@ 16951 @LENGTH@ 50
------------------------------INS SimpleName@@OAuth2AuthorizationContext @TO@ QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @AT@ 16951 @LENGTH@ 26
------------------------------INS SimpleName@@PASSWORD_ATTRIBUTE_NAME @TO@ QualifiedName@@OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME @AT@ 16978 @LENGTH@ 23
---------------------------INS SimpleName@@password @TO@ SimpleName@@MethodName:put:[OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME, password] @AT@ 17003 @LENGTH@ 8
------------INS ReturnStatement@@SimpleName:contextAttributes @TO@ LambdaExpression@@authorizeRequest -> {
  Map<String,Object> contextAttributes=new HashMap<>();
  String username=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.USERNAME);
  String password=authorizeRequest.getServletRequest().getParameter(OAuth2ParameterNames.PASSWORD);
  if (StringUtils.hasText(username) && StringUtils.hasText(password)) {
    contextAttributes.put(OAuth2AuthorizationContext.USERNAME_ATTRIBUTE_NAME,username);
    contextAttributes.put(OAuth2AuthorizationContext.PASSWORD_ATTRIBUTE_NAME,password);
  }
  return contextAttributes;
}
 @AT@ 17022 @LENGTH@ 25
---------------INS SimpleName@@contextAttributes @TO@ ReturnStatement@@SimpleName:contextAttributes @AT@ 17029 @LENGTH@ 17


UPD FieldDeclaration@@private, Consumer<AbstractNitriteOperation>, [operationValidator=(noop) -> {
}
] @TO@ private, Consumer<AbstractNitriteOperation>, [operationValidator=noop -> {
}
] @AT@ 1557 @LENGTH@ 78
---UPD VariableDeclarationFragment@@operationValidator=(noop) -> {
}
 @TO@ operationValidator=noop -> {
}
 @AT@ 1600 @LENGTH@ 34
------UPD LambdaExpression@@(noop) -> {
}
 @TO@ noop -> {
}
 @AT@ 1621 @LENGTH@ 13


UPD MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @TO@ public, void, MethodName:testReadFromMultiplePartitionsAfterRestart, ExecutionException, InterruptedException,  @AT@ 8859 @LENGTH@ 1525
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val0") @TO@ MethodInvocation:futures.add(this.template.send("topic4",0,null,"val0")) @AT@ 8920 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val0")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val0") @AT@ 9131 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val0")) @AT@ 9131 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val0")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val0")) @AT@ 9139 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",0,null,"val0") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val0")] @AT@ 8920 @LENGTH@ 45
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val2") @TO@ MethodInvocation:futures.add(this.template.send("topic4",0,null,"val2")) @AT@ 8969 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val2")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val2") @AT@ 9193 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val2")) @AT@ 9193 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val2")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val2")) @AT@ 9201 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",0,null,"val2") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val2")] @AT@ 8969 @LENGTH@ 45
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val4") @TO@ MethodInvocation:futures.add(this.template.send("topic4",0,null,"val4")) @AT@ 9018 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val4")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val4") @AT@ 9255 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val4")) @AT@ 9255 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val4")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val4")) @AT@ 9263 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",0,null,"val4") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val4")] @AT@ 9018 @LENGTH@ 45
---INS SimpleType@@ExecutionException @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 9032 @LENGTH@ 18
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 9052 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val6") @TO@ MethodInvocation:futures.add(this.template.send("topic4",0,null,"val6")) @AT@ 9067 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val6")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",0,null,"val6") @AT@ 9317 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val6")) @AT@ 9317 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val6")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",0,null,"val6")) @AT@ 9325 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",0,null,"val6") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",0,null,"val6")] @AT@ 9067 @LENGTH@ 45
---INS VariableDeclarationStatement@@List<ListenableFuture> futures=new ArrayList<>(); @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 9077 @LENGTH@ 51
------INS ParameterizedType@@List<ListenableFuture> @TO@ VariableDeclarationStatement@@List<ListenableFuture> futures=new ArrayList<>(); @AT@ 9077 @LENGTH@ 22
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ListenableFuture> @AT@ 9077 @LENGTH@ 4
---------INS SimpleType@@ListenableFuture @TO@ ParameterizedType@@List<ListenableFuture> @AT@ 9082 @LENGTH@ 16
------INS VariableDeclarationFragment@@futures=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<ListenableFuture> futures=new ArrayList<>(); @AT@ 9100 @LENGTH@ 27
---------INS SimpleName@@futures @TO@ VariableDeclarationFragment@@futures=new ArrayList<>() @AT@ 9100 @LENGTH@ 7
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@futures=new ArrayList<>() @AT@ 9110 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 9110 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 9114 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 9114 @LENGTH@ 9
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val1") @TO@ MethodInvocation:futures.add(this.template.send("topic4",1,null,"val1")) @AT@ 9116 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val1")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val1") @AT@ 9379 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val1")) @AT@ 9379 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val1")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val1")) @AT@ 9387 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",1,null,"val1") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val1")] @AT@ 9116 @LENGTH@ 45
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val3") @TO@ MethodInvocation:futures.add(this.template.send("topic4",1,null,"val3")) @AT@ 9165 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val3")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val3") @AT@ 9441 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val3")) @AT@ 9441 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val3")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val3")) @AT@ 9449 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",1,null,"val3") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val3")] @AT@ 9165 @LENGTH@ 45
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val5") @TO@ MethodInvocation:futures.add(this.template.send("topic4",1,null,"val5")) @AT@ 9214 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val5")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val5") @AT@ 9503 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val5")) @AT@ 9503 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val5")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val5")) @AT@ 9511 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",1,null,"val5") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val5")] @AT@ 9214 @LENGTH@ 45
---UPD ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val7") @TO@ MethodInvocation:futures.add(this.template.send("topic4",1,null,"val7")) @AT@ 9263 @LENGTH@ 46
------INS MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val7")) @TO@ ExpressionStatement@@MethodInvocation:this.template.send("topic4",1,null,"val7") @AT@ 9565 @LENGTH@ 58
---------INS SimpleName@@Name:futures @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val7")) @AT@ 9565 @LENGTH@ 7
---------INS SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val7")] @TO@ MethodInvocation@@futures.add(this.template.send("topic4",1,null,"val7")) @AT@ 9573 @LENGTH@ 50
------------MOV MethodInvocation@@this.template.send("topic4",1,null,"val7") @TO@ SimpleName@@MethodName:add:[this.template.send("topic4",1,null,"val7")] @AT@ 9263 @LENGTH@ 45
---INS EnhancedForStatement@@for (ListenableFuture future : futures) {  future.get();} @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 9628 @LENGTH@ 62
------INS SingleVariableDeclaration@@ListenableFuture future @TO@ EnhancedForStatement@@for (ListenableFuture future : futures) {  future.get();} @AT@ 9633 @LENGTH@ 23
---------INS SimpleType@@ListenableFuture @TO@ SingleVariableDeclaration@@ListenableFuture future @AT@ 9633 @LENGTH@ 16
---------INS SimpleName@@future @TO@ SingleVariableDeclaration@@ListenableFuture future @AT@ 9650 @LENGTH@ 6
------INS SimpleName@@futures @TO@ EnhancedForStatement@@for (ListenableFuture future : futures) {  future.get();} @AT@ 9659 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:future.get() @TO@ EnhancedForStatement@@for (ListenableFuture future : futures) {  future.get();} @AT@ 9673 @LENGTH@ 13
---------INS MethodInvocation@@future.get() @TO@ ExpressionStatement@@MethodInvocation:future.get() @AT@ 9673 @LENGTH@ 12
------------INS SimpleName@@Name:future @TO@ MethodInvocation@@future.get() @AT@ 9673 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@future.get() @AT@ 9680 @LENGTH@ 5
---MOV ExpressionStatement@@MethodInvocation:items.add(this.reader.read()) @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 10140 @LENGTH@ 30
---MOV ExpressionStatement@@MethodInvocation:items.add(this.reader.read()) @TO@ MethodDeclaration@@public, void, MethodName:testReadFromMultiplePartitionsAfterRestart,  @AT@ 10173 @LENGTH@ 30


UPD TypeDeclaration@@[public, static]GangliaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GangliaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1426 @LENGTH@ 8016
---DEL Modifier@@static @AT@ 1433 @LENGTH@ 6


UPD VariableDeclarationStatement@@final CountDownLatch latch2=new CountDownLatch(1); @TO@ final CountDownLatch latch2=new CountDownLatch(2); @AT@ 23548 @LENGTH@ 52
---UPD VariableDeclarationFragment@@latch2=new CountDownLatch(1) @TO@ latch2=new CountDownLatch(2) @AT@ 23569 @LENGTH@ 30
------UPD ClassInstanceCreation@@CountDownLatch[1] @TO@ CountDownLatch[2] @AT@ 23578 @LENGTH@ 21
---------UPD NumberLiteral@@1 @TO@ 2 @AT@ 23597 @LENGTH@ 1


UPD FieldDeclaration@@private, static, final, Set<Class<?>>, [COMPARABLE_TEMPORAL_TYPES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class)))] @TO@ private, static, final, Set<Class<?>>, [COMPARABLE_TEMPORAL_TYPES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class)))] @AT@ 2212 @LENGTH@ 204
---UPD VariableDeclarationFragment@@COMPARABLE_TEMPORAL_TYPES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class))) @TO@ COMPARABLE_TEMPORAL_TYPES=Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class))) @AT@ 2247 @LENGTH@ 168
------UPD MethodInvocation@@Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class))) @TO@ Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class))) @AT@ 2275 @LENGTH@ 140
---------UPD SimpleName@@MethodName:unmodifiableSet:[new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class))] @TO@ MethodName:unmodifiableSet:[new HashSet<>(Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class))] @AT@ 2290 @LENGTH@ 125
------------UPD ClassInstanceCreation@@HashSet<>[Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class)] @TO@ HashSet<>[Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class)] @AT@ 2306 @LENGTH@ 108
---------------UPD MethodInvocation@@Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class) @TO@ Arrays.asList(LocalDate.class,OffsetTime.class,ZonedDateTime.class,LocalDateTime.class,Instant.class) @AT@ 2320 @LENGTH@ 93
------------------UPD SimpleName@@MethodName:asList:[LocalDate.class, OffsetTime.class, ZonedDateTime.class, LocalDateTime.class] @TO@ MethodName:asList:[LocalDate.class, OffsetTime.class, ZonedDateTime.class, LocalDateTime.class, Instant.class] @AT@ 2327 @LENGTH@ 86
---------------------INS TypeLiteral@@Instant.class @TO@ SimpleName@@MethodName:asList:[LocalDate.class, OffsetTime.class, ZonedDateTime.class, LocalDateTime.class] @AT@ 2440 @LENGTH@ 13


UPD TypeDeclaration@@[public, static]AdvancedSjmsBatchEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedSjmsBatchEndpointBuilder, [EndpointConsumerBuilder] @AT@ 15528 @LENGTH@ 12730
---DEL Modifier@@static @AT@ 15535 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]MSKOperations,  @TO@ [static]MSKOperations,  @AT@ 4393 @LENGTH@ 109
---DEL Modifier@@public @AT@ 4393 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ MethodInvocation:responseList.forEach(responseObserver::onNext) @AT@ 2330 @LENGTH@ 119
---UPD MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @TO@ responseList.forEach(responseObserver::onNext) @AT@ 2330 @LENGTH@ 118
------DEL SimpleName@@MethodName:forEach:[(responseItem) -> {
  responseObserver.onNext(responseItem);
}
] @AT@ 2343 @LENGTH@ 105
---------DEL LambdaExpression@@(responseItem) -> {
  responseObserver.onNext(responseItem);
}
 @AT@ 2351 @LENGTH@ 96
------------DEL VariableDeclarationFragment@@responseItem @AT@ 2352 @LENGTH@ 12
---------------DEL SimpleName@@responseItem @AT@ 2352 @LENGTH@ 12
------------DEL ExpressionStatement@@MethodInvocation:responseObserver.onNext(responseItem) @AT@ 2391 @LENGTH@ 38
---------------DEL MethodInvocation@@responseObserver.onNext(responseItem) @AT@ 2391 @LENGTH@ 37
------------------DEL SimpleName@@Name:responseObserver @AT@ 2391 @LENGTH@ 16
------MOV SimpleName@@MethodName:onNext:[responseItem] @TO@ MethodInvocation@@responseList.forEach((responseItem) -> {
  responseObserver.onNext(responseItem);
}
) @AT@ 2408 @LENGTH@ 20
---------DEL SimpleName@@responseItem @AT@ 2415 @LENGTH@ 12


UPD IfStatement@@if (handler instanceof RedeliveryErrorHandler) {  RedeliveryErrorHandler reh=(RedeliveryErrorHandler)handler;  boolean original=reh.isUseOriginalMessagePolicy() || reh.isUseOriginalBodyPolicy();  ;  if (original) {    if (reh.isUseOriginalMessagePolicy() && reh.isUseOriginalBodyPolicy()) {      throw new IllegalArgumentException("Cannot set both useOriginalMessage and useOriginalBody on the error handler");    }    routeContext.setAllowUseOriginalMessage(true);  }} @TO@ if (handler instanceof RedeliveryErrorHandler) {  RedeliveryErrorHandler reh=(RedeliveryErrorHandler)handler;  boolean original=reh.isUseOriginalMessagePolicy() || reh.isUseOriginalBodyPolicy();  if (original) {    if (reh.isUseOriginalMessagePolicy() && reh.isUseOriginalBodyPolicy()) {      throw new IllegalArgumentException("Cannot set both useOriginalMessage and useOriginalBody on the error handler");    }    routeContext.setAllowUseOriginalMessage(true);  }} @AT@ 2792 @LENGTH@ 633
---UPD Block@@ThenBody:{  RedeliveryErrorHandler reh=(RedeliveryErrorHandler)handler;  boolean original=reh.isUseOriginalMessagePolicy() || reh.isUseOriginalBodyPolicy();  ;  if (original) {    if (reh.isUseOriginalMessagePolicy() && reh.isUseOriginalBodyPolicy()) {      throw new IllegalArgumentException("Cannot set both useOriginalMessage and useOriginalBody on the error handler");    }    routeContext.setAllowUseOriginalMessage(true);  }} @TO@ ThenBody:{  RedeliveryErrorHandler reh=(RedeliveryErrorHandler)handler;  boolean original=reh.isUseOriginalMessagePolicy() || reh.isUseOriginalBodyPolicy();  if (original) {    if (reh.isUseOriginalMessagePolicy() && reh.isUseOriginalBodyPolicy()) {      throw new IllegalArgumentException("Cannot set both useOriginalMessage and useOriginalBody on the error handler");    }    routeContext.setAllowUseOriginalMessage(true);  }} @AT@ 2839 @LENGTH@ 586


UPD TypeDeclaration@@[public]HttpSessionBasedTokenServices, [OAuthConsumerTokenServices] @TO@ [@Deprecated, public]HttpSessionBasedTokenServices, [OAuthConsumerTokenServices] @AT@ 1107 @LENGTH@ 2526
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]HttpSessionBasedTokenServices, [OAuthConsumerTokenServices] @AT@ 1328 @LENGTH@ 11


UPD VariableDeclarationStatement@@Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ Task<?> currTask=(Task<?>)nd; @AT@ 2962 @LENGTH@ 74
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2962 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 2991 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 3002 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3003 @LENGTH@ 28


UPD IfStatement@@if (n != -1) {  branch.write(bts,st,n);} @TO@ if (n != EOF) {  branch.write(bts,st,n);} @AT@ 4666 @LENGTH@ 62
---UPD InfixExpression@@n != -1 @TO@ n != EOF @AT@ 4670 @LENGTH@ 7
------INS SimpleName@@EOF @TO@ InfixExpression@@n != -1 @AT@ 4666 @LENGTH@ 3
------DEL PrefixExpression@@-1 @AT@ 4675 @LENGTH@ 2
---------DEL Operator@@- @AT@ 4675 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 4676 @LENGTH@ 1


INS FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @TO@ TypeDeclaration@@[public, final]OAuth2AuthorizationContext,  @AT@ 1914 @LENGTH@ 116
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @AT@ 1914 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @AT@ 1921 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @AT@ 1928 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @AT@ 1934 @LENGTH@ 6
---INS VariableDeclarationFragment@@USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @TO@ FieldDeclaration@@public, static, final, String, [USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME")] @AT@ 1941 @LENGTH@ 88
------INS SimpleName@@USERNAME_ATTRIBUTE_NAME @TO@ VariableDeclarationFragment@@USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @AT@ 1941 @LENGTH@ 23
------INS MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @TO@ VariableDeclarationFragment@@USERNAME_ATTRIBUTE_NAME=OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @AT@ 1967 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @AT@ 1967 @LENGTH@ 42
---------INS TypeLiteral@@OAuth2AuthorizationContext.class @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @AT@ 1967 @LENGTH@ 32
---------INS SimpleName@@MethodName:concat:[".USERNAME"] @TO@ MethodInvocation@@OAuth2AuthorizationContext.class.getName().concat(".USERNAME") @AT@ 2010 @LENGTH@ 19
------------INS StringLiteral@@".USERNAME" @TO@ SimpleName@@MethodName:concat:[".USERNAME"] @AT@ 2017 @LENGTH@ 11


UPD VariableDeclarationStatement@@ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build(); @TO@ ReactiveOAuth2AuthorizedClientProvider authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build(); @AT@ 3280 @LENGTH@ 227
---UPD VariableDeclarationFragment@@authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ authorizedClientProvider=ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 3319 @LENGTH@ 187
------UPD MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @TO@ ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().password().build() @AT@ 3352 @LENGTH@ 154
---------INS MethodInvocation@@MethodName:password:[] @TO@ MethodInvocation@@ReactiveOAuth2AuthorizedClientProviderBuilder.builder().authorizationCode().refreshToken().clientCredentials().build() @AT@ 3352 @LENGTH@ 157


UPD MethodDeclaration@@default, GeoCoderEndpointBuilder, MethodName:geoCoder, String path,  @TO@ default, GeoCoderEndpointBuilder, MethodName:geocoder, String path,  @AT@ 9571 @LENGTH@ 386
---UPD SimpleName@@MethodName:geoCoder @TO@ MethodName:geocoder @AT@ 9603 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:builder.setDisableDirListing(true) @TO@ MethodDeclaration@@public, void, MethodName:serviceInit, Configuration conf,  @AT@ 3538 @LENGTH@ 35
---INS MethodInvocation@@builder.setDisableDirListing(true) @TO@ ExpressionStatement@@MethodInvocation:builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 34
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 7
------INS SimpleName@@MethodName:setDisableDirListing:[true] @TO@ MethodInvocation@@builder.setDisableDirListing(true) @AT@ 3546 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setDisableDirListing:[true] @AT@ 3567 @LENGTH@ 4


UPD ReturnStatement@@ConditionalExpression:pageable.isPaged() ? pageable.getPageSize() : 0 @TO@ ConditionalExpression:pageable.isPaged() ? pageable.getPageSize() : content.size() @AT@ 2074 @LENGTH@ 55
---UPD ConditionalExpression@@pageable.isPaged() ? pageable.getPageSize() : 0 @TO@ pageable.isPaged() ? pageable.getPageSize() : content.size() @AT@ 2081 @LENGTH@ 47
------INS MethodInvocation@@content.size() @TO@ ConditionalExpression@@pageable.isPaged() ? pageable.getPageSize() : 0 @AT@ 2127 @LENGTH@ 14
---------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.size() @AT@ 2127 @LENGTH@ 7
---------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@content.size() @AT@ 2135 @LENGTH@ 6
------DEL NumberLiteral@@0 @AT@ 2127 @LENGTH@ 1


MOV FieldDeclaration@@protected, static, final, Logger, [LOG=LoggerFactory.getLogger(ProxyProtocolTest.class)] @TO@ TypeDeclaration@@[@RunWith(Parameterized.class), public]ProxyProtocolTest,  @AT@ 2447 @LENGTH@ 85


UPD FieldDeclaration@@public, String, [saslConfig] @TO@ private, String, [saslConfig] @AT@ 7733 @LENGTH@ 25
---UPD Modifier@@public @TO@ private @AT@ 7733 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ MethodInvocation:from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2492 @LENGTH@ 698
---UPD MethodInvocation@@from("netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @TO@ from("netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message input=exchange.getIn().getBody(Message.class);
    assertEquals("2.4",input.getVersion());
    QRD qrd=(QRD)input.get("QRD");
    assertEquals("0101701234",qrd.getWhoSubjectFilter(0).getIDNumber().getValue());
    Message response=createHL7AsMessage();
    exchange.getOut().setBody(response);
  }
}
).to("mock:result") @AT@ 2492 @LENGTH@ 697
------UPD MethodInvocation@@MethodName:from:["netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @TO@ MethodName:from:["netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder"] @AT@ 2492 @LENGTH@ 98
---------UPD InfixExpression@@"netty4:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @TO@ "netty:tcp://127.0.0.1:" + getPort() + "?sync=true&decoder=#hl7decoder&encoder=#hl7encoder" @AT@ 2497 @LENGTH@ 92
------------UPD StringLiteral@@"netty4:tcp://127.0.0.1:" @TO@ "netty:tcp://127.0.0.1:" @AT@ 2497 @LENGTH@ 25


UPD TypeDeclaration@@[public]DefaultOAuth2RequestAuthenticator, [OAuth2RequestAuthenticator] @TO@ [@Deprecated, public]DefaultOAuth2RequestAuthenticator, [OAuth2RequestAuthenticator] @AT@ 1043 @LENGTH@ 905
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2RequestAuthenticator, [OAuth2RequestAuthenticator] @AT@ 1221 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]RestBindingMode,  @TO@ [static]RestBindingMode,  @AT@ 27108 @LENGTH@ 82
---DEL Modifier@@public @AT@ 27108 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]ChatScriptEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ChatScriptEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 2562
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD VariableDeclarationStatement@@final PathAddress address=PathAddress.pathAddress(operation.get(OP_ADDR)); @TO@ final PathAddress referenceAddress=PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath); @AT@ 4345 @LENGTH@ 76
---UPD VariableDeclarationFragment@@address=PathAddress.pathAddress(operation.get(OP_ADDR)) @TO@ referenceAddress=PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath) @AT@ 4363 @LENGTH@ 57
------UPD SimpleName@@address @TO@ referenceAddress @AT@ 4363 @LENGTH@ 7
------UPD MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)) @TO@ MethodName:pathAddress:[operation.get(OP_ADDR)] @AT@ 4373 @LENGTH@ 47
------INS MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath) @TO@ VariableDeclarationFragment@@address=PathAddress.pathAddress(operation.get(OP_ADDR)) @AT@ 4382 @LENGTH@ 70
---------MOV MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)) @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath) @AT@ 4373 @LENGTH@ 47
------------DEL SimpleName@@Name:PathAddress @AT@ 4373 @LENGTH@ 11
------------DEL SimpleName@@MethodName:pathAddress:[operation.get(OP_ADDR)] @AT@ 4385 @LENGTH@ 35
------------MOV MethodInvocation@@operation.get(OP_ADDR) @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)) @AT@ 4397 @LENGTH@ 22
---------INS SimpleName@@Name:PathAddress @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath) @AT@ 4382 @LENGTH@ 11
---------INS SimpleName@@MethodName:append:[deploymentPath] @TO@ MethodInvocation@@PathAddress.pathAddress(operation.get(OP_ADDR)).append(deploymentPath) @AT@ 4430 @LENGTH@ 22
------------INS SimpleName@@deploymentPath @TO@ SimpleName@@MethodName:append:[deploymentPath] @AT@ 4437 @LENGTH@ 14


INS VariableDeclarationStatement@@ConnectionFactory connectionFactory=getConnectionFactory(); @TO@ MethodDeclaration@@public, T, T, MethodName:invoke, OperationsCallback<T> action, @Nullable com.rabbitmq.client.ConfirmCallback acks, @Nullable com.rabbitmq.client.ConfirmCallback nacks,  @AT@ 80448 @LENGTH@ 61
---INS SimpleType@@ConnectionFactory @TO@ VariableDeclarationStatement@@ConnectionFactory connectionFactory=getConnectionFactory(); @AT@ 80448 @LENGTH@ 17
---INS VariableDeclarationFragment@@connectionFactory=getConnectionFactory() @TO@ VariableDeclarationStatement@@ConnectionFactory connectionFactory=getConnectionFactory(); @AT@ 80466 @LENGTH@ 42
------INS SimpleName@@connectionFactory @TO@ VariableDeclarationFragment@@connectionFactory=getConnectionFactory() @AT@ 80466 @LENGTH@ 17
------INS MethodInvocation@@MethodName:getConnectionFactory:[] @TO@ VariableDeclarationFragment@@connectionFactory=getConnectionFactory() @AT@ 80486 @LENGTH@ 22


UPD EnumDeclaration@@[public, static]DropboxOperation,  @TO@ [static]DropboxOperation,  @AT@ 30629 @LENGTH@ 80
---DEL Modifier@@public @AT@ 30629 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]SmppSplittingPolicy,  @TO@ [static]SmppSplittingPolicy,  @AT@ 78842 @LENGTH@ 79
---DEL Modifier@@public @AT@ 78842 @LENGTH@ 6


UPD TypeDeclaration@@[public]EndpointBuilderFactory, [AMQPEndpointBuilderFactory, AS2EndpointBuilderFactory, ActiveMQEndpointBuilderFactory, AhcEndpointBuilderFactory, ApnsEndpointBuilderFactory, AsteriskEndpointBuilderFactory, AtmosEndpointBuilderFactory, AtmosphereWebsocketEndpointBuilderFactory, AtomEndpointBuilderFactory, AtomixMapEndpointBuilderFactory, AtomixMessagingEndpointBuilderFactory, AtomixMultiMapEndpointBuilderFactory, AtomixQueueEndpointBuilderFactory, AtomixSetEndpointBuilderFactory, AtomixValueEndpointBuilderFactory, AvroEndpointBuilderFactory, BeanEndpointBuilderFactory, BeanValidatorEndpointBuilderFactory, BeanstalkEndpointBuilderFactory, BlobServiceEndpointBuilderFactory, BonitaEndpointBuilderFactory, BoxEndpointBuilderFactory, BraintreeEndpointBuilderFactory, BrowseEndpointBuilderFactory, CMEndpointBuilderFactory, CMISEndpointBuilderFactory, CaffeineCacheEndpointBuilderFactory, CaffeineLoadCacheEndpointBuilderFactory, CassandraEndpointBuilderFactory, ChatScriptEndpointBuilderFactory, ChunkEndpointBuilderFactory, CinderEndpointBuilderFactory, ClassEndpointBuilderFactory, ClientEndpointBuilderFactory, CoAPEndpointBuilderFactory, CometdEndpointBuilderFactory, ConsulEndpointBuilderFactory, ControlBusEndpointBuilderFactory, CordaEndpointBuilderFactory, CouchDbEndpointBuilderFactory, CouchbaseEndpointBuilderFactory, CryptoCmsEndpointBuilderFactory, CwEndpointBuilderFactory, CxfEndpointBuilderFactory, CxfRsEndpointBuilderFactory, DataFormatEndpointBuilderFactory, DataSetEndpointBuilderFactory, DataSetTestEndpointBuilderFactory, DdbEndpointBuilderFactory, DdbStreamEndpointBuilderFactory, DigitalOceanEndpointBuilderFactory, DigitalSignatureEndpointBuilderFactory, DirectEndpointBuilderFactory, DirectVmEndpointBuilderFactory, DisruptorEndpointBuilderFactory, DisruptorVmEndpointBuilderFactory, DnsEndpointBuilderFactory, DockerEndpointBuilderFactory, DozerEndpointBuilderFactory, DrillEndpointBuilderFactory, DropboxEndpointBuilderFactory, EC2EndpointBuilderFactory, ECSEndpointBuilderFactory, EKSEndpointBuilderFactory, EhcacheEndpointBuilderFactory, ElasticsearchEndpointBuilderFactory, ElsqlEndpointBuilderFactory, EtcdEndpointBuilderFactory, EventAdminEndpointBuilderFactory, EventEndpointBuilderFactory, ExecEndpointBuilderFactory, FacebookEndpointBuilderFactory, FhirEndpointBuilderFactory, FileEndpointBuilderFactory, FlatpackEndpointBuilderFactory, FlinkEndpointBuilderFactory, FopEndpointBuilderFactory, FreemarkerEndpointBuilderFactory, FtpEndpointBuilderFactory, FtpsEndpointBuilderFactory, GangliaEndpointBuilderFactory, GeoCoderEndpointBuilderFactory, GitEndpointBuilderFactory, GitHubEndpointBuilderFactory, GlanceEndpointBuilderFactory, GoogleBigQueryEndpointBuilderFactory, GoogleBigQuerySQLEndpointBuilderFactory, GoogleCalendarEndpointBuilderFactory, GoogleCalendarStreamEndpointBuilderFactory, GoogleDriveEndpointBuilderFactory, GoogleMailEndpointBuilderFactory, GoogleMailStreamEndpointBuilderFactory, GooglePubsubEndpointBuilderFactory, GoogleSheetsEndpointBuilderFactory, GoogleSheetsStreamEndpointBuilderFactory, GoraEndpointBuilderFactory, GrapeEndpointBuilderFactory, GridFsEndpointBuilderFactory, GrpcEndpointBuilderFactory, GuavaEventBusEndpointBuilderFactory, HBaseEndpointBuilderFactory, HazelcastAtomicnumberEndpointBuilderFactory, HazelcastInstanceEndpointBuilderFactory, HazelcastListEndpointBuilderFactory, HazelcastMapEndpointBuilderFactory, HazelcastMultimapEndpointBuilderFactory, HazelcastQueueEndpointBuilderFactory, HazelcastReplicatedmapEndpointBuilderFactory, HazelcastRingbufferEndpointBuilderFactory, HazelcastSedaEndpointBuilderFactory, HazelcastSetEndpointBuilderFactory, HazelcastTopicEndpointBuilderFactory, HdfsEndpointBuilderFactory, HipchatEndpointBuilderFactory, HttpEndpointBuilderFactory, IAMEndpointBuilderFactory, IOTAEndpointBuilderFactory, IPFSEndpointBuilderFactory, IgniteCacheEndpointBuilderFactory, IgniteComputeEndpointBuilderFactory, IgniteEventsEndpointBuilderFactory, IgniteIdGenEndpointBuilderFactory, IgniteMessagingEndpointBuilderFactory, IgniteQueueEndpointBuilderFactory, IgniteSetEndpointBuilderFactory, InfinispanEndpointBuilderFactory, InfluxDbEndpointBuilderFactory, IrcEndpointBuilderFactory, IronMQEndpointBuilderFactory, JBPMEndpointBuilderFactory, JCacheEndpointBuilderFactory, JGroupsEndpointBuilderFactory, JGroupsRaftEndpointBuilderFactory, JMXEndpointBuilderFactory, JSR356WebSocketEndpointBuilderFactory, JcloudsEndpointBuilderFactory, JcrEndpointBuilderFactory, JdbcEndpointBuilderFactory, JettyHttpEndpointBuilder9Factory, JingEndpointBuilderFactory, JiraEndpointBuilderFactory, JmsEndpointBuilderFactory, JoltEndpointBuilderFactory, JooqEndpointBuilderFactory, JpaEndpointBuilderFactory, JsonValidatorEndpointBuilderFactory, Jt400EndpointBuilderFactory, KMSEndpointBuilderFactory, KafkaEndpointBuilderFactory, KeystoneEndpointBuilderFactory, KinesisEndpointBuilderFactory, KinesisFirehoseEndpointBuilderFactory, KubernetesConfigMapsEndpointBuilderFactory, KubernetesDeploymentsEndpointBuilderFactory, KubernetesHPAEndpointBuilderFactory, KubernetesJobEndpointBuilderFactory, KubernetesNamespacesEndpointBuilderFactory, KubernetesNodesEndpointBuilderFactory, KubernetesPersistentVolumesClaimsEndpointBuilderFactory, KubernetesPersistentVolumesEndpointBuilderFactory, KubernetesPodsEndpointBuilderFactory, KubernetesReplicationControllersEndpointBuilderFactory, KubernetesResourcesQuotaEndpointBuilderFactory, KubernetesSecretsEndpointBuilderFactory, KubernetesServiceAccountsEndpointBuilderFactory, KubernetesServicesEndpointBuilderFactory, LambdaEndpointBuilderFactory, LanguageEndpointBuilderFactory, LdapEndpointBuilderFactory, LdifEndpointBuilderFactory, LinkedInEndpointBuilderFactory, LogEndpointBuilderFactory, LuceneEndpointBuilderFactory, LumberjackEndpointBuilderFactory, MQEndpointBuilderFactory, MSKEndpointBuilderFactory, MailEndpointBuilderFactory, MasterEndpointBuilderFactory, MetricsEndpointBuilderFactory, MicrometerEndpointBuilderFactory, MiloClientEndpointBuilderFactory, MiloServerEndpointBuilderFactory, MinaEndpointBuilderFactory, MllpEndpointBuilderFactory, MockEndpointBuilderFactory, MongoDbEndpointBuilderFactory, MsvEndpointBuilderFactory, MustacheEndpointBuilderFactory, MvelEndpointBuilderFactory, MyBatisBeanEndpointBuilderFactory, MyBatisEndpointBuilderFactory, NagiosEndpointBuilderFactory, NatsEndpointBuilderFactory, NetWeaverEndpointBuilderFactory, NettyEndpointBuilderFactory, NettyHttpEndpointBuilderFactory, NeutronEndpointBuilderFactory, NovaEndpointBuilderFactory, NsqEndpointBuilderFactory, Olingo2EndpointBuilderFactory, Olingo4EndpointBuilderFactory, OpenshiftBuildConfigsEndpointBuilderFactory, OpenshiftBuildsEndpointBuilderFactory, OptaPlannerEndpointBuilderFactory, PahoEndpointBuilderFactory, PaxLoggingEndpointBuilderFactory, PdfEndpointBuilderFactory, PgEventEndpointBuilderFactory, PrinterEndpointBuilderFactory, PubNubEndpointBuilderFactory, PulsarEndpointBuilderFactory, QuartzEndpointBuilderFactory, QueueServiceEndpointBuilderFactory, QuickfixjEndpointBuilderFactory, RabbitMQEndpointBuilderFactory, ReactiveStreamsEndpointBuilderFactory, RedisEndpointBuilderFactory, RefEndpointBuilderFactory, RestApiEndpointBuilderFactory, RestEndpointBuilderFactory, RestSwaggerEndpointBuilderFactory, RssEndpointBuilderFactory, S3EndpointBuilderFactory, SWFEndpointBuilderFactory, SagaEndpointBuilderFactory, SalesforceEndpointBuilderFactory, SchedulerEndpointBuilderFactory, SchematronEndpointBuilderFactory, ScpEndpointBuilderFactory, SdbEndpointBuilderFactory, SedaEndpointBuilderFactory, ServerEndpointBuilderFactory, ServiceEndpointBuilderFactory, ServiceNowEndpointBuilderFactory, ServletEndpointBuilderFactory, SesEndpointBuilderFactory, SftpEndpointBuilderFactory, SipEndpointBuilderFactory, Sjms2EndpointBuilderFactory, SjmsBatchEndpointBuilderFactory, SjmsEndpointBuilderFactory, SlackEndpointBuilderFactory, SmppEndpointBuilderFactory, SnmpEndpointBuilderFactory, SnsEndpointBuilderFactory, SolrEndpointBuilderFactory, SoroushBotEndpointBuilderFactory, SparkEndpointBuilderFactory, SplunkEndpointBuilderFactory, SpringBatchEndpointBuilderFactory, SpringIntegrationEndpointBuilderFactory, SpringLdapEndpointBuilderFactory, SpringWebserviceEndpointBuilderFactory, SqlEndpointBuilderFactory, SqlStoredEndpointBuilderFactory, SqsEndpointBuilderFactory, SshEndpointBuilderFactory, StAXEndpointBuilderFactory, StompEndpointBuilderFactory, StreamEndpointBuilderFactory, StringTemplateEndpointBuilderFactory, StubEndpointBuilderFactory, SwiftEndpointBuilderFactory, TelegramEndpointBuilderFactory, ThriftEndpointBuilderFactory, TikaEndpointBuilderFactory, TimerEndpointBuilderFactory, TwilioEndpointBuilderFactory, TwitterDirectMessageEndpointBuilderFactory, TwitterSearchEndpointBuilderFactory, TwitterTimelineEndpointBuilderFactory, UndertowEndpointBuilderFactory, ValidatorEndpointBuilderFactory, VelocityEndpointBuilderFactory, VertxEndpointBuilderFactory, VmEndpointBuilderFactory, WeatherEndpointBuilderFactory, Web3jEndpointBuilderFactory, WebhookEndpointBuilderFactory, WebsocketEndpointBuilderFactory, WordpressEndpointBuilderFactory, WsEndpointBuilderFactory, XChangeEndpointBuilderFactory, XQueryEndpointBuilderFactory, XmlSignatureEndpointBuilderFactory, XmppEndpointBuilderFactory, XsltEndpointBuilderFactory, YammerEndpointBuilderFactory, ZendeskEndpointBuilderFactory, ZooKeeperEndpointBuilderFactory, ZooKeeperMasterEndpointBuilderFactory] @TO@ [public]EndpointBuilderFactory, [AMQPEndpointBuilderFactory, AS2EndpointBuilderFactory, ActiveMQEndpointBuilderFactory, AhcEndpointBuilderFactory, ApnsEndpointBuilderFactory, AsteriskEndpointBuilderFactory, AtmosEndpointBuilderFactory, AtmosphereWebsocketEndpointBuilderFactory, AtomEndpointBuilderFactory, AtomixMapEndpointBuilderFactory, AtomixMessagingEndpointBuilderFactory, AtomixMultiMapEndpointBuilderFactory, AtomixQueueEndpointBuilderFactory, AtomixSetEndpointBuilderFactory, AtomixValueEndpointBuilderFactory, AvroEndpointBuilderFactory, BeanEndpointBuilderFactory, BeanValidatorEndpointBuilderFactory, BeanstalkEndpointBuilderFactory, BlobServiceEndpointBuilderFactory, BonitaEndpointBuilderFactory, BoxEndpointBuilderFactory, BraintreeEndpointBuilderFactory, BrowseEndpointBuilderFactory, CMEndpointBuilderFactory, CMISEndpointBuilderFactory, CaffeineCacheEndpointBuilderFactory, CaffeineLoadCacheEndpointBuilderFactory, CassandraEndpointBuilderFactory, ChatScriptEndpointBuilderFactory, ChunkEndpointBuilderFactory, CinderEndpointBuilderFactory, ClassEndpointBuilderFactory, ClientEndpointBuilderFactory, CoAPEndpointBuilderFactory, CometdEndpointBuilderFactory, ConsulEndpointBuilderFactory, ControlBusEndpointBuilderFactory, CordaEndpointBuilderFactory, CouchDbEndpointBuilderFactory, CouchbaseEndpointBuilderFactory, CryptoCmsEndpointBuilderFactory, CwEndpointBuilderFactory, CxfEndpointBuilderFactory, CxfRsEndpointBuilderFactory, DataFormatEndpointBuilderFactory, DataSetEndpointBuilderFactory, DataSetTestEndpointBuilderFactory, DdbEndpointBuilderFactory, DdbStreamEndpointBuilderFactory, DigitalOceanEndpointBuilderFactory, DigitalSignatureEndpointBuilderFactory, DirectEndpointBuilderFactory, DirectVmEndpointBuilderFactory, DisruptorEndpointBuilderFactory, DisruptorVmEndpointBuilderFactory, DnsEndpointBuilderFactory, DockerEndpointBuilderFactory, DozerEndpointBuilderFactory, DrillEndpointBuilderFactory, DropboxEndpointBuilderFactory, EC2EndpointBuilderFactory, ECSEndpointBuilderFactory, EKSEndpointBuilderFactory, EhcacheEndpointBuilderFactory, ElasticsearchEndpointBuilderFactory, ElsqlEndpointBuilderFactory, EtcdEndpointBuilderFactory, EventAdminEndpointBuilderFactory, EventEndpointBuilderFactory, ExecEndpointBuilderFactory, FacebookEndpointBuilderFactory, FhirEndpointBuilderFactory, FileEndpointBuilderFactory, FlatpackEndpointBuilderFactory, FlinkEndpointBuilderFactory, FopEndpointBuilderFactory, FreemarkerEndpointBuilderFactory, FtpEndpointBuilderFactory, FtpsEndpointBuilderFactory, GangliaEndpointBuilderFactory, GeoCoderEndpointBuilderFactory, GitEndpointBuilderFactory, GitHubEndpointBuilderFactory, GlanceEndpointBuilderFactory, GoogleBigQueryEndpointBuilderFactory, GoogleBigQuerySQLEndpointBuilderFactory, GoogleCalendarEndpointBuilderFactory, GoogleCalendarStreamEndpointBuilderFactory, GoogleDriveEndpointBuilderFactory, GoogleMailEndpointBuilderFactory, GoogleMailStreamEndpointBuilderFactory, GooglePubsubEndpointBuilderFactory, GoogleSheetsEndpointBuilderFactory, GoogleSheetsStreamEndpointBuilderFactory, GoraEndpointBuilderFactory, GrapeEndpointBuilderFactory, GridFsEndpointBuilderFactory, GrpcEndpointBuilderFactory, GuavaEventBusEndpointBuilderFactory, HBaseEndpointBuilderFactory, HazelcastAtomicnumberEndpointBuilderFactory, HazelcastInstanceEndpointBuilderFactory, HazelcastListEndpointBuilderFactory, HazelcastMapEndpointBuilderFactory, HazelcastMultimapEndpointBuilderFactory, HazelcastQueueEndpointBuilderFactory, HazelcastReplicatedmapEndpointBuilderFactory, HazelcastRingbufferEndpointBuilderFactory, HazelcastSedaEndpointBuilderFactory, HazelcastSetEndpointBuilderFactory, HazelcastTopicEndpointBuilderFactory, HdfsEndpointBuilderFactory, HipchatEndpointBuilderFactory, HttpEndpointBuilderFactory, IAMEndpointBuilderFactory, IOTAEndpointBuilderFactory, IPFSEndpointBuilderFactory, IgniteCacheEndpointBuilderFactory, IgniteComputeEndpointBuilderFactory, IgniteEventsEndpointBuilderFactory, IgniteIdGenEndpointBuilderFactory, IgniteMessagingEndpointBuilderFactory, IgniteQueueEndpointBuilderFactory, IgniteSetEndpointBuilderFactory, InfinispanEndpointBuilderFactory, InfluxDbEndpointBuilderFactory, IrcEndpointBuilderFactory, IronMQEndpointBuilderFactory, JBPMEndpointBuilderFactory, JCacheEndpointBuilderFactory, JGroupsEndpointBuilderFactory, JGroupsRaftEndpointBuilderFactory, JMXEndpointBuilderFactory, JSR356WebSocketEndpointBuilderFactory, JcloudsEndpointBuilderFactory, JcrEndpointBuilderFactory, JdbcEndpointBuilderFactory, JettyHttpEndpointBuilder9Factory, JingEndpointBuilderFactory, JiraEndpointBuilderFactory, JmsEndpointBuilderFactory, JoltEndpointBuilderFactory, JooqEndpointBuilderFactory, JpaEndpointBuilderFactory, JsonValidatorEndpointBuilderFactory, Jt400EndpointBuilderFactory, KMSEndpointBuilderFactory, KafkaEndpointBuilderFactory, KeystoneEndpointBuilderFactory, KinesisEndpointBuilderFactory, KinesisFirehoseEndpointBuilderFactory, KubernetesConfigMapsEndpointBuilderFactory, KubernetesDeploymentsEndpointBuilderFactory, KubernetesHPAEndpointBuilderFactory, KubernetesJobEndpointBuilderFactory, KubernetesNamespacesEndpointBuilderFactory, KubernetesNodesEndpointBuilderFactory, KubernetesPersistentVolumesClaimsEndpointBuilderFactory, KubernetesPersistentVolumesEndpointBuilderFactory, KubernetesPodsEndpointBuilderFactory, KubernetesReplicationControllersEndpointBuilderFactory, KubernetesResourcesQuotaEndpointBuilderFactory, KubernetesSecretsEndpointBuilderFactory, KubernetesServiceAccountsEndpointBuilderFactory, KubernetesServicesEndpointBuilderFactory, LambdaEndpointBuilderFactory, LanguageEndpointBuilderFactory, LdapEndpointBuilderFactory, LdifEndpointBuilderFactory, LogEndpointBuilderFactory, LuceneEndpointBuilderFactory, LumberjackEndpointBuilderFactory, MQEndpointBuilderFactory, MSKEndpointBuilderFactory, MailEndpointBuilderFactory, MasterEndpointBuilderFactory, MetricsEndpointBuilderFactory, MicrometerEndpointBuilderFactory, MiloClientEndpointBuilderFactory, MiloServerEndpointBuilderFactory, MinaEndpointBuilderFactory, MllpEndpointBuilderFactory, MockEndpointBuilderFactory, MongoDbEndpointBuilderFactory, MsvEndpointBuilderFactory, MustacheEndpointBuilderFactory, MvelEndpointBuilderFactory, MyBatisBeanEndpointBuilderFactory, MyBatisEndpointBuilderFactory, NagiosEndpointBuilderFactory, NatsEndpointBuilderFactory, NetWeaverEndpointBuilderFactory, NettyEndpointBuilderFactory, NettyHttpEndpointBuilderFactory, NeutronEndpointBuilderFactory, NovaEndpointBuilderFactory, NsqEndpointBuilderFactory, Olingo2EndpointBuilderFactory, Olingo4EndpointBuilderFactory, OpenshiftBuildConfigsEndpointBuilderFactory, OpenshiftBuildsEndpointBuilderFactory, OptaPlannerEndpointBuilderFactory, PahoEndpointBuilderFactory, PaxLoggingEndpointBuilderFactory, PdfEndpointBuilderFactory, PgEventEndpointBuilderFactory, PrinterEndpointBuilderFactory, PubNubEndpointBuilderFactory, PulsarEndpointBuilderFactory, QuartzEndpointBuilderFactory, QueueServiceEndpointBuilderFactory, QuickfixjEndpointBuilderFactory, RabbitMQEndpointBuilderFactory, ReactiveStreamsEndpointBuilderFactory, RedisEndpointBuilderFactory, RefEndpointBuilderFactory, RestApiEndpointBuilderFactory, RestEndpointBuilderFactory, RestSwaggerEndpointBuilderFactory, RssEndpointBuilderFactory, S3EndpointBuilderFactory, SWFEndpointBuilderFactory, SagaEndpointBuilderFactory, SalesforceEndpointBuilderFactory, SchedulerEndpointBuilderFactory, SchematronEndpointBuilderFactory, ScpEndpointBuilderFactory, SdbEndpointBuilderFactory, SedaEndpointBuilderFactory, ServerEndpointBuilderFactory, ServiceEndpointBuilderFactory, ServiceNowEndpointBuilderFactory, ServletEndpointBuilderFactory, SesEndpointBuilderFactory, SftpEndpointBuilderFactory, SipEndpointBuilderFactory, Sjms2EndpointBuilderFactory, SjmsBatchEndpointBuilderFactory, SjmsEndpointBuilderFactory, SlackEndpointBuilderFactory, SmppEndpointBuilderFactory, SnmpEndpointBuilderFactory, SnsEndpointBuilderFactory, SolrEndpointBuilderFactory, SoroushBotEndpointBuilderFactory, SparkEndpointBuilderFactory, SplunkEndpointBuilderFactory, SpringBatchEndpointBuilderFactory, SpringIntegrationEndpointBuilderFactory, SpringLdapEndpointBuilderFactory, SpringWebserviceEndpointBuilderFactory, SqlEndpointBuilderFactory, SqlStoredEndpointBuilderFactory, SqsEndpointBuilderFactory, SshEndpointBuilderFactory, StAXEndpointBuilderFactory, StompEndpointBuilderFactory, StreamEndpointBuilderFactory, StringTemplateEndpointBuilderFactory, StubEndpointBuilderFactory, SwiftEndpointBuilderFactory, TelegramEndpointBuilderFactory, ThriftEndpointBuilderFactory, TikaEndpointBuilderFactory, TimerEndpointBuilderFactory, TwilioEndpointBuilderFactory, TwitterDirectMessageEndpointBuilderFactory, TwitterSearchEndpointBuilderFactory, TwitterTimelineEndpointBuilderFactory, UndertowEndpointBuilderFactory, ValidatorEndpointBuilderFactory, VelocityEndpointBuilderFactory, VertxEndpointBuilderFactory, VmEndpointBuilderFactory, WeatherEndpointBuilderFactory, Web3jEndpointBuilderFactory, WebhookEndpointBuilderFactory, WebsocketEndpointBuilderFactory, WordpressEndpointBuilderFactory, WsEndpointBuilderFactory, XChangeEndpointBuilderFactory, XQueryEndpointBuilderFactory, XmlSignatureEndpointBuilderFactory, XmppEndpointBuilderFactory, XsltEndpointBuilderFactory, YammerEndpointBuilderFactory, ZendeskEndpointBuilderFactory, ZooKeeperEndpointBuilderFactory, ZooKeeperMasterEndpointBuilderFactory] @AT@ 1184 @LENGTH@ 12272
---DEL SimpleType@@LinkedInEndpointBuilderFactory @AT@ 8231 @LENGTH@ 30


UPD MethodDeclaration@@public, void, MethodName:configure, WebSecurity web,  @TO@ public, void, MethodName:configure, WebSecurity web, Exception,  @AT@ 13948 @LENGTH@ 43
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:configure, WebSecurity web,  @AT@ 13994 @LENGTH@ 9


UPD IfStatement@@if (pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID)) {  pluginManager.apply(ThorntailArquillianPlugin.class);} @TO@ if (!pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID)) {  pluginManager.apply(ThorntailArquillianPlugin.class);} @AT@ 2177 @LENGTH@ 143
---INS PrefixExpression@@!pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID) @TO@ IfStatement@@if (pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID)) {  pluginManager.apply(ThorntailArquillianPlugin.class);} @AT@ 2181 @LENGTH@ 61
------MOV MethodInvocation@@pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID) @TO@ PrefixExpression@@!pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID) @AT@ 2181 @LENGTH@ 60
------INS Operator@@! @TO@ PrefixExpression@@!pluginManager.hasPlugin(ThorntailArquillianPlugin.PLUGIN_ID) @AT@ 2181 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(passwordGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ MethodInvocation:assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(passwordGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 9211 @LENGTH@ 289
---UPD MethodInvocation@@assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(passwordGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessage("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error") @TO@ assertThatThrownBy(() -> this.tokenResponseClient.getTokenResponse(passwordGrantRequest)).isInstanceOf(OAuth2AuthorizationException.class).hasMessageContaining("[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response") @AT@ 9211 @LENGTH@ 288
------UPD SimpleName@@MethodName:hasMessage:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error"] @TO@ MethodName:hasMessageContaining:["[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response"] @AT@ 9360 @LENGTH@ 139
---------UPD StringLiteral@@"[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response: 500 Server Error" @TO@ "[invalid_token_response] An error occurred while attempting to retrieve the OAuth 2.0 Access Token Response" @AT@ 9371 @LENGTH@ 127


UPD MethodDeclaration@@default, SdbEndpointBuilder, MethodName:sdb, String path,  @TO@ default, SdbEndpointBuilder, MethodName:awsSdb, String path,  @AT@ 10265 @LENGTH@ 350
---UPD SimpleName@@MethodName:sdb @TO@ MethodName:awsSdb @AT@ 10292 @LENGTH@ 3


UPD TypeDeclaration@@[public]ResourceOwnerPasswordAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @TO@ [@Deprecated, public]ResourceOwnerPasswordAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 1096 @LENGTH@ 2121
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordAccessTokenProvider, OAuth2AccessTokenSupport[AccessTokenProvider] @AT@ 1273 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedPaxLoggingEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedPaxLoggingEndpointBuilder, [EndpointConsumerBuilder] @AT@ 2204 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 2211 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]HazelcastQueueConsumerMode,  @TO@ [static]HazelcastQueueConsumerMode,  @AT@ 42670 @LENGTH@ 75
---DEL Modifier@@public @AT@ 42670 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertHealthCheckOutput("camel",State.DOWN,checks.getJsonObject(0),(checksJson) -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @TO@ MethodInvocation:assertHealthCheckOutput("camel",State.DOWN,checks.getJsonObject(0),checksJson -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @AT@ 2841 @LENGTH@ 272
---UPD MethodInvocation@@assertHealthCheckOutput("camel",State.DOWN,checks.getJsonObject(0),(checksJson) -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @TO@ assertHealthCheckOutput("camel",State.DOWN,checks.getJsonObject(0),checksJson -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
) @AT@ 2841 @LENGTH@ 271
------UPD SimpleName@@MethodName:assertHealthCheckOutput:["camel", State.DOWN, checks.getJsonObject(0), (checksJson) -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
] @TO@ MethodName:assertHealthCheckOutput:["camel", State.DOWN, checks.getJsonObject(0), checksJson -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
] @AT@ 2841 @LENGTH@ 271
---------UPD LambdaExpression@@(checksJson) -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
 @TO@ checksJson -> {
  assertEquals(ServiceStatus.Stopped.toString(),checksJson.getString("contextStatus"));
  assertEquals("health-context",checksJson.getString("name"));
}
 @AT@ 2911 @LENGTH@ 200


UPD MethodDeclaration@@default, MyBatisBeanEndpointBuilder, MethodName:myBatisBean, String path,  @TO@ default, MyBatisBeanEndpointBuilder, MethodName:mybatisBean, String path,  @AT@ 4825 @LENGTH@ 411
---UPD SimpleName@@MethodName:myBatisBean @TO@ MethodName:mybatisBean @AT@ 4860 @LENGTH@ 11


UPD TryStatement@@try {  dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$Java8DateTimeFormatter");} catch (LinkageError e) {  dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter");} @TO@ try {  dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter");} catch (LinkageError e) {  dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter");} @AT@ 1545 @LENGTH@ 321
---UPD ExpressionStatement@@Assignment:dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$Java8DateTimeFormatter") @TO@ Assignment:dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter") @AT@ 1554 @LENGTH@ 97
------UPD Assignment@@dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$Java8DateTimeFormatter") @TO@ dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter") @AT@ 1554 @LENGTH@ 96
---------UPD MethodInvocation@@loadDateTimeFormatter("org.bson.json.DateTimeFormatter$Java8DateTimeFormatter") @TO@ loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter") @AT@ 1571 @LENGTH@ 79
------------UPD SimpleName@@MethodName:loadDateTimeFormatter:["org.bson.json.DateTimeFormatter$Java8DateTimeFormatter"] @TO@ MethodName:loadDateTimeFormatter:["org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter"] @AT@ 1571 @LENGTH@ 79
---------------UPD StringLiteral@@"org.bson.json.DateTimeFormatter$Java8DateTimeFormatter" @TO@ "org.springframework.data.mongodb.util.json.DateTimeFormatter$Java8DateTimeFormatter" @AT@ 1593 @LENGTH@ 56
---UPD CatchClause@@catch (LinkageError e) {  dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter");} @TO@ catch (LinkageError e) {  dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter");} @AT@ 1656 @LENGTH@ 210
------UPD ExpressionStatement@@Assignment:dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter") @TO@ Assignment:dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter") @AT@ 1766 @LENGTH@ 96
---------UPD Assignment@@dateTimeHelper=loadDateTimeFormatter("org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter") @TO@ dateTimeHelper=loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter") @AT@ 1766 @LENGTH@ 95
------------UPD MethodInvocation@@loadDateTimeFormatter("org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter") @TO@ loadDateTimeFormatter("org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter") @AT@ 1783 @LENGTH@ 78
---------------UPD SimpleName@@MethodName:loadDateTimeFormatter:["org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter"] @TO@ MethodName:loadDateTimeFormatter:["org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter"] @AT@ 1783 @LENGTH@ 78
------------------UPD StringLiteral@@"org.bson.json.DateTimeFormatter$JaxbDateTimeFormatter" @TO@ "org.springframework.data.mongodb.util.json.DateTimeFormatter$JaxbDateTimeFormatter" @AT@ 1805 @LENGTH@ 55


UPD FieldDeclaration@@protected, List<Task<? extends Serializable>>, [rootTasks] @TO@ protected, List<Task<?>>, [rootTasks] @AT@ 5587 @LENGTH@ 55
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 5597 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 5602 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew) @TO@ MethodInvocation:validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew.toMillis()) @AT@ 10838 @LENGTH@ 113
---UPD MethodInvocation@@validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew) @TO@ validationParams.put(SAML2AssertionValidationParameters.CLOCK_SKEW,this.responseTimeValidationSkew.toMillis()) @AT@ 10838 @LENGTH@ 112
------UPD SimpleName@@MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew] @TO@ MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew.toMillis()] @AT@ 10855 @LENGTH@ 95
---------INS MethodInvocation@@this.responseTimeValidationSkew.toMillis() @TO@ SimpleName@@MethodName:put:[SAML2AssertionValidationParameters.CLOCK_SKEW, this.responseTimeValidationSkew] @AT@ 10915 @LENGTH@ 42
------------INS FieldAccess@@this.responseTimeValidationSkew @TO@ MethodInvocation@@this.responseTimeValidationSkew.toMillis() @AT@ 10915 @LENGTH@ 31
---------------MOV ThisExpression@@this @TO@ FieldAccess@@this.responseTimeValidationSkew @AT@ 10915 @LENGTH@ 4
---------------MOV SimpleName@@responseTimeValidationSkew @TO@ FieldAccess@@this.responseTimeValidationSkew @AT@ 10920 @LENGTH@ 26
------------INS SimpleName@@MethodName:toMillis:[] @TO@ MethodInvocation@@this.responseTimeValidationSkew.toMillis() @AT@ 10947 @LENGTH@ 10
---------DEL FieldAccess@@this.responseTimeValidationSkew @AT@ 10915 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:filter.setLogoutHandlers(null) @TO@ MethodInvocation:filter.setLogoutHandlers((List<LogoutHandler>)null) @AT@ 12592 @LENGTH@ 31
---UPD MethodInvocation@@filter.setLogoutHandlers(null) @TO@ filter.setLogoutHandlers((List<LogoutHandler>)null) @AT@ 12592 @LENGTH@ 30
------UPD SimpleName@@MethodName:setLogoutHandlers:[null] @TO@ MethodName:setLogoutHandlers:[(List<LogoutHandler>)null] @AT@ 12599 @LENGTH@ 23
---------DEL NullLiteral@@null @AT@ 12617 @LENGTH@ 4
---------INS CastExpression@@(List<LogoutHandler>)null @TO@ SimpleName@@MethodName:setLogoutHandlers:[null] @AT@ 12664 @LENGTH@ 26
------------INS ParameterizedType@@List<LogoutHandler> @TO@ CastExpression@@(List<LogoutHandler>)null @AT@ 12665 @LENGTH@ 19
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 12665 @LENGTH@ 4
---------------INS SimpleType@@LogoutHandler @TO@ ParameterizedType@@List<LogoutHandler> @AT@ 12670 @LENGTH@ 13
------------INS NullLiteral@@null @TO@ CastExpression@@(List<LogoutHandler>)null @AT@ 12686 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]AdvancedDdbEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedDdbEndpointBuilder, [EndpointProducerBuilder] @AT@ 8481 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 8488 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:mock.expectedBodiesReceived("test") @AT@ 1359 @LENGTH@ 36
---DEL MethodInvocation@@mock.expectedBodiesReceived("test") @AT@ 1359 @LENGTH@ 35
------DEL SimpleName@@Name:mock @AT@ 1359 @LENGTH@ 4
------DEL SimpleName@@MethodName:expectedBodiesReceived:["test"] @AT@ 1364 @LENGTH@ 30
---------DEL StringLiteral@@"test" @AT@ 1387 @LENGTH@ 6


INS ReturnStatement@@MethodInvocation:resolveFromPath(authenticationManagers::get) @TO@ MethodDeclaration@@AuthenticationManagerResolver<HttpServletRequest>, MethodName:multitenantAuthenticationManager,  @AT@ 2936 @LENGTH@ 52
---MOV MethodInvocation@@Optional.ofNullable(tenantId).map(authenticationManagers::get).orElseThrow(() -> new IllegalArgumentException("unknown tenant")) @TO@ ReturnStatement@@MethodInvocation:resolveFromPath(authenticationManagers::get) @AT@ 2997 @LENGTH@ 140


INS MethodDeclaration@@public, List<ConfigurationOption>, MethodName:getGlobalOptions,  @TO@ TypeDeclaration@@[@Metadata(label="configuration"), @XmlRootElement(name="configuration"), @XmlAccessorType(XmlAccessType.FIELD), public]ConfigurationOptions,  @AT@ 1872 @LENGTH@ 89
---INS Modifier@@public @TO@ MethodDeclaration@@public, List<ConfigurationOption>, MethodName:getGlobalOptions,  @AT@ 1872 @LENGTH@ 6
---INS ParameterizedType@@List<ConfigurationOption> @TO@ MethodDeclaration@@public, List<ConfigurationOption>, MethodName:getGlobalOptions,  @AT@ 1879 @LENGTH@ 25
------INS SimpleType@@List @TO@ ParameterizedType@@List<ConfigurationOption> @AT@ 1879 @LENGTH@ 4
------INS SimpleType@@ConfigurationOption @TO@ ParameterizedType@@List<ConfigurationOption> @AT@ 1884 @LENGTH@ 19
---INS SimpleName@@MethodName:getGlobalOptions @TO@ MethodDeclaration@@public, List<ConfigurationOption>, MethodName:getGlobalOptions,  @AT@ 1905 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:globalOptions @TO@ MethodDeclaration@@public, List<ConfigurationOption>, MethodName:getGlobalOptions,  @AT@ 1934 @LENGTH@ 21
------INS SimpleName@@globalOptions @TO@ ReturnStatement@@SimpleName:globalOptions @AT@ 1941 @LENGTH@ 13


UPD MethodDeclaration@@default, LinkedInEndpointBuilder, MethodName:linkedIn, String path,  @TO@ default, LinkedInEndpointBuilder, MethodName:linkedin, String path,  @AT@ 45877 @LENGTH@ 386
---UPD SimpleName@@MethodName:linkedIn @TO@ MethodName:linkedin @AT@ 45909 @LENGTH@ 8


UPD MethodDeclaration@@void, MethodName:onInvalidSessionDetected, HttpServletRequest request, HttpServletResponse response, IOException,  @TO@ void, MethodName:onInvalidSessionDetected, HttpServletRequest request, HttpServletResponse response, IOException, ServletException,  @AT@ 1041 @LENGTH@ 105
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@void, MethodName:onInvalidSessionDetected, HttpServletRequest request, HttpServletResponse response, IOException,  @AT@ 1186 @LENGTH@ 16


UPD TypeDeclaration@@[public, static]EKSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]EKSEndpointBuilder, [EndpointProducerBuilder] @AT@ 1379 @LENGTH@ 810
---DEL Modifier@@static @AT@ 1386 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]MsvEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]MsvEndpointBuilder, [EndpointProducerBuilder] @AT@ 1389 @LENGTH@ 2474
---DEL Modifier@@static @AT@ 1396 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @TO@ TypeDeclaration@@[public]NimbusJwtDecoderTests,  @AT@ 20651 @LENGTH@ 893
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20651 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20658 @LENGTH@ 4
---INS SimpleName@@MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20663 @LENGTH@ 58
---INS VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20728 @LENGTH@ 59
------INS SimpleType@@RestOperations @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 20728 @LENGTH@ 14
------INS VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @TO@ VariableDeclarationStatement@@RestOperations restOperations=mock(RestOperations.class); @AT@ 20743 @LENGTH@ 43
---------INS SimpleName@@restOperations @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 20743 @LENGTH@ 14
---------INS MethodInvocation@@mock(RestOperations.class) @TO@ VariableDeclarationFragment@@restOperations=mock(RestOperations.class) @AT@ 20760 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[RestOperations.class] @TO@ MethodInvocation@@mock(RestOperations.class) @AT@ 20760 @LENGTH@ 26
---------------INS TypeLiteral@@RestOperations.class @TO@ SimpleName@@MethodName:mock:[RestOperations.class] @AT@ 20765 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:when(restOperations.exchange(any(RequestEntity.class),eq(String.class))).thenReturn(new ResponseEntity<>(JWK_SET,HttpStatus.OK)) @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20790 @LENGTH@ 136
------INS MethodInvocation@@when(restOperations.exchange(any(RequestEntity.class),eq(String.class))).thenReturn(new ResponseEntity<>(JWK_SET,HttpStatus.OK)) @TO@ ExpressionStatement@@MethodInvocation:when(restOperations.exchange(any(RequestEntity.class),eq(String.class))).thenReturn(new ResponseEntity<>(JWK_SET,HttpStatus.OK)) @AT@ 20790 @LENGTH@ 135
---------INS MethodInvocation@@MethodName:when:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @TO@ MethodInvocation@@when(restOperations.exchange(any(RequestEntity.class),eq(String.class))).thenReturn(new ResponseEntity<>(JWK_SET,HttpStatus.OK)) @AT@ 20790 @LENGTH@ 73
------------INS MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @TO@ MethodInvocation@@MethodName:when:[restOperations.exchange(any(RequestEntity.class),eq(String.class))] @AT@ 20795 @LENGTH@ 67
---------------INS SimpleName@@Name:restOperations @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 20795 @LENGTH@ 14
---------------INS SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @TO@ MethodInvocation@@restOperations.exchange(any(RequestEntity.class),eq(String.class)) @AT@ 20810 @LENGTH@ 52
------------------INS MethodInvocation@@any(RequestEntity.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 20819 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:any:[RequestEntity.class] @TO@ MethodInvocation@@any(RequestEntity.class) @AT@ 20819 @LENGTH@ 24
------------------------INS TypeLiteral@@RequestEntity.class @TO@ SimpleName@@MethodName:any:[RequestEntity.class] @AT@ 20823 @LENGTH@ 19
------------------INS MethodInvocation@@eq(String.class) @TO@ SimpleName@@MethodName:exchange:[any(RequestEntity.class), eq(String.class)] @AT@ 20845 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:eq:[String.class] @TO@ MethodInvocation@@eq(String.class) @AT@ 20845 @LENGTH@ 16
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:eq:[String.class] @AT@ 20848 @LENGTH@ 12
---------INS SimpleName@@MethodName:thenReturn:[new ResponseEntity<>(JWK_SET,HttpStatus.OK)] @TO@ MethodInvocation@@when(restOperations.exchange(any(RequestEntity.class),eq(String.class))).thenReturn(new ResponseEntity<>(JWK_SET,HttpStatus.OK)) @AT@ 20869 @LENGTH@ 56
------------INS ClassInstanceCreation@@ResponseEntity<>[JWK_SET, HttpStatus.OK] @TO@ SimpleName@@MethodName:thenReturn:[new ResponseEntity<>(JWK_SET,HttpStatus.OK)] @AT@ 20880 @LENGTH@ 44
---------------INS New@@new @TO@ ClassInstanceCreation@@ResponseEntity<>[JWK_SET, HttpStatus.OK] @AT@ 20880 @LENGTH@ 3
---------------INS ParameterizedType@@ResponseEntity<> @TO@ ClassInstanceCreation@@ResponseEntity<>[JWK_SET, HttpStatus.OK] @AT@ 20884 @LENGTH@ 16
------------------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<> @AT@ 20884 @LENGTH@ 14
---------------INS SimpleName@@JWK_SET @TO@ ClassInstanceCreation@@ResponseEntity<>[JWK_SET, HttpStatus.OK] @AT@ 20901 @LENGTH@ 7
---------------INS QualifiedName@@HttpStatus.OK @TO@ ClassInstanceCreation@@ResponseEntity<>[JWK_SET, HttpStatus.OK] @AT@ 20910 @LENGTH@ 13
------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.OK @AT@ 20910 @LENGTH@ 10
------------------INS SimpleName@@OK @TO@ QualifiedName@@HttpStatus.OK @AT@ 20921 @LENGTH@ 2
---INS VariableDeclarationStatement@@JWTProcessor<SecurityContext> processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor(); @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 20929 @LENGTH@ 149
------INS ParameterizedType@@JWTProcessor<SecurityContext> @TO@ VariableDeclarationStatement@@JWTProcessor<SecurityContext> processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor(); @AT@ 20929 @LENGTH@ 29
---------INS SimpleType@@JWTProcessor @TO@ ParameterizedType@@JWTProcessor<SecurityContext> @AT@ 20929 @LENGTH@ 12
---------INS SimpleType@@SecurityContext @TO@ ParameterizedType@@JWTProcessor<SecurityContext> @AT@ 20942 @LENGTH@ 15
------INS VariableDeclarationFragment@@processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @TO@ VariableDeclarationStatement@@JWTProcessor<SecurityContext> processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor(); @AT@ 20959 @LENGTH@ 118
---------INS SimpleName@@processor @TO@ VariableDeclarationFragment@@processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @AT@ 20959 @LENGTH@ 9
---------INS MethodInvocation@@withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @TO@ VariableDeclarationFragment@@processor=withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @AT@ 20971 @LENGTH@ 106
------------INS MethodInvocation@@MethodName:restOperations:[restOperations] @TO@ MethodInvocation@@withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @AT@ 20971 @LENGTH@ 89
---------------INS SimpleName@@restOperations @TO@ MethodInvocation@@MethodName:restOperations:[restOperations] @AT@ 21045 @LENGTH@ 14
------------INS MethodInvocation@@MethodName:withJwkSetUri:["https://issuer/.well-known/jwks.json"] @TO@ MethodInvocation@@withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @AT@ 20971 @LENGTH@ 53
---------------INS StringLiteral@@"https://issuer/.well-known/jwks.json" @TO@ MethodInvocation@@MethodName:withJwkSetUri:["https://issuer/.well-known/jwks.json"] @AT@ 20985 @LENGTH@ 38
------------INS SimpleName@@MethodName:processor:[] @TO@ MethodInvocation@@withJwkSetUri("https://issuer/.well-known/jwks.json").restOperations(restOperations).processor() @AT@ 21066 @LENGTH@ 11
---INS VariableDeclarationStatement@@NimbusJwtDecoder jwtDecoder=new NimbusJwtDecoder(processor); @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21081 @LENGTH@ 62
------INS SimpleType@@NimbusJwtDecoder @TO@ VariableDeclarationStatement@@NimbusJwtDecoder jwtDecoder=new NimbusJwtDecoder(processor); @AT@ 21081 @LENGTH@ 16
------INS VariableDeclarationFragment@@jwtDecoder=new NimbusJwtDecoder(processor) @TO@ VariableDeclarationStatement@@NimbusJwtDecoder jwtDecoder=new NimbusJwtDecoder(processor); @AT@ 21098 @LENGTH@ 44
---------INS SimpleName@@jwtDecoder @TO@ VariableDeclarationFragment@@jwtDecoder=new NimbusJwtDecoder(processor) @AT@ 21098 @LENGTH@ 10
---------INS ClassInstanceCreation@@NimbusJwtDecoder[processor] @TO@ VariableDeclarationFragment@@jwtDecoder=new NimbusJwtDecoder(processor) @AT@ 21111 @LENGTH@ 31
------------INS New@@new @TO@ ClassInstanceCreation@@NimbusJwtDecoder[processor] @AT@ 21111 @LENGTH@ 3
------------INS SimpleType@@NimbusJwtDecoder @TO@ ClassInstanceCreation@@NimbusJwtDecoder[processor] @AT@ 21115 @LENGTH@ 16
------------INS SimpleName@@processor @TO@ ClassInstanceCreation@@NimbusJwtDecoder[processor] @AT@ 21132 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:jwtDecoder.decode(SIGNED_JWT) @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21146 @LENGTH@ 30
------INS MethodInvocation@@jwtDecoder.decode(SIGNED_JWT) @TO@ ExpressionStatement@@MethodInvocation:jwtDecoder.decode(SIGNED_JWT) @AT@ 21146 @LENGTH@ 29
---------INS SimpleName@@Name:jwtDecoder @TO@ MethodInvocation@@jwtDecoder.decode(SIGNED_JWT) @AT@ 21146 @LENGTH@ 10
---------INS SimpleName@@MethodName:decode:[SIGNED_JWT] @TO@ MethodInvocation@@jwtDecoder.decode(SIGNED_JWT) @AT@ 21157 @LENGTH@ 18
------------INS SimpleName@@SIGNED_JWT @TO@ SimpleName@@MethodName:decode:[SIGNED_JWT] @AT@ 21164 @LENGTH@ 10
---INS VariableDeclarationStatement@@ArgumentCaptor<RequestEntity> requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class); @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21179 @LENGTH@ 97
------INS ParameterizedType@@ArgumentCaptor<RequestEntity> @TO@ VariableDeclarationStatement@@ArgumentCaptor<RequestEntity> requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class); @AT@ 21179 @LENGTH@ 29
---------INS SimpleType@@ArgumentCaptor @TO@ ParameterizedType@@ArgumentCaptor<RequestEntity> @AT@ 21179 @LENGTH@ 14
---------INS SimpleType@@RequestEntity @TO@ ParameterizedType@@ArgumentCaptor<RequestEntity> @AT@ 21194 @LENGTH@ 13
------INS VariableDeclarationFragment@@requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class) @TO@ VariableDeclarationStatement@@ArgumentCaptor<RequestEntity> requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class); @AT@ 21209 @LENGTH@ 66
---------INS SimpleName@@requestEntityCaptor @TO@ VariableDeclarationFragment@@requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class) @AT@ 21209 @LENGTH@ 19
---------INS MethodInvocation@@ArgumentCaptor.forClass(RequestEntity.class) @TO@ VariableDeclarationFragment@@requestEntityCaptor=ArgumentCaptor.forClass(RequestEntity.class) @AT@ 21231 @LENGTH@ 44
------------INS SimpleName@@Name:ArgumentCaptor @TO@ MethodInvocation@@ArgumentCaptor.forClass(RequestEntity.class) @AT@ 21231 @LENGTH@ 14
------------INS SimpleName@@MethodName:forClass:[RequestEntity.class] @TO@ MethodInvocation@@ArgumentCaptor.forClass(RequestEntity.class) @AT@ 21246 @LENGTH@ 29
---------------INS TypeLiteral@@RequestEntity.class @TO@ SimpleName@@MethodName:forClass:[RequestEntity.class] @AT@ 21255 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:verify(restOperations).exchange(requestEntityCaptor.capture(),eq(String.class)) @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21279 @LENGTH@ 81
------INS MethodInvocation@@verify(restOperations).exchange(requestEntityCaptor.capture(),eq(String.class)) @TO@ ExpressionStatement@@MethodInvocation:verify(restOperations).exchange(requestEntityCaptor.capture(),eq(String.class)) @AT@ 21279 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:verify:[restOperations] @TO@ MethodInvocation@@verify(restOperations).exchange(requestEntityCaptor.capture(),eq(String.class)) @AT@ 21279 @LENGTH@ 22
------------INS SimpleName@@restOperations @TO@ MethodInvocation@@MethodName:verify:[restOperations] @AT@ 21286 @LENGTH@ 14
---------INS SimpleName@@MethodName:exchange:[requestEntityCaptor.capture(), eq(String.class)] @TO@ MethodInvocation@@verify(restOperations).exchange(requestEntityCaptor.capture(),eq(String.class)) @AT@ 21302 @LENGTH@ 57
------------INS MethodInvocation@@requestEntityCaptor.capture() @TO@ SimpleName@@MethodName:exchange:[requestEntityCaptor.capture(), eq(String.class)] @AT@ 21311 @LENGTH@ 29
---------------INS SimpleName@@Name:requestEntityCaptor @TO@ MethodInvocation@@requestEntityCaptor.capture() @AT@ 21311 @LENGTH@ 19
---------------INS SimpleName@@MethodName:capture:[] @TO@ MethodInvocation@@requestEntityCaptor.capture() @AT@ 21331 @LENGTH@ 9
------------INS MethodInvocation@@eq(String.class) @TO@ SimpleName@@MethodName:exchange:[requestEntityCaptor.capture(), eq(String.class)] @AT@ 21342 @LENGTH@ 16
---------------INS SimpleName@@MethodName:eq:[String.class] @TO@ MethodInvocation@@eq(String.class) @AT@ 21342 @LENGTH@ 16
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:eq:[String.class] @AT@ 21345 @LENGTH@ 12
---INS VariableDeclarationStatement@@List<MediaType> acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept(); @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21363 @LENGTH@ 87
------INS ParameterizedType@@List<MediaType> @TO@ VariableDeclarationStatement@@List<MediaType> acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept(); @AT@ 21363 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<MediaType> @AT@ 21363 @LENGTH@ 4
---------INS SimpleType@@MediaType @TO@ ParameterizedType@@List<MediaType> @AT@ 21368 @LENGTH@ 9
------INS VariableDeclarationFragment@@acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept() @TO@ VariableDeclarationStatement@@List<MediaType> acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept(); @AT@ 21379 @LENGTH@ 70
---------INS SimpleName@@acceptHeader @TO@ VariableDeclarationFragment@@acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21379 @LENGTH@ 12
---------INS MethodInvocation@@requestEntityCaptor.getValue().getHeaders().getAccept() @TO@ VariableDeclarationFragment@@acceptHeader=requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21394 @LENGTH@ 55
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21394 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21394 @LENGTH@ 30
------------INS SimpleName@@Name:requestEntityCaptor @TO@ MethodInvocation@@requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21394 @LENGTH@ 19
------------INS SimpleName@@MethodName:getAccept:[] @TO@ MethodInvocation@@requestEntityCaptor.getValue().getHeaders().getAccept() @AT@ 21438 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(acceptHeader).contains(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @TO@ MethodDeclaration@@public, void, MethodName:decodeWhenJwkSetRequestedThenAcceptHeaderJsonAndJwkSetJson,  @AT@ 21453 @LENGTH@ 88
------INS MethodInvocation@@assertThat(acceptHeader).contains(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @TO@ ExpressionStatement@@MethodInvocation:assertThat(acceptHeader).contains(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @AT@ 21453 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:assertThat:[acceptHeader] @TO@ MethodInvocation@@assertThat(acceptHeader).contains(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @AT@ 21453 @LENGTH@ 24
------------INS SimpleName@@acceptHeader @TO@ MethodInvocation@@MethodName:assertThat:[acceptHeader] @AT@ 21464 @LENGTH@ 12
---------INS SimpleName@@MethodName:contains:[MediaType.APPLICATION_JSON, APPLICATION_JWK_SET_JSON] @TO@ MethodInvocation@@assertThat(acceptHeader).contains(MediaType.APPLICATION_JSON,APPLICATION_JWK_SET_JSON) @AT@ 21478 @LENGTH@ 62
------------INS QualifiedName@@MediaType.APPLICATION_JSON @TO@ SimpleName@@MethodName:contains:[MediaType.APPLICATION_JSON, APPLICATION_JWK_SET_JSON] @AT@ 21487 @LENGTH@ 26
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 21487 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@MediaType.APPLICATION_JSON @AT@ 21497 @LENGTH@ 16
------------INS SimpleName@@APPLICATION_JWK_SET_JSON @TO@ SimpleName@@MethodName:contains:[MediaType.APPLICATION_JSON, APPLICATION_JWK_SET_JSON] @AT@ 21515 @LENGTH@ 24


UPD TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories, @EnableTransactionManagement, static]Config, AbstractNeo4jConfig @TO@ [@Configuration, @EnableNeo4jRepositories(basePackageClasses=KotlinPerson.class), @EnableTransactionManagement, static]Config, AbstractNeo4jConfig @AT@ 2582 @LENGTH@ 350
---INS NormalAnnotation@@@EnableNeo4jRepositories(basePackageClasses=KotlinPerson.class) @TO@ TypeDeclaration@@[@Configuration, @EnableNeo4jRepositories, @EnableTransactionManagement, static]Config, AbstractNeo4jConfig @AT@ 2598 @LENGTH@ 65
---DEL MarkerAnnotation@@@EnableNeo4jRepositories @AT@ 2598 @LENGTH@ 24


UPD TypeDeclaration@@[public, static]AdvancedHttpEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedHttpEndpointBuilder, [EndpointProducerBuilder] @AT@ 11489 @LENGTH@ 13999
---DEL Modifier@@static @AT@ 11496 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2260 @LENGTH@ 133
---UPD MethodInvocation@@mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2260 @LENGTH@ 132
------UPD SimpleName@@MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)] @TO@ MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)] @AT@ 2271 @LENGTH@ 121
---------UPD MethodInvocation@@Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK) @TO@ Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK) @AT@ 2286 @LENGTH@ 105
------------UPD SimpleName@@MethodName:replaceFirst:["EVN", "EVN" + MllpProtocolConstants.END_OF_BLOCK] @TO@ MethodName:replaceFirst:["PID", "PID" + MllpProtocolConstants.END_OF_BLOCK] @AT@ 2328 @LENGTH@ 63
---------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2341 @LENGTH@ 5
---------------UPD InfixExpression@@"EVN" + MllpProtocolConstants.END_OF_BLOCK @TO@ "PID" + MllpProtocolConstants.END_OF_BLOCK @AT@ 2348 @LENGTH@ 42
------------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2348 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]GoogleDriveApiName,  @TO@ [static]GoogleDriveApiName,  @AT@ 31934 @LENGTH@ 254
---DEL Modifier@@public @AT@ 31934 @LENGTH@ 6


UPD VariableDeclarationStatement@@ContentReference reference=ModelContentReference.fromModelAddress(address,content.require(HASH).asBytes()); @TO@ ContentReference reference=ModelContentReference.fromModelAddress(referenceAddress,content.require(HASH).asBytes()); @AT@ 5105 @LENGTH@ 110
---UPD VariableDeclarationFragment@@reference=ModelContentReference.fromModelAddress(address,content.require(HASH).asBytes()) @TO@ reference=ModelContentReference.fromModelAddress(referenceAddress,content.require(HASH).asBytes()) @AT@ 5122 @LENGTH@ 92
------UPD MethodInvocation@@ModelContentReference.fromModelAddress(address,content.require(HASH).asBytes()) @TO@ ModelContentReference.fromModelAddress(referenceAddress,content.require(HASH).asBytes()) @AT@ 5134 @LENGTH@ 80
---------UPD SimpleName@@MethodName:fromModelAddress:[address, content.require(HASH).asBytes()] @TO@ MethodName:fromModelAddress:[referenceAddress, content.require(HASH).asBytes()] @AT@ 5156 @LENGTH@ 58
------------UPD SimpleName@@address @TO@ referenceAddress @AT@ 5173 @LENGTH@ 7


UPD TypeDeclaration@@[@Configuration, @Order(0), @Import({ClientDetailsServiceConfiguration.class,AuthorizationServerEndpointsConfiguration.class}), public]AuthorizationServerSecurityConfiguration, WebSecurityConfigurerAdapter @TO@ [@Configuration, @Order(0), @Import({ClientDetailsServiceConfiguration.class,AuthorizationServerEndpointsConfiguration.class}), @Deprecated, public]AuthorizationServerSecurityConfiguration, WebSecurityConfigurerAdapter @AT@ 1975 @LENGTH@ 2989
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration, @Order(0), @Import({ClientDetailsServiceConfiguration.class,AuthorizationServerEndpointsConfiguration.class}), public]AuthorizationServerSecurityConfiguration, WebSecurityConfigurerAdapter @AT@ 2280 @LENGTH@ 11


UPD MethodDeclaration@@default, MongoDbEndpointBuilder, MethodName:mongoDb, String path,  @TO@ default, MongoDbEndpointBuilder, MethodName:mongodb, String path,  @AT@ 59213 @LENGTH@ 378
---UPD SimpleName@@MethodName:mongoDb @TO@ MethodName:mongodb @AT@ 59244 @LENGTH@ 7


UPD MethodDeclaration@@default, EKSEndpointBuilder, MethodName:eKS, String path,  @TO@ default, EKSEndpointBuilder, MethodName:awsEks, String path,  @AT@ 4932 @LENGTH@ 350
---UPD SimpleName@@MethodName:eKS @TO@ MethodName:awsEks @AT@ 4959 @LENGTH@ 3


UPD TypeDeclaration@@[public]DefaultOAuth2ClientContext, [OAuth2ClientContext, Serializable] @TO@ [@Deprecated, public]DefaultOAuth2ClientContext, [OAuth2ClientContext, Serializable] @AT@ 481 @LENGTH@ 1216
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2ClientContext, [OAuth2ClientContext, Serializable] @AT@ 658 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1784 @LENGTH@ 3870
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1791 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1796 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<>(); @TO@ List<Task<?>> tasks=new ArrayList<>(); @AT@ 2288 @LENGTH@ 61
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2288 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2293 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]IgniteEventsEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]IgniteEventsEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1508 @LENGTH@ 2634
---DEL Modifier@@static @AT@ 1515 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedNetWeaverEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedNetWeaverEndpointBuilder, [EndpointProducerBuilder] @AT@ 4946 @LENGTH@ 2083
---DEL Modifier@@static @AT@ 4953 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]BlobServiceOperations,  @TO@ [static]BlobServiceOperations,  @AT@ 41252 @LENGTH@ 280
---DEL Modifier@@public @AT@ 41252 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]TextLineDelimiter,  @TO@ [static]TextLineDelimiter,  @AT@ 154183 @LENGTH@ 64
---DEL Modifier@@public @AT@ 154183 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2RequestValidator,  @TO@ [@Deprecated, public]OAuth2RequestValidator,  @AT@ 449 @LENGTH@ 808
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RequestValidator,  @AT@ 626 @LENGTH@ 11


UPD TypeDeclaration@@[@com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2AccessTokenJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2AccessTokenJackson2Deserializer.class), public]OAuth2AccessToken,  @TO@ [@com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2AccessTokenJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2AccessTokenJackson2Deserializer.class), @Deprecated, public]OAuth2AccessToken,  @AT@ 761 @LENGTH@ 2202
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@com.fasterxml.jackson.databind.annotation.JsonSerialize(using=OAuth2AccessTokenJackson2Serializer.class), @com.fasterxml.jackson.databind.annotation.JsonDeserialize(using=OAuth2AccessTokenJackson2Deserializer.class), public]OAuth2AccessToken,  @AT@ 1159 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]QueueServiceOperations,  @TO@ [static]QueueServiceOperations,  @AT@ 24301 @LENGTH@ 167
---DEL Modifier@@public @AT@ 24301 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<? extends Serializable>> rootTasks, SemanticException,  @TO@ public, void, MethodName:postAnalyze, HiveSemanticAnalyzerHookContext context, List<Task<?>> rootTasks, SemanticException,  @AT@ 1170 @LENGTH@ 147
---UPD SingleVariableDeclaration@@List<Task<? extends Serializable>> rootTasks @TO@ List<Task<?>> rootTasks @AT@ 1241 @LENGTH@ 44
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1241 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1246 @LENGTH@ 28


UPD SwitchStatement@@switch (event) {case UP:  log.tracef("serviceStarted: %s",controller);done(controller,null);break;case FAILED:log.tracef(controller.getStartException(),"serviceFailed: %s",controller);done(controller,controller.getStartException());break;case DOWN:{log.tracef("serviceStopping: %s",controller);ModuleSpec moduleSpec=this.moduleSpec;String identifier=moduleSpec.getName();Module module=findLoadedModuleLocal(identifier);if (module != null) unloadModuleLocal(identifier,module);controller.removeListener(this);break;}} @TO@ switch (event) {case UP:  log.tracef("serviceStarted: %s",controller);done(controller,null);break;case FAILED:log.tracef(controller.getStartException(),"serviceFailed: %s",controller);done(controller,controller.getStartException());break;case DOWN:{log.tracef("serviceStopping: %s",controller);ModuleSpec moduleSpec=this.moduleSpec;if (moduleSpec != null) {String identifier=moduleSpec.getName();Module module=findLoadedModuleLocal(identifier);if (module != null) unloadModuleLocal(identifier,module);}controller.removeListener(this);break;}} @AT@ 3364 @LENGTH@ 968
---INS IfStatement@@if (moduleSpec != null) {  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @TO@ SwitchStatement@@switch (event) {case UP:  log.tracef("serviceStarted: %s",controller);done(controller,null);break;case FAILED:log.tracef(controller.getStartException(),"serviceFailed: %s",controller);done(controller,controller.getStartException());break;case DOWN:{log.tracef("serviceStopping: %s",controller);ModuleSpec moduleSpec=this.moduleSpec;String identifier=moduleSpec.getName();Module module=findLoadedModuleLocal(identifier);if (module != null) unloadModuleLocal(identifier,module);controller.removeListener(this);break;}} @AT@ 3943 @LENGTH@ 299
------INS InfixExpression@@moduleSpec != null @TO@ IfStatement@@if (moduleSpec != null) {  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @AT@ 3947 @LENGTH@ 18
---------INS SimpleName@@moduleSpec @TO@ InfixExpression@@moduleSpec != null @AT@ 3947 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@moduleSpec != null @AT@ 3957 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@moduleSpec != null @AT@ 3961 @LENGTH@ 4
------INS Block@@ThenBody:{  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @TO@ IfStatement@@if (moduleSpec != null) {  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @AT@ 3967 @LENGTH@ 275
---------MOV VariableDeclarationStatement@@String identifier=moduleSpec.getName(); @TO@ Block@@ThenBody:{  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @AT@ 3943 @LENGTH@ 41
---------MOV VariableDeclarationStatement@@Module module=findLoadedModuleLocal(identifier); @TO@ Block@@ThenBody:{  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @AT@ 4005 @LENGTH@ 50
---------MOV IfStatement@@if (module != null) unloadModuleLocal(identifier,module); @TO@ Block@@ThenBody:{  String identifier=moduleSpec.getName();  Module module=findLoadedModuleLocal(identifier);  if (module != null)   unloadModuleLocal(identifier,module);} @AT@ 4076 @LENGTH@ 81


UPD TypeDeclaration@@[public, static]AdvancedXChangeEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedXChangeEndpointBuilder, [EndpointProducerBuilder] @AT@ 4903 @LENGTH@ 2069
---DEL Modifier@@static @AT@ 4910 @LENGTH@ 6


UPD TypeDeclaration@@[public, abstract]ProviderBeanDefinitionParser, AbstractBeanDefinitionParser @TO@ [@Deprecated, public, abstract]ProviderBeanDefinitionParser, AbstractBeanDefinitionParser @AT@ 1264 @LENGTH@ 1124
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]ProviderBeanDefinitionParser, AbstractBeanDefinitionParser @AT@ 1442 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Optional.of(this.gatewayReceiverConfigurer).ifPresent(it -> it.configure(getName(),this)) @TO@ MethodInvocation:Optional.ofNullable(this.gatewayReceiverConfigurer).ifPresent(it -> it.configure(getName(),this)) @AT@ 3326 @LENGTH@ 95
---UPD MethodInvocation@@Optional.of(this.gatewayReceiverConfigurer).ifPresent(it -> it.configure(getName(),this)) @TO@ Optional.ofNullable(this.gatewayReceiverConfigurer).ifPresent(it -> it.configure(getName(),this)) @AT@ 3326 @LENGTH@ 94
------UPD MethodInvocation@@MethodName:of:[this.gatewayReceiverConfigurer] @TO@ MethodName:ofNullable:[this.gatewayReceiverConfigurer] @AT@ 3326 @LENGTH@ 43


UPD MethodDeclaration@@List<Task<? extends Serializable>>, MethodName:getTasks, HiveConf conf, Object ctx,  @TO@ List<Task<?>>, MethodName:getTasks, HiveConf conf, Object ctx,  @AT@ 1417 @LENGTH@ 36
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1382 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1387 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]NovaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]NovaEndpointBuilder, [EndpointProducerBuilder] @AT@ 1436 @LENGTH@ 3216
---DEL Modifier@@static @AT@ 1443 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2ProtectedResourceDetails,  @TO@ [@Deprecated, public]OAuth2ProtectedResourceDetails,  @AT@ 260 @LENGTH@ 2445
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2ProtectedResourceDetails,  @AT@ 437 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @TO@ TypeDeclaration@@[public]CreateOperationTest, ZooKeeperTestSupport @AT@ 3264 @LENGTH@ 556
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3264 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3271 @LENGTH@ 4
---INS SimpleName@@MethodName:createNodeWithSpecificAccess @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3276 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3314 @LENGTH@ 9
---INS VariableDeclarationStatement@@CreateOperation create=new CreateOperation(connection,"/four"); @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3334 @LENGTH@ 66
------INS SimpleType@@CreateOperation @TO@ VariableDeclarationStatement@@CreateOperation create=new CreateOperation(connection,"/four"); @AT@ 3334 @LENGTH@ 15
------INS VariableDeclarationFragment@@create=new CreateOperation(connection,"/four") @TO@ VariableDeclarationStatement@@CreateOperation create=new CreateOperation(connection,"/four"); @AT@ 3350 @LENGTH@ 49
---------INS SimpleName@@create @TO@ VariableDeclarationFragment@@create=new CreateOperation(connection,"/four") @AT@ 3350 @LENGTH@ 6
---------INS ClassInstanceCreation@@CreateOperation[connection, "/four"] @TO@ VariableDeclarationFragment@@create=new CreateOperation(connection,"/four") @AT@ 3359 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@CreateOperation[connection, "/four"] @AT@ 3359 @LENGTH@ 3
------------INS SimpleType@@CreateOperation @TO@ ClassInstanceCreation@@CreateOperation[connection, "/four"] @AT@ 3363 @LENGTH@ 15
------------INS SimpleName@@connection @TO@ ClassInstanceCreation@@CreateOperation[connection, "/four"] @AT@ 3379 @LENGTH@ 10
------------INS StringLiteral@@"/four" @TO@ ClassInstanceCreation@@CreateOperation[connection, "/four"] @AT@ 3391 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:create.setData(testPayload.getBytes()) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3409 @LENGTH@ 39
------INS MethodInvocation@@create.setData(testPayload.getBytes()) @TO@ ExpressionStatement@@MethodInvocation:create.setData(testPayload.getBytes()) @AT@ 3409 @LENGTH@ 38
---------INS SimpleName@@Name:create @TO@ MethodInvocation@@create.setData(testPayload.getBytes()) @AT@ 3409 @LENGTH@ 6
---------INS SimpleName@@MethodName:setData:[testPayload.getBytes()] @TO@ MethodInvocation@@create.setData(testPayload.getBytes()) @AT@ 3416 @LENGTH@ 31
------------INS MethodInvocation@@testPayload.getBytes() @TO@ SimpleName@@MethodName:setData:[testPayload.getBytes()] @AT@ 3424 @LENGTH@ 22
---------------INS SimpleName@@Name:testPayload @TO@ MethodInvocation@@testPayload.getBytes() @AT@ 3424 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getBytes:[] @TO@ MethodInvocation@@testPayload.getBytes() @AT@ 3436 @LENGTH@ 10
---INS VariableDeclarationStatement@@List<ACL> perms=new ArrayList<>(); @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3457 @LENGTH@ 36
------INS ParameterizedType@@List<ACL> @TO@ VariableDeclarationStatement@@List<ACL> perms=new ArrayList<>(); @AT@ 3457 @LENGTH@ 9
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ACL> @AT@ 3457 @LENGTH@ 4
---------INS SimpleType@@ACL @TO@ ParameterizedType@@List<ACL> @AT@ 3462 @LENGTH@ 3
------INS VariableDeclarationFragment@@perms=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<ACL> perms=new ArrayList<>(); @AT@ 3467 @LENGTH@ 25
---------INS SimpleName@@perms @TO@ VariableDeclarationFragment@@perms=new ArrayList<>() @AT@ 3467 @LENGTH@ 5
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@perms=new ArrayList<>() @AT@ 3475 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 3475 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 3479 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 3479 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:perms.add(new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3502 @LENGTH@ 55
------INS MethodInvocation@@perms.add(new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)) @TO@ ExpressionStatement@@MethodInvocation:perms.add(new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)) @AT@ 3502 @LENGTH@ 54
---------INS SimpleName@@Name:perms @TO@ MethodInvocation@@perms.add(new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)) @AT@ 3502 @LENGTH@ 5
---------INS SimpleName@@MethodName:add:[new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)] @TO@ MethodInvocation@@perms.add(new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)) @AT@ 3508 @LENGTH@ 48
------------INS ClassInstanceCreation@@ACL[Perms.CREATE, Ids.ANYONE_ID_UNSAFE] @TO@ SimpleName@@MethodName:add:[new ACL(Perms.CREATE,Ids.ANYONE_ID_UNSAFE)] @AT@ 3512 @LENGTH@ 43
---------------INS New@@new @TO@ ClassInstanceCreation@@ACL[Perms.CREATE, Ids.ANYONE_ID_UNSAFE] @AT@ 3512 @LENGTH@ 3
---------------INS SimpleType@@ACL @TO@ ClassInstanceCreation@@ACL[Perms.CREATE, Ids.ANYONE_ID_UNSAFE] @AT@ 3516 @LENGTH@ 3
---------------INS QualifiedName@@Perms.CREATE @TO@ ClassInstanceCreation@@ACL[Perms.CREATE, Ids.ANYONE_ID_UNSAFE] @AT@ 3520 @LENGTH@ 12
------------------INS SimpleName@@Perms @TO@ QualifiedName@@Perms.CREATE @AT@ 3520 @LENGTH@ 5
------------------INS SimpleName@@CREATE @TO@ QualifiedName@@Perms.CREATE @AT@ 3526 @LENGTH@ 6
---------------INS QualifiedName@@Ids.ANYONE_ID_UNSAFE @TO@ ClassInstanceCreation@@ACL[Perms.CREATE, Ids.ANYONE_ID_UNSAFE] @AT@ 3534 @LENGTH@ 20
------------------INS SimpleName@@Ids @TO@ QualifiedName@@Ids.ANYONE_ID_UNSAFE @AT@ 3534 @LENGTH@ 3
------------------INS SimpleName@@ANYONE_ID_UNSAFE @TO@ QualifiedName@@Ids.ANYONE_ID_UNSAFE @AT@ 3538 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:perms.add(new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3566 @LENGTH@ 53
------INS MethodInvocation@@perms.add(new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)) @TO@ ExpressionStatement@@MethodInvocation:perms.add(new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)) @AT@ 3566 @LENGTH@ 52
---------INS SimpleName@@Name:perms @TO@ MethodInvocation@@perms.add(new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)) @AT@ 3566 @LENGTH@ 5
---------INS SimpleName@@MethodName:add:[new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)] @TO@ MethodInvocation@@perms.add(new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)) @AT@ 3572 @LENGTH@ 46
------------INS ClassInstanceCreation@@ACL[Perms.READ, Ids.ANYONE_ID_UNSAFE] @TO@ SimpleName@@MethodName:add:[new ACL(Perms.READ,Ids.ANYONE_ID_UNSAFE)] @AT@ 3576 @LENGTH@ 41
---------------INS New@@new @TO@ ClassInstanceCreation@@ACL[Perms.READ, Ids.ANYONE_ID_UNSAFE] @AT@ 3576 @LENGTH@ 3
---------------INS SimpleType@@ACL @TO@ ClassInstanceCreation@@ACL[Perms.READ, Ids.ANYONE_ID_UNSAFE] @AT@ 3580 @LENGTH@ 3
---------------INS QualifiedName@@Perms.READ @TO@ ClassInstanceCreation@@ACL[Perms.READ, Ids.ANYONE_ID_UNSAFE] @AT@ 3584 @LENGTH@ 10
------------------INS SimpleName@@Perms @TO@ QualifiedName@@Perms.READ @AT@ 3584 @LENGTH@ 5
------------------INS SimpleName@@READ @TO@ QualifiedName@@Perms.READ @AT@ 3590 @LENGTH@ 4
---------------INS QualifiedName@@Ids.ANYONE_ID_UNSAFE @TO@ ClassInstanceCreation@@ACL[Perms.READ, Ids.ANYONE_ID_UNSAFE] @AT@ 3596 @LENGTH@ 20
------------------INS SimpleName@@Ids @TO@ QualifiedName@@Ids.ANYONE_ID_UNSAFE @AT@ 3596 @LENGTH@ 3
------------------INS SimpleName@@ANYONE_ID_UNSAFE @TO@ QualifiedName@@Ids.ANYONE_ID_UNSAFE @AT@ 3600 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:create.setPermissions(perms) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3628 @LENGTH@ 29
------INS MethodInvocation@@create.setPermissions(perms) @TO@ ExpressionStatement@@MethodInvocation:create.setPermissions(perms) @AT@ 3628 @LENGTH@ 28
---------INS SimpleName@@Name:create @TO@ MethodInvocation@@create.setPermissions(perms) @AT@ 3628 @LENGTH@ 6
---------INS SimpleName@@MethodName:setPermissions:[perms] @TO@ MethodInvocation@@create.setPermissions(perms) @AT@ 3635 @LENGTH@ 21
------------INS SimpleName@@perms @TO@ SimpleName@@MethodName:setPermissions:[perms] @AT@ 3650 @LENGTH@ 5
---INS VariableDeclarationStatement@@OperationResult<String> result=create.get(); @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3667 @LENGTH@ 46
------INS ParameterizedType@@OperationResult<String> @TO@ VariableDeclarationStatement@@OperationResult<String> result=create.get(); @AT@ 3667 @LENGTH@ 23
---------INS SimpleType@@OperationResult @TO@ ParameterizedType@@OperationResult<String> @AT@ 3667 @LENGTH@ 15
---------INS SimpleType@@String @TO@ ParameterizedType@@OperationResult<String> @AT@ 3683 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=create.get() @TO@ VariableDeclarationStatement@@OperationResult<String> result=create.get(); @AT@ 3691 @LENGTH@ 21
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=create.get() @AT@ 3691 @LENGTH@ 6
---------INS MethodInvocation@@create.get() @TO@ VariableDeclarationFragment@@result=create.get() @AT@ 3700 @LENGTH@ 12
------------INS SimpleName@@Name:create @TO@ MethodInvocation@@create.get() @AT@ 3700 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@create.get() @AT@ 3707 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals("/four",result.getResult()) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3722 @LENGTH@ 42
------INS MethodInvocation@@assertEquals("/four",result.getResult()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("/four",result.getResult()) @AT@ 3722 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertEquals:["/four", result.getResult()] @TO@ MethodInvocation@@assertEquals("/four",result.getResult()) @AT@ 3722 @LENGTH@ 41
------------INS StringLiteral@@"/four" @TO@ SimpleName@@MethodName:assertEquals:["/four", result.getResult()] @AT@ 3735 @LENGTH@ 7
------------INS MethodInvocation@@result.getResult() @TO@ SimpleName@@MethodName:assertEquals:["/four", result.getResult()] @AT@ 3744 @LENGTH@ 18
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getResult() @AT@ 3744 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getResult:[] @TO@ MethodInvocation@@result.getResult() @AT@ 3751 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:verifyAccessControlList("/four",perms) @TO@ MethodDeclaration@@public, void, MethodName:createNodeWithSpecificAccess, Exception,  @AT@ 3774 @LENGTH@ 40
------INS MethodInvocation@@verifyAccessControlList("/four",perms) @TO@ ExpressionStatement@@MethodInvocation:verifyAccessControlList("/four",perms) @AT@ 3774 @LENGTH@ 39
---------INS SimpleName@@MethodName:verifyAccessControlList:["/four", perms] @TO@ MethodInvocation@@verifyAccessControlList("/four",perms) @AT@ 3774 @LENGTH@ 39
------------INS StringLiteral@@"/four" @TO@ SimpleName@@MethodName:verifyAccessControlList:["/four", perms] @AT@ 3798 @LENGTH@ 7
------------INS SimpleName@@perms @TO@ SimpleName@@MethodName:verifyAccessControlList:["/four", perms] @AT@ 3807 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:userAttributes.map(attrs -> {
  GrantedAuthority authority=new OAuth2UserAuthority(attrs);
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  return new DefaultOAuth2User(authorities,attrs,userNameAttributeName);
}
).onErrorMap(UnknownHostException.class,t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)).onErrorMap(t -> !(t instanceof AuthenticationServiceException),t -> {
  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred reading the UserInfo Success response: " + t.getMessage(),null);
  return new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),t);
}
) @TO@ MethodInvocation:userAttributes.map(attrs -> {
  GrantedAuthority authority=new OAuth2UserAuthority(attrs);
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  return new DefaultOAuth2User(authorities,attrs,userNameAttributeName);
}
).onErrorMap(e -> e instanceof IOException,t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)).onErrorMap(t -> !(t instanceof AuthenticationServiceException),t -> {
  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred reading the UserInfo Success response: " + t.getMessage(),null);
  return new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),t);
}
) @AT@ 6154 @LENGTH@ 935
---UPD MethodInvocation@@userAttributes.map(attrs -> {
  GrantedAuthority authority=new OAuth2UserAuthority(attrs);
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  return new DefaultOAuth2User(authorities,attrs,userNameAttributeName);
}
).onErrorMap(UnknownHostException.class,t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)).onErrorMap(t -> !(t instanceof AuthenticationServiceException),t -> {
  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred reading the UserInfo Success response: " + t.getMessage(),null);
  return new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),t);
}
) @TO@ userAttributes.map(attrs -> {
  GrantedAuthority authority=new OAuth2UserAuthority(attrs);
  Set<GrantedAuthority> authorities=new HashSet<>();
  authorities.add(authority);
  OAuth2AccessToken token=userRequest.getAccessToken();
  for (  String scope : token.getScopes()) {
    authorities.add(new SimpleGrantedAuthority("SCOPE_" + scope));
  }
  return new DefaultOAuth2User(authorities,attrs,userNameAttributeName);
}
).onErrorMap(e -> e instanceof IOException,t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)).onErrorMap(t -> !(t instanceof AuthenticationServiceException),t -> {
  OAuth2Error oauth2Error=new OAuth2Error(INVALID_USER_INFO_RESPONSE_ERROR_CODE,"An error occurred reading the UserInfo Success response: " + t.getMessage(),null);
  return new OAuth2AuthenticationException(oauth2Error,oauth2Error.toString(),t);
}
) @AT@ 6161 @LENGTH@ 927
------UPD MethodInvocation@@MethodName:onErrorMap:[UnknownHostException.class, t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)] @TO@ MethodName:onErrorMap:[e -> e instanceof IOException, t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)] @AT@ 6161 @LENGTH@ 589
---------INS LambdaExpression@@e -> e instanceof IOException @TO@ MethodInvocation@@MethodName:onErrorMap:[UnknownHostException.class, t -> new AuthenticationServiceException("Unable to access the userInfoEndpoint " + userInfoUri,t)] @AT@ 6613 @LENGTH@ 29
------------INS VariableDeclarationFragment@@e @TO@ LambdaExpression@@e -> e instanceof IOException @AT@ 6613 @LENGTH@ 1
---------------INS SimpleName@@e @TO@ VariableDeclarationFragment@@e @AT@ 6613 @LENGTH@ 1
------------INS InstanceofExpression@@e instanceof IOException @TO@ LambdaExpression@@e -> e instanceof IOException @AT@ 6618 @LENGTH@ 24
---------------INS SimpleName@@e @TO@ InstanceofExpression@@e instanceof IOException @AT@ 6618 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@e instanceof IOException @AT@ 6620 @LENGTH@ 10
---------------INS SimpleType@@IOException @TO@ InstanceofExpression@@e instanceof IOException @AT@ 6631 @LENGTH@ 11
---------DEL TypeLiteral@@UnknownHostException.class @AT@ 6623 @LENGTH@ 26


INS MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @TO@ TypeDeclaration@@[@Nested]MultipleMatches,  @AT@ 14458 @LENGTH@ 485
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14453 @LENGTH@ 4
---INS SimpleName@@MethodName:usingSameWithStepWithoutReassignThenUpdate @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14458 @LENGTH@ 42
---INS VariableDeclarationStatement@@StatementBuilder.OngoingReadingAndWith firstStep=match(bikeNode).with(bikeNode); @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14508 @LENGTH@ 82
------INS SimpleType@@StatementBuilder.OngoingReadingAndWith @TO@ VariableDeclarationStatement@@StatementBuilder.OngoingReadingAndWith firstStep=match(bikeNode).with(bikeNode); @AT@ 14508 @LENGTH@ 38
------INS VariableDeclarationFragment@@firstStep=match(bikeNode).with(bikeNode) @TO@ VariableDeclarationStatement@@StatementBuilder.OngoingReadingAndWith firstStep=match(bikeNode).with(bikeNode); @AT@ 14547 @LENGTH@ 42
---------INS SimpleName@@firstStep @TO@ VariableDeclarationFragment@@firstStep=match(bikeNode).with(bikeNode) @AT@ 14547 @LENGTH@ 9
---------INS MethodInvocation@@match(bikeNode).with(bikeNode) @TO@ VariableDeclarationFragment@@firstStep=match(bikeNode).with(bikeNode) @AT@ 14559 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:match:[bikeNode] @TO@ MethodInvocation@@match(bikeNode).with(bikeNode) @AT@ 14559 @LENGTH@ 15
---------------INS SimpleName@@bikeNode @TO@ MethodInvocation@@MethodName:match:[bikeNode] @AT@ 14565 @LENGTH@ 8
------------INS SimpleName@@MethodName:with:[bikeNode] @TO@ MethodInvocation@@match(bikeNode).with(bikeNode) @AT@ 14575 @LENGTH@ 14
---------------INS SimpleName@@bikeNode @TO@ SimpleName@@MethodName:with:[bikeNode] @AT@ 14580 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:firstStep.optionalMatch(userNode) @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14595 @LENGTH@ 34
------INS MethodInvocation@@firstStep.optionalMatch(userNode) @TO@ ExpressionStatement@@MethodInvocation:firstStep.optionalMatch(userNode) @AT@ 14595 @LENGTH@ 33
---------INS SimpleName@@Name:firstStep @TO@ MethodInvocation@@firstStep.optionalMatch(userNode) @AT@ 14595 @LENGTH@ 9
---------INS SimpleName@@MethodName:optionalMatch:[userNode] @TO@ MethodInvocation@@firstStep.optionalMatch(userNode) @AT@ 14605 @LENGTH@ 23
------------INS SimpleName@@userNode @TO@ SimpleName@@MethodName:optionalMatch:[userNode] @AT@ 14619 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:firstStep.optionalMatch(Cypher.node("Trip")) @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14633 @LENGTH@ 45
------INS MethodInvocation@@firstStep.optionalMatch(Cypher.node("Trip")) @TO@ ExpressionStatement@@MethodInvocation:firstStep.optionalMatch(Cypher.node("Trip")) @AT@ 14633 @LENGTH@ 44
---------INS SimpleName@@Name:firstStep @TO@ MethodInvocation@@firstStep.optionalMatch(Cypher.node("Trip")) @AT@ 14633 @LENGTH@ 9
---------INS SimpleName@@MethodName:optionalMatch:[Cypher.node("Trip")] @TO@ MethodInvocation@@firstStep.optionalMatch(Cypher.node("Trip")) @AT@ 14643 @LENGTH@ 34
------------INS MethodInvocation@@Cypher.node("Trip") @TO@ SimpleName@@MethodName:optionalMatch:[Cypher.node("Trip")] @AT@ 14657 @LENGTH@ 19
---------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.node("Trip") @AT@ 14657 @LENGTH@ 6
---------------INS SimpleName@@MethodName:node:["Trip"] @TO@ MethodInvocation@@Cypher.node("Trip") @AT@ 14664 @LENGTH@ 12
------------------INS StringLiteral@@"Trip" @TO@ SimpleName@@MethodName:node:["Trip"] @AT@ 14669 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:firstStep.delete("u") @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14682 @LENGTH@ 22
------INS MethodInvocation@@firstStep.delete("u") @TO@ ExpressionStatement@@MethodInvocation:firstStep.delete("u") @AT@ 14682 @LENGTH@ 21
---------INS SimpleName@@Name:firstStep @TO@ MethodInvocation@@firstStep.delete("u") @AT@ 14682 @LENGTH@ 9
---------INS SimpleName@@MethodName:delete:["u"] @TO@ MethodInvocation@@firstStep.delete("u") @AT@ 14692 @LENGTH@ 11
------------INS StringLiteral@@"u" @TO@ SimpleName@@MethodName:delete:["u"] @AT@ 14699 @LENGTH@ 3
---INS VariableDeclarationStatement@@Statement statement=firstStep.returning(Cypher.asterisk()).build(); @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14709 @LENGTH@ 69
------INS SimpleType@@Statement @TO@ VariableDeclarationStatement@@Statement statement=firstStep.returning(Cypher.asterisk()).build(); @AT@ 14709 @LENGTH@ 9
------INS VariableDeclarationFragment@@statement=firstStep.returning(Cypher.asterisk()).build() @TO@ VariableDeclarationStatement@@Statement statement=firstStep.returning(Cypher.asterisk()).build(); @AT@ 14719 @LENGTH@ 58
---------INS SimpleName@@statement @TO@ VariableDeclarationFragment@@statement=firstStep.returning(Cypher.asterisk()).build() @AT@ 14719 @LENGTH@ 9
---------INS MethodInvocation@@firstStep.returning(Cypher.asterisk()).build() @TO@ VariableDeclarationFragment@@statement=firstStep.returning(Cypher.asterisk()).build() @AT@ 14731 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:returning:[Cypher.asterisk()] @TO@ MethodInvocation@@firstStep.returning(Cypher.asterisk()).build() @AT@ 14731 @LENGTH@ 38
---------------INS MethodInvocation@@Cypher.asterisk() @TO@ MethodInvocation@@MethodName:returning:[Cypher.asterisk()] @AT@ 14751 @LENGTH@ 17
------------------INS SimpleName@@Name:Cypher @TO@ MethodInvocation@@Cypher.asterisk() @AT@ 14751 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asterisk:[] @TO@ MethodInvocation@@Cypher.asterisk() @AT@ 14758 @LENGTH@ 10
------------INS SimpleName@@Name:firstStep @TO@ MethodInvocation@@firstStep.returning(Cypher.asterisk()).build() @AT@ 14731 @LENGTH@ 9
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@firstStep.returning(Cypher.asterisk()).build() @AT@ 14770 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *") @TO@ MethodDeclaration@@void, MethodName:usingSameWithStepWithoutReassignThenUpdate,  @AT@ 14783 @LENGTH@ 156
------INS MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *") @AT@ 14783 @LENGTH@ 155
---------INS MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *") @AT@ 14783 @LENGTH@ 44
------------INS MethodInvocation@@cypherRenderer.render(statement) @TO@ MethodInvocation@@MethodName:assertThat:[cypherRenderer.render(statement)] @AT@ 14794 @LENGTH@ 32
---------------INS SimpleName@@Name:cypherRenderer @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 14794 @LENGTH@ 14
---------------INS SimpleName@@MethodName:render:[statement] @TO@ MethodInvocation@@cypherRenderer.render(statement) @AT@ 14809 @LENGTH@ 17
------------------INS SimpleName@@statement @TO@ SimpleName@@MethodName:render:[statement] @AT@ 14816 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *"] @TO@ MethodInvocation@@assertThat(cypherRenderer.render(statement)).isEqualTo("MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *") @AT@ 14833 @LENGTH@ 105
------------INS StringLiteral@@"MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *" @TO@ SimpleName@@MethodName:isEqualTo:["MATCH (b:`Bike`) WITH b OPTIONAL MATCH (u:`User`) OPTIONAL MATCH (:`Trip`) DELETE u RETURN *"] @AT@ 14843 @LENGTH@ 94


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthException, AuthenticationException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]OAuthException, AuthenticationException @AT@ 790 @LENGTH@ 257
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]OAuthException, AuthenticationException @AT@ 1038 @LENGTH@ 11


UPD TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsUserDetailsTests,  @TO@ [@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), @PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}), public]SecurityMockMvcRequestPostProcessorsUserDetailsTests,  @AT@ 1976 @LENGTH@ 1114
---INS SingleMemberAnnotation@@@PowerMockIgnore({"javax.security.auth.*","org.w3c.dom.*","org.xml.sax.*","org.apache.xerces.*","javax.xml.parsers.*"}) @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareOnlyThisForTest(WebTestUtils.class), public]SecurityMockMvcRequestPostProcessorsUserDetailsTests,  @AT@ 2119 @LENGTH@ 123


UPD TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException ex) {  if (logger.isDebugEnabled()) {    logger.debug("Connection error, deferring directReplyTo detection");  }  throw ex;}catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @TO@ try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37432 @LENGTH@ 582
---DEL CatchClause@@catch (AmqpConnectException ex) {  if (logger.isDebugEnabled()) {    logger.debug("Connection error, deferring directReplyTo detection");  }  throw ex;} @AT@ 37593 @LENGTH@ 167
------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Connection error, deferring directReplyTo detection");} @AT@ 37631 @LENGTH@ 110
---------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 37635 @LENGTH@ 23
------------DEL SimpleName@@Name:logger @AT@ 37635 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 37642 @LENGTH@ 16
---------DEL Block@@ThenBody:{  logger.debug("Connection error, deferring directReplyTo detection");} @AT@ 37660 @LENGTH@ 81
------DEL ThrowStatement@@SimpleName:ex @AT@ 37746 @LENGTH@ 9
---------DEL SimpleName@@ex @AT@ 37752 @LENGTH@ 2
---INS CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @TO@ TryStatement@@try {  return execute(channel -> {    channel.queueDeclarePassive(Address.AMQ_RABBITMQ_REPLY_TO);    return true;  });} catch (AmqpConnectException ex) {  if (logger.isDebugEnabled()) {    logger.debug("Connection error, deferring directReplyTo detection");  }  throw ex;}catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @AT@ 37694 @LENGTH@ 746
------MOV SingleVariableDeclaration@@AmqpConnectException ex @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37600 @LENGTH@ 23
---------DEL SimpleType@@AmqpConnectException @AT@ 37600 @LENGTH@ 20
---------INS UnionType@@AmqpConnectException|AmqpIOException @TO@ SingleVariableDeclaration@@AmqpConnectException ex @AT@ 37701 @LENGTH@ 38
------------INS SimpleType@@AmqpConnectException @TO@ UnionType@@AmqpConnectException|AmqpIOException @AT@ 37701 @LENGTH@ 20
------------INS SimpleType@@AmqpIOException @TO@ UnionType@@AmqpConnectException|AmqpIOException @AT@ 37724 @LENGTH@ 15
------INS VariableDeclarationStatement@@Throwable cause=ex; @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37750 @LENGTH@ 21
---------INS SimpleType@@Throwable @TO@ VariableDeclarationStatement@@Throwable cause=ex; @AT@ 37750 @LENGTH@ 9
---------INS VariableDeclarationFragment@@cause=ex @TO@ VariableDeclarationStatement@@Throwable cause=ex; @AT@ 37760 @LENGTH@ 10
------------INS SimpleName@@cause @TO@ VariableDeclarationFragment@@cause=ex @AT@ 37760 @LENGTH@ 5
------------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@cause=ex @AT@ 37768 @LENGTH@ 2
------INS WhileStatement@@while (cause != null && !(cause instanceof ShutdownSignalException)) {  cause=cause.getCause();} @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37776 @LENGTH@ 107
---------INS InfixExpression@@cause != null && !(cause instanceof ShutdownSignalException) @TO@ WhileStatement@@while (cause != null && !(cause instanceof ShutdownSignalException)) {  cause=cause.getCause();} @AT@ 37783 @LENGTH@ 60
------------INS InfixExpression@@cause != null @TO@ InfixExpression@@cause != null && !(cause instanceof ShutdownSignalException) @AT@ 37783 @LENGTH@ 13
---------------INS SimpleName@@cause @TO@ InfixExpression@@cause != null @AT@ 37783 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@cause != null @AT@ 37788 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@cause != null @AT@ 37792 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@cause != null && !(cause instanceof ShutdownSignalException) @AT@ 37796 @LENGTH@ 2
------------INS PrefixExpression@@!(cause instanceof ShutdownSignalException) @TO@ InfixExpression@@cause != null && !(cause instanceof ShutdownSignalException) @AT@ 37800 @LENGTH@ 43
---------------INS Operator@@! @TO@ PrefixExpression@@!(cause instanceof ShutdownSignalException) @AT@ 37800 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(cause instanceof ShutdownSignalException) @TO@ PrefixExpression@@!(cause instanceof ShutdownSignalException) @AT@ 37801 @LENGTH@ 42
------------------INS InstanceofExpression@@cause instanceof ShutdownSignalException @TO@ ParenthesizedExpression@@(cause instanceof ShutdownSignalException) @AT@ 37802 @LENGTH@ 40
---------------------INS SimpleName@@cause @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37802 @LENGTH@ 5
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37808 @LENGTH@ 10
---------------------INS SimpleType@@ShutdownSignalException @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37819 @LENGTH@ 23
---------INS Block@@WhileBody:{  cause=cause.getCause();} @TO@ WhileStatement@@while (cause != null && !(cause instanceof ShutdownSignalException)) {  cause=cause.getCause();} @AT@ 37845 @LENGTH@ 38
------------MOV ExpressionStatement@@MethodInvocation:logger.debug("Connection error, deferring directReplyTo detection") @TO@ Block@@WhileBody:{  cause=cause.getCause();} @AT@ 37667 @LENGTH@ 68
---------------DEL MethodInvocation@@logger.debug("Connection error, deferring directReplyTo detection") @AT@ 37667 @LENGTH@ 67
---------------INS Assignment@@cause=cause.getCause() @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Connection error, deferring directReplyTo detection") @AT@ 37852 @LENGTH@ 24
------------------INS SimpleName@@cause @TO@ Assignment@@cause=cause.getCause() @AT@ 37852 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@cause=cause.getCause() @AT@ 37857 @LENGTH@ 1
------------------INS MethodInvocation@@cause.getCause() @TO@ Assignment@@cause=cause.getCause() @AT@ 37860 @LENGTH@ 16
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@cause.getCause() @AT@ 37667 @LENGTH@ 6
---------------------MOV SimpleName@@Name:logger @TO@ MethodInvocation@@cause.getCause() @AT@ 37667 @LENGTH@ 6
---------------------MOV SimpleName@@MethodName:debug:["Connection error, deferring directReplyTo detection"] @TO@ MethodInvocation@@cause.getCause() @AT@ 37674 @LENGTH@ 60
------------------------DEL StringLiteral@@"Connection error, deferring directReplyTo detection" @AT@ 37680 @LENGTH@ 53
---------------------MOV SimpleName@@MethodName:debug:["Connection error, deferring directReplyTo detection"] @TO@ MethodInvocation@@cause.getCause() @AT@ 37674 @LENGTH@ 60
------------------------DEL StringLiteral@@"Connection error, deferring directReplyTo detection" @AT@ 37680 @LENGTH@ 53
------INS IfStatement@@if (cause instanceof ShutdownSignalException) {  if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }} @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 37888 @LENGTH@ 408
---------INS InstanceofExpression@@cause instanceof ShutdownSignalException @TO@ IfStatement@@if (cause instanceof ShutdownSignalException) {  if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }} @AT@ 37892 @LENGTH@ 40
------------INS SimpleName@@cause @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37892 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37898 @LENGTH@ 10
------------INS SimpleType@@ShutdownSignalException @TO@ InstanceofExpression@@cause instanceof ShutdownSignalException @AT@ 37909 @LENGTH@ 23
---------INS Block@@ThenBody:{  if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }} @TO@ IfStatement@@if (cause instanceof ShutdownSignalException) {  if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }} @AT@ 37934 @LENGTH@ 362
------------INS IfStatement@@if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @TO@ Block@@ThenBody:{  if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {    if (logger.isWarnEnabled()) {      logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");    }    this.replyAddress=null;    return false;  }} @AT@ 37941 @LENGTH@ 349
---------------INS MethodInvocation@@RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause) @TO@ IfStatement@@if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @AT@ 37945 @LENGTH@ 77
------------------INS SimpleName@@Name:RabbitUtils @TO@ MethodInvocation@@RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause) @AT@ 37945 @LENGTH@ 11
------------------INS SimpleName@@MethodName:isPassiveDeclarationChannelClose:[(ShutdownSignalException)cause] @TO@ MethodInvocation@@RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause) @AT@ 37957 @LENGTH@ 65
---------------------INS CastExpression@@(ShutdownSignalException)cause @TO@ SimpleName@@MethodName:isPassiveDeclarationChannelClose:[(ShutdownSignalException)cause] @AT@ 37990 @LENGTH@ 31
------------------------INS SimpleType@@ShutdownSignalException @TO@ CastExpression@@(ShutdownSignalException)cause @AT@ 37991 @LENGTH@ 23
------------------------INS SimpleName@@cause @TO@ CastExpression@@(ShutdownSignalException)cause @AT@ 38016 @LENGTH@ 5
---------------INS Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @TO@ IfStatement@@if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @AT@ 38024 @LENGTH@ 266
------------------MOV ExpressionStatement@@Assignment:this.replyAddress=null @TO@ Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @AT@ 37984 @LENGTH@ 25
------------------INS IfStatement@@if (logger.isWarnEnabled()) {  logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");} @TO@ Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @AT@ 38032 @LENGTH@ 199
---------------------MOV MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isWarnEnabled()) {  logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");} @AT@ 37794 @LENGTH@ 23
------------------------UPD SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodName:isWarnEnabled:[] @AT@ 37801 @LENGTH@ 16
---------------------MOV Block@@ThenBody:{  logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");} @TO@ IfStatement@@if (logger.isWarnEnabled()) {  logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");} @AT@ 37819 @LENGTH@ 160
------------------------UPD ExpressionStatement@@MethodInvocation:logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".") @TO@ MethodInvocation:logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".") @AT@ 37826 @LENGTH@ 147
---------------------------UPD MethodInvocation@@logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".") @TO@ logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".") @AT@ 37826 @LENGTH@ 146
------------------------------UPD SimpleName@@MethodName:warn:["Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + "."] @TO@ MethodName:warn:["Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + "."] @AT@ 37833 @LENGTH@ 139
---------------------------------UPD InfixExpression@@"Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + "." @TO@ "Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + "." @AT@ 37838 @LENGTH@ 133
------------------------------------UPD InfixExpression@@"Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" @TO@ "Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " @AT@ 37838 @LENGTH@ 110
---------------------------------------UPD StringLiteral@@"queues will be used:" @TO@ "queues will be used: " @AT@ 37926 @LENGTH@ 22
------------------------------------UPD MethodInvocation@@e.getMessage() @TO@ cause.getMessage() @AT@ 37951 @LENGTH@ 14
---------------------------------------UPD SimpleName@@Name:e @TO@ Name:cause @AT@ 37951 @LENGTH@ 1
------------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  if (logger.isWarnEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");  }  this.replyAddress=null;  return false;} @AT@ 38270 @LENGTH@ 13
---------------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 38277 @LENGTH@ 5
------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 38301 @LENGTH@ 120
---------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @AT@ 38305 @LENGTH@ 23
------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 38305 @LENGTH@ 6
------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 38312 @LENGTH@ 16
---------INS Block@@ThenBody:{  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @AT@ 38330 @LENGTH@ 91
------------INS ExpressionStatement@@MethodInvocation:logger.debug("IO error, deferring directReplyTo detection: " + ex.toString()) @TO@ Block@@ThenBody:{  logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());} @AT@ 38337 @LENGTH@ 78
---------------INS MethodInvocation@@logger.debug("IO error, deferring directReplyTo detection: " + ex.toString()) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("IO error, deferring directReplyTo detection: " + ex.toString()) @AT@ 38337 @LENGTH@ 77
------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("IO error, deferring directReplyTo detection: " + ex.toString()) @AT@ 38337 @LENGTH@ 6
------------------INS SimpleName@@MethodName:debug:["IO error, deferring directReplyTo detection: " + ex.toString()] @TO@ MethodInvocation@@logger.debug("IO error, deferring directReplyTo detection: " + ex.toString()) @AT@ 38344 @LENGTH@ 70
---------------------INS InfixExpression@@"IO error, deferring directReplyTo detection: " + ex.toString() @TO@ SimpleName@@MethodName:debug:["IO error, deferring directReplyTo detection: " + ex.toString()] @AT@ 38350 @LENGTH@ 63
------------------------INS StringLiteral@@"IO error, deferring directReplyTo detection: " @TO@ InfixExpression@@"IO error, deferring directReplyTo detection: " + ex.toString() @AT@ 38350 @LENGTH@ 47
------------------------INS Operator@@+ @TO@ InfixExpression@@"IO error, deferring directReplyTo detection: " + ex.toString() @AT@ 38397 @LENGTH@ 1
------------------------INS MethodInvocation@@ex.toString() @TO@ InfixExpression@@"IO error, deferring directReplyTo detection: " + ex.toString() @AT@ 38400 @LENGTH@ 13
---------------------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.toString() @AT@ 38400 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@ex.toString() @AT@ 38403 @LENGTH@ 10
------INS ThrowStatement@@SimpleName:ex @TO@ CatchClause@@catch (AmqpConnectException|AmqpIOException ex) {  Throwable cause=ex;  while (cause != null && !(cause instanceof ShutdownSignalException)) {    cause=cause.getCause();  }  if (cause instanceof ShutdownSignalException) {    if (RabbitUtils.isPassiveDeclarationChannelClose((ShutdownSignalException)cause)) {      if (logger.isWarnEnabled()) {        logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used: " + cause.getMessage() + ".");      }      this.replyAddress=null;      return false;    }  }  if (logger.isDebugEnabled()) {    logger.debug("IO error, deferring directReplyTo detection: " + ex.toString());  }  throw ex;} @AT@ 38426 @LENGTH@ 9
---------INS SimpleName@@ex @TO@ ThrowStatement@@SimpleName:ex @AT@ 38432 @LENGTH@ 2
---DEL CatchClause@@catch (Exception e) {  if (logger.isDebugEnabled()) {    logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");  }  this.replyAddress=null;} @AT@ 37764 @LENGTH@ 250
------DEL SingleVariableDeclaration@@Exception e @AT@ 37771 @LENGTH@ 11
---------DEL SimpleType@@Exception @AT@ 37771 @LENGTH@ 9
---------DEL SimpleName@@e @AT@ 37781 @LENGTH@ 1
------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.warn("Broker does not support fast replies via 'amq.rabbitmq.reply-to', temporary " + "queues will be used:" + e.getMessage() + ".");} @AT@ 37790 @LENGTH@ 189


UPD TypeDeclaration@@[@SuppressWarnings("restriction"), public]OAuthOverHttpsURLStreamHandler, sun.net.www.protocol.https.Handler @TO@ [@SuppressWarnings("restriction"), @Deprecated, public]OAuthOverHttpsURLStreamHandler, sun.net.www.protocol.https.Handler @AT@ 1153 @LENGTH@ 1298
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("restriction"), public]OAuthOverHttpsURLStreamHandler, sun.net.www.protocol.https.Handler @AT@ 1407 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("Wrong modification date",file.lastModified(),modificationDate) @TO@ MethodInvocation:assertEquals("Wrong modification date",expectedMillis,modificationDate) @AT@ 3149 @LENGTH@ 95
---UPD MethodInvocation@@assertEquals("Wrong modification date",file.lastModified(),modificationDate) @TO@ assertEquals("Wrong modification date",expectedMillis,modificationDate) @AT@ 3149 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertEquals:["Wrong modification date", file.lastModified(), modificationDate] @TO@ MethodName:assertEquals:["Wrong modification date", expectedMillis, modificationDate] @AT@ 3149 @LENGTH@ 94
---------DEL MethodInvocation@@file.lastModified() @AT@ 3189 @LENGTH@ 19
------------DEL SimpleName@@Name:file @AT@ 3189 @LENGTH@ 4
------------DEL SimpleName@@MethodName:lastModified:[] @AT@ 3194 @LENGTH@ 14
---------INS SimpleName@@expectedMillis @TO@ SimpleName@@MethodName:assertEquals:["Wrong modification date", file.lastModified(), modificationDate] @AT@ 3404 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:builder.setDisableDirListing(true) @TO@ MethodDeclaration@@public, void, MethodName:serviceInit, Configuration conf,  @AT@ 3538 @LENGTH@ 35
---INS MethodInvocation@@builder.setDisableDirListing(true) @TO@ ExpressionStatement@@MethodInvocation:builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 34
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.setDisableDirListing(true) @AT@ 3538 @LENGTH@ 7
------INS SimpleName@@MethodName:setDisableDirListing:[true] @TO@ MethodInvocation@@builder.setDisableDirListing(true) @AT@ 3546 @LENGTH@ 26
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setDisableDirListing:[true] @AT@ 3567 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:this.wait() @TO@ MethodInvocation:this.wait(TimeUnit.SECONDS.toMillis(1)) @AT@ 9218 @LENGTH@ 12
---UPD MethodInvocation@@this.wait() @TO@ this.wait(TimeUnit.SECONDS.toMillis(1)) @AT@ 9218 @LENGTH@ 11
------INS SimpleName@@MethodName:wait:[TimeUnit.SECONDS.toMillis(1)] @TO@ MethodInvocation@@this.wait() @AT@ 9223 @LENGTH@ 34
---------INS MethodInvocation@@TimeUnit.SECONDS.toMillis(1) @TO@ SimpleName@@MethodName:wait:[TimeUnit.SECONDS.toMillis(1)] @AT@ 9228 @LENGTH@ 28
------------MOV SimpleName@@MethodName:wait:[] @TO@ MethodInvocation@@TimeUnit.SECONDS.toMillis(1) @AT@ 9223 @LENGTH@ 6
---------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:wait:[] @AT@ 9254 @LENGTH@ 1
------------INS QualifiedName@@Name:TimeUnit.SECONDS @TO@ MethodInvocation@@TimeUnit.SECONDS.toMillis(1) @AT@ 9228 @LENGTH@ 16
------UPD SimpleName@@MethodName:wait:[] @TO@ MethodName:toMillis:[1] @AT@ 9223 @LENGTH@ 6


MOV MethodDeclaration@@public, void, MethodName:constructorListClientRegistrationWhenDuplicateIdThenIllegalArgumentException,  @TO@ TypeDeclaration@@[public]InMemoryClientRegistrationRepositoryTests,  @AT@ 1867 @LENGTH@ 250


UPD ReturnStatement@@ClassInstanceCreation:new OAuth2IntrospectionAuthenticationToken(accessToken,claims,authorities) @TO@ ClassInstanceCreation:new OAuth2IntrospectionAuthenticationToken(accessToken,new OAuth2TokenAttributes(claims),authorities) @AT@ 4837 @LENGTH@ 84
---UPD ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[accessToken, claims, authorities] @TO@ OAuth2IntrospectionAuthenticationToken[accessToken, new OAuth2TokenAttributes(claims), authorities] @AT@ 4844 @LENGTH@ 76
------INS ClassInstanceCreation@@OAuth2TokenAttributes[claims] @TO@ ClassInstanceCreation@@OAuth2IntrospectionAuthenticationToken[accessToken, claims, authorities] @AT@ 4971 @LENGTH@ 33
---------MOV SimpleName@@claims @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 4900 @LENGTH@ 6
---------INS New@@new @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 4971 @LENGTH@ 3
---------INS SimpleType@@OAuth2TokenAttributes @TO@ ClassInstanceCreation@@OAuth2TokenAttributes[claims] @AT@ 4975 @LENGTH@ 21


UPD IfStatement@@if (source instanceof Collection) {  return ((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList());} @TO@ if (source instanceof Collection) {  Collection<String> results=new ArrayList<>();  for (  Object object : ((Collection<?>)source)) {    if (object != null) {      results.add(object.toString());    }  }  return results;} @AT@ 2211 @LENGTH@ 179
---UPD Block@@ThenBody:{  return ((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList());} @TO@ ThenBody:{  Collection<String> results=new ArrayList<>();  for (  Object object : ((Collection<?>)source)) {    if (object != null) {      results.add(object.toString());    }  }  return results;} @AT@ 2245 @LENGTH@ 145
------INS VariableDeclarationStatement@@Collection<String> results=new ArrayList<>(); @TO@ Block@@ThenBody:{  return ((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList());} @AT@ 2216 @LENGTH@ 47
---------INS ParameterizedType@@Collection<String> @TO@ VariableDeclarationStatement@@Collection<String> results=new ArrayList<>(); @AT@ 2216 @LENGTH@ 18
------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 2216 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 2227 @LENGTH@ 6
---------INS VariableDeclarationFragment@@results=new ArrayList<>() @TO@ VariableDeclarationStatement@@Collection<String> results=new ArrayList<>(); @AT@ 2235 @LENGTH@ 27
------------INS SimpleName@@results @TO@ VariableDeclarationFragment@@results=new ArrayList<>() @AT@ 2235 @LENGTH@ 7
------------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@results=new ArrayList<>() @AT@ 2245 @LENGTH@ 17
---------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2245 @LENGTH@ 3
---------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 2249 @LENGTH@ 11
------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 2249 @LENGTH@ 9
------DEL ReturnStatement@@MethodInvocation:((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList()) @AT@ 2250 @LENGTH@ 136
---------DEL MethodInvocation@@((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList()) @AT@ 2257 @LENGTH@ 128
------------DEL MethodInvocation@@MethodName:map:[Objects::toString] @AT@ 2257 @LENGTH@ 93
------------DEL MethodInvocation@@MethodName:filter:[Objects::nonNull] @AT@ 2257 @LENGTH@ 64
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 2257 @LENGTH@ 33
------INS EnhancedForStatement@@for (Object object : ((Collection<?>)source)) {  if (object != null) {    results.add(object.toString());  }} @TO@ Block@@ThenBody:{  return ((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList());} @AT@ 2267 @LENGTH@ 122
---------MOV ParenthesizedExpression@@((Collection<?>)source) @TO@ EnhancedForStatement@@for (Object object : ((Collection<?>)source)) {  if (object != null) {    results.add(object.toString());  }} @AT@ 2257 @LENGTH@ 24
---------INS SingleVariableDeclaration@@Object object @TO@ EnhancedForStatement@@for (Object object : ((Collection<?>)source)) {  if (object != null) {    results.add(object.toString());  }} @AT@ 2272 @LENGTH@ 13
------------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object object @AT@ 2272 @LENGTH@ 6
------------INS SimpleName@@object @TO@ SingleVariableDeclaration@@Object object @AT@ 2279 @LENGTH@ 6
---------INS IfStatement@@if (object != null) {  results.add(object.toString());} @TO@ EnhancedForStatement@@for (Object object : ((Collection<?>)source)) {  if (object != null) {    results.add(object.toString());  }} @AT@ 2320 @LENGTH@ 64
------------INS InfixExpression@@object != null @TO@ IfStatement@@if (object != null) {  results.add(object.toString());} @AT@ 2324 @LENGTH@ 14
---------------INS SimpleName@@object @TO@ InfixExpression@@object != null @AT@ 2324 @LENGTH@ 6
---------------INS Operator@@!= @TO@ InfixExpression@@object != null @AT@ 2330 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@object != null @AT@ 2334 @LENGTH@ 4
------------INS Block@@ThenBody:{  results.add(object.toString());} @TO@ IfStatement@@if (object != null) {  results.add(object.toString());} @AT@ 2340 @LENGTH@ 44
---------------INS ExpressionStatement@@MethodInvocation:results.add(object.toString()) @TO@ Block@@ThenBody:{  results.add(object.toString());} @AT@ 2347 @LENGTH@ 31
------------------INS MethodInvocation@@results.add(object.toString()) @TO@ ExpressionStatement@@MethodInvocation:results.add(object.toString()) @AT@ 2347 @LENGTH@ 30
---------------------INS SimpleName@@Name:results @TO@ MethodInvocation@@results.add(object.toString()) @AT@ 2347 @LENGTH@ 7
---------------------MOV SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@results.add(object.toString()) @AT@ 2357 @LENGTH@ 28
------INS ReturnStatement@@SimpleName:results @TO@ Block@@ThenBody:{  return ((Collection<?>)source).stream().filter(Objects::nonNull).map(Objects::toString).collect(Collectors.toList());} @AT@ 2393 @LENGTH@ 15
---------INS SimpleName@@results @TO@ ReturnStatement@@SimpleName:results @AT@ 2400 @LENGTH@ 7


UPD VariableDeclarationStatement@@Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ Task<?> currTask=(Task<?>)nd; @AT@ 2784 @LENGTH@ 74
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2784 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 2813 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 2824 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2825 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]AdvancedMsvEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedMsvEndpointBuilder, [EndpointProducerBuilder] @AT@ 3945 @LENGTH@ 7535
---DEL Modifier@@static @AT@ 3952 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:HdfsKerberosConfigurationFactory,  @TO@ TypeDeclaration@@[public]HdfsKerberosConfigurationFactory,  @AT@ 456 @LENGTH@ 75
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:HdfsKerberosConfigurationFactory,  @AT@ 456 @LENGTH@ 7
---INS SimpleName@@MethodName:HdfsKerberosConfigurationFactory @TO@ MethodDeclaration@@private, voidMethodName:HdfsKerberosConfigurationFactory,  @AT@ 464 @LENGTH@ 32


UPD IfStatement@@if (delegate != null) {  loader.load(delegate);} @TO@ if (delegate != null) {  ServiceHelper.startService(this.delegate);  loader.load(delegate);} @AT@ 3756 @LENGTH@ 76
---UPD Block@@ThenBody:{  loader.load(delegate);} @TO@ ThenBody:{  ServiceHelper.startService(this.delegate);  loader.load(delegate);} @AT@ 3778 @LENGTH@ 54
------INS ExpressionStatement@@MethodInvocation:ServiceHelper.startService(this.delegate) @TO@ Block@@ThenBody:{  loader.load(delegate);} @AT@ 3796 @LENGTH@ 42
---------INS MethodInvocation@@ServiceHelper.startService(this.delegate) @TO@ ExpressionStatement@@MethodInvocation:ServiceHelper.startService(this.delegate) @AT@ 3796 @LENGTH@ 41
------------INS SimpleName@@Name:ServiceHelper @TO@ MethodInvocation@@ServiceHelper.startService(this.delegate) @AT@ 3796 @LENGTH@ 13
------------INS SimpleName@@MethodName:startService:[this.delegate] @TO@ MethodInvocation@@ServiceHelper.startService(this.delegate) @AT@ 3810 @LENGTH@ 27
---------------INS FieldAccess@@this.delegate @TO@ SimpleName@@MethodName:startService:[this.delegate] @AT@ 3823 @LENGTH@ 13
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.delegate @AT@ 3823 @LENGTH@ 4
------------------INS SimpleName@@delegate @TO@ FieldAccess@@this.delegate @AT@ 3828 @LENGTH@ 8


UPD EnumDeclaration@@[public, static]QoS,  @TO@ [static]QoS,  @AT@ 95018 @LENGTH@ 81
---DEL Modifier@@public @AT@ 95018 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("Bad CRC checksum 0 instead of ebf018e",e.getMessage()) @TO@ MethodInvocation:assertEquals("Bad CRC checksum, expected 0 instead of ebf018e",e.getMessage()) @AT@ 5983 @LENGTH@ 95
---UPD MethodInvocation@@assertEquals("Bad CRC checksum 0 instead of ebf018e",e.getMessage()) @TO@ assertEquals("Bad CRC checksum, expected 0 instead of ebf018e",e.getMessage()) @AT@ 5983 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertEquals:["Bad CRC checksum 0 instead of ebf018e", e.getMessage()] @TO@ MethodName:assertEquals:["Bad CRC checksum, expected 0 instead of ebf018e", e.getMessage()] @AT@ 5983 @LENGTH@ 94
---------UPD StringLiteral@@"Bad CRC checksum 0 instead of ebf018e" @TO@ "Bad CRC checksum, expected 0 instead of ebf018e" @AT@ 5996 @LENGTH@ 39


UPD EnhancedForStatement@@for (File dir : others) {  if (!starters.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @TO@ for (File dir : others) {  if (!starters.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName());  boolean special3="camel-debezium".equals(dir.getName());  if (special || special2 || special3) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @AT@ 17285 @LENGTH@ 1775
---UPD VariableDeclarationStatement@@boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()); @TO@ boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()); @AT@ 17856 @LENGTH@ 512
------UPD VariableDeclarationFragment@@special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()) @AT@ 17864 @LENGTH@ 503
---------UPD InfixExpression@@"camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName()) @TO@ "camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName()) @AT@ 17875 @LENGTH@ 492
---INS VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @TO@ EnhancedForStatement@@for (File dir : others) {  if (!starters.contains(dir.getName())) {    continue;  }  boolean special="camel-core-osgi".equals(dir.getName()) || "camel-core-xml".equals(dir.getName()) || "camel-http-common".equals(dir.getName())|| "camel-jetty-common".equals(dir.getName());  boolean special2="camel-as2".equals(dir.getName()) || "camel-box".equals(dir.getName()) || "camel-linkedin".equals(dir.getName())|| "camel-olingo2".equals(dir.getName())|| "camel-olingo4".equals(dir.getName())|| "camel-servicenow".equals(dir.getName())|| "camel-salesforce".equals(dir.getName())|| "camel-debezium".equals(dir.getName());  if (special || special2) {    continue;  }  File src=new File(dir,"src");  boolean active=src.isDirectory() && src.exists();  if (!active) {    continue;  }  if (dir.isDirectory() && !"target".equals(dir.getName())) {    File target=new File(dir,"target/classes");    findOtherFilesRecursive(target,jsonFiles,otherFiles,new CamelOthersFileFilter());  }} @AT@ 18323 @LENGTH@ 58
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 18323 @LENGTH@ 7
------INS VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationStatement@@boolean special3="camel-debezium".equals(dir.getName()); @AT@ 18331 @LENGTH@ 49
---------MOV MethodInvocation@@"camel-debezium".equals(dir.getName()) @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 18329 @LENGTH@ 38
---------INS SimpleName@@special3 @TO@ VariableDeclarationFragment@@special3="camel-debezium".equals(dir.getName()) @AT@ 18331 @LENGTH@ 8
---UPD IfStatement@@if (special || special2) {  continue;} @TO@ if (special || special2 || special3) {  continue;} @AT@ 18389 @LENGTH@ 82
------UPD InfixExpression@@special || special2 @TO@ special || special2 || special3 @AT@ 18393 @LENGTH@ 19
---------INS SimpleName@@special3 @TO@ InfixExpression@@special || special2 @AT@ 18429 @LENGTH@ 8


UPD TypeDeclaration@@[public, abstract]RandomValueProviderTokenServices, [OAuthProviderTokenServices, InitializingBean, OAuthTokenLifecycleRegistry] @TO@ [@Deprecated, public, abstract]RandomValueProviderTokenServices, [OAuthProviderTokenServices, InitializingBean, OAuthTokenLifecycleRegistry] @AT@ 1367 @LENGTH@ 8900
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]RandomValueProviderTokenServices, [OAuthProviderTokenServices, InitializingBean, OAuthTokenLifecycleRegistry] @AT@ 1588 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:resourceRegistration.registerOperationHandler(DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION,isMaster ? new DeploymentFullReplaceHandler(contentRepo) : new DeploymentFullReplaceHandler(fileRepository)) @TO@ MethodInvocation:resourceRegistration.registerOperationHandler(DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION,new DeploymentFullReplaceHandler(contentRepo,fileRepository,isMaster,environment.isBackupDomainFiles())) @AT@ 19650 @LENGTH@ 212
---UPD MethodInvocation@@resourceRegistration.registerOperationHandler(DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION,isMaster ? new DeploymentFullReplaceHandler(contentRepo) : new DeploymentFullReplaceHandler(fileRepository)) @TO@ resourceRegistration.registerOperationHandler(DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION,new DeploymentFullReplaceHandler(contentRepo,fileRepository,isMaster,environment.isBackupDomainFiles())) @AT@ 19650 @LENGTH@ 211
------UPD SimpleName@@MethodName:registerOperationHandler:[DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION, isMaster ? new DeploymentFullReplaceHandler(contentRepo) : new DeploymentFullReplaceHandler(fileRepository)] @TO@ MethodName:registerOperationHandler:[DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION, new DeploymentFullReplaceHandler(contentRepo,fileRepository,isMaster,environment.isBackupDomainFiles())] @AT@ 19671 @LENGTH@ 190
---------DEL ConditionalExpression@@isMaster ? new DeploymentFullReplaceHandler(contentRepo) : new DeploymentFullReplaceHandler(fileRepository) @AT@ 19753 @LENGTH@ 107
------------DEL SimpleName@@isMaster @AT@ 19753 @LENGTH@ 8
------------DEL ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo] @AT@ 19764 @LENGTH@ 45
------------DEL ClassInstanceCreation@@DeploymentFullReplaceHandler[fileRepository] @AT@ 19812 @LENGTH@ 48
---------------DEL New@@new @AT@ 19812 @LENGTH@ 3
---------------DEL SimpleType@@DeploymentFullReplaceHandler @AT@ 19816 @LENGTH@ 28
---------INS ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @TO@ SimpleName@@MethodName:registerOperationHandler:[DeploymentAttributes.FULL_REPLACE_DEPLOYMENT_DEFINITION, isMaster ? new DeploymentFullReplaceHandler(contentRepo) : new DeploymentFullReplaceHandler(fileRepository)] @AT@ 19753 @LENGTH@ 106
------------MOV New@@new @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19764 @LENGTH@ 3
------------MOV SimpleType@@DeploymentFullReplaceHandler @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19768 @LENGTH@ 28
------------MOV SimpleName@@contentRepo @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19797 @LENGTH@ 11
------------INS SimpleName@@isMaster @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19815 @LENGTH@ 8
------------INS MethodInvocation@@environment.isBackupDomainFiles() @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19825 @LENGTH@ 33
---------------INS SimpleName@@Name:environment @TO@ MethodInvocation@@environment.isBackupDomainFiles() @AT@ 19825 @LENGTH@ 11
---------------INS SimpleName@@MethodName:isBackupDomainFiles:[] @TO@ MethodInvocation@@environment.isBackupDomainFiles() @AT@ 19837 @LENGTH@ 21
------------MOV SimpleName@@fileRepository @TO@ ClassInstanceCreation@@DeploymentFullReplaceHandler[contentRepo, fileRepository, isMaster, environment.isBackupDomainFiles()] @AT@ 19845 @LENGTH@ 14


UPD TypeDeclaration@@[public]ImplicitResourceDetails, AbstractRedirectResourceDetails @TO@ [@Deprecated, public]ImplicitResourceDetails, AbstractRedirectResourceDetails @AT@ 208 @LENGTH@ 149
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ImplicitResourceDetails, AbstractRedirectResourceDetails @AT@ 386 @LENGTH@ 11


UPD MethodDeclaration@@default, PubNubEndpointBuilder, MethodName:pubNub, String path,  @TO@ default, PubNubEndpointBuilder, MethodName:pubnub, String path,  @AT@ 29255 @LENGTH@ 370
---UPD SimpleName@@MethodName:pubNub @TO@ MethodName:pubnub @AT@ 29285 @LENGTH@ 6


UPD VariableDeclarationStatement@@Task<? extends Serializable> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @TO@ Task<?> replLogTask=ReplUtils.getTableReplLogTask(tableDesc,replLogger,context.hiveConf); @AT@ 7261 @LENGTH@ 128
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 7261 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:template.sendBody("direct:grpc-stream-async-async-route",PingRequest.newBuilder().setPingName(String.valueOf("error")).build()) @TO@ MethodInvocation:template.sendBody("direct:grpc-stream-async-async-route",PingRequest.newBuilder().setPingName("error").build()) @AT@ 3225 @LENGTH@ 129
---UPD MethodInvocation@@template.sendBody("direct:grpc-stream-async-async-route",PingRequest.newBuilder().setPingName(String.valueOf("error")).build()) @TO@ template.sendBody("direct:grpc-stream-async-async-route",PingRequest.newBuilder().setPingName("error").build()) @AT@ 3225 @LENGTH@ 128
------UPD SimpleName@@MethodName:sendBody:["direct:grpc-stream-async-async-route", PingRequest.newBuilder().setPingName(String.valueOf("error")).build()] @TO@ MethodName:sendBody:["direct:grpc-stream-async-async-route", PingRequest.newBuilder().setPingName("error").build()] @AT@ 3234 @LENGTH@ 119
---------UPD MethodInvocation@@PingRequest.newBuilder().setPingName(String.valueOf("error")).build() @TO@ PingRequest.newBuilder().setPingName("error").build() @AT@ 3283 @LENGTH@ 69
------------UPD MethodInvocation@@MethodName:setPingName:[String.valueOf("error")] @TO@ MethodName:setPingName:["error"] @AT@ 3283 @LENGTH@ 61
---------------DEL MethodInvocation@@String.valueOf("error") @AT@ 3320 @LENGTH@ 23
------------------DEL SimpleName@@Name:String @AT@ 3320 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:valueOf:["error"] @AT@ 3327 @LENGTH@ 16
---------------------DEL StringLiteral@@"error" @AT@ 3335 @LENGTH@ 7
---------------INS StringLiteral@@"error" @TO@ MethodInvocation@@MethodName:setPingName:[String.valueOf("error")] @AT@ 3320 @LENGTH@ 7


UPD IfStatement@@if (!appclient) {  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor(ejbNameRegexService));  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredSingletonMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DELIVERY_ACTIVE_MERGE,new MdbDeliveryMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_MISSING_METHOD_PERMISSIONS,missingMethodPermissionsDenyAccessMergingProcessor);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_USER_APP_SPECIFIC_CONTAINER_INTERCEPTORS,new ContainerInterceptorBindingsDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_CACHE_DEPENDENCIES,new CacheDependenciesProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EE_MODULE_CONFIG + 1,new MdbDeliveryDependenciesProcessor());} @TO@ if (!appclient) {  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor(ejbNameRegexService));  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredSingletonMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DELIVERY_ACTIVE_MERGE,new MdbDeliveryMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_MISSING_METHOD_PERMISSIONS,missingMethodPermissionsDenyAccessMergingProcessor);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_USER_APP_SPECIFIC_CONTAINER_INTERCEPTORS,new ContainerInterceptorBindingsDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_CACHE_DEPENDENCIES,new CacheDependenciesProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EE_MODULE_CONFIG + 1,new MdbDeliveryDependenciesProcessor());  if (model.hasDefined(SERVER_INTERCEPTORS)) {    final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();    final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);    for (    final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {      serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));    }    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));    final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));  }} @AT@ 22641 @LENGTH@ 7628
---UPD Block@@ThenBody:{  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor(ejbNameRegexService));  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredSingletonMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DELIVERY_ACTIVE_MERGE,new MdbDeliveryMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_MISSING_METHOD_PERMISSIONS,missingMethodPermissionsDenyAccessMergingProcessor);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_USER_APP_SPECIFIC_CONTAINER_INTERCEPTORS,new ContainerInterceptorBindingsDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_CACHE_DEPENDENCIES,new CacheDependenciesProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EE_MODULE_CONFIG + 1,new MdbDeliveryDependenciesProcessor());} @TO@ ThenBody:{  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor(ejbNameRegexService));  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredSingletonMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DELIVERY_ACTIVE_MERGE,new MdbDeliveryMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_MISSING_METHOD_PERMISSIONS,missingMethodPermissionsDenyAccessMergingProcessor);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_USER_APP_SPECIFIC_CONTAINER_INTERCEPTORS,new ContainerInterceptorBindingsDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_CACHE_DEPENDENCIES,new CacheDependenciesProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EE_MODULE_CONFIG + 1,new MdbDeliveryDependenciesProcessor());  if (model.hasDefined(SERVER_INTERCEPTORS)) {    final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();    final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);    for (    final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {      serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));    }    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));    final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);    processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));  }} @AT@ 22657 @LENGTH@ 7612
------INS IfStatement@@if (model.hasDefined(SERVER_INTERCEPTORS)) {  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @TO@ Block@@ThenBody:{  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_TIMERSERVICE_BINDING,new TimerServiceJndiBindingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION,new ApplicationExceptionAnnotationProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_DD_INTERCEPTORS,new InterceptorClassDeploymentDescriptorProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_EJB_SECURITY_ROLE_REF_DD,new SecurityRoleRefDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_PASSIVATION_ANNOTATION,new PassivationAnnotationParsingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW,new ImplicitLocalViewProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_APPLICATION_EXCEPTIONS,new ApplicationExceptionMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_INTERCEPTORS,new DeploymentDescriptorInterceptorBindingsProcessor(ejbNameRegexService));  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION,new DeploymentDescriptorMethodProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TRANSACTION_MANAGEMENT,new TransactionManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MANAGEMENT_MERGE,new ConcurrencyManagementMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CONCURRENCY_MERGE,new EjbConcurrencyMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_TX_ATTR_MERGE,new TransactionAttributeMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RUN_AS_MERGE,new RunAsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_RESOURCE_ADAPTER_MERGE,new ResourceAdaptorMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CLUSTERED,new ClusteredSingletonMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_DELIVERY_ACTIVE_MERGE,new MdbDeliveryMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_REMOVE_METHOD,new RemoveMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STARTUP_MERGE,new StartupMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_DOMAIN,new SecurityDomainMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_MISSING_METHOD_PERMISSIONS,missingMethodPermissionsDenyAccessMergingProcessor);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_ROLES,new DeclareRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_METHOD_PERMISSIONS,new MethodPermissionsMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_STATEFUL_TIMEOUT,new StatefulTimeoutMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_SYNCHRONIZATION,new SessionSynchronizationMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_INIT_METHOD,new InitMethodMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SESSION_BEAN,new SessionBeanMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SECURITY_PRINCIPAL_ROLE_MAPPING_MERGE,new SecurityRolesMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_LOCAL_HOME,new SessionBeanHomeProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_CACHE,new CacheMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SLSB_POOL_NAME_MERGE,new StatelessSessionBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_MDB_POOL_NAME_MERGE,new MessageDrivenBeanPoolMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_USER_APP_SPECIFIC_CONTAINER_INTERCEPTORS,new ContainerInterceptorBindingsDDProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPENDS_ON_ANNOTATION,new EjbDependsOnMergingProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_DEPLOYMENT_REPOSITORY,new DeploymentRepositoryProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EJB_MANAGEMENT_RESOURCES,new EjbManagementDeploymentUnitProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_CACHE_DEPENDENCIES,new CacheDependenciesProcessor());  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.INSTALL,Phase.INSTALL_EE_MODULE_CONFIG + 1,new MdbDeliveryDependenciesProcessor());} @AT@ 30273 @LENGTH@ 1210
---------INS Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @TO@ IfStatement@@if (model.hasDefined(SERVER_INTERCEPTORS)) {  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 30316 @LENGTH@ 1167
------------MOV VariableDeclarationStatement@@final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>(); @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 32221 @LENGTH@ 77
------------MOV VariableDeclarationStatement@@final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS); @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 32312 @LENGTH@ 72
------------MOV EnhancedForStatement@@for (final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {  serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));} @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 32397 @LENGTH@ 244
------------MOV ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors)) @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 32811 @LENGTH@ 240
------------MOV VariableDeclarationStatement@@final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors); @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 33131 @LENGTH@ 101
------------MOV ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache)) @TO@ Block@@ThenBody:{  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 33401 @LENGTH@ 224
---------MOV MethodInvocation@@model.hasDefined(SERVER_INTERCEPTORS) @TO@ IfStatement@@if (model.hasDefined(SERVER_INTERCEPTORS)) {  final List<ServerInterceptorMetaData> serverInterceptors=new ArrayList<>();  final ModelNode serverInterceptorsNode=model.get(SERVER_INTERCEPTORS);  for (  final ModelNode serverInterceptor : serverInterceptorsNode.asList()) {    serverInterceptors.add(new ServerInterceptorMetaData(serverInterceptor.get("module").asString(),serverInterceptor.get("class").asString()));  }  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.DEPENDENCIES,Phase.DEPENDENCIES_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsDependenciesDeploymentUnitProcessor(serverInterceptors));  final ServerInterceptorCache serverInterceptorCache=new ServerInterceptorCache(serverInterceptors);  processorTarget.addDeploymentProcessor(EJB3Extension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_EJB_SERVER_INTERCEPTORS,new ServerInterceptorsBindingsProcessor(serverInterceptorCache));} @AT@ 32168 @LENGTH@ 37


UPD TypeDeclaration@@[@Configuration, static]OAuth2ClientWebFluxSecurityConfiguration, [WebFluxConfigurer] @TO@ [@Configuration(proxyBeanMethods=false), static]OAuth2ClientWebFluxSecurityConfiguration, [WebFluxConfigurer] @AT@ 2438 @LENGTH@ 1744
---INS NormalAnnotation@@@Configuration(proxyBeanMethods=false) @TO@ TypeDeclaration@@[@Configuration, static]OAuth2ClientWebFluxSecurityConfiguration, [WebFluxConfigurer] @AT@ 2438 @LENGTH@ 40
---DEL MarkerAnnotation@@@Configuration @AT@ 2438 @LENGTH@ 14


UPD TypeDeclaration@@[@Ignore, public]LockTestServerTest,  @TO@ [public]LockTestServerTest,  @AT@ 1238 @LENGTH@ 1813
---DEL MarkerAnnotation@@@Ignore @AT@ 1238 @LENGTH@ 7


UPD TypeDeclaration@@[public]ConsumerDetailsService,  @TO@ [@Deprecated, public]ConsumerDetailsService,  @AT@ 814 @LENGTH@ 409
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]ConsumerDetailsService,  @AT@ 1035 @LENGTH@ 11


UPD FieldDeclaration@@public, String, [saslConfig] @TO@ private, String, [saslConfig] @AT@ 19975 @LENGTH@ 25
---UPD Modifier@@public @TO@ private @AT@ 19975 @LENGTH@ 6


UPD TypeDeclaration@@[public]AuthorizationCodeTokenGranter, AbstractTokenGranter @TO@ [@Deprecated, public]AuthorizationCodeTokenGranter, AbstractTokenGranter @AT@ 1888 @LENGTH@ 3188
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationCodeTokenGranter, AbstractTokenGranter @AT@ 2065 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals("netty4-http:http:someserver:80/hello",list.get(1).getElement()) @TO@ MethodInvocation:Assert.assertEquals("netty-http:http:someserver:80/hello",list.get(1).getElement()) @AT@ 2248 @LENGTH@ 86
---UPD MethodInvocation@@Assert.assertEquals("netty4-http:http:someserver:80/hello",list.get(1).getElement()) @TO@ Assert.assertEquals("netty-http:http:someserver:80/hello",list.get(1).getElement()) @AT@ 2248 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertEquals:["netty4-http:http:someserver:80/hello", list.get(1).getElement()] @TO@ MethodName:assertEquals:["netty-http:http:someserver:80/hello", list.get(1).getElement()] @AT@ 2255 @LENGTH@ 78
---------UPD StringLiteral@@"netty4-http:http:someserver:80/hello" @TO@ "netty-http:http:someserver:80/hello" @AT@ 2268 @LENGTH@ 38


UPD ExpressionStatement@@Assignment:loggedIn=getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration()) @TO@ Assignment:loggedIn=getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration(),null) @AT@ 7360 @LENGTH@ 90
---UPD Assignment@@loggedIn=getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration()) @TO@ loggedIn=getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration(),null) @AT@ 7360 @LENGTH@ 89
------UPD MethodInvocation@@getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration()) @TO@ getOperations().connect((RemoteFileConfiguration)endpoint.getConfiguration(),null) @AT@ 7371 @LENGTH@ 78
---------UPD SimpleName@@MethodName:connect:[(RemoteFileConfiguration)endpoint.getConfiguration()] @TO@ MethodName:connect:[(RemoteFileConfiguration)endpoint.getConfiguration(), null] @AT@ 7387 @LENGTH@ 62
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:connect:[(RemoteFileConfiguration)endpoint.getConfiguration()] @AT@ 7450 @LENGTH@ 4


UPD TypeDeclaration@@[public]DefaultOAuth2RequestFactory, [OAuth2RequestFactory] @TO@ [@Deprecated, public]DefaultOAuth2RequestFactory, [OAuth2RequestFactory] @AT@ 1874 @LENGTH@ 4607
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2RequestFactory, [OAuth2RequestFactory] @AT@ 2051 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]PaxLoggingEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]PaxLoggingEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1461 @LENGTH@ 648
---DEL Modifier@@static @AT@ 1468 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:collecitonQueriesShouldBeTreatedAsSuch,  @TO@ void, MethodName:collectionQueriesShouldBeTreatedAsSuch,  @AT@ 3627 @LENGTH@ 257
---UPD SimpleName@@MethodName:collecitonQueriesShouldBeTreatedAsSuch @TO@ MethodName:collectionQueriesShouldBeTreatedAsSuch @AT@ 3627 @LENGTH@ 38


UPD MethodDeclaration@@default, JSR356WebSocketEndpointBuilder, MethodName:jSR356WebSocket, String path,  @TO@ default, JSR356WebSocketEndpointBuilder, MethodName:websocketJsr356, String path,  @AT@ 18924 @LENGTH@ 443
---UPD SimpleName@@MethodName:jSR356WebSocket @TO@ MethodName:websocketJsr356 @AT@ 18963 @LENGTH@ 15


INS VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @TO@ MethodDeclaration@@public, static, Map<String,Converter<Object,?>>, MethodName:createDefaultClaimTypeConverters,  @AT@ 4729 @LENGTH@ 90
---INS ParameterizedType@@Converter<Object,?> @TO@ VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @AT@ 4729 @LENGTH@ 20
------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4729 @LENGTH@ 9
------INS SimpleType@@Object @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4739 @LENGTH@ 6
------INS WildcardType@@? @TO@ ParameterizedType@@Converter<Object,?> @AT@ 4747 @LENGTH@ 1
---INS VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @TO@ VariableDeclarationStatement@@Converter<Object,?> stringConverter=getConverter(TypeDescriptor.valueOf(String.class)); @AT@ 4750 @LENGTH@ 68
------INS SimpleName@@stringConverter @TO@ VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4750 @LENGTH@ 15
------INS MethodInvocation@@getConverter(TypeDescriptor.valueOf(String.class)) @TO@ VariableDeclarationFragment@@stringConverter=getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4768 @LENGTH@ 50
---------INS SimpleName@@MethodName:getConverter:[TypeDescriptor.valueOf(String.class)] @TO@ MethodInvocation@@getConverter(TypeDescriptor.valueOf(String.class)) @AT@ 4768 @LENGTH@ 50
------------INS MethodInvocation@@TypeDescriptor.valueOf(String.class) @TO@ SimpleName@@MethodName:getConverter:[TypeDescriptor.valueOf(String.class)] @AT@ 4781 @LENGTH@ 36
---------------INS SimpleName@@Name:TypeDescriptor @TO@ MethodInvocation@@TypeDescriptor.valueOf(String.class) @AT@ 4781 @LENGTH@ 14
---------------INS SimpleName@@MethodName:valueOf:[String.class] @TO@ MethodInvocation@@TypeDescriptor.valueOf(String.class) @AT@ 4796 @LENGTH@ 21
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:valueOf:[String.class] @AT@ 4804 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:System.arraycopy(DOS_TIME_MIN,0,buf,offset,DOS_TIME_MIN.length) @TO@ MethodInvocation:copy(DOS_TIME_MIN,buf,offset) @AT@ 2739 @LENGTH@ 68
---UPD MethodInvocation@@System.arraycopy(DOS_TIME_MIN,0,buf,offset,DOS_TIME_MIN.length) @TO@ copy(DOS_TIME_MIN,buf,offset) @AT@ 2739 @LENGTH@ 67
------DEL SimpleName@@Name:System @AT@ 2739 @LENGTH@ 6
------UPD SimpleName@@MethodName:arraycopy:[DOS_TIME_MIN, 0, buf, offset, DOS_TIME_MIN.length] @TO@ MethodName:copy:[DOS_TIME_MIN, buf, offset] @AT@ 2746 @LENGTH@ 60
---------DEL NumberLiteral@@0 @AT@ 2770 @LENGTH@ 1
---------DEL QualifiedName@@DOS_TIME_MIN.length @AT@ 2786 @LENGTH@ 19
------------DEL SimpleName@@DOS_TIME_MIN @AT@ 2786 @LENGTH@ 12
------------DEL SimpleName@@length @AT@ 2799 @LENGTH@ 6


UPD IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 13967 @LENGTH@ 401
---INS Block@@ElseBody:if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.CLIENT_CREDENTIALS.equals(this.authorizationGrantType)) {  this.validateClientCredentialsGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14109 @LENGTH@ 382
------INS IfStatement@@if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ Block@@ElseBody:if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14109 @LENGTH@ 382
---------MOV Block@@ElseBody:if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14109 @LENGTH@ 259
---------INS MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @TO@ IfStatement@@if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14113 @LENGTH@ 67
------------INS QualifiedName@@Name:AuthorizationGrantType.PASSWORD @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @AT@ 14113 @LENGTH@ 31
------------INS SimpleName@@MethodName:equals:[this.authorizationGrantType] @TO@ MethodInvocation@@AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType) @AT@ 14145 @LENGTH@ 35
---------------INS FieldAccess@@this.authorizationGrantType @TO@ SimpleName@@MethodName:equals:[this.authorizationGrantType] @AT@ 14152 @LENGTH@ 27
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14152 @LENGTH@ 4
------------------INS SimpleName@@authorizationGrantType @TO@ FieldAccess@@this.authorizationGrantType @AT@ 14157 @LENGTH@ 22
---------INS Block@@ThenBody:{  this.validatePasswordGrantType();} @TO@ IfStatement@@if (AuthorizationGrantType.PASSWORD.equals(this.authorizationGrantType)) {  this.validatePasswordGrantType();} else if (AuthorizationGrantType.IMPLICIT.equals(this.authorizationGrantType)) {  this.validateImplicitGrantType();} else if (AuthorizationGrantType.AUTHORIZATION_CODE.equals(this.authorizationGrantType)) {  this.validateAuthorizationCodeGrantType();} @AT@ 14182 @LENGTH@ 44
------------INS ExpressionStatement@@MethodInvocation:this.validatePasswordGrantType() @TO@ Block@@ThenBody:{  this.validatePasswordGrantType();} @AT@ 14188 @LENGTH@ 33
---------------INS MethodInvocation@@this.validatePasswordGrantType() @TO@ ExpressionStatement@@MethodInvocation:this.validatePasswordGrantType() @AT@ 14188 @LENGTH@ 32
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.validatePasswordGrantType() @AT@ 14188 @LENGTH@ 4
------------------INS SimpleName@@MethodName:validatePasswordGrantType:[] @TO@ MethodInvocation@@this.validatePasswordGrantType() @AT@ 14193 @LENGTH@ 27


UPD TypeDeclaration@@[public]WebResponseExceptionTranslator,  @TO@ [@Deprecated, public]WebResponseExceptionTranslator,  @AT@ 865 @LENGTH@ 117
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]WebResponseExceptionTranslator,  @AT@ 1045 @LENGTH@ 11


UPD TypeDeclaration@@[public]JdbcListFactory,  @TO@ [@Deprecated, public]JdbcListFactory,  @AT@ 809 @LENGTH@ 207
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JdbcListFactory,  @AT@ 987 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertThat(e.getMessage()).contains("@RabbitListener.queuesToDeclare can't resolve").contains("as a String[] or a String or a Queue") @TO@ MethodInvocation:assertThat(e.getMessage()).contains("@RabbitListener.queues can't resolve").contains("as a String[] or a String or a Queue") @AT@ 9584 @LENGTH@ 140
---UPD MethodInvocation@@assertThat(e.getMessage()).contains("@RabbitListener.queuesToDeclare can't resolve").contains("as a String[] or a String or a Queue") @TO@ assertThat(e.getMessage()).contains("@RabbitListener.queues can't resolve").contains("as a String[] or a String or a Queue") @AT@ 9584 @LENGTH@ 139
------UPD MethodInvocation@@MethodName:contains:["@RabbitListener.queuesToDeclare can't resolve"] @TO@ MethodName:contains:["@RabbitListener.queues can't resolve"] @AT@ 9584 @LENGTH@ 84
---------UPD StringLiteral@@"@RabbitListener.queuesToDeclare can't resolve" @TO@ "@RabbitListener.queues can't resolve" @AT@ 9620 @LENGTH@ 47


UPD TypeDeclaration@@[public, static]AdvancedServletEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedServletEndpointBuilder, [EndpointConsumerBuilder] @AT@ 8536 @LENGTH@ 6194
---DEL Modifier@@static @AT@ 8543 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedLuceneEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedLuceneEndpointBuilder, [EndpointProducerBuilder] @AT@ 6302 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 6309 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, public]OAuth2ClientConfiguration,  @TO@ [@Configuration, @Deprecated, public]OAuth2ClientConfiguration,  @AT@ 1526 @LENGTH@ 1002
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@Configuration, public]OAuth2ClientConfiguration,  @AT@ 1719 @LENGTH@ 11


UPD VariableDeclarationStatement@@Mono<PersonWithAllConstructor> p=repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)).as(otherTransactionTemplate::transactional); @TO@ Mono<PersonWithAllConstructor> p=repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)).as(otherTransactionTemplate::transactional); @AT@ 5936 @LENGTH@ 251
---UPD VariableDeclarationFragment@@p=repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)).as(otherTransactionTemplate::transactional) @TO@ p=repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)).as(otherTransactionTemplate::transactional) @AT@ 5967 @LENGTH@ 219
------UPD MethodInvocation@@repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)).as(otherTransactionTemplate::transactional) @TO@ repository.save(new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)).as(otherTransactionTemplate::transactional) @AT@ 5974 @LENGTH@ 212
---------UPD MethodInvocation@@MethodName:save:[new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null)] @TO@ MethodName:save:[new PersonWithAllConstructor(null,"Mercury","Freddie","Queen",true,1509L,LocalDate.of(1946,9,15),null,Collections.emptyList(),null,null)] @AT@ 5974 @LENGTH@ 163
------------UPD ClassInstanceCreation@@PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null] @TO@ PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null, null] @AT@ 5990 @LENGTH@ 146
---------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@PersonWithAllConstructor[null, "Mercury", "Freddie", "Queen", true, 1509L, LocalDate.of(1946,9,15), null, Collections.emptyList(), null] @AT@ 6137 @LENGTH@ 4


UPD MethodDeclaration@@public, static, List<GrantedAuthority>, MethodName:createAuthorityList, String... roles,  @TO@ public, static, List<GrantedAuthority>, MethodName:createAuthorityList, String... authorities,  @AT@ 2241 @LENGTH@ 260
---UPD SingleVariableDeclaration@@String... roles @TO@ String... authorities @AT@ 2298 @LENGTH@ 15
------UPD SimpleName@@roles @TO@ authorities @AT@ 2308 @LENGTH@ 5
---UPD VariableDeclarationStatement@@List<GrantedAuthority> authorities=new ArrayList<>(roles.length); @TO@ List<GrantedAuthority> grantedAuthorities=new ArrayList<>(authorities.length); @AT@ 2319 @LENGTH@ 67
------UPD VariableDeclarationFragment@@authorities=new ArrayList<>(roles.length) @TO@ grantedAuthorities=new ArrayList<>(authorities.length) @AT@ 2342 @LENGTH@ 43
---------UPD SimpleName@@authorities @TO@ grantedAuthorities @AT@ 2342 @LENGTH@ 11
---------UPD ClassInstanceCreation@@ArrayList<>[roles.length] @TO@ ArrayList<>[authorities.length] @AT@ 2356 @LENGTH@ 29
------------UPD QualifiedName@@roles.length @TO@ authorities.length @AT@ 2372 @LENGTH@ 12
---------------UPD SimpleName@@roles @TO@ authorities @AT@ 2372 @LENGTH@ 5
---UPD EnhancedForStatement@@for (String role : roles) {  authorities.add(new SimpleGrantedAuthority(role));} @TO@ for (String authority : authorities) {  grantedAuthorities.add(new SimpleGrantedAuthority(authority));} @AT@ 2390 @LENGTH@ 85
------UPD SingleVariableDeclaration@@String role @TO@ String authority @AT@ 2395 @LENGTH@ 11
---------UPD SimpleName@@role @TO@ authority @AT@ 2402 @LENGTH@ 4
------UPD SimpleName@@roles @TO@ authorities @AT@ 2409 @LENGTH@ 5
------UPD ExpressionStatement@@MethodInvocation:authorities.add(new SimpleGrantedAuthority(role)) @TO@ MethodInvocation:grantedAuthorities.add(new SimpleGrantedAuthority(authority)) @AT@ 2421 @LENGTH@ 50
---------UPD MethodInvocation@@authorities.add(new SimpleGrantedAuthority(role)) @TO@ grantedAuthorities.add(new SimpleGrantedAuthority(authority)) @AT@ 2421 @LENGTH@ 49
------------UPD SimpleName@@Name:authorities @TO@ Name:grantedAuthorities @AT@ 2421 @LENGTH@ 11
------------UPD SimpleName@@MethodName:add:[new SimpleGrantedAuthority(role)] @TO@ MethodName:add:[new SimpleGrantedAuthority(authority)] @AT@ 2433 @LENGTH@ 37
---------------UPD ClassInstanceCreation@@SimpleGrantedAuthority[role] @TO@ SimpleGrantedAuthority[authority] @AT@ 2437 @LENGTH@ 32
------------------UPD SimpleName@@role @TO@ authority @AT@ 2464 @LENGTH@ 4
---UPD ReturnStatement@@SimpleName:authorities @TO@ SimpleName:grantedAuthorities @AT@ 2479 @LENGTH@ 19
------UPD SimpleName@@authorities @TO@ grantedAuthorities @AT@ 2486 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @TO@ TypeDeclaration@@[public]ConsumerDetailsFactoryBean, [FactoryBean<ConsumerDetails>, ResourceLoaderAware] @AT@ 1744 @LENGTH@ 86
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @AT@ 1744 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @AT@ 1752 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @AT@ 1759 @LENGTH@ 5
---INS SimpleType@@Log @TO@ FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @AT@ 1765 @LENGTH@ 3
---INS VariableDeclarationFragment@@logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class) @TO@ FieldDeclaration@@private, static, final, Log, [logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class)] @AT@ 1769 @LENGTH@ 60
------INS SimpleName@@logger @TO@ VariableDeclarationFragment@@logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class) @AT@ 1769 @LENGTH@ 6
------INS MethodInvocation@@LogFactory.getLog(ConsumerDetailsFactoryBean.class) @TO@ VariableDeclarationFragment@@logger=LogFactory.getLog(ConsumerDetailsFactoryBean.class) @AT@ 1778 @LENGTH@ 51
---------INS SimpleName@@Name:LogFactory @TO@ MethodInvocation@@LogFactory.getLog(ConsumerDetailsFactoryBean.class) @AT@ 1778 @LENGTH@ 10
---------INS SimpleName@@MethodName:getLog:[ConsumerDetailsFactoryBean.class] @TO@ MethodInvocation@@LogFactory.getLog(ConsumerDetailsFactoryBean.class) @AT@ 1789 @LENGTH@ 40
------------INS TypeLiteral@@ConsumerDetailsFactoryBean.class @TO@ SimpleName@@MethodName:getLog:[ConsumerDetailsFactoryBean.class] @AT@ 1796 @LENGTH@ 32


UPD TypeDeclaration@@[public, static]LanguageEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]LanguageEndpointBuilder, [EndpointProducerBuilder] @AT@ 1479 @LENGTH@ 4527
---DEL Modifier@@static @AT@ 1486 @LENGTH@ 6


UPD TypeDeclaration@@[public]SignatureSecretEditor, PropertyEditorSupport @TO@ [@Deprecated, public]SignatureSecretEditor, PropertyEditorSupport @AT@ 813 @LENGTH@ 196
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SignatureSecretEditor, PropertyEditorSupport @AT@ 1033 @LENGTH@ 11


UPD TypeDeclaration@@[public]SignatureVerifier, [AlgorithmMetadata] @TO@ [@Deprecated, public]SignatureVerifier, [AlgorithmMetadata] @AT@ 754 @LENGTH@ 112
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]SignatureVerifier, [AlgorithmMetadata] @AT@ 932 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:transactionObject.setResourceHolder((Neo4jTransactionHolder)suspendedResources) @TO@ MethodDeclaration@@protected, void, MethodName:doResume, @Nullable Object transaction, Object suspendedResources,  @AT@ 7245 @LENGTH@ 81
---INS MethodInvocation@@transactionObject.setResourceHolder((Neo4jTransactionHolder)suspendedResources) @TO@ ExpressionStatement@@MethodInvocation:transactionObject.setResourceHolder((Neo4jTransactionHolder)suspendedResources) @AT@ 7245 @LENGTH@ 80
------INS SimpleName@@Name:transactionObject @TO@ MethodInvocation@@transactionObject.setResourceHolder((Neo4jTransactionHolder)suspendedResources) @AT@ 7245 @LENGTH@ 17
------INS SimpleName@@MethodName:setResourceHolder:[(Neo4jTransactionHolder)suspendedResources] @TO@ MethodInvocation@@transactionObject.setResourceHolder((Neo4jTransactionHolder)suspendedResources) @AT@ 7263 @LENGTH@ 62
---------INS CastExpression@@(Neo4jTransactionHolder)suspendedResources @TO@ SimpleName@@MethodName:setResourceHolder:[(Neo4jTransactionHolder)suspendedResources] @AT@ 7281 @LENGTH@ 43
------------INS SimpleType@@Neo4jTransactionHolder @TO@ CastExpression@@(Neo4jTransactionHolder)suspendedResources @AT@ 7282 @LENGTH@ 22
------------INS SimpleName@@suspendedResources @TO@ CastExpression@@(Neo4jTransactionHolder)suspendedResources @AT@ 7306 @LENGTH@ 18


UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> childTasks=rootTask.getChildTasks(); @TO@ List<Task<?>> childTasks=rootTask.getChildTasks(); @AT@ 16765 @LENGTH@ 73
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 16765 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 16770 @LENGTH@ 28


UPD MethodDeclaration@@default, CxfRsEndpointBuilder, MethodName:cxfRs, String path,  @TO@ default, CxfRsEndpointBuilder, MethodName:cxfrs, String path,  @AT@ 74585 @LENGTH@ 362
---UPD SimpleName@@MethodName:cxfRs @TO@ MethodName:cxfrs @AT@ 74614 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:ReactiveTransactionManagerMixedDatabasesTest, Driver driver, ReactiveNeo4jClient neo4jClient, ReactiveNeo4jTransactionManager neo4jTransactionManager, ReactivePersonRepository repository, WrapperService wrappingComponent,  @TO@ voidMethodName:ReactiveTransactionManagerMixedDatabasesTest, Driver driver, ReactiveNeo4jClient neo4jClient, ReactiveNeo4jTransactionManager neo4jTransactionManager, ReactivePersonRepository repository, WrapperService wrappingComponent,  @AT@ 3280 @LENGTH@ 432
---DEL Modifier@@public @AT@ 3280 @LENGTH@ 6


UPD TypeDeclaration@@[public]UUIDNonceFactory, [NonceFactory] @TO@ [@Deprecated, public]UUIDNonceFactory, [NonceFactory] @AT@ 771 @LENGTH@ 137
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UUIDNonceFactory, [NonceFactory] @AT@ 992 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42268 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42268 @LENGTH@ 6


UPD MethodDeclaration@@private, static, Task<? extends Serializable>, MethodName:alterSinglePartition, ImportTableDesc tblDesc, Table table, Warehouse wh, AlterTableAddPartitionDesc addPartitionDesc, ReplicationSpec replicationSpec, org.apache.hadoop.hive.ql.metadata.Partition ptn, EximUtil.SemanticAnalyzerWrapperContext x, MetaException, IOException, HiveException,  @TO@ private, static, Task<?>, MethodName:alterSinglePartition, ImportTableDesc tblDesc, Table table, Warehouse wh, AlterTableAddPartitionDesc addPartitionDesc, ReplicationSpec replicationSpec, org.apache.hadoop.hive.ql.metadata.Partition ptn, EximUtil.SemanticAnalyzerWrapperContext x, MetaException, IOException, HiveException,  @AT@ 25574 @LENGTH@ 968
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 25589 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]FreemarkerEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]FreemarkerEndpointBuilder, [EndpointProducerBuilder] @AT@ 1397 @LENGTH@ 3550
---DEL Modifier@@static @AT@ 1404 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]SqsOperations,  @TO@ [static]SqsOperations,  @AT@ 77454 @LENGTH@ 93
---DEL Modifier@@public @AT@ 77454 @LENGTH@ 6


UPD FieldDeclaration@@protected, Task<? extends Serializable>, [task] @TO@ protected, Task<?>, [task] @AT@ 2724 @LENGTH@ 44
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2734 @LENGTH@ 28


INS IfStatement@@if (typeToRead == null && method.getReturnType().getComponentType() != null) {  typeToRead=method.getReturnType().getComponentType().getType();} @TO@ MethodDeclaration@@private, Object, MethodName:execute, MongoParameterAccessor parameterAccessor,  @AT@ 5432 @LENGTH@ 150
---INS InfixExpression@@typeToRead == null && method.getReturnType().getComponentType() != null @TO@ IfStatement@@if (typeToRead == null && method.getReturnType().getComponentType() != null) {  typeToRead=method.getReturnType().getComponentType().getType();} @AT@ 5435 @LENGTH@ 71
------INS InfixExpression@@typeToRead == null @TO@ InfixExpression@@typeToRead == null && method.getReturnType().getComponentType() != null @AT@ 5435 @LENGTH@ 18
---------INS SimpleName@@typeToRead @TO@ InfixExpression@@typeToRead == null @AT@ 5435 @LENGTH@ 10
---------INS Operator@@== @TO@ InfixExpression@@typeToRead == null @AT@ 5445 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@typeToRead == null @AT@ 5449 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@typeToRead == null && method.getReturnType().getComponentType() != null @AT@ 5453 @LENGTH@ 2
------INS InfixExpression@@method.getReturnType().getComponentType() != null @TO@ InfixExpression@@typeToRead == null && method.getReturnType().getComponentType() != null @AT@ 5457 @LENGTH@ 49
---------INS MethodInvocation@@method.getReturnType().getComponentType() @TO@ InfixExpression@@method.getReturnType().getComponentType() != null @AT@ 5457 @LENGTH@ 41
------------INS MethodInvocation@@MethodName:getReturnType:[] @TO@ MethodInvocation@@method.getReturnType().getComponentType() @AT@ 5457 @LENGTH@ 22
------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getReturnType().getComponentType() @AT@ 5457 @LENGTH@ 6
------------INS SimpleName@@MethodName:getComponentType:[] @TO@ MethodInvocation@@method.getReturnType().getComponentType() @AT@ 5480 @LENGTH@ 18
---------INS Operator@@!= @TO@ InfixExpression@@method.getReturnType().getComponentType() != null @AT@ 5498 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@method.getReturnType().getComponentType() != null @AT@ 5502 @LENGTH@ 4
---INS Block@@ThenBody:{  typeToRead=method.getReturnType().getComponentType().getType();} @TO@ IfStatement@@if (typeToRead == null && method.getReturnType().getComponentType() != null) {  typeToRead=method.getReturnType().getComponentType().getType();} @AT@ 5508 @LENGTH@ 74
------INS ExpressionStatement@@Assignment:typeToRead=method.getReturnType().getComponentType().getType() @TO@ Block@@ThenBody:{  typeToRead=method.getReturnType().getComponentType().getType();} @AT@ 5513 @LENGTH@ 65
---------INS Assignment@@typeToRead=method.getReturnType().getComponentType().getType() @TO@ ExpressionStatement@@Assignment:typeToRead=method.getReturnType().getComponentType().getType() @AT@ 5513 @LENGTH@ 64
------------INS SimpleName@@typeToRead @TO@ Assignment@@typeToRead=method.getReturnType().getComponentType().getType() @AT@ 5513 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@typeToRead=method.getReturnType().getComponentType().getType() @AT@ 5523 @LENGTH@ 1
------------INS MethodInvocation@@method.getReturnType().getComponentType().getType() @TO@ Assignment@@typeToRead=method.getReturnType().getComponentType().getType() @AT@ 5526 @LENGTH@ 51
---------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@method.getReturnType().getComponentType().getType() @AT@ 5526 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:getReturnType:[] @TO@ MethodInvocation@@method.getReturnType().getComponentType().getType() @AT@ 5526 @LENGTH@ 22
---------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getReturnType().getComponentType().getType() @AT@ 5526 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@method.getReturnType().getComponentType().getType() @AT@ 5568 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ MethodInvocation:mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2263 @LENGTH@ 133
---UPD MethodInvocation@@mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)) @TO@ mllpClient.sendFramedData(Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)) @AT@ 2263 @LENGTH@ 132
------UPD SimpleName@@MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK)] @TO@ MethodName:sendFramedData:[Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK)] @AT@ 2274 @LENGTH@ 121
---------UPD MethodInvocation@@Hl7TestMessageGenerator.generateMessage().replaceFirst("EVN","EVN" + MllpProtocolConstants.END_OF_BLOCK) @TO@ Hl7TestMessageGenerator.generateMessage().replaceFirst("PID","PID" + MllpProtocolConstants.END_OF_BLOCK) @AT@ 2289 @LENGTH@ 105
------------UPD SimpleName@@MethodName:replaceFirst:["EVN", "EVN" + MllpProtocolConstants.END_OF_BLOCK] @TO@ MethodName:replaceFirst:["PID", "PID" + MllpProtocolConstants.END_OF_BLOCK] @AT@ 2331 @LENGTH@ 63
---------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2344 @LENGTH@ 5
---------------UPD InfixExpression@@"EVN" + MllpProtocolConstants.END_OF_BLOCK @TO@ "PID" + MllpProtocolConstants.END_OF_BLOCK @AT@ 2351 @LENGTH@ 42
------------------UPD StringLiteral@@"EVN" @TO@ "PID" @AT@ 2351 @LENGTH@ 5


UPD TypeDeclaration@@[public, abstract]OAuth2ExpressionUtils,  @TO@ [@Deprecated, public, abstract]OAuth2ExpressionUtils,  @AT@ 1114 @LENGTH@ 2241
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public, abstract]OAuth2ExpressionUtils,  @AT@ 1292 @LENGTH@ 11


DEL MethodDeclaration@@public, void, MethodName:stop, Runnable callback,  @AT@ 6606 @LENGTH@ 68
---DEL Modifier@@public @AT@ 6606 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 6613 @LENGTH@ 4
---DEL SimpleName@@MethodName:stop @AT@ 6618 @LENGTH@ 4
---DEL SingleVariableDeclaration@@Runnable callback @AT@ 6623 @LENGTH@ 17
------DEL SimpleType@@Runnable @AT@ 6623 @LENGTH@ 8
------DEL SimpleName@@callback @AT@ 6632 @LENGTH@ 8
---DEL ExpressionStatement@@MethodInvocation:stop() @AT@ 6646 @LENGTH@ 7
------DEL MethodInvocation@@MethodName:stop:[] @AT@ 6646 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:callback.run() @AT@ 6656 @LENGTH@ 15
------DEL MethodInvocation@@callback.run() @AT@ 6656 @LENGTH@ 14
---------DEL SimpleName@@Name:callback @AT@ 6656 @LENGTH@ 8
---------DEL SimpleName@@MethodName:run:[] @AT@ 6665 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]SwiftEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]SwiftEndpointBuilder, [EndpointProducerBuilder] @AT@ 1446 @LENGTH@ 3230
---DEL Modifier@@static @AT@ 1453 @LENGTH@ 6


UPD VariableDeclarationStatement@@T existing=em.find(entityInformation.getJavaType(),entityInformation.getId(entity)); @TO@ T existing=(T)em.find(entity.getClass(),entityInformation.getId(entity)); @AT@ 6446 @LENGTH@ 87
---UPD VariableDeclarationFragment@@existing=em.find(entityInformation.getJavaType(),entityInformation.getId(entity)) @TO@ existing=(T)em.find(entity.getClass(),entityInformation.getId(entity)) @AT@ 6448 @LENGTH@ 84
------UPD MethodInvocation@@em.find(entityInformation.getJavaType(),entityInformation.getId(entity)) @TO@ em.find(entity.getClass(),entityInformation.getId(entity)) @AT@ 6459 @LENGTH@ 73
------INS CastExpression@@(T)em.find(entity.getClass(),entityInformation.getId(entity)) @TO@ VariableDeclarationFragment@@existing=em.find(entityInformation.getJavaType(),entityInformation.getId(entity)) @AT@ 6491 @LENGTH@ 63
---------MOV MethodInvocation@@em.find(entityInformation.getJavaType(),entityInformation.getId(entity)) @TO@ CastExpression@@(T)em.find(entity.getClass(),entityInformation.getId(entity)) @AT@ 6459 @LENGTH@ 73
------------UPD SimpleName@@MethodName:find:[entityInformation.getJavaType(), entityInformation.getId(entity)] @TO@ MethodName:find:[entity.getClass(), entityInformation.getId(entity)] @AT@ 6462 @LENGTH@ 70
---------------UPD MethodInvocation@@entityInformation.getJavaType() @TO@ entity.getClass() @AT@ 6467 @LENGTH@ 31
------------------UPD SimpleName@@Name:entityInformation @TO@ Name:entity @AT@ 6467 @LENGTH@ 17
------------------UPD SimpleName@@MethodName:getJavaType:[] @TO@ MethodName:getClass:[] @AT@ 6485 @LENGTH@ 13
---------INS SimpleType@@T @TO@ CastExpression@@(T)em.find(entity.getClass(),entityInformation.getId(entity)) @AT@ 6492 @LENGTH@ 1


INS MethodDeclaration@@private, voidMethodName:ServiceHostFunction,  @TO@ TypeDeclaration@@[public]ServiceHostFunction,  @AT@ 1486 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:ServiceHostFunction,  @AT@ 1486 @LENGTH@ 7
---INS SimpleName@@MethodName:ServiceHostFunction @TO@ MethodDeclaration@@private, voidMethodName:ServiceHostFunction,  @AT@ 1494 @LENGTH@ 19


DEL ExpressionStatement@@MethodInvocation:containerDef.getPropertyValues().add("type",new TypedStringValue(containerEle.getAttribute(TYPE))) @AT@ 5152 @LENGTH@ 100


UPD MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @TO@ public, boolean, MethodName:connect, RemoteFileConfiguration configuration, Exchange exchange, GenericFileOperationFailedException,  @AT@ 1378 @LENGTH@ 1623
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, boolean, MethodName:connect, RemoteFileConfiguration configuration, GenericFileOperationFailedException,  @AT@ 1474 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1474 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 1483 @LENGTH@ 8
---UPD VariableDeclarationStatement@@boolean answer=super.connect(configuration); @TO@ boolean answer=super.connect(configuration,exchange); @AT@ 1493 @LENGTH@ 46
------UPD VariableDeclarationFragment@@answer=super.connect(configuration) @TO@ answer=super.connect(configuration,exchange) @AT@ 1501 @LENGTH@ 37
---------UPD SuperMethodInvocation@@super.connect(configuration) @TO@ super.connect(configuration,exchange) @AT@ 1510 @LENGTH@ 28
------------UPD SimpleName@@MethodName:connect:[configuration] @TO@ MethodName:connect:[configuration, exchange] @AT@ 1516 @LENGTH@ 7
------------INS SimpleName@@exchange @TO@ SuperMethodInvocation@@super.connect(configuration) @AT@ 1592 @LENGTH@ 8
---UPD IfStatement@@if (answer) {  try {    String execProt=config.getExecProt();    Long execPbsz=config.getExecPbsz();    if (!config.isDisableSecureDataChannelDefaults()) {      if (ObjectHelper.isEmpty(execProt)) {        execProt="P";      }      if (ObjectHelper.isEmpty(execPbsz)) {        execPbsz=0L;      }    }    if (execPbsz != null) {      log.debug("FTPClient initializing with execPbsz={}",execPbsz);      getFtpClient().execPBSZ(execPbsz);    }    if (execProt != null) {      log.debug("FTPClient initializing with execProt={}",execProt);      getFtpClient().execPROT(execProt);    }  } catch (  SSLException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }catch (  IOException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }} @TO@ if (answer) {  try {    String execProt=config.getExecProt();    Long execPbsz=config.getExecPbsz();    if (!config.isDisableSecureDataChannelDefaults()) {      if (ObjectHelper.isEmpty(execProt)) {        execProt="P";      }      if (ObjectHelper.isEmpty(execPbsz)) {        execPbsz=0L;      }    }    if (execPbsz != null) {      log.debug("FTPClient initializing with execPbsz={}",execPbsz);      getFtpClient().execPBSZ(execPbsz);    }    if (execProt != null) {      log.debug("FTPClient initializing with execProt={}",execProt);      getFtpClient().execPROT(execProt);    }    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  } catch (  SSLException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }catch (  IOException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  } finally {    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  }} @AT@ 1619 @LENGTH@ 1352
------UPD Block@@ThenBody:{  try {    String execProt=config.getExecProt();    Long execPbsz=config.getExecPbsz();    if (!config.isDisableSecureDataChannelDefaults()) {      if (ObjectHelper.isEmpty(execProt)) {        execProt="P";      }      if (ObjectHelper.isEmpty(execPbsz)) {        execPbsz=0L;      }    }    if (execPbsz != null) {      log.debug("FTPClient initializing with execPbsz={}",execPbsz);      getFtpClient().execPBSZ(execPbsz);    }    if (execProt != null) {      log.debug("FTPClient initializing with execProt={}",execProt);      getFtpClient().execPROT(execProt);    }  } catch (  SSLException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }catch (  IOException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }} @TO@ ThenBody:{  try {    String execProt=config.getExecProt();    Long execPbsz=config.getExecPbsz();    if (!config.isDisableSecureDataChannelDefaults()) {      if (ObjectHelper.isEmpty(execProt)) {        execProt="P";      }      if (ObjectHelper.isEmpty(execPbsz)) {        execPbsz=0L;      }    }    if (execPbsz != null) {      log.debug("FTPClient initializing with execPbsz={}",execPbsz);      getFtpClient().execPBSZ(execPbsz);    }    if (execProt != null) {      log.debug("FTPClient initializing with execProt={}",execProt);      getFtpClient().execPROT(execProt);    }    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  } catch (  SSLException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  }catch (  IOException e) {    throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);  } finally {    if (exchange != null) {      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());      exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());    }  }} @AT@ 1631 @LENGTH@ 1340
---------UPD TryStatement@@try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} @TO@ try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} finally {  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 1645 @LENGTH@ 1316
------------INS IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ TryStatement@@try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} @AT@ 2643 @LENGTH@ 319
---------------INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2647 @LENGTH@ 16
------------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 2647 @LENGTH@ 8
------------------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 2655 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 2659 @LENGTH@ 4
---------------INS Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2665 @LENGTH@ 297
------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2761 @LENGTH@ 79
---------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2761 @LENGTH@ 78
------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2761 @LENGTH@ 16
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2761 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 2778 @LENGTH@ 61
---------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_CODE @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 2788 @LENGTH@ 27
------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 2788 @LENGTH@ 12
------------------------------INS SimpleName@@FTP_REPLY_CODE @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 2801 @LENGTH@ 14
---------------------------INS MethodInvocation@@client.getReplyCode() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 2817 @LENGTH@ 21
------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyCode() @AT@ 2817 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@client.getReplyCode() @AT@ 2824 @LENGTH@ 14
------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 2861 @LENGTH@ 83
---------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2861 @LENGTH@ 82
------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2861 @LENGTH@ 16
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2861 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 2878 @LENGTH@ 65
---------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_STRING @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 2888 @LENGTH@ 29
------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 2888 @LENGTH@ 12
------------------------------INS SimpleName@@FTP_REPLY_STRING @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 2901 @LENGTH@ 16
---------------------------INS MethodInvocation@@client.getReplyString() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 2919 @LENGTH@ 23
------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyString() @AT@ 2919 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:getReplyString:[] @TO@ MethodInvocation@@client.getReplyString() @AT@ 2926 @LENGTH@ 16
------------INS Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @TO@ TryStatement@@try {  String execProt=config.getExecProt();  Long execPbsz=config.getExecPbsz();  if (!config.isDisableSecureDataChannelDefaults()) {    if (ObjectHelper.isEmpty(execProt)) {      execProt="P";    }    if (ObjectHelper.isEmpty(execPbsz)) {      execPbsz=0L;    }  }  if (execPbsz != null) {    log.debug("FTPClient initializing with execPbsz={}",execPbsz);    getFtpClient().execPBSZ(execPbsz);  }  if (execProt != null) {    log.debug("FTPClient initializing with execProt={}",execProt);    getFtpClient().execPROT(execProt);  }} catch (SSLException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);}catch (IOException e) {  throw new GenericFileOperationFailedException(client.getReplyCode(),client.getReplyString(),e.getMessage(),e);} @AT@ 3370 @LENGTH@ 351
---------------INS IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ Block@@FinallyBody:{  if (exchange != null) {    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());    exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());  }} @AT@ 3388 @LENGTH@ 319
------------------INS InfixExpression@@exchange != null @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 3392 @LENGTH@ 16
---------------------INS SimpleName@@exchange @TO@ InfixExpression@@exchange != null @AT@ 3392 @LENGTH@ 8
---------------------INS Operator@@!= @TO@ InfixExpression@@exchange != null @AT@ 3400 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@exchange != null @AT@ 3404 @LENGTH@ 4
------------------INS Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @TO@ IfStatement@@if (exchange != null) {  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 3410 @LENGTH@ 297
---------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 3506 @LENGTH@ 79
------------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 3506 @LENGTH@ 78
---------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 3506 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 3506 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode()) @AT@ 3523 @LENGTH@ 61
------------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_CODE @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 3533 @LENGTH@ 27
---------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 3533 @LENGTH@ 12
---------------------------------INS SimpleName@@FTP_REPLY_CODE @TO@ QualifiedName@@FtpConstants.FTP_REPLY_CODE @AT@ 3546 @LENGTH@ 14
------------------------------INS MethodInvocation@@client.getReplyCode() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_CODE, client.getReplyCode()] @AT@ 3562 @LENGTH@ 21
---------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyCode() @AT@ 3562 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getReplyCode:[] @TO@ MethodInvocation@@client.getReplyCode() @AT@ 3569 @LENGTH@ 14
---------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_CODE,client.getReplyCode());  exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString());} @AT@ 3606 @LENGTH@ 83
------------------------INS MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 3606 @LENGTH@ 82
---------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 3606 @LENGTH@ 16
---------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 3606 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @TO@ MethodInvocation@@exchange.getIn().setHeader(FtpConstants.FTP_REPLY_STRING,client.getReplyString()) @AT@ 3623 @LENGTH@ 65
------------------------------INS QualifiedName@@FtpConstants.FTP_REPLY_STRING @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 3633 @LENGTH@ 29
---------------------------------INS SimpleName@@FtpConstants @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 3633 @LENGTH@ 12
---------------------------------INS SimpleName@@FTP_REPLY_STRING @TO@ QualifiedName@@FtpConstants.FTP_REPLY_STRING @AT@ 3646 @LENGTH@ 16
------------------------------INS MethodInvocation@@client.getReplyString() @TO@ SimpleName@@MethodName:setHeader:[FtpConstants.FTP_REPLY_STRING, client.getReplyString()] @AT@ 3664 @LENGTH@ 23
---------------------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.getReplyString() @AT@ 3664 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getReplyString:[] @TO@ MethodInvocation@@client.getReplyString() @AT@ 3671 @LENGTH@ 16


INS FieldDeclaration@@private, ServiceComponent, [service=new ServiceComponent()] @TO@ TypeDeclaration@@[public]ZooKeeperServiceRegistrationWithServiceComponentTest, ZooKeeperServiceRegistrationTestBase @AT@ 1287 @LENGTH@ 58
---INS Modifier@@private @TO@ FieldDeclaration@@private, ServiceComponent, [service=new ServiceComponent()] @AT@ 1287 @LENGTH@ 7
---INS SimpleType@@ServiceComponent @TO@ FieldDeclaration@@private, ServiceComponent, [service=new ServiceComponent()] @AT@ 1295 @LENGTH@ 16
---INS VariableDeclarationFragment@@service=new ServiceComponent() @TO@ FieldDeclaration@@private, ServiceComponent, [service=new ServiceComponent()] @AT@ 1312 @LENGTH@ 32
------INS SimpleName@@service @TO@ VariableDeclarationFragment@@service=new ServiceComponent() @AT@ 1312 @LENGTH@ 7
------INS ClassInstanceCreation@@ServiceComponent[] @TO@ VariableDeclarationFragment@@service=new ServiceComponent() @AT@ 1322 @LENGTH@ 22
---------MOV New@@new @TO@ ClassInstanceCreation@@ServiceComponent[] @AT@ 1505 @LENGTH@ 3
---------MOV SimpleType@@ServiceComponent @TO@ ClassInstanceCreation@@ServiceComponent[] @AT@ 1509 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @TO@ TypeDeclaration@@[public]OpenSamlAuthenticationProviderTests,  @AT@ 7278 @LENGTH@ 549
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7278 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7285 @LENGTH@ 4
---INS SimpleName@@MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7290 @LENGTH@ 64
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7364 @LENGTH@ 9
---INS VariableDeclarationStatement@@Response response=response(recipientUri,idpEntityId); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7378 @LENGTH@ 56
------INS SimpleType@@Response @TO@ VariableDeclarationStatement@@Response response=response(recipientUri,idpEntityId); @AT@ 7378 @LENGTH@ 8
------INS VariableDeclarationFragment@@response=response(recipientUri,idpEntityId) @TO@ VariableDeclarationStatement@@Response response=response(recipientUri,idpEntityId); @AT@ 7387 @LENGTH@ 46
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=response(recipientUri,idpEntityId) @AT@ 7387 @LENGTH@ 8
---------INS MethodInvocation@@response(recipientUri,idpEntityId) @TO@ VariableDeclarationFragment@@response=response(recipientUri,idpEntityId) @AT@ 7398 @LENGTH@ 35
------------INS SimpleName@@MethodName:response:[recipientUri, idpEntityId] @TO@ MethodInvocation@@response(recipientUri,idpEntityId) @AT@ 7398 @LENGTH@ 35
---------------INS SimpleName@@recipientUri @TO@ SimpleName@@MethodName:response:[recipientUri, idpEntityId] @AT@ 7407 @LENGTH@ 12
---------------INS SimpleName@@idpEntityId @TO@ SimpleName@@MethodName:response:[recipientUri, idpEntityId] @AT@ 7421 @LENGTH@ 11
---INS VariableDeclarationStatement@@Assertion assertion=defaultAssertion(); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7437 @LENGTH@ 41
------INS SimpleType@@Assertion @TO@ VariableDeclarationStatement@@Assertion assertion=defaultAssertion(); @AT@ 7437 @LENGTH@ 9
------INS VariableDeclarationFragment@@assertion=defaultAssertion() @TO@ VariableDeclarationStatement@@Assertion assertion=defaultAssertion(); @AT@ 7447 @LENGTH@ 30
---------INS SimpleName@@assertion @TO@ VariableDeclarationFragment@@assertion=defaultAssertion() @AT@ 7447 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:defaultAssertion:[] @TO@ VariableDeclarationFragment@@assertion=defaultAssertion() @AT@ 7459 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7481 @LENGTH@ 130
------INS MethodInvocation@@assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @TO@ ExpressionStatement@@MethodInvocation:assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @AT@ 7481 @LENGTH@ 129
---------INS MethodInvocation@@MethodName:getSubjectConfirmations:[] @TO@ MethodInvocation@@assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @AT@ 7481 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:getSubject:[] @TO@ MethodInvocation@@assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @AT@ 7481 @LENGTH@ 22
---------INS SimpleName@@Name:assertion @TO@ MethodInvocation@@assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @AT@ 7481 @LENGTH@ 9
---------INS SimpleName@@MethodName:forEach:[sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")] @TO@ MethodInvocation@@assertion.getSubject().getSubjectConfirmations().forEach(sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")) @AT@ 7530 @LENGTH@ 80
------------INS LambdaExpression@@sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10") @TO@ SimpleName@@MethodName:forEach:[sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10")] @AT@ 7543 @LENGTH@ 63
---------------INS VariableDeclarationFragment@@sc @TO@ LambdaExpression@@sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10") @AT@ 7543 @LENGTH@ 2
------------------INS SimpleName@@sc @TO@ VariableDeclarationFragment@@sc @AT@ 7543 @LENGTH@ 2
---------------INS MethodInvocation@@sc.getSubjectConfirmationData().setAddress("10.10.10.10") @TO@ LambdaExpression@@sc -> sc.getSubjectConfirmationData().setAddress("10.10.10.10") @AT@ 7549 @LENGTH@ 57
------------------INS MethodInvocation@@MethodName:getSubjectConfirmationData:[] @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress("10.10.10.10") @AT@ 7549 @LENGTH@ 31
------------------INS SimpleName@@Name:sc @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress("10.10.10.10") @AT@ 7549 @LENGTH@ 2
------------------INS SimpleName@@MethodName:setAddress:["10.10.10.10"] @TO@ MethodInvocation@@sc.getSubjectConfirmationData().setAddress("10.10.10.10") @AT@ 7581 @LENGTH@ 25
---------------------INS StringLiteral@@"10.10.10.10" @TO@ SimpleName@@MethodName:setAddress:["10.10.10.10"] @AT@ 7592 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:signXmlObject(assertion,assertingPartyCredentials(),recipientEntityId) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7614 @LENGTH@ 89
------INS MethodInvocation@@signXmlObject(assertion,assertingPartyCredentials(),recipientEntityId) @TO@ ExpressionStatement@@MethodInvocation:signXmlObject(assertion,assertingPartyCredentials(),recipientEntityId) @AT@ 7614 @LENGTH@ 88
---------INS SimpleName@@MethodName:signXmlObject:[assertion, assertingPartyCredentials(), recipientEntityId] @TO@ MethodInvocation@@signXmlObject(assertion,assertingPartyCredentials(),recipientEntityId) @AT@ 7614 @LENGTH@ 88
------------INS SimpleName@@assertion @TO@ SimpleName@@MethodName:signXmlObject:[assertion, assertingPartyCredentials(), recipientEntityId] @AT@ 7633 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:assertingPartyCredentials:[] @TO@ SimpleName@@MethodName:signXmlObject:[assertion, assertingPartyCredentials(), recipientEntityId] @AT@ 7648 @LENGTH@ 27
------------INS SimpleName@@recipientEntityId @TO@ SimpleName@@MethodName:signXmlObject:[assertion, assertingPartyCredentials(), recipientEntityId] @AT@ 7681 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:response.getAssertions().add(assertion) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7706 @LENGTH@ 40
------INS MethodInvocation@@response.getAssertions().add(assertion) @TO@ ExpressionStatement@@MethodInvocation:response.getAssertions().add(assertion) @AT@ 7706 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:getAssertions:[] @TO@ MethodInvocation@@response.getAssertions().add(assertion) @AT@ 7706 @LENGTH@ 24
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getAssertions().add(assertion) @AT@ 7706 @LENGTH@ 8
---------INS SimpleName@@MethodName:add:[assertion] @TO@ MethodInvocation@@response.getAssertions().add(assertion) @AT@ 7731 @LENGTH@ 14
------------INS SimpleName@@assertion @TO@ SimpleName@@MethodName:add:[assertion] @AT@ 7735 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:token=responseXml(response,idpEntityId) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7749 @LENGTH@ 43
------INS Assignment@@token=responseXml(response,idpEntityId) @TO@ ExpressionStatement@@Assignment:token=responseXml(response,idpEntityId) @AT@ 7749 @LENGTH@ 42
---------INS SimpleName@@token @TO@ Assignment@@token=responseXml(response,idpEntityId) @AT@ 7749 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@token=responseXml(response,idpEntityId) @AT@ 7754 @LENGTH@ 1
---------INS MethodInvocation@@responseXml(response,idpEntityId) @TO@ Assignment@@token=responseXml(response,idpEntityId) @AT@ 7757 @LENGTH@ 34
------------INS SimpleName@@MethodName:responseXml:[response, idpEntityId] @TO@ MethodInvocation@@responseXml(response,idpEntityId) @AT@ 7757 @LENGTH@ 34
---------------INS SimpleName@@response @TO@ SimpleName@@MethodName:responseXml:[response, idpEntityId] @AT@ 7769 @LENGTH@ 8
---------------INS SimpleName@@idpEntityId @TO@ SimpleName@@MethodName:responseXml:[response, idpEntityId] @AT@ 7779 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:provider.authenticate(token) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenAssertionContainsValidationAddressThenItSucceeds, Exception,  @AT@ 7795 @LENGTH@ 29
------INS MethodInvocation@@provider.authenticate(token) @TO@ ExpressionStatement@@MethodInvocation:provider.authenticate(token) @AT@ 7795 @LENGTH@ 28
---------INS SimpleName@@Name:provider @TO@ MethodInvocation@@provider.authenticate(token) @AT@ 7795 @LENGTH@ 8
---------INS SimpleName@@MethodName:authenticate:[token] @TO@ MethodInvocation@@provider.authenticate(token) @AT@ 7804 @LENGTH@ 19
------------INS SimpleName@@token @TO@ SimpleName@@MethodName:authenticate:[token] @AT@ 7817 @LENGTH@ 5


UPD ReturnStatement@@MethodInvocation:handleSyslogAuditEvent(event,param) @TO@ MethodInvocation:handleUnknownEvent(event,param) @AT@ 4254 @LENGTH@ 44
---UPD MethodInvocation@@handleSyslogAuditEvent(event,param) @TO@ handleUnknownEvent(event,param) @AT@ 4261 @LENGTH@ 36
------UPD SimpleName@@MethodName:handleSyslogAuditEvent:[event, param] @TO@ MethodName:handleUnknownEvent:[event, param] @AT@ 4261 @LENGTH@ 36


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 2057 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 2057 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 2057 @LENGTH@ 56
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 2070 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 2081 @LENGTH@ 5


UPD ForStatement@@for (int i=0; i < 53; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  template.receiveNoWait(e);} @TO@ for (int i=0; i <= 55; i++) {  Endpoint e=context.getEndpoint("direct:queue:" + i);  template.receiveNoWait(e);} @AT@ 1937 @LENGTH@ 146
---UPD InfixExpression@@i < 53 @TO@ i <= 55 @AT@ 1953 @LENGTH@ 6
------UPD Operator@@< @TO@ <= @AT@ 1954 @LENGTH@ 1
------UPD NumberLiteral@@53 @TO@ 55 @AT@ 1957 @LENGTH@ 2


UPD TypeDeclaration@@[public]InvalidSignatureException, RuntimeException @TO@ [@Deprecated, public]InvalidSignatureException, RuntimeException @AT@ 694 @LENGTH@ 152
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]InvalidSignatureException, RuntimeException @AT@ 872 @LENGTH@ 11


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]ClientRegistrationException, RuntimeException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]ClientRegistrationException, RuntimeException @AT@ 709 @LENGTH@ 259
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]ClientRegistrationException, RuntimeException @AT@ 915 @LENGTH@ 11


INS MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringRunner.class), @WebAppConfiguration, @ContextConfiguration(classes={RepositoryRestMvcConfiguration.class,DelegatingWebMvcConfiguration.class}), public, abstract]AbstractWebIntegrationTests,  @AT@ 4567 @LENGTH@ 490
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4567 @LENGTH@ 9
---INS SimpleType@@MockHttpServletResponse @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4577 @LENGTH@ 23
---INS SimpleName@@MethodName:putOnlyExpect5XXStatus @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4601 @LENGTH@ 22
---INS SingleVariableDeclaration@@Link link @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4624 @LENGTH@ 9
------INS SimpleType@@Link @TO@ SingleVariableDeclaration@@Link link @AT@ 4624 @LENGTH@ 4
------INS SimpleName@@link @TO@ SingleVariableDeclaration@@Link link @AT@ 4629 @LENGTH@ 4
---INS SingleVariableDeclaration@@Object payload @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4635 @LENGTH@ 14
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object payload @AT@ 4635 @LENGTH@ 6
------INS SimpleName@@payload @TO@ SingleVariableDeclaration@@Object payload @AT@ 4642 @LENGTH@ 7
---INS SingleVariableDeclaration@@MediaType mediaType @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4651 @LENGTH@ 19
------INS SimpleType@@MediaType @TO@ SingleVariableDeclaration@@MediaType mediaType @AT@ 4651 @LENGTH@ 9
------INS SimpleName@@mediaType @TO@ SingleVariableDeclaration@@MediaType mediaType @AT@ 4661 @LENGTH@ 9
---INS SimpleType@@Exception @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4682 @LENGTH@ 9
---INS VariableDeclarationStatement@@String href=link.isTemplated() ? link.expand().getHref() : link.getHref(); @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4697 @LENGTH@ 76
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String href=link.isTemplated() ? link.expand().getHref() : link.getHref(); @AT@ 4697 @LENGTH@ 6
------INS VariableDeclarationFragment@@href=link.isTemplated() ? link.expand().getHref() : link.getHref() @TO@ VariableDeclarationStatement@@String href=link.isTemplated() ? link.expand().getHref() : link.getHref(); @AT@ 4704 @LENGTH@ 68
---------INS SimpleName@@href @TO@ VariableDeclarationFragment@@href=link.isTemplated() ? link.expand().getHref() : link.getHref() @AT@ 4704 @LENGTH@ 4
---------INS ConditionalExpression@@link.isTemplated() ? link.expand().getHref() : link.getHref() @TO@ VariableDeclarationFragment@@href=link.isTemplated() ? link.expand().getHref() : link.getHref() @AT@ 4711 @LENGTH@ 61
------------INS MethodInvocation@@link.isTemplated() @TO@ ConditionalExpression@@link.isTemplated() ? link.expand().getHref() : link.getHref() @AT@ 4711 @LENGTH@ 18
---------------INS SimpleName@@Name:link @TO@ MethodInvocation@@link.isTemplated() @AT@ 4711 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isTemplated:[] @TO@ MethodInvocation@@link.isTemplated() @AT@ 4716 @LENGTH@ 13
------------INS MethodInvocation@@link.expand().getHref() @TO@ ConditionalExpression@@link.isTemplated() ? link.expand().getHref() : link.getHref() @AT@ 4732 @LENGTH@ 23
---------------INS MethodInvocation@@MethodName:expand:[] @TO@ MethodInvocation@@link.expand().getHref() @AT@ 4732 @LENGTH@ 13
---------------INS SimpleName@@Name:link @TO@ MethodInvocation@@link.expand().getHref() @AT@ 4732 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@link.expand().getHref() @AT@ 4746 @LENGTH@ 9
------------INS MethodInvocation@@link.getHref() @TO@ ConditionalExpression@@link.isTemplated() ? link.expand().getHref() : link.getHref() @AT@ 4758 @LENGTH@ 14
---------------INS SimpleName@@Name:link @TO@ MethodInvocation@@link.getHref() @AT@ 4758 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@link.getHref() @AT@ 4763 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse(); @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4777 @LENGTH@ 181
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse(); @AT@ 4777 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse(); @AT@ 4801 @LENGTH@ 156
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4801 @LENGTH@ 8
---------INS MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @TO@ VariableDeclarationFragment@@response=mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4812 @LENGTH@ 145
------------INS MethodInvocation@@MethodName:andReturn:[] @TO@ MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4812 @LENGTH@ 131
------------INS MethodInvocation@@MethodName:andExpect:[status().is5xxServerError()] @TO@ MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4812 @LENGTH@ 119
---------------INS MethodInvocation@@status().is5xxServerError() @TO@ MethodInvocation@@MethodName:andExpect:[status().is5xxServerError()] @AT@ 4903 @LENGTH@ 27
------------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().is5xxServerError() @AT@ 4903 @LENGTH@ 8
------------------INS SimpleName@@MethodName:is5xxServerError:[] @TO@ MethodInvocation@@status().is5xxServerError() @AT@ 4912 @LENGTH@ 18
------------INS MethodInvocation@@MethodName:perform:[put(href).content(payload.toString()).contentType(mediaType)] @TO@ MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4812 @LENGTH@ 73
---------------INS MethodInvocation@@put(href).content(payload.toString()).contentType(mediaType) @TO@ MethodInvocation@@MethodName:perform:[put(href).content(payload.toString()).contentType(mediaType)] @AT@ 4824 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:content:[payload.toString()] @TO@ MethodInvocation@@put(href).content(payload.toString()).contentType(mediaType) @AT@ 4824 @LENGTH@ 37
---------------------INS MethodInvocation@@payload.toString() @TO@ MethodInvocation@@MethodName:content:[payload.toString()] @AT@ 4842 @LENGTH@ 18
------------------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.toString() @AT@ 4842 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@payload.toString() @AT@ 4850 @LENGTH@ 10
------------------INS MethodInvocation@@MethodName:put:[href] @TO@ MethodInvocation@@put(href).content(payload.toString()).contentType(mediaType) @AT@ 4824 @LENGTH@ 9
---------------------INS SimpleName@@href @TO@ MethodInvocation@@MethodName:put:[href] @AT@ 4828 @LENGTH@ 4
------------------INS SimpleName@@MethodName:contentType:[mediaType] @TO@ MethodInvocation@@put(href).content(payload.toString()).contentType(mediaType) @AT@ 4862 @LENGTH@ 22
---------------------INS SimpleName@@mediaType @TO@ SimpleName@@MethodName:contentType:[mediaType] @AT@ 4874 @LENGTH@ 9
------------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4812 @LENGTH@ 3
------------INS SimpleName@@MethodName:getResponse:[] @TO@ MethodInvocation@@mvc.perform(put(href).content(payload.toString()).contentType(mediaType)).andExpect(status().is5xxServerError()).andReturn().getResponse() @AT@ 4944 @LENGTH@ 13
---INS ReturnStatement@@ConditionalExpression:StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @TO@ MethodDeclaration@@protected, MockHttpServletResponse, MethodName:putOnlyExpect5XXStatus, Link link, Object payload, MediaType mediaType, Exception,  @AT@ 4962 @LENGTH@ 92
------INS ConditionalExpression@@StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @TO@ ReturnStatement@@ConditionalExpression:StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @AT@ 4969 @LENGTH@ 84
---------INS MethodInvocation@@StringUtils.hasText(response.getContentAsString()) @TO@ ConditionalExpression@@StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @AT@ 4969 @LENGTH@ 50
------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(response.getContentAsString()) @AT@ 4969 @LENGTH@ 11
------------INS SimpleName@@MethodName:hasText:[response.getContentAsString()] @TO@ MethodInvocation@@StringUtils.hasText(response.getContentAsString()) @AT@ 4981 @LENGTH@ 38
---------------INS MethodInvocation@@response.getContentAsString() @TO@ SimpleName@@MethodName:hasText:[response.getContentAsString()] @AT@ 4989 @LENGTH@ 29
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 4989 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 4998 @LENGTH@ 20
---------INS SimpleName@@response @TO@ ConditionalExpression@@StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @AT@ 5022 @LENGTH@ 8
---------INS MethodInvocation@@client.request(link) @TO@ ConditionalExpression@@StringUtils.hasText(response.getContentAsString()) ? response : client.request(link) @AT@ 5033 @LENGTH@ 20
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.request(link) @AT@ 5033 @LENGTH@ 6
------------INS SimpleName@@MethodName:request:[link] @TO@ MethodInvocation@@client.request(link) @AT@ 5040 @LENGTH@ 13
---------------INS SimpleName@@link @TO@ SimpleName@@MethodName:request:[link] @AT@ 5048 @LENGTH@ 4


UPD MethodDeclaration@@default, ZooKeeperEndpointBuilder, MethodName:zooKeeper, String path,  @TO@ default, ZooKeeperEndpointBuilder, MethodName:zookeeper, String path,  @AT@ 24172 @LENGTH@ 394
---UPD SimpleName@@MethodName:zooKeeper @TO@ MethodName:zookeeper @AT@ 24205 @LENGTH@ 9


UPD TypeDeclaration@@[public]AccessTokenConverter,  @TO@ [@Deprecated, public]AccessTokenConverter,  @AT@ 884 @LENGTH@ 1358
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AccessTokenConverter,  @AT@ 1061 @LENGTH@ 11


UPD MethodDeclaration@@public, static, void, MethodName:processSkewJoin, JoinOperator joinOp, Task<? extends Serializable> currTask, ReduceWork reduceWork, ParseContext parseCtx, SemanticException,  @TO@ public, static, void, MethodName:processSkewJoin, JoinOperator joinOp, Task<?> currTask, ReduceWork reduceWork, ParseContext parseCtx, SemanticException,  @AT@ 3621 @LENGTH@ 12692
---UPD SingleVariableDeclaration@@Task<? extends Serializable> currTask @TO@ Task<?> currTask @AT@ 3677 @LENGTH@ 37
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 3677 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> children=currTask.getChildTasks(); @TO@ List<Task<?>> children=currTask.getChildTasks(); @AT@ 4039 @LENGTH@ 71
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 4039 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 4044 @LENGTH@ 28
---UPD VariableDeclarationStatement@@HashMap<Path,Task<? extends Serializable>> bigKeysDirToTaskMap=new HashMap<Path,Task<? extends Serializable>>(); @TO@ HashMap<Path,Task<?>> bigKeysDirToTaskMap=new HashMap<Path,Task<?>>(); @AT@ 9302 @LENGTH@ 124
------UPD ParameterizedType@@HashMap<Path,Task<? extends Serializable>> @TO@ HashMap<Path,Task<?>> @AT@ 9302 @LENGTH@ 43
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9316 @LENGTH@ 28
------UPD VariableDeclarationFragment@@bigKeysDirToTaskMap=new HashMap<Path,Task<? extends Serializable>>() @TO@ bigKeysDirToTaskMap=new HashMap<Path,Task<?>>() @AT@ 9346 @LENGTH@ 79
---------UPD ClassInstanceCreation@@HashMap<Path,Task<? extends Serializable>>[] @TO@ HashMap<Path,Task<?>>[] @AT@ 9376 @LENGTH@ 49
------------UPD ParameterizedType@@HashMap<Path,Task<? extends Serializable>> @TO@ HashMap<Path,Task<?>> @AT@ 9380 @LENGTH@ 43
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9394 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> listTasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> listTasks=new ArrayList<Task<?>>(); @AT@ 9497 @LENGTH@ 93
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 9497 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9502 @LENGTH@ 28
------UPD VariableDeclarationFragment@@listTasks=new ArrayList<Task<? extends Serializable>>() @TO@ listTasks=new ArrayList<Task<?>>() @AT@ 9532 @LENGTH@ 57
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 9544 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 9548 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9558 @LENGTH@ 28
---UPD ForStatement@@for (int i=0; i < numAliases - 1; i++) {  Byte src=tags[i];  HiveConf hiveConf=new HiveConf(parseCtx.getConf(),GenSparkSkewJoinProcessor.class);  SparkWork sparkWork=new SparkWork(parseCtx.getConf().getVar(HiveConf.ConfVars.HIVEQUERYID));  Task<? extends Serializable> skewJoinMapJoinTask=TaskFactory.get(sparkWork);  skewJoinMapJoinTask.setFetchSource(currTask.isFetchSource());  Operator<? extends OperatorDesc>[] parentOps=new TableScanOperator[tags.length];  for (int k=0; k < tags.length; k++) {    Operator<? extends OperatorDesc> ts=GenMapRedUtils.createTemporaryTableScanOperator(joinOp.getCompilationOpContext(),rowSchemaList.get((byte)k));    ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k));    parentOps[k]=ts;  }  String dumpFilePrefix="mapfile" + PlanUtils.getCountForMapJoinDumpFilePrefix();  MapJoinDesc mapJoinDescriptor=new MapJoinDesc(newJoinKeys,keyTblDesc,newJoinValues,newJoinValueTblDesc,newJoinValueTblDesc,joinDescriptor.getOutputColumnNames(),i,joinDescriptor.getConds(),joinDescriptor.getFilters(),joinDescriptor.getNoOuterJoin(),dumpFilePrefix,joinDescriptor.getMemoryMonitorInfo(),joinDescriptor.getInMemoryDataSize());  mapJoinDescriptor.setTagOrder(tags);  mapJoinDescriptor.setHandleSkewJoin(false);  mapJoinDescriptor.setNullSafes(joinDescriptor.getNullSafes());  mapJoinDescriptor.setColumnExprMap(joinDescriptor.getColumnExprMap());  MapJoinOperator mapJoinOp=(MapJoinOperator)OperatorFactory.getAndMakeChild(joinOp.getCompilationOpContext(),mapJoinDescriptor,null,parentOps);  List<Operator<?>> reducerList=new ArrayList<Operator<?>>();  reducerList.add(reduceWork.getReducer());  Operator<? extends OperatorDesc> reducer=SerializationUtilities.cloneOperatorTree(reducerList).get(0);  Preconditions.checkArgument(reducer instanceof JoinOperator,"Reducer should be join operator, but actually is " + reducer.getName());  JoinOperator cloneJoinOp=(JoinOperator)reducer;  List<Operator<? extends OperatorDesc>> childOps=cloneJoinOp.getChildOperators();  for (  Operator<? extends OperatorDesc> childOp : childOps) {    childOp.replaceParent(cloneJoinOp,mapJoinOp);  }  mapJoinOp.setChildOperators(childOps);  setMemUsage(mapJoinOp,skewJoinMapJoinTask,parseCtx);  MapWork bigMapWork=null;  Map<Byte,Path> smallTblDirs=smallKeysDirMap.get(src);  for (int j=0; j < tags.length; j++) {    MapWork mapWork=PlanUtils.getMapRedWork().getMapWork();    sparkWork.add(mapWork);    boolean mapperCannotSpanPartns=parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVE_MAPPER_CANNOT_SPAN_MULTIPLE_PARTITIONS);    mapWork.setMapperCannotSpanPartns(mapperCannotSpanPartns);    Operator<? extends OperatorDesc> tableScan=parentOps[j];    String alias=tags[j].toString();    ArrayList<String> aliases=new ArrayList<String>();    aliases.add(alias);    Path path;    if (j == i) {      path=bigKeysDirMap.get(tags[j]);      bigKeysDirToTaskMap.put(path,skewJoinMapJoinTask);      bigMapWork=mapWork;    } else {      path=smallTblDirs.get(tags[j]);    }    mapWork.addPathToAlias(path,aliases);    mapWork.getAliasToWork().put(alias,tableScan);    PartitionDesc partitionDesc=new PartitionDesc(tableDescList.get(tags[j]),null);    mapWork.addPathToPartitionInfo(path,partitionDesc);    mapWork.getAliasToPartnInfo().put(alias,partitionDesc);    mapWork.setName("Map " + GenSparkUtils.getUtils().getNextSeqNumber());  }  Preconditions.checkArgument(bigMapWork != null,"Haven't identified big dir MapWork");  bigMapWork.setNumMapTasks(HiveConf.getIntVar(hiveConf,HiveConf.ConfVars.HIVESKEWJOINMAPJOINNUMMAPTASK));  bigMapWork.setMinSplitSize(HiveConf.getLongVar(hiveConf,HiveConf.ConfVars.HIVESKEWJOINMAPJOINMINSPLIT));  bigMapWork.setInputformat(HiveInputFormat.class.getName());  for (  BaseWork work : sparkWork.getRoots()) {    Preconditions.checkArgument(work instanceof MapWork,"All root work should be MapWork, but got " + work.getClass().getSimpleName());    if (work != bigMapWork) {      sparkWork.connect(work,bigMapWork,new SparkEdgeProperty(SparkEdgeProperty.SHUFFLE_NONE));    }  }  for (int j=0; j < tags.length; j++) {    if (j != i) {      insertSHTS(tags[j],(TableScanOperator)parentOps[j],bigMapWork);    }  }  listWorks.add(skewJoinMapJoinTask.getWork());  listTasks.add(skewJoinMapJoinTask);} @TO@ for (int i=0; i < numAliases - 1; i++) {  Byte src=tags[i];  HiveConf hiveConf=new HiveConf(parseCtx.getConf(),GenSparkSkewJoinProcessor.class);  SparkWork sparkWork=new SparkWork(parseCtx.getConf().getVar(HiveConf.ConfVars.HIVEQUERYID));  Task<?> skewJoinMapJoinTask=TaskFactory.get(sparkWork);  skewJoinMapJoinTask.setFetchSource(currTask.isFetchSource());  Operator<? extends OperatorDesc>[] parentOps=new TableScanOperator[tags.length];  for (int k=0; k < tags.length; k++) {    Operator<? extends OperatorDesc> ts=GenMapRedUtils.createTemporaryTableScanOperator(joinOp.getCompilationOpContext(),rowSchemaList.get((byte)k));    ((TableScanOperator)ts).setTableDescSkewJoin(tableDescList.get((byte)k));    parentOps[k]=ts;  }  String dumpFilePrefix="mapfile" + PlanUtils.getCountForMapJoinDumpFilePrefix();  MapJoinDesc mapJoinDescriptor=new MapJoinDesc(newJoinKeys,keyTblDesc,newJoinValues,newJoinValueTblDesc,newJoinValueTblDesc,joinDescriptor.getOutputColumnNames(),i,joinDescriptor.getConds(),joinDescriptor.getFilters(),joinDescriptor.getNoOuterJoin(),dumpFilePrefix,joinDescriptor.getMemoryMonitorInfo(),joinDescriptor.getInMemoryDataSize());  mapJoinDescriptor.setTagOrder(tags);  mapJoinDescriptor.setHandleSkewJoin(false);  mapJoinDescriptor.setNullSafes(joinDescriptor.getNullSafes());  mapJoinDescriptor.setColumnExprMap(joinDescriptor.getColumnExprMap());  MapJoinOperator mapJoinOp=(MapJoinOperator)OperatorFactory.getAndMakeChild(joinOp.getCompilationOpContext(),mapJoinDescriptor,null,parentOps);  List<Operator<?>> reducerList=new ArrayList<Operator<?>>();  reducerList.add(reduceWork.getReducer());  Operator<? extends OperatorDesc> reducer=SerializationUtilities.cloneOperatorTree(reducerList).get(0);  Preconditions.checkArgument(reducer instanceof JoinOperator,"Reducer should be join operator, but actually is " + reducer.getName());  JoinOperator cloneJoinOp=(JoinOperator)reducer;  List<Operator<? extends OperatorDesc>> childOps=cloneJoinOp.getChildOperators();  for (  Operator<? extends OperatorDesc> childOp : childOps) {    childOp.replaceParent(cloneJoinOp,mapJoinOp);  }  mapJoinOp.setChildOperators(childOps);  setMemUsage(mapJoinOp,skewJoinMapJoinTask,parseCtx);  MapWork bigMapWork=null;  Map<Byte,Path> smallTblDirs=smallKeysDirMap.get(src);  for (int j=0; j < tags.length; j++) {    MapWork mapWork=PlanUtils.getMapRedWork().getMapWork();    sparkWork.add(mapWork);    boolean mapperCannotSpanPartns=parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVE_MAPPER_CANNOT_SPAN_MULTIPLE_PARTITIONS);    mapWork.setMapperCannotSpanPartns(mapperCannotSpanPartns);    Operator<? extends OperatorDesc> tableScan=parentOps[j];    String alias=tags[j].toString();    ArrayList<String> aliases=new ArrayList<String>();    aliases.add(alias);    Path path;    if (j == i) {      path=bigKeysDirMap.get(tags[j]);      bigKeysDirToTaskMap.put(path,skewJoinMapJoinTask);      bigMapWork=mapWork;    } else {      path=smallTblDirs.get(tags[j]);    }    mapWork.addPathToAlias(path,aliases);    mapWork.getAliasToWork().put(alias,tableScan);    PartitionDesc partitionDesc=new PartitionDesc(tableDescList.get(tags[j]),null);    mapWork.addPathToPartitionInfo(path,partitionDesc);    mapWork.getAliasToPartnInfo().put(alias,partitionDesc);    mapWork.setName("Map " + GenSparkUtils.getUtils().getNextSeqNumber());  }  Preconditions.checkArgument(bigMapWork != null,"Haven't identified big dir MapWork");  bigMapWork.setNumMapTasks(HiveConf.getIntVar(hiveConf,HiveConf.ConfVars.HIVESKEWJOINMAPJOINNUMMAPTASK));  bigMapWork.setMinSplitSize(HiveConf.getLongVar(hiveConf,HiveConf.ConfVars.HIVESKEWJOINMAPJOINMINSPLIT));  bigMapWork.setInputformat(HiveInputFormat.class.getName());  for (  BaseWork work : sparkWork.getRoots()) {    Preconditions.checkArgument(work instanceof MapWork,"All root work should be MapWork, but got " + work.getClass().getSimpleName());    if (work != bigMapWork) {      sparkWork.connect(work,bigMapWork,new SparkEdgeProperty(SparkEdgeProperty.SHUFFLE_NONE));    }  }  for (int j=0; j < tags.length; j++) {    if (j != i) {      insertSHTS(tags[j],(TableScanOperator)parentOps[j],bigMapWork);    }  }  listWorks.add(skewJoinMapJoinTask.getWork());  listTasks.add(skewJoinMapJoinTask);} @AT@ 9595 @LENGTH@ 5591
------UPD VariableDeclarationStatement@@Task<? extends Serializable> skewJoinMapJoinTask=TaskFactory.get(sparkWork); @TO@ Task<?> skewJoinMapJoinTask=TaskFactory.get(sparkWork); @AT@ 9874 @LENGTH@ 78
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 9874 @LENGTH@ 28
---UPD IfStatement@@if (children != null) {  for (  Task<? extends Serializable> tsk : listTasks) {    for (    Task<? extends Serializable> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>());  for (  Task<? extends Serializable> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);  for (  Task<? extends Serializable> oldChild : children) {    listWorks.add(oldChild.getWork());  }} @TO@ if (children != null) {  for (  Task<?> tsk : listTasks) {    for (    Task<?> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<?>>());  for (  Task<?> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);  for (  Task<?> oldChild : children) {    listWorks.add(oldChild.getWork());  }} @AT@ 15191 @LENGTH@ 561
------UPD Block@@ThenBody:{  for (  Task<? extends Serializable> tsk : listTasks) {    for (    Task<? extends Serializable> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>());  for (  Task<? extends Serializable> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);  for (  Task<? extends Serializable> oldChild : children) {    listWorks.add(oldChild.getWork());  }} @TO@ ThenBody:{  for (  Task<?> tsk : listTasks) {    for (    Task<?> oldChild : children) {      tsk.addDependentTask(oldChild);    }  }  currTask.setChildTasks(new ArrayList<Task<?>>());  for (  Task<?> oldChild : children) {    oldChild.getParentTasks().remove(currTask);  }  listTasks.addAll(children);  for (  Task<?> oldChild : children) {    listWorks.add(oldChild.getWork());  }} @AT@ 15213 @LENGTH@ 539
---------UPD EnhancedForStatement@@for (Task<? extends Serializable> tsk : listTasks) {  for (  Task<? extends Serializable> oldChild : children) {    tsk.addDependentTask(oldChild);  }} @TO@ for (Task<?> tsk : listTasks) {  for (  Task<?> oldChild : children) {    tsk.addDependentTask(oldChild);  }} @AT@ 15221 @LENGTH@ 177
------------UPD SingleVariableDeclaration@@Task<? extends Serializable> tsk @TO@ Task<?> tsk @AT@ 15226 @LENGTH@ 32
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15226 @LENGTH@ 28
------------UPD EnhancedForStatement@@for (Task<? extends Serializable> oldChild : children) {  tsk.addDependentTask(oldChild);} @TO@ for (Task<?> oldChild : children) {  tsk.addDependentTask(oldChild);} @AT@ 15282 @LENGTH@ 108
---------------UPD SingleVariableDeclaration@@Task<? extends Serializable> oldChild @TO@ Task<?> oldChild @AT@ 15287 @LENGTH@ 37
------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15287 @LENGTH@ 28
---------UPD ExpressionStatement@@MethodInvocation:currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ MethodInvocation:currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 15405 @LENGTH@ 70
------------UPD MethodInvocation@@currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 15405 @LENGTH@ 69
---------------UPD SimpleName@@MethodName:setChildTasks:[new ArrayList<Task<? extends Serializable>>()] @TO@ MethodName:setChildTasks:[new ArrayList<Task<?>>()] @AT@ 15414 @LENGTH@ 60
------------------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 15428 @LENGTH@ 45
---------------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 15432 @LENGTH@ 39
------------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15442 @LENGTH@ 28
---------UPD EnhancedForStatement@@for (Task<? extends Serializable> oldChild : children) {  oldChild.getParentTasks().remove(currTask);} @TO@ for (Task<?> oldChild : children) {  oldChild.getParentTasks().remove(currTask);} @AT@ 15482 @LENGTH@ 116
------------UPD SingleVariableDeclaration@@Task<? extends Serializable> oldChild @TO@ Task<?> oldChild @AT@ 15487 @LENGTH@ 37
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15487 @LENGTH@ 28
---------UPD EnhancedForStatement@@for (Task<? extends Serializable> oldChild : children) {  listWorks.add(oldChild.getWork());} @TO@ for (Task<?> oldChild : children) {  listWorks.add(oldChild.getWork());} @AT@ 15639 @LENGTH@ 107
------------UPD SingleVariableDeclaration@@Task<? extends Serializable> oldChild @TO@ Task<?> oldChild @AT@ 15644 @LENGTH@ 37
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 15644 @LENGTH@ 28
---UPD ExpressionStatement@@MethodInvocation:currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ MethodInvocation:currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 16200 @LENGTH@ 70
------UPD MethodInvocation@@currTask.setChildTasks(new ArrayList<Task<? extends Serializable>>()) @TO@ currTask.setChildTasks(new ArrayList<Task<?>>()) @AT@ 16200 @LENGTH@ 69
---------UPD SimpleName@@MethodName:setChildTasks:[new ArrayList<Task<? extends Serializable>>()] @TO@ MethodName:setChildTasks:[new ArrayList<Task<?>>()] @AT@ 16209 @LENGTH@ 60
------------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 16223 @LENGTH@ 45
---------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 16227 @LENGTH@ 39
------------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 16237 @LENGTH@ 28


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1484 @LENGTH@ 1212
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1491 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1496 @LENGTH@ 28


INS MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @SecurityTestExecutionListeners, public]GlobalMethodSecurityConfigurationTests,  @AT@ 17143 @LENGTH@ 540
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17143 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17150 @LENGTH@ 4
---INS SimpleName@@MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17155 @LENGTH@ 67
---INS ExpressionStatement@@MethodInvocation:this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17229 @LENGTH@ 75
------INS MethodInvocation@@this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @AT@ 17229 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:register:[CustomMetadataSourceProxylessConfig.class] @TO@ MethodInvocation@@this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @AT@ 17229 @LENGTH@ 63
------------INS TypeLiteral@@CustomMetadataSourceProxylessConfig.class @TO@ MethodInvocation@@MethodName:register:[CustomMetadataSourceProxylessConfig.class] @AT@ 17250 @LENGTH@ 41
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @AT@ 17229 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 17229 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 17234 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(CustomMetadataSourceProxylessConfig.class).autowire() @AT@ 17293 @LENGTH@ 10
---INS VariableDeclarationStatement@@MethodSecurityInterceptor methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class); @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17307 @LENGTH@ 136
------INS SimpleType@@MethodSecurityInterceptor @TO@ VariableDeclarationStatement@@MethodSecurityInterceptor methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class); @AT@ 17307 @LENGTH@ 25
------INS VariableDeclarationFragment@@methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @TO@ VariableDeclarationStatement@@MethodSecurityInterceptor methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class); @AT@ 17333 @LENGTH@ 109
---------INS SimpleName@@methodInterceptor @TO@ VariableDeclarationFragment@@methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17333 @LENGTH@ 17
---------INS CastExpression@@(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @TO@ VariableDeclarationFragment@@methodInterceptor=(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17357 @LENGTH@ 85
------------INS SimpleType@@MethodSecurityInterceptor @TO@ CastExpression@@(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17358 @LENGTH@ 25
------------INS MethodInvocation@@this.spring.getContext().getBean(MethodInterceptor.class) @TO@ CastExpression@@(MethodSecurityInterceptor)this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17385 @LENGTH@ 57
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17385 @LENGTH@ 24
---------------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17385 @LENGTH@ 11
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 17385 @LENGTH@ 4
------------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 17390 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBean:[MethodInterceptor.class] @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodInterceptor.class) @AT@ 17410 @LENGTH@ 32
------------------INS TypeLiteral@@MethodInterceptor.class @TO@ SimpleName@@MethodName:getBean:[MethodInterceptor.class] @AT@ 17418 @LENGTH@ 23
---INS VariableDeclarationStatement@@MethodSecurityMetadataSource methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class); @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17446 @LENGTH@ 133
------INS SimpleType@@MethodSecurityMetadataSource @TO@ VariableDeclarationStatement@@MethodSecurityMetadataSource methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class); @AT@ 17446 @LENGTH@ 28
------INS VariableDeclarationFragment@@methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @TO@ VariableDeclarationStatement@@MethodSecurityMetadataSource methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class); @AT@ 17475 @LENGTH@ 103
---------INS SimpleName@@methodSecurityMetadataSource @TO@ VariableDeclarationFragment@@methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @AT@ 17475 @LENGTH@ 28
---------INS MethodInvocation@@this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @TO@ VariableDeclarationFragment@@methodSecurityMetadataSource=this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @AT@ 17510 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @AT@ 17510 @LENGTH@ 24
------------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @AT@ 17510 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 17510 @LENGTH@ 4
---------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 17515 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBean:[MethodSecurityMetadataSource.class] @TO@ MethodInvocation@@this.spring.getContext().getBean(MethodSecurityMetadataSource.class) @AT@ 17535 @LENGTH@ 43
---------------INS TypeLiteral@@MethodSecurityMetadataSource.class @TO@ SimpleName@@MethodName:getBean:[MethodSecurityMetadataSource.class] @AT@ 17543 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertThat(methodInterceptor.getSecurityMetadataSource()).isSameAs(methodSecurityMetadataSource) @TO@ MethodDeclaration@@public, void, MethodName:methodSecurityInterceptorUsesMetadataSourceBeanWhenProxyingDisabled,  @AT@ 17583 @LENGTH@ 97
------INS MethodInvocation@@assertThat(methodInterceptor.getSecurityMetadataSource()).isSameAs(methodSecurityMetadataSource) @TO@ ExpressionStatement@@MethodInvocation:assertThat(methodInterceptor.getSecurityMetadataSource()).isSameAs(methodSecurityMetadataSource) @AT@ 17583 @LENGTH@ 96
---------INS MethodInvocation@@MethodName:assertThat:[methodInterceptor.getSecurityMetadataSource()] @TO@ MethodInvocation@@assertThat(methodInterceptor.getSecurityMetadataSource()).isSameAs(methodSecurityMetadataSource) @AT@ 17583 @LENGTH@ 57
------------INS MethodInvocation@@methodInterceptor.getSecurityMetadataSource() @TO@ MethodInvocation@@MethodName:assertThat:[methodInterceptor.getSecurityMetadataSource()] @AT@ 17594 @LENGTH@ 45
---------------INS SimpleName@@Name:methodInterceptor @TO@ MethodInvocation@@methodInterceptor.getSecurityMetadataSource() @AT@ 17594 @LENGTH@ 17
---------------INS SimpleName@@MethodName:getSecurityMetadataSource:[] @TO@ MethodInvocation@@methodInterceptor.getSecurityMetadataSource() @AT@ 17612 @LENGTH@ 27
---------INS SimpleName@@MethodName:isSameAs:[methodSecurityMetadataSource] @TO@ MethodInvocation@@assertThat(methodInterceptor.getSecurityMetadataSource()).isSameAs(methodSecurityMetadataSource) @AT@ 17641 @LENGTH@ 38
------------INS SimpleName@@methodSecurityMetadataSource @TO@ SimpleName@@MethodName:isSameAs:[methodSecurityMetadataSource] @AT@ 17650 @LENGTH@ 28


UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 15595 @LENGTH@ 56
---UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 15602 @LENGTH@ 48
------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 15615 @LENGTH@ 35
---------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 15617 @LENGTH@ 4
---------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 15643 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedNovaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedNovaEndpointBuilder, [EndpointProducerBuilder] @AT@ 4745 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 4752 @LENGTH@ 6


UPD MethodDeclaration@@default, BlobServiceEndpointBuilder, MethodName:blobService, String path,  @TO@ default, BlobServiceEndpointBuilder, MethodName:azureBlob, String path,  @AT@ 43175 @LENGTH@ 409
---UPD SimpleName@@MethodName:blobService @TO@ MethodName:azureBlob @AT@ 43210 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())) @TO@ MethodInvocation:http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())).loginProcessingUrl("/sample/jc/saml2/sso/{registrationId}") @AT@ 3591 @LENGTH@ 247
---UPD MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())) @TO@ http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())).loginProcessingUrl("/sample/jc/saml2/sso/{registrationId}") @AT@ 3591 @LENGTH@ 243
------INS MethodInvocation@@MethodName:relyingPartyRegistrationRepository:[new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())] @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())) @AT@ 3591 @LENGTH@ 243
---------INS ClassInstanceCreation@@InMemoryRelyingPartyRegistrationRepository[getSaml2AuthenticationConfiguration()] @TO@ MethodInvocation@@MethodName:relyingPartyRegistrationRepository:[new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())] @AT@ 3729 @LENGTH@ 99
------------MOV New@@new @TO@ ClassInstanceCreation@@InMemoryRelyingPartyRegistrationRepository[getSaml2AuthenticationConfiguration()] @AT@ 3729 @LENGTH@ 3
------------MOV SimpleType@@InMemoryRelyingPartyRegistrationRepository @TO@ ClassInstanceCreation@@InMemoryRelyingPartyRegistrationRepository[getSaml2AuthenticationConfiguration()] @AT@ 3733 @LENGTH@ 42
------------MOV MethodInvocation@@MethodName:getSaml2AuthenticationConfiguration:[] @TO@ ClassInstanceCreation@@InMemoryRelyingPartyRegistrationRepository[getSaml2AuthenticationConfiguration()] @AT@ 3784 @LENGTH@ 37
------DEL SimpleName@@MethodName:relyingPartyRegistrationRepository:[new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())] @AT@ 3687 @LENGTH@ 147
---------DEL ClassInstanceCreation@@InMemoryRelyingPartyRegistrationRepository[getSaml2AuthenticationConfiguration()] @AT@ 3729 @LENGTH@ 99
------INS SimpleName@@MethodName:loginProcessingUrl:["/sample/jc/saml2/sso/{registrationId}"] @TO@ MethodInvocation@@http.authorizeRequests().anyRequest().authenticated().and().saml2Login().relyingPartyRegistrationRepository(new InMemoryRelyingPartyRegistrationRepository(getSaml2AuthenticationConfiguration())) @AT@ 3840 @LENGTH@ 59
---------INS StringLiteral@@"/sample/jc/saml2/sso/{registrationId}" @TO@ SimpleName@@MethodName:loginProcessingUrl:["/sample/jc/saml2/sso/{registrationId}"] @AT@ 3859 @LENGTH@ 39


UPD WhileStatement@@while (shouldRequeue && t != null) {  if (t instanceof AmqpRejectAndDontRequeueException) {    shouldRequeue=false;  }  t=t.getCause();} @TO@ while (t != null) {  if (t instanceof AmqpRejectAndDontRequeueException) {    shouldRequeue=false;    break;  } else   if (t instanceof ImmediateRequeueAmqpException) {    shouldRequeue=true;    break;  }  t=t.getCause();} @AT@ 1797 @LENGTH@ 150
---DEL InfixExpression@@shouldRequeue && t != null @AT@ 1804 @LENGTH@ 26
------DEL SimpleName@@shouldRequeue @AT@ 1804 @LENGTH@ 13
------DEL Operator@@&& @AT@ 1817 @LENGTH@ 2
------DEL InfixExpression@@t != null @AT@ 1821 @LENGTH@ 9
---INS InfixExpression@@t != null @TO@ WhileStatement@@while (shouldRequeue && t != null) {  if (t instanceof AmqpRejectAndDontRequeueException) {    shouldRequeue=false;  }  t=t.getCause();} @AT@ 1825 @LENGTH@ 9
------MOV SimpleName@@t @TO@ InfixExpression@@t != null @AT@ 1821 @LENGTH@ 1
------MOV Operator@@!= @TO@ InfixExpression@@t != null @AT@ 1822 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@t != null @AT@ 1826 @LENGTH@ 4
---UPD Block@@WhileBody:{  if (t instanceof AmqpRejectAndDontRequeueException) {    shouldRequeue=false;  }  t=t.getCause();} @TO@ WhileBody:{  if (t instanceof AmqpRejectAndDontRequeueException) {    shouldRequeue=false;    break;  } else   if (t instanceof ImmediateRequeueAmqpException) {    shouldRequeue=true;    break;  }  t=t.getCause();} @AT@ 1832 @LENGTH@ 115
------UPD IfStatement@@if (t instanceof AmqpRejectAndDontRequeueException) {  shouldRequeue=false;} @TO@ if (t instanceof AmqpRejectAndDontRequeueException) {  shouldRequeue=false;  break;} else if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @AT@ 1837 @LENGTH@ 85
---------UPD Block@@ThenBody:{  shouldRequeue=false;} @TO@ ThenBody:{  shouldRequeue=false;  break;} @AT@ 1889 @LENGTH@ 33
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  shouldRequeue=false;} @AT@ 1926 @LENGTH@ 6
---------INS Block@@ElseBody:if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @TO@ IfStatement@@if (t instanceof AmqpRejectAndDontRequeueException) {  shouldRequeue=false;} @AT@ 1946 @LENGTH@ 91
------------INS IfStatement@@if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @TO@ Block@@ElseBody:if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @AT@ 1946 @LENGTH@ 91
---------------INS InstanceofExpression@@t instanceof ImmediateRequeueAmqpException @TO@ IfStatement@@if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @AT@ 1950 @LENGTH@ 42
------------------INS SimpleName@@t @TO@ InstanceofExpression@@t instanceof ImmediateRequeueAmqpException @AT@ 1950 @LENGTH@ 1
------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@t instanceof ImmediateRequeueAmqpException @AT@ 1952 @LENGTH@ 10
------------------INS SimpleType@@ImmediateRequeueAmqpException @TO@ InstanceofExpression@@t instanceof ImmediateRequeueAmqpException @AT@ 1963 @LENGTH@ 29
---------------INS Block@@ThenBody:{  shouldRequeue=true;  break;} @TO@ IfStatement@@if (t instanceof ImmediateRequeueAmqpException) {  shouldRequeue=true;  break;} @AT@ 1994 @LENGTH@ 43
------------------INS ExpressionStatement@@Assignment:shouldRequeue=true @TO@ Block@@ThenBody:{  shouldRequeue=true;  break;} @AT@ 2000 @LENGTH@ 21
---------------------INS Assignment@@shouldRequeue=true @TO@ ExpressionStatement@@Assignment:shouldRequeue=true @AT@ 2000 @LENGTH@ 20
------------------------INS SimpleName@@shouldRequeue @TO@ Assignment@@shouldRequeue=true @AT@ 2000 @LENGTH@ 13
------------------------INS Operator@@= @TO@ Assignment@@shouldRequeue=true @AT@ 2013 @LENGTH@ 1
------------------------INS BooleanLiteral@@true @TO@ Assignment@@shouldRequeue=true @AT@ 2016 @LENGTH@ 4
------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  shouldRequeue=true;  break;} @AT@ 2026 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JwtReactiveAuthenticationManagerTests,  @AT@ 3294 @LENGTH@ 547
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3294 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3301 @LENGTH@ 4
---INS SimpleName@@MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3306 @LENGTH@ 76
---INS VariableDeclarationStatement@@BearerTokenAuthenticationToken token=new BearerTokenAuthenticationToken("token-1"); @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3389 @LENGTH@ 85
------INS SimpleType@@BearerTokenAuthenticationToken @TO@ VariableDeclarationStatement@@BearerTokenAuthenticationToken token=new BearerTokenAuthenticationToken("token-1"); @AT@ 3389 @LENGTH@ 30
------INS VariableDeclarationFragment@@token=new BearerTokenAuthenticationToken("token-1") @TO@ VariableDeclarationStatement@@BearerTokenAuthenticationToken token=new BearerTokenAuthenticationToken("token-1"); @AT@ 3420 @LENGTH@ 53
---------INS SimpleName@@token @TO@ VariableDeclarationFragment@@token=new BearerTokenAuthenticationToken("token-1") @AT@ 3420 @LENGTH@ 5
---------INS ClassInstanceCreation@@BearerTokenAuthenticationToken["token-1"] @TO@ VariableDeclarationFragment@@token=new BearerTokenAuthenticationToken("token-1") @AT@ 3428 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@BearerTokenAuthenticationToken["token-1"] @AT@ 3428 @LENGTH@ 3
------------INS SimpleType@@BearerTokenAuthenticationToken @TO@ ClassInstanceCreation@@BearerTokenAuthenticationToken["token-1"] @AT@ 3432 @LENGTH@ 30
------------INS StringLiteral@@"token-1" @TO@ ClassInstanceCreation@@BearerTokenAuthenticationToken["token-1"] @AT@ 3463 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(this.jwtDecoder.decode(token.getToken())).thenThrow(new JwtException("with \"invalid\" chars")) @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3477 @LENGTH@ 101
------INS MethodInvocation@@when(this.jwtDecoder.decode(token.getToken())).thenThrow(new JwtException("with \"invalid\" chars")) @TO@ ExpressionStatement@@MethodInvocation:when(this.jwtDecoder.decode(token.getToken())).thenThrow(new JwtException("with \"invalid\" chars")) @AT@ 3477 @LENGTH@ 100
---------INS MethodInvocation@@MethodName:when:[this.jwtDecoder.decode(token.getToken())] @TO@ MethodInvocation@@when(this.jwtDecoder.decode(token.getToken())).thenThrow(new JwtException("with \"invalid\" chars")) @AT@ 3477 @LENGTH@ 46
------------INS MethodInvocation@@this.jwtDecoder.decode(token.getToken()) @TO@ MethodInvocation@@MethodName:when:[this.jwtDecoder.decode(token.getToken())] @AT@ 3482 @LENGTH@ 40
---------------INS FieldAccess@@this.jwtDecoder @TO@ MethodInvocation@@this.jwtDecoder.decode(token.getToken()) @AT@ 3482 @LENGTH@ 15
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.jwtDecoder @AT@ 3482 @LENGTH@ 4
------------------INS SimpleName@@jwtDecoder @TO@ FieldAccess@@this.jwtDecoder @AT@ 3487 @LENGTH@ 10
---------------INS SimpleName@@MethodName:decode:[token.getToken()] @TO@ MethodInvocation@@this.jwtDecoder.decode(token.getToken()) @AT@ 3498 @LENGTH@ 24
------------------INS MethodInvocation@@token.getToken() @TO@ SimpleName@@MethodName:decode:[token.getToken()] @AT@ 3505 @LENGTH@ 16
---------------------INS SimpleName@@Name:token @TO@ MethodInvocation@@token.getToken() @AT@ 3505 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getToken:[] @TO@ MethodInvocation@@token.getToken() @AT@ 3511 @LENGTH@ 10
---------INS SimpleName@@MethodName:thenThrow:[new JwtException("with \"invalid\" chars")] @TO@ MethodInvocation@@when(this.jwtDecoder.decode(token.getToken())).thenThrow(new JwtException("with \"invalid\" chars")) @AT@ 3524 @LENGTH@ 53
------------INS ClassInstanceCreation@@JwtException["with \"invalid\" chars"] @TO@ SimpleName@@MethodName:thenThrow:[new JwtException("with \"invalid\" chars")] @AT@ 3534 @LENGTH@ 42
---------------INS New@@new @TO@ ClassInstanceCreation@@JwtException["with \"invalid\" chars"] @AT@ 3534 @LENGTH@ 3
---------------INS SimpleType@@JwtException @TO@ ClassInstanceCreation@@JwtException["with \"invalid\" chars"] @AT@ 3538 @LENGTH@ 12
---------------INS StringLiteral@@"with \"invalid\" chars" @TO@ ClassInstanceCreation@@JwtException["with \"invalid\" chars"] @AT@ 3551 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @TO@ MethodDeclaration@@public, void, MethodName:authenticateWhenDecoderThrowsIncompatibleErrorMessageThenWrapsWithGenericOne,  @AT@ 3582 @LENGTH@ 256
------INS MethodInvocation@@assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @TO@ ExpressionStatement@@MethodInvocation:assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @AT@ 3582 @LENGTH@ 255
---------INS MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @TO@ MethodInvocation@@assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @AT@ 3582 @LENGTH@ 117
------------INS TypeLiteral@@OAuth2AuthenticationException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[OAuth2AuthenticationException.class] @AT@ 3663 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:assertThatCode:[() -> this.manager.authenticate(token).block()] @TO@ MethodInvocation@@assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @AT@ 3582 @LENGTH@ 62
------------INS LambdaExpression@@() -> this.manager.authenticate(token).block() @TO@ MethodInvocation@@MethodName:assertThatCode:[() -> this.manager.authenticate(token).block()] @AT@ 3597 @LENGTH@ 46
---------------INS MethodInvocation@@this.manager.authenticate(token).block() @TO@ LambdaExpression@@() -> this.manager.authenticate(token).block() @AT@ 3603 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:authenticate:[token] @TO@ MethodInvocation@@this.manager.authenticate(token).block() @AT@ 3603 @LENGTH@ 32
---------------------INS SimpleName@@token @TO@ MethodInvocation@@MethodName:authenticate:[token] @AT@ 3629 @LENGTH@ 5
------------------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.authenticate(token).block() @AT@ 3603 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 3603 @LENGTH@ 4
---------------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 3608 @LENGTH@ 7
------------------INS SimpleName@@MethodName:block:[] @TO@ MethodInvocation@@this.manager.authenticate(token).block() @AT@ 3636 @LENGTH@ 7
---------INS SimpleName@@MethodName:hasFieldOrPropertyWithValue:["error.description", "An error occurred while attempting to decode the Jwt: Invalid token"] @TO@ MethodInvocation@@assertThatCode(() -> this.manager.authenticate(token).block()).isInstanceOf(OAuth2AuthenticationException.class).hasFieldOrPropertyWithValue("error.description","An error occurred while attempting to decode the Jwt: Invalid token") @AT@ 3705 @LENGTH@ 132
------------INS StringLiteral@@"error.description" @TO@ SimpleName@@MethodName:hasFieldOrPropertyWithValue:["error.description", "An error occurred while attempting to decode the Jwt: Invalid token"] @AT@ 3740 @LENGTH@ 19
------------INS StringLiteral@@"An error occurred while attempting to decode the Jwt: Invalid token" @TO@ SimpleName@@MethodName:hasFieldOrPropertyWithValue:["error.description", "An error occurred while attempting to decode the Jwt: Invalid token"] @AT@ 3767 @LENGTH@ 69


UPD TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthRealmException, OAuthRequestFailedException @TO@ [@SuppressWarnings("serial"), @Deprecated, public]InvalidOAuthRealmException, OAuthRequestFailedException @AT@ 772 @LENGTH@ 347
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public]InvalidOAuthRealmException, OAuthRequestFailedException @AT@ 1020 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]AvroTransport,  @TO@ [static]AvroTransport,  @AT@ 31484 @LENGTH@ 61
---DEL Modifier@@public @AT@ 31484 @LENGTH@ 6


UPD TypeDeclaration@@[public]JwtTokenStore, [TokenStore] @TO@ [@Deprecated, public]JwtTokenStore, [TokenStore] @AT@ 2076 @LENGTH@ 4870
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwtTokenStore, [TokenStore] @AT@ 2253 @LENGTH@ 11


INS MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @TO@ TypeDeclaration@@[public]AuthenticationConfigurationTests,  @AT@ 21842 @LENGTH@ 487
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 21842 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 21849 @LENGTH@ 4
---INS SimpleName@@MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 21854 @LENGTH@ 84
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 21951 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 21965 @LENGTH@ 75
------INS MethodInvocation@@this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @TO@ ExpressionStatement@@MethodInvocation:this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @AT@ 21965 @LENGTH@ 74
---------INS MethodInvocation@@MethodName:register:[AuthenticationConfigurationSubclass.class] @TO@ MethodInvocation@@this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @AT@ 21965 @LENGTH@ 63
------------INS TypeLiteral@@AuthenticationConfigurationSubclass.class @TO@ MethodInvocation@@MethodName:register:[AuthenticationConfigurationSubclass.class] @AT@ 21986 @LENGTH@ 41
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @AT@ 21965 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 21965 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 21970 @LENGTH@ 6
---------INS SimpleName@@MethodName:autowire:[] @TO@ MethodInvocation@@this.spring.register(AuthenticationConfigurationSubclass.class).autowire() @AT@ 22029 @LENGTH@ 10
---INS VariableDeclarationStatement@@AuthenticationManagerBuilder ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class); @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 22043 @LENGTH@ 103
------INS SimpleType@@AuthenticationManagerBuilder @TO@ VariableDeclarationStatement@@AuthenticationManagerBuilder ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class); @AT@ 22043 @LENGTH@ 28
------INS VariableDeclarationFragment@@ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @TO@ VariableDeclarationStatement@@AuthenticationManagerBuilder ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class); @AT@ 22072 @LENGTH@ 73
---------INS SimpleName@@ap @TO@ VariableDeclarationFragment@@ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @AT@ 22072 @LENGTH@ 2
---------INS MethodInvocation@@this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @TO@ VariableDeclarationFragment@@ap=this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @AT@ 22077 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @AT@ 22077 @LENGTH@ 24
------------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @AT@ 22077 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 22077 @LENGTH@ 4
---------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 22082 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBean:[AuthenticationManagerBuilder.class] @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationManagerBuilder.class) @AT@ 22102 @LENGTH@ 43
---------------INS TypeLiteral@@AuthenticationManagerBuilder.class @TO@ SimpleName@@MethodName:getBean:[AuthenticationManagerBuilder.class] @AT@ 22110 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 22150 @LENGTH@ 95
------INS MethodInvocation@@this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @TO@ ExpressionStatement@@MethodInvocation:this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @AT@ 22150 @LENGTH@ 94
---------INS MethodInvocation@@MethodName:getBean:[AuthenticationConfiguration.class] @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @AT@ 22150 @LENGTH@ 67
------------INS TypeLiteral@@AuthenticationConfiguration.class @TO@ MethodInvocation@@MethodName:getBean:[AuthenticationConfiguration.class] @AT@ 22183 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @AT@ 22150 @LENGTH@ 24
---------INS FieldAccess@@this.spring @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @AT@ 22150 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.spring @AT@ 22150 @LENGTH@ 4
------------INS SimpleName@@spring @TO@ FieldAccess@@this.spring @AT@ 22155 @LENGTH@ 6
---------INS SimpleName@@MethodName:getAuthenticationManager:[] @TO@ MethodInvocation@@this.spring.getContext().getBean(AuthenticationConfiguration.class).getAuthenticationManager() @AT@ 22218 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(ap::build).isInstanceOf(AlreadyBuiltException.class) @TO@ MethodDeclaration@@public, void, MethodName:getAuthenticationManagerWhenAuthenticationConfigurationSubclassedThenBuildsUsingBean, Exception,  @AT@ 22249 @LENGTH@ 77
------INS MethodInvocation@@assertThatThrownBy(ap::build).isInstanceOf(AlreadyBuiltException.class) @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(ap::build).isInstanceOf(AlreadyBuiltException.class) @AT@ 22249 @LENGTH@ 76
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[ap::build] @TO@ MethodInvocation@@assertThatThrownBy(ap::build).isInstanceOf(AlreadyBuiltException.class) @AT@ 22249 @LENGTH@ 29
---------INS SimpleName@@MethodName:isInstanceOf:[AlreadyBuiltException.class] @TO@ MethodInvocation@@assertThatThrownBy(ap::build).isInstanceOf(AlreadyBuiltException.class) @AT@ 22284 @LENGTH@ 41
------------INS TypeLiteral@@AlreadyBuiltException.class @TO@ SimpleName@@MethodName:isInstanceOf:[AlreadyBuiltException.class] @AT@ 22297 @LENGTH@ 27


INS ExpressionStatement@@MethodInvocation:await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @TO@ MethodDeclaration@@public, void, MethodName:test, Exception,  @AT@ 3044 @LENGTH@ 225
---INS MethodInvocation@@await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @TO@ ExpressionStatement@@MethodInvocation:await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @AT@ 3044 @LENGTH@ 224
------INS MethodInvocation@@MethodName:atMost:[3, TimeUnit.SECONDS] @TO@ MethodInvocation@@await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @AT@ 3044 @LENGTH@ 35
---------INS NumberLiteral@@3 @TO@ MethodInvocation@@MethodName:atMost:[3, TimeUnit.SECONDS] @AT@ 3059 @LENGTH@ 1
---------INS QualifiedName@@TimeUnit.SECONDS @TO@ MethodInvocation@@MethodName:atMost:[3, TimeUnit.SECONDS] @AT@ 3062 @LENGTH@ 16
------------INS SimpleName@@TimeUnit @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 3062 @LENGTH@ 8
------------INS SimpleName@@SECONDS @TO@ QualifiedName@@TimeUnit.SECONDS @AT@ 3071 @LENGTH@ 7
------INS MethodInvocation@@MethodName:await:[] @TO@ MethodInvocation@@await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @AT@ 3044 @LENGTH@ 7
------INS SimpleName@@MethodName:untilAsserted:[() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
] @TO@ MethodInvocation@@await().atMost(3,TimeUnit.SECONDS).untilAsserted(() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
) @AT@ 3080 @LENGTH@ 188
---------INS LambdaExpression@@() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
 @TO@ SimpleName@@MethodName:untilAsserted:[() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
] @AT@ 3094 @LENGTH@ 173
------------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(3,controller.getControlledRoutes().size()) @TO@ LambdaExpression@@() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
 @AT@ 2989 @LENGTH@ 64
------------MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(2,controller.getInitialDelay().getSeconds()) @TO@ LambdaExpression@@() -> {
  Assert.assertEquals(3,controller.getControlledRoutes().size());
  Assert.assertEquals(2,controller.getInitialDelay().getSeconds());
}
 @AT@ 3062 @LENGTH@ 66


INS ExpressionStatement@@MethodInvocation:assertTrue(result.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ MethodDeclaration@@public, void, MethodName:testTokenEndpointUnauthenticated, Exception,  @AT@ 7655 @LENGTH@ 78
---INS MethodInvocation@@assertTrue(result.getHeaders().get("Pragma").toString().contains("no-cache")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(result.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 7655 @LENGTH@ 77
------INS SimpleName@@MethodName:assertTrue:[result.getHeaders().get("Pragma").toString().contains("no-cache")] @TO@ MethodInvocation@@assertTrue(result.getHeaders().get("Pragma").toString().contains("no-cache")) @AT@ 7655 @LENGTH@ 77
---------INS MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @TO@ SimpleName@@MethodName:assertTrue:[result.getHeaders().get("Pragma").toString().contains("no-cache")] @AT@ 7666 @LENGTH@ 65
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 7666 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:get:["Pragma"] @TO@ MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 7666 @LENGTH@ 33
---------------INS StringLiteral@@"Pragma" @TO@ MethodInvocation@@MethodName:get:["Pragma"] @AT@ 7690 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 7666 @LENGTH@ 19
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 7666 @LENGTH@ 6
------------INS SimpleName@@MethodName:contains:["no-cache"] @TO@ MethodInvocation@@result.getHeaders().get("Pragma").toString().contains("no-cache") @AT@ 7711 @LENGTH@ 20
---------------INS StringLiteral@@"no-cache" @TO@ SimpleName@@MethodName:contains:["no-cache"] @AT@ 7720 @LENGTH@ 10


UPD TypeDeclaration@@[public]BinaryFormat,  @TO@ [@Deprecated, public]BinaryFormat,  @AT@ 682 @LENGTH@ 50
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]BinaryFormat,  @AT@ 860 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]AdvancedECSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedECSEndpointBuilder, [EndpointProducerBuilder] @AT@ 2275 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2282 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:onUnsuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException failed,  @TO@ protected, void, MethodName:onUnsuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException failed, IOException,  @AT@ 9569 @LENGTH@ 141
---INS SimpleType@@IOException @TO@ MethodDeclaration@@protected, void, MethodName:onUnsuccessfulAuthentication, HttpServletRequest request, HttpServletResponse response, AuthenticationException failed,  @AT@ 9732 @LENGTH@ 11


INS VariableDeclarationStatement@@final boolean streaming=getEndpoint().isUseStreaming(); @TO@ MethodDeclaration@@public, boolean, MethodName:process, final Exchange camelExchange, final AsyncCallback callback,  @AT@ 5417 @LENGTH@ 57
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final boolean streaming=getEndpoint().isUseStreaming(); @AT@ 5417 @LENGTH@ 5
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@final boolean streaming=getEndpoint().isUseStreaming(); @AT@ 5423 @LENGTH@ 7
---INS VariableDeclarationFragment@@streaming=getEndpoint().isUseStreaming() @TO@ VariableDeclarationStatement@@final boolean streaming=getEndpoint().isUseStreaming(); @AT@ 5431 @LENGTH@ 42
------INS SimpleName@@streaming @TO@ VariableDeclarationFragment@@streaming=getEndpoint().isUseStreaming() @AT@ 5431 @LENGTH@ 9
------INS MethodInvocation@@getEndpoint().isUseStreaming() @TO@ VariableDeclarationFragment@@streaming=getEndpoint().isUseStreaming() @AT@ 5443 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().isUseStreaming() @AT@ 5443 @LENGTH@ 13
---------INS SimpleName@@MethodName:isUseStreaming:[] @TO@ MethodInvocation@@getEndpoint().isUseStreaming() @AT@ 5457 @LENGTH@ 16


UPD TypeDeclaration@@[public, static]AdvancedEKSEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedEKSEndpointBuilder, [EndpointProducerBuilder] @AT@ 2275 @LENGTH@ 2041
---DEL Modifier@@static @AT@ 2282 @LENGTH@ 6


UPD Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @TO@ ThenBody:{  List<String> audiences=new ArrayList<>();  for (  Audience audience : response.getAudience()) {    audiences.add(audience.getValue());  }  claims.put(AUDIENCE,Collections.unmodifiableList(audiences));} @AT@ 6638 @LENGTH@ 189
---INS VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @TO@ Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @AT@ 6635 @LENGTH@ 43
------MOV ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @AT@ 6643 @LENGTH@ 12
------INS VariableDeclarationFragment@@audiences=new ArrayList<>() @TO@ VariableDeclarationStatement@@List<String> audiences=new ArrayList<>(); @AT@ 6648 @LENGTH@ 29
---------INS SimpleName@@audiences @TO@ VariableDeclarationFragment@@audiences=new ArrayList<>() @AT@ 6648 @LENGTH@ 9
---------INS ClassInstanceCreation@@ArrayList<>[] @TO@ VariableDeclarationFragment@@audiences=new ArrayList<>() @AT@ 6660 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 6660 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<> @TO@ ClassInstanceCreation@@ArrayList<>[] @AT@ 6664 @LENGTH@ 11
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<> @AT@ 6664 @LENGTH@ 9
---DEL VariableDeclarationStatement@@List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()); @AT@ 6643 @LENGTH@ 115
------DEL VariableDeclarationFragment@@audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()) @AT@ 6656 @LENGTH@ 101
---------DEL SimpleName@@audience @AT@ 6656 @LENGTH@ 8
---------DEL MethodInvocation@@response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList()) @AT@ 6667 @LENGTH@ 90
------------DEL MethodInvocation@@MethodName:map:[Audience::getValue] @AT@ 6667 @LENGTH@ 61
------------DEL MethodInvocation@@MethodName:stream:[] @AT@ 6667 @LENGTH@ 31
------------DEL MethodInvocation@@MethodName:getAudience:[] @AT@ 6667 @LENGTH@ 22
---INS EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @TO@ Block@@ThenBody:{  List<String> audience=response.getAudience().stream().map(Audience::getValue).collect(Collectors.toList());  claims.put(AUDIENCE,Collections.unmodifiableList(audience));} @AT@ 6682 @LENGTH@ 95
------INS SingleVariableDeclaration@@Audience audience @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 6687 @LENGTH@ 17
---------INS SimpleType@@Audience @TO@ SingleVariableDeclaration@@Audience audience @AT@ 6687 @LENGTH@ 8
---------INS SimpleName@@audience @TO@ SingleVariableDeclaration@@Audience audience @AT@ 6696 @LENGTH@ 8
------INS MethodInvocation@@response.getAudience() @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 6707 @LENGTH@ 22
---------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getAudience() @AT@ 6707 @LENGTH@ 8
---------INS SimpleName@@MethodName:getAudience:[] @TO@ MethodInvocation@@response.getAudience() @AT@ 6716 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:audiences.add(audience.getValue()) @TO@ EnhancedForStatement@@for (Audience audience : response.getAudience()) {  audiences.add(audience.getValue());} @AT@ 6737 @LENGTH@ 35
---------INS MethodInvocation@@audiences.add(audience.getValue()) @TO@ ExpressionStatement@@MethodInvocation:audiences.add(audience.getValue()) @AT@ 6737 @LENGTH@ 34
------------MOV SimpleName@@Name:response @TO@ MethodInvocation@@audiences.add(audience.getValue()) @AT@ 6667 @LENGTH@ 8
------------MOV SimpleName@@MethodName:collect:[Collectors.toList()] @TO@ MethodInvocation@@audiences.add(audience.getValue()) @AT@ 6729 @LENGTH@ 28
---------------UPD MethodInvocation@@Collectors.toList() @TO@ audience.getValue() @AT@ 6737 @LENGTH@ 19
------------------UPD SimpleName@@Name:Collectors @TO@ Name:audience @AT@ 6737 @LENGTH@ 10
------------------UPD SimpleName@@MethodName:toList:[] @TO@ MethodName:getValue:[] @AT@ 6748 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:claims.put(AUDIENCE,Collections.unmodifiableList(audience)) @TO@ MethodInvocation:claims.put(AUDIENCE,Collections.unmodifiableList(audiences)) @AT@ 6762 @LENGTH@ 61
------UPD MethodInvocation@@claims.put(AUDIENCE,Collections.unmodifiableList(audience)) @TO@ claims.put(AUDIENCE,Collections.unmodifiableList(audiences)) @AT@ 6762 @LENGTH@ 60
---------UPD SimpleName@@MethodName:put:[AUDIENCE, Collections.unmodifiableList(audience)] @TO@ MethodName:put:[AUDIENCE, Collections.unmodifiableList(audiences)] @AT@ 6769 @LENGTH@ 53
------------UPD MethodInvocation@@Collections.unmodifiableList(audience) @TO@ Collections.unmodifiableList(audiences) @AT@ 6783 @LENGTH@ 38
---------------UPD SimpleName@@MethodName:unmodifiableList:[audience] @TO@ MethodName:unmodifiableList:[audiences] @AT@ 6795 @LENGTH@ 26
------------------UPD SimpleName@@audience @TO@ audiences @AT@ 6812 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]GoogleMailStreamEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]GoogleMailStreamEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1417 @LENGTH@ 4495
---DEL Modifier@@static @AT@ 1424 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]StatementType,  @TO@ [static]StatementType,  @AT@ 40475 @LENGTH@ 131
---DEL Modifier@@public @AT@ 40475 @LENGTH@ 6


UPD ReturnStatement@@ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ ArrayCreation:new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28842 @LENGTH@ 56
---UPD ArrayCreation@@new String[]{jpsExe.getAbsolutePath(),"-lv"} @TO@ new String[]{jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28849 @LENGTH@ 48
------UPD ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @TO@ {jpsExe.getAbsolutePath(),"-l","-v"} @AT@ 28862 @LENGTH@ 35
---------INS StringLiteral@@"-v" @TO@ ArrayInitializer@@{jpsExe.getAbsolutePath(),"-lv"} @AT@ 28864 @LENGTH@ 4
---------UPD StringLiteral@@"-lv" @TO@ "-l" @AT@ 28890 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new ZipException("Bad CRC checksum " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum)) @TO@ ClassInstanceCreation:new ZipException("Bad CRC checksum, expected " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum)) @AT@ 8307 @LENGTH@ 233
---UPD ClassInstanceCreation@@ZipException["Bad CRC checksum " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum)] @TO@ ZipException["Bad CRC checksum, expected " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum)] @AT@ 8313 @LENGTH@ 226
------UPD InfixExpression@@"Bad CRC checksum " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum) @TO@ "Bad CRC checksum, expected " + Long.toHexString(givenChecksum) + " instead of "+ Long.toHexString(realChecksum) @AT@ 8330 @LENGTH@ 208
---------UPD StringLiteral@@"Bad CRC checksum " @TO@ "Bad CRC checksum, expected " @AT@ 8330 @LENGTH@ 19


UPD EnumDeclaration@@[public, static]EvictionType,  @TO@ [static]EvictionType,  @AT@ 33629 @LENGTH@ 71
---DEL Modifier@@public @AT@ 33629 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1537 @LENGTH@ 1843
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1544 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1549 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<Task<? extends Serializable>>(); @TO@ List<Task<?>> tasks=new ArrayList<Task<?>>(); @AT@ 2022 @LENGTH@ 89
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2022 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2027 @LENGTH@ 28
------UPD VariableDeclarationFragment@@tasks=new ArrayList<Task<? extends Serializable>>() @TO@ tasks=new ArrayList<Task<?>>() @AT@ 2057 @LENGTH@ 53
---------UPD ClassInstanceCreation@@ArrayList<Task<? extends Serializable>>[] @TO@ ArrayList<Task<?>>[] @AT@ 2065 @LENGTH@ 45
------------UPD ParameterizedType@@ArrayList<Task<? extends Serializable>> @TO@ ArrayList<Task<?>> @AT@ 2069 @LENGTH@ 39
---------------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2079 @LENGTH@ 28


UPD ExpressionStatement@@Assignment:this.headerValue=Stream.of(sources).map(this::quote).collect(Collectors.joining(", ")) @TO@ Assignment:this.headerValue=joinQuotes(sources) @AT@ 2590 @LENGTH@ 89
---UPD Assignment@@this.headerValue=Stream.of(sources).map(this::quote).collect(Collectors.joining(", ")) @TO@ this.headerValue=joinQuotes(sources) @AT@ 2590 @LENGTH@ 88
------UPD MethodInvocation@@Stream.of(sources).map(this::quote).collect(Collectors.joining(", ")) @TO@ joinQuotes(sources) @AT@ 2609 @LENGTH@ 69
---------DEL MethodInvocation@@MethodName:map:[this::quote] @AT@ 2609 @LENGTH@ 35
---------DEL MethodInvocation@@MethodName:of:[sources] @AT@ 2609 @LENGTH@ 18
------------DEL SimpleName@@sources @AT@ 2619 @LENGTH@ 7
---------DEL SimpleName@@Name:Stream @AT@ 2609 @LENGTH@ 6
---------UPD SimpleName@@MethodName:collect:[Collectors.joining(", ")] @TO@ MethodName:joinQuotes:[sources] @AT@ 2645 @LENGTH@ 33
------------INS SimpleName@@sources @TO@ SimpleName@@MethodName:collect:[Collectors.joining(", ")] @AT@ 2551 @LENGTH@ 7
------------DEL MethodInvocation@@Collectors.joining(", ") @AT@ 2653 @LENGTH@ 24
---------------DEL SimpleName@@Name:Collectors @AT@ 2653 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:joining:[", "] @AT@ 2664 @LENGTH@ 13
------------------DEL StringLiteral@@", " @AT@ 2672 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]ElSqlDatabaseVendor,  @TO@ [static]ElSqlDatabaseVendor,  @AT@ 87851 @LENGTH@ 118
---DEL Modifier@@public @AT@ 87851 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedOpenshiftBuildsEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedOpenshiftBuildsEndpointBuilder, [EndpointProducerBuilder] @AT@ 8663 @LENGTH@ 3085
---DEL Modifier@@static @AT@ 8670 @LENGTH@ 6


UPD EnhancedForStatement@@for (VariableElement fieldElement : fieldElements) {  Metadata metadata=fieldElement.getAnnotation(Metadata.class);  boolean deprecated=fieldElement.getAnnotation(Deprecated.class) != null;  String deprecationNote=null;  if (metadata != null) {    deprecationNote=metadata.deprecationNote();  }  Boolean secret=metadata != null ? metadata.secret() : null;  UriPath path=fieldElement.getAnnotation(UriPath.class);  String fieldName=fieldElement.getSimpleName().toString();  if (path != null) {    String name=path.name();    if (isNullOrEmpty(name)) {      name=fieldName;    }    name=prefix + name;    if (excludeProperty(excludeProperties,name)) {      continue;    }    String defaultValue=path.defaultValue();    if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {      defaultValue=metadata.defaultValue();    }    boolean required=metadata != null && metadata.required();    String label=path.label();    if (Strings.isNullOrEmpty(label) && metadata != null) {      label=metadata.label();    }    String displayName=path.displayName();    if (Strings.isNullOrEmpty(displayName)) {      displayName=metadata != null ? metadata.displayName() : null;    }    TypeMirror fieldType=fieldElement.asType();    String fieldTypeName=fieldType.toString();    TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=path.description();    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(path.enums())) {      isEnum=true;      String[] values=path.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(path.javaType())) {      fieldTypeName=path.javaType();    }    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    boolean isSecret=secret != null ? secret : false;    EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointPaths.add(ep);  }  UriParam param=fieldElement.getAnnotation(UriParam.class);  fieldName=fieldElement.getSimpleName().toString();  if (param != null) {    String name=param.name();    if (isNullOrEmpty(name)) {      name=fieldName;    }    name=prefix + name;    if (excludeProperty(excludeProperties,name)) {      continue;    }    String paramOptionalPrefix=param.optionalPrefix();    String paramPrefix=param.prefix();    boolean multiValue=param.multiValue();    String defaultValue=param.defaultValue();    if (defaultValue == null && metadata != null) {      defaultValue=metadata.defaultValue();    }    String defaultValueNote=param.defaultValueNote();    boolean required=metadata != null && metadata.required();    String label=param.label();    if (Strings.isNullOrEmpty(label) && metadata != null) {      label=metadata.label();    }    String displayName=param.displayName();    if (Strings.isNullOrEmpty(displayName)) {      displayName=metadata != null ? metadata.displayName() : null;    }    TypeMirror fieldType=fieldElement.asType();    String fieldTypeName=fieldType.toString();    TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);    UriParams fieldParams=null;    if (fieldTypeElement != null) {      fieldParams=fieldTypeElement.getAnnotation(UriParams.class);    }    if (fieldParams != null) {      String nestedPrefix=prefix;      String extraPrefix=fieldParams.prefix();      if (!isNullOrEmpty(extraPrefix)) {        nestedPrefix+=extraPrefix;      }      findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);    } else {      String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);      if (isNullOrEmpty(docComment)) {        docComment=param.description();      }      if (isNullOrEmpty(docComment)) {        docComment="";      }      Set<String> enums=new LinkedHashSet<>();      boolean isEnum;      if (!Strings.isNullOrEmpty(param.enums())) {        isEnum=true;        String[] values=param.enums().split(",");        for (        String val : values) {          enums.add(val);        }      } else {        isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());          if (enumClass != null) {            List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());            for (            VariableElement var : fields) {              if (var.getKind() == ElementKind.ENUM_CONSTANT) {                String val=var.toString();                enums.add(val);              }            }          }        }      }      if (!Strings.isNullOrEmpty(param.javaType())) {        fieldTypeName=param.javaType();      }      boolean isSecret=secret != null ? secret : param.secret();      String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());      EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);      endpointOptions.add(option);    }  }} @TO@ for (VariableElement fieldElement : fieldElements) {  Metadata metadata=fieldElement.getAnnotation(Metadata.class);  boolean deprecated=fieldElement.getAnnotation(Deprecated.class) != null;  String deprecationNote=null;  if (metadata != null) {    deprecationNote=metadata.deprecationNote();  }  Boolean secret=metadata != null ? metadata.secret() : null;  UriPath path=fieldElement.getAnnotation(UriPath.class);  String fieldName=fieldElement.getSimpleName().toString();  if (path != null) {    String name=path.name();    if (isNullOrEmpty(name)) {      name=fieldName;    }    name=prefix + name;    if (excludeProperty(excludeProperties,name)) {      continue;    }    String defaultValue=path.defaultValue();    if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {      defaultValue=metadata.defaultValue();    }    boolean required=metadata != null && metadata.required();    String label=path.label();    if (Strings.isNullOrEmpty(label) && metadata != null) {      label=metadata.label();    }    String displayName=path.displayName();    if (Strings.isNullOrEmpty(displayName)) {      displayName=metadata != null ? metadata.displayName() : null;    }    TypeMirror fieldType=fieldElement.asType();    String fieldTypeName=fieldType.toString();    TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=path.description();    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(path.enums())) {      isEnum=true;      String[] values=path.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(path.javaType())) {      fieldTypeName=path.javaType();    }    boolean isSecret=secret != null && secret || path.secret();    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointPaths.add(ep);  }  UriParam param=fieldElement.getAnnotation(UriParam.class);  fieldName=fieldElement.getSimpleName().toString();  if (param != null) {    String name=param.name();    if (isNullOrEmpty(name)) {      name=fieldName;    }    name=prefix + name;    if (excludeProperty(excludeProperties,name)) {      continue;    }    String paramOptionalPrefix=param.optionalPrefix();    String paramPrefix=param.prefix();    boolean multiValue=param.multiValue();    String defaultValue=param.defaultValue();    if (defaultValue == null && metadata != null) {      defaultValue=metadata.defaultValue();    }    String defaultValueNote=param.defaultValueNote();    boolean required=metadata != null && metadata.required();    String label=param.label();    if (Strings.isNullOrEmpty(label) && metadata != null) {      label=metadata.label();    }    String displayName=param.displayName();    if (Strings.isNullOrEmpty(displayName)) {      displayName=metadata != null ? metadata.displayName() : null;    }    TypeMirror fieldType=fieldElement.asType();    String fieldTypeName=fieldType.toString();    TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);    UriParams fieldParams=null;    if (fieldTypeElement != null) {      fieldParams=fieldTypeElement.getAnnotation(UriParams.class);    }    if (fieldParams != null) {      String nestedPrefix=prefix;      String extraPrefix=fieldParams.prefix();      if (!isNullOrEmpty(extraPrefix)) {        nestedPrefix+=extraPrefix;      }      findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);    } else {      String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);      if (isNullOrEmpty(docComment)) {        docComment=param.description();      }      if (isNullOrEmpty(docComment)) {        docComment="";      }      Set<String> enums=new LinkedHashSet<>();      boolean isEnum;      if (!Strings.isNullOrEmpty(param.enums())) {        isEnum=true;        String[] values=param.enums().split(",");        for (        String val : values) {          enums.add(val);        }      } else {        isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;        if (isEnum) {          TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());          if (enumClass != null) {            List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());            for (            VariableElement var : fields) {              if (var.getKind() == ElementKind.ENUM_CONSTANT) {                String val=var.toString();                enums.add(val);              }            }          }        }      }      if (!Strings.isNullOrEmpty(param.javaType())) {        fieldTypeName=param.javaType();      }      boolean isSecret=secret != null && secret || param.secret();      String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());      EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);      endpointOptions.add(option);    }  }} @AT@ 32350 @LENGTH@ 9877
---UPD IfStatement@@if (path != null) {  String name=path.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String defaultValue=path.defaultValue();  if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {    defaultValue=metadata.defaultValue();  }  boolean required=metadata != null && metadata.required();  String label=path.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=path.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=path.description();  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(path.enums())) {    isEnum=true;    String[] values=path.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(path.javaType())) {    fieldTypeName=path.javaType();  }  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  boolean isSecret=secret != null ? secret : false;  EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointPaths.add(ep);} @TO@ if (path != null) {  String name=path.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String defaultValue=path.defaultValue();  if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {    defaultValue=metadata.defaultValue();  }  boolean required=metadata != null && metadata.required();  String label=path.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=path.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=path.description();  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(path.enums())) {    isEnum=true;    String[] values=path.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(path.javaType())) {    fieldTypeName=path.javaType();  }  boolean isSecret=secret != null && secret || path.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointPaths.add(ep);} @AT@ 32991 @LENGTH@ 3792
------UPD Block@@ThenBody:{  String name=path.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String defaultValue=path.defaultValue();  if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {    defaultValue=metadata.defaultValue();  }  boolean required=metadata != null && metadata.required();  String label=path.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=path.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=path.description();  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(path.enums())) {    isEnum=true;    String[] values=path.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(path.javaType())) {    fieldTypeName=path.javaType();  }  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  boolean isSecret=secret != null ? secret : false;  EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointPaths.add(ep);} @TO@ ThenBody:{  String name=path.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String defaultValue=path.defaultValue();  if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {    defaultValue=metadata.defaultValue();  }  boolean required=metadata != null && metadata.required();  String label=path.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=path.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=path.description();  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(path.enums())) {    isEnum=true;    String[] values=path.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(path.javaType())) {    fieldTypeName=path.javaType();  }  boolean isSecret=secret != null && secret || path.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointPaths.add(ep);} @AT@ 33009 @LENGTH@ 3774
---------MOV VariableDeclarationStatement@@String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly()); @TO@ Block@@ThenBody:{  String name=path.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String defaultValue=path.defaultValue();  if (Strings.isNullOrEmpty(defaultValue) && metadata != null) {    defaultValue=metadata.defaultValue();  }  boolean required=metadata != null && metadata.required();  String label=path.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=path.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=path.description();  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(path.enums())) {    isEnum=true;    String[] values=path.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(path.javaType())) {    fieldTypeName=path.javaType();  }  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  boolean isSecret=secret != null ? secret : false;  EndpointPath ep=new EndpointPath(name,displayName,fieldTypeName,required,defaultValue,docComment,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointPaths.add(ep);} @AT@ 36312 @LENGTH@ 120
---------UPD VariableDeclarationStatement@@boolean isSecret=secret != null ? secret : false; @TO@ boolean isSecret=secret != null && secret || path.secret(); @AT@ 36453 @LENGTH@ 51
------------UPD VariableDeclarationFragment@@isSecret=secret != null ? secret : false @TO@ isSecret=secret != null && secret || path.secret() @AT@ 36461 @LENGTH@ 42
---------------INS InfixExpression@@secret != null && secret || path.secret() @TO@ VariableDeclarationFragment@@isSecret=secret != null ? secret : false @AT@ 36331 @LENGTH@ 41
------------------INS InfixExpression@@secret != null && secret @TO@ InfixExpression@@secret != null && secret || path.secret() @AT@ 36331 @LENGTH@ 24
---------------------INS InfixExpression@@secret != null @TO@ InfixExpression@@secret != null && secret @AT@ 36331 @LENGTH@ 14
------------------------MOV SimpleName@@secret @TO@ InfixExpression@@secret != null @AT@ 36472 @LENGTH@ 6
------------------------MOV Operator@@!= @TO@ InfixExpression@@secret != null @AT@ 36478 @LENGTH@ 2
------------------------MOV NullLiteral@@null @TO@ InfixExpression@@secret != null @AT@ 36482 @LENGTH@ 4
---------------------INS Operator@@&& @TO@ InfixExpression@@secret != null && secret @AT@ 36345 @LENGTH@ 2
---------------------INS SimpleName@@secret @TO@ InfixExpression@@secret != null && secret @AT@ 36349 @LENGTH@ 6
------------------INS Operator@@|| @TO@ InfixExpression@@secret != null && secret || path.secret() @AT@ 36355 @LENGTH@ 2
------------------INS MethodInvocation@@path.secret() @TO@ InfixExpression@@secret != null && secret || path.secret() @AT@ 36359 @LENGTH@ 13
---------------------INS SimpleName@@Name:path @TO@ MethodInvocation@@path.secret() @AT@ 36359 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:secret:[] @TO@ MethodInvocation@@path.secret() @AT@ 36364 @LENGTH@ 8
---------------DEL ConditionalExpression@@secret != null ? secret : false @AT@ 36472 @LENGTH@ 31
------------------DEL InfixExpression@@secret != null @AT@ 36472 @LENGTH@ 14
------------------DEL SimpleName@@secret @AT@ 36489 @LENGTH@ 6
------------------DEL BooleanLiteral@@false @AT@ 36498 @LENGTH@ 5
---UPD IfStatement@@if (param != null) {  String name=param.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String paramOptionalPrefix=param.optionalPrefix();  String paramPrefix=param.prefix();  boolean multiValue=param.multiValue();  String defaultValue=param.defaultValue();  if (defaultValue == null && metadata != null) {    defaultValue=metadata.defaultValue();  }  String defaultValueNote=param.defaultValueNote();  boolean required=metadata != null && metadata.required();  String label=param.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=param.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  UriParams fieldParams=null;  if (fieldTypeElement != null) {    fieldParams=fieldTypeElement.getAnnotation(UriParams.class);  }  if (fieldParams != null) {    String nestedPrefix=prefix;    String extraPrefix=fieldParams.prefix();    if (!isNullOrEmpty(extraPrefix)) {      nestedPrefix+=extraPrefix;    }    findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);  } else {    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=param.description();    }    if (isNullOrEmpty(docComment)) {      docComment="";    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(param.enums())) {      isEnum=true;      String[] values=param.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(param.javaType())) {      fieldTypeName=param.javaType();    }    boolean isSecret=secret != null ? secret : param.secret();    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointOptions.add(option);  }} @TO@ if (param != null) {  String name=param.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String paramOptionalPrefix=param.optionalPrefix();  String paramPrefix=param.prefix();  boolean multiValue=param.multiValue();  String defaultValue=param.defaultValue();  if (defaultValue == null && metadata != null) {    defaultValue=metadata.defaultValue();  }  String defaultValueNote=param.defaultValueNote();  boolean required=metadata != null && metadata.required();  String label=param.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=param.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  UriParams fieldParams=null;  if (fieldTypeElement != null) {    fieldParams=fieldTypeElement.getAnnotation(UriParams.class);  }  if (fieldParams != null) {    String nestedPrefix=prefix;    String extraPrefix=fieldParams.prefix();    if (!isNullOrEmpty(extraPrefix)) {      nestedPrefix+=extraPrefix;    }    findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);  } else {    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=param.description();    }    if (isNullOrEmpty(docComment)) {      docComment="";    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(param.enums())) {      isEnum=true;      String[] values=param.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(param.javaType())) {      fieldTypeName=param.javaType();    }    boolean isSecret=secret != null && secret || param.secret();    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointOptions.add(option);  }} @AT@ 36947 @LENGTH@ 5266
------UPD Block@@ThenBody:{  String name=param.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String paramOptionalPrefix=param.optionalPrefix();  String paramPrefix=param.prefix();  boolean multiValue=param.multiValue();  String defaultValue=param.defaultValue();  if (defaultValue == null && metadata != null) {    defaultValue=metadata.defaultValue();  }  String defaultValueNote=param.defaultValueNote();  boolean required=metadata != null && metadata.required();  String label=param.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=param.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  UriParams fieldParams=null;  if (fieldTypeElement != null) {    fieldParams=fieldTypeElement.getAnnotation(UriParams.class);  }  if (fieldParams != null) {    String nestedPrefix=prefix;    String extraPrefix=fieldParams.prefix();    if (!isNullOrEmpty(extraPrefix)) {      nestedPrefix+=extraPrefix;    }    findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);  } else {    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=param.description();    }    if (isNullOrEmpty(docComment)) {      docComment="";    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(param.enums())) {      isEnum=true;      String[] values=param.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(param.javaType())) {      fieldTypeName=param.javaType();    }    boolean isSecret=secret != null ? secret : param.secret();    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointOptions.add(option);  }} @TO@ ThenBody:{  String name=param.name();  if (isNullOrEmpty(name)) {    name=fieldName;  }  name=prefix + name;  if (excludeProperty(excludeProperties,name)) {    continue;  }  String paramOptionalPrefix=param.optionalPrefix();  String paramPrefix=param.prefix();  boolean multiValue=param.multiValue();  String defaultValue=param.defaultValue();  if (defaultValue == null && metadata != null) {    defaultValue=metadata.defaultValue();  }  String defaultValueNote=param.defaultValueNote();  boolean required=metadata != null && metadata.required();  String label=param.label();  if (Strings.isNullOrEmpty(label) && metadata != null) {    label=metadata.label();  }  String displayName=param.displayName();  if (Strings.isNullOrEmpty(displayName)) {    displayName=metadata != null ? metadata.displayName() : null;  }  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  TypeElement fieldTypeElement=findTypeElement(processingEnv,roundEnv,fieldTypeName);  UriParams fieldParams=null;  if (fieldTypeElement != null) {    fieldParams=fieldTypeElement.getAnnotation(UriParams.class);  }  if (fieldParams != null) {    String nestedPrefix=prefix;    String extraPrefix=fieldParams.prefix();    if (!isNullOrEmpty(extraPrefix)) {      nestedPrefix+=extraPrefix;    }    findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);  } else {    String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);    if (isNullOrEmpty(docComment)) {      docComment=param.description();    }    if (isNullOrEmpty(docComment)) {      docComment="";    }    Set<String> enums=new LinkedHashSet<>();    boolean isEnum;    if (!Strings.isNullOrEmpty(param.enums())) {      isEnum=true;      String[] values=param.enums().split(",");      for (      String val : values) {        enums.add(val);      }    } else {      isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;      if (isEnum) {        TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());        if (enumClass != null) {          List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());          for (          VariableElement var : fields) {            if (var.getKind() == ElementKind.ENUM_CONSTANT) {              String val=var.toString();              enums.add(val);            }          }        }      }    }    if (!Strings.isNullOrEmpty(param.javaType())) {      fieldTypeName=param.javaType();    }    boolean isSecret=secret != null && secret || param.secret();    String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());    EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);    endpointOptions.add(option);  }} @AT@ 36966 @LENGTH@ 5247
---------UPD IfStatement@@if (fieldParams != null) {  String nestedPrefix=prefix;  String extraPrefix=fieldParams.prefix();  if (!isNullOrEmpty(extraPrefix)) {    nestedPrefix+=extraPrefix;  }  findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);} else {  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=param.description();  }  if (isNullOrEmpty(docComment)) {    docComment="";  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(param.enums())) {    isEnum=true;    String[] values=param.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(param.javaType())) {    fieldTypeName=param.javaType();  }  boolean isSecret=secret != null ? secret : param.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointOptions.add(option);} @TO@ if (fieldParams != null) {  String nestedPrefix=prefix;  String extraPrefix=fieldParams.prefix();  if (!isNullOrEmpty(extraPrefix)) {    nestedPrefix+=extraPrefix;  }  findClassProperties(writer,roundEnv,componentModel,endpointPaths,endpointOptions,fieldTypeElement,nestedPrefix,excludeProperties,null);} else {  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=param.description();  }  if (isNullOrEmpty(docComment)) {    docComment="";  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(param.enums())) {    isEnum=true;    String[] values=param.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(param.javaType())) {    fieldTypeName=param.javaType();  }  boolean isSecret=secret != null && secret || param.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointOptions.add(option);} @AT@ 38905 @LENGTH@ 3290
------------UPD Block@@ElseBody:{  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=param.description();  }  if (isNullOrEmpty(docComment)) {    docComment="";  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(param.enums())) {    isEnum=true;    String[] values=param.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(param.javaType())) {    fieldTypeName=param.javaType();  }  boolean isSecret=secret != null ? secret : param.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointOptions.add(option);} @TO@ ElseBody:{  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,classElement,false);  if (isNullOrEmpty(docComment)) {    docComment=param.description();  }  if (isNullOrEmpty(docComment)) {    docComment="";  }  Set<String> enums=new LinkedHashSet<>();  boolean isEnum;  if (!Strings.isNullOrEmpty(param.enums())) {    isEnum=true;    String[] values=param.enums().split(",");    for (    String val : values) {      enums.add(val);    }  } else {    isEnum=fieldTypeElement != null && fieldTypeElement.getKind() == ElementKind.ENUM;    if (isEnum) {      TypeElement enumClass=findTypeElement(processingEnv,roundEnv,fieldTypeElement.asType().toString());      if (enumClass != null) {        List<VariableElement> fields=ElementFilter.fieldsIn(enumClass.getEnclosedElements());        for (        VariableElement var : fields) {          if (var.getKind() == ElementKind.ENUM_CONSTANT) {            String val=var.toString();            enums.add(val);          }        }      }    }  }  if (!Strings.isNullOrEmpty(param.javaType())) {    fieldTypeName=param.javaType();  }  boolean isSecret=secret != null && secret || param.secret();  String group=EndpointHelper.labelAsGroupName(label,componentModel.isConsumerOnly(),componentModel.isProducerOnly());  EndpointOption option=new EndpointOption(name,displayName,fieldTypeName,required,defaultValue,defaultValueNote,docComment.trim(),paramOptionalPrefix,paramPrefix,multiValue,deprecated,deprecationNote,isSecret,group,label,isEnum,enums);  endpointOptions.add(option);} @AT@ 39390 @LENGTH@ 2805
---------------UPD VariableDeclarationStatement@@boolean isSecret=secret != null ? secret : param.secret(); @TO@ boolean isSecret=secret != null && secret || param.secret(); @AT@ 41606 @LENGTH@ 60
------------------UPD VariableDeclarationFragment@@isSecret=secret != null ? secret : param.secret() @TO@ isSecret=secret != null && secret || param.secret() @AT@ 41614 @LENGTH@ 51
---------------------DEL ConditionalExpression@@secret != null ? secret : param.secret() @AT@ 41625 @LENGTH@ 40
------------------------DEL InfixExpression@@secret != null @AT@ 41625 @LENGTH@ 14
------------------------DEL SimpleName@@secret @AT@ 41642 @LENGTH@ 6
------------------------DEL MethodInvocation@@param.secret() @AT@ 41651 @LENGTH@ 14
---------------------INS InfixExpression@@secret != null && secret || param.secret() @TO@ VariableDeclarationFragment@@isSecret=secret != null ? secret : param.secret() @AT@ 41635 @LENGTH@ 42
------------------------INS InfixExpression@@secret != null && secret @TO@ InfixExpression@@secret != null && secret || param.secret() @AT@ 41635 @LENGTH@ 24
---------------------------INS InfixExpression@@secret != null @TO@ InfixExpression@@secret != null && secret @AT@ 41635 @LENGTH@ 14
------------------------------MOV SimpleName@@secret @TO@ InfixExpression@@secret != null @AT@ 41625 @LENGTH@ 6
------------------------------MOV Operator@@!= @TO@ InfixExpression@@secret != null @AT@ 41631 @LENGTH@ 2
------------------------------MOV NullLiteral@@null @TO@ InfixExpression@@secret != null @AT@ 41635 @LENGTH@ 4
---------------------------INS Operator@@&& @TO@ InfixExpression@@secret != null && secret @AT@ 41649 @LENGTH@ 2
---------------------------INS SimpleName@@secret @TO@ InfixExpression@@secret != null && secret @AT@ 41653 @LENGTH@ 6
------------------------INS Operator@@|| @TO@ InfixExpression@@secret != null && secret || param.secret() @AT@ 41659 @LENGTH@ 2
------------------------INS MethodInvocation@@param.secret() @TO@ InfixExpression@@secret != null && secret || param.secret() @AT@ 41663 @LENGTH@ 14
---------------------------MOV SimpleName@@Name:param @TO@ MethodInvocation@@param.secret() @AT@ 41651 @LENGTH@ 5
---------------------------MOV SimpleName@@MethodName:secret:[] @TO@ MethodInvocation@@param.secret() @AT@ 41657 @LENGTH@ 8


UPD MethodDeclaration@@default, DdbStreamEndpointBuilder, MethodName:ddbStream, String path,  @TO@ default, DdbStreamEndpointBuilder, MethodName:awsDdbstream, String path,  @AT@ 6789 @LENGTH@ 398
---UPD SimpleName@@MethodName:ddbStream @TO@ MethodName:awsDdbstream @AT@ 6822 @LENGTH@ 9


UPD VariableDeclarationStatement@@Consumer<HttpRequestBase> deleteFunction=(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
; @TO@ Consumer<HttpRequestBase> deleteFunction=request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
; @AT@ 13384 @LENGTH@ 535
---UPD VariableDeclarationFragment@@deleteFunction=(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @TO@ deleteFunction=request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @AT@ 13410 @LENGTH@ 508
------UPD LambdaExpression@@(request) -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @TO@ request -> {
  execute(request,contentType,endpointHttpHeaders,new AbstractFutureCallback<HttpStatusCode>(responseHandler){
    @Override public void onCompleted(    HttpResponse result){
      final StatusLine statusLine=result.getStatusLine();
      responseHandler.onResponse(HttpStatusCode.fromStatusCode(statusLine.getStatusCode()),headersToMap(result.getAllHeaders()));
    }
  }
);
}
 @AT@ 13427 @LENGTH@ 491


UPD TypeDeclaration@@[public]DefaultOAuth2RefreshToken, [Serializable, OAuth2RefreshToken] @TO@ [@Deprecated, public]DefaultOAuth2RefreshToken, [Serializable, OAuth2RefreshToken] @AT@ 273 @LENGTH@ 1111
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultOAuth2RefreshToken, [Serializable, OAuth2RefreshToken] @AT@ 450 @LENGTH@ 11


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1481 @LENGTH@ 1160
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1488 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1493 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]TikaOperation,  @TO@ [static]TikaOperation,  @AT@ 7478 @LENGTH@ 63
---DEL Modifier@@public @AT@ 7478 @LENGTH@ 6


UPD MethodDeclaration@@default, NetWeaverEndpointBuilder, MethodName:netWeaver, String path,  @TO@ default, NetWeaverEndpointBuilder, MethodName:sapNetweaver, String path,  @AT@ 7509 @LENGTH@ 398
---UPD SimpleName@@MethodName:netWeaver @TO@ MethodName:sapNetweaver @AT@ 7542 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()) @TO@ MethodInvocation:Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()) @AT@ 5413 @LENGTH@ 260
---UPD MethodInvocation@@Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()) @TO@ Mono.just(authorizeRequest).flatMap(this.contextAttributesMapper::apply).map(attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()) @AT@ 5420 @LENGTH@ 252
------UPD SimpleName@@MethodName:map:[attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attrs).build()] @TO@ MethodName:map:[attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build()] @AT@ 5503 @LENGTH@ 169
---------UPD LambdaExpression@@attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attrs).build() @TO@ attrs -> OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build() @AT@ 5507 @LENGTH@ 164
------------UPD MethodInvocation@@OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attrs).build() @TO@ OAuth2AuthorizationContext.withAuthorizedClient(authorizedClient).principal(authorizeRequest.getPrincipal()).attributes(attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
).build() @AT@ 5516 @LENGTH@ 155
---------------UPD MethodInvocation@@MethodName:attributes:[attrs] @TO@ MethodName:attributes:[attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
] @AT@ 5516 @LENGTH@ 140
------------------DEL SimpleName@@attrs @AT@ 5650 @LENGTH@ 5
------------------INS LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @TO@ MethodInvocation@@MethodName:attributes:[attrs] @AT@ 5699 @LENGTH@ 112
---------------------INS VariableDeclarationFragment@@attributes @TO@ LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @AT@ 5699 @LENGTH@ 10
------------------------INS SimpleName@@attributes @TO@ VariableDeclarationFragment@@attributes @AT@ 5699 @LENGTH@ 10
---------------------INS IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @TO@ LambdaExpression@@attributes -> {
  if (!CollectionUtils.isEmpty(attrs)) {
    attributes.putAll(attrs);
  }
}
 @AT@ 5722 @LENGTH@ 81
------------------------INS PrefixExpression@@!CollectionUtils.isEmpty(attrs) @TO@ IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @AT@ 5726 @LENGTH@ 31
---------------------------INS Operator@@! @TO@ PrefixExpression@@!CollectionUtils.isEmpty(attrs) @AT@ 5726 @LENGTH@ 1
---------------------------INS MethodInvocation@@CollectionUtils.isEmpty(attrs) @TO@ PrefixExpression@@!CollectionUtils.isEmpty(attrs) @AT@ 5727 @LENGTH@ 30
------------------------------INS SimpleName@@Name:CollectionUtils @TO@ MethodInvocation@@CollectionUtils.isEmpty(attrs) @AT@ 5727 @LENGTH@ 15
------------------------------INS SimpleName@@MethodName:isEmpty:[attrs] @TO@ MethodInvocation@@CollectionUtils.isEmpty(attrs) @AT@ 5743 @LENGTH@ 14
---------------------------------INS SimpleName@@attrs @TO@ SimpleName@@MethodName:isEmpty:[attrs] @AT@ 5751 @LENGTH@ 5
------------------------INS Block@@ThenBody:{  attributes.putAll(attrs);} @TO@ IfStatement@@if (!CollectionUtils.isEmpty(attrs)) {  attributes.putAll(attrs);} @AT@ 5759 @LENGTH@ 44
---------------------------INS ExpressionStatement@@MethodInvocation:attributes.putAll(attrs) @TO@ Block@@ThenBody:{  attributes.putAll(attrs);} @AT@ 5769 @LENGTH@ 25
------------------------------INS MethodInvocation@@attributes.putAll(attrs) @TO@ ExpressionStatement@@MethodInvocation:attributes.putAll(attrs) @AT@ 5769 @LENGTH@ 24
---------------------------------INS SimpleName@@Name:attributes @TO@ MethodInvocation@@attributes.putAll(attrs) @AT@ 5769 @LENGTH@ 10
---------------------------------INS SimpleName@@MethodName:putAll:[attrs] @TO@ MethodInvocation@@attributes.putAll(attrs) @AT@ 5780 @LENGTH@ 13
------------------------------------INS SimpleName@@attrs @TO@ SimpleName@@MethodName:putAll:[attrs] @AT@ 5787 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]ZooKeeperMasterEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]ZooKeeperMasterEndpointBuilder, [EndpointConsumerBuilder] @AT@ 1440 @LENGTH@ 984
---DEL Modifier@@static @AT@ 1447 @LENGTH@ 6


UPD TypeDeclaration@@[public]UserAuthenticationConverter,  @TO@ [@Deprecated, public]UserAuthenticationConverter,  @AT@ 770 @LENGTH@ 793
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]UserAuthenticationConverter,  @AT@ 947 @LENGTH@ 11


UPD TypeDeclaration@@[public, static]ServiceNowEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]ServiceNowEndpointBuilder, [EndpointProducerBuilder] @AT@ 1454 @LENGTH@ 24297
---DEL Modifier@@static @AT@ 1461 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @TO@ TypeDeclaration@@[public]ResourceOwnerPasswordProviderTests, AbstractResourceOwnerPasswordProviderTests @AT@ 1591 @LENGTH@ 644
---MOV ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.OK,response.getStatusCode()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 868 @LENGTH@ 54
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1591 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1598 @LENGTH@ 4
---INS SimpleName@@MethodName:testCheckTokenPostRequestCall @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1603 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1642 @LENGTH@ 9
---INS VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1656 @LENGTH@ 74
------INS SimpleType@@TestRestTemplate @TO@ VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @AT@ 1656 @LENGTH@ 16
------INS VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @TO@ VariableDeclarationStatement@@TestRestTemplate template=new TestRestTemplate("my-trusted-client",""); @AT@ 1673 @LENGTH@ 56
---------INS SimpleName@@template @TO@ VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @AT@ 1673 @LENGTH@ 8
---------INS ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @TO@ VariableDeclarationFragment@@template=new TestRestTemplate("my-trusted-client","") @AT@ 1684 @LENGTH@ 45
------------INS New@@new @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1684 @LENGTH@ 3
------------INS SimpleType@@TestRestTemplate @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1688 @LENGTH@ 16
------------INS StringLiteral@@"my-trusted-client" @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1705 @LENGTH@ 19
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@TestRestTemplate["my-trusted-client", ""] @AT@ 1726 @LENGTH@ 2
---INS VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1733 @LENGTH@ 40
------INS SimpleType@@HttpHeaders @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 1733 @LENGTH@ 11
------INS VariableDeclarationFragment@@headers=new HttpHeaders() @TO@ VariableDeclarationStatement@@HttpHeaders headers=new HttpHeaders(); @AT@ 1745 @LENGTH@ 27
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 1745 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpHeaders[] @TO@ VariableDeclarationFragment@@headers=new HttpHeaders() @AT@ 1755 @LENGTH@ 17
------------INS New@@new @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 1755 @LENGTH@ 3
------------INS SimpleType@@HttpHeaders @TO@ ClassInstanceCreation@@HttpHeaders[] @AT@ 1759 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1776 @LENGTH@ 62
------INS MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @TO@ ExpressionStatement@@MethodInvocation:headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1776 @LENGTH@ 61
---------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1776 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_FORM_URLENCODED] @TO@ MethodInvocation@@headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED) @AT@ 1784 @LENGTH@ 53
------------INS QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @TO@ SimpleName@@MethodName:setContentType:[MediaType.APPLICATION_FORM_URLENCODED] @AT@ 1799 @LENGTH@ 37
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @AT@ 1799 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_FORM_URLENCODED @TO@ QualifiedName@@MediaType.APPLICATION_FORM_URLENCODED @AT@ 1809 @LENGTH@ 27
---INS VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1841 @LENGTH@ 67
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @AT@ 1841 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1841 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1855 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1863 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> params=new LinkedMultiValueMap<>(); @AT@ 1871 @LENGTH@ 36
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @AT@ 1871 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedMultiValueMap<>[] @TO@ VariableDeclarationFragment@@params=new LinkedMultiValueMap<>() @AT@ 1880 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1880 @LENGTH@ 3
------------INS ParameterizedType@@LinkedMultiValueMap<> @TO@ ClassInstanceCreation@@LinkedMultiValueMap<>[] @AT@ 1884 @LENGTH@ 21
---------------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<> @AT@ 1884 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:params.add("token",context.getAccessToken().getValue()) @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1911 @LENGTH@ 57
------INS MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @TO@ ExpressionStatement@@MethodInvocation:params.add("token",context.getAccessToken().getValue()) @AT@ 1911 @LENGTH@ 56
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @AT@ 1911 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @TO@ MethodInvocation@@params.add("token",context.getAccessToken().getValue()) @AT@ 1918 @LENGTH@ 49
------------INS StringLiteral@@"token" @TO@ SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @AT@ 1922 @LENGTH@ 7
------------INS MethodInvocation@@context.getAccessToken().getValue() @TO@ SimpleName@@MethodName:add:["token", context.getAccessToken().getValue()] @AT@ 1931 @LENGTH@ 35
---------------INS MethodInvocation@@MethodName:getAccessToken:[] @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1931 @LENGTH@ 24
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1931 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@context.getAccessToken().getValue() @AT@ 1956 @LENGTH@ 10
---INS VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 1971 @LENGTH@ 86
------INS ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @TO@ VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @AT@ 1971 @LENGTH@ 41
---------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @AT@ 1971 @LENGTH@ 10
---------INS ParameterizedType@@MultiValueMap<String,String> @TO@ ParameterizedType@@HttpEntity<MultiValueMap<String,String>> @AT@ 1982 @LENGTH@ 29
------------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1982 @LENGTH@ 13
------------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 1996 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 2004 @LENGTH@ 6
------INS VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @TO@ VariableDeclarationStatement@@HttpEntity<MultiValueMap<String,String>> request=new HttpEntity<>(params,headers); @AT@ 2013 @LENGTH@ 43
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @AT@ 2013 @LENGTH@ 7
---------INS ClassInstanceCreation@@HttpEntity<>[params, headers] @TO@ VariableDeclarationFragment@@request=new HttpEntity<>(params,headers) @AT@ 2023 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2023 @LENGTH@ 3
------------INS ParameterizedType@@HttpEntity<> @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2027 @LENGTH@ 12
---------------INS SimpleType@@HttpEntity @TO@ ParameterizedType@@HttpEntity<> @AT@ 2027 @LENGTH@ 10
------------INS SimpleName@@params @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2040 @LENGTH@ 6
------------INS SimpleName@@headers @TO@ ClassInstanceCreation@@HttpEntity<>[params, headers] @AT@ 2048 @LENGTH@ 7
---INS VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @TO@ MethodDeclaration@@public, void, MethodName:testCheckTokenPostRequestCall, Exception,  @AT@ 2060 @LENGTH@ 115
------INS ParameterizedType@@ResponseEntity<String> @TO@ VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @AT@ 2060 @LENGTH@ 22
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 2060 @LENGTH@ 14
---------INS SimpleType@@String @TO@ ParameterizedType@@ResponseEntity<String> @AT@ 2075 @LENGTH@ 6
------INS VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @TO@ VariableDeclarationStatement@@ResponseEntity<String> response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class); @AT@ 2083 @LENGTH@ 91
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2083 @LENGTH@ 8
---------INS MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @TO@ VariableDeclarationFragment@@response=template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2094 @LENGTH@ 80
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2094 @LENGTH@ 8
------------INS SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @TO@ MethodInvocation@@template.postForEntity(http.getUrl("/oauth/check_token"),request,String.class) @AT@ 2103 @LENGTH@ 71
---------------INS MethodInvocation@@http.getUrl("/oauth/check_token") @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2117 @LENGTH@ 33
------------------INS SimpleName@@Name:http @TO@ MethodInvocation@@http.getUrl("/oauth/check_token") @AT@ 2117 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getUrl:["/oauth/check_token"] @TO@ MethodInvocation@@http.getUrl("/oauth/check_token") @AT@ 2122 @LENGTH@ 28
---------------------INS StringLiteral@@"/oauth/check_token" @TO@ SimpleName@@MethodName:getUrl:["/oauth/check_token"] @AT@ 2129 @LENGTH@ 20
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2152 @LENGTH@ 7
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:postForEntity:[http.getUrl("/oauth/check_token"), request, String.class] @AT@ 2161 @LENGTH@ 12


UPD MethodDeclaration@@default, CMEndpointBuilder, MethodName:cM, String path,  @TO@ default, CMEndpointBuilder, MethodName:cmSms, String path,  @AT@ 7150 @LENGTH@ 342
---UPD SimpleName@@MethodName:cM @TO@ MethodName:cmSms @AT@ 7176 @LENGTH@ 2


UPD Block@@ThenBody:{  final byte[] local=data[data.length - 1].getCentralDirectoryData();  if (local != null) {    System.arraycopy(local,0,result,start,local.length);  }} @TO@ ThenBody:{  final byte[] central=data[data.length - 1].getCentralDirectoryData();  if (central != null) {    System.arraycopy(central,0,result,start,central.length);  }} @AT@ 11387 @LENGTH@ 213
---UPD VariableDeclarationStatement@@final byte[] local=data[data.length - 1].getCentralDirectoryData(); @TO@ final byte[] central=data[data.length - 1].getCentralDirectoryData(); @AT@ 11401 @LENGTH@ 69
------UPD VariableDeclarationFragment@@local=data[data.length - 1].getCentralDirectoryData() @TO@ central=data[data.length - 1].getCentralDirectoryData() @AT@ 11414 @LENGTH@ 55
---------UPD SimpleName@@local @TO@ central @AT@ 11414 @LENGTH@ 5
---UPD IfStatement@@if (local != null) {  System.arraycopy(local,0,result,start,local.length);} @TO@ if (central != null) {  System.arraycopy(central,0,result,start,central.length);} @AT@ 11483 @LENGTH@ 107
------UPD InfixExpression@@local != null @TO@ central != null @AT@ 11487 @LENGTH@ 13
---------UPD SimpleName@@local @TO@ central @AT@ 11487 @LENGTH@ 5
------UPD Block@@ThenBody:{  System.arraycopy(local,0,result,start,local.length);} @TO@ ThenBody:{  System.arraycopy(central,0,result,start,central.length);} @AT@ 11502 @LENGTH@ 88
---------UPD ExpressionStatement@@MethodInvocation:System.arraycopy(local,0,result,start,local.length) @TO@ MethodInvocation:System.arraycopy(central,0,result,start,central.length) @AT@ 11520 @LENGTH@ 56
------------UPD MethodInvocation@@System.arraycopy(local,0,result,start,local.length) @TO@ System.arraycopy(central,0,result,start,central.length) @AT@ 11520 @LENGTH@ 55
---------------UPD SimpleName@@MethodName:arraycopy:[local, 0, result, start, local.length] @TO@ MethodName:arraycopy:[central, 0, result, start, central.length] @AT@ 11527 @LENGTH@ 48
------------------UPD SimpleName@@local @TO@ central @AT@ 11537 @LENGTH@ 5
------------------UPD QualifiedName@@local.length @TO@ central.length @AT@ 11562 @LENGTH@ 12
---------------------UPD SimpleName@@local @TO@ central @AT@ 11562 @LENGTH@ 5


UPD ReturnStatement@@LambdaExpression:(answer) -> {
  if (answer.isFailed()) {
    onCompletion.onFailure(answer);
  }
 else {
    onCompletion.onComplete(answer);
  }
  return answer;
}
 @TO@ LambdaExpression:answer -> {
  if (answer.isFailed()) {
    onCompletion.onFailure(answer);
  }
 else {
    onCompletion.onComplete(answer);
  }
  return answer;
}
 @AT@ 21443 @LENGTH@ 512
---UPD LambdaExpression@@(answer) -> {
  if (answer.isFailed()) {
    onCompletion.onFailure(answer);
  }
 else {
    onCompletion.onComplete(answer);
  }
  return answer;
}
 @TO@ answer -> {
  if (answer.isFailed()) {
    onCompletion.onFailure(answer);
  }
 else {
    onCompletion.onComplete(answer);
  }
  return answer;
}
 @AT@ 21450 @LENGTH@ 504


INS MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @TO@ TypeDeclaration@@[public]RefreshTokenReactiveOAuth2AuthorizedClientProviderTests,  @AT@ 4259 @LENGTH@ 232
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4259 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4266 @LENGTH@ 4
---INS SimpleName@@MethodName:setClockWhenNullThenThrowIllegalArgumentException @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4271 @LENGTH@ 49
---INS ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ MethodDeclaration@@public, void, MethodName:setClockWhenNullThenThrowIllegalArgumentException,  @AT@ 4327 @LENGTH@ 161
------INS MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @TO@ ExpressionStatement@@MethodInvocation:assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4327 @LENGTH@ 160
---------INS MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4327 @LENGTH@ 120
------------INS TypeLiteral@@IllegalArgumentException.class @TO@ MethodInvocation@@MethodName:isInstanceOf:[IllegalArgumentException.class] @AT@ 4416 @LENGTH@ 30
---------INS MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4327 @LENGTH@ 70
------------INS LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @TO@ MethodInvocation@@MethodName:assertThatThrownBy:[() -> this.authorizedClientProvider.setClock(null)] @AT@ 4346 @LENGTH@ 50
---------------INS MethodInvocation@@this.authorizedClientProvider.setClock(null) @TO@ LambdaExpression@@() -> this.authorizedClientProvider.setClock(null) @AT@ 4352 @LENGTH@ 44
------------------INS FieldAccess@@this.authorizedClientProvider @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 4352 @LENGTH@ 29
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 4352 @LENGTH@ 4
---------------------INS SimpleName@@authorizedClientProvider @TO@ FieldAccess@@this.authorizedClientProvider @AT@ 4357 @LENGTH@ 24
------------------INS SimpleName@@MethodName:setClock:[null] @TO@ MethodInvocation@@this.authorizedClientProvider.setClock(null) @AT@ 4382 @LENGTH@ 14
---------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:setClock:[null] @AT@ 4391 @LENGTH@ 4
---------INS SimpleName@@MethodName:hasMessage:["clock cannot be null"] @TO@ MethodInvocation@@assertThatThrownBy(() -> this.authorizedClientProvider.setClock(null)).isInstanceOf(IllegalArgumentException.class).hasMessage("clock cannot be null") @AT@ 4453 @LENGTH@ 34
------------INS StringLiteral@@"clock cannot be null" @TO@ SimpleName@@MethodName:hasMessage:["clock cannot be null"] @AT@ 4464 @LENGTH@ 22


UPD MethodDeclaration@@default, ElasticsearchEndpointBuilder, MethodName:elasticsearch, String path,  @TO@ default, ElasticsearchEndpointBuilder, MethodName:elasticsearchRest, String path,  @AT@ 12651 @LENGTH@ 431
---UPD SimpleName@@MethodName:elasticsearch @TO@ MethodName:elasticsearchRest @AT@ 12688 @LENGTH@ 13


UPD TryStatement@@try {  List<Integer> responses=new ArrayList<>();  ChannelInitializer<Channel> initializer=new ChannelInitializer<Channel>(){    @Override protected void initChannel(    Channel ch) throws Exception {      ChannelPipeline pipeline=ch.pipeline();      if (sslContextParameters != null) {        SSLEngine sslEngine=sslContextParameters.createSSLContext(null).createSSLEngine();        sslEngine.setUseClientMode(true);        pipeline.addLast(new SslHandler(sslEngine));      }      pipeline.addLast(new SimpleChannelInboundHandler<ByteBuf>(){        @Override protected void channelRead0(        ChannelHandlerContext ctx,        ByteBuf msg) throws Exception {          assertEquals(msg.readUnsignedByte(),(short)'2');          assertEquals(msg.readUnsignedByte(),(short)'A');synchronized (responses) {            responses.add(msg.readInt());          }        }      });    }  };  Channel channel=new Bootstrap().group(eventLoopGroup).channel(NioSocketChannel.class).handler(initializer).connect("127.0.0.1",port).sync().channel();  TimeUnit.MILLISECONDS.sleep(100);  channel.writeAndFlush(readSample("io/window10"));  TimeUnit.MILLISECONDS.sleep(100);  channel.writeAndFlush(readSample("io/window15"));  TimeUnit.MILLISECONDS.sleep(100);  channel.close();synchronized (responses) {    return responses;  }}  finally {  eventLoopGroup.shutdownGracefully();} @TO@ try {  List<Integer> responses=new ArrayList<>();  ChannelInitializer<Channel> initializer=new ChannelInitializer<Channel>(){    @Override protected void initChannel(    Channel ch) throws Exception {      ChannelPipeline pipeline=ch.pipeline();      if (sslContextParameters != null) {        SSLEngine sslEngine=sslContextParameters.createSSLContext(null).createSSLEngine();        sslEngine.setUseClientMode(true);        pipeline.addLast(new SslHandler(sslEngine));      }      pipeline.addLast(new SimpleChannelInboundHandler<ByteBuf>(){        @Override protected void channelRead0(        ChannelHandlerContext ctx,        ByteBuf msg) throws Exception {          assertEquals(msg.readUnsignedByte(),(short)'2');          assertEquals(msg.readUnsignedByte(),(short)'A');synchronized (responses) {            responses.add(msg.readInt());          }        }      });    }  };  Channel channel=new Bootstrap().group(eventLoopGroup).channel(NioSocketChannel.class).handler(initializer).connect("127.0.0.1",port).sync().channel();  TimeUnit.MILLISECONDS.sleep(500);  channel.writeAndFlush(readSample("io/window10"));  TimeUnit.MILLISECONDS.sleep(500);  channel.writeAndFlush(readSample("io/window15"));  TimeUnit.MILLISECONDS.sleep(500);  channel.close();synchronized (responses) {    return responses;  }}  finally {  eventLoopGroup.shutdownGracefully();} @AT@ 1919 @LENGTH@ 2339
---UPD ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(100) @TO@ MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @AT@ 3812 @LENGTH@ 33
------UPD MethodInvocation@@TimeUnit.MILLISECONDS.sleep(100) @TO@ TimeUnit.MILLISECONDS.sleep(500) @AT@ 3812 @LENGTH@ 32
---------UPD SimpleName@@MethodName:sleep:[100] @TO@ MethodName:sleep:[500] @AT@ 3834 @LENGTH@ 10
------------UPD NumberLiteral@@100 @TO@ 500 @AT@ 3840 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(100) @TO@ MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @AT@ 3920 @LENGTH@ 33
------UPD MethodInvocation@@TimeUnit.MILLISECONDS.sleep(100) @TO@ TimeUnit.MILLISECONDS.sleep(500) @AT@ 3920 @LENGTH@ 32
---------UPD SimpleName@@MethodName:sleep:[100] @TO@ MethodName:sleep:[500] @AT@ 3942 @LENGTH@ 10
------------UPD NumberLiteral@@100 @TO@ 500 @AT@ 3948 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:TimeUnit.MILLISECONDS.sleep(100) @TO@ MethodInvocation:TimeUnit.MILLISECONDS.sleep(500) @AT@ 4028 @LENGTH@ 33
------UPD MethodInvocation@@TimeUnit.MILLISECONDS.sleep(100) @TO@ TimeUnit.MILLISECONDS.sleep(500) @AT@ 4028 @LENGTH@ 32
---------UPD SimpleName@@MethodName:sleep:[100] @TO@ MethodName:sleep:[500] @AT@ 4050 @LENGTH@ 10
------------UPD NumberLiteral@@100 @TO@ 500 @AT@ 4056 @LENGTH@ 3


UPD EnumDeclaration@@[public, static]PdfOperation,  @TO@ [static]PdfOperation,  @AT@ 10588 @LENGTH@ 76
---DEL Modifier@@public @AT@ 10588 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedAtomixMultiMapEndpointBuilder, [EndpointConsumerBuilder] @TO@ [public]AdvancedAtomixMultiMapEndpointBuilder, [EndpointConsumerBuilder] @AT@ 7139 @LENGTH@ 7422
---DEL Modifier@@static @AT@ 7146 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedCwEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedCwEndpointBuilder, [EndpointProducerBuilder] @AT@ 6435 @LENGTH@ 2034
---DEL Modifier@@static @AT@ 6442 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuthNonceServices,  @TO@ [@Deprecated, public]OAuthNonceServices,  @AT@ 822 @LENGTH@ 732
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuthNonceServices,  @AT@ 1043 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ MethodDeclaration@@private, void, MethodName:getToken,  @AT@ 2295 @LENGTH@ 87
---INS MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2295 @LENGTH@ 86
------INS SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @TO@ MethodInvocation@@assertTrue(response.getHeaders().get("Cache-Control").toString().contains("no-store")) @AT@ 2295 @LENGTH@ 86
---------INS MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @TO@ SimpleName@@MethodName:assertTrue:[response.getHeaders().get("Cache-Control").toString().contains("no-store")] @AT@ 2306 @LENGTH@ 74
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2306 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:get:["Cache-Control"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2306 @LENGTH@ 42
---------------INS StringLiteral@@"Cache-Control" @TO@ MethodInvocation@@MethodName:get:["Cache-Control"] @AT@ 2332 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2306 @LENGTH@ 21
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2306 @LENGTH@ 8
------------INS SimpleName@@MethodName:contains:["no-store"] @TO@ MethodInvocation@@response.getHeaders().get("Cache-Control").toString().contains("no-store") @AT@ 2360 @LENGTH@ 20
---------------INS StringLiteral@@"no-store" @TO@ SimpleName@@MethodName:contains:["no-store"] @AT@ 2369 @LENGTH@ 10


DEL MethodDeclaration@@private, static, boolean, MethodName:matches, byte[] expected, byte[] actual,  @AT@ 5435 @LENGTH@ 259
---DEL Modifier@@private @AT@ 5435 @LENGTH@ 7
---DEL Modifier@@static @AT@ 5443 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 5450 @LENGTH@ 7
---DEL SimpleName@@MethodName:matches @AT@ 5458 @LENGTH@ 7
---DEL SingleVariableDeclaration@@byte[] expected @AT@ 5466 @LENGTH@ 15
------DEL ArrayType@@byte[] @AT@ 5466 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 5466 @LENGTH@ 4
------DEL SimpleName@@expected @AT@ 5473 @LENGTH@ 8
---DEL SingleVariableDeclaration@@byte[] actual @AT@ 5483 @LENGTH@ 13
------DEL ArrayType@@byte[] @AT@ 5483 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 5483 @LENGTH@ 4
------DEL SimpleName@@actual @AT@ 5490 @LENGTH@ 6
---DEL IfStatement@@if (expected.length != actual.length) {  return false;} @AT@ 5502 @LENGTH@ 60
------DEL InfixExpression@@expected.length != actual.length @AT@ 5506 @LENGTH@ 32
---------DEL QualifiedName@@expected.length @AT@ 5506 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 5506 @LENGTH@ 8
------------DEL SimpleName@@length @AT@ 5515 @LENGTH@ 6
---------DEL Operator@@!= @AT@ 5521 @LENGTH@ 2
---------DEL QualifiedName@@actual.length @AT@ 5525 @LENGTH@ 13
------------DEL SimpleName@@actual @AT@ 5525 @LENGTH@ 6
------------DEL SimpleName@@length @AT@ 5532 @LENGTH@ 6
------DEL Block@@ThenBody:{  return false;} @AT@ 5540 @LENGTH@ 22
---------DEL ReturnStatement@@BooleanLiteral:false @AT@ 5545 @LENGTH@ 13
------------DEL BooleanLiteral@@false @AT@ 5552 @LENGTH@ 5
---DEL VariableDeclarationStatement@@int result=0; @AT@ 5566 @LENGTH@ 15
------DEL PrimitiveType@@int @AT@ 5566 @LENGTH@ 3
------DEL VariableDeclarationFragment@@result=0 @AT@ 5570 @LENGTH@ 10
---------DEL SimpleName@@result @AT@ 5570 @LENGTH@ 6
---------DEL NumberLiteral@@0 @AT@ 5579 @LENGTH@ 1
---DEL ForStatement@@for (int i=0; i < expected.length; i++) {  result|=expected[i] ^ actual[i];} @AT@ 5584 @LENGTH@ 85
------DEL VariableDeclarationExpression@@int i=0 @AT@ 5589 @LENGTH@ 9
---------DEL PrimitiveType@@int @AT@ 5589 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@i=0 @AT@ 5593 @LENGTH@ 5
------------DEL SimpleName@@i @AT@ 5593 @LENGTH@ 1
------------DEL NumberLiteral@@0 @AT@ 5597 @LENGTH@ 1
------DEL InfixExpression@@i < expected.length @AT@ 5600 @LENGTH@ 19
---------DEL SimpleName@@i @AT@ 5600 @LENGTH@ 1
---------DEL Operator@@< @AT@ 5601 @LENGTH@ 1
---------DEL QualifiedName@@expected.length @AT@ 5604 @LENGTH@ 15
------------DEL SimpleName@@expected @AT@ 5604 @LENGTH@ 8
------------DEL SimpleName@@length @AT@ 5613 @LENGTH@ 6
------DEL PostfixExpression@@i++ @AT@ 5621 @LENGTH@ 3
---------DEL SimpleName@@i @AT@ 5621 @LENGTH@ 1
---------DEL Operator@@++ @AT@ 5623 @LENGTH@ 2
------DEL ExpressionStatement@@Assignment:result|=expected[i] ^ actual[i] @AT@ 5631 @LENGTH@ 34
---------DEL Assignment@@result|=expected[i] ^ actual[i] @AT@ 5631 @LENGTH@ 33
------------DEL SimpleName@@result @AT@ 5631 @LENGTH@ 6
------------DEL Operator@@|= @AT@ 5637 @LENGTH@ 2
------------DEL InfixExpression@@expected[i] ^ actual[i] @AT@ 5641 @LENGTH@ 23
---------------DEL ArrayAccess@@expected[i] @AT@ 5641 @LENGTH@ 11
------------------DEL SimpleName@@expected @AT@ 5641 @LENGTH@ 8
------------------DEL SimpleName@@i @AT@ 5650 @LENGTH@ 1
---------------DEL Operator@@^ @AT@ 5652 @LENGTH@ 1
---------------DEL ArrayAccess@@actual[i] @AT@ 5655 @LENGTH@ 9
------------------DEL SimpleName@@actual @AT@ 5655 @LENGTH@ 6
------------------DEL SimpleName@@i @AT@ 5662 @LENGTH@ 1
---DEL ReturnStatement@@InfixExpression:result == 0 @AT@ 5672 @LENGTH@ 19
------DEL InfixExpression@@result == 0 @AT@ 5679 @LENGTH@ 11
---------DEL SimpleName@@result @AT@ 5679 @LENGTH@ 6
---------DEL Operator@@== @AT@ 5685 @LENGTH@ 2
---------DEL NumberLiteral@@0 @AT@ 5689 @LENGTH@ 1


UPD MethodDeclaration@@public, void, MethodName:setAdminsThatShouldDeclare, AmqpAdmin... adminsThatShouldDeclare,  @TO@ public, void, MethodName:setAdminsThatShouldDeclare, AmqpAdmin... admins,  @AT@ 2156 @LENGTH@ 139
---UPD SingleVariableDeclaration@@AmqpAdmin... adminsThatShouldDeclare @TO@ AmqpAdmin... admins @AT@ 2195 @LENGTH@ 36
------UPD SimpleName@@adminsThatShouldDeclare @TO@ admins @AT@ 2208 @LENGTH@ 23
---UPD ExpressionStatement@@Assignment:this.adminsThatShouldDeclare=adminsThatShouldDeclare @TO@ Assignment:this.adminsThatShouldDeclare=admins @AT@ 2237 @LENGTH@ 55
------UPD Assignment@@this.adminsThatShouldDeclare=adminsThatShouldDeclare @TO@ this.adminsThatShouldDeclare=admins @AT@ 2237 @LENGTH@ 54
---------UPD SimpleName@@adminsThatShouldDeclare @TO@ admins @AT@ 2268 @LENGTH@ 23


UPD MethodDeclaration@@public, void, MethodName:preWriteCheck, Exception,  @TO@ public, void, MethodName:preWriteCheck, Exchange exchange, Exception,  @AT@ 3740 @LENGTH@ 1193
---INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:preWriteCheck, Exception,  @AT@ 3766 @LENGTH@ 17
------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3766 @LENGTH@ 8
------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3775 @LENGTH@ 8
---UPD IfStatement@@if (!noop) {  try {    connectIfNecessary();  } catch (  Exception e) {    loggedIn=false;    throw e;  }} @TO@ if (!noop) {  try {    connectIfNecessary(exchange);  } catch (  Exception e) {    loggedIn=false;    throw e;  }} @AT@ 4672 @LENGTH@ 255
------UPD Block@@ThenBody:{  try {    connectIfNecessary();  } catch (  Exception e) {    loggedIn=false;    throw e;  }} @TO@ ThenBody:{  try {    connectIfNecessary(exchange);  } catch (  Exception e) {    loggedIn=false;    throw e;  }} @AT@ 4683 @LENGTH@ 244
---------UPD TryStatement@@try {  connectIfNecessary();} catch (Exception e) {  loggedIn=false;  throw e;} @TO@ try {  connectIfNecessary(exchange);} catch (Exception e) {  loggedIn=false;  throw e;} @AT@ 4697 @LENGTH@ 220
------------UPD ExpressionStatement@@MethodInvocation:connectIfNecessary() @TO@ MethodInvocation:connectIfNecessary(exchange) @AT@ 4719 @LENGTH@ 21
---------------UPD MethodInvocation@@MethodName:connectIfNecessary:[] @TO@ connectIfNecessary(exchange) @AT@ 4719 @LENGTH@ 20
------------------INS SimpleName@@MethodName:connectIfNecessary:[exchange] @TO@ MethodInvocation@@MethodName:connectIfNecessary:[] @AT@ 4736 @LENGTH@ 28
---------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:connectIfNecessary:[exchange] @AT@ 4755 @LENGTH@ 8


UPD TypeDeclaration@@[public, static]AdvancedNagiosEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedNagiosEndpointBuilder, [EndpointProducerBuilder] @AT@ 6776 @LENGTH@ 2062
---DEL Modifier@@static @AT@ 6783 @LENGTH@ 6


UPD TypeDeclaration@@[public]DefaultSerializationStrategy, [SerializationStrategy] @TO@ [@Deprecated, public]DefaultSerializationStrategy, [SerializationStrategy] @AT@ 1141 @LENGTH@ 1923
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]DefaultSerializationStrategy, [SerializationStrategy] @AT@ 1319 @LENGTH@ 11


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Task<? extends Serializable> currTask=(Task<? extends Serializable>)nd; @TO@ @SuppressWarnings("unchecked") Task<?> currTask=(Task<?>)nd; @AT@ 2477 @LENGTH@ 109
---UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2512 @LENGTH@ 28
---UPD VariableDeclarationFragment@@currTask=(Task<? extends Serializable>)nd @TO@ currTask=(Task<?>)nd @AT@ 2541 @LENGTH@ 44
------UPD CastExpression@@(Task<? extends Serializable>)nd @TO@ (Task<?>)nd @AT@ 2552 @LENGTH@ 33
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2553 @LENGTH@ 28


UPD TypeDeclaration@@[public, static]GoogleBigQueryEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]GoogleBigQueryEndpointBuilder, [EndpointProducerBuilder] @AT@ 1400 @LENGTH@ 2552
---DEL Modifier@@static @AT@ 1407 @LENGTH@ 6


UPD EnumDeclaration@@[public, static]SqlOutputType,  @TO@ [static]SqlOutputType,  @AT@ 79231 @LENGTH@ 83
---DEL Modifier@@public @AT@ 79231 @LENGTH@ 6


UPD TypeDeclaration@@[public]OAuth2RefreshToken,  @TO@ [@Deprecated, public]OAuth2RefreshToken,  @AT@ 745 @LENGTH@ 152
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]OAuth2RefreshToken,  @AT@ 923 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1852 @LENGTH@ 57
---UPD MethodInvocation@@assertEquals(HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals(HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1852 @LENGTH@ 56
------UPD SimpleName@@MethodName:assertEquals:[HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:[HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 1852 @LENGTH@ 56
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 1865 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 1876 @LENGTH@ 5


UPD EnumDeclaration@@[public, static]DdbOperations,  @TO@ [static]DdbOperations,  @AT@ 10599 @LENGTH@ 159
---DEL Modifier@@public @AT@ 10599 @LENGTH@ 6


UPD TypeDeclaration@@[public, static]AdvancedChatScriptEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedChatScriptEndpointBuilder, [EndpointProducerBuilder] @AT@ 4030 @LENGTH@ 2107
---DEL Modifier@@static @AT@ 4037 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.assertEquals(1456,details.get(6).getAbsolutePosition()) @TO@ MethodInvocation:Assert.assertEquals(1455,details.get(6).getAbsolutePosition()) @AT@ 3425 @LENGTH@ 64
---UPD MethodInvocation@@Assert.assertEquals(1456,details.get(6).getAbsolutePosition()) @TO@ Assert.assertEquals(1455,details.get(6).getAbsolutePosition()) @AT@ 3425 @LENGTH@ 63
------UPD SimpleName@@MethodName:assertEquals:[1456, details.get(6).getAbsolutePosition()] @TO@ MethodName:assertEquals:[1455, details.get(6).getAbsolutePosition()] @AT@ 3432 @LENGTH@ 56
---------UPD NumberLiteral@@1456 @TO@ 1455 @AT@ 3445 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostName={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileName={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}").routeId("FromDebeziumMySql").setBody(exchange -> {
  final Map key=exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY,Map.class);
  final Map value=exchange.getMessage().getBody(Map.class);
  final String operation=(String)exchange.getMessage().getHeader(DebeziumConstants.HEADER_OPERATION);
  final Map<String,Object> kinesisBody=new HashMap<>();
  kinesisBody.put("key",key);
  kinesisBody.put("value",value);
  kinesisBody.put("operation",operation);
  return kinesisBody;
}
).process(exchange -> {
  final Struct key=(Struct)exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY);
  final String hash=String.valueOf(key.hashCode());
  exchange.getMessage().setHeader(KinesisConstants.PARTITION_KEY,hash);
}
).marshal().json(JsonLibrary.Jackson).to("aws-kinesis:{{kinesis.streamName}}?accessKey=RAW({{kinesis.accessKey}})" + "&secretKey=RAW({{kinesis.secretKey}})" + "&region={{kinesis.region}}").end() @TO@ MethodInvocation:from("debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostname={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileFilename={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}").routeId("FromDebeziumMySql").setBody(exchange -> {
  final Map key=exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY,Map.class);
  final Map value=exchange.getMessage().getBody(Map.class);
  final String operation=(String)exchange.getMessage().getHeader(DebeziumConstants.HEADER_OPERATION);
  final Map<String,Object> kinesisBody=new HashMap<>();
  kinesisBody.put("key",key);
  kinesisBody.put("value",value);
  kinesisBody.put("operation",operation);
  return kinesisBody;
}
).process(exchange -> {
  final Struct key=(Struct)exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY);
  final String hash=String.valueOf(key.hashCode());
  exchange.getMessage().setHeader(KinesisConstants.PARTITION_KEY,hash);
}
).marshal().json(JsonLibrary.Jackson).to("aws-kinesis:{{kinesis.streamName}}?accessKey=RAW({{kinesis.accessKey}})" + "&secretKey=RAW({{kinesis.secretKey}})" + "&region={{kinesis.region}}").end() @AT@ 2289 @LENGTH@ 3957
---UPD MethodInvocation@@from("debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostName={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileName={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}").routeId("FromDebeziumMySql").setBody(exchange -> {
  final Map key=exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY,Map.class);
  final Map value=exchange.getMessage().getBody(Map.class);
  final String operation=(String)exchange.getMessage().getHeader(DebeziumConstants.HEADER_OPERATION);
  final Map<String,Object> kinesisBody=new HashMap<>();
  kinesisBody.put("key",key);
  kinesisBody.put("value",value);
  kinesisBody.put("operation",operation);
  return kinesisBody;
}
).process(exchange -> {
  final Struct key=(Struct)exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY);
  final String hash=String.valueOf(key.hashCode());
  exchange.getMessage().setHeader(KinesisConstants.PARTITION_KEY,hash);
}
).marshal().json(JsonLibrary.Jackson).to("aws-kinesis:{{kinesis.streamName}}?accessKey=RAW({{kinesis.accessKey}})" + "&secretKey=RAW({{kinesis.secretKey}})" + "&region={{kinesis.region}}").end() @TO@ from("debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostname={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileFilename={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}").routeId("FromDebeziumMySql").setBody(exchange -> {
  final Map key=exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY,Map.class);
  final Map value=exchange.getMessage().getBody(Map.class);
  final String operation=(String)exchange.getMessage().getHeader(DebeziumConstants.HEADER_OPERATION);
  final Map<String,Object> kinesisBody=new HashMap<>();
  kinesisBody.put("key",key);
  kinesisBody.put("value",value);
  kinesisBody.put("operation",operation);
  return kinesisBody;
}
).process(exchange -> {
  final Struct key=(Struct)exchange.getMessage().getHeader(DebeziumConstants.HEADER_KEY);
  final String hash=String.valueOf(key.hashCode());
  exchange.getMessage().setHeader(KinesisConstants.PARTITION_KEY,hash);
}
).marshal().json(JsonLibrary.Jackson).to("aws-kinesis:{{kinesis.streamName}}?accessKey=RAW({{kinesis.accessKey}})" + "&secretKey=RAW({{kinesis.secretKey}})" + "&region={{kinesis.region}}").end() @AT@ 2289 @LENGTH@ 3956
------UPD MethodInvocation@@MethodName:from:["debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostName={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileName={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}"] @TO@ MethodName:from:["debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostname={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileFilename={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}"] @AT@ 2289 @LENGTH@ 807
---------UPD InfixExpression@@"debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostName={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileName={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}" @TO@ "debezium:mysql?name={{debezium.mysql.name}}" + "&databaseServerId={{debezium.mysql.databaseServerId}}" + "&databaseHostname={{debezium.mysql.databaseHostName}}"+ "&databaseUser={{debezium.mysql.databaseUser}}"+ "&databasePassword={{debezium.mysql.databasePassword}}"+ "&databaseServerName={{debezium.mysql.databaseServerName}}"+ "&databaseHistoryFileFilename={{debezium.mysql.databaseHistoryFileName}}"+ "&databaseWhitelist={{debezium.mysql.databaseWhitelist}}"+ "&tableWhitelist={{debezium.mysql.tableWhitelist}}"+ "&offsetStorageFileName={{debezium.mysql.offsetStorageFileName}}" @AT@ 2294 @LENGTH@ 801
------------UPD StringLiteral@@"&databaseHostName={{debezium.mysql.databaseHostName}}" @TO@ "&databaseHostname={{debezium.mysql.databaseHostName}}" @AT@ 2448 @LENGTH@ 55
------------UPD StringLiteral@@"&databaseHistoryFileName={{debezium.mysql.databaseHistoryFileName}}" @TO@ "&databaseHistoryFileFilename={{debezium.mysql.databaseHistoryFileName}}" @AT@ 2772 @LENGTH@ 69


UPD TypeDeclaration@@[public]JwtClaimsSetVerifier,  @TO@ [@Deprecated, public]JwtClaimsSetVerifier,  @AT@ 1086 @LENGTH@ 288
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]JwtClaimsSetVerifier,  @AT@ 1264 @LENGTH@ 11


DEL IfStatement@@if (conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal)) {  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3578 @LENGTH@ 329
---DEL MethodInvocation@@conf.getBoolean(ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal) @AT@ 3582 @LENGTH@ 128
------DEL SimpleName@@Name:conf @AT@ 3582 @LENGTH@ 4
------DEL SimpleName@@MethodName:getBoolean:[ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal] @AT@ 3587 @LENGTH@ 123
---------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.varname @AT@ 3598 @LENGTH@ 47
------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3598 @LENGTH@ 39
---------------DEL SimpleName@@ConfVars @AT@ 3598 @LENGTH@ 8
---------------DEL SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3607 @LENGTH@ 30
------------DEL SimpleName@@varname @AT@ 3638 @LENGTH@ 7
---------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED.defaultBoolVal @AT@ 3655 @LENGTH@ 54
------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3655 @LENGTH@ 39
---------------DEL SimpleName@@ConfVars @AT@ 3655 @LENGTH@ 8
---------------DEL SimpleName@@LLAP_DAEMON_WEB_XFRAME_ENABLED @AT@ 3664 @LENGTH@ 30
------------DEL SimpleName@@defaultBoolVal @AT@ 3695 @LENGTH@ 14
---DEL Block@@ThenBody:{  builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal));} @AT@ 3712 @LENGTH@ 195
------DEL ExpressionStatement@@MethodInvocation:builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 181
---------DEL MethodInvocation@@builder.configureXFrame(true).setXFrameOption(conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)) @AT@ 3720 @LENGTH@ 180
------------DEL MethodInvocation@@MethodName:configureXFrame:[true] @AT@ 3720 @LENGTH@ 29
---------------DEL BooleanLiteral@@true @AT@ 3744 @LENGTH@ 4
------------DEL SimpleName@@Name:builder @AT@ 3720 @LENGTH@ 7
------------DEL SimpleName@@MethodName:setXFrameOption:[conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal)] @AT@ 3750 @LENGTH@ 150
---------------DEL MethodInvocation@@conf.get(ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname,ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal) @AT@ 3777 @LENGTH@ 122
------------------DEL SimpleName@@Name:conf @AT@ 3777 @LENGTH@ 4
------------------DEL SimpleName@@MethodName:get:[ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname, ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal] @AT@ 3782 @LENGTH@ 117
---------------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.varname @AT@ 3786 @LENGTH@ 45
------------------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3786 @LENGTH@ 37
---------------------------DEL SimpleName@@ConfVars @AT@ 3786 @LENGTH@ 8
---------------------------DEL SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3795 @LENGTH@ 28
------------------------DEL SimpleName@@varname @AT@ 3824 @LENGTH@ 7
---------------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE.defaultStrVal @AT@ 3847 @LENGTH@ 51
------------------------DEL QualifiedName@@ConfVars.LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3847 @LENGTH@ 37
---------------------------DEL SimpleName@@ConfVars @AT@ 3847 @LENGTH@ 8
---------------------------DEL SimpleName@@LLAP_DAEMON_WEB_XFRAME_VALUE @AT@ 3856 @LENGTH@ 28
------------------------DEL SimpleName@@defaultStrVal @AT@ 3885 @LENGTH@ 13


DEL VariableDeclarationStatement@@SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z"); @AT@ 2078 @LENGTH@ 68
---DEL SimpleType@@SimpleDateFormat @AT@ 2078 @LENGTH@ 16
---DEL VariableDeclarationFragment@@df=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z") @AT@ 2095 @LENGTH@ 50
------DEL SimpleName@@df @AT@ 2095 @LENGTH@ 2
------DEL ClassInstanceCreation@@SimpleDateFormat["yyyy-MM-dd HH:mm:ss Z"] @AT@ 2100 @LENGTH@ 45
---------DEL New@@new @AT@ 2100 @LENGTH@ 3
---------DEL SimpleType@@SimpleDateFormat @AT@ 2104 @LENGTH@ 16
---------DEL StringLiteral@@"yyyy-MM-dd HH:mm:ss Z" @AT@ 2121 @LENGTH@ 23


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context withinContext, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context withinContext, SemanticException,  @AT@ 1569 @LENGTH@ 1306
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1576 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1581 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=tableHandler.handle(currentContext); @TO@ List<Task<?>> tasks=tableHandler.handle(currentContext); @AT@ 2581 @LENGTH@ 79
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2581 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2586 @LENGTH@ 28


UPD MethodDeclaration@@public, String, MethodName:index, @AuthenticationPrincipal OAuth2TokenAttributes attributes,  @TO@ public, String, MethodName:index, @AuthenticationPrincipal OAuth2AuthenticatedPrincipal principal,  @AT@ 1025 @LENGTH@ 162
---UPD SingleVariableDeclaration@@@AuthenticationPrincipal OAuth2TokenAttributes attributes @TO@ @AuthenticationPrincipal OAuth2AuthenticatedPrincipal principal @AT@ 1045 @LENGTH@ 57
------UPD SimpleType@@OAuth2TokenAttributes @TO@ OAuth2AuthenticatedPrincipal @AT@ 1070 @LENGTH@ 21
------UPD SimpleName@@attributes @TO@ principal @AT@ 1092 @LENGTH@ 10
---UPD ReturnStatement@@MethodInvocation:String.format("Hello, %s!",(String)attributes.getAttribute("sub")) @TO@ MethodInvocation:String.format("Hello, %s!",(String)principal.getAttribute("sub")) @AT@ 1108 @LENGTH@ 76
------UPD MethodInvocation@@String.format("Hello, %s!",(String)attributes.getAttribute("sub")) @TO@ String.format("Hello, %s!",(String)principal.getAttribute("sub")) @AT@ 1115 @LENGTH@ 68
---------UPD SimpleName@@MethodName:format:["Hello, %s!", (String)attributes.getAttribute("sub")] @TO@ MethodName:format:["Hello, %s!", (String)principal.getAttribute("sub")] @AT@ 1122 @LENGTH@ 61
------------UPD CastExpression@@(String)attributes.getAttribute("sub") @TO@ (String)principal.getAttribute("sub") @AT@ 1143 @LENGTH@ 39
---------------UPD MethodInvocation@@attributes.getAttribute("sub") @TO@ principal.getAttribute("sub") @AT@ 1152 @LENGTH@ 30
------------------UPD SimpleName@@Name:attributes @TO@ Name:principal @AT@ 1152 @LENGTH@ 10


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42430 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42430 @LENGTH@ 6


UPD MethodDeclaration@@default, KinesisFirehoseEndpointBuilder, MethodName:kinesisFirehose, String path,  @TO@ default, KinesisFirehoseEndpointBuilder, MethodName:awsKinesisFirehose, String path,  @AT@ 8023 @LENGTH@ 447
---UPD SimpleName@@MethodName:kinesisFirehose @TO@ MethodName:awsKinesisFirehose @AT@ 8062 @LENGTH@ 15


UPD MethodDeclaration@@private, static, Collection<Task<? extends Serializable>>, T, MethodName:iterateTask, Collection<Task<?>> tasks, Class<T> clazz, Function<T> function, Set<Task> visited,  @TO@ private, static, Collection<Task<?>>, T, MethodName:iterateTask, Collection<Task<?>> tasks, Class<T> clazz, Function<T> function, Set<Task> visited,  @AT@ 1483 @LENGTH@ 726
---UPD ParameterizedType@@Collection<Task<? extends Serializable>> @TO@ Collection<Task<?>> @AT@ 1502 @LENGTH@ 40
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1513 @LENGTH@ 28


UPD TypeDeclaration@@[public]AuthorizationServerTokenServices,  @TO@ [@Deprecated, public]AuthorizationServerTokenServices,  @AT@ 985 @LENGTH@ 1343
---INS MarkerAnnotation@@@Deprecated @TO@ TypeDeclaration@@[public]AuthorizationServerTokenServices,  @AT@ 1163 @LENGTH@ 11


UPD EnumDeclaration@@[public, static]HazelcastOperation,  @TO@ [static]HazelcastOperation,  @AT@ 42126 @LENGTH@ 404
---DEL Modifier@@public @AT@ 42126 @LENGTH@ 6


DEL MethodDeclaration@@protected, JndiRegistry, MethodName:createRegistry, Exception,  @AT@ 1357 @LENGTH@ 204
---DEL Modifier@@protected @AT@ 1357 @LENGTH@ 9
---DEL SimpleType@@JndiRegistry @AT@ 1367 @LENGTH@ 12
---DEL SimpleName@@MethodName:createRegistry @AT@ 1380 @LENGTH@ 14
---DEL SimpleType@@Exception @AT@ 1404 @LENGTH@ 9
---DEL VariableDeclarationStatement@@JndiRegistry registry=super.createRegistry(); @AT@ 1424 @LENGTH@ 47
------DEL SimpleType@@JndiRegistry @AT@ 1424 @LENGTH@ 12
------DEL VariableDeclarationFragment@@registry=super.createRegistry() @AT@ 1437 @LENGTH@ 33
---------DEL SimpleName@@registry @AT@ 1437 @LENGTH@ 8
---------DEL SuperMethodInvocation@@super.createRegistry() @AT@ 1448 @LENGTH@ 22
------------DEL SimpleName@@MethodName:createRegistry:[] @AT@ 1454 @LENGTH@ 14
---DEL ExpressionStatement@@MethodInvocation:registry.bind("service",new ServiceComponent()) @AT@ 1480 @LENGTH@ 49
------DEL MethodInvocation@@registry.bind("service",new ServiceComponent()) @AT@ 1480 @LENGTH@ 48
---------DEL SimpleName@@Name:registry @AT@ 1480 @LENGTH@ 8
---------DEL SimpleName@@MethodName:bind:["service", new ServiceComponent()] @AT@ 1489 @LENGTH@ 39
------------DEL StringLiteral@@"service" @AT@ 1494 @LENGTH@ 9
------------DEL ClassInstanceCreation@@ServiceComponent[] @AT@ 1505 @LENGTH@ 22
---DEL ReturnStatement@@SimpleName:registry @AT@ 1539 @LENGTH@ 16
------DEL SimpleName@@registry @AT@ 1546 @LENGTH@ 8


UPD MethodDeclaration@@List<Task<? extends Serializable>>, MethodName:tasks, TaskTracker tracker,  @TO@ List<Task<?>>, MethodName:tasks, TaskTracker tracker,  @AT@ 2300 @LENGTH@ 456
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2265 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2270 @LENGTH@ 28
---UPD VariableDeclarationStatement@@List<Task<? extends Serializable>> tasks=new ArrayList<>(); @TO@ List<Task<?>> tasks=new ArrayList<>(); @AT@ 2333 @LENGTH@ 61
------UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 2333 @LENGTH@ 34
---------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 2338 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]EventType,  @TO@ [static]EventType,  @AT@ 48945 @LENGTH@ 80
---DEL Modifier@@public @AT@ 48945 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled,  @TO@ public, void, MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingEnabled,  @AT@ 3507 @LENGTH@ 668
---UPD SimpleName@@MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingDisabled @TO@ MethodName:rolePrefixWithGrantedAuthorityDefaultsAndSubclassWithProxyingEnabled @AT@ 3519 @LENGTH@ 69


UPD ExpressionStatement@@MethodInvocation:assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.FOUND,response.getStatusCode()) @TO@ MethodInvocation:assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1984 @LENGTH@ 99
---UPD MethodInvocation@@assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.FOUND,response.getStatusCode()) @TO@ assertEquals("Wrong status: " + response.getHeaders(),HttpStatus.SEE_OTHER,response.getStatusCode()) @AT@ 1984 @LENGTH@ 98
------UPD SimpleName@@MethodName:assertEquals:["Wrong status: " + response.getHeaders(), HttpStatus.FOUND, response.getStatusCode()] @TO@ MethodName:assertEquals:["Wrong status: " + response.getHeaders(), HttpStatus.SEE_OTHER, response.getStatusCode()] @AT@ 1984 @LENGTH@ 98
---------UPD QualifiedName@@HttpStatus.FOUND @TO@ HttpStatus.SEE_OTHER @AT@ 2039 @LENGTH@ 16
------------UPD SimpleName@@FOUND @TO@ SEE_OTHER @AT@ 2050 @LENGTH@ 5


UPD TypeDeclaration@@[public, static]AdvancedTikaEndpointBuilder, [EndpointProducerBuilder] @TO@ [public]AdvancedTikaEndpointBuilder, [EndpointProducerBuilder] @AT@ 5356 @LENGTH@ 2048
---DEL Modifier@@static @AT@ 5363 @LENGTH@ 6


INS VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @TO@ MethodDeclaration@@public, ModelNode, MethodName:execute, OperationContext context, ModelNode operation, Operation<AdvancedCache<?,?>> executable, OperationFailedException,  @AT@ 2245 @LENGTH@ 102
---INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @AT@ 2245 @LENGTH@ 11
---INS VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ VariableDeclarationStatement@@ServiceName name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName); @AT@ 2257 @LENGTH@ 89
------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @AT@ 2257 @LENGTH@ 4
------MOV MethodInvocation@@InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @TO@ VariableDeclarationFragment@@name=InfinispanCacheRequirement.CACHE.getServiceName(context,containerName,cacheName) @AT@ 2297 @LENGTH@ 82


UPD ExpressionStatement@@MethodInvocation:from("netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder").to(mockGmond) @TO@ MethodInvocation:from("netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder").to(mockGmond) @AT@ 6464 @LENGTH@ 97
---UPD MethodInvocation@@from("netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder").to(mockGmond) @TO@ from("netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder").to(mockGmond) @AT@ 6464 @LENGTH@ 96
------UPD MethodInvocation@@MethodName:from:["netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder"] @TO@ MethodName:from:["netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder"] @AT@ 6464 @LENGTH@ 82
---------UPD InfixExpression@@"netty4:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder" @TO@ "netty:udp://localhost:" + getTestPort() + "/?decoders=#protocolV30Decoder" @AT@ 6469 @LENGTH@ 76
------------UPD StringLiteral@@"netty4:udp://localhost:" @TO@ "netty:udp://localhost:" @AT@ 6469 @LENGTH@ 25


UPD EnumDeclaration@@[public, static]HttpMethods,  @TO@ [static]HttpMethods,  @AT@ 25557 @LENGTH@ 99
---DEL Modifier@@public @AT@ 25557 @LENGTH@ 6


UPD MethodDeclaration@@public, List<Task<? extends Serializable>>, MethodName:handle, Context context, SemanticException,  @TO@ public, List<Task<?>>, MethodName:handle, Context context, SemanticException,  @AT@ 1924 @LENGTH@ 1895
---UPD ParameterizedType@@List<Task<? extends Serializable>> @TO@ List<Task<?>> @AT@ 1931 @LENGTH@ 34
------UPD ParameterizedType@@Task<? extends Serializable> @TO@ Task<?> @AT@ 1936 @LENGTH@ 28


UPD EnumDeclaration@@[public, static]IgniteIdGenOperation,  @TO@ [static]IgniteIdGenOperation,  @AT@ 6447 @LENGTH@ 124
---DEL Modifier@@public @AT@ 6447 @LENGTH@ 6

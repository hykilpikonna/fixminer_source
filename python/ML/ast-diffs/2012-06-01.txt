UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerSubModel(HostControllerResourceDescription.of(environment)) @TO@ MethodInvocation:hostRegistration.registerSubModel(HostEnvironmentResourceDescription.of(environment)) @AT@ 19243 @LENGTH@ 85
---UPD MethodInvocation@@hostRegistration.registerSubModel(HostControllerResourceDescription.of(environment)) @TO@ hostRegistration.registerSubModel(HostEnvironmentResourceDescription.of(environment)) @AT@ 19243 @LENGTH@ 84
------UPD SimpleName@@MethodName:registerSubModel:[HostControllerResourceDescription.of(environment)] @TO@ MethodName:registerSubModel:[HostEnvironmentResourceDescription.of(environment)] @AT@ 19260 @LENGTH@ 67
---------UPD MethodInvocation@@HostControllerResourceDescription.of(environment) @TO@ HostEnvironmentResourceDescription.of(environment) @AT@ 19277 @LENGTH@ 49
------------UPD SimpleName@@Name:HostControllerResourceDescription @TO@ Name:HostEnvironmentResourceDescription @AT@ 19277 @LENGTH@ 33


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID); @AT@ 2301 @LENGTH@ 101
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2319 @LENGTH@ 82
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2333 @LENGTH@ 68
---------UPD SimpleName@@MethodName:removeTransaction:[this.xidTransactionID] @TO@ MethodName:getImportedTransaction:[this.xidTransactionID] @AT@ 2361 @LENGTH@ 40


UPD MethodDeclaration@@voidMethodName:ServerGroupSeparatorState, ServerGroupState sg,  @TO@ voidMethodName:ServerGroupSeparatorState, final ServerGroupState sg,  @AT@ 1590 @LENGTH@ 243
---UPD SingleVariableDeclaration@@ServerGroupState sg @TO@ final ServerGroupState sg @AT@ 1616 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ServerGroupState sg @AT@ 1702 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new EnterStateCharacterHandler(sg)) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
) @AT@ 1702 @LENGTH@ 54
------UPD MethodInvocation@@setDefaultHandler(new EnterStateCharacterHandler(sg)) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
) @AT@ 1702 @LENGTH@ 53
---------UPD SimpleName@@MethodName:setDefaultHandler:[new EnterStateCharacterHandler(sg)] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
] @AT@ 1702 @LENGTH@ 53
------------UPD ClassInstanceCreation@@EnterStateCharacterHandler[sg] @TO@ LineBreakHandler[false, false] @AT@ 1720 @LENGTH@ 34
---------------UPD SimpleType@@EnterStateCharacterHandler @TO@ LineBreakHandler @AT@ 1724 @LENGTH@ 26
---------------DEL SimpleName@@sg @AT@ 1751 @LENGTH@ 2
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1833 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1840 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1846 @LENGTH@ 171
------------------INS MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1882 @LENGTH@ 125
---------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1882 @LENGTH@ 9
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1892 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doHandle @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1897 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1906 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1906 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1921 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1933 @LENGTH@ 22
---------------------INS ExpressionStatement@@MethodInvocation:ctx.enterState(sg) @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1974 @LENGTH@ 19
------------------------INS MethodInvocation@@ctx.enterState(sg) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(sg) @AT@ 1974 @LENGTH@ 18
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(sg) @AT@ 1974 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:enterState:[sg] @TO@ MethodInvocation@@ctx.enterState(sg) @AT@ 1978 @LENGTH@ 14
------------------------------INS SimpleName@@sg @TO@ SimpleName@@MethodName:enterState:[sg] @AT@ 1989 @LENGTH@ 2


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,env)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @AT@ 3512 @LENGTH@ 241
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,env) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer) @AT@ 3516 @LENGTH@ 53
------UPD SimpleName@@MethodName:parse:[reader, env] @TO@ MethodName:parse:[reader, env, propertyReplacer] @AT@ 3551 @LENGTH@ 18
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, env] @AT@ 3570 @LENGTH@ 16


UPD IfStatement@@if (e instanceof EJBException && e.getCause() instanceof UndeclaredThrowableException && e.getCause().getCause() instanceof TimeoutException) {  logger.info("Got the expected timeout exception",e.getCause());  return;} @TO@ if (e instanceof EJBException && e.getCause() instanceof TimeoutException) {  logger.info("Got the expected timeout exception",e.getCause());  return;} @AT@ 12189 @LENGTH@ 274
---UPD InfixExpression@@e instanceof EJBException && e.getCause() instanceof UndeclaredThrowableException && e.getCause().getCause() instanceof TimeoutException @TO@ e instanceof EJBException && e.getCause() instanceof TimeoutException @AT@ 12193 @LENGTH@ 136
------DEL InstanceofExpression@@e.getCause() instanceof UndeclaredThrowableException @AT@ 12222 @LENGTH@ 52
---------DEL MethodInvocation@@e.getCause() @AT@ 12222 @LENGTH@ 12
------------DEL SimpleName@@Name:e @AT@ 12222 @LENGTH@ 1
------------DEL SimpleName@@MethodName:getCause:[] @AT@ 12224 @LENGTH@ 10
---------DEL Instanceof@@instanceof @AT@ 12235 @LENGTH@ 10
---------DEL SimpleType@@UndeclaredThrowableException @AT@ 12246 @LENGTH@ 28
------UPD InstanceofExpression@@e.getCause().getCause() instanceof TimeoutException @TO@ e.getCause() instanceof TimeoutException @AT@ 12278 @LENGTH@ 51
---------UPD MethodInvocation@@e.getCause().getCause() @TO@ e.getCause() @AT@ 12278 @LENGTH@ 23
------------DEL MethodInvocation@@MethodName:getCause:[] @AT@ 12278 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:setValue=true @TO@ Assignment:setBoottime=true @AT@ 20424 @LENGTH@ 16
---UPD Assignment@@setValue=true @TO@ setBoottime=true @AT@ 20424 @LENGTH@ 15
------UPD SimpleName@@setValue @TO@ setBoottime @AT@ 20424 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2760 @LENGTH@ 69
---UPD MethodInvocation@@setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2760 @LENGTH@ 68
------UPD SimpleName@@MethodName:setDefaultHandler:[GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.IGNORE_LB_ESCAPE_ON] @AT@ 2760 @LENGTH@ 68
---------UPD QualifiedName@@GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER @TO@ WordCharacterHandler.IGNORE_LB_ESCAPE_ON @AT@ 2778 @LENGTH@ 49
------------UPD SimpleName@@GlobalCharacterHandlers @TO@ WordCharacterHandler @AT@ 2778 @LENGTH@ 23
------------UPD SimpleName@@CONTENT_CHARACTER_HANDLER @TO@ IGNORE_LB_ESCAPE_ON @AT@ 2802 @LENGTH@ 25


UPD Block@@ThenBody:{  return tc.convertTo(type,payload.getBodySources().get(0));} @TO@ ThenBody:{  T t=tc.convertTo(type,payload.getBodySources().get(0));  if (t instanceof Document) {    payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));  } else   if (t instanceof Source) {    payload.getBodySources().set(0,(Source)t);  }  return t;} @AT@ 5674 @LENGTH@ 99
---UPD ReturnStatement@@MethodInvocation:tc.convertTo(type,payload.getBodySources().get(0)) @TO@ SimpleName:t @AT@ 5696 @LENGTH@ 59
------INS SimpleName@@t @TO@ ReturnStatement@@MethodInvocation:tc.convertTo(type,payload.getBodySources().get(0)) @AT@ 6125 @LENGTH@ 1
---INS VariableDeclarationStatement@@T t=tc.convertTo(type,payload.getBodySources().get(0)); @TO@ Block@@ThenBody:{  return tc.convertTo(type,payload.getBodySources().get(0));} @AT@ 5738 @LENGTH@ 58
------INS SimpleType@@T @TO@ VariableDeclarationStatement@@T t=tc.convertTo(type,payload.getBodySources().get(0)); @AT@ 5738 @LENGTH@ 1
------INS VariableDeclarationFragment@@t=tc.convertTo(type,payload.getBodySources().get(0)) @TO@ VariableDeclarationStatement@@T t=tc.convertTo(type,payload.getBodySources().get(0)); @AT@ 5740 @LENGTH@ 55
---------MOV MethodInvocation@@tc.convertTo(type,payload.getBodySources().get(0)) @TO@ VariableDeclarationFragment@@t=tc.convertTo(type,payload.getBodySources().get(0)) @AT@ 5703 @LENGTH@ 51
---------INS SimpleName@@t @TO@ VariableDeclarationFragment@@t=tc.convertTo(type,payload.getBodySources().get(0)) @AT@ 5740 @LENGTH@ 1
---INS IfStatement@@if (t instanceof Document) {  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} else if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @TO@ Block@@ThenBody:{  return tc.convertTo(type,payload.getBodySources().get(0));} @AT@ 5817 @LENGTH@ 280
------INS InstanceofExpression@@t instanceof Document @TO@ IfStatement@@if (t instanceof Document) {  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} else if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 5821 @LENGTH@ 21
---------INS SimpleName@@t @TO@ InstanceofExpression@@t instanceof Document @AT@ 5821 @LENGTH@ 1
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@t instanceof Document @AT@ 5823 @LENGTH@ 10
---------INS SimpleType@@Document @TO@ InstanceofExpression@@t instanceof Document @AT@ 5834 @LENGTH@ 8
------INS Block@@ThenBody:{  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} @TO@ IfStatement@@if (t instanceof Document) {  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} else if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 5844 @LENGTH@ 131
---------INS ExpressionStatement@@MethodInvocation:payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @TO@ Block@@ThenBody:{  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} @AT@ 5870 @LENGTH@ 83
------------INS MethodInvocation@@payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @TO@ ExpressionStatement@@MethodInvocation:payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @AT@ 5870 @LENGTH@ 82
---------------INS MethodInvocation@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @AT@ 5870 @LENGTH@ 24
---------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @AT@ 5870 @LENGTH@ 7
---------------INS SimpleName@@MethodName:set:[0, new DOMSource(((Document)t).getDocumentElement())] @TO@ MethodInvocation@@payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement())) @AT@ 5895 @LENGTH@ 57
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:set:[0, new DOMSource(((Document)t).getDocumentElement())] @AT@ 5899 @LENGTH@ 1
------------------INS ClassInstanceCreation@@DOMSource[((Document)t).getDocumentElement()] @TO@ SimpleName@@MethodName:set:[0, new DOMSource(((Document)t).getDocumentElement())] @AT@ 5902 @LENGTH@ 49
---------------------INS New@@new @TO@ ClassInstanceCreation@@DOMSource[((Document)t).getDocumentElement()] @AT@ 5902 @LENGTH@ 3
---------------------INS SimpleType@@DOMSource @TO@ ClassInstanceCreation@@DOMSource[((Document)t).getDocumentElement()] @AT@ 5906 @LENGTH@ 9
---------------------INS MethodInvocation@@((Document)t).getDocumentElement() @TO@ ClassInstanceCreation@@DOMSource[((Document)t).getDocumentElement()] @AT@ 5916 @LENGTH@ 34
------------------------INS ParenthesizedExpression@@((Document)t) @TO@ MethodInvocation@@((Document)t).getDocumentElement() @AT@ 5916 @LENGTH@ 13
---------------------------INS CastExpression@@(Document)t @TO@ ParenthesizedExpression@@((Document)t) @AT@ 5917 @LENGTH@ 11
------------------------------INS SimpleType@@Document @TO@ CastExpression@@(Document)t @AT@ 5918 @LENGTH@ 8
------------------------------INS SimpleName@@t @TO@ CastExpression@@(Document)t @AT@ 5927 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getDocumentElement:[] @TO@ MethodInvocation@@((Document)t).getDocumentElement() @AT@ 5930 @LENGTH@ 20
------INS Block@@ElseBody:if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @TO@ IfStatement@@if (t instanceof Document) {  payload.getBodySources().set(0,new DOMSource(((Document)t).getDocumentElement()));} else if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 5981 @LENGTH@ 116
---------INS IfStatement@@if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @TO@ Block@@ElseBody:if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 5981 @LENGTH@ 116
------------INS InstanceofExpression@@t instanceof Source @TO@ IfStatement@@if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 5985 @LENGTH@ 19
---------------INS SimpleName@@t @TO@ InstanceofExpression@@t instanceof Source @AT@ 5985 @LENGTH@ 1
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@t instanceof Source @AT@ 5987 @LENGTH@ 10
---------------INS SimpleType@@Source @TO@ InstanceofExpression@@t instanceof Source @AT@ 5998 @LENGTH@ 6
------------INS Block@@ThenBody:{  payload.getBodySources().set(0,(Source)t);} @TO@ IfStatement@@if (t instanceof Source) {  payload.getBodySources().set(0,(Source)t);} @AT@ 6006 @LENGTH@ 91
---------------INS ExpressionStatement@@MethodInvocation:payload.getBodySources().set(0,(Source)t) @TO@ Block@@ThenBody:{  payload.getBodySources().set(0,(Source)t);} @AT@ 6032 @LENGTH@ 43
------------------INS MethodInvocation@@payload.getBodySources().set(0,(Source)t) @TO@ ExpressionStatement@@MethodInvocation:payload.getBodySources().set(0,(Source)t) @AT@ 6032 @LENGTH@ 42
---------------------INS MethodInvocation@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources().set(0,(Source)t) @AT@ 6032 @LENGTH@ 24
---------------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources().set(0,(Source)t) @AT@ 6032 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:set:[0, (Source)t] @TO@ MethodInvocation@@payload.getBodySources().set(0,(Source)t) @AT@ 6057 @LENGTH@ 17
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:set:[0, (Source)t] @AT@ 6061 @LENGTH@ 1
------------------------INS CastExpression@@(Source)t @TO@ SimpleName@@MethodName:set:[0, (Source)t] @AT@ 6064 @LENGTH@ 9
---------------------------INS SimpleType@@Source @TO@ CastExpression@@(Source)t @AT@ 6065 @LENGTH@ 6
---------------------------INS SimpleName@@t @TO@ CastExpression@@(Source)t @AT@ 6072 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build()] @AT@ 3009 @LENGTH@ 233
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build() @AT@ 3049 @LENGTH@ 192
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build() @AT@ 3062 @LENGTH@ 179
---------UPD MethodInvocation@@MethodName:setReplyParameters:[SCHEMA_LOCATION, URI] @TO@ MethodName:setParameters:[SCHEMA_LOCATION, URI] @AT@ 3062 @LENGTH@ 158


UPD Block@@ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>();  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      try {        stepCompleted=true;        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);      }  finally {        deploymentResults.set(result);        deploymentDoneLatch.countDown();      }    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    deploymentDoneLatch.countDown();    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @TO@ ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(new ModelNode());  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  boolean asyncCountDown=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      stepCompleted=true;      context.completeStep(new OperationContext.ResultHandler(){        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){          try {            deploymentResults.set(result);          }  finally {            deploymentDoneLatch.countDown();          }        }      });      asyncCountDown=true;    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    if (!asyncCountDown) {      deploymentDoneLatch.countDown();    }    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @AT@ 7601 @LENGTH@ 2624
---UPD VariableDeclarationStatement@@final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(); @TO@ final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(new ModelNode()); @AT@ 7724 @LENGTH@ 86
------UPD VariableDeclarationFragment@@deploymentResults=new AtomicReference<ModelNode>() @TO@ deploymentResults=new AtomicReference<ModelNode>(new ModelNode()) @AT@ 7757 @LENGTH@ 52
---------UPD ClassInstanceCreation@@AtomicReference<ModelNode>[] @TO@ AtomicReference<ModelNode>[new ModelNode()] @AT@ 7777 @LENGTH@ 32
------------INS ClassInstanceCreation@@ModelNode[] @TO@ ClassInstanceCreation@@AtomicReference<ModelNode>[] @AT@ 7808 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 7808 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 7812 @LENGTH@ 9
---UPD TryStatement@@try {  scanDoneLatch.await();  final ModelNode op=deploymentOperation.get();  if (op != null) {    final ModelNode result=new ModelNode();    final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));    final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());    context.addStep(result,op,handler,OperationContext.Stage.MODEL);    try {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  finally {      deploymentResults.set(result);      deploymentDoneLatch.countDown();    }  } else {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }} catch (InterruptedException e) {  interrupted=true;  throw new RuntimeException(e);} finally {  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @TO@ try {  scanDoneLatch.await();  final ModelNode op=deploymentOperation.get();  if (op != null) {    final ModelNode result=new ModelNode();    final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));    final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());    context.addStep(result,op,handler,OperationContext.Stage.MODEL);    stepCompleted=true;    context.completeStep(new OperationContext.ResultHandler(){      @Override public void handleResult(      OperationContext.ResultAction resultAction,      OperationContext context,      ModelNode operation){        try {          deploymentResults.set(result);        }  finally {          deploymentDoneLatch.countDown();        }      }    });    asyncCountDown=true;  } else {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }} catch (InterruptedException e) {  interrupted=true;  throw new RuntimeException(e);} finally {  if (!asyncCountDown) {    deploymentDoneLatch.countDown();  }  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 8725 @LENGTH@ 1486
------UPD IfStatement@@if (op != null) {  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} else {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);} @TO@ if (op != null) {  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  stepCompleted=true;  context.completeStep(new OperationContext.ResultHandler(){    @Override public void handleResult(    OperationContext.ResultAction resultAction,    OperationContext context,    ModelNode operation){      try {        deploymentResults.set(result);      }  finally {        deploymentDoneLatch.countDown();      }    }  });  asyncCountDown=true;} else {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);} @AT@ 8863 @LENGTH@ 986
---------UPD Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @TO@ ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  stepCompleted=true;  context.completeStep(new OperationContext.ResultHandler(){    @Override public void handleResult(    OperationContext.ResultAction resultAction,    OperationContext context,    ModelNode operation){      try {        deploymentResults.set(result);      }  finally {        deploymentDoneLatch.countDown();      }    }  });  asyncCountDown=true;} @AT@ 8879 @LENGTH@ 793
------------DEL TryStatement@@try {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);}  finally {  deploymentResults.set(result);  deploymentDoneLatch.countDown();} @AT@ 9307 @LENGTH@ 343
---------------DEL ExpressionStatement@@MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 9391 @LENGTH@ 77
------------MOV ExpressionStatement@@Assignment:stepCompleted=true @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9341 @LENGTH@ 21
------------INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
) @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9417 @LENGTH@ 553
---------------MOV MethodInvocation@@context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
) @AT@ 9391 @LENGTH@ 76
------------------UPD SimpleName@@MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @TO@ MethodName:completeStep:[new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
] @AT@ 9399 @LENGTH@ 68
---------------------DEL QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 9412 @LENGTH@ 54
------------------------DEL QualifiedName@@OperationContext.RollbackHandler @AT@ 9412 @LENGTH@ 32
---------------------------DEL SimpleName@@OperationContext @AT@ 9412 @LENGTH@ 16
---------------------------DEL SimpleName@@RollbackHandler @AT@ 9429 @LENGTH@ 15
------------------------DEL SimpleName@@NOOP_ROLLBACK_HANDLER @AT@ 9445 @LENGTH@ 21
---------------------INS ClassInstanceCreation@@OperationContext.ResultHandler[] @TO@ SimpleName@@MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 9438 @LENGTH@ 530
------------------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9438 @LENGTH@ 3
------------------------INS SimpleType@@OperationContext.ResultHandler @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9442 @LENGTH@ 30
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9475 @LENGTH@ 493
---------------------------INS MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 9543 @LENGTH@ 399
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9543 @LENGTH@ 6
------------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9550 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:handleResult @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9555 @LENGTH@ 12
------------------------------INS SingleVariableDeclaration@@OperationContext.ResultAction resultAction @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9568 @LENGTH@ 42
---------------------------------INS SimpleType@@OperationContext.ResultAction @TO@ SingleVariableDeclaration@@OperationContext.ResultAction resultAction @AT@ 9568 @LENGTH@ 29
---------------------------------INS SimpleName@@resultAction @TO@ SingleVariableDeclaration@@OperationContext.ResultAction resultAction @AT@ 9598 @LENGTH@ 12
------------------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9612 @LENGTH@ 24
---------------------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 9612 @LENGTH@ 16
---------------------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 9629 @LENGTH@ 7
------------------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9638 @LENGTH@ 19
---------------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 9638 @LENGTH@ 9
---------------------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 9648 @LENGTH@ 9
------------------------------INS TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9693 @LENGTH@ 219
---------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentResults.set(result) @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9533 @LENGTH@ 30
---------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentResults.set(result) @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9533 @LENGTH@ 30
---------------------------------INS Block@@FinallyBody:{  deploymentDoneLatch.countDown();} @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9808 @LENGTH@ 104
------------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentDoneLatch.countDown() @TO@ Block@@FinallyBody:{  deploymentDoneLatch.countDown();} @AT@ 10040 @LENGTH@ 32
------------INS ExpressionStatement@@Assignment:asyncCountDown=true @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9995 @LENGTH@ 22
---------------INS Assignment@@asyncCountDown=true @TO@ ExpressionStatement@@Assignment:asyncCountDown=true @AT@ 9995 @LENGTH@ 21
------------------INS SimpleName@@asyncCountDown @TO@ Assignment@@asyncCountDown=true @AT@ 9995 @LENGTH@ 14
------------------INS Operator@@= @TO@ Assignment@@asyncCountDown=true @AT@ 10009 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@asyncCountDown=true @AT@ 10012 @LENGTH@ 4
------UPD Block@@FinallyBody:{  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @TO@ FinallyBody:{  if (!asyncCountDown) {    deploymentDoneLatch.countDown();  }  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 10018 @LENGTH@ 193
---------INS IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @TO@ Block@@FinallyBody:{  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 10408 @LENGTH@ 101
------------MOV Block@@FinallyBody:{  deploymentResults.set(result);  deploymentDoneLatch.countDown();} @TO@ IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @AT@ 9503 @LENGTH@ 147
------------INS PrefixExpression@@!asyncCountDown @TO@ IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @AT@ 10412 @LENGTH@ 15
---------------INS Operator@@! @TO@ PrefixExpression@@!asyncCountDown @AT@ 10412 @LENGTH@ 1
---------------INS SimpleName@@asyncCountDown @TO@ PrefixExpression@@!asyncCountDown @AT@ 10413 @LENGTH@ 14
---INS VariableDeclarationStatement@@boolean asyncCountDown=false; @TO@ Block@@ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>();  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      try {        stepCompleted=true;        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);      }  finally {        deploymentResults.set(result);        deploymentDoneLatch.countDown();      }    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    deploymentDoneLatch.countDown();    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @AT@ 8740 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean asyncCountDown=false; @AT@ 8740 @LENGTH@ 7
------INS VariableDeclarationFragment@@asyncCountDown=false @TO@ VariableDeclarationStatement@@boolean asyncCountDown=false; @AT@ 8748 @LENGTH@ 22
---------INS SimpleName@@asyncCountDown @TO@ VariableDeclarationFragment@@asyncCountDown=false @AT@ 8748 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@asyncCountDown=false @AT@ 8765 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ protected, void, MethodName:doPostSetup, Exception,  @AT@ 1363 @LENGTH@ 143
---UPD Modifier@@public @TO@ protected @AT@ 1363 @LENGTH@ 6
---UPD SimpleName@@MethodName:setUp @TO@ MethodName:doPostSetup @AT@ 1375 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:this.map=Hazelcast.getMultiMap("foo") @TO@ Assignment:this.map=hazelcastInstance.getMultiMap("foo") @AT@ 1410 @LENGTH@ 40
------UPD Assignment@@this.map=Hazelcast.getMultiMap("foo") @TO@ this.map=hazelcastInstance.getMultiMap("foo") @AT@ 1410 @LENGTH@ 39
---------UPD MethodInvocation@@Hazelcast.getMultiMap("foo") @TO@ hazelcastInstance.getMultiMap("foo") @AT@ 1421 @LENGTH@ 28
------------UPD SimpleName@@Name:Hazelcast @TO@ Name:hazelcastInstance @AT@ 1421 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1486 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1486 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1492 @LENGTH@ 5
---INS VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1620 @LENGTH@ 93
------INS SimpleType@@HazelcastComponent @TO@ VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @AT@ 1620 @LENGTH@ 18
------INS VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @TO@ VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @AT@ 1639 @LENGTH@ 73
---------INS SimpleName@@component @TO@ VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1639 @LENGTH@ 9
---------INS MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @TO@ VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1651 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:context:[] @TO@ MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1651 @LENGTH@ 9
------------INS SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @TO@ MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1661 @LENGTH@ 51
---------------INS StringLiteral@@"hazelcast" @TO@ SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @AT@ 1674 @LENGTH@ 11
---------------INS TypeLiteral@@HazelcastComponent.class @TO@ SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @AT@ 1687 @LENGTH@ 24
---INS VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1722 @LENGTH@ 71
------INS SimpleType@@HazelcastInstance @TO@ VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @AT@ 1722 @LENGTH@ 17
------INS VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @TO@ VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @AT@ 1740 @LENGTH@ 52
---------INS SimpleName@@hazelcastInstance @TO@ VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @AT@ 1740 @LENGTH@ 17
---------INS MethodInvocation@@component.getHazelcastInstance() @TO@ VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @AT@ 1760 @LENGTH@ 32
------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getHazelcastInstance() @AT@ 1760 @LENGTH@ 9
------------INS SimpleName@@MethodName:getHazelcastInstance:[] @TO@ MethodInvocation@@component.getHazelcastInstance() @AT@ 1770 @LENGTH@ 22


INS FieldDeclaration@@protected, DeprecationData, [deprecated=null] @TO@ TypeDeclaration@@[public, abstract]AbstractAttributeDefinitionBuilder,  @AT@ 2279 @LENGTH@ 44
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, DeprecationData, [deprecated=null] @AT@ 2279 @LENGTH@ 9
---INS SimpleType@@DeprecationData @TO@ FieldDeclaration@@protected, DeprecationData, [deprecated=null] @AT@ 2289 @LENGTH@ 15
---INS VariableDeclarationFragment@@deprecated=null @TO@ FieldDeclaration@@protected, DeprecationData, [deprecated=null] @AT@ 2305 @LENGTH@ 17
------INS SimpleName@@deprecated @TO@ VariableDeclarationFragment@@deprecated=null @AT@ 2305 @LENGTH@ 10
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@deprecated=null @AT@ 2318 @LENGTH@ 4


INS MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @TO@ TypeDeclaration@@[public]ModelTestKernelServices,  @AT@ 8330 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8330 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8337 @LENGTH@ 9
---INS SimpleName@@MethodName:executeOperation @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8347 @LENGTH@ 16
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8364 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 8364 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 8374 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationTransactionControl txControl @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8385 @LENGTH@ 37
------INS SimpleType@@OperationTransactionControl @TO@ SingleVariableDeclaration@@OperationTransactionControl txControl @AT@ 8385 @LENGTH@ 27
------INS SimpleName@@txControl @TO@ SingleVariableDeclaration@@OperationTransactionControl txControl @AT@ 8413 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:controller.execute(operation,null,txControl,null) @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8434 @LENGTH@ 60
------INS MethodInvocation@@controller.execute(operation,null,txControl,null) @TO@ ReturnStatement@@MethodInvocation:controller.execute(operation,null,txControl,null) @AT@ 8441 @LENGTH@ 52
---------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.execute(operation,null,txControl,null) @AT@ 8441 @LENGTH@ 10
---------INS SimpleName@@MethodName:execute:[operation, null, txControl, null] @TO@ MethodInvocation@@controller.execute(operation,null,txControl,null) @AT@ 8452 @LENGTH@ 41
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8460 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8471 @LENGTH@ 4
------------INS SimpleName@@txControl @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8477 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8488 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION,validateOperationHandler) @TO@ MethodInvocation:hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION_PRIVATE,validateOperationHandler) @AT@ 17165 @LENGTH@ 105
---UPD MethodInvocation@@hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION,validateOperationHandler) @TO@ hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION_PRIVATE,validateOperationHandler) @AT@ 17165 @LENGTH@ 104
------UPD SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, validateOperationHandler] @TO@ MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION_PRIVATE, validateOperationHandler] @AT@ 17182 @LENGTH@ 87
---------UPD QualifiedName@@ValidateOperationHandler.DEFINITION @TO@ ValidateOperationHandler.DEFINITION_PRIVATE @AT@ 17207 @LENGTH@ 35
------------UPD SimpleName@@DEFINITION @TO@ DEFINITION_PRIVATE @AT@ 17232 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3402 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3402 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3410 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3477 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3477 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3477 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3494 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3510 @LENGTH@ 21


INS MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MongoPersistentEntityIndexCreatorUnitTests,  @AT@ 3089 @LENGTH@ 431
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3089 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3096 @LENGTH@ 4
---INS SimpleName@@MethodName:isIndexCreatorForMappingContextHandedIntoConstructor @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3101 @LENGTH@ 52
---INS VariableDeclarationStatement@@MongoMappingContext mappingContext=new MongoMappingContext(); @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3161 @LENGTH@ 63
------INS SimpleType@@MongoMappingContext @TO@ VariableDeclarationStatement@@MongoMappingContext mappingContext=new MongoMappingContext(); @AT@ 3161 @LENGTH@ 19
------INS VariableDeclarationFragment@@mappingContext=new MongoMappingContext() @TO@ VariableDeclarationStatement@@MongoMappingContext mappingContext=new MongoMappingContext(); @AT@ 3181 @LENGTH@ 42
---------INS SimpleName@@mappingContext @TO@ VariableDeclarationFragment@@mappingContext=new MongoMappingContext() @AT@ 3181 @LENGTH@ 14
---------INS ClassInstanceCreation@@MongoMappingContext[] @TO@ VariableDeclarationFragment@@mappingContext=new MongoMappingContext() @AT@ 3198 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@MongoMappingContext[] @AT@ 3198 @LENGTH@ 3
------------INS SimpleType@@MongoMappingContext @TO@ ClassInstanceCreation@@MongoMappingContext[] @AT@ 3202 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:mappingContext.initialize() @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3227 @LENGTH@ 28
------INS MethodInvocation@@mappingContext.initialize() @TO@ ExpressionStatement@@MethodInvocation:mappingContext.initialize() @AT@ 3227 @LENGTH@ 27
---------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.initialize() @AT@ 3227 @LENGTH@ 14
---------INS SimpleName@@MethodName:initialize:[] @TO@ MethodInvocation@@mappingContext.initialize() @AT@ 3242 @LENGTH@ 12
---INS VariableDeclarationStatement@@MongoPersistentEntityIndexCreator creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory); @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3259 @LENGTH@ 112
------INS SimpleType@@MongoPersistentEntityIndexCreator @TO@ VariableDeclarationStatement@@MongoPersistentEntityIndexCreator creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory); @AT@ 3259 @LENGTH@ 33
------INS VariableDeclarationFragment@@creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory) @TO@ VariableDeclarationStatement@@MongoPersistentEntityIndexCreator creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory); @AT@ 3293 @LENGTH@ 77
---------INS SimpleName@@creator @TO@ VariableDeclarationFragment@@creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory) @AT@ 3293 @LENGTH@ 7
---------INS ClassInstanceCreation@@DummyMongoPersistentEntityIndexCreator[mappingContext, factory] @TO@ VariableDeclarationFragment@@creator=new DummyMongoPersistentEntityIndexCreator(mappingContext,factory) @AT@ 3303 @LENGTH@ 67
------------INS New@@new @TO@ ClassInstanceCreation@@DummyMongoPersistentEntityIndexCreator[mappingContext, factory] @AT@ 3303 @LENGTH@ 3
------------INS SimpleType@@DummyMongoPersistentEntityIndexCreator @TO@ ClassInstanceCreation@@DummyMongoPersistentEntityIndexCreator[mappingContext, factory] @AT@ 3307 @LENGTH@ 38
------------INS SimpleName@@mappingContext @TO@ ClassInstanceCreation@@DummyMongoPersistentEntityIndexCreator[mappingContext, factory] @AT@ 3346 @LENGTH@ 14
------------INS SimpleName@@factory @TO@ ClassInstanceCreation@@DummyMongoPersistentEntityIndexCreator[mappingContext, factory] @AT@ 3362 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(creator.isIndexCreatorFor(mappingContext),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3374 @LENGTH@ 64
------INS MethodInvocation@@assertThat(creator.isIndexCreatorFor(mappingContext),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(creator.isIndexCreatorFor(mappingContext),is(true)) @AT@ 3374 @LENGTH@ 63
---------INS SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(mappingContext), is(true)] @TO@ MethodInvocation@@assertThat(creator.isIndexCreatorFor(mappingContext),is(true)) @AT@ 3374 @LENGTH@ 63
------------INS MethodInvocation@@creator.isIndexCreatorFor(mappingContext) @TO@ SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(mappingContext), is(true)] @AT@ 3385 @LENGTH@ 41
---------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.isIndexCreatorFor(mappingContext) @AT@ 3385 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isIndexCreatorFor:[mappingContext] @TO@ MethodInvocation@@creator.isIndexCreatorFor(mappingContext) @AT@ 3393 @LENGTH@ 33
------------------INS SimpleName@@mappingContext @TO@ SimpleName@@MethodName:isIndexCreatorFor:[mappingContext] @AT@ 3411 @LENGTH@ 14
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(mappingContext), is(true)] @AT@ 3428 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3428 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3431 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 3428 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 3431 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(creator.isIndexCreatorFor(new MongoMappingContext()),is(false)) @TO@ MethodDeclaration@@public, void, MethodName:isIndexCreatorForMappingContextHandedIntoConstructor,  @AT@ 3441 @LENGTH@ 76
------INS MethodInvocation@@assertThat(creator.isIndexCreatorFor(new MongoMappingContext()),is(false)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(creator.isIndexCreatorFor(new MongoMappingContext()),is(false)) @AT@ 3441 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(new MongoMappingContext()), is(false)] @TO@ MethodInvocation@@assertThat(creator.isIndexCreatorFor(new MongoMappingContext()),is(false)) @AT@ 3441 @LENGTH@ 75
------------INS MethodInvocation@@creator.isIndexCreatorFor(new MongoMappingContext()) @TO@ SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(new MongoMappingContext()), is(false)] @AT@ 3452 @LENGTH@ 52
---------------INS SimpleName@@Name:creator @TO@ MethodInvocation@@creator.isIndexCreatorFor(new MongoMappingContext()) @AT@ 3452 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isIndexCreatorFor:[new MongoMappingContext()] @TO@ MethodInvocation@@creator.isIndexCreatorFor(new MongoMappingContext()) @AT@ 3460 @LENGTH@ 44
------------------INS ClassInstanceCreation@@MongoMappingContext[] @TO@ SimpleName@@MethodName:isIndexCreatorFor:[new MongoMappingContext()] @AT@ 3478 @LENGTH@ 25
---------------------INS New@@new @TO@ ClassInstanceCreation@@MongoMappingContext[] @AT@ 3478 @LENGTH@ 3
---------------------INS SimpleType@@MongoMappingContext @TO@ ClassInstanceCreation@@MongoMappingContext[] @AT@ 3482 @LENGTH@ 19
------------INS MethodInvocation@@is(false) @TO@ SimpleName@@MethodName:assertThat:[creator.isIndexCreatorFor(new MongoMappingContext()), is(false)] @AT@ 3506 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[false] @TO@ MethodInvocation@@is(false) @AT@ 3506 @LENGTH@ 9
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:is:[false] @AT@ 3509 @LENGTH@ 5


INS IfStatement@@if (moduleDescription != null) {  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @TO@ MethodDeclaration@@public, void, MethodName:deploy, DeploymentPhaseContext phaseContext, DeploymentUnitProcessingException,  @AT@ 2431 @LENGTH@ 266
---INS InfixExpression@@moduleDescription != null @TO@ IfStatement@@if (moduleDescription != null) {  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @AT@ 2435 @LENGTH@ 25
------INS SimpleName@@moduleDescription @TO@ InfixExpression@@moduleDescription != null @AT@ 2435 @LENGTH@ 17
------INS Operator@@!= @TO@ InfixExpression@@moduleDescription != null @AT@ 2452 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@moduleDescription != null @AT@ 2456 @LENGTH@ 4
---INS Block@@ThenBody:{  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @TO@ IfStatement@@if (moduleDescription != null) {  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @AT@ 2462 @LENGTH@ 235
------MOV VariableDeclarationStatement@@ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName()); @TO@ Block@@ThenBody:{  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @AT@ 2431 @LENGTH@ 145
------MOV ExpressionStatement@@MethodInvocation:moduleDescription.addComponent(componentDescription) @TO@ Block@@ThenBody:{  ComponentDescription componentDescription=new ComponentDescription(componentName,componentClass,moduleDescription,depUnit.getServiceName());  moduleDescription.addComponent(componentDescription);} @AT@ 2585 @LENGTH@ 53


INS IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} else {  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @TO@ MethodDeclaration@@public, void, MethodName:populateCxfResponseFromExchange, Exchange camelExchange, org.apache.cxf.message.Exchange cxfExchange,  @AT@ 12525 @LENGTH@ 549
---INS MethodInvocation@@camelExchange.getPattern().isOutCapable() @TO@ IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} else {  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @AT@ 12529 @LENGTH@ 41
------INS MethodInvocation@@MethodName:getPattern:[] @TO@ MethodInvocation@@camelExchange.getPattern().isOutCapable() @AT@ 12529 @LENGTH@ 26
------INS SimpleName@@Name:camelExchange @TO@ MethodInvocation@@camelExchange.getPattern().isOutCapable() @AT@ 12529 @LENGTH@ 13
------INS SimpleName@@MethodName:isOutCapable:[] @TO@ MethodInvocation@@camelExchange.getPattern().isOutCapable() @AT@ 12556 @LENGTH@ 14
---INS Block@@ThenBody:{  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} @TO@ IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} else {  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @AT@ 12572 @LENGTH@ 376
------MOV IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  response=camelExchange.getOut();} else {  response=camelExchange.getIn();} @TO@ Block@@ThenBody:{  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} @AT@ 12525 @LENGTH@ 168
---------UPD MethodInvocation@@camelExchange.getPattern().isOutCapable() @TO@ camelExchange.hasOut() @AT@ 12529 @LENGTH@ 41
------------DEL MethodInvocation@@MethodName:getPattern:[] @AT@ 12529 @LENGTH@ 26
------------UPD SimpleName@@MethodName:isOutCapable:[] @TO@ MethodName:hasOut:[] @AT@ 12556 @LENGTH@ 14
---------UPD Block@@ThenBody:{  response=camelExchange.getOut();} @TO@ ThenBody:{  response=camelExchange.getOut();  LOG.debug("Get the response from the out message");} @AT@ 12572 @LENGTH@ 58
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the out message") @TO@ Block@@ThenBody:{  response=camelExchange.getOut();} @AT@ 12683 @LENGTH@ 51
---------------INS MethodInvocation@@LOG.debug("Get the response from the out message") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the out message") @AT@ 12683 @LENGTH@ 50
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Get the response from the out message") @AT@ 12683 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["Get the response from the out message"] @TO@ MethodInvocation@@LOG.debug("Get the response from the out message") @AT@ 12687 @LENGTH@ 46
---------------------INS StringLiteral@@"Get the response from the out message" @TO@ SimpleName@@MethodName:debug:["Get the response from the out message"] @AT@ 12693 @LENGTH@ 39
---------UPD Block@@ElseBody:{  response=camelExchange.getIn();} @TO@ ElseBody:{  response=camelExchange.getIn();  LOG.debug("Get the response from the in message as a fallback");} @AT@ 12636 @LENGTH@ 57
------------INS ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the in message as a fallback") @TO@ Block@@ElseBody:{  response=camelExchange.getIn();} @AT@ 12860 @LENGTH@ 64
---------------INS MethodInvocation@@LOG.debug("Get the response from the in message as a fallback") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the in message as a fallback") @AT@ 12860 @LENGTH@ 63
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Get the response from the in message as a fallback") @AT@ 12860 @LENGTH@ 3
------------------INS SimpleName@@MethodName:debug:["Get the response from the in message as a fallback"] @TO@ MethodInvocation@@LOG.debug("Get the response from the in message as a fallback") @AT@ 12864 @LENGTH@ 59
---------------------INS StringLiteral@@"Get the response from the in message as a fallback" @TO@ SimpleName@@MethodName:debug:["Get the response from the in message as a fallback"] @AT@ 12870 @LENGTH@ 52
---INS Block@@ElseBody:{  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @TO@ IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  if (camelExchange.hasOut()) {    response=camelExchange.getOut();    LOG.debug("Get the response from the out message");  } else {    response=camelExchange.getIn();    LOG.debug("Get the response from the in message as a fallback");  }} else {  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @AT@ 12954 @LENGTH@ 120
------INS ExpressionStatement@@Assignment:response=camelExchange.getIn() @TO@ Block@@ElseBody:{  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @AT@ 12968 @LENGTH@ 33
---------INS Assignment@@response=camelExchange.getIn() @TO@ ExpressionStatement@@Assignment:response=camelExchange.getIn() @AT@ 12968 @LENGTH@ 32
------------INS SimpleName@@response @TO@ Assignment@@response=camelExchange.getIn() @AT@ 12968 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@response=camelExchange.getIn() @AT@ 12976 @LENGTH@ 1
------------INS MethodInvocation@@camelExchange.getIn() @TO@ Assignment@@response=camelExchange.getIn() @AT@ 12979 @LENGTH@ 21
---------------INS SimpleName@@Name:camelExchange @TO@ MethodInvocation@@camelExchange.getIn() @AT@ 12979 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@camelExchange.getIn() @AT@ 12993 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the in message") @TO@ Block@@ElseBody:{  response=camelExchange.getIn();  LOG.debug("Get the response from the in message");} @AT@ 13014 @LENGTH@ 50
---------INS MethodInvocation@@LOG.debug("Get the response from the in message") @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Get the response from the in message") @AT@ 13014 @LENGTH@ 49
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Get the response from the in message") @AT@ 13014 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Get the response from the in message"] @TO@ MethodInvocation@@LOG.debug("Get the response from the in message") @AT@ 13018 @LENGTH@ 45
---------------INS StringLiteral@@"Get the response from the in message" @TO@ SimpleName@@MethodName:debug:["Get the response from the in message"] @AT@ 13024 @LENGTH@ 38


INS TryStatement@@try {  accessToken.getScope().add(null);} catch (NullPointerException e) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:writeValueAsStringWithNullScope, JsonGenerationException, JsonMappingException, IOException,  @AT@ 2200 @LENGTH@ 183
---MOV ExpressionStatement@@MethodInvocation:accessToken.getScope().add(null) @TO@ TryStatement@@try {  accessToken.getScope().add(null);} catch (NullPointerException e) {  return;} @AT@ 2199 @LENGTH@ 33
---INS CatchClause@@catch (NullPointerException e) {  return;} @TO@ TryStatement@@try {  accessToken.getScope().add(null);} catch (NullPointerException e) {  return;} @AT@ 2249 @LENGTH@ 134
------INS SingleVariableDeclaration@@NullPointerException e @TO@ CatchClause@@catch (NullPointerException e) {  return;} @AT@ 2256 @LENGTH@ 22
---------INS SimpleType@@NullPointerException @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 2256 @LENGTH@ 20
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@NullPointerException e @AT@ 2277 @LENGTH@ 1
------INS ReturnStatement@@ @TO@ CatchClause@@catch (NullPointerException e) {  return;} @AT@ 2372 @LENGTH@ 7


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleConsumeTest, SftpServerTestSupport @TO@ [public]SftpSimpleConsumeTest, SftpServerTestSupport @AT@ 1061 @LENGTH@ 1150
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1061 @LENGTH@ 79


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 1803 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 1803 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 1811 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 1824 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 1824 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 1824 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 1841 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 1857 @LENGTH@ 21


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Predicate<T> nonePredicate=nonePredicate(predicate1,predicate2); @TO@ @SuppressWarnings("unchecked") Predicate<T> nonePredicate=PredicateUtils.<T>nonePredicate(predicate1,predicate2); @AT@ 17295 @LENGTH@ 106
---UPD VariableDeclarationFragment@@nonePredicate=nonePredicate(predicate1,predicate2) @TO@ nonePredicate=PredicateUtils.<T>nonePredicate(predicate1,predicate2) @AT@ 17347 @LENGTH@ 53
------UPD MethodInvocation@@nonePredicate(predicate1,predicate2) @TO@ PredicateUtils.<T>nonePredicate(predicate1,predicate2) @AT@ 17363 @LENGTH@ 37
---------INS SimpleName@@Name:PredicateUtils @TO@ MethodInvocation@@nonePredicate(predicate1,predicate2) @AT@ 17381 @LENGTH@ 14


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, public]ReliableServiceTestCase,  @TO@ [@RunWith(Arquillian.class), @RunAsClient, @Ignore("CXF-4360"), public]ReliableServiceTestCase,  @AT@ 1831 @LENGTH@ 2153
---INS SingleMemberAnnotation@@@Ignore("CXF-4360") @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @RunAsClient, public]ReliableServiceTestCase,  @AT@ 1896 @LENGTH@ 19


UPD TryStatement@@try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} @TO@ try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} finally {  bootThreadDone();} @AT@ 9179 @LENGTH@ 735
---INS Block@@FinallyBody:{  bootThreadDone();} @TO@ TryStatement@@try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} @AT@ 9923 @LENGTH@ 57
------INS ExpressionStatement@@MethodInvocation:bootThreadDone() @TO@ Block@@FinallyBody:{  bootThreadDone();} @AT@ 9945 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:bootThreadDone:[] @TO@ ExpressionStatement@@MethodInvocation:bootThreadDone() @AT@ 9945 @LENGTH@ 16


UPD SuperConstructorInvocation@@super("ESCAPED_CHARACTER");
 @TO@ super(ID);
 @AT@ 1806 @LENGTH@ 27
---DEL StringLiteral@@"ESCAPED_CHARACTER" @AT@ 1812 @LENGTH@ 19
---INS SimpleName@@ID @TO@ SuperConstructorInvocation@@super("ESCAPED_CHARACTER");
 @AT@ 1870 @LENGTH@ 2


UPD VariableDeclarationStatement@@ManagementStrategy managementStrategy=new ManagedManagementStrategy(agent); @TO@ ManagementStrategy managementStrategy=new ManagedManagementStrategy(getContext(),agent); @AT@ 17120 @LENGTH@ 77
---UPD VariableDeclarationFragment@@managementStrategy=new ManagedManagementStrategy(agent) @TO@ managementStrategy=new ManagedManagementStrategy(getContext(),agent) @AT@ 17139 @LENGTH@ 57
------UPD ClassInstanceCreation@@ManagedManagementStrategy[agent] @TO@ ManagedManagementStrategy[getContext(), agent] @AT@ 17160 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:getContext:[] @TO@ ClassInstanceCreation@@ManagedManagementStrategy[agent] @AT@ 17190 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 4223 @LENGTH@ 87
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 4223 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("Unknown")] @AT@ 4223 @LENGTH@ 86
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 4290 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 4304 @LENGTH@ 3


UPD MethodDeclaration@@public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21761 @LENGTH@ 828
---UPD SimpleName@@MethodName:getMatchingDeployments @TO@ MethodName:getDeployments @AT@ 21788 @LENGTH@ 22


MOV IfStatement@@if (defaults) {  final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);  final Locale locale=getLocale(context,operation);  final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);  if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {    for (    String key : nodeDescription.get(ATTRIBUTES).keys()) {      if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {        directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));      }    }  }} @TO@ MethodDeclaration@@public, void, MethodName:doExecute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 11418 @LENGTH@ 1119


INS MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @TO@ TypeDeclaration@@[public]AliasResourceTestCase, AbstractControllerTestBase @AT@ 10190 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10190 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10197 @LENGTH@ 4
---INS SimpleName@@MethodName:testAliasedAttributes @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10202 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10233 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, CSVFormat, [MYSQL=PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(CR)] @TO@ public, static, final, CSVFormat, [MYSQL=PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(LF)] @AT@ 4997 @LENGTH@ 158
---UPD VariableDeclarationFragment@@MYSQL=PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(CR) @TO@ MYSQL=PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(LF) @AT@ 5027 @LENGTH@ 127
------UPD MethodInvocation@@PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(CR) @TO@ PRISTINE.withDelimiter(TAB).withEscape(ESCAPE).withLineSeparator(LF) @AT@ 5047 @LENGTH@ 107
---------UPD SimpleName@@MethodName:withLineSeparator:[CR] @TO@ MethodName:withLineSeparator:[LF] @AT@ 5133 @LENGTH@ 21
------------UPD SimpleName@@CR @TO@ LF @AT@ 5151 @LENGTH@ 2


UPD IfStatement@@if (map == null) {  map=new HashMap<Object,AggregationStrategy>();} @TO@ if (map == null) {  map=new HashMap<Object,AggregationStrategy>();} else {  map=new HashMap<Object,AggregationStrategy>(map);} @AT@ 47670 @LENGTH@ 90
---INS Block@@ElseBody:{  map=new HashMap<Object,AggregationStrategy>(map);} @TO@ IfStatement@@if (map == null) {  map=new HashMap<Object,AggregationStrategy>();} @AT@ 47766 @LENGTH@ 262
------INS ExpressionStatement@@Assignment:map=new HashMap<Object,AggregationStrategy>(map) @TO@ Block@@ElseBody:{  map=new HashMap<Object,AggregationStrategy>(map);} @AT@ 47966 @LENGTH@ 52
---------INS Assignment@@map=new HashMap<Object,AggregationStrategy>(map) @TO@ ExpressionStatement@@Assignment:map=new HashMap<Object,AggregationStrategy>(map) @AT@ 47966 @LENGTH@ 51
------------INS SimpleName@@map @TO@ Assignment@@map=new HashMap<Object,AggregationStrategy>(map) @AT@ 47966 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@map=new HashMap<Object,AggregationStrategy>(map) @AT@ 47969 @LENGTH@ 1
------------INS ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[map] @TO@ Assignment@@map=new HashMap<Object,AggregationStrategy>(map) @AT@ 47972 @LENGTH@ 45
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[map] @AT@ 47972 @LENGTH@ 3
---------------INS ParameterizedType@@HashMap<Object,AggregationStrategy> @TO@ ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[map] @AT@ 47976 @LENGTH@ 36
------------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Object,AggregationStrategy> @AT@ 47976 @LENGTH@ 7
------------------INS SimpleType@@Object @TO@ ParameterizedType@@HashMap<Object,AggregationStrategy> @AT@ 47984 @LENGTH@ 6
------------------INS SimpleType@@AggregationStrategy @TO@ ParameterizedType@@HashMap<Object,AggregationStrategy> @AT@ 47992 @LENGTH@ 19
---------------INS SimpleName@@map @TO@ ClassInstanceCreation@@HashMap<Object,AggregationStrategy>[map] @AT@ 48013 @LENGTH@ 3


UPD IfStatement@@if (logger.getLevel() == null && clazz.getName().startsWith("org.springframework.roo")) {  logger.setLevel(Level.FINE);} @TO@ if (logger.getLevel() == null && clazz.getName().startsWith("org.springframework.shell")) {  logger.setLevel(Level.FINE);} @AT@ 1749 @LENGTH@ 125
---UPD InfixExpression@@logger.getLevel() == null && clazz.getName().startsWith("org.springframework.roo") @TO@ logger.getLevel() == null && clazz.getName().startsWith("org.springframework.shell") @AT@ 1753 @LENGTH@ 82
------UPD MethodInvocation@@clazz.getName().startsWith("org.springframework.roo") @TO@ clazz.getName().startsWith("org.springframework.shell") @AT@ 1782 @LENGTH@ 53
---------UPD SimpleName@@MethodName:startsWith:["org.springframework.roo"] @TO@ MethodName:startsWith:["org.springframework.shell"] @AT@ 1798 @LENGTH@ 37
------------UPD StringLiteral@@"org.springframework.roo" @TO@ "org.springframework.shell" @AT@ 1809 @LENGTH@ 25


UPD ThrowStatement@@ClassInstanceCreation:new ApiException("linkedin","Unlikely unsupported encoding error",unlikely) @TO@ ClassInstanceCreation:new ApiException("Unlikely unsupported encoding error",unlikely) @AT@ 3262 @LENGTH@ 84
---UPD ClassInstanceCreation@@ApiException["linkedin", "Unlikely unsupported encoding error", unlikely] @TO@ ApiException["Unlikely unsupported encoding error", unlikely] @AT@ 3268 @LENGTH@ 77
------DEL StringLiteral@@"linkedin" @AT@ 3285 @LENGTH@ 10


UPD FieldDeclaration@@static, final, String, [OVERRIDE_PREFIX="fab."] @TO@ static, final, String, [OVERRIDE_PREFIX="override."] @AT@ 1878 @LENGTH@ 45
---UPD VariableDeclarationFragment@@OVERRIDE_PREFIX="fab." @TO@ OVERRIDE_PREFIX="override." @AT@ 1898 @LENGTH@ 24
------UPD StringLiteral@@"fab." @TO@ "override." @AT@ 1916 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:addArguments(CommandLineConstants.DEBUG + " [<port>]") @TO@ MethodDeclaration@@public, static, void, MethodName:init,  @AT@ 986 @LENGTH@ 55
---INS MethodInvocation@@addArguments(CommandLineConstants.DEBUG + " [<port>]") @TO@ ExpressionStatement@@MethodInvocation:addArguments(CommandLineConstants.DEBUG + " [<port>]") @AT@ 986 @LENGTH@ 54
------INS SimpleName@@MethodName:addArguments:[CommandLineConstants.DEBUG + " [<port>]"] @TO@ MethodInvocation@@addArguments(CommandLineConstants.DEBUG + " [<port>]") @AT@ 986 @LENGTH@ 54
---------INS InfixExpression@@CommandLineConstants.DEBUG + " [<port>]" @TO@ SimpleName@@MethodName:addArguments:[CommandLineConstants.DEBUG + " [<port>]"] @AT@ 999 @LENGTH@ 40
------------INS QualifiedName@@CommandLineConstants.DEBUG @TO@ InfixExpression@@CommandLineConstants.DEBUG + " [<port>]" @AT@ 999 @LENGTH@ 26
---------------INS SimpleName@@CommandLineConstants @TO@ QualifiedName@@CommandLineConstants.DEBUG @AT@ 999 @LENGTH@ 20
---------------INS SimpleName@@DEBUG @TO@ QualifiedName@@CommandLineConstants.DEBUG @AT@ 1020 @LENGTH@ 5
------------INS Operator@@+ @TO@ InfixExpression@@CommandLineConstants.DEBUG + " [<port>]" @AT@ 1025 @LENGTH@ 1
------------INS StringLiteral@@" [<port>]" @TO@ InfixExpression@@CommandLineConstants.DEBUG + " [<port>]" @AT@ 1028 @LENGTH@ 11


UPD IfStatement@@if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {  String host=getCamelContext().getProperty("http.proxyHost");  int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));  String scheme=getCamelContext().getProperty("http.proxyScheme");  if (scheme == null) {    scheme=HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4";  }  LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}",new Object[]{host,port,scheme});  HttpHost proxy=new HttpHost(host,port,scheme);  answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY,proxy);} @TO@ if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {  String host=getCamelContext().getProperty("http.proxyHost");  int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));  String scheme=getCamelContext().getProperty("http.proxyScheme");  if (scheme == null) {    scheme=HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4";  }  LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}",new Object[]{host,port,scheme});  try {    component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters());  } catch (  Exception ex) {    throw new RuntimeCamelException(ex);  }  HttpHost proxy=new HttpHost(host,port,scheme);  answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY,proxy);} @AT@ 5159 @LENGTH@ 967
---UPD Block@@ThenBody:{  String host=getCamelContext().getProperty("http.proxyHost");  int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));  String scheme=getCamelContext().getProperty("http.proxyScheme");  if (scheme == null) {    scheme=HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4";  }  LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}",new Object[]{host,port,scheme});  HttpHost proxy=new HttpHost(host,port,scheme);  answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY,proxy);} @TO@ ThenBody:{  String host=getCamelContext().getProperty("http.proxyHost");  int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));  String scheme=getCamelContext().getProperty("http.proxyScheme");  if (scheme == null) {    scheme=HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4";  }  LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}",new Object[]{host,port,scheme});  try {    component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters());  } catch (  Exception ex) {    throw new RuntimeCamelException(ex);  }  HttpHost proxy=new HttpHost(host,port,scheme);  answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY,proxy);} @AT@ 5313 @LENGTH@ 813
------INS TryStatement@@try {  component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters());} catch (Exception ex) {  throw new RuntimeCamelException(ex);} @TO@ Block@@ThenBody:{  String host=getCamelContext().getProperty("http.proxyHost");  int port=Integer.parseInt(getCamelContext().getProperty("http.proxyPort"));  String scheme=getCamelContext().getProperty("http.proxyScheme");  if (scheme == null) {    scheme=HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4";  }  LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}",new Object[]{host,port,scheme});  HttpHost proxy=new HttpHost(host,port,scheme);  answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY,proxy);} @AT@ 6029 @LENGTH@ 268
---------INS ExpressionStatement@@MethodInvocation:component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters()) @TO@ TryStatement@@try {  component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters());} catch (Exception ex) {  throw new RuntimeCamelException(ex);} @AT@ 6051 @LENGTH@ 142
------------INS MethodInvocation@@component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters()) @TO@ ExpressionStatement@@MethodInvocation:component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters()) @AT@ 6051 @LENGTH@ 141
---------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters()) @AT@ 6051 @LENGTH@ 9
---------------INS SimpleName@@MethodName:registerPort:[HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters()] @TO@ MethodInvocation@@component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters()) @AT@ 6061 @LENGTH@ 131
------------------INS MethodInvocation@@HttpHelper.isSecureConnection(scheme) @TO@ SimpleName@@MethodName:registerPort:[HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters()] @AT@ 6074 @LENGTH@ 37
---------------------INS SimpleName@@Name:HttpHelper @TO@ MethodInvocation@@HttpHelper.isSecureConnection(scheme) @AT@ 6074 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:isSecureConnection:[scheme] @TO@ MethodInvocation@@HttpHelper.isSecureConnection(scheme) @AT@ 6085 @LENGTH@ 26
------------------------INS SimpleName@@scheme @TO@ SimpleName@@MethodName:isSecureConnection:[scheme] @AT@ 6104 @LENGTH@ 6
------------------INS MethodInvocation@@component.getX509HostnameVerifier() @TO@ SimpleName@@MethodName:registerPort:[HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters()] @AT@ 6113 @LENGTH@ 35
---------------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getX509HostnameVerifier() @AT@ 6113 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getX509HostnameVerifier:[] @TO@ MethodInvocation@@component.getX509HostnameVerifier() @AT@ 6123 @LENGTH@ 25
------------------INS SimpleName@@port @TO@ SimpleName@@MethodName:registerPort:[HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters()] @AT@ 6150 @LENGTH@ 4
------------------INS MethodInvocation@@component.getSslContextParameters() @TO@ SimpleName@@MethodName:registerPort:[HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters()] @AT@ 6156 @LENGTH@ 35
---------------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getSslContextParameters() @AT@ 6156 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getSslContextParameters:[] @TO@ MethodInvocation@@component.getSslContextParameters() @AT@ 6166 @LENGTH@ 25
---------INS CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException(ex);} @TO@ TryStatement@@try {  component.registerPort(HttpHelper.isSecureConnection(scheme),component.getX509HostnameVerifier(),port,component.getSslContextParameters());} catch (Exception ex) {  throw new RuntimeCamelException(ex);} @AT@ 6208 @LENGTH@ 89
------------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException(ex);} @AT@ 6215 @LENGTH@ 12
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6215 @LENGTH@ 9
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6225 @LENGTH@ 2
------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(ex) @TO@ CatchClause@@catch (Exception ex) {  throw new RuntimeCamelException(ex);} @AT@ 6247 @LENGTH@ 36
---------------INS ClassInstanceCreation@@RuntimeCamelException[ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeCamelException(ex) @AT@ 6253 @LENGTH@ 29
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeCamelException[ex] @AT@ 6253 @LENGTH@ 3
------------------INS SimpleType@@RuntimeCamelException @TO@ ClassInstanceCreation@@RuntimeCamelException[ex] @AT@ 6257 @LENGTH@ 21
------------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeCamelException[ex] @AT@ 6279 @LENGTH@ 2


INS IfStatement@@if (null != result) {  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} else {  iter=Collections.emptyList().iterator();} @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:query, ServletServerHttpRequest request, PagingAndSorting pageSort, UriComponentsBuilder uriBuilder, @PathVariable String repository, @PathVariable String query, InvocationTargetException, IllegalAccessException, IOException,  @AT@ 17603 @LENGTH@ 402
---INS InfixExpression@@null != result @TO@ IfStatement@@if (null != result) {  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} else {  iter=Collections.emptyList().iterator();} @AT@ 17608 @LENGTH@ 14
------INS NullLiteral@@null @TO@ InfixExpression@@null != result @AT@ 17608 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@null != result @AT@ 17612 @LENGTH@ 2
------INS SimpleName@@result @TO@ InfixExpression@@null != result @AT@ 17616 @LENGTH@ 6
---INS Block@@ThenBody:{  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} @TO@ IfStatement@@if (null != result) {  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} else {  iter=Collections.emptyList().iterator();} @AT@ 17625 @LENGTH@ 318
------MOV IfStatement@@if (result instanceof Collection) {  iter=((Collection)result).iterator();} else if (result instanceof Page) {  page=(Page)result;  iter=page.iterator();} else {  List l=new ArrayList();  l.add(result);  iter=l.iterator();} @TO@ Block@@ThenBody:{  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} @AT@ 17603 @LENGTH@ 286
---INS Block@@ElseBody:{  iter=Collections.emptyList().iterator();} @TO@ IfStatement@@if (null != result) {  if (result instanceof Collection) {    iter=((Collection)result).iterator();  } else   if (result instanceof Page) {    page=(Page)result;    iter=page.iterator();  } else {    List l=new ArrayList();    l.add(result);    iter=l.iterator();  }} else {  iter=Collections.emptyList().iterator();} @AT@ 17949 @LENGTH@ 56
------INS ExpressionStatement@@Assignment:iter=Collections.emptyList().iterator() @TO@ Block@@ElseBody:{  iter=Collections.emptyList().iterator();} @AT@ 17957 @LENGTH@ 42
---------INS Assignment@@iter=Collections.emptyList().iterator() @TO@ ExpressionStatement@@Assignment:iter=Collections.emptyList().iterator() @AT@ 17957 @LENGTH@ 41
------------INS SimpleName@@iter @TO@ Assignment@@iter=Collections.emptyList().iterator() @AT@ 17957 @LENGTH@ 4
------------INS Operator@@= @TO@ Assignment@@iter=Collections.emptyList().iterator() @AT@ 17961 @LENGTH@ 1
------------INS MethodInvocation@@Collections.emptyList().iterator() @TO@ Assignment@@iter=Collections.emptyList().iterator() @AT@ 17964 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList().iterator() @AT@ 17964 @LENGTH@ 23
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList().iterator() @AT@ 17964 @LENGTH@ 11
---------------INS SimpleName@@MethodName:iterator:[] @TO@ MethodInvocation@@Collections.emptyList().iterator() @AT@ 17988 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @TO@ TypeDeclaration@@[public]ClassTypeInformationUnitTests,  @AT@ 10108 @LENGTH@ 381
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10108 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10115 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10120 @LENGTH@ 53
---INS VariableDeclarationStatement@@TypeInformation<?> information=from(String[][].class); @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10181 @LENGTH@ 56
------INS ParameterizedType@@TypeInformation<?> @TO@ VariableDeclarationStatement@@TypeInformation<?> information=from(String[][].class); @AT@ 10181 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 10181 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 10197 @LENGTH@ 1
------INS VariableDeclarationFragment@@information=from(String[][].class) @TO@ VariableDeclarationStatement@@TypeInformation<?> information=from(String[][].class); @AT@ 10200 @LENGTH@ 36
---------INS SimpleName@@information @TO@ VariableDeclarationFragment@@information=from(String[][].class) @AT@ 10200 @LENGTH@ 11
---------INS MethodInvocation@@from(String[][].class) @TO@ VariableDeclarationFragment@@information=from(String[][].class) @AT@ 10214 @LENGTH@ 22
------------INS SimpleName@@MethodName:from:[String[][].class] @TO@ MethodInvocation@@from(String[][].class) @AT@ 10214 @LENGTH@ 22
---------------INS TypeLiteral@@String[][].class @TO@ SimpleName@@MethodName:from:[String[][].class] @AT@ 10219 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(information.getType(),is((Object)String[][].class)) @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10240 @LENGTH@ 65
------INS MethodInvocation@@assertThat(information.getType(),is((Object)String[][].class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.getType(),is((Object)String[][].class)) @AT@ 10240 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[information.getType(), is((Object)String[][].class)] @TO@ MethodInvocation@@assertThat(information.getType(),is((Object)String[][].class)) @AT@ 10240 @LENGTH@ 64
------------INS MethodInvocation@@information.getType() @TO@ SimpleName@@MethodName:assertThat:[information.getType(), is((Object)String[][].class)] @AT@ 10251 @LENGTH@ 21
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.getType() @AT@ 10251 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@information.getType() @AT@ 10263 @LENGTH@ 9
------------INS MethodInvocation@@is((Object)String[][].class) @TO@ SimpleName@@MethodName:assertThat:[information.getType(), is((Object)String[][].class)] @AT@ 10274 @LENGTH@ 29
---------------INS SimpleName@@MethodName:is:[(Object)String[][].class] @TO@ MethodInvocation@@is((Object)String[][].class) @AT@ 10274 @LENGTH@ 29
------------------INS CastExpression@@(Object)String[][].class @TO@ SimpleName@@MethodName:is:[(Object)String[][].class] @AT@ 10277 @LENGTH@ 25
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String[][].class @AT@ 10278 @LENGTH@ 6
---------------------INS TypeLiteral@@String[][].class @TO@ CastExpression@@(Object)String[][].class @AT@ 10286 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:[(Object)String[][].class] @TO@ MethodInvocation@@is((Object)String[][].class) @AT@ 10274 @LENGTH@ 29
------------------INS CastExpression@@(Object)String[][].class @TO@ SimpleName@@MethodName:is:[(Object)String[][].class] @AT@ 10277 @LENGTH@ 25
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String[][].class @AT@ 10278 @LENGTH@ 6
---------------------INS TypeLiteral@@String[][].class @TO@ CastExpression@@(Object)String[][].class @AT@ 10286 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertThat(information.getComponentType().getType(),is((Object)String[].class)) @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10308 @LENGTH@ 82
------INS MethodInvocation@@assertThat(information.getComponentType().getType(),is((Object)String[].class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.getComponentType().getType(),is((Object)String[].class)) @AT@ 10308 @LENGTH@ 81
---------INS SimpleName@@MethodName:assertThat:[information.getComponentType().getType(), is((Object)String[].class)] @TO@ MethodInvocation@@assertThat(information.getComponentType().getType(),is((Object)String[].class)) @AT@ 10308 @LENGTH@ 81
------------INS MethodInvocation@@information.getComponentType().getType() @TO@ SimpleName@@MethodName:assertThat:[information.getComponentType().getType(), is((Object)String[].class)] @AT@ 10319 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getComponentType:[] @TO@ MethodInvocation@@information.getComponentType().getType() @AT@ 10319 @LENGTH@ 30
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.getComponentType().getType() @AT@ 10319 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@information.getComponentType().getType() @AT@ 10350 @LENGTH@ 9
------------INS MethodInvocation@@is((Object)String[].class) @TO@ SimpleName@@MethodName:assertThat:[information.getComponentType().getType(), is((Object)String[].class)] @AT@ 10361 @LENGTH@ 27
---------------INS SimpleName@@MethodName:is:[(Object)String[].class] @TO@ MethodInvocation@@is((Object)String[].class) @AT@ 10361 @LENGTH@ 27
------------------INS CastExpression@@(Object)String[].class @TO@ SimpleName@@MethodName:is:[(Object)String[].class] @AT@ 10364 @LENGTH@ 23
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String[].class @AT@ 10365 @LENGTH@ 6
---------------------INS TypeLiteral@@String[].class @TO@ CastExpression@@(Object)String[].class @AT@ 10373 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[(Object)String[].class] @TO@ MethodInvocation@@is((Object)String[].class) @AT@ 10361 @LENGTH@ 27
------------------INS CastExpression@@(Object)String[].class @TO@ SimpleName@@MethodName:is:[(Object)String[].class] @AT@ 10364 @LENGTH@ 23
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String[].class @AT@ 10365 @LENGTH@ 6
---------------------INS TypeLiteral@@String[].class @TO@ CastExpression@@(Object)String[].class @AT@ 10373 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(information.getActualType().getActualType().getType(),is((Object)String.class)) @TO@ MethodDeclaration@@public, void, MethodName:returnsComponentTypeForMultiDimensionalArrayCorrectly,  @AT@ 10393 @LENGTH@ 93
------INS MethodInvocation@@assertThat(information.getActualType().getActualType().getType(),is((Object)String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(information.getActualType().getActualType().getType(),is((Object)String.class)) @AT@ 10393 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertThat:[information.getActualType().getActualType().getType(), is((Object)String.class)] @TO@ MethodInvocation@@assertThat(information.getActualType().getActualType().getType(),is((Object)String.class)) @AT@ 10393 @LENGTH@ 92
------------INS MethodInvocation@@information.getActualType().getActualType().getType() @TO@ SimpleName@@MethodName:assertThat:[information.getActualType().getActualType().getType(), is((Object)String.class)] @AT@ 10404 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:getActualType:[] @TO@ MethodInvocation@@information.getActualType().getActualType().getType() @AT@ 10404 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getActualType:[] @TO@ MethodInvocation@@information.getActualType().getActualType().getType() @AT@ 10404 @LENGTH@ 27
---------------INS SimpleName@@Name:information @TO@ MethodInvocation@@information.getActualType().getActualType().getType() @AT@ 10404 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@information.getActualType().getActualType().getType() @AT@ 10448 @LENGTH@ 9
------------INS MethodInvocation@@is((Object)String.class) @TO@ SimpleName@@MethodName:assertThat:[information.getActualType().getActualType().getType(), is((Object)String.class)] @AT@ 10459 @LENGTH@ 25
---------------INS SimpleName@@MethodName:is:[(Object)String.class] @TO@ MethodInvocation@@is((Object)String.class) @AT@ 10459 @LENGTH@ 25
------------------INS CastExpression@@(Object)String.class @TO@ SimpleName@@MethodName:is:[(Object)String.class] @AT@ 10462 @LENGTH@ 21
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String.class @AT@ 10463 @LENGTH@ 6
---------------------INS TypeLiteral@@String.class @TO@ CastExpression@@(Object)String.class @AT@ 10471 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:[(Object)String.class] @TO@ MethodInvocation@@is((Object)String.class) @AT@ 10459 @LENGTH@ 25
------------------INS CastExpression@@(Object)String.class @TO@ SimpleName@@MethodName:is:[(Object)String.class] @AT@ 10462 @LENGTH@ 21
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)String.class @AT@ 10463 @LENGTH@ 6
---------------------INS TypeLiteral@@String.class @TO@ CastExpression@@(Object)String.class @AT@ 10471 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getDeployments(client,name) @AT@ 14055 @LENGTH@ 60
---UPD Assignment@@deploymentNames=Util.getMatchingDeployments(client,name) @TO@ deploymentNames=Util.getDeployments(client,name) @AT@ 14055 @LENGTH@ 59
------UPD MethodInvocation@@Util.getMatchingDeployments(client,name) @TO@ Util.getDeployments(client,name) @AT@ 14073 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getMatchingDeployments:[client, name] @TO@ MethodName:getDeployments:[client, name] @AT@ 14078 @LENGTH@ 36


UPD IfStatement@@if (!(o1 == null ? o2 == null : o1.equals(o2))) return false; @TO@ if (!(o1 == null ? o2 == null : o1.equals(o2))) {  return false;} @AT@ 10111 @LENGTH@ 77
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 10175 @LENGTH@ 13


UPD IfStatement@@if (event.equals(getBeanFactory())) {  Repositories repositories=new Repositories(event.getApplicationContext());  populator.populate(repositories);} @TO@ if (event.getApplicationContext().equals(getBeanFactory())) {  Repositories repositories=new Repositories(event.getApplicationContext());  populator.populate(repositories);} @AT@ 2529 @LENGTH@ 158
---UPD MethodInvocation@@event.equals(getBeanFactory()) @TO@ event.getApplicationContext().equals(getBeanFactory()) @AT@ 2533 @LENGTH@ 30
------INS MethodInvocation@@MethodName:getApplicationContext:[] @TO@ MethodInvocation@@event.equals(getBeanFactory()) @AT@ 2541 @LENGTH@ 29


INS MethodDeclaration@@public, voidMethodName:PersistentQueueReplyManager, CamelContext camelContext,  @TO@ TypeDeclaration@@[public]PersistentQueueReplyManager, ReplyManagerSupport @AT@ 1723 @LENGTH@ 98
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:PersistentQueueReplyManager, CamelContext camelContext,  @AT@ 1723 @LENGTH@ 6
---INS SimpleName@@MethodName:PersistentQueueReplyManager @TO@ MethodDeclaration@@public, voidMethodName:PersistentQueueReplyManager, CamelContext camelContext,  @AT@ 1730 @LENGTH@ 27
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, voidMethodName:PersistentQueueReplyManager, CamelContext camelContext,  @AT@ 1758 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 1758 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 1771 @LENGTH@ 12
---INS SuperConstructorInvocation@@super(camelContext);
 @TO@ MethodDeclaration@@public, voidMethodName:PersistentQueueReplyManager, CamelContext camelContext,  @AT@ 1795 @LENGTH@ 20
------INS SimpleName@@camelContext @TO@ SuperConstructorInvocation@@super(camelContext);
 @AT@ 1801 @LENGTH@ 12


UPD FieldDeclaration@@private, ServiceRegistration, [registration] @TO@ private, ServiceRegistration<?>, [registration] @AT@ 1201 @LENGTH@ 41
---DEL SimpleType@@ServiceRegistration @AT@ 1209 @LENGTH@ 19
---INS ParameterizedType@@ServiceRegistration<?> @TO@ FieldDeclaration@@private, ServiceRegistration, [registration] @AT@ 1237 @LENGTH@ 22
------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1237 @LENGTH@ 19
------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1257 @LENGTH@ 1


INS MethodDeclaration@@boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[public]ParsingState,  @AT@ 2123 @LENGTH@ 17
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:lockValueIndex,  @AT@ 2115 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@boolean, MethodName:lockValueIndex,  @AT@ 2123 @LENGTH@ 14


UPD EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @TO@ for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION);  if (op == null) {    op=operation;  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 3749 @LENGTH@ 617
---UPD VariableDeclarationStatement@@final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController); @TO@ final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController); @AT@ 4032 @LENGTH@ 118
------UPD VariableDeclarationFragment@@task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController) @TO@ task=new HostControllerUpdateTask(host,op.clone(),context,proxyController) @AT@ 4063 @LENGTH@ 86
---------UPD ClassInstanceCreation@@HostControllerUpdateTask[host, operation.clone(), context, proxyController] @TO@ HostControllerUpdateTask[host, op.clone(), context, proxyController] @AT@ 4070 @LENGTH@ 79
------------UPD MethodInvocation@@operation.clone() @TO@ op.clone() @AT@ 4105 @LENGTH@ 17
---------------UPD SimpleName@@Name:operation @TO@ Name:op @AT@ 4105 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4058 @LENGTH@ 82
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @AT@ 4058 @LENGTH@ 9
------INS VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @AT@ 4068 @LENGTH@ 71
---------INS SimpleName@@op @TO@ VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4068 @LENGTH@ 2
---------INS MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4073 @LENGTH@ 66
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4073 @LENGTH@ 7
------------INS SimpleName@@MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION] @TO@ MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4081 @LENGTH@ 58
---------------INS QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @TO@ SimpleName@@MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION] @AT@ 4095 @LENGTH@ 43
------------------INS SimpleName@@OperationAttachments @TO@ QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @AT@ 4095 @LENGTH@ 20
------------------INS SimpleName@@SLAVE_SERVER_OPERATION @TO@ QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @AT@ 4116 @LENGTH@ 22
---INS IfStatement@@if (op == null) {  op=operation;} @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4153 @LENGTH@ 62
------INS InfixExpression@@op == null @TO@ IfStatement@@if (op == null) {  op=operation;} @AT@ 4156 @LENGTH@ 10
---------INS SimpleName@@op @TO@ InfixExpression@@op == null @AT@ 4156 @LENGTH@ 2
---------INS Operator@@== @TO@ InfixExpression@@op == null @AT@ 4158 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@op == null @AT@ 4162 @LENGTH@ 4
------INS Block@@ThenBody:{  op=operation;} @TO@ IfStatement@@if (op == null) {  op=operation;} @AT@ 4168 @LENGTH@ 47
---------INS ExpressionStatement@@Assignment:op=operation @TO@ Block@@ThenBody:{  op=operation;} @AT@ 4186 @LENGTH@ 15
------------INS Assignment@@op=operation @TO@ ExpressionStatement@@Assignment:op=operation @AT@ 4186 @LENGTH@ 14
---------------INS SimpleName@@op @TO@ Assignment@@op=operation @AT@ 4186 @LENGTH@ 2
---------------INS Operator@@= @TO@ Assignment@@op=operation @AT@ 4188 @LENGTH@ 1
---------------INS SimpleName@@operation @TO@ Assignment@@op=operation @AT@ 4191 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:sub.get(element.getValue()) @TO@ MethodInvocation:sub.get(element.getValue(),iterator) @AT@ 5279 @LENGTH@ 35
---UPD MethodInvocation@@sub.get(element.getValue()) @TO@ sub.get(element.getValue(),iterator) @AT@ 5286 @LENGTH@ 27
------UPD SimpleName@@MethodName:get:[element.getValue()] @TO@ MethodName:get:[element.getValue(), iterator] @AT@ 5290 @LENGTH@ 23
---------INS SimpleName@@iterator @TO@ SimpleName@@MethodName:get:[element.getValue()] @AT@ 5314 @LENGTH@ 8


UPD FieldDeclaration@@private, static, final, int, [MANAGEMENT_API_MICRO_VERSION=0] @TO@ private, static, final, int, [MANAGEMENT_API_MICRO_VERSION=1] @AT@ 3813 @LENGTH@ 58
---UPD VariableDeclarationFragment@@MANAGEMENT_API_MICRO_VERSION=0 @TO@ MANAGEMENT_API_MICRO_VERSION=1 @AT@ 3838 @LENGTH@ 32
------UPD NumberLiteral@@0 @TO@ 1 @AT@ 3869 @LENGTH@ 1


UPD IfStatement@@if (path != null || relativeTo != null) {  writer.writeEmptyElement(localName);  if (path != null)   writer.writeAttribute(PATH.getName(),path);  if (relativeTo != null)   writer.writeAttribute(RELATIVE_TO.getName(),relativeTo);} @TO@ if (path != null || relativeTo != null) {  writer.writeEmptyElement(localName);  if (path != null)   writer.writeAttribute(PATH.getName(),path);  RELATIVE_TO.marshallAsAttribute(node.get(localName),writer);} @AT@ 20721 @LENGTH@ 282
---UPD Block@@ThenBody:{  writer.writeEmptyElement(localName);  if (path != null)   writer.writeAttribute(PATH.getName(),path);  if (relativeTo != null)   writer.writeAttribute(RELATIVE_TO.getName(),relativeTo);} @TO@ ThenBody:{  writer.writeEmptyElement(localName);  if (path != null)   writer.writeAttribute(PATH.getName(),path);  RELATIVE_TO.marshallAsAttribute(node.get(localName),writer);} @AT@ 20760 @LENGTH@ 243
------DEL IfStatement@@if (relativeTo != null) writer.writeAttribute(RELATIVE_TO.getName(),relativeTo); @AT@ 20909 @LENGTH@ 80
---------DEL InfixExpression@@relativeTo != null @AT@ 20912 @LENGTH@ 18
------------DEL SimpleName@@relativeTo @AT@ 20912 @LENGTH@ 10
------------DEL Operator@@!= @AT@ 20922 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 20926 @LENGTH@ 4
---------DEL Block@@ThenBody:writer.writeAttribute(RELATIVE_TO.getName(),relativeTo); @AT@ 20932 @LENGTH@ 57
------MOV ExpressionStatement@@MethodInvocation:writer.writeAttribute(RELATIVE_TO.getName(),relativeTo) @TO@ Block@@ThenBody:{  writer.writeEmptyElement(localName);  if (path != null)   writer.writeAttribute(PATH.getName(),path);  if (relativeTo != null)   writer.writeAttribute(RELATIVE_TO.getName(),relativeTo);} @AT@ 20932 @LENGTH@ 57
---------UPD MethodInvocation@@writer.writeAttribute(RELATIVE_TO.getName(),relativeTo) @TO@ RELATIVE_TO.marshallAsAttribute(node.get(localName),writer) @AT@ 20932 @LENGTH@ 56
------------UPD SimpleName@@Name:writer @TO@ Name:RELATIVE_TO @AT@ 20932 @LENGTH@ 6
------------UPD SimpleName@@MethodName:writeAttribute:[RELATIVE_TO.getName(), relativeTo] @TO@ MethodName:marshallAsAttribute:[node.get(localName), writer] @AT@ 20939 @LENGTH@ 49
---------------UPD MethodInvocation@@RELATIVE_TO.getName() @TO@ node.get(localName) @AT@ 20954 @LENGTH@ 21
------------------UPD SimpleName@@Name:RELATIVE_TO @TO@ Name:node @AT@ 20954 @LENGTH@ 11
------------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:get:[localName] @AT@ 20966 @LENGTH@ 9
---------------------INS SimpleName@@localName @TO@ SimpleName@@MethodName:getName:[] @AT@ 20955 @LENGTH@ 9
---------------UPD SimpleName@@relativeTo @TO@ writer @AT@ 20977 @LENGTH@ 10


UPD ForStatement@@for (int i=0; i < inAvail; i++) {  byte b=in[inPos++];  if (b == PAD) {    context.eof=true;    break;  } else {    final byte[] buffer=ensureBufferSize(decodeSize,context);    if (b >= 0 && b < this.decodeTable.length) {      int result=this.decodeTable[b];      if (result >= 0) {        context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;        context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;        if (context.modulus == 0) {          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);          buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);        }      }    }  }} @TO@ for (int i=0; i < inAvail; i++) {  final byte b=in[inPos++];  if (b == PAD) {    context.eof=true;    break;  } else {    final byte[] buffer=ensureBufferSize(decodeSize,context);    if (b >= 0 && b < this.decodeTable.length) {      final int result=this.decodeTable[b];      if (result >= 0) {        context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;        context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;        if (context.modulus == 0) {          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);          buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);        }      }    }  }} @AT@ 12398 @LENGTH@ 1364
---UPD VariableDeclarationStatement@@byte b=in[inPos++]; @TO@ final byte b=in[inPos++]; @AT@ 12446 @LENGTH@ 21
------INS Modifier@@final @TO@ VariableDeclarationStatement@@byte b=in[inPos++]; @AT@ 12446 @LENGTH@ 5
---UPD IfStatement@@if (b == PAD) {  context.eof=true;  break;} else {  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @TO@ if (b == PAD) {  context.eof=true;  break;} else {  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    final int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @AT@ 12480 @LENGTH@ 1272
------UPD Block@@ElseBody:{  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @TO@ ElseBody:{  final byte[] buffer=ensureBufferSize(decodeSize,context);  if (b >= 0 && b < this.decodeTable.length) {    final int result=this.decodeTable[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);      }    }  }} @AT@ 12605 @LENGTH@ 1147
---------UPD IfStatement@@if (b >= 0 && b < this.decodeTable.length) {  int result=this.decodeTable[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);    }  }} @TO@ if (b >= 0 && b < this.decodeTable.length) {  final int result=this.decodeTable[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);    }  }} @AT@ 12700 @LENGTH@ 1038
------------UPD Block@@ThenBody:{  int result=this.decodeTable[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);    }  }} @TO@ ThenBody:{  final int result=this.decodeTable[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.lbitWorkArea=(context.lbitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 32) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 24) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.lbitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.lbitWorkArea & MASK_8BITS);    }  }} @AT@ 12743 @LENGTH@ 995
---------------UPD VariableDeclarationStatement@@int result=this.decodeTable[b]; @TO@ final int result=this.decodeTable[b]; @AT@ 12765 @LENGTH@ 33
------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@int result=this.decodeTable[b]; @AT@ 12771 @LENGTH@ 5


UPD ThrowStatement@@ClassInstanceCreation:new OAuth2Exception("A redirect_uri must be supplied.") @TO@ ClassInstanceCreation:new RedirectMismatchException("A redirect_uri must be supplied.") @AT@ 2546 @LENGTH@ 62
---UPD ClassInstanceCreation@@OAuth2Exception["A redirect_uri must be supplied."] @TO@ RedirectMismatchException["A redirect_uri must be supplied."] @AT@ 2552 @LENGTH@ 55
------UPD SimpleType@@OAuth2Exception @TO@ RedirectMismatchException @AT@ 2556 @LENGTH@ 15


UPD Block@@ThenBody:{  List execute=pipeline.syncAndReturnAll();  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }  }} @TO@ ThenBody:{  List<Object> execute=pipeline.syncAndReturnAll();  if (execute != null && !execute.isEmpty()) {    Exception cause=null;    for (int i=0; i < execute.size(); i++) {      Object object=execute.get(i);      if (object instanceof Exception) {        DataAccessException dataAccessException=convertJedisAccessException((Exception)object);        if (cause == null) {          cause=dataAccessException;        }        execute.set(i,dataAccessException);      }    }    if (cause != null) {      throw new RedisPipelineException(cause,execute);    }    return execute;  }} @AT@ 6741 @LENGTH@ 567
---UPD VariableDeclarationStatement@@List execute=pipeline.syncAndReturnAll(); @TO@ List<Object> execute=pipeline.syncAndReturnAll(); @AT@ 6746 @LENGTH@ 43
------INS ParameterizedType@@List<Object> @TO@ VariableDeclarationStatement@@List execute=pipeline.syncAndReturnAll(); @AT@ 6746 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Object> @AT@ 6746 @LENGTH@ 4
---------INS SimpleType@@Object @TO@ ParameterizedType@@List<Object> @AT@ 6751 @LENGTH@ 6
------DEL SimpleType@@List @AT@ 6746 @LENGTH@ 4
---UPD IfStatement@@if (execute != null && !execute.isEmpty()) {  Exception cause=null;  for (int i=0; i < execute.size(); i++) {    Object object=execute.get(i);    if (object instanceof Exception) {      DataAccessException dataAccessException=convertJedisAccessException((Exception)object);      if (cause == null) {        cause=dataAccessException;      }      execute.set(i,dataAccessException);    }  }  if (cause != null) {    throw new RedisPipelineException(cause,execute);  }} @TO@ if (execute != null && !execute.isEmpty()) {  Exception cause=null;  for (int i=0; i < execute.size(); i++) {    Object object=execute.get(i);    if (object instanceof Exception) {      DataAccessException dataAccessException=convertJedisAccessException((Exception)object);      if (cause == null) {        cause=dataAccessException;      }      execute.set(i,dataAccessException);    }  }  if (cause != null) {    throw new RedisPipelineException(cause,execute);  }  return execute;} @AT@ 6793 @LENGTH@ 511
------UPD Block@@ThenBody:{  Exception cause=null;  for (int i=0; i < execute.size(); i++) {    Object object=execute.get(i);    if (object instanceof Exception) {      DataAccessException dataAccessException=convertJedisAccessException((Exception)object);      if (cause == null) {        cause=dataAccessException;      }      execute.set(i,dataAccessException);    }  }  if (cause != null) {    throw new RedisPipelineException(cause,execute);  }} @TO@ ThenBody:{  Exception cause=null;  for (int i=0; i < execute.size(); i++) {    Object object=execute.get(i);    if (object instanceof Exception) {      DataAccessException dataAccessException=convertJedisAccessException((Exception)object);      if (cause == null) {        cause=dataAccessException;      }      execute.set(i,dataAccessException);    }  }  if (cause != null) {    throw new RedisPipelineException(cause,execute);  }  return execute;} @AT@ 6836 @LENGTH@ 468
---------INS ReturnStatement@@SimpleName:execute @TO@ Block@@ThenBody:{  Exception cause=null;  for (int i=0; i < execute.size(); i++) {    Object object=execute.get(i);    if (object instanceof Exception) {      DataAccessException dataAccessException=convertJedisAccessException((Exception)object);      if (cause == null) {        cause=dataAccessException;      }      execute.set(i,dataAccessException);    }  }  if (cause != null) {    throw new RedisPipelineException(cause,execute);  }} @AT@ 7314 @LENGTH@ 15
------------INS SimpleName@@execute @TO@ ReturnStatement@@SimpleName:execute @AT@ 7321 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:System.out.println("completed " + result) @AT@ 7314 @LENGTH@ 42
---DEL MethodInvocation@@System.out.println("completed " + result) @AT@ 7314 @LENGTH@ 41
------DEL QualifiedName@@Name:System.out @AT@ 7314 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["completed " + result] @AT@ 7325 @LENGTH@ 30
---------DEL InfixExpression@@"completed " + result @AT@ 7333 @LENGTH@ 21
------------DEL StringLiteral@@"completed " @AT@ 7333 @LENGTH@ 12
------------DEL Operator@@+ @AT@ 7345 @LENGTH@ 1
------------DEL SimpleName@@result @AT@ 7348 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @TO@ ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @AT@ 8915 @LENGTH@ 537
---UPD ClassInstanceCreation@@LifecycleException["The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @TO@ LifecycleException["The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @AT@ 8921 @LENGTH@ 530
------UPD InfixExpression@@"The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @TO@ "The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @AT@ 8944 @LENGTH@ 506
---------UPD StringLiteral@@"Managed containers does not support connecting to running server instances due to the " @TO@ "Managed containers do not support connecting to running server instances due to the " @AT@ 8996 @LENGTH@ 88


UPD IfStatement@@if (!forOperation && defaultValue != null && defaultValue.isDefined()) {  result.get(ModelDescriptionConstants.DEFAULT).set(defaultValue);} @TO@ if (defaultValue != null && defaultValue.isDefined()) {  result.get(ModelDescriptionConstants.DEFAULT).set(defaultValue);} @AT@ 20945 @LENGTH@ 159
---UPD InfixExpression@@!forOperation && defaultValue != null && defaultValue.isDefined() @TO@ defaultValue != null && defaultValue.isDefined() @AT@ 20949 @LENGTH@ 65
------DEL InfixExpression@@!forOperation && defaultValue != null @AT@ 20949 @LENGTH@ 37
---------DEL PrefixExpression@@!forOperation @AT@ 20949 @LENGTH@ 13
------------DEL Operator@@! @AT@ 20949 @LENGTH@ 1
------------DEL SimpleName@@forOperation @AT@ 20950 @LENGTH@ 12
---------DEL Operator@@&& @AT@ 20962 @LENGTH@ 2
------MOV InfixExpression@@defaultValue != null @TO@ InfixExpression@@!forOperation && defaultValue != null && defaultValue.isDefined() @AT@ 20966 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertEquals("/foo",config.diskDir.getAbsolutePath()) @TO@ MethodInvocation:assertEquals(File.separator + "foo",config.diskDir.getPath()) @AT@ 1641 @LENGTH@ 55
---UPD MethodInvocation@@assertEquals("/foo",config.diskDir.getAbsolutePath()) @TO@ assertEquals(File.separator + "foo",config.diskDir.getPath()) @AT@ 1641 @LENGTH@ 54
------UPD SimpleName@@MethodName:assertEquals:["/foo", config.diskDir.getAbsolutePath()] @TO@ MethodName:assertEquals:[File.separator + "foo", config.diskDir.getPath()] @AT@ 1641 @LENGTH@ 54
---------DEL StringLiteral@@"/foo" @AT@ 1654 @LENGTH@ 6
---------UPD MethodInvocation@@config.diskDir.getAbsolutePath() @TO@ config.diskDir.getPath() @AT@ 1662 @LENGTH@ 32
------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:getPath:[] @AT@ 1677 @LENGTH@ 17
---------INS InfixExpression@@File.separator + "foo" @TO@ SimpleName@@MethodName:assertEquals:["/foo", config.diskDir.getAbsolutePath()] @AT@ 1676 @LENGTH@ 22
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@File.separator + "foo" @AT@ 1676 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 1676 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 1681 @LENGTH@ 9
------------INS Operator@@+ @TO@ InfixExpression@@File.separator + "foo" @AT@ 1690 @LENGTH@ 1
------------INS StringLiteral@@"foo" @TO@ InfixExpression@@File.separator + "foo" @AT@ 1693 @LENGTH@ 5


UPD VariableDeclarationStatement@@DeadLetterChannel answer=new DeadLetterChannel(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),getFailureProcessor(),getDeadLetterUri(),isUseOriginalMessage(),getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorServiceRef()); @TO@ DeadLetterChannel answer=new DeadLetterChannel(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),getFailureProcessor(),getDeadLetterUri(),isUseOriginalMessage(),getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorService(routeContext.getCamelContext())); @AT@ 2003 @LENGTH@ 355
---UPD VariableDeclarationFragment@@answer=new DeadLetterChannel(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),getFailureProcessor(),getDeadLetterUri(),isUseOriginalMessage(),getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorServiceRef()) @TO@ answer=new DeadLetterChannel(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),getFailureProcessor(),getDeadLetterUri(),isUseOriginalMessage(),getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorService(routeContext.getCamelContext())) @AT@ 2021 @LENGTH@ 336
------UPD ClassInstanceCreation@@DeadLetterChannel[routeContext.getCamelContext(), processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getExceptionPolicyStrategy(), getFailureProcessor(), getDeadLetterUri(), isUseOriginalMessage(), getRetryWhilePolicy(routeContext.getCamelContext()), getExecutorServiceRef()] @TO@ DeadLetterChannel[routeContext.getCamelContext(), processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getExceptionPolicyStrategy(), getFailureProcessor(), getDeadLetterUri(), isUseOriginalMessage(), getRetryWhilePolicy(routeContext.getCamelContext()), getExecutorService(routeContext.getCamelContext())] @AT@ 2030 @LENGTH@ 327
---------UPD MethodInvocation@@MethodName:getExecutorServiceRef:[] @TO@ getExecutorService(routeContext.getCamelContext()) @AT@ 2333 @LENGTH@ 23
------------INS SimpleName@@MethodName:getExecutorService:[routeContext.getCamelContext()] @TO@ MethodInvocation@@MethodName:getExecutorServiceRef:[] @AT@ 2333 @LENGTH@ 50
---------------INS MethodInvocation@@routeContext.getCamelContext() @TO@ SimpleName@@MethodName:getExecutorService:[routeContext.getCamelContext()] @AT@ 2352 @LENGTH@ 30
------------------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 2352 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 2365 @LENGTH@ 17


UPD EnhancedForStatement@@for (TimeoutMapEntry<K,V> entry : expired) {  boolean evict=onEviction(entry.getKey(),entry.getValue());  if (evict) {    evicts.add(entry.getKey());  }} @TO@ for (TimeoutMapEntry<K,V> entry : expired) {  boolean evict=false;  try {    evict=onEviction(entry.getKey(),entry.getValue());  } catch (  Throwable t) {    log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);  }  if (evict) {    evicts.add(entry.getKey());  }} @AT@ 6807 @LENGTH@ 337
---UPD VariableDeclarationStatement@@boolean evict=onEviction(entry.getKey(),entry.getValue()); @TO@ boolean evict=false; @AT@ 6877 @LENGTH@ 61
------UPD VariableDeclarationFragment@@evict=onEviction(entry.getKey(),entry.getValue()) @TO@ evict=false @AT@ 6885 @LENGTH@ 52
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@evict=onEviction(entry.getKey(),entry.getValue()) @AT@ 6961 @LENGTH@ 5
---INS TryStatement@@try {  evict=onEviction(entry.getKey(),entry.getValue());} catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @TO@ EnhancedForStatement@@for (TimeoutMapEntry<K,V> entry : expired) {  boolean evict=onEviction(entry.getKey(),entry.getValue());  if (evict) {    evicts.add(entry.getKey());  }} @AT@ 6992 @LENGTH@ 350
------INS ExpressionStatement@@Assignment:evict=onEviction(entry.getKey(),entry.getValue()) @TO@ TryStatement@@try {  evict=onEviction(entry.getKey(),entry.getValue());} catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @AT@ 7026 @LENGTH@ 53
---------INS Assignment@@evict=onEviction(entry.getKey(),entry.getValue()) @TO@ ExpressionStatement@@Assignment:evict=onEviction(entry.getKey(),entry.getValue()) @AT@ 7026 @LENGTH@ 52
------------MOV MethodInvocation@@onEviction(entry.getKey(),entry.getValue()) @TO@ Assignment@@evict=onEviction(entry.getKey(),entry.getValue()) @AT@ 6893 @LENGTH@ 44
------------INS SimpleName@@evict @TO@ Assignment@@evict=onEviction(entry.getKey(),entry.getValue()) @AT@ 7026 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@evict=onEviction(entry.getKey(),entry.getValue()) @AT@ 7031 @LENGTH@ 1
------INS CatchClause@@catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @TO@ TryStatement@@try {  evict=onEviction(entry.getKey(),entry.getValue());} catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @AT@ 7106 @LENGTH@ 236
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @AT@ 7113 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 7113 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 7123 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @TO@ CatchClause@@catch (Throwable t) {  log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t);} @AT@ 7156 @LENGTH@ 160
------------INS MethodInvocation@@log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @TO@ ExpressionStatement@@MethodInvocation:log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @AT@ 7156 @LENGTH@ 159
---------------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @AT@ 7156 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: ", entry.getValue(), t] @TO@ MethodInvocation@@log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @AT@ 7160 @LENGTH@ 155
------------------INS StringLiteral@@"Exception happened during eviction of entry ID {}, won't evict and will continue trying: " @TO@ SimpleName@@MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: ", entry.getValue(), t] @AT@ 7165 @LENGTH@ 91
------------------INS MethodInvocation@@entry.getValue() @TO@ SimpleName@@MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: ", entry.getValue(), t] @AT@ 7295 @LENGTH@ 16
---------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 7295 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 7301 @LENGTH@ 10
------------------INS SimpleName@@t @TO@ SimpleName@@MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: ", entry.getValue(), t] @AT@ 7313 @LENGTH@ 1


INS FieldDeclaration@@String, [FILE_LOCK_FILE_GOT="CamelFileLockFileGot"] @TO@ TypeDeclaration@@[public]Exchange,  @AT@ 7585 @LENGTH@ 53
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [FILE_LOCK_FILE_GOT="CamelFileLockFileGot"] @AT@ 7585 @LENGTH@ 6
---INS VariableDeclarationFragment@@FILE_LOCK_FILE_GOT="CamelFileLockFileGot" @TO@ FieldDeclaration@@String, [FILE_LOCK_FILE_GOT="CamelFileLockFileGot"] @AT@ 7592 @LENGTH@ 45
------INS SimpleName@@FILE_LOCK_FILE_GOT @TO@ VariableDeclarationFragment@@FILE_LOCK_FILE_GOT="CamelFileLockFileGot" @AT@ 7592 @LENGTH@ 18
------INS StringLiteral@@"CamelFileLockFileGot" @TO@ VariableDeclarationFragment@@FILE_LOCK_FILE_GOT="CamelFileLockFileGot" @AT@ 7615 @LENGTH@ 22


DEL IfStatement@@if (node != null) {  node.set(ModelType.STRING);} @AT@ 11544 @LENGTH@ 69
---DEL InfixExpression@@node != null @AT@ 11548 @LENGTH@ 12
------DEL SimpleName@@node @AT@ 11548 @LENGTH@ 4
------DEL Operator@@!= @AT@ 11552 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 11556 @LENGTH@ 4
---DEL Block@@ThenBody:{  node.set(ModelType.STRING);} @AT@ 11562 @LENGTH@ 51
------DEL ExpressionStatement@@MethodInvocation:node.set(ModelType.STRING) @AT@ 11576 @LENGTH@ 27
---------DEL MethodInvocation@@node.set(ModelType.STRING) @AT@ 11576 @LENGTH@ 26
------------DEL SimpleName@@Name:node @AT@ 11576 @LENGTH@ 4
------------DEL SimpleName@@MethodName:set:[ModelType.STRING] @AT@ 11581 @LENGTH@ 21
---------------DEL QualifiedName@@ModelType.STRING @AT@ 11585 @LENGTH@ 16
------------------DEL SimpleName@@ModelType @AT@ 11585 @LENGTH@ 9
------------------DEL SimpleName@@STRING @AT@ 11595 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:mock.expectedMinimumMessageCount(3) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(2) @AT@ 1742 @LENGTH@ 36
---UPD MethodInvocation@@mock.expectedMinimumMessageCount(3) @TO@ mock.expectedMinimumMessageCount(2) @AT@ 1742 @LENGTH@ 35
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[3] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 1747 @LENGTH@ 30
---------UPD NumberLiteral@@3 @TO@ 2 @AT@ 1775 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:HbaseSynchronizationManager.unbindResource(tableName).close() @TO@ MethodInvocation:HbaseUtils.releaseTable(tableName,t) @AT@ 4993 @LENGTH@ 62
---UPD MethodInvocation@@HbaseSynchronizationManager.unbindResource(tableName).close() @TO@ HbaseUtils.releaseTable(tableName,t) @AT@ 4993 @LENGTH@ 61
------INS SimpleName@@MethodName:releaseTable:[tableName, t] @TO@ MethodInvocation@@HbaseSynchronizationManager.unbindResource(tableName).close() @AT@ 4697 @LENGTH@ 26
---------INS SimpleName@@tableName @TO@ SimpleName@@MethodName:releaseTable:[tableName, t] @AT@ 4710 @LENGTH@ 9
---------INS SimpleName@@t @TO@ SimpleName@@MethodName:releaseTable:[tableName, t] @AT@ 4721 @LENGTH@ 1
------DEL MethodInvocation@@MethodName:unbindResource:[tableName] @AT@ 4993 @LENGTH@ 53
---------DEL SimpleName@@tableName @AT@ 5036 @LENGTH@ 9
------UPD SimpleName@@Name:HbaseSynchronizationManager @TO@ Name:HbaseUtils @AT@ 4993 @LENGTH@ 27
------DEL SimpleName@@MethodName:close:[] @AT@ 5047 @LENGTH@ 7


UPD MethodDeclaration@@public, String, MethodName:echo, String arg, RemoteException,  @TO@ String, MethodName:echo, String arg, RemoteException,  @AT@ 1356 @LENGTH@ 54
---DEL Modifier@@public @AT@ 1356 @LENGTH@ 6


UPD EnhancedForStatement@@for (Repository repo : repositories) {  for (  Feature f : repo.getFeatures()) {    if (features.get(f.getName()) == null) {      Map<String,Feature> versionMap=new TreeMap<String,Feature>();      versionMap.put(f.getVersion(),f);      features.put(f.getName(),versionMap);    } else {      features.get(f.getName()).put(f.getVersion(),f);    }  }} @TO@ for (Repository repo : repositories) {  try {    for (    Feature f : repo.getFeatures()) {      if (features.get(f.getName()) == null) {        Map<String,Feature> versionMap=new TreeMap<String,Feature>();        versionMap.put(f.getVersion(),f);        features.put(f.getName(),versionMap);      } else {        features.get(f.getName()).put(f.getVersion(),f);      }    }  } catch (  Exception ex) {    LOGGER.debug("Could not load features from %s.",repo.getURI());  }} @AT@ 11093 @LENGTH@ 483
---INS TryStatement@@try {  for (  Feature f : repo.getFeatures()) {    if (features.get(f.getName()) == null) {      Map<String,Feature> versionMap=new TreeMap<String,Feature>();      versionMap.put(f.getVersion(),f);      features.put(f.getName(),versionMap);    } else {      features.get(f.getName()).put(f.getVersion(),f);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @TO@ EnhancedForStatement@@for (Repository repo : repositories) {  for (  Feature f : repo.getFeatures()) {    if (features.get(f.getName()) == null) {      Map<String,Feature> versionMap=new TreeMap<String,Feature>();      versionMap.put(f.getVersion(),f);      features.put(f.getName(),versionMap);    } else {      features.get(f.getName()).put(f.getVersion(),f);    }  }} @AT@ 11336 @LENGTH@ 608
------MOV EnhancedForStatement@@for (Feature f : repo.getFeatures()) {  if (features.get(f.getName()) == null) {    Map<String,Feature> versionMap=new TreeMap<String,Feature>();    versionMap.put(f.getVersion(),f);    features.put(f.getName(),versionMap);  } else {    features.get(f.getName()).put(f.getVersion(),f);  }} @TO@ TryStatement@@try {  for (  Feature f : repo.getFeatures()) {    if (features.get(f.getName()) == null) {      Map<String,Feature> versionMap=new TreeMap<String,Feature>();      versionMap.put(f.getVersion(),f);      features.put(f.getName(),versionMap);    } else {      features.get(f.getName()).put(f.getVersion(),f);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @AT@ 11144 @LENGTH@ 422
------INS CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @TO@ TryStatement@@try {  for (  Feature f : repo.getFeatures()) {    if (features.get(f.getName()) == null) {      Map<String,Feature> versionMap=new TreeMap<String,Feature>();      versionMap.put(f.getVersion(),f);      features.put(f.getName(),versionMap);    } else {      features.get(f.getName()).put(f.getVersion(),f);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @AT@ 11827 @LENGTH@ 117
---------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @AT@ 11834 @LENGTH@ 12
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 11834 @LENGTH@ 9
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 11844 @LENGTH@ 2
---------INS ExpressionStatement@@MethodInvocation:LOGGER.debug("Could not load features from %s.",repo.getURI()) @TO@ CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repo.getURI());} @AT@ 11866 @LENGTH@ 64
------------INS MethodInvocation@@LOGGER.debug("Could not load features from %s.",repo.getURI()) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.debug("Could not load features from %s.",repo.getURI()) @AT@ 11866 @LENGTH@ 63
---------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.debug("Could not load features from %s.",repo.getURI()) @AT@ 11866 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:["Could not load features from %s.", repo.getURI()] @TO@ MethodInvocation@@LOGGER.debug("Could not load features from %s.",repo.getURI()) @AT@ 11873 @LENGTH@ 56
------------------INS StringLiteral@@"Could not load features from %s." @TO@ SimpleName@@MethodName:debug:["Could not load features from %s.", repo.getURI()] @AT@ 11879 @LENGTH@ 34
------------------INS MethodInvocation@@repo.getURI() @TO@ SimpleName@@MethodName:debug:["Could not load features from %s.", repo.getURI()] @AT@ 11915 @LENGTH@ 13
---------------------INS SimpleName@@Name:repo @TO@ MethodInvocation@@repo.getURI() @AT@ 11915 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getURI:[] @TO@ MethodInvocation@@repo.getURI() @AT@ 11920 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:logger.debug("Encoding and sending form: " + form) @TO@ MethodDeclaration@@public, void, MethodName:doWithRequest, ClientHttpRequest request, IOException,  @AT@ 6247 @LENGTH@ 51
---INS MethodInvocation@@logger.debug("Encoding and sending form: " + form) @TO@ ExpressionStatement@@MethodInvocation:logger.debug("Encoding and sending form: " + form) @AT@ 6247 @LENGTH@ 50
------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.debug("Encoding and sending form: " + form) @AT@ 6247 @LENGTH@ 6
------INS SimpleName@@MethodName:debug:["Encoding and sending form: " + form] @TO@ MethodInvocation@@logger.debug("Encoding and sending form: " + form) @AT@ 6254 @LENGTH@ 43
---------INS InfixExpression@@"Encoding and sending form: " + form @TO@ SimpleName@@MethodName:debug:["Encoding and sending form: " + form] @AT@ 6260 @LENGTH@ 36
------------INS StringLiteral@@"Encoding and sending form: " @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 6260 @LENGTH@ 29
------------INS Operator@@+ @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 6289 @LENGTH@ 1
------------INS SimpleName@@form @TO@ InfixExpression@@"Encoding and sending form: " + form @AT@ 6292 @LENGTH@ 4


UPD FieldDeclaration@@private, final, List<ProcessAnnotatedType<?>>, [patRouteBuilders=new ArrayList<ProcessAnnotatedType<?>>()] @TO@ private, final, Set<ProcessAnnotatedType<?>>, [patRouteBuilders=new LinkedHashSet<ProcessAnnotatedType<?>>()] @AT@ 1608 @LENGTH@ 104
---UPD ParameterizedType@@List<ProcessAnnotatedType<?>> @TO@ Set<ProcessAnnotatedType<?>> @AT@ 1622 @LENGTH@ 29
------UPD SimpleType@@List @TO@ Set @AT@ 1622 @LENGTH@ 4
---UPD VariableDeclarationFragment@@patRouteBuilders=new ArrayList<ProcessAnnotatedType<?>>() @TO@ patRouteBuilders=new LinkedHashSet<ProcessAnnotatedType<?>>() @AT@ 1652 @LENGTH@ 59
------UPD ClassInstanceCreation@@ArrayList<ProcessAnnotatedType<?>>[] @TO@ LinkedHashSet<ProcessAnnotatedType<?>>[] @AT@ 1671 @LENGTH@ 40
---------UPD ParameterizedType@@ArrayList<ProcessAnnotatedType<?>> @TO@ LinkedHashSet<ProcessAnnotatedType<?>> @AT@ 1675 @LENGTH@ 34
------------UPD SimpleType@@ArrayList @TO@ LinkedHashSet @AT@ 1675 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:enterState('\\',EscapeCharacterState.INSTANCE) @AT@ 2287 @LENGTH@ 48
---DEL MethodInvocation@@enterState('\\',EscapeCharacterState.INSTANCE) @AT@ 2287 @LENGTH@ 47
------DEL SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @AT@ 2287 @LENGTH@ 47
---------DEL CharacterLiteral@@'\\' @AT@ 2298 @LENGTH@ 4
---------DEL QualifiedName@@EscapeCharacterState.INSTANCE @AT@ 2304 @LENGTH@ 29
------------DEL SimpleName@@EscapeCharacterState @AT@ 2304 @LENGTH@ 20
------------DEL SimpleName@@INSTANCE @AT@ 2325 @LENGTH@ 8


UPD IfStatement@@if (isIdKey(key,entity)) {  if (value instanceof DBObject) {    DBObject valueDbo=(DBObject)value;    if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {      String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";      List<Object> ids=new ArrayList<Object>();      for (      Object id : (Iterable<?>)valueDbo.get(inKey)) {        ids.add(convertId(id));      }      valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));    } else {      value=getMappedObject((DBObject)value,null);    }  } else {    value=convertId(value);  }  newKey="_id";} else if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} else if (key.equals("$ne")) {  value=convertId(value);} @TO@ if (isIdKey(key,entity)) {  if (value instanceof DBObject) {    DBObject valueDbo=(DBObject)value;    if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {      String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";      List<Object> ids=new ArrayList<Object>();      for (      Object id : (Iterable<?>)valueDbo.get(inKey)) {        ids.add(convertId(id));      }      valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));    } else     if (valueDbo.containsField("$ne")) {      valueDbo.put("$ne",convertId(valueDbo.get("$ne")));    } else {      value=getMappedObject((DBObject)value,null);    }  } else {    value=convertId(value);  }  newKey="_id";} else if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} @AT@ 2566 @LENGTH@ 1024
---UPD Block@@ThenBody:{  if (value instanceof DBObject) {    DBObject valueDbo=(DBObject)value;    if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {      String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";      List<Object> ids=new ArrayList<Object>();      for (      Object id : (Iterable<?>)valueDbo.get(inKey)) {        ids.add(convertId(id));      }      valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));    } else {      value=getMappedObject((DBObject)value,null);    }  } else {    value=convertId(value);  }  newKey="_id";} @TO@ ThenBody:{  if (value instanceof DBObject) {    DBObject valueDbo=(DBObject)value;    if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {      String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";      List<Object> ids=new ArrayList<Object>();      for (      Object id : (Iterable<?>)valueDbo.get(inKey)) {        ids.add(convertId(id));      }      valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));    } else     if (valueDbo.containsField("$ne")) {      valueDbo.put("$ne",convertId(valueDbo.get("$ne")));    } else {      value=getMappedObject((DBObject)value,null);    }  } else {    value=convertId(value);  }  newKey="_id";} @AT@ 2592 @LENGTH@ 590
------UPD IfStatement@@if (value instanceof DBObject) {  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else {    value=getMappedObject((DBObject)value,null);  }} else {  value=convertId(value);} @TO@ if (value instanceof DBObject) {  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else   if (valueDbo.containsField("$ne")) {    valueDbo.put("$ne",convertId(valueDbo.get("$ne")));  } else {    value=getMappedObject((DBObject)value,null);  }} else {  value=convertId(value);} @AT@ 2598 @LENGTH@ 559
---------UPD Block@@ThenBody:{  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else {    value=getMappedObject((DBObject)value,null);  }} @TO@ ThenBody:{  DBObject valueDbo=(DBObject)value;  if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {    String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";    List<Object> ids=new ArrayList<Object>();    for (    Object id : (Iterable<?>)valueDbo.get(inKey)) {      ids.add(convertId(id));    }    valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));  } else   if (valueDbo.containsField("$ne")) {    valueDbo.put("$ne",convertId(valueDbo.get("$ne")));  } else {    value=getMappedObject((DBObject)value,null);  }} @AT@ 2629 @LENGTH@ 484
------------UPD IfStatement@@if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));} else {  value=getMappedObject((DBObject)value,null);} @TO@ if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));} else if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 2679 @LENGTH@ 428
---------------INS Block@@ElseBody:if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @TO@ IfStatement@@if (valueDbo.containsField("$in") || valueDbo.containsField("$nin")) {  String inKey=valueDbo.containsField("$in") ? "$in" : "$nin";  List<Object> ids=new ArrayList<Object>();  for (  Object id : (Iterable<?>)valueDbo.get(inKey)) {    ids.add(convertId(id));  }  valueDbo.put(inKey,ids.toArray(new Object[ids.size()]));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 3044 @LENGTH@ 171
------------------INS IfStatement@@if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @TO@ Block@@ElseBody:if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 3044 @LENGTH@ 171
---------------------MOV Block@@ElseBody:{  value=getMappedObject((DBObject)value,null);} @TO@ IfStatement@@if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 3044 @LENGTH@ 63
---------------------INS MethodInvocation@@valueDbo.containsField("$ne") @TO@ IfStatement@@if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 3048 @LENGTH@ 29
------------------------INS SimpleName@@Name:valueDbo @TO@ MethodInvocation@@valueDbo.containsField("$ne") @AT@ 3048 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:containsField:["$ne"] @TO@ MethodInvocation@@valueDbo.containsField("$ne") @AT@ 3057 @LENGTH@ 20
---------------------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:containsField:["$ne"] @AT@ 3071 @LENGTH@ 5
---------------------INS Block@@ThenBody:{  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} @TO@ IfStatement@@if (valueDbo.containsField("$ne")) {  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} else {  value=getMappedObject((DBObject)value,null);} @AT@ 3079 @LENGTH@ 67
------------------------INS ExpressionStatement@@MethodInvocation:valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @TO@ Block@@ThenBody:{  valueDbo.put("$ne",convertId(valueDbo.get("$ne")));} @AT@ 3087 @LENGTH@ 52
---------------------------INS MethodInvocation@@valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @TO@ ExpressionStatement@@MethodInvocation:valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @AT@ 3087 @LENGTH@ 51
------------------------------INS SimpleName@@Name:valueDbo @TO@ MethodInvocation@@valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @AT@ 3087 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:put:["$ne", convertId(valueDbo.get("$ne"))] @TO@ MethodInvocation@@valueDbo.put("$ne",convertId(valueDbo.get("$ne"))) @AT@ 3096 @LENGTH@ 42
---------------------------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:put:["$ne", convertId(valueDbo.get("$ne"))] @AT@ 3100 @LENGTH@ 5
---------------------------------INS MethodInvocation@@convertId(valueDbo.get("$ne")) @TO@ SimpleName@@MethodName:put:["$ne", convertId(valueDbo.get("$ne"))] @AT@ 3107 @LENGTH@ 30
------------------------------------INS SimpleName@@MethodName:convertId:[valueDbo.get("$ne")] @TO@ MethodInvocation@@convertId(valueDbo.get("$ne")) @AT@ 3107 @LENGTH@ 30
---------------------------------------INS MethodInvocation@@valueDbo.get("$ne") @TO@ SimpleName@@MethodName:convertId:[valueDbo.get("$ne")] @AT@ 3117 @LENGTH@ 19
------------------------------------------INS SimpleName@@Name:valueDbo @TO@ MethodInvocation@@valueDbo.get("$ne") @AT@ 3117 @LENGTH@ 8
------------------------------------------INS SimpleName@@MethodName:get:["$ne"] @TO@ MethodInvocation@@valueDbo.get("$ne") @AT@ 3126 @LENGTH@ 10
---------------------------------------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:get:["$ne"] @AT@ 3130 @LENGTH@ 5
------------------------------------INS SimpleName@@MethodName:convertId:[valueDbo.get("$ne")] @TO@ MethodInvocation@@convertId(valueDbo.get("$ne")) @AT@ 3107 @LENGTH@ 30
---------------------------------------INS MethodInvocation@@valueDbo.get("$ne") @TO@ SimpleName@@MethodName:convertId:[valueDbo.get("$ne")] @AT@ 3117 @LENGTH@ 19
------------------------------------------INS SimpleName@@Name:valueDbo @TO@ MethodInvocation@@valueDbo.get("$ne") @AT@ 3117 @LENGTH@ 8
------------------------------------------INS SimpleName@@MethodName:get:["$ne"] @TO@ MethodInvocation@@valueDbo.get("$ne") @AT@ 3126 @LENGTH@ 10
---------------------------------------------INS StringLiteral@@"$ne" @TO@ SimpleName@@MethodName:get:["$ne"] @AT@ 3130 @LENGTH@ 5
---UPD Block@@ElseBody:if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} else if (key.equals("$ne")) {  value=convertId(value);} @TO@ ElseBody:if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} @AT@ 3188 @LENGTH@ 402
------UPD IfStatement@@if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} else if (key.equals("$ne")) {  value=convertId(value);} @TO@ if (key.matches(N_OR_PATTERN)) {  Iterable<?> conditions=(Iterable<?>)value;  BasicBSONList newConditions=new BasicBSONList();  Iterator<?> iter=conditions.iterator();  while (iter.hasNext()) {    newConditions.add(getMappedObject((DBObject)iter.next(),null));  }  value=newConditions;} @AT@ 3188 @LENGTH@ 402
---------DEL Block@@ElseBody:if (key.equals("$ne")) {  value=convertId(value);} @AT@ 3531 @LENGTH@ 59
------------DEL IfStatement@@if (key.equals("$ne")) {  value=convertId(value);} @AT@ 3531 @LENGTH@ 59
---------------DEL MethodInvocation@@key.equals("$ne") @AT@ 3535 @LENGTH@ 17
------------------DEL SimpleName@@Name:key @AT@ 3535 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:equals:["$ne"] @AT@ 3539 @LENGTH@ 13
---------------------DEL StringLiteral@@"$ne" @AT@ 3546 @LENGTH@ 5
---------------DEL Block@@ThenBody:{  value=convertId(value);} @AT@ 3554 @LENGTH@ 36
------------------DEL ExpressionStatement@@Assignment:value=convertId(value) @AT@ 3560 @LENGTH@ 25
---------------------DEL Assignment@@value=convertId(value) @AT@ 3560 @LENGTH@ 24
------------------------DEL SimpleName@@value @AT@ 3560 @LENGTH@ 5
------------------------DEL Operator@@= @AT@ 3565 @LENGTH@ 1
------------------------DEL MethodInvocation@@convertId(value) @AT@ 3568 @LENGTH@ 16
---------------------------DEL SimpleName@@MethodName:convertId:[value] @AT@ 3568 @LENGTH@ 16
------------------------------DEL SimpleName@@value @AT@ 3578 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @TO@ TypeDeclaration@@[public, abstract]MapAttributeDefinition, AttributeDefinition @AT@ 9570 @LENGTH@ 230
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9570 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9577 @LENGTH@ 4
---INS SimpleName@@MethodName:marshallAsElement @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9582 @LENGTH@ 17
---INS SingleVariableDeclaration@@ModelNode resourceModel @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9600 @LENGTH@ 23
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode resourceModel @AT@ 9600 @LENGTH@ 9
------INS SimpleName@@resourceModel @TO@ SingleVariableDeclaration@@ModelNode resourceModel @AT@ 9610 @LENGTH@ 13
---INS SingleVariableDeclaration@@boolean marshallDefault @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9625 @LENGTH@ 23
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean marshallDefault @AT@ 9625 @LENGTH@ 7
------INS SimpleName@@marshallDefault @TO@ SingleVariableDeclaration@@boolean marshallDefault @AT@ 9633 @LENGTH@ 15
---INS SingleVariableDeclaration@@XMLStreamWriter writer @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9650 @LENGTH@ 22
------INS SimpleType@@XMLStreamWriter @TO@ SingleVariableDeclaration@@XMLStreamWriter writer @AT@ 9650 @LENGTH@ 15
------INS SimpleName@@writer @TO@ SingleVariableDeclaration@@XMLStreamWriter writer @AT@ 9666 @LENGTH@ 6
---INS SimpleType@@XMLStreamException @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9681 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:attributeMarshaller.marshallAsElement(this,resourceModel,marshallDefault,writer) @TO@ MethodDeclaration@@public, void, MethodName:marshallAsElement, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 9710 @LENGTH@ 84
------INS MethodInvocation@@attributeMarshaller.marshallAsElement(this,resourceModel,marshallDefault,writer) @TO@ ExpressionStatement@@MethodInvocation:attributeMarshaller.marshallAsElement(this,resourceModel,marshallDefault,writer) @AT@ 9710 @LENGTH@ 83
---------INS SimpleName@@Name:attributeMarshaller @TO@ MethodInvocation@@attributeMarshaller.marshallAsElement(this,resourceModel,marshallDefault,writer) @AT@ 9710 @LENGTH@ 19
---------INS SimpleName@@MethodName:marshallAsElement:[this, resourceModel, marshallDefault, writer] @TO@ MethodInvocation@@attributeMarshaller.marshallAsElement(this,resourceModel,marshallDefault,writer) @AT@ 9730 @LENGTH@ 63
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:marshallAsElement:[this, resourceModel, marshallDefault, writer] @AT@ 9748 @LENGTH@ 4
------------INS SimpleName@@resourceModel @TO@ SimpleName@@MethodName:marshallAsElement:[this, resourceModel, marshallDefault, writer] @AT@ 9754 @LENGTH@ 13
------------INS SimpleName@@marshallDefault @TO@ SimpleName@@MethodName:marshallAsElement:[this, resourceModel, marshallDefault, writer] @AT@ 9769 @LENGTH@ 15
------------INS SimpleName@@writer @TO@ SimpleName@@MethodName:marshallAsElement:[this, resourceModel, marshallDefault, writer] @AT@ 9786 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3311 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3311 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3319 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3332 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3332 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3332 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3349 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3365 @LENGTH@ 21


INS MethodDeclaration@@public, RepositoryAwareJacksonModule, MethodName:jacksonModule,  @TO@ TypeDeclaration@@[@Configuration, @ImportResource("classpath*:META-INF/spring-data-rest/**/*-export.xml"), public]RepositoryRestMvcConfiguration,  @AT@ 3562 @LENGTH@ 104
---INS Modifier@@public @TO@ MethodDeclaration@@public, RepositoryAwareJacksonModule, MethodName:jacksonModule,  @AT@ 3562 @LENGTH@ 6
---INS SimpleType@@RepositoryAwareJacksonModule @TO@ MethodDeclaration@@public, RepositoryAwareJacksonModule, MethodName:jacksonModule,  @AT@ 3569 @LENGTH@ 28
---INS SimpleName@@MethodName:jacksonModule @TO@ MethodDeclaration@@public, RepositoryAwareJacksonModule, MethodName:jacksonModule,  @AT@ 3598 @LENGTH@ 13
---INS ReturnStatement@@ClassInstanceCreation:new RepositoryAwareJacksonModule() @TO@ MethodDeclaration@@public, RepositoryAwareJacksonModule, MethodName:jacksonModule,  @AT@ 3620 @LENGTH@ 42
------INS ClassInstanceCreation@@RepositoryAwareJacksonModule[] @TO@ ReturnStatement@@ClassInstanceCreation:new RepositoryAwareJacksonModule() @AT@ 3627 @LENGTH@ 34
---------INS New@@new @TO@ ClassInstanceCreation@@RepositoryAwareJacksonModule[] @AT@ 3627 @LENGTH@ 3
---------INS SimpleType@@RepositoryAwareJacksonModule @TO@ ClassInstanceCreation@@RepositoryAwareJacksonModule[] @AT@ 3631 @LENGTH@ 28


INS MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 26796 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26796 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26803 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26810 @LENGTH@ 6
---INS SimpleName@@MethodName:getLineSeparator @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26817 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:SecurityActions.getSystemProperty("line.separator") @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26846 @LENGTH@ 59
------INS MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @TO@ ReturnStatement@@MethodInvocation:SecurityActions.getSystemProperty("line.separator") @AT@ 26853 @LENGTH@ 51
---------INS SimpleName@@Name:SecurityActions @TO@ MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @AT@ 26853 @LENGTH@ 15
---------INS SimpleName@@MethodName:getSystemProperty:["line.separator"] @TO@ MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @AT@ 26869 @LENGTH@ 35
------------INS StringLiteral@@"line.separator" @TO@ SimpleName@@MethodName:getSystemProperty:["line.separator"] @AT@ 26887 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.LB_LEAVE_ESCAPE_ON) @AT@ 1556 @LENGTH@ 69
---UPD MethodInvocation@@setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ setDefaultHandler(WordCharacterHandler.LB_LEAVE_ESCAPE_ON) @AT@ 1556 @LENGTH@ 68
------UPD SimpleName@@MethodName:setDefaultHandler:[GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.LB_LEAVE_ESCAPE_ON] @AT@ 1556 @LENGTH@ 68
---------UPD QualifiedName@@GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER @TO@ WordCharacterHandler.LB_LEAVE_ESCAPE_ON @AT@ 1574 @LENGTH@ 49
------------UPD SimpleName@@GlobalCharacterHandlers @TO@ WordCharacterHandler @AT@ 1574 @LENGTH@ 23
------------UPD SimpleName@@CONTENT_CHARACTER_HANDLER @TO@ LB_LEAVE_ESCAPE_ON @AT@ 1598 @LENGTH@ 25


UPD MethodDeclaration@@public, synchronized, void, MethodName:deploy, final File file, final String deploymentName, MojoExecutionException, MojoFailureException, IOException,  @TO@ public, synchronized, void, MethodName:deploy, final File file, final String deploymentName, DeploymentExecutionException, DeploymentFailureException, IOException,  @AT@ 7155 @LENGTH@ 645
---UPD SimpleType@@MojoExecutionException @TO@ DeploymentExecutionException @AT@ 7240 @LENGTH@ 22
---UPD SimpleType@@MojoFailureException @TO@ DeploymentFailureException @AT@ 7264 @LENGTH@ 20


UPD FieldDeclaration@@public, static, final, ListAttributeDefinition, [INCLUDES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.INCLUDES,Element.INCLUDE.getLocalName(),true,ModelType.STRING,0,Integer.MAX_VALUE,null,null,new StringLengthValidator(1,true),new AttributeMarshaller(){
  @Override public void marshallAsAttribute(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
  }
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
,AttributeAccess.Flag.RESTART_JVM)] @TO@ public, static, final, ListAttributeDefinition, [INCLUDES=new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build()] @AT@ 4201 @LENGTH@ 1117
---UPD VariableDeclarationFragment@@INCLUDES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.INCLUDES,Element.INCLUDE.getLocalName(),true,ModelType.STRING,0,Integer.MAX_VALUE,null,null,new StringLengthValidator(1,true),new AttributeMarshaller(){
  @Override public void marshallAsAttribute(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
  }
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
,AttributeAccess.Flag.RESTART_JVM) @TO@ INCLUDES=new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4245 @LENGTH@ 1072
------INS MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @TO@ VariableDeclarationFragment@@INCLUDES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.INCLUDES,Element.INCLUDE.getLocalName(),true,ModelType.STRING,0,Integer.MAX_VALUE,null,null,new StringLengthValidator(1,true),new AttributeMarshaller(){
  @Override public void marshallAsAttribute(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
  }
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
,AttributeAccess.Flag.RESTART_JVM) @AT@ 4255 @LENGTH@ 1111
---------INS MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_JVM] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 1090
------------MOV QualifiedName@@AttributeAccess.Flag.RESTART_JVM @TO@ MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_JVM] @AT@ 5284 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:setAttributeMarshaller:[new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 1034
------------MOV ClassInstanceCreation@@AttributeMarshaller[] @TO@ MethodInvocation@@MethodName:setAttributeMarshaller:[new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
] @AT@ 4467 @LENGTH@ 815
---------INS MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1,true)] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 318
------------INS ClassInstanceCreation@@StringLengthValidator[1, true] @TO@ MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1,true)] @AT@ 4538 @LENGTH@ 34
---------------MOV New@@new @TO@ ClassInstanceCreation@@StringLengthValidator[1, true] @AT@ 4431 @LENGTH@ 3
---------------MOV SimpleType@@StringLengthValidator @TO@ ClassInstanceCreation@@StringLengthValidator[1, true] @AT@ 4435 @LENGTH@ 21
---------------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@StringLengthValidator[1, true] @AT@ 4457 @LENGTH@ 1
---------------MOV BooleanLiteral@@true @TO@ ClassInstanceCreation@@StringLengthValidator[1, true] @AT@ 4460 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setMaxSize:[Integer.MAX_VALUE] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 256
------------INS QualifiedName@@Integer.MAX_VALUE @TO@ MethodInvocation@@MethodName:setMaxSize:[Integer.MAX_VALUE] @AT@ 4493 @LENGTH@ 17
---------------MOV SimpleName@@Integer @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 4388 @LENGTH@ 7
---------------MOV SimpleName@@MAX_VALUE @TO@ QualifiedName@@Integer.MAX_VALUE @AT@ 4396 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:setMinSize:[0] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 213
------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:setMinSize:[0] @AT@ 4466 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 186
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 4436 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setXmlName:[Element.INCLUDE.getLocalName()] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 154
------------INS MethodInvocation@@Element.INCLUDE.getLocalName() @TO@ MethodInvocation@@MethodName:setXmlName:[Element.INCLUDE.getLocalName()] @AT@ 4378 @LENGTH@ 30
---------------MOV QualifiedName@@Name:Element.INCLUDE @TO@ MethodInvocation@@Element.INCLUDE.getLocalName() @AT@ 4329 @LENGTH@ 15
---------------MOV SimpleName@@MethodName:getLocalName:[] @TO@ MethodInvocation@@Element.INCLUDE.getLocalName() @AT@ 4345 @LENGTH@ 14
---------INS ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.INCLUDES, ModelType.STRING] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 4255 @LENGTH@ 98
------------MOV New@@new @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.INCLUDES, ModelType.STRING] @AT@ 4256 @LENGTH@ 3
------------MOV SimpleType@@PrimitiveListAttributeDefinition @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.INCLUDES, ModelType.STRING] @AT@ 4260 @LENGTH@ 32
------------MOV QualifiedName@@ModelDescriptionConstants.INCLUDES @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.INCLUDES, ModelType.STRING] @AT@ 4293 @LENGTH@ 34
------------INS QualifiedName@@ModelType.STRING @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.INCLUDES, ModelType.STRING] @AT@ 4336 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 4336 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 4346 @LENGTH@ 6
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.INCLUDES,ModelType.STRING).setXmlName(Element.INCLUDE.getLocalName()).setAllowNull(true).setMinSize(0).setMaxSize(Integer.MAX_VALUE).setValidator(new StringLengthValidator(1,true)).setAttributeMarshaller(new AttributeMarshaller(){
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
).setFlags(AttributeAccess.Flag.RESTART_JVM).build() @AT@ 5359 @LENGTH@ 7
------DEL ClassInstanceCreation@@PrimitiveListAttributeDefinition[ModelDescriptionConstants.INCLUDES, Element.INCLUDE.getLocalName(), true, ModelType.STRING, 0, Integer.MAX_VALUE, null, null, new StringLengthValidator(1,true), new AttributeMarshaller(){
  @Override public void marshallAsAttribute(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
  }
  @Override public void marshallAsElement(  AttributeDefinition attribute,  ModelNode resourceModel,  boolean marshallDefault,  XMLStreamWriter writer) throws XMLStreamException {
    if (isMarshallable(attribute,resourceModel)) {
      for (      ModelNode included : resourceModel.get(attribute.getName()).asList()) {
        writer.writeEmptyElement(attribute.getXmlName());
        writer.writeAttribute(Attribute.SOCKET_BINDING_GROUP.getLocalName(),included.asString());
      }
    }
  }
}
, AttributeAccess.Flag.RESTART_JVM] @AT@ 4256 @LENGTH@ 1061
---------DEL MethodInvocation@@Element.INCLUDE.getLocalName() @AT@ 4329 @LENGTH@ 30
---------DEL BooleanLiteral@@true @AT@ 4361 @LENGTH@ 4
---------DEL QualifiedName@@ModelType.STRING @AT@ 4367 @LENGTH@ 16
------------DEL SimpleName@@ModelType @AT@ 4367 @LENGTH@ 9
------------DEL SimpleName@@STRING @AT@ 4377 @LENGTH@ 6
---------DEL NumberLiteral@@0 @AT@ 4385 @LENGTH@ 1
---------DEL QualifiedName@@Integer.MAX_VALUE @AT@ 4388 @LENGTH@ 17
---------DEL NullLiteral@@null @AT@ 4419 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 4425 @LENGTH@ 4
---------DEL ClassInstanceCreation@@StringLengthValidator[1, true] @AT@ 4431 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:eventPublisher.publishAuthenticationFailure(ex,auth) @TO@ MethodDeclaration@@private, void, MethodName:prepareException, AuthenticationException ex, Authentication auth,  @AT@ 9779 @LENGTH@ 54
---INS MethodInvocation@@eventPublisher.publishAuthenticationFailure(ex,auth) @TO@ ExpressionStatement@@MethodInvocation:eventPublisher.publishAuthenticationFailure(ex,auth) @AT@ 9779 @LENGTH@ 53
------INS SimpleName@@Name:eventPublisher @TO@ MethodInvocation@@eventPublisher.publishAuthenticationFailure(ex,auth) @AT@ 9779 @LENGTH@ 14
------INS SimpleName@@MethodName:publishAuthenticationFailure:[ex, auth] @TO@ MethodInvocation@@eventPublisher.publishAuthenticationFailure(ex,auth) @AT@ 9794 @LENGTH@ 38
---------INS SimpleName@@ex @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[ex, auth] @AT@ 9823 @LENGTH@ 2
---------INS SimpleName@@auth @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[ex, auth] @AT@ 9827 @LENGTH@ 4


UPD Block@@ThenBody:{  ModelNode sslConfig=parent.get(original.getKey()).remove(original.getValue());  parent.get(old.getKey(),old.getValue()).set(sslConfig);} @TO@ ThenBody:{  ModelNode sslConfig=parent.get(original.getKey(),original.getValue());  parent.get(old.getKey(),old.getValue()).set(sslConfig.clone());  parent.get(original.getKey()).remove(original.getValue());  if (parent.get(original.getKey()).asList().isEmpty()) {    parent.remove(original.getKey());  }} @AT@ 10096 @LENGTH@ 197
---UPD VariableDeclarationStatement@@ModelNode sslConfig=parent.get(original.getKey()).remove(original.getValue()); @TO@ ModelNode sslConfig=parent.get(original.getKey(),original.getValue()); @AT@ 10118 @LENGTH@ 80
------UPD VariableDeclarationFragment@@sslConfig=parent.get(original.getKey()).remove(original.getValue()) @TO@ sslConfig=parent.get(original.getKey(),original.getValue()) @AT@ 10128 @LENGTH@ 69
---------INS MethodInvocation@@parent.get(original.getKey(),original.getValue()) @TO@ VariableDeclarationFragment@@sslConfig=parent.get(original.getKey()).remove(original.getValue()) @AT@ 10197 @LENGTH@ 49
------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.get(original.getKey(),original.getValue()) @AT@ 10197 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[original.getKey(), original.getValue()] @TO@ MethodInvocation@@parent.get(original.getKey(),original.getValue()) @AT@ 10204 @LENGTH@ 42
---------------INS MethodInvocation@@original.getKey() @TO@ SimpleName@@MethodName:get:[original.getKey(), original.getValue()] @AT@ 10208 @LENGTH@ 17
------------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getKey() @AT@ 10208 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@original.getKey() @AT@ 10217 @LENGTH@ 8
---------------INS MethodInvocation@@original.getValue() @TO@ SimpleName@@MethodName:get:[original.getKey(), original.getValue()] @AT@ 10226 @LENGTH@ 19
------------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getValue() @AT@ 10226 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@original.getValue() @AT@ 10235 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:parent.get(old.getKey(),old.getValue()).set(sslConfig) @TO@ MethodInvocation:parent.get(old.getKey(),old.getValue()).set(sslConfig.clone()) @AT@ 10219 @LENGTH@ 56
------UPD MethodInvocation@@parent.get(old.getKey(),old.getValue()).set(sslConfig) @TO@ parent.get(old.getKey(),old.getValue()).set(sslConfig.clone()) @AT@ 10219 @LENGTH@ 55
---------UPD SimpleName@@MethodName:set:[sslConfig] @TO@ MethodName:set:[sslConfig.clone()] @AT@ 10260 @LENGTH@ 14
------------DEL SimpleName@@sslConfig @AT@ 10264 @LENGTH@ 9
------------INS MethodInvocation@@sslConfig.clone() @TO@ SimpleName@@MethodName:set:[sslConfig] @AT@ 10313 @LENGTH@ 17
---------------INS SimpleName@@Name:sslConfig @TO@ MethodInvocation@@sslConfig.clone() @AT@ 10313 @LENGTH@ 9
---------------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@sslConfig.clone() @AT@ 10323 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:parent.get(original.getKey()).remove(original.getValue()) @TO@ Block@@ThenBody:{  ModelNode sslConfig=parent.get(original.getKey()).remove(original.getValue());  parent.get(old.getKey(),old.getValue()).set(sslConfig);} @AT@ 10353 @LENGTH@ 58
------MOV MethodInvocation@@parent.get(original.getKey()).remove(original.getValue()) @TO@ ExpressionStatement@@MethodInvocation:parent.get(original.getKey()).remove(original.getValue()) @AT@ 10140 @LENGTH@ 57
---INS IfStatement@@if (parent.get(original.getKey()).asList().isEmpty()) {  parent.remove(original.getKey());} @TO@ Block@@ThenBody:{  ModelNode sslConfig=parent.get(original.getKey()).remove(original.getValue());  parent.get(old.getKey(),old.getValue()).set(sslConfig);} @AT@ 10432 @LENGTH@ 134
------INS MethodInvocation@@parent.get(original.getKey()).asList().isEmpty() @TO@ IfStatement@@if (parent.get(original.getKey()).asList().isEmpty()) {  parent.remove(original.getKey());} @AT@ 10436 @LENGTH@ 48
---------INS MethodInvocation@@MethodName:asList:[] @TO@ MethodInvocation@@parent.get(original.getKey()).asList().isEmpty() @AT@ 10436 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:get:[original.getKey()] @TO@ MethodInvocation@@parent.get(original.getKey()).asList().isEmpty() @AT@ 10436 @LENGTH@ 29
------------INS MethodInvocation@@original.getKey() @TO@ MethodInvocation@@MethodName:get:[original.getKey()] @AT@ 10447 @LENGTH@ 17
---------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getKey() @AT@ 10447 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@original.getKey() @AT@ 10456 @LENGTH@ 8
---------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.get(original.getKey()).asList().isEmpty() @AT@ 10436 @LENGTH@ 6
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@parent.get(original.getKey()).asList().isEmpty() @AT@ 10475 @LENGTH@ 9
------INS Block@@ThenBody:{  parent.remove(original.getKey());} @TO@ IfStatement@@if (parent.get(original.getKey()).asList().isEmpty()) {  parent.remove(original.getKey());} @AT@ 10485 @LENGTH@ 81
---------INS ExpressionStatement@@MethodInvocation:parent.remove(original.getKey()) @TO@ Block@@ThenBody:{  parent.remove(original.getKey());} @AT@ 10511 @LENGTH@ 33
------------INS MethodInvocation@@parent.remove(original.getKey()) @TO@ ExpressionStatement@@MethodInvocation:parent.remove(original.getKey()) @AT@ 10511 @LENGTH@ 32
---------------INS SimpleName@@Name:parent @TO@ MethodInvocation@@parent.remove(original.getKey()) @AT@ 10511 @LENGTH@ 6
---------------INS SimpleName@@MethodName:remove:[original.getKey()] @TO@ MethodInvocation@@parent.remove(original.getKey()) @AT@ 10518 @LENGTH@ 25
------------------INS MethodInvocation@@original.getKey() @TO@ SimpleName@@MethodName:remove:[original.getKey()] @AT@ 10525 @LENGTH@ 17
---------------------INS SimpleName@@Name:original @TO@ MethodInvocation@@original.getKey() @AT@ 10525 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@original.getKey() @AT@ 10534 @LENGTH@ 8


UPD ReturnStatement@@StringLiteral:"1.0.1" @TO@ StringLiteral:"1.2.3" @AT@ 2108 @LENGTH@ 15
---UPD StringLiteral@@"1.0.1" @TO@ "1.2.3" @AT@ 2115 @LENGTH@ 7


UPD EnhancedForStatement@@for (ModuleIdentifier moduleId : dependencies) {  String path=moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot();  pw.println(path + File.separator + "**");} @TO@ for (ModuleIdentifier moduleId : dependencies) {  String path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot();  pw.println(path + '/' + "**");} @AT@ 6041 @LENGTH@ 238
---UPD VariableDeclarationStatement@@String path=moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot(); @TO@ String path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot(); @AT@ 6110 @LENGTH@ 89
------UPD VariableDeclarationFragment@@path=moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @TO@ path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot() @AT@ 6117 @LENGTH@ 81
---------UPD InfixExpression@@moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @TO@ moduleId.getName().replace('.','/') + '/' + moduleId.getSlot() @AT@ 6124 @LENGTH@ 74
------------DEL QualifiedName@@File.separator @AT@ 6163 @LENGTH@ 14
---------------DEL SimpleName@@File @AT@ 6163 @LENGTH@ 4
---------------DEL SimpleName@@separator @AT@ 6168 @LENGTH@ 9
------------INS CharacterLiteral@@'/' @TO@ InfixExpression@@moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @AT@ 6163 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:pw.println(path + File.separator + "**") @TO@ MethodInvocation:pw.println(path + '/' + "**") @AT@ 6220 @LENGTH@ 41
------UPD MethodInvocation@@pw.println(path + File.separator + "**") @TO@ pw.println(path + '/' + "**") @AT@ 6220 @LENGTH@ 40
---------UPD SimpleName@@MethodName:println:[path + File.separator + "**"] @TO@ MethodName:println:[path + '/' + "**"] @AT@ 6223 @LENGTH@ 37
------------UPD InfixExpression@@path + File.separator + "**" @TO@ path + '/' + "**" @AT@ 6231 @LENGTH@ 28
---------------INS CharacterLiteral@@'/' @TO@ InfixExpression@@path + File.separator + "**" @AT@ 6227 @LENGTH@ 3
---------------DEL QualifiedName@@File.separator @AT@ 6238 @LENGTH@ 14
------------------DEL SimpleName@@File @AT@ 6238 @LENGTH@ 4
------------------DEL SimpleName@@separator @AT@ 6243 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:getConfiguration().setDirectory(file.getPath()) @TO@ MethodInvocation:getConfiguration().setDirectory(FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()) @AT@ 4978 @LENGTH@ 48
---UPD MethodInvocation@@getConfiguration().setDirectory(file.getPath()) @TO@ getConfiguration().setDirectory(FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()) @AT@ 4978 @LENGTH@ 47
------UPD SimpleName@@MethodName:setDirectory:[file.getPath()] @TO@ MethodName:setDirectory:[FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()] @AT@ 4997 @LENGTH@ 28
---------INS ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @TO@ SimpleName@@MethodName:setDirectory:[file.getPath()] @AT@ 5010 @LENGTH@ 67
------------INS MethodInvocation@@FileUtil.isAbsolute(file) @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 5010 @LENGTH@ 25
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.isAbsolute(file) @AT@ 5010 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isAbsolute:[file] @TO@ MethodInvocation@@FileUtil.isAbsolute(file) @AT@ 5019 @LENGTH@ 16
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:isAbsolute:[file] @AT@ 5030 @LENGTH@ 4
------------INS MethodInvocation@@file.getAbsolutePath() @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 5038 @LENGTH@ 22
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 5038 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 5043 @LENGTH@ 17
------------INS MethodInvocation@@file.getPath() @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 5063 @LENGTH@ 14
---------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.getPath() @AT@ 5010 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@file.getPath() @AT@ 5015 @LENGTH@ 9
---------DEL MethodInvocation@@file.getPath() @AT@ 5010 @LENGTH@ 14


UPD TryStatement@@try {  super.doHandle(ctx);} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @TO@ try {  super.doHandle(ctx);  ctx.printLine("The batch executed successfully");} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @AT@ 2080 @LENGTH@ 257
---INS ExpressionStatement@@MethodInvocation:ctx.printLine("The batch executed successfully") @TO@ TryStatement@@try {  super.doHandle(ctx);} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @AT@ 2131 @LENGTH@ 49
------INS MethodInvocation@@ctx.printLine("The batch executed successfully") @TO@ ExpressionStatement@@MethodInvocation:ctx.printLine("The batch executed successfully") @AT@ 2131 @LENGTH@ 48
---------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.printLine("The batch executed successfully") @AT@ 2131 @LENGTH@ 3
---------INS SimpleName@@MethodName:printLine:["The batch executed successfully"] @TO@ MethodInvocation@@ctx.printLine("The batch executed successfully") @AT@ 2135 @LENGTH@ 44
------------INS StringLiteral@@"The batch executed successfully" @TO@ SimpleName@@MethodName:printLine:["The batch executed successfully"] @AT@ 2145 @LENGTH@ 33


UPD MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21099 @LENGTH@ 820
---UPD SimpleName@@MethodName:getDeployments @TO@ MethodName:getMatchingDeployments @AT@ 21126 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:Thread.sleep(100) @TO@ MethodDeclaration@@public, void, MethodName:testConcurrentAppend, Exception,  @AT@ 2044 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(100) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(100) @AT@ 2044 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(100) @AT@ 2044 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[100] @TO@ MethodInvocation@@Thread.sleep(100) @AT@ 2051 @LENGTH@ 10
---------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:sleep:[100] @AT@ 2057 @LENGTH@ 3


UPD IfStatement@@if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean()) {  continue;} @TO@ if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false)) {  continue;} @AT@ 11756 @LENGTH@ 111
---UPD InfixExpression@@boottimeOnly && !propResource.get(BOOT_TIME).asBoolean() @TO@ boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11760 @LENGTH@ 56
------UPD PrefixExpression@@!propResource.get(BOOT_TIME).asBoolean() @TO@ !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11776 @LENGTH@ 40
---------UPD MethodInvocation@@propResource.get(BOOT_TIME).asBoolean() @TO@ propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11777 @LENGTH@ 39
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 11805 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 11815 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 4128 @LENGTH@ 86
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 4128 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("Unknown")] @AT@ 4128 @LENGTH@ 85
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 4194 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 4208 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2353 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2353 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2361 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2374 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2374 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2374 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2391 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2407 @LENGTH@ 21


UPD ReturnStatement@@ClassInstanceCreation:new ObjectTypeAttributeDefinition(name,xmlName,suffix,valueTypes,allowNull,validator,corrector,alternatives,requires,attributeMarshaller,resourceOnly,flags) @TO@ ClassInstanceCreation:new ObjectTypeAttributeDefinition(name,xmlName,suffix,valueTypes,allowNull,validator,corrector,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags) @AT@ 11599 @LENGTH@ 173
---UPD ClassInstanceCreation@@ObjectTypeAttributeDefinition[name, xmlName, suffix, valueTypes, allowNull, validator, corrector, alternatives, requires, attributeMarshaller, resourceOnly, flags] @TO@ ObjectTypeAttributeDefinition[name, xmlName, suffix, valueTypes, allowNull, validator, corrector, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags] @AT@ 11606 @LENGTH@ 165
------INS SimpleName@@deprecated @TO@ ClassInstanceCreation@@ObjectTypeAttributeDefinition[name, xmlName, suffix, valueTypes, allowNull, validator, corrector, alternatives, requires, attributeMarshaller, resourceOnly, flags] @AT@ 11894 @LENGTH@ 10


INS MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 21099 @LENGTH@ 656
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21106 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21113 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 21118 @LENGTH@ 6
---INS SimpleName@@MethodName:getDeployments @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21126 @LENGTH@ 14
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21141 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21163 @LENGTH@ 6
---INS SingleVariableDeclaration@@String serverGroup @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21171 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 6
------INS SimpleName@@serverGroup @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21178 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21202 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21208 @LENGTH@ 9
------INS VariableDeclarationFragment@@request=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21218 @LENGTH@ 25
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 7
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21228 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21232 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21253 @LENGTH@ 41
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 9
------INS VariableDeclarationFragment@@address=request.get(ADDRESS) @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21263 @LENGTH@ 30
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 7
---------INS MethodInvocation@@request.get(ADDRESS) @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[ADDRESS] @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21281 @LENGTH@ 12
---------------INS SimpleName@@ADDRESS @TO@ SimpleName@@MethodName:get:[ADDRESS] @AT@ 21285 @LENGTH@ 7
---INS IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21303 @LENGTH@ 87
------INS InfixExpression@@serverGroup != null @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21306 @LENGTH@ 19
---------INS SimpleName@@serverGroup @TO@ InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@serverGroup != null @AT@ 21317 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serverGroup != null @AT@ 21321 @LENGTH@ 4
------INS Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------INS ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @TO@ Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21341 @LENGTH@ 39
------------INS MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @TO@ ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 7
---------------INS SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21349 @LENGTH@ 30
------------------INS SimpleName@@SERVER_GROUP @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21353 @LENGTH@ 12
------------------INS SimpleName@@serverGroup @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21367 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21399 @LENGTH@ 48
------INS MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:get:[OPERATION] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 22
------------INS SimpleName@@OPERATION @TO@ MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21411 @LENGTH@ 9
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21422 @LENGTH@ 24
------------INS SimpleName@@READ_CHILDREN_NAMES @TO@ SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21426 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21456 @LENGTH@ 40
------INS MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:get:[CHILD_TYPE] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 23
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21468 @LENGTH@ 10
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[DEPLOYMENT] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21480 @LENGTH@ 15
------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21484 @LENGTH@ 10
---INS TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21505 @LENGTH@ 203
------INS VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21523 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21529 @LENGTH@ 9
---------INS VariableDeclarationFragment@@outcome=client.execute(request) @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21539 @LENGTH@ 33
------------INS SimpleName@@outcome @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 7
------------INS MethodInvocation@@client.execute(request) @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 6
---------------INS SimpleName@@MethodName:execute:[request] @TO@ MethodInvocation@@client.execute(request) @AT@ 21556 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:execute:[request] @AT@ 21564 @LENGTH@ 7
------INS IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21586 @LENGTH@ 80
---------INS MethodInvocation@@isSuccess(outcome) @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21590 @LENGTH@ 18
------------INS SimpleName@@MethodName:isSuccess:[outcome] @TO@ MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
---------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21600 @LENGTH@ 7
---------INS Block@@ThenBody:{  return getList(outcome);} @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------INS ReturnStatement@@MethodInvocation:getList(outcome) @TO@ Block@@ThenBody:{  return getList(outcome);} @AT@ 21628 @LENGTH@ 24
---------------INS MethodInvocation@@getList(outcome) @TO@ ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getList:[outcome] @TO@ MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
---------------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:getList:[outcome] @AT@ 21643 @LENGTH@ 7
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 21684 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 21694 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21718 @LENGTH@ 31
------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21737 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)) @TO@ MethodInvocation:mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)) @AT@ 1252 @LENGTH@ 290
---UPD MethodInvocation@@mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)) @TO@ mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)) @AT@ 1252 @LENGTH@ 289
------UPD SimpleName@@MethodName:andRespond:[withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)] @TO@ MethodName:andRespond:[withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)] @AT@ 1440 @LENGTH@ 101
---------UPD MethodInvocation@@withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON) @TO@ withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON) @AT@ 1451 @LENGTH@ 89
------------UPD SimpleName@@MethodName:withSuccess:[new FileSystemResource("/Users/habuma/foo.json"), MediaType.APPLICATION_JSON] @TO@ MethodName:withSuccess:[jsonResource("testdata/comments"), MediaType.APPLICATION_JSON] @AT@ 1451 @LENGTH@ 89
---------------DEL ClassInstanceCreation@@FileSystemResource["/Users/habuma/foo.json"] @AT@ 1463 @LENGTH@ 48
------------------DEL New@@new @AT@ 1463 @LENGTH@ 3
------------------DEL SimpleType@@FileSystemResource @AT@ 1467 @LENGTH@ 18
------------------DEL StringLiteral@@"/Users/habuma/foo.json" @AT@ 1486 @LENGTH@ 24
---------------INS MethodInvocation@@jsonResource("testdata/comments") @TO@ SimpleName@@MethodName:withSuccess:[new FileSystemResource("/Users/habuma/foo.json"), MediaType.APPLICATION_JSON] @AT@ 1524 @LENGTH@ 33
------------------INS SimpleName@@MethodName:jsonResource:["testdata/comments"] @TO@ MethodInvocation@@jsonResource("testdata/comments") @AT@ 1524 @LENGTH@ 33
---------------------INS StringLiteral@@"testdata/comments" @TO@ SimpleName@@MethodName:jsonResource:["testdata/comments"] @AT@ 1537 @LENGTH@ 19
------------------INS SimpleName@@MethodName:jsonResource:["testdata/comments"] @TO@ MethodInvocation@@jsonResource("testdata/comments") @AT@ 1524 @LENGTH@ 33
---------------------INS StringLiteral@@"testdata/comments" @TO@ SimpleName@@MethodName:jsonResource:["testdata/comments"] @AT@ 1537 @LENGTH@ 19


INS ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ MethodDeclaration@@private, static, String, MethodName:doCreateURL, Exchange exchange, AhcEndpoint endpoint,  @AT@ 6240 @LENGTH@ 45
---INS Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 6240 @LENGTH@ 44
------INS SimpleName@@uri @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 6240 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 6243 @LENGTH@ 1
------INS MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 6246 @LENGTH@ 38
---------INS SimpleName@@Name:UnsafeUriCharactersEncoder @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 6246 @LENGTH@ 26
---------INS SimpleName@@MethodName:encode:[uri] @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 6273 @LENGTH@ 11
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:encode:[uri] @AT@ 6280 @LENGTH@ 3


INS MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @TO@ TypeDeclaration@@[public, abstract]AbstractRedisCollection, AbstractCollection<E>[RedisCollection<E>] @AT@ 3256 @LENGTH@ 180
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @AT@ 3256 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @AT@ 3266 @LENGTH@ 4
---INS SimpleName@@MethodName:checkResult @TO@ MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @AT@ 3271 @LENGTH@ 11
---INS SingleVariableDeclaration@@Object obj @TO@ MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @AT@ 3283 @LENGTH@ 10
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object obj @AT@ 3283 @LENGTH@ 6
------INS SimpleName@@obj @TO@ SingleVariableDeclaration@@Object obj @AT@ 3290 @LENGTH@ 3
---INS IfStatement@@if (obj == null) {  throw new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode");} @TO@ MethodDeclaration@@protected, void, MethodName:checkResult, Object obj,  @AT@ 3299 @LENGTH@ 134
------INS InfixExpression@@obj == null @TO@ IfStatement@@if (obj == null) {  throw new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode");} @AT@ 3303 @LENGTH@ 11
---------INS SimpleName@@obj @TO@ InfixExpression@@obj == null @AT@ 3303 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@obj == null @AT@ 3306 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@obj == null @AT@ 3310 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode");} @TO@ IfStatement@@if (obj == null) {  throw new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode");} @AT@ 3316 @LENGTH@ 117
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode") @TO@ Block@@ThenBody:{  throw new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode");} @AT@ 3321 @LENGTH@ 108
------------INS ClassInstanceCreation@@IllegalStateException["Cannot read collection with Redis connection in pipeline/multi-exec mode"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot read collection with Redis connection in pipeline/multi-exec mode") @AT@ 3327 @LENGTH@ 101
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException["Cannot read collection with Redis connection in pipeline/multi-exec mode"] @AT@ 3327 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException["Cannot read collection with Redis connection in pipeline/multi-exec mode"] @AT@ 3331 @LENGTH@ 21
---------------INS StringLiteral@@"Cannot read collection with Redis connection in pipeline/multi-exec mode" @TO@ ClassInstanceCreation@@IllegalStateException["Cannot read collection with Redis connection in pipeline/multi-exec mode"] @AT@ 3353 @LENGTH@ 74


UPD ReturnStatement@@ConditionalExpression:(scope != null) ? new TypedValue(scope.get(name)) : null @TO@ ClassInstanceCreation:new TypedValue(scope == null ? null : scope.get(name)) @AT@ 1708 @LENGTH@ 64
---DEL ConditionalExpression@@(scope != null) ? new TypedValue(scope.get(name)) : null @AT@ 1715 @LENGTH@ 56
------DEL ParenthesizedExpression@@(scope != null) @AT@ 1715 @LENGTH@ 15
---------DEL InfixExpression@@scope != null @AT@ 1716 @LENGTH@ 13
------DEL ClassInstanceCreation@@TypedValue[scope.get(name)] @AT@ 1733 @LENGTH@ 31
---------DEL New@@new @AT@ 1733 @LENGTH@ 3
---------DEL SimpleType@@TypedValue @AT@ 1737 @LENGTH@ 10
---INS ClassInstanceCreation@@TypedValue[scope == null ? null : scope.get(name)] @TO@ ReturnStatement@@ConditionalExpression:(scope != null) ? new TypedValue(scope.get(name)) : null @AT@ 1715 @LENGTH@ 54
------INS New@@new @TO@ ClassInstanceCreation@@TypedValue[scope == null ? null : scope.get(name)] @AT@ 1715 @LENGTH@ 3
------INS SimpleType@@TypedValue @TO@ ClassInstanceCreation@@TypedValue[scope == null ? null : scope.get(name)] @AT@ 1719 @LENGTH@ 10
------INS ConditionalExpression@@scope == null ? null : scope.get(name) @TO@ ClassInstanceCreation@@TypedValue[scope == null ? null : scope.get(name)] @AT@ 1730 @LENGTH@ 38
---------INS InfixExpression@@scope == null @TO@ ConditionalExpression@@scope == null ? null : scope.get(name) @AT@ 1730 @LENGTH@ 13
------------MOV SimpleName@@scope @TO@ InfixExpression@@scope == null @AT@ 1716 @LENGTH@ 5
------------MOV Operator@@!= @TO@ InfixExpression@@scope == null @AT@ 1721 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@scope == null @AT@ 1725 @LENGTH@ 4
---------MOV MethodInvocation@@scope.get(name) @TO@ ConditionalExpression@@scope == null ? null : scope.get(name) @AT@ 1748 @LENGTH@ 15
---------MOV NullLiteral@@null @TO@ ConditionalExpression@@scope == null ? null : scope.get(name) @AT@ 1767 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, SimpleOperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build()] @TO@ public, static, final, SimpleOperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build()] @AT@ 3268 @LENGTH@ 308
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build() @AT@ 3314 @LENGTH@ 261
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build() @TO@ new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build() @AT@ 3327 @LENGTH@ 248
---------DEL MethodInvocation@@MethodName:setReplyValueType:[ModelType.OBJECT] @AT@ 3327 @LENGTH@ 227
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 3537 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 3537 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 3547 @LENGTH@ 6
---------DEL MethodInvocation@@MethodName:setReplyType:[ModelType.OBJECT] @AT@ 3327 @LENGTH@ 178
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 3488 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 3488 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 3498 @LENGTH@ 6


UPD CatchClause@@catch (IOException e) {} @TO@ catch (IOException e) {  download.setException(e);} @AT@ 3744 @LENGTH@ 111
---INS ExpressionStatement@@MethodInvocation:download.setException(e) @TO@ CatchClause@@catch (IOException e) {} @AT@ 3814 @LENGTH@ 25
------INS MethodInvocation@@download.setException(e) @TO@ ExpressionStatement@@MethodInvocation:download.setException(e) @AT@ 3814 @LENGTH@ 24
---------INS SimpleName@@Name:download @TO@ MethodInvocation@@download.setException(e) @AT@ 3814 @LENGTH@ 8
---------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@download.setException(e) @AT@ 3823 @LENGTH@ 15
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 3836 @LENGTH@ 1


UPD VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Dictionary<String,String> props=new Hashtable<String,String>(); @AT@ 2495 @LENGTH@ 36
---DEL SimpleType@@Properties @AT@ 2495 @LENGTH@ 10
---UPD VariableDeclarationFragment@@props=new Properties() @TO@ props=new Hashtable<String,String>() @AT@ 2506 @LENGTH@ 24
------UPD ClassInstanceCreation@@Properties[] @TO@ Hashtable<String,String>[] @AT@ 2514 @LENGTH@ 16
---------DEL SimpleType@@Properties @AT@ 2518 @LENGTH@ 10
---------INS ParameterizedType@@Hashtable<String,String> @TO@ ClassInstanceCreation@@Properties[] @AT@ 2565 @LENGTH@ 25
------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 2565 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 2575 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 2583 @LENGTH@ 6
---INS ParameterizedType@@Dictionary<String,String> @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 2526 @LENGTH@ 26
------INS SimpleType@@Dictionary @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 2526 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 2537 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 2545 @LENGTH@ 6


UPD IfStatement@@if (attrMeta.isCollectionLike()) {  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} else if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ if (attrMeta.isCollectionLike()) {  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    }    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} else if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    }    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11052 @LENGTH@ 2898
---UPD Block@@ThenBody:{  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} @TO@ ThenBody:{  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    }    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} @AT@ 11084 @LENGTH@ 776
------UPD IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  jp.nextToken();  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");} @TO@ if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  }  val=c;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");} @AT@ 11276 @LENGTH@ 570
---------UPD Block@@ThenBody:{  jp.nextToken();  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} @TO@ ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  }  val=c;} @AT@ 11328 @LENGTH@ 302
------------INS WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @TO@ Block@@ThenBody:{  jp.nextToken();  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} @AT@ 11334 @LENGTH@ 175
---------------INS Block@@WhileBody:{  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @AT@ 11387 @LENGTH@ 122
------------------MOV VariableDeclarationStatement@@Object cval=jp.readValueAs(attrMeta.elementType()); @TO@ Block@@WhileBody:{  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @AT@ 11431 @LENGTH@ 53
------------------MOV ExpressionStatement@@MethodInvocation:c.add(cval) @TO@ Block@@WhileBody:{  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @AT@ 11503 @LENGTH@ 12
---------------MOV InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} @AT@ 11540 @LENGTH@ 45
------------DEL ExpressionStatement@@MethodInvocation:jp.nextToken() @AT@ 11376 @LENGTH@ 15
---------------DEL MethodInvocation@@jp.nextToken() @AT@ 11376 @LENGTH@ 14
------------------DEL SimpleName@@Name:jp @AT@ 11376 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:nextToken:[] @AT@ 11379 @LENGTH@ 11
------------DEL DoStatement@@do {  Object cval=jp.readValueAs(attrMeta.elementType());  c.add(cval);} while ((tok=jp.nextToken()) != JsonToken.END_ARRAY); @AT@ 11408 @LENGTH@ 179
---UPD Block@@ElseBody:if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ ElseBody:if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    }    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11866 @LENGTH@ 2084
------UPD IfStatement@@if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    }    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11866 @LENGTH@ 2084
---------UPD Block@@ThenBody:{  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} @TO@ ThenBody:{  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    }    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} @AT@ 11891 @LENGTH@ 752
------------UPD IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");} @TO@ if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  }  val=s;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");} @AT@ 12066 @LENGTH@ 563
---------------UPD Block@@ThenBody:{  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @TO@ ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  }  val=s;} @AT@ 12118 @LENGTH@ 302
------------------INS WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @TO@ Block@@ThenBody:{  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @AT@ 12046 @LENGTH@ 175
---------------------INS Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12099 @LENGTH@ 122
------------------------MOV VariableDeclarationStatement@@Object sval=jp.readValueAs(attrMeta.elementType()); @TO@ Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12221 @LENGTH@ 53
------------------------MOV ExpressionStatement@@MethodInvocation:s.add(sval) @TO@ Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12293 @LENGTH@ 12
---------------------MOV InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12330 @LENGTH@ 45
------------------INS WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @TO@ Block@@ThenBody:{  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @AT@ 12046 @LENGTH@ 175
---------------------INS Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12099 @LENGTH@ 122
------------------------MOV VariableDeclarationStatement@@Object sval=jp.readValueAs(attrMeta.elementType()); @TO@ Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12221 @LENGTH@ 53
------------------------MOV ExpressionStatement@@MethodInvocation:s.add(sval) @TO@ Block@@WhileBody:{  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12293 @LENGTH@ 12
---------------------MOV InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} @AT@ 12330 @LENGTH@ 45
------------------DEL ExpressionStatement@@MethodInvocation:jp.nextToken() @AT@ 12166 @LENGTH@ 15
---------------------DEL MethodInvocation@@jp.nextToken() @AT@ 12166 @LENGTH@ 14
------------------------DEL SimpleName@@Name:jp @AT@ 12166 @LENGTH@ 2
------------------------DEL SimpleName@@MethodName:nextToken:[] @AT@ 12169 @LENGTH@ 11
------------------DEL DoStatement@@do {  Object sval=jp.readValueAs(attrMeta.elementType());  s.add(sval);} while ((tok=jp.nextToken()) != JsonToken.END_ARRAY); @AT@ 12198 @LENGTH@ 179


UPD IfStatement@@if (fieldType.equals(CALENDAR)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR);  final String calendarString="new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH)";  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {    initializer=calendarString + " - 1)";  } else   if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {    initializer=calendarString + " + 1)";  } else {    initializer="Calendar.getInstance()";  }} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ if (fieldType.equals(CALENDAR)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR);  final String calendarString="new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH)";  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {    initializer=calendarString + " - 1)";  } else   if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {    initializer=calendarString + " + 1)";  } else {    initializer="Calendar.getInstance()";  }} else if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 33683 @LENGTH@ 12557
---INS Block@@ElseBody:if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ IfStatement@@if (fieldType.equals(CALENDAR)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR);  final String calendarString="new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH)";  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),PAST) != null) {    initializer=calendarString + " - 1)";  } else   if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),FUTURE) != null) {    initializer=calendarString + " + 1)";  } else {    initializer="Calendar.getInstance()";  }} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34595 @LENGTH@ 12305
------INS IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ Block@@ElseBody:if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34595 @LENGTH@ 12305
---------MOV Block@@ElseBody:if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34528 @LENGTH@ 11712
---------INS MethodInvocation@@fieldType.equals(TIMESTAMP) @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34599 @LENGTH@ 27
------------INS SimpleName@@Name:fieldType @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 34599 @LENGTH@ 9
------------INS SimpleName@@MethodName:equals:[TIMESTAMP] @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 34609 @LENGTH@ 17
---------------INS SimpleName@@TIMESTAMP @TO@ SimpleName@@MethodName:equals:[TIMESTAMP] @AT@ 34616 @LENGTH@ 9
---------INS Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34628 @LENGTH@ 546
------------INS ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @TO@ Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @AT@ 34642 @LENGTH@ 112
---------------INS MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @TO@ ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 111
------------------INS MethodInvocation@@MethodName:getImportRegistrationResolver:[] @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 39
------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 7
------------------INS SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34682 @LENGTH@ 71
---------------------INS SimpleName@@CALENDAR @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34693 @LENGTH@ 8
---------------------INS SimpleName@@GREGORIAN_CALENDAR @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34723 @LENGTH@ 18
---------------------INS SimpleName@@TIMESTAMP @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34743 @LENGTH@ 9
------------INS ExpressionStatement@@Assignment:initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @AT@ 34767 @LENGTH@ 397
---------------INS Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ ExpressionStatement@@Assignment:initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34767 @LENGTH@ 396
------------------INS SimpleName@@initializer @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34767 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34778 @LENGTH@ 1
------------------INS StringLiteral@@"new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34781 @LENGTH@ 382
------INS IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ Block@@ElseBody:if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34595 @LENGTH@ 12305
---------MOV Block@@ElseBody:if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34528 @LENGTH@ 11712
---------INS MethodInvocation@@fieldType.equals(TIMESTAMP) @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34599 @LENGTH@ 27
------------INS SimpleName@@Name:fieldType @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 34599 @LENGTH@ 9
------------INS SimpleName@@MethodName:equals:[TIMESTAMP] @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 34609 @LENGTH@ 17
---------------INS SimpleName@@TIMESTAMP @TO@ SimpleName@@MethodName:equals:[TIMESTAMP] @AT@ 34616 @LENGTH@ 9
---------INS Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @TO@ IfStatement@@if (fieldType.equals(TIMESTAMP)) {  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} else if (fieldType.equals(STRING)) {  if (fieldInitializer != null && fieldInitializer.contains("\"")) {    final int offset=fieldInitializer.indexOf("\"");    initializer=fieldInitializer.substring(offset + 1,fieldInitializer.lastIndexOf("\""));  } else {    initializer=fieldName;  }  if (MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),VALIDATOR_CONSTRAINTS_EMAIL) != null || fieldName.toLowerCase().contains("email")) {    initializer="\"foo\" + " + INDEX_VAR + " + \"@bar.com\"";  } else {    int maxLength=Integer.MAX_VALUE;    final AnnotationMetadata sizeAnnotation=MemberFindingUtils.getAnnotationOfType(field.getAnnotations(),SIZE);    if (sizeAnnotation != null) {      final AnnotationAttributeValue<?> maxValue=sizeAnnotation.getAttribute(MAX_SYMBOL);      if (maxValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","max",maxValue.getValue());        maxLength=((Integer)maxValue.getValue()).intValue();      }      final AnnotationAttributeValue<?> minValue=sizeAnnotation.getAttribute(MIN_SYMBOL);      if (minValue != null) {        validateNumericAnnotationAttribute(fieldName,"@Size","min",minValue.getValue());        final int minLength=((Integer)minValue.getValue()).intValue();        Validate.isTrue(maxLength >= minLength,"@Size attribute 'max' must be greater than 'min' for field '" + fieldName + "' in "+ entity.getFullyQualifiedTypeName());        if (initializer.length() + 2 < minLength) {          initializer=String.format("%1$-" + (minLength - 2) + "s",initializer).replace(' ','x');        }      }    } else {      if (field.getCustomData().keySet().contains(CustomDataKeys.COLUMN_FIELD)) {        @SuppressWarnings("unchecked") final Map<String,Object> columnValues=(Map<String,Object>)field.getCustomData().get(CustomDataKeys.COLUMN_FIELD);        if (columnValues.keySet().contains("length")) {          final Object lengthValue=columnValues.get("length");          validateNumericAnnotationAttribute(fieldName,"@Column","length",lengthValue);          maxLength=((Integer)lengthValue).intValue();        }      }    }switch (maxLength) {case 0:      initializer="\"\"";    break;case 1:  initializer="String.valueOf(" + INDEX_VAR + ")";break;case 2:initializer="\"" + initializer.charAt(0) + "\" + "+ INDEX_VAR;break;default :if (initializer.length() + 2 > maxLength) {initializer="\"" + initializer.substring(0,maxLength - 2) + "_\" + "+ INDEX_VAR;} else {initializer="\"" + initializer + "_\" + "+ INDEX_VAR;}}}} else if (fieldType.equals(new JavaType(STRING.getFullyQualifiedTypeName(),1,DataType.TYPE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ \"Y\", \"N\" }");} else if (fieldType.equals(JavaType.BOOLEAN_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"Boolean.TRUE");} else if (fieldType.equals(JavaType.BOOLEAN_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"true");} else if (fieldType.equals(JavaType.INT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ")");} else if (fieldType.equals(JavaType.INT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,INDEX_VAR);} else if (fieldType.equals(new JavaType(JavaType.INT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ " + INDEX_VAR + ", "+ INDEX_VAR+ " }");} else if (fieldType.equals(JavaType.DOUBLE_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(JavaType.DOUBLE_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").doubleValue()");} else if (fieldType.equals(new JavaType(JavaType.DOUBLE_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").doubleValue(), new Integer("+ INDEX_VAR+ ").doubleValue() }");} else if (fieldType.equals(JavaType.FLOAT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(JavaType.FLOAT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").floatValue()");} else if (fieldType.equals(new JavaType(JavaType.FLOAT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").floatValue(), new Integer("+ INDEX_VAR+ ").floatValue() }");} else if (fieldType.equals(JavaType.LONG_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(JavaType.LONG_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").longValue()");} else if (fieldType.equals(new JavaType(JavaType.LONG_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").longValue(), new Integer("+ INDEX_VAR+ ").longValue() }");} else if (fieldType.equals(JavaType.SHORT_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(JavaType.SHORT_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Integer(" + INDEX_VAR + ").shortValue()");} else if (fieldType.equals(new JavaType(JavaType.SHORT_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ new Integer(" + INDEX_VAR + ").shortValue(), new Integer("+ INDEX_VAR+ ").shortValue() }");} else if (fieldType.equals(JavaType.CHAR_OBJECT)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"new Character('N')");} else if (fieldType.equals(JavaType.CHAR_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"'N'");} else if (fieldType.equals(new JavaType(JavaType.CHAR_OBJECT.getFullyQualifiedTypeName(),1,DataType.PRIMITIVE,null,null))) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"{ 'Y', 'N' }");} else if (fieldType.equals(BIG_DECIMAL)) {builder.getImportRegistrationResolver().addImport(BIG_DECIMAL);initializer=BIG_DECIMAL.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(BIG_INTEGER)) {builder.getImportRegistrationResolver().addImport(BIG_INTEGER);initializer=BIG_INTEGER.getSimpleTypeName() + ".valueOf(" + INDEX_VAR+ ")";} else if (fieldType.equals(JavaType.BYTE_OBJECT)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ")";} else if (fieldType.equals(JavaType.BYTE_PRIMITIVE)) {initializer="new Byte(" + StringUtils.defaultIfEmpty(fieldInitializer,"\"1\"") + ").byteValue()";} else if (fieldType.equals(JavaType.BYTE_ARRAY_PRIMITIVE)) {initializer=StringUtils.defaultIfEmpty(fieldInitializer,"String.valueOf(" + INDEX_VAR + ").getBytes()");} else if (fieldType.equals(entity)) {initializer=OBJ_VAR;} else if (fieldCustomDataKeys.contains(CustomDataKeys.ENUMERATED_FIELD)) {builder.getImportRegistrationResolver().addImport(fieldType);initializer=fieldType.getSimpleTypeName() + ".class.getEnumConstants()[0]";} else if (collaboratingMetadata != null && collaboratingMetadata.getEntityType() != null) {requiredDataOnDemandCollaborators.add(fieldType);initializer=getFieldInitializerForRelatedEntity(field,collaboratingMetadata,fieldCustomDataKeys);} @AT@ 34628 @LENGTH@ 546
------------INS ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @TO@ Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @AT@ 34642 @LENGTH@ 112
---------------INS MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @TO@ ExpressionStatement@@MethodInvocation:builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 111
------------------INS MethodInvocation@@MethodName:getImportRegistrationResolver:[] @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 39
------------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34642 @LENGTH@ 7
------------------INS SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @TO@ MethodInvocation@@builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP) @AT@ 34682 @LENGTH@ 71
---------------------INS SimpleName@@CALENDAR @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34693 @LENGTH@ 8
---------------------INS SimpleName@@GREGORIAN_CALENDAR @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34723 @LENGTH@ 18
---------------------INS SimpleName@@TIMESTAMP @TO@ SimpleName@@MethodName:addImports:[CALENDAR, GREGORIAN_CALENDAR, TIMESTAMP] @AT@ 34743 @LENGTH@ 9
------------INS ExpressionStatement@@Assignment:initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ Block@@ThenBody:{  builder.getImportRegistrationResolver().addImports(CALENDAR,GREGORIAN_CALENDAR,TIMESTAMP);  initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())";} @AT@ 34767 @LENGTH@ 397
---------------INS Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ ExpressionStatement@@Assignment:initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34767 @LENGTH@ 396
------------------INS SimpleName@@initializer @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34767 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34778 @LENGTH@ 1
------------------INS StringLiteral@@"new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @TO@ Assignment@@initializer="new Timestamp(new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime().getTime())" @AT@ 34781 @LENGTH@ 382


UPD VariableDeclarationStatement@@ModelTestModelControllerService svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()); @TO@ ModelTestModelControllerService svc=TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()); @AT@ 4399 @LENGTH@ 218
---UPD VariableDeclarationFragment@@svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @TO@ svc=TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4431 @LENGTH@ 185
------INS MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @TO@ VariableDeclarationFragment@@svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4437 @LENGTH@ 182
---------INS SimpleName@@Name:TestModelControllerService @TO@ MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4437 @LENGTH@ 26
---------INS SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @TO@ MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4464 @LENGTH@ 155
------------INS SimpleName@@mainExtension @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4471 @LENGTH@ 13
------------INS SimpleName@@controllerInitializer @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4486 @LENGTH@ 21
------------INS SimpleName@@additionalInit @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4509 @LENGTH@ 14
------------INS SimpleName@@controllerExtensionRegistry @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4525 @LENGTH@ 27
------------INS SimpleName@@persister @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4570 @LENGTH@ 9
------------INS MethodInvocation@@additionalInit.isValidateOperations() @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4581 @LENGTH@ 37
---------------MOV SimpleName@@Name:additionalInit @TO@ MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4578 @LENGTH@ 14
---------------MOV SimpleName@@MethodName:isValidateOperations:[] @TO@ MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4593 @LENGTH@ 22
------DEL ClassInstanceCreation@@TestModelControllerService[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4437 @LENGTH@ 179
---------DEL New@@new @AT@ 4437 @LENGTH@ 3
---------DEL SimpleType@@TestModelControllerService @AT@ 4441 @LENGTH@ 26
---------DEL SimpleName@@mainExtension @AT@ 4468 @LENGTH@ 13
---------DEL SimpleName@@controllerInitializer @AT@ 4483 @LENGTH@ 21
---------DEL SimpleName@@additionalInit @AT@ 4506 @LENGTH@ 14
---------DEL SimpleName@@controllerExtensionRegistry @AT@ 4522 @LENGTH@ 27
---------DEL SimpleName@@persister @AT@ 4567 @LENGTH@ 9
---------DEL MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4578 @LENGTH@ 37


UPD IfStatement@@if (delegate instanceof MessageListener) {  ((MessageListener)delegate).onMessage(message,pattern);} @TO@ if (delegate instanceof MessageListener) {  ((MessageListener)delegate).onMessage(message,pattern);  return;} @AT@ 10221 @LENGTH@ 111
---UPD Block@@ThenBody:{  ((MessageListener)delegate).onMessage(message,pattern);} @TO@ ThenBody:{  ((MessageListener)delegate).onMessage(message,pattern);  return;} @AT@ 10262 @LENGTH@ 70
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  ((MessageListener)delegate).onMessage(message,pattern);} @AT@ 10332 @LENGTH@ 7


UPD FieldDeclaration@@private, int, [starts=0] @TO@ private, int, [starts] @AT@ 1203 @LENGTH@ 23
---UPD VariableDeclarationFragment@@starts=0 @TO@ starts @AT@ 1215 @LENGTH@ 10
------DEL NumberLiteral@@0 @AT@ 1224 @LENGTH@ 1


UPD Block@@ThenBody:{  newUser=userProps.keySet().iterator().next();  newUserPassword=userProps.get(newUser);  if (newUserPassword.contains(ROLE_DELIMITER)) {    newUserPassword=newUserPassword.substring(0,newUserPassword.indexOf(ROLE_DELIMITER));  }} @TO@ ThenBody:{  newUser=(String)userProps.keySet().iterator().next();  newUserPassword=(String)userProps.get(newUser);  if (newUserPassword.contains(ROLE_DELIMITER)) {    newUserPassword=newUserPassword.substring(0,newUserPassword.indexOf(ROLE_DELIMITER));  }} @AT@ 6513 @LENGTH@ 304
---UPD ExpressionStatement@@Assignment:newUser=userProps.keySet().iterator().next() @TO@ Assignment:newUser=(String)userProps.keySet().iterator().next() @AT@ 6527 @LENGTH@ 47
------UPD Assignment@@newUser=userProps.keySet().iterator().next() @TO@ newUser=(String)userProps.keySet().iterator().next() @AT@ 6527 @LENGTH@ 46
---------DEL MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 36
---------INS CastExpression@@(String)userProps.keySet().iterator().next() @TO@ Assignment@@newUser=userProps.keySet().iterator().next() @AT@ 6538 @LENGTH@ 45
------------INS SimpleType@@String @TO@ CastExpression@@(String)userProps.keySet().iterator().next() @AT@ 6539 @LENGTH@ 6
------------INS MethodInvocation@@userProps.keySet().iterator().next() @TO@ CastExpression@@(String)userProps.keySet().iterator().next() @AT@ 6547 @LENGTH@ 36
---------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 29
---------------MOV MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 29
---------------MOV MethodInvocation@@MethodName:keySet:[] @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 18
---------------MOV MethodInvocation@@MethodName:keySet:[] @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 18
---------------MOV SimpleName@@Name:userProps @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 9
---------------MOV SimpleName@@Name:userProps @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6537 @LENGTH@ 9
---------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@userProps.keySet().iterator().next() @AT@ 6567 @LENGTH@ 6
---UPD ExpressionStatement@@Assignment:newUserPassword=userProps.get(newUser) @TO@ Assignment:newUserPassword=(String)userProps.get(newUser) @AT@ 6587 @LENGTH@ 41
------UPD Assignment@@newUserPassword=userProps.get(newUser) @TO@ newUserPassword=(String)userProps.get(newUser) @AT@ 6587 @LENGTH@ 40
---------INS CastExpression@@(String)userProps.get(newUser) @TO@ Assignment@@newUserPassword=userProps.get(newUser) @AT@ 6615 @LENGTH@ 31
------------MOV MethodInvocation@@userProps.get(newUser) @TO@ CastExpression@@(String)userProps.get(newUser) @AT@ 6605 @LENGTH@ 22
------------MOV MethodInvocation@@userProps.get(newUser) @TO@ CastExpression@@(String)userProps.get(newUser) @AT@ 6605 @LENGTH@ 22
------------INS SimpleType@@String @TO@ CastExpression@@(String)userProps.get(newUser) @AT@ 6616 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[abstract]BaseParsingState, [ParsingState] @AT@ 3115 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3115 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3122 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3130 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3157 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3164 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new SimpleAttributeDefinition(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,validator,validateNull,alternatives,requires,attributeMarshaller,resourceOnly,flags) @TO@ ClassInstanceCreation:new SimpleAttributeDefinition(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,validator,validateNull,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags) @AT@ 4125 @LENGTH@ 235
---UPD ClassInstanceCreation@@SimpleAttributeDefinition[name, xmlName, defaultValue, type, allowNull, allowExpression, measurementUnit, corrector, validator, validateNull, alternatives, requires, attributeMarshaller, resourceOnly, flags] @TO@ SimpleAttributeDefinition[name, xmlName, defaultValue, type, allowNull, allowExpression, measurementUnit, corrector, validator, validateNull, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags] @AT@ 4132 @LENGTH@ 227
------INS SimpleName@@deprecated @TO@ ClassInstanceCreation@@SimpleAttributeDefinition[name, xmlName, defaultValue, type, allowNull, allowExpression, measurementUnit, corrector, validator, validateNull, alternatives, requires, attributeMarshaller, resourceOnly, flags] @AT@ 4352 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(1) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(1) @AT@ 1297 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(1) @TO@ mock.expectedMinimumMessageCount(1) @AT@ 1297 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[1] @TO@ MethodName:expectedMinimumMessageCount:[1] @AT@ 1302 @LENGTH@ 23


UPD MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21099 @LENGTH@ 820
---UPD SimpleName@@MethodName:getDeployments @TO@ MethodName:getMatchingDeployments @AT@ 21126 @LENGTH@ 14


UPD MethodDeclaration@@protected, Dictionary<?,?>, MethodName:getProperties, Exchange exchange,  @TO@ protected, Dictionary<String,?>, MethodName:getProperties, Exchange exchange,  @AT@ 3345 @LENGTH@ 712
---UPD ParameterizedType@@Dictionary<?,?> @TO@ Dictionary<String,?> @AT@ 3355 @LENGTH@ 16
------DEL WildcardType@@? @AT@ 3369 @LENGTH@ 1
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<?,?> @AT@ 3371 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.fail("should reject the expression") @TO@ MethodInvocation:Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @AT@ 4353 @LENGTH@ 44


UPD TypeDeclaration@@[public]JobRunner, [FactoryBean<Object>, InitializingBean, DisposableBean] @TO@ [public]JobRunner, [FactoryBean<Boolean>, InitializingBean, DisposableBean] @AT@ 1556 @LENGTH@ 2534
---UPD ParameterizedType@@FactoryBean<Object> @TO@ FactoryBean<Boolean> @AT@ 1590 @LENGTH@ 19
------UPD SimpleType@@Object @TO@ Boolean @AT@ 1602 @LENGTH@ 6


UPD VariableDeclarationStatement@@StatisticsEndpoint answer=new StatisticsEndpoint(uri,this,createQueue(uri,parameters),consumers); @TO@ StatisticsEndpoint answer=new StatisticsEndpoint(uri,this,getOrCreateQueue(uri,size),consumers); @AT@ 2289 @LENGTH@ 103
---UPD VariableDeclarationFragment@@answer=new StatisticsEndpoint(uri,this,createQueue(uri,parameters),consumers) @TO@ answer=new StatisticsEndpoint(uri,this,getOrCreateQueue(uri,size),consumers) @AT@ 2308 @LENGTH@ 83
------UPD ClassInstanceCreation@@StatisticsEndpoint[uri, this, createQueue(uri,parameters), consumers] @TO@ StatisticsEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @AT@ 2317 @LENGTH@ 74
---------UPD MethodInvocation@@createQueue(uri,parameters) @TO@ getOrCreateQueue(uri,size) @AT@ 2351 @LENGTH@ 28
------------UPD SimpleName@@MethodName:createQueue:[uri, parameters] @TO@ MethodName:getOrCreateQueue:[uri, size] @AT@ 2351 @LENGTH@ 28
---------------UPD SimpleName@@parameters @TO@ size @AT@ 2368 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:setEnterHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
) @TO@ MethodInvocation:setEnterHandler(new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
) @AT@ 1978 @LENGTH@ 609
---UPD MethodInvocation@@setEnterHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
) @TO@ setEnterHandler(new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
) @AT@ 1978 @LENGTH@ 608
------UPD SimpleName@@MethodName:setEnterHandler:[new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
] @TO@ MethodName:setEnterHandler:[new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final String input=ctx.getInput();
    if (input.startsWith("id",ctx.getLocation()) && input.length() > ctx.getLocation() + 2 && (input.charAt(ctx.getLocation() + 2) == '=' || Character.isWhitespace(input.charAt(ctx.getLocation() + 2)))) {
      ctx.enterState(props);
    }
 else {
      ctx.enterState(sgList);
    }
  }
}
] @AT@ 1978 @LENGTH@ 608
---------UPD ClassInstanceCreation@@CharacterHandler[] @TO@ LineBreakHandler[false, false] @AT@ 1994 @LENGTH@ 591
------------UPD SimpleType@@CharacterHandler @TO@ LineBreakHandler @AT@ 1998 @LENGTH@ 16
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2065 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2072 @LENGTH@ 5


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpProducerFileWithPathTest, SftpServerTestSupport @TO@ [public]SftpProducerFileWithPathTest, SftpServerTestSupport @AT@ 1031 @LENGTH@ 861
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1031 @LENGTH@ 79


UPD ExpressionStatement@@MethodInvocation:config.setDirectory(file.getPath()) @TO@ MethodInvocation:config.setDirectory(FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()) @AT@ 2068 @LENGTH@ 36
---UPD MethodInvocation@@config.setDirectory(file.getPath()) @TO@ config.setDirectory(FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()) @AT@ 2068 @LENGTH@ 35
------UPD SimpleName@@MethodName:setDirectory:[file.getPath()] @TO@ MethodName:setDirectory:[FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath()] @AT@ 2075 @LENGTH@ 28
---------DEL MethodInvocation@@file.getPath() @AT@ 2088 @LENGTH@ 14
---------INS ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @TO@ SimpleName@@MethodName:setDirectory:[file.getPath()] @AT@ 2127 @LENGTH@ 67
------------INS MethodInvocation@@FileUtil.isAbsolute(file) @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 2127 @LENGTH@ 25
---------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.isAbsolute(file) @AT@ 2127 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isAbsolute:[file] @TO@ MethodInvocation@@FileUtil.isAbsolute(file) @AT@ 2136 @LENGTH@ 16
------------------INS SimpleName@@file @TO@ SimpleName@@MethodName:isAbsolute:[file] @AT@ 2147 @LENGTH@ 4
------------INS MethodInvocation@@file.getAbsolutePath() @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 2155 @LENGTH@ 22
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 2155 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@file.getAbsolutePath() @AT@ 2160 @LENGTH@ 17
------------INS MethodInvocation@@file.getPath() @TO@ ConditionalExpression@@FileUtil.isAbsolute(file) ? file.getAbsolutePath() : file.getPath() @AT@ 2180 @LENGTH@ 14
---------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.getPath() @AT@ 2088 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@file.getPath() @AT@ 2093 @LENGTH@ 9


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleConsumeRecursiveNotStepwiseTest, SftpSimpleConsumeRecursiveTest @TO@ [public]SftpSimpleConsumeRecursiveNotStepwiseTest, SftpSimpleConsumeRecursiveTest @AT@ 951 @LENGTH@ 655
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 951 @LENGTH@ 79


UPD FieldDeclaration@@public, static, final, int, [PARSE_WELD_WEB_INTEGRATION=0x2B10] @TO@ public, static, final, int, [POST_MODULE_WELD_WEB_INTEGRATION=0x0700] @AT@ 13941 @LENGTH@ 77
---UPD VariableDeclarationFragment@@PARSE_WELD_WEB_INTEGRATION=0x2B10 @TO@ POST_MODULE_WELD_WEB_INTEGRATION=0x0700 @AT@ 13965 @LENGTH@ 52
------UPD SimpleName@@PARSE_WELD_WEB_INTEGRATION @TO@ POST_MODULE_WELD_WEB_INTEGRATION @AT@ 13965 @LENGTH@ 26
------UPD NumberLiteral@@0x2B10 @TO@ 0x0700 @AT@ 14011 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @TO@ MethodDeclaration@@public, void, MethodName:testDualMaster, Exception,  @AT@ 4394 @LENGTH@ 19
---INS MethodInvocation@@Thread.sleep(2000) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 4394 @LENGTH@ 18
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 4394 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[2000] @TO@ MethodInvocation@@Thread.sleep(2000) @AT@ 4401 @LENGTH@ 11
---------INS NumberLiteral@@2000 @TO@ SimpleName@@MethodName:sleep:[2000] @AT@ 4407 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:NAMESPACE_MAP.put("http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd","jboss-common_6_0.xsd") @TO@ Initializer@@Initializer @AT@ 3440 @LENGTH@ 99
---INS MethodInvocation@@NAMESPACE_MAP.put("http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd","jboss-common_6_0.xsd") @TO@ ExpressionStatement@@MethodInvocation:NAMESPACE_MAP.put("http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd","jboss-common_6_0.xsd") @AT@ 3440 @LENGTH@ 98
------INS SimpleName@@Name:NAMESPACE_MAP @TO@ MethodInvocation@@NAMESPACE_MAP.put("http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd","jboss-common_6_0.xsd") @AT@ 3440 @LENGTH@ 13
------INS SimpleName@@MethodName:put:["http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd", "jboss-common_6_0.xsd"] @TO@ MethodInvocation@@NAMESPACE_MAP.put("http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd","jboss-common_6_0.xsd") @AT@ 3454 @LENGTH@ 84
---------INS StringLiteral@@"http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd" @TO@ SimpleName@@MethodName:put:["http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd", "jboss-common_6_0.xsd"] @AT@ 3458 @LENGTH@ 55
---------INS StringLiteral@@"jboss-common_6_0.xsd" @TO@ SimpleName@@MethodName:put:["http://www.jboss.org/j2ee/schema/jboss-common_6_0.xsd", "jboss-common_6_0.xsd"] @AT@ 3515 @LENGTH@ 22


INS MethodDeclaration@@public, String, MethodName:getUrl,  @TO@ TypeDeclaration@@[public, abstract]AbstractDownloadTask, DefaultFuture<DownloadFuture>[DownloadFuture, Runnable] @AT@ 1410 @LENGTH@ 50
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1410 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1417 @LENGTH@ 6
---INS SimpleName@@MethodName:getUrl @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1424 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:url @TO@ MethodDeclaration@@public, String, MethodName:getUrl,  @AT@ 1443 @LENGTH@ 11
------INS SimpleName@@url @TO@ ReturnStatement@@SimpleName:url @AT@ 1450 @LENGTH@ 3


MOV IfStatement@@if (sourceValue.isEmpty()) {  return new HashSet<Object>();} @TO@ MethodDeclaration@@private, Object, MethodName:readCollectionOrArray, TypeInformation<?> targetType, BasicDBList sourceValue, Object parent,  @AT@ 25723 @LENGTH@ 65


UPD SuperConstructorInvocation@@super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,null,false,flags);
 @TO@ super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,null,false,null,flags);
 @AT@ 6489 @LENGTH@ 242
---INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,null,false,flags);
 @AT@ 6724 @LENGTH@ 4


UPD FieldDeclaration@@ConnectorLogger, [DEPLOYMENT_CONNECTOR_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector")] @TO@ ConnectorLogger, [DEPLOYMENT_CONNECTOR_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment")] @AT@ 2182 @LENGTH@ 130
---UPD VariableDeclarationFragment@@DEPLOYMENT_CONNECTOR_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector") @TO@ DEPLOYMENT_CONNECTOR_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment") @AT@ 2198 @LENGTH@ 113
------UPD MethodInvocation@@Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector") @TO@ Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment") @AT@ 2228 @LENGTH@ 83
---------UPD SimpleName@@MethodName:getMessageLogger:[ConnectorLogger.class, "org.jboss.as.deployment.connector"] @TO@ MethodName:getMessageLogger:[ConnectorLogger.class, "org.jboss.as.connector.deployment"] @AT@ 2235 @LENGTH@ 76
------------UPD StringLiteral@@"org.jboss.as.deployment.connector" @TO@ "org.jboss.as.connector.deployment" @AT@ 2275 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 3006 @LENGTH@ 86
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 3006 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("Unknown")] @AT@ 3006 @LENGTH@ 85
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 3072 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 3086 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).to("mock:result") @TO@ MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 751
---UPD MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).to("mock:result") @TO@ from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 750
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).to("mock:result") @AT@ 2216 @LENGTH@ 760
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 2963 @LENGTH@ 12


UPD IfStatement@@if (model.isDefined()) {  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }  if (defaults) {    final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);    final Locale locale=getLocale(context,operation);    final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);    if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {      for (      String key : nodeDescription.get(ATTRIBUTES).keys()) {        if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {          directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));        }      }    }  }} @TO@ if (model.isDefined()) {  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }} @AT@ 11049 @LENGTH@ 1502
---UPD Block@@ThenBody:{  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }  if (defaults) {    final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);    final Locale locale=getLocale(context,operation);    final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);    if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {      for (      String key : nodeDescription.get(ATTRIBUTES).keys()) {        if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {          directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));        }      }    }  }} @TO@ ThenBody:{  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }} @AT@ 11072 @LENGTH@ 1479


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build()] @TO@ public, static, final, AttributeDefinition, [NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build()] @AT@ 6897 @LENGTH@ 240
---UPD VariableDeclarationFragment@@NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build() @TO@ NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build() @AT@ 6937 @LENGTH@ 199
------UPD MethodInvocation@@new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build() @TO@ new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build() @AT@ 6950 @LENGTH@ 186
---------UPD ClassInstanceCreation@@SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()] @TO@ SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()] @AT@ 6950 @LENGTH@ 165
------------UPD MethodInvocation@@new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build() @TO@ new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build() @AT@ 7008 @LENGTH@ 93
---------------UPD ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.NAMESPACES, true] @TO@ PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.NAMESPACES, false] @AT@ 7008 @LENGTH@ 85
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 7088 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:enterState('\\',EscapeCharacterState.INSTANCE) @TO@ MethodInvocation:setIgnoreWhitespaces(true) @AT@ 2703 @LENGTH@ 48
---UPD MethodInvocation@@enterState('\\',EscapeCharacterState.INSTANCE) @TO@ setIgnoreWhitespaces(true) @AT@ 2703 @LENGTH@ 47
------UPD SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @TO@ MethodName:setIgnoreWhitespaces:[true] @AT@ 2703 @LENGTH@ 47
---------DEL CharacterLiteral@@'\\' @AT@ 2714 @LENGTH@ 4
---------DEL QualifiedName@@EscapeCharacterState.INSTANCE @AT@ 2720 @LENGTH@ 29
------------DEL SimpleName@@EscapeCharacterState @AT@ 2720 @LENGTH@ 20
------------DEL SimpleName@@INSTANCE @AT@ 2741 @LENGTH@ 8
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @AT@ 2724 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(PathElement.pathElement(ModelDescriptionConstants.JVM),new StandardResourceDescriptionResolver("jvm",HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions",HostDescriptionProviders.class.getClassLoader(),true,false),new JVMAddHandler(JvmAttributes.getAttributes(server)),JVMRemoveHandler.INSTANCE);
 @TO@ super(PathElement.pathElement(ModelDescriptionConstants.JVM),new StandardResourceDescriptionResolver("jvm",HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostEnvironmentResourceDescription.class.getClassLoader(),true,false),new JVMAddHandler(JvmAttributes.getAttributes(server)),JVMRemoveHandler.INSTANCE);
 @AT@ 2002 @LENGTH@ 381
---UPD ClassInstanceCreation@@StandardResourceDescriptionResolver["jvm", HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions", HostDescriptionProviders.class.getClassLoader(), true, false] @TO@ StandardResourceDescriptionResolver["jvm", HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostEnvironmentResourceDescription.class.getClassLoader(), true, false] @AT@ 2080 @LENGTH@ 186
------UPD InfixExpression@@HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 2127 @LENGTH@ 76
---------UPD MethodInvocation@@HostDescriptionProviders.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 2127 @LENGTH@ 53
------------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2127 @LENGTH@ 30
------UPD MethodInvocation@@HostDescriptionProviders.class.getClassLoader() @TO@ HostEnvironmentResourceDescription.class.getClassLoader() @AT@ 2205 @LENGTH@ 47
---------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2205 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @TO@ MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=30").noAutoStartup().routeId("FromFilePollThirdTimeOkTest").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 800
---UPD MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @TO@ from("file://target/deletefile?delete=true&initialDelay=0&delay=30").noAutoStartup().routeId("FromFilePollThirdTimeOkTest").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 799
------INS MethodInvocation@@MethodName:routeId:["FromFilePollThirdTimeOkTest"] @TO@ MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2275 @LENGTH@ 123
---------INS StringLiteral@@"FromFilePollThirdTimeOkTest" @TO@ MethodInvocation@@MethodName:routeId:["FromFilePollThirdTimeOkTest"] @AT@ 2368 @LENGTH@ 29
------INS MethodInvocation@@MethodName:noAutoStartup:[] @TO@ MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2275 @LENGTH@ 84


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build()] @AT@ 2482 @LENGTH@ 216
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build() @AT@ 2522 @LENGTH@ 175
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build() @AT@ 2535 @LENGTH@ 162
---------UPD MethodInvocation@@MethodName:setReplyParameters:[NAMESPACE] @TO@ MethodName:setParameters:[NAMESPACE] @AT@ 2535 @LENGTH@ 141


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 52
---UPD Assignment@@deploymentNames=Util.getDeployments(client,name) @TO@ deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 51
------UPD MethodInvocation@@Util.getDeployments(client,name) @TO@ Util.getMatchingDeployments(client,name) @AT@ 14073 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getDeployments:[client, name] @TO@ MethodName:getMatchingDeployments:[client, name] @AT@ 14078 @LENGTH@ 28


UPD ExpressionStatement@@Assignment:allGroups=Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ Assignment:allGroups=Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5575 @LENGTH@ 95
---UPD Assignment@@allGroups=Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ allGroups=Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5575 @LENGTH@ 94
------UPD MethodInvocation@@Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5587 @LENGTH@ 82
---------UPD SimpleName@@MethodName:getAllReferencingServerGroups:[deploymentName, ctx.getModelControllerClient()] @TO@ MethodName:getServerGroupsReferencingDeployment:[deploymentName, ctx.getModelControllerClient()] @AT@ 5592 @LENGTH@ 77


DEL MethodDeclaration@@static, ModelNode, MethodName:createAddOperation, final ModelNode address, final ModelNode subModel,  @AT@ 4404 @LENGTH@ 378
---DEL Modifier@@static @AT@ 4404 @LENGTH@ 6
---DEL SimpleType@@ModelNode @AT@ 4411 @LENGTH@ 9
---DEL SimpleName@@MethodName:createAddOperation @AT@ 4421 @LENGTH@ 18
---DEL SingleVariableDeclaration@@final ModelNode address @AT@ 4440 @LENGTH@ 23
------DEL Modifier@@final @AT@ 4440 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 4446 @LENGTH@ 9
------DEL SimpleName@@address @AT@ 4456 @LENGTH@ 7
---DEL SingleVariableDeclaration@@final ModelNode subModel @AT@ 4465 @LENGTH@ 24
------DEL Modifier@@final @AT@ 4465 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 4471 @LENGTH@ 9
------DEL SimpleName@@subModel @AT@ 4481 @LENGTH@ 8
---DEL VariableDeclarationStatement@@final ModelNode operation=new ModelNode(); @AT@ 4501 @LENGTH@ 44
------DEL Modifier@@final @AT@ 4501 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 4507 @LENGTH@ 9
------DEL VariableDeclarationFragment@@operation=new ModelNode() @AT@ 4517 @LENGTH@ 27
---------DEL SimpleName@@operation @AT@ 4517 @LENGTH@ 9
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 4529 @LENGTH@ 15
------------DEL New@@new @AT@ 4529 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 4533 @LENGTH@ 9
---DEL ExpressionStatement@@MethodInvocation:operation.get(OP).set(ADD) @AT@ 4554 @LENGTH@ 27
------DEL MethodInvocation@@operation.get(OP).set(ADD) @AT@ 4554 @LENGTH@ 26
---------DEL MethodInvocation@@MethodName:get:[OP] @AT@ 4554 @LENGTH@ 17
------------DEL SimpleName@@OP @AT@ 4568 @LENGTH@ 2
---------DEL SimpleName@@Name:operation @AT@ 4554 @LENGTH@ 9
---------DEL SimpleName@@MethodName:set:[ADD] @AT@ 4572 @LENGTH@ 8
------------DEL SimpleName@@ADD @AT@ 4576 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:operation.get(OP_ADDR).set(address) @AT@ 4590 @LENGTH@ 36
------DEL MethodInvocation@@operation.get(OP_ADDR).set(address) @AT@ 4590 @LENGTH@ 35
---------DEL MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 4590 @LENGTH@ 22
------------DEL SimpleName@@OP_ADDR @AT@ 4604 @LENGTH@ 7
---------DEL SimpleName@@Name:operation @AT@ 4590 @LENGTH@ 9
---------DEL SimpleName@@MethodName:set:[address] @AT@ 4613 @LENGTH@ 12
------------DEL SimpleName@@address @AT@ 4617 @LENGTH@ 7
---DEL ExpressionStatement@@MethodInvocation:operation.get(RELATIVE_TO).set(subModel.get(RELATIVE_TO)) @AT@ 4635 @LENGTH@ 58
------DEL MethodInvocation@@operation.get(RELATIVE_TO).set(subModel.get(RELATIVE_TO)) @AT@ 4635 @LENGTH@ 57
---------DEL MethodInvocation@@MethodName:get:[RELATIVE_TO] @AT@ 4635 @LENGTH@ 26
------------DEL SimpleName@@RELATIVE_TO @AT@ 4649 @LENGTH@ 11
---------DEL SimpleName@@Name:operation @AT@ 4635 @LENGTH@ 9
---------DEL SimpleName@@MethodName:set:[subModel.get(RELATIVE_TO)] @AT@ 4662 @LENGTH@ 30
------------DEL MethodInvocation@@subModel.get(RELATIVE_TO) @AT@ 4666 @LENGTH@ 25
---------------DEL SimpleName@@Name:subModel @AT@ 4666 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:get:[RELATIVE_TO] @AT@ 4675 @LENGTH@ 16
------------------DEL SimpleName@@RELATIVE_TO @AT@ 4679 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:operation.get(PATH).set(subModel.require(PATH)) @AT@ 4702 @LENGTH@ 48
------DEL MethodInvocation@@operation.get(PATH).set(subModel.require(PATH)) @AT@ 4702 @LENGTH@ 47
---------DEL MethodInvocation@@MethodName:get:[PATH] @AT@ 4702 @LENGTH@ 19
------------DEL SimpleName@@PATH @AT@ 4716 @LENGTH@ 4
---------DEL SimpleName@@Name:operation @AT@ 4702 @LENGTH@ 9
---------DEL SimpleName@@MethodName:set:[subModel.require(PATH)] @AT@ 4722 @LENGTH@ 27
------------DEL MethodInvocation@@subModel.require(PATH) @AT@ 4726 @LENGTH@ 22
---------------DEL SimpleName@@Name:subModel @AT@ 4726 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:require:[PATH] @AT@ 4735 @LENGTH@ 13
------------------DEL SimpleName@@PATH @AT@ 4743 @LENGTH@ 4
---DEL ReturnStatement@@SimpleName:operation @AT@ 4759 @LENGTH@ 17
------DEL SimpleName@@operation @AT@ 4766 @LENGTH@ 9


UPD IfStatement@@if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean()) {  continue;} @TO@ if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false)) {  continue;} @AT@ 14119 @LENGTH@ 111
---UPD InfixExpression@@boottimeOnly && !propResource.get(BOOT_TIME).asBoolean() @TO@ boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14123 @LENGTH@ 56
------UPD PrefixExpression@@!propResource.get(BOOT_TIME).asBoolean() @TO@ !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14139 @LENGTH@ 40
---------UPD MethodInvocation@@propResource.get(BOOT_TIME).asBoolean() @TO@ propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14140 @LENGTH@ 39
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 14168 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 14178 @LENGTH@ 5


INS FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @TO@ TypeDeclaration@@[public, static, final]Component,  @AT@ 2827 @LENGTH@ 60
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @AT@ 2827 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @AT@ 2834 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @AT@ 2841 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @AT@ 2847 @LENGTH@ 3
---INS VariableDeclarationFragment@@USER_COMPONENT_INTERCEPTORS=0xC00 @TO@ FieldDeclaration@@public, static, final, int, [USER_COMPONENT_INTERCEPTORS=0xC00] @AT@ 2851 @LENGTH@ 35
------INS SimpleName@@USER_COMPONENT_INTERCEPTORS @TO@ VariableDeclarationFragment@@USER_COMPONENT_INTERCEPTORS=0xC00 @AT@ 2851 @LENGTH@ 27
------INS NumberLiteral@@0xC00 @TO@ VariableDeclarationFragment@@USER_COMPONENT_INTERCEPTORS=0xC00 @AT@ 2881 @LENGTH@ 5


INS MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 21099 @LENGTH@ 656
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21106 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21113 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 21118 @LENGTH@ 6
---INS SimpleName@@MethodName:getDeployments @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21126 @LENGTH@ 14
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21141 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21163 @LENGTH@ 6
---INS SingleVariableDeclaration@@String serverGroup @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21171 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 6
------INS SimpleName@@serverGroup @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21178 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21202 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21208 @LENGTH@ 9
------INS VariableDeclarationFragment@@request=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21218 @LENGTH@ 25
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 7
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21228 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21232 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21253 @LENGTH@ 41
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 9
------INS VariableDeclarationFragment@@address=request.get(ADDRESS) @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21263 @LENGTH@ 30
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 7
---------INS MethodInvocation@@request.get(ADDRESS) @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[ADDRESS] @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21281 @LENGTH@ 12
---------------INS SimpleName@@ADDRESS @TO@ SimpleName@@MethodName:get:[ADDRESS] @AT@ 21285 @LENGTH@ 7
---INS IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21303 @LENGTH@ 87
------INS InfixExpression@@serverGroup != null @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21306 @LENGTH@ 19
---------INS SimpleName@@serverGroup @TO@ InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@serverGroup != null @AT@ 21317 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serverGroup != null @AT@ 21321 @LENGTH@ 4
------INS Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------INS ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @TO@ Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21341 @LENGTH@ 39
------------INS MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @TO@ ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 7
---------------INS SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21349 @LENGTH@ 30
------------------INS SimpleName@@SERVER_GROUP @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21353 @LENGTH@ 12
------------------INS SimpleName@@serverGroup @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21367 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21399 @LENGTH@ 48
------INS MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:get:[OPERATION] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 22
------------INS SimpleName@@OPERATION @TO@ MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21411 @LENGTH@ 9
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21422 @LENGTH@ 24
------------INS SimpleName@@READ_CHILDREN_NAMES @TO@ SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21426 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21456 @LENGTH@ 40
------INS MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:get:[CHILD_TYPE] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 23
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21468 @LENGTH@ 10
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[DEPLOYMENT] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21480 @LENGTH@ 15
------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21484 @LENGTH@ 10
---INS TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21505 @LENGTH@ 203
------INS VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21523 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21529 @LENGTH@ 9
---------INS VariableDeclarationFragment@@outcome=client.execute(request) @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21539 @LENGTH@ 33
------------INS SimpleName@@outcome @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 7
------------INS MethodInvocation@@client.execute(request) @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 6
---------------INS SimpleName@@MethodName:execute:[request] @TO@ MethodInvocation@@client.execute(request) @AT@ 21556 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:execute:[request] @AT@ 21564 @LENGTH@ 7
------INS IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21586 @LENGTH@ 80
---------INS MethodInvocation@@isSuccess(outcome) @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21590 @LENGTH@ 18
------------INS SimpleName@@MethodName:isSuccess:[outcome] @TO@ MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
---------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21600 @LENGTH@ 7
---------INS Block@@ThenBody:{  return getList(outcome);} @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------INS ReturnStatement@@MethodInvocation:getList(outcome) @TO@ Block@@ThenBody:{  return getList(outcome);} @AT@ 21628 @LENGTH@ 24
---------------INS MethodInvocation@@getList(outcome) @TO@ ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getList:[outcome] @TO@ MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
---------------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:getList:[outcome] @AT@ 21643 @LENGTH@ 7
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 21684 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 21694 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21718 @LENGTH@ 31
------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21737 @LENGTH@ 11


INS MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @TO@ TypeDeclaration@@[static]SubRegistry,  @AT@ 11391 @LENGTH@ 388
---INS SimpleType@@OperationTransformerRegistry @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11362 @LENGTH@ 28
---INS SimpleName@@MethodName:get @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11391 @LENGTH@ 3
---INS SingleVariableDeclaration@@final String value @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11395 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String value @AT@ 11395 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String value @AT@ 11401 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@final String value @AT@ 11408 @LENGTH@ 5
---INS SingleVariableDeclaration@@Iterator<PathElement> iterator @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11415 @LENGTH@ 30
------INS ParameterizedType@@Iterator<PathElement> @TO@ SingleVariableDeclaration@@Iterator<PathElement> iterator @AT@ 11415 @LENGTH@ 21
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<PathElement> @AT@ 11415 @LENGTH@ 8
---------INS SimpleType@@PathElement @TO@ ParameterizedType@@Iterator<PathElement> @AT@ 11424 @LENGTH@ 11
------INS SimpleName@@iterator @TO@ SingleVariableDeclaration@@Iterator<PathElement> iterator @AT@ 11437 @LENGTH@ 8
---INS VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11461 @LENGTH@ 70
------INS SimpleType@@OperationTransformerRegistry @TO@ VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @AT@ 11461 @LENGTH@ 28
------INS VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @TO@ VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @AT@ 11490 @LENGTH@ 40
---------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @AT@ 11490 @LENGTH@ 5
---------INS MethodInvocation@@childrenUpdater.get(this,value) @TO@ VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @AT@ 11498 @LENGTH@ 32
------------INS SimpleName@@Name:childrenUpdater @TO@ MethodInvocation@@childrenUpdater.get(this,value) @AT@ 11498 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:[this, value] @TO@ MethodInvocation@@childrenUpdater.get(this,value) @AT@ 11514 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:get:[this, value] @AT@ 11518 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:get:[this, value] @AT@ 11524 @LENGTH@ 5
---INS IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11544 @LENGTH@ 176
------INS InfixExpression@@entry == null @TO@ IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11547 @LENGTH@ 13
---------INS SimpleName@@entry @TO@ InfixExpression@@entry == null @AT@ 11547 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@entry == null @AT@ 11552 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entry == null @AT@ 11556 @LENGTH@ 4
------INS Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @TO@ IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11562 @LENGTH@ 158
---------INS ExpressionStatement@@Assignment:entry=childrenUpdater.get(this,"*") @TO@ Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11580 @LENGTH@ 39
------------INS Assignment@@entry=childrenUpdater.get(this,"*") @TO@ ExpressionStatement@@Assignment:entry=childrenUpdater.get(this,"*") @AT@ 11580 @LENGTH@ 38
---------------INS SimpleName@@entry @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11580 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11585 @LENGTH@ 1
---------------INS MethodInvocation@@childrenUpdater.get(this,"*") @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11588 @LENGTH@ 30
------------------INS SimpleName@@Name:childrenUpdater @TO@ MethodInvocation@@childrenUpdater.get(this,"*") @AT@ 11588 @LENGTH@ 15
------------------INS SimpleName@@MethodName:get:[this, "*"] @TO@ MethodInvocation@@childrenUpdater.get(this,"*") @AT@ 11604 @LENGTH@ 14
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:get:[this, "*"] @AT@ 11608 @LENGTH@ 4
---------------------INS StringLiteral@@"*" @TO@ SimpleName@@MethodName:get:[this, "*"] @AT@ 11614 @LENGTH@ 3
---------INS IfStatement@@if (entry == null) {  return null;} @TO@ Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11636 @LENGTH@ 70
------------INS InfixExpression@@entry == null @TO@ IfStatement@@if (entry == null) {  return null;} @AT@ 11639 @LENGTH@ 13
---------------INS SimpleName@@entry @TO@ InfixExpression@@entry == null @AT@ 11639 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@entry == null @AT@ 11644 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@entry == null @AT@ 11648 @LENGTH@ 4
------------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (entry == null) {  return null;} @AT@ 11654 @LENGTH@ 52
---------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 11676 @LENGTH@ 12
------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 11683 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:entry.resolveChild(iterator) @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11733 @LENGTH@ 36
------INS MethodInvocation@@entry.resolveChild(iterator) @TO@ ReturnStatement@@MethodInvocation:entry.resolveChild(iterator) @AT@ 11740 @LENGTH@ 28
---------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.resolveChild(iterator) @AT@ 11740 @LENGTH@ 5
---------INS SimpleName@@MethodName:resolveChild:[iterator] @TO@ MethodInvocation@@entry.resolveChild(iterator) @AT@ 11746 @LENGTH@ 22
------------INS SimpleName@@iterator @TO@ SimpleName@@MethodName:resolveChild:[iterator] @AT@ 11759 @LENGTH@ 8


UPD Block@@ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    List<Property> deployments=groupOverlay.get(name).asPropertyList();    for (    Property content : deployments) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    ModelNode deploymentsNode=groupOverlay.get(name);    if (deploymentsNode.has(DEPLOYMENT)) {      for (      Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {        final String deploymentName=content.getName();        final ModelNode deploymentDetails=content.getValue();        boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;        addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));        addOp=Util.getEmptyOperation(ADD,addr.toModelNode());        addOp.get(REGULAR_EXPRESSION).set(regEx);        updates.add(addOp);      }    }  }} @AT@ 28231 @LENGTH@ 1064
---INS IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ Block@@ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    List<Property> deployments=groupOverlay.get(name).asPropertyList();    for (    Property content : deployments) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28352 @LENGTH@ 1032
------MOV MethodInvocation@@groupOverlay.has(name) @TO@ IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28356 @LENGTH@ 22
------INS Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28380 @LENGTH@ 1004
---------MOV IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28352 @LENGTH@ 925
------------UPD Block@@ThenBody:{  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ ThenBody:{  for (  Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28380 @LENGTH@ 897
---------------DEL VariableDeclarationStatement@@List<Property> deployments=groupOverlay.get(name).asPropertyList(); @AT@ 28406 @LENGTH@ 69
------------------DEL ParameterizedType@@List<Property> @AT@ 28406 @LENGTH@ 14
---------------------DEL SimpleType@@List @AT@ 28406 @LENGTH@ 4
---------------------DEL SimpleType@@Property @AT@ 28411 @LENGTH@ 8
------------------DEL VariableDeclarationFragment@@deployments=groupOverlay.get(name).asPropertyList() @AT@ 28421 @LENGTH@ 53
---------------------DEL SimpleName@@deployments @AT@ 28421 @LENGTH@ 11
---------------------DEL MethodInvocation@@groupOverlay.get(name).asPropertyList() @AT@ 28435 @LENGTH@ 39
------------------------DEL MethodInvocation@@MethodName:get:[name] @AT@ 28435 @LENGTH@ 22
---------------------------DEL SimpleName@@name @AT@ 28452 @LENGTH@ 4
------------------------DEL SimpleName@@Name:groupOverlay @AT@ 28435 @LENGTH@ 12
------------------------DEL SimpleName@@MethodName:asPropertyList:[] @AT@ 28458 @LENGTH@ 16
---------------UPD EnhancedForStatement@@for (Property content : deployments) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @TO@ for (Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @AT@ 28500 @LENGTH@ 755
------------------DEL SimpleName@@deployments @AT@ 28524 @LENGTH@ 11
------------------INS MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @TO@ EnhancedForStatement@@for (Property content : deployments) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @AT@ 28568 @LENGTH@ 48
---------------------INS MethodInvocation@@MethodName:get:[DEPLOYMENT] @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28568 @LENGTH@ 31
------------------------INS SimpleName@@DEPLOYMENT @TO@ MethodInvocation@@MethodName:get:[DEPLOYMENT] @AT@ 28588 @LENGTH@ 10
---------------------INS SimpleName@@Name:deploymentsNode @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28568 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28600 @LENGTH@ 16
------------INS MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @TO@ IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28485 @LENGTH@ 31
---------------INS SimpleName@@Name:deploymentsNode @TO@ MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @AT@ 28485 @LENGTH@ 15
---------------INS SimpleName@@MethodName:has:[DEPLOYMENT] @TO@ MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @AT@ 28501 @LENGTH@ 15
------------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:has:[DEPLOYMENT] @AT@ 28505 @LENGTH@ 10
---------INS VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @TO@ Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28406 @LENGTH@ 51
------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @AT@ 28406 @LENGTH@ 9
------------INS VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @TO@ VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @AT@ 28416 @LENGTH@ 40
---------------INS SimpleName@@deploymentsNode @TO@ VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @AT@ 28416 @LENGTH@ 15
---------------INS MethodInvocation@@groupOverlay.get(name) @TO@ VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @AT@ 28434 @LENGTH@ 22
------------------INS SimpleName@@Name:groupOverlay @TO@ MethodInvocation@@groupOverlay.get(name) @AT@ 28434 @LENGTH@ 12
------------------INS SimpleName@@MethodName:get:[name] @TO@ MethodInvocation@@groupOverlay.get(name) @AT@ 28447 @LENGTH@ 9
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:get:[name] @AT@ 28451 @LENGTH@ 4
---UPD IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ if (deploymentsNode.has(DEPLOYMENT)) {  for (  Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28352 @LENGTH@ 925


UPD ExpressionStatement@@MethodInvocation:runningModeControl.setReloaded(true) @TO@ MethodInvocation:runningModeControl.setReloaded() @AT@ 3793 @LENGTH@ 37
---UPD MethodInvocation@@runningModeControl.setReloaded(true) @TO@ runningModeControl.setReloaded() @AT@ 3793 @LENGTH@ 36
------UPD SimpleName@@MethodName:setReloaded:[true] @TO@ MethodName:setReloaded:[] @AT@ 3812 @LENGTH@ 17
---------DEL BooleanLiteral@@true @AT@ 3824 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:System.out.println("completed " + result) @AT@ 7314 @LENGTH@ 42
---DEL MethodInvocation@@System.out.println("completed " + result) @AT@ 7314 @LENGTH@ 41
------DEL QualifiedName@@Name:System.out @AT@ 7314 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["completed " + result] @AT@ 7325 @LENGTH@ 30
---------DEL InfixExpression@@"completed " + result @AT@ 7333 @LENGTH@ 21
------------DEL StringLiteral@@"completed " @AT@ 7333 @LENGTH@ 12
------------DEL Operator@@+ @AT@ 7345 @LENGTH@ 1
------------DEL SimpleName@@result @AT@ 7348 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build()] @AT@ 3009 @LENGTH@ 233
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build() @AT@ 3049 @LENGTH@ 192
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(SCHEMA_LOCATION,URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(SCHEMA_LOCATION,URI).build() @AT@ 3062 @LENGTH@ 179
---------UPD MethodInvocation@@MethodName:setReplyParameters:[SCHEMA_LOCATION, URI] @TO@ MethodName:setParameters:[SCHEMA_LOCATION, URI] @AT@ 3062 @LENGTH@ 158


UPD ForStatement@@for (int i=0; i < contentPairs.length; ++i) {  final String pair=contentPairs[i];  final int equalsIndex=pair.indexOf('=');  if (equalsIndex < 0) {    throw new CommandFormatException("Content pair is not following archive-path=fs-path format: '" + pair + "'");  }  contentNames[i]=pair.substring(0,equalsIndex);  if (contentNames[i].length() == 0) {    throw new CommandFormatException("The archive path is missing for the content '" + pair + "'");  }  String path=pair.substring(equalsIndex + 1);  if (path.length() == 0) {    throw new CommandFormatException("The filesystem paths is missing for the content '" + pair + "'");  }  String originalPath=path;  path=pathCompleter.translatePath(path);  final File f=new File(path);  if (!f.exists()) {    throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);  }  contentPaths[i]=f;} @TO@ for (int i=0; i < contentPairs.length; ++i) {  final String pair=contentPairs[i];  final int equalsIndex=pair.indexOf('=');  if (equalsIndex < 0) {    throw new CommandFormatException("Content pair is not following archive-path=fs-path format: '" + pair + "'");  }  contentNames[i]=pair.substring(0,equalsIndex);  if (contentNames[i].length() == 0) {    throw new CommandFormatException("The archive path is missing for the content '" + pair + "'");  }  String path=pair.substring(equalsIndex + 1);  if (path.length() == 0) {    throw new CommandFormatException("The filesystem paths is missing for the content '" + pair + "'");  }  path=pathCompleter.translatePath(path);  final File f=new File(path);  if (!f.exists()) {    throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());  }  contentPaths[i]=f;} @AT@ 28563 @LENGTH@ 1150
---DEL VariableDeclarationStatement@@String originalPath=path; @AT@ 29363 @LENGTH@ 27
------DEL SimpleType@@String @AT@ 29363 @LENGTH@ 6
------DEL VariableDeclarationFragment@@originalPath=path @AT@ 29370 @LENGTH@ 19
---------DEL SimpleName@@originalPath @AT@ 29370 @LENGTH@ 12
---------DEL SimpleName@@path @AT@ 29385 @LENGTH@ 4
---UPD IfStatement@@if (!f.exists()) {  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);} @TO@ if (!f.exists()) {  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());} @AT@ 29500 @LENGTH@ 170
------UPD Block@@ThenBody:{  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);} @TO@ ThenBody:{  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());} @AT@ 29516 @LENGTH@ 154
---------UPD ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path) @TO@ ClassInstanceCreation:new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath()) @AT@ 29534 @LENGTH@ 122
------------UPD ClassInstanceCreation@@CommandFormatException["Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path] @TO@ CommandFormatException["Content file doesn't exist " + f.getAbsolutePath()] @AT@ 29540 @LENGTH@ 115
---------------UPD InfixExpression@@"Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path @TO@ "Content file doesn't exist " + f.getAbsolutePath() @AT@ 29567 @LENGTH@ 87
------------------DEL StringLiteral@@", " @AT@ 29621 @LENGTH@ 4
------------------DEL SimpleName@@originalPath @AT@ 29628 @LENGTH@ 12
------------------DEL StringLiteral@@", " @AT@ 29643 @LENGTH@ 4
------------------DEL SimpleName@@path @AT@ 29650 @LENGTH@ 4


UPD IfStatement@@if (STARTED.equals(name)) {  control=getHornetQComponentControl(context,operation,false);  context.getResult().set(control.isStarted());} else {  handleReadAttribute(name,context,operation);} @TO@ if (STARTED.getName().equals(name)) {  control=getHornetQComponentControl(context,operation,false);  context.getResult().set(control.isStarted());} else {  handleReadAttribute(name,context,operation);} @AT@ 4293 @LENGTH@ 268
---UPD MethodInvocation@@STARTED.equals(name) @TO@ STARTED.getName().equals(name) @AT@ 4297 @LENGTH@ 20
------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@STARTED.equals(name) @AT@ 4297 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:runningModeControl.setReloaded(true) @TO@ MethodInvocation:runningModeControl.setReloaded() @AT@ 3793 @LENGTH@ 37
---UPD MethodInvocation@@runningModeControl.setReloaded(true) @TO@ runningModeControl.setReloaded() @AT@ 3793 @LENGTH@ 36
------UPD SimpleName@@MethodName:setReloaded:[true] @TO@ MethodName:setReloaded:[] @AT@ 3812 @LENGTH@ 17
---------DEL BooleanLiteral@@true @AT@ 3824 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @TO@ TypeDeclaration@@[public]ArgumentValueParsingTestCase,  @AT@ 11603 @LENGTH@ 570
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11603 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11610 @LENGTH@ 4
---INS SimpleName@@MethodName:testQuotesAndSpaces @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11615 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11644 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode value=parse("\" \""); @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11664 @LENGTH@ 33
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode value=parse("\" \""); @AT@ 11664 @LENGTH@ 9
------INS VariableDeclarationFragment@@value=parse("\" \"") @TO@ VariableDeclarationStatement@@ModelNode value=parse("\" \""); @AT@ 11674 @LENGTH@ 22
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=parse("\" \"") @AT@ 11674 @LENGTH@ 5
---------INS MethodInvocation@@parse("\" \"") @TO@ VariableDeclarationFragment@@value=parse("\" \"") @AT@ 11682 @LENGTH@ 14
------------INS SimpleName@@MethodName:parse:["\" \""] @TO@ MethodInvocation@@parse("\" \"") @AT@ 11682 @LENGTH@ 14
---------------INS StringLiteral@@"\" \"" @TO@ SimpleName@@MethodName:parse:["\" \""] @AT@ 11688 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11706 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 11706 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 11706 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 11720 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11736 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 11736 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 11736 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11749 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 11749 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 11759 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11767 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 11767 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 11773 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11793 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(" ",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @AT@ 11793 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[" ", value.asString()] @TO@ MethodInvocation@@assertEquals(" ",value.asString()) @AT@ 11793 @LENGTH@ 35
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11806 @LENGTH@ 3
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11811 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 11811 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 11817 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:value=parse(" \" \"") @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11839 @LENGTH@ 24
------INS Assignment@@value=parse(" \" \"") @TO@ ExpressionStatement@@Assignment:value=parse(" \" \"") @AT@ 11839 @LENGTH@ 23
---------INS SimpleName@@value @TO@ Assignment@@value=parse(" \" \"") @AT@ 11839 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@value=parse(" \" \"") @AT@ 11844 @LENGTH@ 1
---------INS MethodInvocation@@parse(" \" \"") @TO@ Assignment@@value=parse(" \" \"") @AT@ 11847 @LENGTH@ 15
------------INS SimpleName@@MethodName:parse:[" \" \""] @TO@ MethodInvocation@@parse(" \" \"") @AT@ 11847 @LENGTH@ 15
---------------INS StringLiteral@@" \" \"" @TO@ SimpleName@@MethodName:parse:[" \" \""] @AT@ 11853 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11872 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 11872 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 11872 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 11886 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11902 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 11902 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 11902 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11915 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 11915 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 11925 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11933 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 11933 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 11939 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11959 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(" ",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @AT@ 11959 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[" ", value.asString()] @TO@ MethodInvocation@@assertEquals(" ",value.asString()) @AT@ 11959 @LENGTH@ 35
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11972 @LENGTH@ 3
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11977 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 11977 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 11983 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:value=parse(" \" \\\"\"") @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12005 @LENGTH@ 28
------INS Assignment@@value=parse(" \" \\\"\"") @TO@ ExpressionStatement@@Assignment:value=parse(" \" \\\"\"") @AT@ 12005 @LENGTH@ 27
---------INS SimpleName@@value @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12005 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12010 @LENGTH@ 1
---------INS MethodInvocation@@parse(" \" \\\"\"") @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12013 @LENGTH@ 19
------------INS SimpleName@@MethodName:parse:[" \" \\\"\""] @TO@ MethodInvocation@@parse(" \" \\\"\"") @AT@ 12013 @LENGTH@ 19
---------------INS StringLiteral@@" \" \\\"\"" @TO@ SimpleName@@MethodName:parse:[" \" \\\"\""] @AT@ 12019 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12042 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 12042 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 12042 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 12056 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12072 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 12072 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 12072 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 12085 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 12085 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 12095 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 12103 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 12103 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 12109 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" \"",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12129 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(" \"",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" \"",value.asString()) @AT@ 12129 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @TO@ MethodInvocation@@assertEquals(" \"",value.asString()) @AT@ 12129 @LENGTH@ 37
------------INS StringLiteral@@" \"" @TO@ SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @AT@ 12142 @LENGTH@ 5
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @AT@ 12149 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 12149 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 12155 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch")).andExpect(method(GET)).andRespond(withSuccess(jsonResource("rate-limit-status"),APPLICATION_JSON)) @TO@ MethodInvocation:mockServer.expect(requestTo("https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch")).andExpect(method(GET)).andRespond(withSuccess(jsonResource("rate-limit-status"),APPLICATION_JSON)) @AT@ 9783 @LENGTH@ 223
---UPD MethodInvocation@@mockServer.expect(requestTo("https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch")).andExpect(method(GET)).andRespond(withSuccess(jsonResource("rate-limit-status"),APPLICATION_JSON)) @TO@ mockServer.expect(requestTo("https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch")).andExpect(method(GET)).andRespond(withSuccess(jsonResource("rate-limit-status"),APPLICATION_JSON)) @AT@ 9783 @LENGTH@ 222
------UPD MethodInvocation@@MethodName:expect:[requestTo("https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch")] @TO@ MethodName:expect:[requestTo("https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch")] @AT@ 9783 @LENGTH@ 114
---------UPD MethodInvocation@@requestTo("https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch") @TO@ requestTo("https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch") @AT@ 9801 @LENGTH@ 95
------------UPD SimpleName@@MethodName:requestTo:["https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch"] @TO@ MethodName:requestTo:["https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch"] @AT@ 9801 @LENGTH@ 95
---------------UPD StringLiteral@@"https://api.twitter.com/1.1/account/rate_limit_status.json?resources=help%2Csearch" @TO@ "https://api.twitter.com/1.1/application/rate_limit_status.json?resources=help%2Csearch" @AT@ 9811 @LENGTH@ 84


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
) @AT@ 2341 @LENGTH@ 388
---UPD MethodInvocation@@setDefaultHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
) @AT@ 2341 @LENGTH@ 387
------UPD SimpleName@@MethodName:setDefaultHandler:[new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final char ch=ctx.getCharacter();
    if (ch == '(') {
      ctx.enterState(propList);
    }
 else     if (ch != ')') {
      ctx.leaveState();
    }
  }
}
] @AT@ 2341 @LENGTH@ 387
---------UPD ClassInstanceCreation@@CharacterHandler[] @TO@ LineBreakHandler[false, false] @AT@ 2359 @LENGTH@ 368
------------UPD SimpleType@@CharacterHandler @TO@ LineBreakHandler @AT@ 2363 @LENGTH@ 16
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2430 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2437 @LENGTH@ 5


INS IfStatement@@if (getParser() != null) {  setProperty(dataFormat,"parser",getParser());} @TO@ MethodDeclaration@@protected, void, MethodName:configureDataFormat, DataFormat dataFormat,  @AT@ 2115 @LENGTH@ 96
---INS InfixExpression@@getParser() != null @TO@ IfStatement@@if (getParser() != null) {  setProperty(dataFormat,"parser",getParser());} @AT@ 2119 @LENGTH@ 19
------INS MethodInvocation@@MethodName:getParser:[] @TO@ InfixExpression@@getParser() != null @AT@ 2119 @LENGTH@ 11
------INS Operator@@!= @TO@ InfixExpression@@getParser() != null @AT@ 2130 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@getParser() != null @AT@ 2134 @LENGTH@ 4
---INS Block@@ThenBody:{  setProperty(dataFormat,"parser",getParser());} @TO@ IfStatement@@if (getParser() != null) {  setProperty(dataFormat,"parser",getParser());} @AT@ 2140 @LENGTH@ 71
------MOV ExpressionStatement@@MethodInvocation:setProperty(dataFormat,"parser",getParser()) @TO@ Block@@ThenBody:{  setProperty(dataFormat,"parser",getParser());} @AT@ 2038 @LENGTH@ 47


UPD MethodDeclaration@@public, boolean, MethodName:isRuntimeSystemPropertyUpdateAllowed, String propertyName, String propertyValue, boolean bootTime,  @TO@ protected, boolean, MethodName:isRuntimeSystemPropertyUpdateAllowed, String propertyName, String propertyValue, boolean bootTime,  @AT@ 27486 @LENGTH@ 333
---UPD Modifier@@public @TO@ protected @AT@ 27486 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:clientBean.setBus(BusFactory.getDefaultBus()) @TO@ MethodInvocation:clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 1644 @LENGTH@ 46
---UPD MethodInvocation@@clientBean.setBus(BusFactory.getDefaultBus()) @TO@ clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 1644 @LENGTH@ 45
------UPD SimpleName@@MethodName:setBus:[BusFactory.getDefaultBus()] @TO@ MethodName:setBus:[BusFactory.newInstance().createBus()] @AT@ 1655 @LENGTH@ 34
---------UPD MethodInvocation@@BusFactory.getDefaultBus() @TO@ BusFactory.newInstance().createBus() @AT@ 1662 @LENGTH@ 26
------------UPD SimpleName@@MethodName:getDefaultBus:[] @TO@ MethodName:createBus:[] @AT@ 1673 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:newInstance:[] @TO@ MethodInvocation@@BusFactory.getDefaultBus() @AT@ 1703 @LENGTH@ 24


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + bundlesDir) @TO@ ClassInstanceCreation:new IllegalStateException("Invalid bundles directory: " + bundlesDir) @AT@ 4923 @LENGTH@ 76
---UPD ClassInstanceCreation@@IllegalStateException["Invalid modules directory: " + bundlesDir] @TO@ IllegalStateException["Invalid bundles directory: " + bundlesDir] @AT@ 4929 @LENGTH@ 69
------UPD InfixExpression@@"Invalid modules directory: " + bundlesDir @TO@ "Invalid bundles directory: " + bundlesDir @AT@ 4955 @LENGTH@ 42
---------UPD StringLiteral@@"Invalid modules directory: " @TO@ "Invalid bundles directory: " @AT@ 4955 @LENGTH@ 29


UPD IfStatement@@if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} @TO@ if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} else {  modulePath=modulePath.split(File.pathSeparator)[0];} @AT@ 10924 @LENGTH@ 326
---INS Block@@ElseBody:{  modulePath=modulePath.split(File.pathSeparator)[0];} @TO@ IfStatement@@if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} @AT@ 11254 @LENGTH@ 76
------INS ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @TO@ Block@@ElseBody:{  modulePath=modulePath.split(File.pathSeparator)[0];} @AT@ 11267 @LENGTH@ 53
---------INS Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @TO@ ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11267 @LENGTH@ 52
------------INS SimpleName@@modulePath @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11267 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11277 @LENGTH@ 1
------------INS ArrayAccess@@modulePath.split(File.pathSeparator)[0] @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 11280 @LENGTH@ 39
---------------INS MethodInvocation@@modulePath.split(File.pathSeparator) @TO@ ArrayAccess@@modulePath.split(File.pathSeparator)[0] @AT@ 11280 @LENGTH@ 36
------------------INS SimpleName@@Name:modulePath @TO@ MethodInvocation@@modulePath.split(File.pathSeparator) @AT@ 11280 @LENGTH@ 10
------------------INS SimpleName@@MethodName:split:[File.pathSeparator] @TO@ MethodInvocation@@modulePath.split(File.pathSeparator) @AT@ 11291 @LENGTH@ 25
---------------------INS QualifiedName@@File.pathSeparator @TO@ SimpleName@@MethodName:split:[File.pathSeparator] @AT@ 11297 @LENGTH@ 18
------------------------INS SimpleName@@File @TO@ QualifiedName@@File.pathSeparator @AT@ 11297 @LENGTH@ 4
------------------------INS SimpleName@@pathSeparator @TO@ QualifiedName@@File.pathSeparator @AT@ 11302 @LENGTH@ 13
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@modulePath.split(File.pathSeparator)[0] @AT@ 11317 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @TO@ MethodInvocation:org.jboss.as.controller.services.path.RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers,listeners) @AT@ 3440 @LENGTH@ 111
---UPD MethodInvocation@@RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @TO@ org.jboss.as.controller.services.path.RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers,listeners) @AT@ 3447 @LENGTH@ 103
------INS QualifiedName@@Name:org.jboss.as.controller.services.path.RelativePathService @TO@ MethodInvocation@@RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @AT@ 3447 @LENGTH@ 57
------DEL SimpleName@@Name:RelativePathService @AT@ 3447 @LENGTH@ 19
------UPD SimpleName@@MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers] @TO@ MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers, listeners] @AT@ 3467 @LENGTH@ 83
---------INS SimpleName@@listeners @TO@ SimpleName@@MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers] @AT@ 3589 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:this.resources=resources @TO@ Assignment:this.resources=resources.clone() @AT@ 1650 @LENGTH@ 27
---UPD Assignment@@this.resources=resources @TO@ this.resources=resources.clone() @AT@ 1650 @LENGTH@ 26
------INS MethodInvocation@@resources.clone() @TO@ Assignment@@this.resources=resources @AT@ 1667 @LENGTH@ 17
---------INS SimpleName@@Name:resources @TO@ MethodInvocation@@resources.clone() @AT@ 1667 @LENGTH@ 9
---------INS SimpleName@@MethodName:clone:[] @TO@ MethodInvocation@@resources.clone() @AT@ 1677 @LENGTH@ 7
------DEL SimpleName@@resources @AT@ 1667 @LENGTH@ 9


UPD CatchClause@@catch (IOException e) {} @TO@ catch (IOException e) {  download.setException(e);} @AT@ 3744 @LENGTH@ 111
---INS ExpressionStatement@@MethodInvocation:download.setException(e) @TO@ CatchClause@@catch (IOException e) {} @AT@ 3814 @LENGTH@ 25
------INS MethodInvocation@@download.setException(e) @TO@ ExpressionStatement@@MethodInvocation:download.setException(e) @AT@ 3814 @LENGTH@ 24
---------INS SimpleName@@Name:download @TO@ MethodInvocation@@download.setException(e) @AT@ 3814 @LENGTH@ 8
---------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@download.setException(e) @AT@ 3823 @LENGTH@ 15
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 3836 @LENGTH@ 1


INS MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[public]NodeState, DefaultParsingState @AT@ 2761 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2761 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2768 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2776 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2803 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2810 @LENGTH@ 4


INS IfStatement@@if (map.isEmpty()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:purge,  @AT@ 5323 @LENGTH@ 50
---INS MethodInvocation@@map.isEmpty() @TO@ IfStatement@@if (map.isEmpty()) {  return;} @AT@ 5327 @LENGTH@ 13
------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.isEmpty() @AT@ 5327 @LENGTH@ 3
------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@map.isEmpty() @AT@ 5331 @LENGTH@ 9
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (map.isEmpty()) {  return;} @AT@ 5342 @LENGTH@ 31
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 5356 @LENGTH@ 7


UPD FieldDeclaration@@private, int, [producerPoolMinIdle=0] @TO@ private, int, [producerPoolMinIdle] @AT@ 3348 @LENGTH@ 36
---UPD VariableDeclarationFragment@@producerPoolMinIdle=0 @TO@ producerPoolMinIdle @AT@ 3360 @LENGTH@ 23
------DEL NumberLiteral@@0 @AT@ 3382 @LENGTH@ 1


DEL MethodDeclaration@@void, MethodName:configureJdbcAggregationRepository,  @AT@ 1134 @LENGTH@ 141
---DEL PrimitiveType@@void @AT@ 1129 @LENGTH@ 4
---DEL SimpleName@@MethodName:configureJdbcAggregationRepository @AT@ 1134 @LENGTH@ 34
---DEL ExpressionStatement@@MethodInvocation:repo.setUseRecovery(true) @AT@ 1181 @LENGTH@ 26
------DEL MethodInvocation@@repo.setUseRecovery(true) @AT@ 1181 @LENGTH@ 25
---------DEL SimpleName@@Name:repo @AT@ 1181 @LENGTH@ 4
---------DEL SimpleName@@MethodName:setUseRecovery:[true] @AT@ 1186 @LENGTH@ 20
------------DEL BooleanLiteral@@true @AT@ 1201 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:repo.setRecoveryInterval(500,TimeUnit.MILLISECONDS) @AT@ 1216 @LENGTH@ 53
------DEL MethodInvocation@@repo.setRecoveryInterval(500,TimeUnit.MILLISECONDS) @AT@ 1216 @LENGTH@ 52
---------DEL SimpleName@@Name:repo @AT@ 1216 @LENGTH@ 4
---------DEL SimpleName@@MethodName:setRecoveryInterval:[500, TimeUnit.MILLISECONDS] @AT@ 1221 @LENGTH@ 47
------------DEL NumberLiteral@@500 @AT@ 1241 @LENGTH@ 3
------------DEL QualifiedName@@TimeUnit.MILLISECONDS @AT@ 1246 @LENGTH@ 21
---------------DEL SimpleName@@TimeUnit @AT@ 1246 @LENGTH@ 8
---------------DEL SimpleName@@MILLISECONDS @AT@ 1255 @LENGTH@ 12


UPD IfStatement@@if (!forOperation && defaultValue != null && defaultValue.isDefined()) {  result.get(ModelDescriptionConstants.DEFAULT).set(defaultValue);} @TO@ if (defaultValue != null && defaultValue.isDefined()) {  result.get(ModelDescriptionConstants.DEFAULT).set(defaultValue);} @AT@ 20945 @LENGTH@ 159
---UPD InfixExpression@@!forOperation && defaultValue != null && defaultValue.isDefined() @TO@ defaultValue != null && defaultValue.isDefined() @AT@ 20949 @LENGTH@ 65
------DEL InfixExpression@@!forOperation && defaultValue != null @AT@ 20949 @LENGTH@ 37
---------DEL PrefixExpression@@!forOperation @AT@ 20949 @LENGTH@ 13
------------DEL Operator@@! @AT@ 20949 @LENGTH@ 1
------------DEL SimpleName@@forOperation @AT@ 20950 @LENGTH@ 12
---------DEL Operator@@&& @AT@ 20962 @LENGTH@ 2
------MOV InfixExpression@@defaultValue != null @TO@ InfixExpression@@!forOperation && defaultValue != null && defaultValue.isDefined() @AT@ 20966 @LENGTH@ 20


UPD ReturnStatement@@MethodInvocation:AvailablePortFinder.getNextAvailable(port + 1) @TO@ MethodInvocation:AvailablePortFinder.getNextAvailable(port + counter.getAndIncrement()) @AT@ 2030 @LENGTH@ 54
---UPD MethodInvocation@@AvailablePortFinder.getNextAvailable(port + 1) @TO@ AvailablePortFinder.getNextAvailable(port + counter.getAndIncrement()) @AT@ 2037 @LENGTH@ 46
------UPD SimpleName@@MethodName:getNextAvailable:[port + 1] @TO@ MethodName:getNextAvailable:[port + counter.getAndIncrement()] @AT@ 2057 @LENGTH@ 26
---------UPD InfixExpression@@port + 1 @TO@ port + counter.getAndIncrement() @AT@ 2074 @LENGTH@ 8
------------DEL NumberLiteral@@1 @AT@ 2081 @LENGTH@ 1
------------INS MethodInvocation@@counter.getAndIncrement() @TO@ InfixExpression@@port + 1 @AT@ 2202 @LENGTH@ 25
---------------INS SimpleName@@Name:counter @TO@ MethodInvocation@@counter.getAndIncrement() @AT@ 2202 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getAndIncrement:[] @TO@ MethodInvocation@@counter.getAndIncrement() @AT@ 2210 @LENGTH@ 17


MOV ExpressionStatement@@MethodInvocation:callbackHandler.leavingState(this) @TO@ MethodDeclaration@@public, ParsingState, MethodName:leaveState, CommandFormatException,  @AT@ 3520 @LENGTH@ 35


UPD ReturnStatement@@ClassInstanceCreation:new OnePredicate<T>(predicates) @TO@ ClassInstanceCreation:new OnePredicate<T>(FunctorUtils.copy(predicates)) @AT@ 2552 @LENGTH@ 39
---UPD ClassInstanceCreation@@OnePredicate<T>[predicates] @TO@ OnePredicate<T>[FunctorUtils.copy(predicates)] @AT@ 2559 @LENGTH@ 31
------MOV MethodInvocation@@FunctorUtils.copy(predicates) @TO@ ClassInstanceCreation@@OnePredicate<T>[predicates] @AT@ 2513 @LENGTH@ 29
------DEL SimpleName@@predicates @AT@ 2579 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:Mockito.verify(context).completeStep() @TO@ MethodInvocation:Mockito.verify(context).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2599 @LENGTH@ 39
---UPD MethodInvocation@@Mockito.verify(context).completeStep() @TO@ Mockito.verify(context).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2599 @LENGTH@ 38
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2623 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2636 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2636 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2636 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2653 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2669 @LENGTH@ 21


UPD ExpressionStatement@@Assignment:this.lineLength=(lineLength > 0 && chunkSeparatorLength > 0) ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @TO@ Assignment:this.lineLength=useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @AT@ 5799 @LENGTH@ 121
---UPD Assignment@@this.lineLength=(lineLength > 0 && chunkSeparatorLength > 0) ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @TO@ this.lineLength=useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @AT@ 5799 @LENGTH@ 120
------UPD ConditionalExpression@@(lineLength > 0 && chunkSeparatorLength > 0) ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @TO@ useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @AT@ 5817 @LENGTH@ 102
---------DEL ParenthesizedExpression@@(lineLength > 0 && chunkSeparatorLength > 0) @AT@ 5817 @LENGTH@ 45
---------INS SimpleName@@useChunking @TO@ ConditionalExpression@@(lineLength > 0 && chunkSeparatorLength > 0) ? (lineLength / encodedBlockSize) * encodedBlockSize : 0 @AT@ 5898 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @TO@ MethodDeclaration@@public, void, MethodName:testPatch, Exception,  @AT@ 6235 @LENGTH@ 45
---INS MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @TO@ ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @AT@ 6235 @LENGTH@ 44
------INS MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 6235 @LENGTH@ 28
---------INS MethodInvocation@@bundle.getBundleId() @TO@ MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @AT@ 6242 @LENGTH@ 20
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 6242 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBundleId:[] @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 6249 @LENGTH@ 13
------INS SimpleName@@MethodName:andReturn:[123L] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 6264 @LENGTH@ 15
---------INS NumberLiteral@@123L @TO@ SimpleName@@MethodName:andReturn:[123L] @AT@ 6274 @LENGTH@ 4


UPD FieldDeclaration@@private, ServiceRegistration, [registration] @TO@ private, ServiceRegistration<?>, [registration] @AT@ 1214 @LENGTH@ 41
---DEL SimpleType@@ServiceRegistration @AT@ 1222 @LENGTH@ 19
---INS ParameterizedType@@ServiceRegistration<?> @TO@ FieldDeclaration@@private, ServiceRegistration, [registration] @AT@ 1250 @LENGTH@ 22
------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1250 @LENGTH@ 19
------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1270 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:service.createCluster(containers,password) @TO@ MethodInvocation:service.createCluster(containers,zookeeperPassword) @AT@ 5212 @LENGTH@ 44
---UPD MethodInvocation@@service.createCluster(containers,password) @TO@ service.createCluster(containers,zookeeperPassword) @AT@ 5212 @LENGTH@ 43
------UPD SimpleName@@MethodName:createCluster:[containers, password] @TO@ MethodName:createCluster:[containers, zookeeperPassword] @AT@ 5220 @LENGTH@ 35
---------UPD SimpleName@@password @TO@ zookeeperPassword @AT@ 5246 @LENGTH@ 8


INS FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @TO@ TypeDeclaration@@[public]ViewDescription,  @AT@ 2347 @LENGTH@ 40
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @AT@ 2347 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @AT@ 2354 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @AT@ 2361 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @AT@ 2367 @LENGTH@ 3
---INS VariableDeclarationFragment@@BRIDGE=0x0040 @TO@ FieldDeclaration@@public, static, final, int, [BRIDGE=0x0040] @AT@ 2371 @LENGTH@ 15
------INS SimpleName@@BRIDGE @TO@ VariableDeclarationFragment@@BRIDGE=0x0040 @AT@ 2371 @LENGTH@ 6
------INS NumberLiteral@@0x0040 @TO@ VariableDeclarationFragment@@BRIDGE=0x0040 @AT@ 2380 @LENGTH@ 6


MOV MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ TypeDeclaration@@[@ContextName("contextD"), public]RoutesContextD, RouteBuilder @AT@ 1649 @LENGTH@ 71


UPD MethodDeclaration@@public, void, MethodName:testTimout4, Exception,  @TO@ public, void, MethodName:testTimeout4, Exception,  @AT@ 2455 @LENGTH@ 357
---UPD SimpleName@@MethodName:testTimout4 @TO@ MethodName:testTimeout4 @AT@ 2467 @LENGTH@ 11
---UPD ExpressionStatement@@MethodInvocation:assertEquals((Integer)3,buffer.poll(125)) @TO@ MethodInvocation:assertEquals((Integer)3,buffer.poll(250)) @AT@ 2645 @LENGTH@ 43
------UPD MethodInvocation@@assertEquals((Integer)3,buffer.poll(125)) @TO@ assertEquals((Integer)3,buffer.poll(250)) @AT@ 2645 @LENGTH@ 42
---------UPD SimpleName@@MethodName:assertEquals:[(Integer)3, buffer.poll(125)] @TO@ MethodName:assertEquals:[(Integer)3, buffer.poll(250)] @AT@ 2645 @LENGTH@ 42
------------UPD MethodInvocation@@buffer.poll(125) @TO@ buffer.poll(250) @AT@ 2670 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:poll:[125] @TO@ MethodName:poll:[250] @AT@ 2677 @LENGTH@ 9
------------------UPD NumberLiteral@@125 @TO@ 250 @AT@ 2682 @LENGTH@ 3
---UPD ExpressionStatement@@MethodInvocation:assertEquals((Integer)4,buffer.poll(125)) @TO@ MethodInvocation:assertEquals((Integer)4,buffer.poll(250)) @AT@ 2697 @LENGTH@ 43
------UPD MethodInvocation@@assertEquals((Integer)4,buffer.poll(125)) @TO@ assertEquals((Integer)4,buffer.poll(250)) @AT@ 2697 @LENGTH@ 42
---------UPD SimpleName@@MethodName:assertEquals:[(Integer)4, buffer.poll(125)] @TO@ MethodName:assertEquals:[(Integer)4, buffer.poll(250)] @AT@ 2697 @LENGTH@ 42
------------UPD MethodInvocation@@buffer.poll(125) @TO@ buffer.poll(250) @AT@ 2722 @LENGTH@ 16
---------------UPD SimpleName@@MethodName:poll:[125] @TO@ MethodName:poll:[250] @AT@ 2729 @LENGTH@ 9
------------------UPD NumberLiteral@@125 @TO@ 250 @AT@ 2734 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:instructions.add(MESSAGES.argDebugPort()) @TO@ MethodDeclaration@@public, static, void, MethodName:init,  @AT@ 1050 @LENGTH@ 42
---INS MethodInvocation@@instructions.add(MESSAGES.argDebugPort()) @TO@ ExpressionStatement@@MethodInvocation:instructions.add(MESSAGES.argDebugPort()) @AT@ 1050 @LENGTH@ 41
------INS SimpleName@@Name:instructions @TO@ MethodInvocation@@instructions.add(MESSAGES.argDebugPort()) @AT@ 1050 @LENGTH@ 12
------INS SimpleName@@MethodName:add:[MESSAGES.argDebugPort()] @TO@ MethodInvocation@@instructions.add(MESSAGES.argDebugPort()) @AT@ 1063 @LENGTH@ 28
---------INS MethodInvocation@@MESSAGES.argDebugPort() @TO@ SimpleName@@MethodName:add:[MESSAGES.argDebugPort()] @AT@ 1067 @LENGTH@ 23
------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.argDebugPort() @AT@ 1067 @LENGTH@ 8
------------INS SimpleName@@MethodName:argDebugPort:[] @TO@ MethodInvocation@@MESSAGES.argDebugPort() @AT@ 1076 @LENGTH@ 14


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + modulesDir) @TO@ ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + bundlesDir) @AT@ 3974 @LENGTH@ 76
---UPD ClassInstanceCreation@@IllegalStateException["Invalid modules directory: " + modulesDir] @TO@ IllegalStateException["Invalid modules directory: " + bundlesDir] @AT@ 3980 @LENGTH@ 69
------UPD InfixExpression@@"Invalid modules directory: " + modulesDir @TO@ "Invalid modules directory: " + bundlesDir @AT@ 4006 @LENGTH@ 42
---------UPD SimpleName@@modulesDir @TO@ bundlesDir @AT@ 4038 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:zkClient.close() @TO@ MethodInvocation:zkClient.destroy() @AT@ 3306 @LENGTH@ 17
---UPD MethodInvocation@@zkClient.close() @TO@ zkClient.destroy() @AT@ 3306 @LENGTH@ 16
------UPD SimpleName@@MethodName:close:[] @TO@ MethodName:destroy:[] @AT@ 3315 @LENGTH@ 7


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build()] @AT@ 3468 @LENGTH@ 307
---UPD VariableDeclarationFragment@@SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @TO@ SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 3514 @LENGTH@ 260
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 3543 @LENGTH@ 231
---------INS MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @AT@ 3615 @LENGTH@ 337
------------INS ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @TO@ MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @AT@ 3903 @LENGTH@ 48
---------------INS New@@new @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3903 @LENGTH@ 3
---------------INS SimpleType@@IntRangeValidator @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3907 @LENGTH@ 17
---------------INS PrefixExpression@@-65535 @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3925 @LENGTH@ 6
------------------INS Operator@@- @TO@ PrefixExpression@@-65535 @AT@ 3925 @LENGTH@ 1
------------------INS NumberLiteral@@65535 @TO@ PrefixExpression@@-65535 @AT@ 3926 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3933 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3940 @LENGTH@ 4
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3946 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @AT@ 3615 @LENGTH@ 261
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3871 @LENGTH@ 4


UPD VariableDeclarationStatement@@List<String> expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @TO@ List<String> expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @AT@ 1977 @LENGTH@ 317
---UPD VariableDeclarationFragment@@expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ expectedEvents=Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 1990 @LENGTH@ 303
------UPD MethodInvocation@@Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ Arrays.asList("onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 2007 @LENGTH@ 286
---------UPD SimpleName@@MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onThreadPoolAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @TO@ MethodName:asList:["onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onThreadPoolAdd", "onThreadPoolAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2014 @LENGTH@ 279
------------DEL StringLiteral@@"onThreadPoolAdd" @AT@ 2021 @LENGTH@ 17
------------INS StringLiteral@@"onThreadPoolAdd" @TO@ SimpleName@@MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onThreadPoolAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2186 @LENGTH@ 17


INS FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @TO@ TypeDeclaration@@[public]WarStructureDeploymentProcessor, [DeploymentUnitProcessor] @AT@ 2762 @LENGTH@ 49
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @AT@ 2762 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @AT@ 2769 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @AT@ 2776 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @AT@ 2782 @LENGTH@ 6
---INS VariableDeclarationFragment@@META_INF="META-INF" @TO@ FieldDeclaration@@public, static, final, String, [META_INF="META-INF"] @AT@ 2789 @LENGTH@ 21
------INS SimpleName@@META_INF @TO@ VariableDeclarationFragment@@META_INF="META-INF" @AT@ 2789 @LENGTH@ 8
------INS StringLiteral@@"META-INF" @TO@ VariableDeclarationFragment@@META_INF="META-INF" @AT@ 2800 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 52
---UPD Assignment@@deploymentNames=Util.getDeployments(client,name) @TO@ deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 51
------UPD MethodInvocation@@Util.getDeployments(client,name) @TO@ Util.getMatchingDeployments(client,name) @AT@ 14073 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getDeployments:[client, name] @TO@ MethodName:getMatchingDeployments:[client, name] @AT@ 14078 @LENGTH@ 28


INS MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @TO@ TypeDeclaration@@[public, abstract]AbstractAttributeDefinitionBuilder,  @AT@ 9216 @LENGTH@ 141
---INS Modifier@@public @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9216 @LENGTH@ 6
---INS SimpleType@@BUILDER @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9223 @LENGTH@ 7
---INS SimpleName@@MethodName:setDeprecated @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9231 @LENGTH@ 13
---INS SingleVariableDeclaration@@ModelVersion since @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9245 @LENGTH@ 18
------INS SimpleType@@ModelVersion @TO@ SingleVariableDeclaration@@ModelVersion since @AT@ 9245 @LENGTH@ 12
------INS SimpleName@@since @TO@ SingleVariableDeclaration@@ModelVersion since @AT@ 9258 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:this.deprecated=new DeprecationData(since) @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9275 @LENGTH@ 45
------INS Assignment@@this.deprecated=new DeprecationData(since) @TO@ ExpressionStatement@@Assignment:this.deprecated=new DeprecationData(since) @AT@ 9275 @LENGTH@ 44
---------INS FieldAccess@@this.deprecated @TO@ Assignment@@this.deprecated=new DeprecationData(since) @AT@ 9275 @LENGTH@ 15
------------INS ThisExpression@@this @TO@ FieldAccess@@this.deprecated @AT@ 9275 @LENGTH@ 4
------------INS SimpleName@@deprecated @TO@ FieldAccess@@this.deprecated @AT@ 9280 @LENGTH@ 10
---------INS Operator@@= @TO@ Assignment@@this.deprecated=new DeprecationData(since) @AT@ 9290 @LENGTH@ 1
---------INS ClassInstanceCreation@@DeprecationData[since] @TO@ Assignment@@this.deprecated=new DeprecationData(since) @AT@ 9293 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@DeprecationData[since] @AT@ 9293 @LENGTH@ 3
------------INS SimpleType@@DeprecationData @TO@ ClassInstanceCreation@@DeprecationData[since] @AT@ 9297 @LENGTH@ 15
------------INS SimpleName@@since @TO@ ClassInstanceCreation@@DeprecationData[since] @AT@ 9313 @LENGTH@ 5
---INS ReturnStatement@@CastExpression:(BUILDER)this @TO@ MethodDeclaration@@public, BUILDER, MethodName:setDeprecated, ModelVersion since,  @AT@ 9329 @LENGTH@ 22
------INS CastExpression@@(BUILDER)this @TO@ ReturnStatement@@CastExpression:(BUILDER)this @AT@ 9336 @LENGTH@ 14
---------INS SimpleType@@BUILDER @TO@ CastExpression@@(BUILDER)this @AT@ 9337 @LENGTH@ 7
---------INS ThisExpression@@this @TO@ CastExpression@@(BUILDER)this @AT@ 9346 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @TO@ TypeDeclaration@@[public]JandexAnnotationProvider, AnnotationProvider @AT@ 1676 @LENGTH@ 93
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 1676 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 1683 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 1690 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 1696 @LENGTH@ 6
---INS VariableDeclarationFragment@@FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS" @TO@ FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 1703 @LENGTH@ 65
------INS SimpleName@@FACES_ANNOTATIONS_SC_ATTR @TO@ VariableDeclarationFragment@@FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS" @AT@ 1703 @LENGTH@ 25
------INS StringLiteral@@"org.jboss.as.jsf.FACES_ANNOTATIONS" @TO@ VariableDeclarationFragment@@FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS" @AT@ 1732 @LENGTH@ 36


UPD IfStatement@@if (model.isDefined()) {  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }  if (defaults) {    final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);    final Locale locale=getLocale(context,operation);    final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);    if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {      for (      String key : nodeDescription.get(ATTRIBUTES).keys()) {        if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {          directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));        }      }    }  }} @TO@ if (model.isDefined()) {  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }} @AT@ 11049 @LENGTH@ 1502
---UPD Block@@ThenBody:{  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }  if (defaults) {    final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);    final Locale locale=getLocale(context,operation);    final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);    if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {      for (      String key : nodeDescription.get(ATTRIBUTES).keys()) {        if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {          directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));        }      }    }  }} @TO@ ThenBody:{  for (  String key : model.keys()) {    if (!childrenByType.containsKey(key)) {      directAttributes.put(key,model.get(key));    }  }} @AT@ 11072 @LENGTH@ 1479


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(100) @TO@ MethodInvocation:Thread.sleep(1000) @AT@ 2044 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(100) @TO@ Thread.sleep(1000) @AT@ 2044 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[100] @TO@ MethodName:sleep:[1000] @AT@ 2051 @LENGTH@ 10
---------UPD NumberLiteral@@100 @TO@ 1000 @AT@ 2057 @LENGTH@ 3


UPD ThrowStatement@@ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @TO@ ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @AT@ 8915 @LENGTH@ 537
---UPD ClassInstanceCreation@@LifecycleException["The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @TO@ LifecycleException["The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @AT@ 8921 @LENGTH@ 530
------UPD InfixExpression@@"The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @TO@ "The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @AT@ 8944 @LENGTH@ 506
---------UPD StringLiteral@@"Managed containers does not support connecting to running server instances due to the " @TO@ "Managed containers do not support connecting to running server instances due to the " @AT@ 8996 @LENGTH@ 88


UPD TryStatement@@try {  preBoot(bootOperations,rollbackOnRuntimeFailure);  if (validateOps == OperationValidation.EXIT_ON_VALIDATION_ERROR) {    new OperationValidator(rootRegistration).validateOperations(bootOperations);  } else   if (validateOps == OperationValidation.LOG_VALIDATION_ERRORS) {    new OperationValidator(rootRegistration,true,true,false).validateOperations(bootOperations);  }  bootSuccess=super.boot(persister.getBootOperations(),rollbackOnRuntimeFailure);  return bootSuccess;} catch (Exception e) {  error=e;}catch (Throwable t) {  error=new Exception(t);} finally {  postBoot();  latch.countDown();} @TO@ try {  preBoot(bootOperations,rollbackOnRuntimeFailure);  if (validateOps == OperationValidation.EXIT_ON_VALIDATION_ERROR) {    new OperationValidator(rootRegistration).validateOperations(bootOperations);  } else   if (validateOps == OperationValidation.LOG_VALIDATION_ERRORS) {    new OperationValidator(rootRegistration,true,true,false).validateOperations(bootOperations);  }  bootSuccess=super.boot(persister.getBootOperations(),rollbackOnRuntimeFailure);  return bootSuccess;} catch (Exception e) {  error=e;}catch (Throwable t) {  error=new Exception(t);} finally {  postBoot();} @AT@ 9762 @LENGTH@ 785
---UPD Block@@FinallyBody:{  postBoot();  latch.countDown();} @TO@ FinallyBody:{  postBoot();} @AT@ 10481 @LENGTH@ 66


UPD FieldDeclaration@@public, static, final, String, [NEWLINE=Util.getLineSeparator()] @TO@ public, static, final, String, [NEWLINE=Util.LINE_SEPARATOR] @AT@ 1597 @LENGTH@ 61
---UPD VariableDeclarationFragment@@NEWLINE=Util.getLineSeparator() @TO@ NEWLINE=Util.LINE_SEPARATOR @AT@ 1624 @LENGTH@ 33
------DEL MethodInvocation@@Util.getLineSeparator() @AT@ 1634 @LENGTH@ 23
---------DEL SimpleName@@Name:Util @AT@ 1634 @LENGTH@ 4
---------DEL SimpleName@@MethodName:getLineSeparator:[] @AT@ 1639 @LENGTH@ 18
------INS QualifiedName@@Util.LINE_SEPARATOR @TO@ VariableDeclarationFragment@@NEWLINE=Util.getLineSeparator() @AT@ 1634 @LENGTH@ 19
---------INS SimpleName@@Util @TO@ QualifiedName@@Util.LINE_SEPARATOR @AT@ 1634 @LENGTH@ 4
---------INS SimpleName@@LINE_SEPARATOR @TO@ QualifiedName@@Util.LINE_SEPARATOR @AT@ 1639 @LENGTH@ 14


INS MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 15792 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15792 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15799 @LENGTH@ 7
---INS SimpleName@@MethodName:syncContent @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15807 @LENGTH@ 11
---INS SingleVariableDeclaration@@byte[] hash @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15819 @LENGTH@ 11
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] hash @AT@ 15819 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 15819 @LENGTH@ 4
------INS SimpleName@@hash @TO@ SingleVariableDeclaration@@byte[] hash @AT@ 15826 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15850 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 15857 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:resultClosure=CollectionUtils.forAllDo(col,null) @TO@ Assignment:resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @AT@ 22308 @LENGTH@ 52
---UPD Assignment@@resultClosure=CollectionUtils.forAllDo(col,null) @TO@ resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @AT@ 22308 @LENGTH@ 51
------UPD MethodInvocation@@CollectionUtils.forAllDo(col,null) @TO@ CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @AT@ 22324 @LENGTH@ 35


UPD ThrowStatement@@ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @TO@ ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @AT@ 11084 @LENGTH@ 603
---UPD ClassInstanceCreation@@LifecycleException["The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @TO@ LifecycleException["The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @AT@ 11090 @LENGTH@ 596
------UPD InfixExpression@@"The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @TO@ "The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @AT@ 11130 @LENGTH@ 546
---------UPD StringLiteral@@"Managed containers does not support connecting to running server instances due to the " @TO@ "Managed containers do not support connecting to running server instances due to the " @AT@ 11190 @LENGTH@ 88


UPD ExpressionStatement@@MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @TO@ MethodInvocation:from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 800
---UPD MethodInvocation@@from("file://target/deletefile?delete=true&initialDelay=0&delay=10").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @TO@ from("file://target/deletefile?delete=true&initialDelay=0&delay=30").process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    counter++;
    if (counter < 3) {
      File file=new File("./target/deletefile/hello.txt").getAbsoluteFile();
      assertTrue("The file should NOT have been deleted",file.exists());
      throw new IllegalArgumentException("Forced by unittest");
    }
  }
}
).convertBodyTo(String.class).to("mock:result") @AT@ 2216 @LENGTH@ 799
------UPD MethodInvocation@@MethodName:from:["file://target/deletefile?delete=true&initialDelay=0&delay=10"] @TO@ MethodName:from:["file://target/deletefile?delete=true&initialDelay=0&delay=30"] @AT@ 2216 @LENGTH@ 68
---------UPD StringLiteral@@"file://target/deletefile?delete=true&initialDelay=0&delay=10" @TO@ "file://target/deletefile?delete=true&initialDelay=0&delay=30" @AT@ 2221 @LENGTH@ 62


MOV ExpressionStatement@@MethodInvocation:callbackHandler.leavingState(this) @TO@ MethodDeclaration@@public, ParsingState, MethodName:leaveState, CommandFormatException,  @AT@ 3520 @LENGTH@ 35


UPD ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Unrecognized argument " + argName + " for command '"+ operation+ "'.") @TO@ ClassInstanceCreation:new CommandFormatException("Unrecognized argument " + argName + " for command '"+ opName+ "'.") @AT@ 42420 @LENGTH@ 107
---UPD ClassInstanceCreation@@CommandFormatException["Unrecognized argument " + argName + " for command '"+ operation+ "'."] @TO@ CommandFormatException["Unrecognized argument " + argName + " for command '"+ opName+ "'."] @AT@ 42426 @LENGTH@ 100
------UPD InfixExpression@@"Unrecognized argument " + argName + " for command '"+ operation+ "'." @TO@ "Unrecognized argument " + argName + " for command '"+ opName+ "'." @AT@ 42453 @LENGTH@ 72
---------UPD SimpleName@@operation @TO@ opName @AT@ 42509 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build()] @AT@ 2776 @LENGTH@ 221
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build() @AT@ 2816 @LENGTH@ 180
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build() @AT@ 2829 @LENGTH@ 167
---------UPD MethodInvocation@@MethodName:setReplyParameters:[NAMESPACE, URI] @TO@ MethodName:setParameters:[NAMESPACE, URI] @AT@ 2829 @LENGTH@ 146


UPD VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Dictionary<String,String> props=new Hashtable<String,String>(); @AT@ 1322 @LENGTH@ 36
---DEL SimpleType@@Properties @AT@ 1322 @LENGTH@ 10
---UPD VariableDeclarationFragment@@props=new Properties() @TO@ props=new Hashtable<String,String>() @AT@ 1333 @LENGTH@ 24
------UPD ClassInstanceCreation@@Properties[] @TO@ Hashtable<String,String>[] @AT@ 1341 @LENGTH@ 16
---------DEL SimpleType@@Properties @AT@ 1345 @LENGTH@ 10
---------INS ParameterizedType@@Hashtable<String,String> @TO@ ClassInstanceCreation@@Properties[] @AT@ 1392 @LENGTH@ 25
------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1392 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1402 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1410 @LENGTH@ 6
---INS ParameterizedType@@Dictionary<String,String> @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 1353 @LENGTH@ 26
------INS SimpleType@@Dictionary @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1353 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1364 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1372 @LENGTH@ 6


INS MethodDeclaration@@public, ResourceProcessor<Resource<Person>>, MethodName:personProcessor,  @TO@ TypeDeclaration@@[@Configuration, @Import(RepositoryRestMvcConfiguration.class), @ComponentScan(basePackageClasses=ApplicationConfig.class), @EnableJpaRepositories, @EnableTransactionManagement, public]ApplicationConfig,  @AT@ 3444 @LENGTH@ 397
---INS Modifier@@public @TO@ MethodDeclaration@@public, ResourceProcessor<Resource<Person>>, MethodName:personProcessor,  @AT@ 3444 @LENGTH@ 6
---INS ParameterizedType@@ResourceProcessor<Resource<Person>> @TO@ MethodDeclaration@@public, ResourceProcessor<Resource<Person>>, MethodName:personProcessor,  @AT@ 3451 @LENGTH@ 35
------INS SimpleType@@ResourceProcessor @TO@ ParameterizedType@@ResourceProcessor<Resource<Person>> @AT@ 3451 @LENGTH@ 17
------INS ParameterizedType@@Resource<Person> @TO@ ParameterizedType@@ResourceProcessor<Resource<Person>> @AT@ 3469 @LENGTH@ 16
---------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Person> @AT@ 3469 @LENGTH@ 8
---------INS SimpleType@@Person @TO@ ParameterizedType@@Resource<Person> @AT@ 3478 @LENGTH@ 6
---INS SimpleName@@MethodName:personProcessor @TO@ MethodDeclaration@@public, ResourceProcessor<Resource<Person>>, MethodName:personProcessor,  @AT@ 3487 @LENGTH@ 15
---INS ReturnStatement@@ClassInstanceCreation:new ResourceProcessor<Resource<Person>>(){
  @Override public Resource<Person> process(  Resource<Person> resource){
    System.out.println("\t***** ResourceProcessor for Person: " + resource);
    resource.add(new Link("http://localhost:8080/people","added-link"));
    return resource;
  }
}
 @TO@ MethodDeclaration@@public, ResourceProcessor<Resource<Person>>, MethodName:personProcessor,  @AT@ 3511 @LENGTH@ 326
------INS ClassInstanceCreation@@ResourceProcessor<Resource<Person>>[] @TO@ ReturnStatement@@ClassInstanceCreation:new ResourceProcessor<Resource<Person>>(){
  @Override public Resource<Person> process(  Resource<Person> resource){
    System.out.println("\t***** ResourceProcessor for Person: " + resource);
    resource.add(new Link("http://localhost:8080/people","added-link"));
    return resource;
  }
}
 @AT@ 3518 @LENGTH@ 318
---------INS New@@new @TO@ ClassInstanceCreation@@ResourceProcessor<Resource<Person>>[] @AT@ 3518 @LENGTH@ 3
---------INS ParameterizedType@@ResourceProcessor<Resource<Person>> @TO@ ClassInstanceCreation@@ResourceProcessor<Resource<Person>>[] @AT@ 3522 @LENGTH@ 35
------------INS SimpleType@@ResourceProcessor @TO@ ParameterizedType@@ResourceProcessor<Resource<Person>> @AT@ 3522 @LENGTH@ 17
------------INS ParameterizedType@@Resource<Person> @TO@ ParameterizedType@@ResourceProcessor<Resource<Person>> @AT@ 3540 @LENGTH@ 16
---------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Person> @AT@ 3540 @LENGTH@ 8
---------------INS SimpleType@@Person @TO@ ParameterizedType@@Resource<Person> @AT@ 3549 @LENGTH@ 6
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ResourceProcessor<Resource<Person>>[] @AT@ 3560 @LENGTH@ 276
------------INS MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3578 @LENGTH@ 252
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3578 @LENGTH@ 6
---------------INS ParameterizedType@@Resource<Person> @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3585 @LENGTH@ 16
------------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Person> @AT@ 3585 @LENGTH@ 8
------------------INS SimpleType@@Person @TO@ ParameterizedType@@Resource<Person> @AT@ 3594 @LENGTH@ 6
---------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3602 @LENGTH@ 7
---------------INS SingleVariableDeclaration@@Resource<Person> resource @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3610 @LENGTH@ 25
------------------INS ParameterizedType@@Resource<Person> @TO@ SingleVariableDeclaration@@Resource<Person> resource @AT@ 3610 @LENGTH@ 16
---------------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<Person> @AT@ 3610 @LENGTH@ 8
---------------------INS SimpleType@@Person @TO@ ParameterizedType@@Resource<Person> @AT@ 3619 @LENGTH@ 6
------------------INS SimpleName@@resource @TO@ SingleVariableDeclaration@@Resource<Person> resource @AT@ 3627 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:System.out.println("\t***** ResourceProcessor for Person: " + resource) @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3647 @LENGTH@ 72
------------------INS MethodInvocation@@System.out.println("\t***** ResourceProcessor for Person: " + resource) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("\t***** ResourceProcessor for Person: " + resource) @AT@ 3647 @LENGTH@ 71
---------------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("\t***** ResourceProcessor for Person: " + resource) @AT@ 3647 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:println:["\t***** ResourceProcessor for Person: " + resource] @TO@ MethodInvocation@@System.out.println("\t***** ResourceProcessor for Person: " + resource) @AT@ 3658 @LENGTH@ 60
------------------------INS InfixExpression@@"\t***** ResourceProcessor for Person: " + resource @TO@ SimpleName@@MethodName:println:["\t***** ResourceProcessor for Person: " + resource] @AT@ 3666 @LENGTH@ 51
---------------------------INS StringLiteral@@"\t***** ResourceProcessor for Person: " @TO@ InfixExpression@@"\t***** ResourceProcessor for Person: " + resource @AT@ 3666 @LENGTH@ 40
---------------------------INS Operator@@+ @TO@ InfixExpression@@"\t***** ResourceProcessor for Person: " + resource @AT@ 3706 @LENGTH@ 1
---------------------------INS SimpleName@@resource @TO@ InfixExpression@@"\t***** ResourceProcessor for Person: " + resource @AT@ 3709 @LENGTH@ 8
---------------INS ExpressionStatement@@MethodInvocation:resource.add(new Link("http://localhost:8080/people","added-link")) @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3728 @LENGTH@ 69
------------------INS MethodInvocation@@resource.add(new Link("http://localhost:8080/people","added-link")) @TO@ ExpressionStatement@@MethodInvocation:resource.add(new Link("http://localhost:8080/people","added-link")) @AT@ 3728 @LENGTH@ 68
---------------------INS SimpleName@@Name:resource @TO@ MethodInvocation@@resource.add(new Link("http://localhost:8080/people","added-link")) @AT@ 3728 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:add:[new Link("http://localhost:8080/people","added-link")] @TO@ MethodInvocation@@resource.add(new Link("http://localhost:8080/people","added-link")) @AT@ 3737 @LENGTH@ 59
------------------------INS ClassInstanceCreation@@Link["http://localhost:8080/people", "added-link"] @TO@ SimpleName@@MethodName:add:[new Link("http://localhost:8080/people","added-link")] @AT@ 3741 @LENGTH@ 54
---------------------------INS New@@new @TO@ ClassInstanceCreation@@Link["http://localhost:8080/people", "added-link"] @AT@ 3741 @LENGTH@ 3
---------------------------INS SimpleType@@Link @TO@ ClassInstanceCreation@@Link["http://localhost:8080/people", "added-link"] @AT@ 3745 @LENGTH@ 4
---------------------------INS StringLiteral@@"http://localhost:8080/people" @TO@ ClassInstanceCreation@@Link["http://localhost:8080/people", "added-link"] @AT@ 3750 @LENGTH@ 30
---------------------------INS StringLiteral@@"added-link" @TO@ ClassInstanceCreation@@Link["http://localhost:8080/people", "added-link"] @AT@ 3782 @LENGTH@ 12
---------------INS ReturnStatement@@SimpleName:resource @TO@ MethodDeclaration@@public, Resource<Person>, MethodName:process, Resource<Person> resource,  @AT@ 3806 @LENGTH@ 16
------------------INS SimpleName@@resource @TO@ ReturnStatement@@SimpleName:resource @AT@ 3813 @LENGTH@ 8


UPD MethodDeclaration@@public, static, List<O>, O, MethodName:select, Collection<? extends O> inputCollection, Predicate<? super O> predicate,  @TO@ public, static, List<E>, E, MethodName:select, Collection<? extends E> inputCollection, Predicate<? super E> predicate,  @AT@ 5839 @LENGTH@ 234
---UPD ParameterizedType@@List<O> @TO@ List<E> @AT@ 5857 @LENGTH@ 7
------UPD SimpleType@@O @TO@ E @AT@ 5862 @LENGTH@ 1
---UPD SingleVariableDeclaration@@Collection<? extends O> inputCollection @TO@ Collection<? extends E> inputCollection @AT@ 5872 @LENGTH@ 39
------UPD ParameterizedType@@Collection<? extends O> @TO@ Collection<? extends E> @AT@ 5872 @LENGTH@ 23
---UPD SingleVariableDeclaration@@Predicate<? super O> predicate @TO@ Predicate<? super E> predicate @AT@ 5925 @LENGTH@ 30
------UPD ParameterizedType@@Predicate<? super O> @TO@ Predicate<? super E> @AT@ 5925 @LENGTH@ 20
---UPD ReturnStatement@@MethodInvocation:CollectionUtils.select(inputCollection,predicate,new ArrayList<O>(inputCollection.size())) @TO@ MethodInvocation:CollectionUtils.select(inputCollection,predicate,new ArrayList<E>(inputCollection.size())) @AT@ 5967 @LENGTH@ 100
------UPD MethodInvocation@@CollectionUtils.select(inputCollection,predicate,new ArrayList<O>(inputCollection.size())) @TO@ CollectionUtils.select(inputCollection,predicate,new ArrayList<E>(inputCollection.size())) @AT@ 5974 @LENGTH@ 92
---------UPD SimpleName@@MethodName:select:[inputCollection, predicate, new ArrayList<O>(inputCollection.size())] @TO@ MethodName:select:[inputCollection, predicate, new ArrayList<E>(inputCollection.size())] @AT@ 5990 @LENGTH@ 76
------------UPD ClassInstanceCreation@@ArrayList<O>[inputCollection.size()] @TO@ ArrayList<E>[inputCollection.size()] @AT@ 6025 @LENGTH@ 40
---------------UPD ParameterizedType@@ArrayList<O> @TO@ ArrayList<E> @AT@ 6029 @LENGTH@ 12
------------------UPD SimpleType@@O @TO@ E @AT@ 6039 @LENGTH@ 1


UPD TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @TO@ try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 9712 @LENGTH@ 772
---INS VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @TO@ TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 9815 @LENGTH@ 88
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9815 @LENGTH@ 5
------INS SimpleType@@HostControllerUpdateTask.ExecutedHostRequest @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9821 @LENGTH@ 44
------INS VariableDeclarationFragment@@request=finalResults.get(hostName) @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9866 @LENGTH@ 36
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=finalResults.get(hostName) @AT@ 9866 @LENGTH@ 7
---------INS MethodInvocation@@finalResults.get(hostName) @TO@ VariableDeclarationFragment@@request=finalResults.get(hostName) @AT@ 9876 @LENGTH@ 26
------------INS SimpleName@@Name:finalResults @TO@ MethodInvocation@@finalResults.get(hostName) @AT@ 9876 @LENGTH@ 12
------------INS SimpleName@@MethodName:get:[hostName] @TO@ MethodInvocation@@finalResults.get(hostName) @AT@ 9889 @LENGTH@ 13
---------------INS SimpleName@@hostName @TO@ SimpleName@@MethodName:get:[hostName] @AT@ 9893 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:domainOperationContext.addHostControllerResult(hostName,finalResult) @TO@ MethodInvocation:domainOperationContext.addHostControllerResult(hostName,transformedResult) @AT@ 9829 @LENGTH@ 70
------UPD MethodInvocation@@domainOperationContext.addHostControllerResult(hostName,finalResult) @TO@ domainOperationContext.addHostControllerResult(hostName,transformedResult) @AT@ 9829 @LENGTH@ 69
---------UPD SimpleName@@MethodName:addHostControllerResult:[hostName, finalResult] @TO@ MethodName:addHostControllerResult:[hostName, transformedResult] @AT@ 9852 @LENGTH@ 46
------------UPD SimpleName@@finalResult @TO@ transformedResult @AT@ 9886 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @TO@ TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 10015 @LENGTH@ 73
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10015 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10021 @LENGTH@ 9
------INS VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10031 @LENGTH@ 56
---------INS SimpleName@@transformedResult @TO@ VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @AT@ 10031 @LENGTH@ 17
---------INS MethodInvocation@@request.transformResult(finalResult) @TO@ VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @AT@ 10051 @LENGTH@ 36
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.transformResult(finalResult) @AT@ 10051 @LENGTH@ 7
------------INS SimpleName@@MethodName:transformResult:[finalResult] @TO@ MethodInvocation@@request.transformResult(finalResult) @AT@ 10059 @LENGTH@ 28
---------------INS SimpleName@@finalResult @TO@ SimpleName@@MethodName:transformResult:[finalResult] @AT@ 10075 @LENGTH@ 11


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpProduceTempFileTest, SftpServerTestSupport @TO@ [public]SftpProduceTempFileTest, SftpServerTestSupport @AT@ 1023 @LENGTH@ 1471
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1023 @LENGTH@ 79


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException(String.format("Failed to locate %s",xml_file)) @TO@ ClassInstanceCreation:new IllegalStateException(JGroupsMessages.MESSAGES.notFound(xml_file)) @AT@ 15469 @LENGTH@ 80
---UPD ClassInstanceCreation@@IllegalStateException[String.format("Failed to locate %s",xml_file)] @TO@ IllegalStateException[JGroupsMessages.MESSAGES.notFound(xml_file)] @AT@ 15475 @LENGTH@ 73
------UPD MethodInvocation@@String.format("Failed to locate %s",xml_file) @TO@ JGroupsMessages.MESSAGES.notFound(xml_file) @AT@ 15501 @LENGTH@ 46
---------DEL SimpleName@@Name:String @AT@ 15501 @LENGTH@ 6
---------UPD SimpleName@@MethodName:format:["Failed to locate %s", xml_file] @TO@ MethodName:notFound:[xml_file] @AT@ 15508 @LENGTH@ 39
------------DEL StringLiteral@@"Failed to locate %s" @AT@ 15515 @LENGTH@ 21
---------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@String.format("Failed to locate %s",xml_file) @AT@ 15557 @LENGTH@ 24


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @TO@ MethodInvocation:JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),transportRelativePath.toString()) @AT@ 2145 @LENGTH@ 107
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("property " + property.getName() + " not defined")] @AT@ 2151 @LENGTH@ 100
------DEL New@@new @AT@ 2151 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 2155 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("property " + property.getName() + " not defined") @AT@ 2180 @LENGTH@ 70
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 2180 @LENGTH@ 15
------------DEL New@@new @AT@ 2180 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 2184 @LENGTH@ 9
---INS MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),transportRelativePath.toString()) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @AT@ 2329 @LENGTH@ 97
------MOV SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),transportRelativePath.toString()) @AT@ 2196 @LENGTH@ 54
---------DEL InfixExpression@@"property " + property.getName() + " not defined" @AT@ 2200 @LENGTH@ 49
------------DEL StringLiteral@@"property " @AT@ 2200 @LENGTH@ 11
------------DEL Operator@@+ @AT@ 2211 @LENGTH@ 1
------------DEL MethodInvocation@@property.getName() @AT@ 2214 @LENGTH@ 18
------------DEL StringLiteral@@" not defined" @AT@ 2235 @LENGTH@ 14
---------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @AT@ 2373 @LENGTH@ 18
------------MOV SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 2214 @LENGTH@ 8
------------MOV SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 2214 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 2223 @LENGTH@ 9
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 2223 @LENGTH@ 9
---------INS MethodInvocation@@transportRelativePath.toString() @TO@ SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @AT@ 2393 @LENGTH@ 32
------------INS SimpleName@@Name:transportRelativePath @TO@ MethodInvocation@@transportRelativePath.toString() @AT@ 2393 @LENGTH@ 21
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@transportRelativePath.toString() @AT@ 2415 @LENGTH@ 10
------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),transportRelativePath.toString()) @AT@ 2329 @LENGTH@ 24


INS IfStatement@@if (!property.isEntity()) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:doWith, Field field,  @AT@ 12882 @LENGTH@ 44
---INS PrefixExpression@@!property.isEntity() @TO@ IfStatement@@if (!property.isEntity()) {  return;} @AT@ 12886 @LENGTH@ 20
------INS Operator@@! @TO@ PrefixExpression@@!property.isEntity() @AT@ 12886 @LENGTH@ 1
------INS MethodInvocation@@property.isEntity() @TO@ PrefixExpression@@!property.isEntity() @AT@ 12887 @LENGTH@ 19
---------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.isEntity() @AT@ 12887 @LENGTH@ 8
---------INS SimpleName@@MethodName:isEntity:[] @TO@ MethodInvocation@@property.isEntity() @AT@ 12896 @LENGTH@ 10
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (!property.isEntity()) {  return;} @AT@ 12908 @LENGTH@ 18
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 12914 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 3006 @LENGTH@ 86
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 3006 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("Unknown")] @AT@ 3006 @LENGTH@ 85
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 3072 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 3086 @LENGTH@ 3


UPD IfStatement@@if (securityRoles != null && runAsPrincipal != null) {  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @TO@ if (securityRoles != null) {  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  if (runAsPrincipal != null)   extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @AT@ 3115 @LENGTH@ 230
---DEL InfixExpression@@securityRoles != null && runAsPrincipal != null @AT@ 3119 @LENGTH@ 47
------DEL InfixExpression@@securityRoles != null @AT@ 3119 @LENGTH@ 21
------DEL Operator@@&& @AT@ 3140 @LENGTH@ 2
------DEL InfixExpression@@runAsPrincipal != null @AT@ 3144 @LENGTH@ 22
---------DEL SimpleName@@runAsPrincipal @AT@ 3144 @LENGTH@ 14
---------DEL Operator@@!= @AT@ 3158 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3162 @LENGTH@ 4
---INS InfixExpression@@securityRoles != null @TO@ IfStatement@@if (securityRoles != null && runAsPrincipal != null) {  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @AT@ 3119 @LENGTH@ 21
------MOV SimpleName@@securityRoles @TO@ InfixExpression@@securityRoles != null @AT@ 3119 @LENGTH@ 13
------MOV Operator@@!= @TO@ InfixExpression@@securityRoles != null @AT@ 3132 @LENGTH@ 2
------MOV NullLiteral@@null @TO@ InfixExpression@@securityRoles != null @AT@ 3136 @LENGTH@ 4
---UPD Block@@ThenBody:{  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @TO@ ThenBody:{  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  if (runAsPrincipal != null)   extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @AT@ 3168 @LENGTH@ 177
------INS IfStatement@@if (runAsPrincipal != null) extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal); @TO@ Block@@ThenBody:{  principalVsRolesMap=securityRoles.getPrincipalVersusRolesMap();  extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal);} @AT@ 3234 @LENGTH@ 119
---------INS InfixExpression@@runAsPrincipal != null @TO@ IfStatement@@if (runAsPrincipal != null) extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal); @AT@ 3238 @LENGTH@ 22
------------INS SimpleName@@runAsPrincipal @TO@ InfixExpression@@runAsPrincipal != null @AT@ 3238 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@runAsPrincipal != null @AT@ 3252 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@runAsPrincipal != null @AT@ 3256 @LENGTH@ 4
---------INS Block@@ThenBody:extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal); @TO@ IfStatement@@if (runAsPrincipal != null) extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal); @AT@ 3278 @LENGTH@ 75
------------MOV ExpressionStatement@@Assignment:extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal) @TO@ Block@@ThenBody:extraRoles=securityRoles.getSecurityRoleNamesByPrincipal(runAsPrincipal); @AT@ 3260 @LENGTH@ 75


INS MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @TO@ TypeDeclaration@@[public]AmazonSQSClientMock, AmazonSQSClient @AT@ 1928 @LENGTH@ 178
---INS Modifier@@public @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 1928 @LENGTH@ 6
---INS SimpleType@@ListQueuesResult @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 1935 @LENGTH@ 16
---INS SimpleName@@MethodName:listQueues @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 1952 @LENGTH@ 10
---INS SimpleType@@AmazonServiceException @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 1972 @LENGTH@ 22
---INS SimpleType@@AmazonClientException @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 1996 @LENGTH@ 21
---INS VariableDeclarationStatement@@ListQueuesResult result=new ListQueuesResult(); @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 2028 @LENGTH@ 49
------INS SimpleType@@ListQueuesResult @TO@ VariableDeclarationStatement@@ListQueuesResult result=new ListQueuesResult(); @AT@ 2028 @LENGTH@ 16
------INS VariableDeclarationFragment@@result=new ListQueuesResult() @TO@ VariableDeclarationStatement@@ListQueuesResult result=new ListQueuesResult(); @AT@ 2045 @LENGTH@ 31
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=new ListQueuesResult() @AT@ 2045 @LENGTH@ 6
---------INS ClassInstanceCreation@@ListQueuesResult[] @TO@ VariableDeclarationFragment@@result=new ListQueuesResult() @AT@ 2054 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@ListQueuesResult[] @AT@ 2054 @LENGTH@ 3
------------INS SimpleType@@ListQueuesResult @TO@ ClassInstanceCreation@@ListQueuesResult[] @AT@ 2058 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, ListQueuesResult, MethodName:listQueues, AmazonServiceException, AmazonClientException,  @AT@ 2086 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 2093 @LENGTH@ 6


DEL FieldDeclaration@@private, final, Collection<ProcessAnnotatedType<?>>, [routeBuilders=new ArrayList<ProcessAnnotatedType<?>>()] @AT@ 3127 @LENGTH@ 107
---DEL Modifier@@private @AT@ 3127 @LENGTH@ 7
---DEL Modifier@@final @AT@ 3135 @LENGTH@ 5
---DEL ParameterizedType@@Collection<ProcessAnnotatedType<?>> @AT@ 3141 @LENGTH@ 35
------DEL SimpleType@@Collection @AT@ 3141 @LENGTH@ 10
------DEL ParameterizedType@@ProcessAnnotatedType<?> @AT@ 3152 @LENGTH@ 23
---------DEL SimpleType@@ProcessAnnotatedType @AT@ 3152 @LENGTH@ 20
---------DEL WildcardType@@? @AT@ 3173 @LENGTH@ 1
---DEL VariableDeclarationFragment@@routeBuilders=new ArrayList<ProcessAnnotatedType<?>>() @AT@ 3177 @LENGTH@ 56
------DEL SimpleName@@routeBuilders @AT@ 3177 @LENGTH@ 13
------DEL ClassInstanceCreation@@ArrayList<ProcessAnnotatedType<?>>[] @AT@ 3193 @LENGTH@ 40
---------DEL New@@new @AT@ 3193 @LENGTH@ 3
---------DEL ParameterizedType@@ArrayList<ProcessAnnotatedType<?>> @AT@ 3197 @LENGTH@ 34
------------DEL SimpleType@@ArrayList @AT@ 3197 @LENGTH@ 9
------------DEL ParameterizedType@@ProcessAnnotatedType<?> @AT@ 3207 @LENGTH@ 23
---------------DEL SimpleType@@ProcessAnnotatedType @AT@ 3207 @LENGTH@ 20
---------------DEL WildcardType@@? @AT@ 3228 @LENGTH@ 1


INS MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @TO@ TypeDeclaration@@[public]ServerSecurityManager,  @AT@ 1927 @LENGTH@ 138
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1919 @LENGTH@ 7
---INS SimpleName@@MethodName:authorize @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1927 @LENGTH@ 9
---INS SingleVariableDeclaration@@String ejbName @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1937 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String ejbName @AT@ 1937 @LENGTH@ 6
------INS SimpleName@@ejbName @TO@ SingleVariableDeclaration@@String ejbName @AT@ 1944 @LENGTH@ 7
---INS SingleVariableDeclaration@@CodeSource ejbCodeSource @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1953 @LENGTH@ 24
------INS SimpleType@@CodeSource @TO@ SingleVariableDeclaration@@CodeSource ejbCodeSource @AT@ 1953 @LENGTH@ 10
------INS SimpleName@@ejbCodeSource @TO@ SingleVariableDeclaration@@CodeSource ejbCodeSource @AT@ 1964 @LENGTH@ 13
---INS SingleVariableDeclaration@@String ejbMethodIntf @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1979 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String ejbMethodIntf @AT@ 1979 @LENGTH@ 6
------INS SimpleName@@ejbMethodIntf @TO@ SingleVariableDeclaration@@String ejbMethodIntf @AT@ 1986 @LENGTH@ 13
---INS SingleVariableDeclaration@@Method ejbMethod @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2001 @LENGTH@ 16
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@Method ejbMethod @AT@ 2001 @LENGTH@ 6
------INS SimpleName@@ejbMethod @TO@ SingleVariableDeclaration@@Method ejbMethod @AT@ 2008 @LENGTH@ 9
---INS SingleVariableDeclaration@@Set<Principal> methodRoles @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2019 @LENGTH@ 26
------INS ParameterizedType@@Set<Principal> @TO@ SingleVariableDeclaration@@Set<Principal> methodRoles @AT@ 2019 @LENGTH@ 14
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Principal> @AT@ 2019 @LENGTH@ 3
---------INS SimpleType@@Principal @TO@ ParameterizedType@@Set<Principal> @AT@ 2023 @LENGTH@ 9
------INS SimpleName@@methodRoles @TO@ SingleVariableDeclaration@@Set<Principal> methodRoles @AT@ 2034 @LENGTH@ 11
---INS SingleVariableDeclaration@@String contextID @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2047 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String contextID @AT@ 2047 @LENGTH@ 6
------INS SimpleName@@contextID @TO@ SingleVariableDeclaration@@String contextID @AT@ 2054 @LENGTH@ 9


UPD VariableDeclarationStatement@@File file=new File(resource.getFile()); @TO@ File file=new File(URLDecoder.decode(resource.getFile(),"UTF-8")); @AT@ 6685 @LENGTH@ 41
---UPD VariableDeclarationFragment@@file=new File(resource.getFile()) @TO@ file=new File(URLDecoder.decode(resource.getFile(),"UTF-8")) @AT@ 6690 @LENGTH@ 35
------UPD ClassInstanceCreation@@File[resource.getFile()] @TO@ File[URLDecoder.decode(resource.getFile(),"UTF-8")] @AT@ 6697 @LENGTH@ 28
---------DEL MethodInvocation@@resource.getFile() @AT@ 6706 @LENGTH@ 18
---------INS MethodInvocation@@URLDecoder.decode(resource.getFile(),"UTF-8") @TO@ ClassInstanceCreation@@File[resource.getFile()] @AT@ 6744 @LENGTH@ 46
------------INS SimpleName@@Name:URLDecoder @TO@ MethodInvocation@@URLDecoder.decode(resource.getFile(),"UTF-8") @AT@ 6744 @LENGTH@ 10
------------INS SimpleName@@MethodName:decode:[resource.getFile(), "UTF-8"] @TO@ MethodInvocation@@URLDecoder.decode(resource.getFile(),"UTF-8") @AT@ 6755 @LENGTH@ 35
---------------INS MethodInvocation@@resource.getFile() @TO@ SimpleName@@MethodName:decode:[resource.getFile(), "UTF-8"] @AT@ 6762 @LENGTH@ 18
------------------MOV SimpleName@@Name:resource @TO@ MethodInvocation@@resource.getFile() @AT@ 6706 @LENGTH@ 8
------------------MOV SimpleName@@MethodName:getFile:[] @TO@ MethodInvocation@@resource.getFile() @AT@ 6715 @LENGTH@ 9
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:decode:[resource.getFile(), "UTF-8"] @AT@ 6782 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:reply.get(TYPE).set(ModelType.OBJECT) @TO@ MethodInvocation:reply.get(TYPE).set(replyType == null ? ModelType.OBJECT : replyType) @AT@ 9152 @LENGTH@ 38
---UPD MethodInvocation@@reply.get(TYPE).set(ModelType.OBJECT) @TO@ reply.get(TYPE).set(replyType == null ? ModelType.OBJECT : replyType) @AT@ 9152 @LENGTH@ 37
------UPD SimpleName@@MethodName:set:[ModelType.OBJECT] @TO@ MethodName:set:[replyType == null ? ModelType.OBJECT : replyType] @AT@ 9168 @LENGTH@ 21
---------INS ConditionalExpression@@replyType == null ? ModelType.OBJECT : replyType @TO@ SimpleName@@MethodName:set:[ModelType.OBJECT] @AT@ 9172 @LENGTH@ 48
------------INS InfixExpression@@replyType == null @TO@ ConditionalExpression@@replyType == null ? ModelType.OBJECT : replyType @AT@ 9172 @LENGTH@ 17
---------------INS SimpleName@@replyType @TO@ InfixExpression@@replyType == null @AT@ 9172 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@replyType == null @AT@ 9181 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@replyType == null @AT@ 9185 @LENGTH@ 4
------------INS QualifiedName@@ModelType.OBJECT @TO@ ConditionalExpression@@replyType == null ? ModelType.OBJECT : replyType @AT@ 9192 @LENGTH@ 16
---------------MOV SimpleName@@ModelType @TO@ QualifiedName@@ModelType.OBJECT @AT@ 9172 @LENGTH@ 9
---------------MOV SimpleName@@OBJECT @TO@ QualifiedName@@ModelType.OBJECT @AT@ 9182 @LENGTH@ 6
------------INS SimpleName@@replyType @TO@ ConditionalExpression@@replyType == null ? ModelType.OBJECT : replyType @AT@ 9211 @LENGTH@ 9
---------DEL QualifiedName@@ModelType.OBJECT @AT@ 9172 @LENGTH@ 16


UPD MethodDeclaration@@public, voidMethodName:DefaultErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, Predicate retryWhile, String executorServiceRef,  @TO@ public, voidMethodName:DefaultErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, Predicate retryWhile, ScheduledExecutorService executorService,  @AT@ 1995 @LENGTH@ 464
---UPD SingleVariableDeclaration@@String executorServiceRef @TO@ ScheduledExecutorService executorService @AT@ 2236 @LENGTH@ 25
------UPD SimpleType@@String @TO@ ScheduledExecutorService @AT@ 2236 @LENGTH@ 6
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 2243 @LENGTH@ 18
---UPD SuperConstructorInvocation@@super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,null,null,false,retryWhile,executorServiceRef);
 @TO@ super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,null,null,false,retryWhile,executorService);
 @AT@ 2274 @LENGTH@ 126
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 2380 @LENGTH@ 18


UPD FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @TO@ private, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1315 @LENGTH@ 66
---DEL Modifier@@static @AT@ 1323 @LENGTH@ 6


UPD MethodDeclaration@@boolean, MethodName:hasKey, Object key,  @TO@ Boolean, MethodName:hasKey, Object key,  @AT@ 976 @LENGTH@ 19
---DEL PrimitiveType@@boolean @AT@ 968 @LENGTH@ 7
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@boolean, MethodName:hasKey, Object key,  @AT@ 968 @LENGTH@ 7


UPD ReturnStatement@@ClassInstanceCreation:new Producer(){
  public Endpoint getEndpoint(){
    return producer.getEndpoint();
  }
  public Exchange createExchange(){
    return producer.createExchange();
  }
  public Exchange createExchange(  ExchangePattern pattern){
    return producer.createExchange(pattern);
  }
  public Exchange createExchange(  Exchange exchange){
    return producer.createExchange(exchange);
  }
  public void process(  Exchange exchange) throws Exception {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Sending to endpoint: {} is intercepted and detoured to: {} for exchange: {}",new Object[]{getEndpoint(),detour,exchange});
    }
    exchange.getIn().setHeader(Exchange.INTERCEPTED_ENDPOINT,delegate.getEndpointUri());
    try {
      detour.process(exchange);
    }
 catch (    Exception e) {
      exchange.setException(e);
    }
    if (!continueProcessing(exchange,"skip sending to original intended destination: " + getEndpoint(),LOG)) {
      return;
    }
    boolean shouldSkip=skip;
    Boolean whenMatches=(Boolean)exchange.removeProperty(Exchange.INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED);
    if (whenMatches != null) {
      shouldSkip=skip && whenMatches;
    }
    if (!shouldSkip) {
      if (exchange.hasOut()) {
        exchange.setIn(exchange.getOut());
        exchange.setOut(null);
      }
      producer.process(exchange);
    }
 else {
      LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);
    }
  }
  public boolean isSingleton(){
    return producer.isSingleton();
  }
  public void start() throws Exception {
    ServiceHelper.startService(detour);
    ServiceHelper.startService(producer);
  }
  public void stop() throws Exception {
    ServiceHelper.stopService(producer);
  }
}
 @TO@ ClassInstanceCreation:new DefaultAsyncProducer(delegate){
  public Endpoint getEndpoint(){
    return producer.getEndpoint();
  }
  public Exchange createExchange(){
    return producer.createExchange();
  }
  public Exchange createExchange(  ExchangePattern pattern){
    return producer.createExchange(pattern);
  }
  public Exchange createExchange(  Exchange exchange){
    return producer.createExchange(exchange);
  }
  @Override public boolean process(  Exchange exchange,  AsyncCallback callback){
    if (LOG.isDebugEnabled()) {
      LOG.debug("Sending to endpoint: {} is intercepted and detoured to: {} for exchange: {}",new Object[]{getEndpoint(),detour,exchange});
    }
    exchange.getIn().setHeader(Exchange.INTERCEPTED_ENDPOINT,delegate.getEndpointUri());
    try {
      detour.process(exchange);
    }
 catch (    Exception e) {
      exchange.setException(e);
      callback.done(true);
      return true;
    }
    if (!continueProcessing(exchange,"skip sending to original intended destination: " + getEndpoint(),LOG)) {
      callback.done(true);
      return true;
    }
    boolean shouldSkip=skip;
    Boolean whenMatches=(Boolean)exchange.removeProperty(Exchange.INTERCEPT_SEND_TO_ENDPOINT_WHEN_MATCHED);
    if (whenMatches != null) {
      shouldSkip=skip && whenMatches;
    }
    if (!shouldSkip) {
      if (exchange.hasOut()) {
        exchange.setIn(exchange.getOut());
        exchange.setOut(null);
      }
      AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer);
      return AsyncProcessorHelper.process(async,exchange,callback);
    }
 else {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);
      }
      callback.done(true);
      return true;
    }
  }
  public boolean isSingleton(){
    return producer.isSingleton();
  }
  public void start() throws Exception {
    ServiceHelper.startService(detour);
    ServiceHelper.startService(producer);
  }
  public void stop() throws Exception {
    ServiceHelper.stopService(producer);
  }
}
 @AT@ 3101 @LENGTH@ 3164
---UPD ClassInstanceCreation@@Producer[] @TO@ DefaultAsyncProducer[delegate] @AT@ 3108 @LENGTH@ 3156
------UPD SimpleType@@Producer @TO@ DefaultAsyncProducer @AT@ 3112 @LENGTH@ 8
------INS SimpleName@@delegate @TO@ ClassInstanceCreation@@Producer[] @AT@ 3323 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:testCryptWithEmptySalt, Exception,  @TO@ public, void, MethodName:testCryptWithEmptySalt, NoSuchAlgorithmException,  @AT@ 1571 @LENGTH@ 96
---UPD SimpleType@@Exception @TO@ NoSuchAlgorithmException @AT@ 1615 @LENGTH@ 9


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpChmodTest, SftpServerTestSupport @TO@ [public]SftpChmodTest, SftpServerTestSupport @AT@ 984 @LENGTH@ 771
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 984 @LENGTH@ 79


MOV ExpressionStatement@@MethodInvocation:JsonHelper.saveProcessConfig(config,installDir) @TO@ MethodDeclaration@@protected, Installation, MethodName:installViaScript, URL controllerJson, InstallScript installScript, Exception,  @AT@ 7714 @LENGTH@ 49


INS MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @TO@ TypeDeclaration@@[public]ProductConfig, [Serializable] @AT@ 3014 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3014 @LENGTH@ 6
---INS SimpleName@@MethodName:ProductConfig @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3021 @LENGTH@ 13
---INS SingleVariableDeclaration@@final String productName @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3035 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String productName @AT@ 3035 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String productName @AT@ 3041 @LENGTH@ 6
------INS SimpleName@@productName @TO@ SingleVariableDeclaration@@final String productName @AT@ 3048 @LENGTH@ 11
---INS SingleVariableDeclaration@@final String productVersion @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3061 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3061 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3067 @LENGTH@ 6
------INS SimpleName@@productVersion @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3074 @LENGTH@ 14
---INS SingleVariableDeclaration@@final String consoleSlot @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3090 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3090 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3096 @LENGTH@ 6
------INS SimpleName@@consoleSlot @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3103 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:this.name=productName @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3126 @LENGTH@ 24
------INS Assignment@@this.name=productName @TO@ ExpressionStatement@@Assignment:this.name=productName @AT@ 3126 @LENGTH@ 23
---------INS FieldAccess@@this.name @TO@ Assignment@@this.name=productName @AT@ 3126 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 3126 @LENGTH@ 4
------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 3131 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.name=productName @AT@ 3135 @LENGTH@ 1
---------INS SimpleName@@productName @TO@ Assignment@@this.name=productName @AT@ 3138 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:this.version=productVersion @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3159 @LENGTH@ 30
------INS Assignment@@this.version=productVersion @TO@ ExpressionStatement@@Assignment:this.version=productVersion @AT@ 3159 @LENGTH@ 29
---------INS FieldAccess@@this.version @TO@ Assignment@@this.version=productVersion @AT@ 3159 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.version @AT@ 3159 @LENGTH@ 4
------------INS SimpleName@@version @TO@ FieldAccess@@this.version @AT@ 3164 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.version=productVersion @AT@ 3171 @LENGTH@ 1
---------INS SimpleName@@productVersion @TO@ Assignment@@this.version=productVersion @AT@ 3174 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:this.consoleSlot=consoleSlot @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3198 @LENGTH@ 31
------INS Assignment@@this.consoleSlot=consoleSlot @TO@ ExpressionStatement@@Assignment:this.consoleSlot=consoleSlot @AT@ 3198 @LENGTH@ 30
---------INS FieldAccess@@this.consoleSlot @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3198 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.consoleSlot @AT@ 3198 @LENGTH@ 4
------------INS SimpleName@@consoleSlot @TO@ FieldAccess@@this.consoleSlot @AT@ 3203 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3214 @LENGTH@ 1
---------INS SimpleName@@consoleSlot @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3217 @LENGTH@ 11


DEL IfStatement@@if (path.indexOf("..") == -1) {  return path;} @AT@ 6298 @LENGTH@ 66
---DEL InfixExpression@@path.indexOf("..") == -1 @AT@ 6302 @LENGTH@ 24
------DEL MethodInvocation@@path.indexOf("..") @AT@ 6302 @LENGTH@ 18
---------DEL SimpleName@@Name:path @AT@ 6302 @LENGTH@ 4
---------DEL SimpleName@@MethodName:indexOf:[".."] @AT@ 6307 @LENGTH@ 13
------------DEL StringLiteral@@".." @AT@ 6315 @LENGTH@ 4
------DEL Operator@@== @AT@ 6320 @LENGTH@ 2
------DEL PrefixExpression@@-1 @AT@ 6324 @LENGTH@ 2
---------DEL Operator@@- @AT@ 6324 @LENGTH@ 1
---------DEL NumberLiteral@@1 @AT@ 6325 @LENGTH@ 1
---DEL Block@@ThenBody:{  return path;} @AT@ 6328 @LENGTH@ 36
------DEL ReturnStatement@@SimpleName:path @AT@ 6342 @LENGTH@ 12
---------DEL SimpleName@@path @AT@ 6349 @LENGTH@ 4


UPD ThrowStatement@@ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @TO@ ClassInstanceCreation:new LifecycleException("The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration") @AT@ 11084 @LENGTH@ 603
---UPD ClassInstanceCreation@@LifecycleException["The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @TO@ LifecycleException["The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration"] @AT@ 11090 @LENGTH@ 596
------UPD InfixExpression@@"The server is already running! " + "Managed containers does not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @TO@ "The server is already running! " + "Managed containers do not support connecting to running server instances due to the " + "possible harmful effect of connecting to the wrong server. Please stop server before running or "+ "change to another type of container.\n"+ "To disable this check and allow Arquillian to connect to a running server, "+ "set allowConnectingToRunningServer to true in the container configuration" @AT@ 11130 @LENGTH@ 546
---------UPD StringLiteral@@"Managed containers does not support connecting to running server instances due to the " @TO@ "Managed containers do not support connecting to running server instances due to the " @AT@ 11190 @LENGTH@ 88


DEL FieldDeclaration@@protected, ProducerTemplate, [producerTemplate] @AT@ 1161 @LENGTH@ 44
---DEL Modifier@@protected @AT@ 1161 @LENGTH@ 9
---DEL SimpleType@@ProducerTemplate @AT@ 1171 @LENGTH@ 16
---DEL VariableDeclarationFragment@@producerTemplate @AT@ 1188 @LENGTH@ 16
------DEL SimpleName@@producerTemplate @AT@ 1188 @LENGTH@ 16


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build()] @TO@ public, static, final, AttributeDefinition, [SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build()] @AT@ 7143 @LENGTH@ 248
---UPD VariableDeclarationFragment@@SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build() @TO@ SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build() @AT@ 7183 @LENGTH@ 207
------UPD MethodInvocation@@new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build() @TO@ new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build() @AT@ 7202 @LENGTH@ 188
---------UPD ClassInstanceCreation@@SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()] @TO@ SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()] @AT@ 7202 @LENGTH@ 167
------------UPD MethodInvocation@@new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build() @TO@ new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build() @AT@ 7256 @LENGTH@ 99
---------------UPD ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.SCHEMA_LOCATIONS, true] @TO@ PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.SCHEMA_LOCATIONS, false] @AT@ 7256 @LENGTH@ 91
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 7342 @LENGTH@ 4


UPD VariableDeclarationStatement@@Class<Tool> clazz=super.loadClass(targetClassName,cl); @TO@ Class<Tool> clazz=super.loadClass(className,cl); @AT@ 1220 @LENGTH@ 57
---UPD VariableDeclarationFragment@@clazz=super.loadClass(targetClassName,cl) @TO@ clazz=super.loadClass(className,cl) @AT@ 1232 @LENGTH@ 44
------UPD SuperMethodInvocation@@super.loadClass(targetClassName,cl) @TO@ super.loadClass(className,cl) @AT@ 1240 @LENGTH@ 36
---------UPD SimpleName@@MethodName:loadClass:[targetClassName, cl] @TO@ MethodName:loadClass:[className, cl] @AT@ 1246 @LENGTH@ 9
---------UPD SimpleName@@targetClassName @TO@ className @AT@ 1256 @LENGTH@ 15


UPD FieldDeclaration@@ConnectorLogger, [DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector.registry")] @TO@ ConnectorLogger, [DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment.registry")] @AT@ 2420 @LENGTH@ 148
---UPD VariableDeclarationFragment@@DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector.registry") @TO@ DEPLOYMENT_CONNECTOR_REGISTRY_LOGGER=Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment.registry") @AT@ 2436 @LENGTH@ 131
------UPD MethodInvocation@@Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.deployment.connector.registry") @TO@ Logger.getMessageLogger(ConnectorLogger.class,"org.jboss.as.connector.deployment.registry") @AT@ 2475 @LENGTH@ 92
---------UPD SimpleName@@MethodName:getMessageLogger:[ConnectorLogger.class, "org.jboss.as.deployment.connector.registry"] @TO@ MethodName:getMessageLogger:[ConnectorLogger.class, "org.jboss.as.connector.deployment.registry"] @AT@ 2482 @LENGTH@ 85
------------UPD StringLiteral@@"org.jboss.as.deployment.connector.registry" @TO@ "org.jboss.as.connector.deployment.registry" @AT@ 2522 @LENGTH@ 44


UPD TryStatement@@try {  URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory(getObject()));  log.info("Registered HDFS URL stream handler");} catch (Error err) {  log.warn("Cannot register Hadoop URL stream handler - one is already registered");} @TO@ try {  UserGroupInformation.setConfiguration(internalConfig);  URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory(getObject()));  log.info("Registered HDFS URL stream handler");} catch (Error err) {  log.warn("Cannot register Hadoop URL stream handler - one is already registered");} @AT@ 2258 @LENGTH@ 254
---INS ExpressionStatement@@MethodInvocation:UserGroupInformation.setConfiguration(internalConfig) @TO@ TryStatement@@try {  URL.setURLStreamHandlerFactory(new FsUrlStreamHandlerFactory(getObject()));  log.info("Registered HDFS URL stream handler");} catch (Error err) {  log.warn("Cannot register Hadoop URL stream handler - one is already registered");} @AT@ 2385 @LENGTH@ 54
------INS MethodInvocation@@UserGroupInformation.setConfiguration(internalConfig) @TO@ ExpressionStatement@@MethodInvocation:UserGroupInformation.setConfiguration(internalConfig) @AT@ 2385 @LENGTH@ 53
---------INS SimpleName@@Name:UserGroupInformation @TO@ MethodInvocation@@UserGroupInformation.setConfiguration(internalConfig) @AT@ 2385 @LENGTH@ 20
---------INS SimpleName@@MethodName:setConfiguration:[internalConfig] @TO@ MethodInvocation@@UserGroupInformation.setConfiguration(internalConfig) @AT@ 2406 @LENGTH@ 32
------------INS SimpleName@@internalConfig @TO@ SimpleName@@MethodName:setConfiguration:[internalConfig] @AT@ 2423 @LENGTH@ 14


UPD FieldDeclaration@@private, int, [stops=0] @TO@ private, int, [stops] @AT@ 1231 @LENGTH@ 22
---UPD VariableDeclarationFragment@@stops=0 @TO@ stops @AT@ 1243 @LENGTH@ 9
------DEL NumberLiteral@@0 @AT@ 1251 @LENGTH@ 1


UPD MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelVersion modelVersion, TransformedOperation op,  @TO@ public, ModelNode, MethodName:executeOperation, final ModelVersion modelVersion, final TransformedOperation op,  @AT@ 9122 @LENGTH@ 569
---UPD SingleVariableDeclaration@@ModelVersion modelVersion @TO@ final ModelVersion modelVersion @AT@ 9156 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ModelVersion modelVersion @AT@ 9156 @LENGTH@ 5
---UPD SingleVariableDeclaration@@TransformedOperation op @TO@ final TransformedOperation op @AT@ 9183 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@TransformedOperation op @AT@ 9189 @LENGTH@ 5
---UPD IfStatement@@if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation());} @TO@ if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 9336 @LENGTH@ 129
------UPD Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation());} @TO@ ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 9378 @LENGTH@ 87
---------UPD ExpressionStatement@@Assignment:result=legacy.executeOperation(op.getTransformedOperation()) @TO@ Assignment:result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9392 @LENGTH@ 63
------------UPD Assignment@@result=legacy.executeOperation(op.getTransformedOperation()) @TO@ result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9392 @LENGTH@ 62
---------------UPD MethodInvocation@@legacy.executeOperation(op.getTransformedOperation()) @TO@ legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9401 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:executeOperation:[op.getTransformedOperation()] @TO@ MethodName:executeOperation:[op.getTransformedOperation(), new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
] @AT@ 9408 @LENGTH@ 46
---------------------INS ClassInstanceCreation@@ModelController.OperationTransactionControl[] @TO@ SimpleName@@MethodName:executeOperation:[op.getTransformedOperation()] @AT@ 9467 @LENGTH@ 459
------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9467 @LENGTH@ 3
------------------------INS SimpleType@@ModelController.OperationTransactionControl @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9471 @LENGTH@ 43
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9517 @LENGTH@ 409
---------------------------INS MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 9569 @LENGTH@ 339
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9569 @LENGTH@ 6
------------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9576 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:operationPrepared @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9581 @LENGTH@ 17
------------------------------INS SingleVariableDeclaration@@ModelController.OperationTransaction transaction @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9599 @LENGTH@ 48
---------------------------------INS SimpleType@@ModelController.OperationTransaction @TO@ SingleVariableDeclaration@@ModelController.OperationTransaction transaction @AT@ 9599 @LENGTH@ 36
---------------------------------INS SimpleName@@transaction @TO@ SingleVariableDeclaration@@ModelController.OperationTransaction transaction @AT@ 9636 @LENGTH@ 11
------------------------------INS SingleVariableDeclaration@@ModelNode result @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9649 @LENGTH@ 16
---------------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 9649 @LENGTH@ 9
---------------------------------INS SimpleName@@result @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 9659 @LENGTH@ 6
------------------------------INS IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9693 @LENGTH@ 193
---------------------------------INS MethodInvocation@@op.rejectOperation(result) @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9696 @LENGTH@ 26
------------------------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 9696 @LENGTH@ 2
------------------------------------INS SimpleName@@MethodName:rejectOperation:[result] @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 9699 @LENGTH@ 23
---------------------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:rejectOperation:[result] @AT@ 9715 @LENGTH@ 6
---------------------------------INS Block@@ThenBody:{  transaction.rollback();} @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9724 @LENGTH@ 79
------------------------------------INS ExpressionStatement@@MethodInvocation:transaction.rollback() @TO@ Block@@ThenBody:{  transaction.rollback();} @AT@ 9754 @LENGTH@ 23
---------------------------------------INS MethodInvocation@@transaction.rollback() @TO@ ExpressionStatement@@MethodInvocation:transaction.rollback() @AT@ 9754 @LENGTH@ 22
------------------------------------------INS SimpleName@@Name:transaction @TO@ MethodInvocation@@transaction.rollback() @AT@ 9754 @LENGTH@ 11
------------------------------------------INS SimpleName@@MethodName:rollback:[] @TO@ MethodInvocation@@transaction.rollback() @AT@ 9766 @LENGTH@ 10
---------------------------------INS Block@@ElseBody:{  transaction.commit();} @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9809 @LENGTH@ 77
------------------------------------INS ExpressionStatement@@MethodInvocation:transaction.commit() @TO@ Block@@ElseBody:{  transaction.commit();} @AT@ 9839 @LENGTH@ 21
---------------------------------------INS MethodInvocation@@transaction.commit() @TO@ ExpressionStatement@@MethodInvocation:transaction.commit() @AT@ 9839 @LENGTH@ 20
------------------------------------------INS SimpleName@@Name:transaction @TO@ MethodInvocation@@transaction.commit() @AT@ 9839 @LENGTH@ 11
------------------------------------------INS SimpleName@@MethodName:commit:[] @TO@ MethodInvocation@@transaction.commit() @AT@ 9851 @LENGTH@ 8


INS TryStatement@@try {  Thread.sleep(500);} catch (InterruptedException e) {} @TO@ MethodDeclaration@@private, void, MethodName:initResequencer, long timeout, int capacity,  @AT@ 5164 @LENGTH@ 111
---INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ TryStatement@@try {  Thread.sleep(500);} catch (InterruptedException e) {} @AT@ 5182 @LENGTH@ 18
------INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 5182 @LENGTH@ 17
---------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 5182 @LENGTH@ 6
---------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 5189 @LENGTH@ 10
------------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 5195 @LENGTH@ 3
---INS CatchClause@@catch (InterruptedException e) {} @TO@ TryStatement@@try {  Thread.sleep(500);} catch (InterruptedException e) {} @AT@ 5211 @LENGTH@ 64
------INS SingleVariableDeclaration@@InterruptedException e @TO@ CatchClause@@catch (InterruptedException e) {} @AT@ 5218 @LENGTH@ 22
---------INS SimpleType@@InterruptedException @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 5218 @LENGTH@ 20
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@InterruptedException e @AT@ 5239 @LENGTH@ 1


INS MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 21099 @LENGTH@ 656
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21106 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21113 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 21118 @LENGTH@ 6
---INS SimpleName@@MethodName:getDeployments @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21126 @LENGTH@ 14
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21141 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21163 @LENGTH@ 6
---INS SingleVariableDeclaration@@String serverGroup @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21171 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 6
------INS SimpleName@@serverGroup @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21178 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21202 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21208 @LENGTH@ 9
------INS VariableDeclarationFragment@@request=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21218 @LENGTH@ 25
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 7
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21228 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21232 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21253 @LENGTH@ 41
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 9
------INS VariableDeclarationFragment@@address=request.get(ADDRESS) @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21263 @LENGTH@ 30
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 7
---------INS MethodInvocation@@request.get(ADDRESS) @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[ADDRESS] @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21281 @LENGTH@ 12
---------------INS SimpleName@@ADDRESS @TO@ SimpleName@@MethodName:get:[ADDRESS] @AT@ 21285 @LENGTH@ 7
---INS IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21303 @LENGTH@ 87
------INS InfixExpression@@serverGroup != null @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21306 @LENGTH@ 19
---------INS SimpleName@@serverGroup @TO@ InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@serverGroup != null @AT@ 21317 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serverGroup != null @AT@ 21321 @LENGTH@ 4
------INS Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------INS ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @TO@ Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21341 @LENGTH@ 39
------------INS MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @TO@ ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 7
---------------INS SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21349 @LENGTH@ 30
------------------INS SimpleName@@SERVER_GROUP @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21353 @LENGTH@ 12
------------------INS SimpleName@@serverGroup @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21367 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21399 @LENGTH@ 48
------INS MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:get:[OPERATION] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 22
------------INS SimpleName@@OPERATION @TO@ MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21411 @LENGTH@ 9
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21422 @LENGTH@ 24
------------INS SimpleName@@READ_CHILDREN_NAMES @TO@ SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21426 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21456 @LENGTH@ 40
------INS MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:get:[CHILD_TYPE] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 23
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21468 @LENGTH@ 10
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[DEPLOYMENT] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21480 @LENGTH@ 15
------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21484 @LENGTH@ 10
---INS TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21505 @LENGTH@ 203
------INS VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21523 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21529 @LENGTH@ 9
---------INS VariableDeclarationFragment@@outcome=client.execute(request) @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21539 @LENGTH@ 33
------------INS SimpleName@@outcome @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 7
------------INS MethodInvocation@@client.execute(request) @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 6
---------------INS SimpleName@@MethodName:execute:[request] @TO@ MethodInvocation@@client.execute(request) @AT@ 21556 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:execute:[request] @AT@ 21564 @LENGTH@ 7
------INS IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21586 @LENGTH@ 80
---------INS MethodInvocation@@isSuccess(outcome) @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21590 @LENGTH@ 18
------------INS SimpleName@@MethodName:isSuccess:[outcome] @TO@ MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
---------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21600 @LENGTH@ 7
---------INS Block@@ThenBody:{  return getList(outcome);} @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------INS ReturnStatement@@MethodInvocation:getList(outcome) @TO@ Block@@ThenBody:{  return getList(outcome);} @AT@ 21628 @LENGTH@ 24
---------------INS MethodInvocation@@getList(outcome) @TO@ ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getList:[outcome] @TO@ MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
---------------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:getList:[outcome] @AT@ 21643 @LENGTH@ 7
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 21684 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 21694 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21718 @LENGTH@ 31
------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21737 @LENGTH@ 11


UPD FieldDeclaration@@private, String, [password] @TO@ private, String, [zookeeperPassword] @AT@ 3684 @LENGTH@ 24
---UPD VariableDeclarationFragment@@password @TO@ zookeeperPassword @AT@ 3699 @LENGTH@ 8
------UPD SimpleName@@password @TO@ zookeeperPassword @AT@ 3699 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true").routeId("foo").noAutoStartup().to("mock:result") @TO@ MethodInvocation:from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1987 @LENGTH@ 191
---UPD MethodInvocation@@from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true").routeId("foo").noAutoStartup().to("mock:result") @TO@ from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1987 @LENGTH@ 190
------UPD MethodInvocation@@MethodName:from:["sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true"] @TO@ MethodName:from:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true"] @AT@ 1987 @LENGTH@ 99
---------UPD InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true" @TO@ "sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true" @AT@ 1992 @LENGTH@ 93
------------INS StringLiteral@@"/" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true" @AT@ 1921 @LENGTH@ 3
------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true" @AT@ 1927 @LENGTH@ 12
------------UPD StringLiteral@@"/?username=admin&password=admin&delay=10s&disconnect=true" @TO@ "?username=admin&password=admin&delay=10s&disconnect=true" @AT@ 2026 @LENGTH@ 59


UPD VariableDeclarationStatement@@List<Exchange> polledExchanges=mock.getExchanges().get(0).getIn().getBody(List.class); @TO@ List<?> polledExchanges=mock.getExchanges().get(0).getIn().getBody(List.class); @AT@ 5841 @LENGTH@ 88
---UPD ParameterizedType@@List<Exchange> @TO@ List<?> @AT@ 5841 @LENGTH@ 14
------INS WildcardType@@? @TO@ ParameterizedType@@List<Exchange> @AT@ 5811 @LENGTH@ 1
------DEL SimpleType@@Exchange @AT@ 5846 @LENGTH@ 8


UPD MethodDeclaration@@public, Map<?,?>, MethodName:getSignerCertificates, int signersType,  @TO@ public, Map<X509Certificate,List<X509Certificate>>, MethodName:getSignerCertificates, int signersType,  @AT@ 4079 @LENGTH@ 84
---UPD ParameterizedType@@Map<?,?> @TO@ Map<X509Certificate,List<X509Certificate>> @AT@ 4086 @LENGTH@ 9
------DEL WildcardType@@? @AT@ 4090 @LENGTH@ 1
------DEL WildcardType@@? @AT@ 4093 @LENGTH@ 1
------INS SimpleType@@X509Certificate @TO@ ParameterizedType@@Map<?,?> @AT@ 4133 @LENGTH@ 15
------INS ParameterizedType@@List<X509Certificate> @TO@ ParameterizedType@@Map<?,?> @AT@ 4150 @LENGTH@ 21
---------INS SimpleType@@List @TO@ ParameterizedType@@List<X509Certificate> @AT@ 4150 @LENGTH@ 4
---------INS SimpleType@@X509Certificate @TO@ ParameterizedType@@List<X509Certificate> @AT@ 4155 @LENGTH@ 15


MOV FieldDeclaration@@public, static, final, int, [PARSE_WELD_WEB_INTEGRATION=0x2B10] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 13941 @LENGTH@ 77


UPD ReturnStatement@@ClassInstanceCreation:new MapReduceTiming((Long)timing.get("mapTime"),(Integer)timing.get("emitLoop"),(Integer)timing.get("total")) @TO@ ClassInstanceCreation:new MapReduceTiming(getAsLong(timing,"mapTime"),getAsLong(timing,"emitLoop"),getAsLong(timing,"total")) @AT@ 2564 @LENGTH@ 127
---UPD ClassInstanceCreation@@MapReduceTiming[(Long)timing.get("mapTime"), (Integer)timing.get("emitLoop"), (Integer)timing.get("total")] @TO@ MapReduceTiming[getAsLong(timing,"mapTime"), getAsLong(timing,"emitLoop"), getAsLong(timing,"total")] @AT@ 2571 @LENGTH@ 119
------DEL CastExpression@@(Long)timing.get("mapTime") @AT@ 2591 @LENGTH@ 28
---------DEL SimpleType@@Long @AT@ 2592 @LENGTH@ 4
---------DEL MethodInvocation@@timing.get("mapTime") @AT@ 2598 @LENGTH@ 21
------------DEL SimpleName@@Name:timing @AT@ 2598 @LENGTH@ 6
------INS MethodInvocation@@getAsLong(timing,"mapTime") @TO@ ClassInstanceCreation@@MapReduceTiming[(Long)timing.get("mapTime"), (Integer)timing.get("emitLoop"), (Integer)timing.get("total")] @AT@ 2591 @LENGTH@ 28
---------MOV SimpleName@@MethodName:get:["mapTime"] @TO@ MethodInvocation@@getAsLong(timing,"mapTime") @AT@ 2605 @LENGTH@ 14
------------INS SimpleName@@timing @TO@ SimpleName@@MethodName:get:["mapTime"] @AT@ 2601 @LENGTH@ 6
------DEL CastExpression@@(Integer)timing.get("emitLoop") @AT@ 2621 @LENGTH@ 32
---------DEL SimpleType@@Integer @AT@ 2622 @LENGTH@ 7
---------DEL MethodInvocation@@timing.get("emitLoop") @AT@ 2631 @LENGTH@ 22
------------DEL SimpleName@@Name:timing @AT@ 2631 @LENGTH@ 6
------INS MethodInvocation@@getAsLong(timing,"emitLoop") @TO@ ClassInstanceCreation@@MapReduceTiming[(Long)timing.get("mapTime"), (Integer)timing.get("emitLoop"), (Integer)timing.get("total")] @AT@ 2621 @LENGTH@ 29
---------MOV SimpleName@@MethodName:get:["emitLoop"] @TO@ MethodInvocation@@getAsLong(timing,"emitLoop") @AT@ 2638 @LENGTH@ 15
------------INS SimpleName@@timing @TO@ SimpleName@@MethodName:get:["emitLoop"] @AT@ 2631 @LENGTH@ 6
------INS MethodInvocation@@getAsLong(timing,"total") @TO@ ClassInstanceCreation@@MapReduceTiming[(Long)timing.get("mapTime"), (Integer)timing.get("emitLoop"), (Integer)timing.get("total")] @AT@ 2657 @LENGTH@ 26
---------MOV SimpleName@@MethodName:get:["total"] @TO@ MethodInvocation@@getAsLong(timing,"total") @AT@ 2677 @LENGTH@ 12
------------INS SimpleName@@timing @TO@ SimpleName@@MethodName:get:["total"] @AT@ 2667 @LENGTH@ 6
------DEL CastExpression@@(Integer)timing.get("total") @AT@ 2660 @LENGTH@ 29
---------DEL SimpleType@@Integer @AT@ 2661 @LENGTH@ 7
---------DEL MethodInvocation@@timing.get("total") @AT@ 2670 @LENGTH@ 19
------------DEL SimpleName@@Name:timing @AT@ 2670 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:serverGroups=Util.getAllReferencingServerGroups(deploymentName,client) @TO@ Assignment:serverGroups=Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15138 @LENGTH@ 74
---UPD Assignment@@serverGroups=Util.getAllReferencingServerGroups(deploymentName,client) @TO@ serverGroups=Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15138 @LENGTH@ 73
------UPD MethodInvocation@@Util.getAllReferencingServerGroups(deploymentName,client) @TO@ Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15153 @LENGTH@ 58
---------UPD SimpleName@@MethodName:getAllReferencingServerGroups:[deploymentName, client] @TO@ MethodName:getServerGroupsReferencingDeployment:[deploymentName, client] @AT@ 15158 @LENGTH@ 53


INS VariableDeclarationStatement@@String relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath; @TO@ MethodDeclaration@@String, MethodName:resolve, PathManager pathManager, String path, String relativeToPath,  @AT@ 14001 @LENGTH@ 98
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath; @AT@ 14001 @LENGTH@ 6
---INS VariableDeclarationFragment@@relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @TO@ VariableDeclarationStatement@@String relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath; @AT@ 14008 @LENGTH@ 90
------INS SimpleName@@relativeTo @TO@ VariableDeclarationFragment@@relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @AT@ 14008 @LENGTH@ 10
------INS ConditionalExpression@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @TO@ VariableDeclarationFragment@@relativeTo=AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @AT@ 14021 @LENGTH@ 77
---------INS MethodInvocation@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) @TO@ ConditionalExpression@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @AT@ 14021 @LENGTH@ 53
------------INS SimpleName@@Name:AbsolutePathService @TO@ MethodInvocation@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) @AT@ 14021 @LENGTH@ 19
------------INS SimpleName@@MethodName:isAbsoluteUnixOrWindowsPath:[path] @TO@ MethodInvocation@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) @AT@ 14041 @LENGTH@ 33
---------------INS SimpleName@@path @TO@ SimpleName@@MethodName:isAbsoluteUnixOrWindowsPath:[path] @AT@ 14069 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @AT@ 14077 @LENGTH@ 4
---------INS SimpleName@@relativeToPath @TO@ ConditionalExpression@@AbsolutePathService.isAbsoluteUnixOrWindowsPath(path) ? null : relativeToPath @AT@ 14084 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:from(endpointUriA).process(new Processor(){
  public void process(  Exchange e){
  }
}
) @TO@ MethodInvocation:from(endpointUriA).setExchangePattern(ExchangePattern.InOnly).process(new Processor(){
  public void process(  Exchange e){
  }
}
) @AT@ 3558 @LENGTH@ 162
---UPD MethodInvocation@@from(endpointUriA).process(new Processor(){
  public void process(  Exchange e){
  }
}
) @TO@ from(endpointUriA).setExchangePattern(ExchangePattern.InOnly).process(new Processor(){
  public void process(  Exchange e){
  }
}
) @AT@ 3558 @LENGTH@ 161
------INS MethodInvocation@@MethodName:setExchangePattern:[ExchangePattern.InOnly] @TO@ MethodInvocation@@from(endpointUriA).process(new Processor(){
  public void process(  Exchange e){
  }
}
) @AT@ 3599 @LENGTH@ 133
---------INS QualifiedName@@ExchangePattern.InOnly @TO@ MethodInvocation@@MethodName:setExchangePattern:[ExchangePattern.InOnly] @AT@ 3709 @LENGTH@ 22
------------INS SimpleName@@ExchangePattern @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3709 @LENGTH@ 15
------------INS SimpleName@@InOnly @TO@ QualifiedName@@ExchangePattern.InOnly @AT@ 3725 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, int, [INSTALL_EJB_JACC_PROCESSING=0x0405] @TO@ public, static, final, int, [INSTALL_EJB_JACC_PROCESSING=0x1105] @AT@ 25419 @LENGTH@ 77
---UPD VariableDeclarationFragment@@INSTALL_EJB_JACC_PROCESSING=0x0405 @TO@ INSTALL_EJB_JACC_PROCESSING=0x1105 @AT@ 25443 @LENGTH@ 52
------UPD NumberLiteral@@0x0405 @TO@ 0x1105 @AT@ 25489 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Unrecognized argument " + argName + " for command '"+ operation+ "'.") @TO@ ClassInstanceCreation:new CommandFormatException("Unrecognized argument " + argName + " for command '"+ opName+ "'.") @AT@ 42420 @LENGTH@ 107
---UPD ClassInstanceCreation@@CommandFormatException["Unrecognized argument " + argName + " for command '"+ operation+ "'."] @TO@ CommandFormatException["Unrecognized argument " + argName + " for command '"+ opName+ "'."] @AT@ 42426 @LENGTH@ 100
------UPD InfixExpression@@"Unrecognized argument " + argName + " for command '"+ operation+ "'." @TO@ "Unrecognized argument " + argName + " for command '"+ opName+ "'." @AT@ 42453 @LENGTH@ 72
---------UPD SimpleName@@operation @TO@ opName @AT@ 42509 @LENGTH@ 9


UPD FieldDeclaration@@private, int, [portTraceOn=8080] @TO@ private, int, [portTraceOn=getNextPort()] @AT@ 1117 @LENGTH@ 31
---UPD VariableDeclarationFragment@@portTraceOn=8080 @TO@ portTraceOn=getNextPort() @AT@ 1129 @LENGTH@ 18
------INS MethodInvocation@@MethodName:getNextPort:[] @TO@ VariableDeclarationFragment@@portTraceOn=8080 @AT@ 1122 @LENGTH@ 13
------DEL NumberLiteral@@8080 @AT@ 1143 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @TO@ TypeDeclaration@@[public]ArgumentValueParsingTestCase,  @AT@ 11603 @LENGTH@ 570
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11603 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11610 @LENGTH@ 4
---INS SimpleName@@MethodName:testQuotesAndSpaces @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11615 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11644 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode value=parse("\" \""); @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11664 @LENGTH@ 33
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode value=parse("\" \""); @AT@ 11664 @LENGTH@ 9
------INS VariableDeclarationFragment@@value=parse("\" \"") @TO@ VariableDeclarationStatement@@ModelNode value=parse("\" \""); @AT@ 11674 @LENGTH@ 22
---------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=parse("\" \"") @AT@ 11674 @LENGTH@ 5
---------INS MethodInvocation@@parse("\" \"") @TO@ VariableDeclarationFragment@@value=parse("\" \"") @AT@ 11682 @LENGTH@ 14
------------INS SimpleName@@MethodName:parse:["\" \""] @TO@ MethodInvocation@@parse("\" \"") @AT@ 11682 @LENGTH@ 14
---------------INS StringLiteral@@"\" \"" @TO@ SimpleName@@MethodName:parse:["\" \""] @AT@ 11688 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11706 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 11706 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 11706 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 11720 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11736 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 11736 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 11736 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11749 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 11749 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 11759 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11767 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 11767 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 11773 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11793 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(" ",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @AT@ 11793 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[" ", value.asString()] @TO@ MethodInvocation@@assertEquals(" ",value.asString()) @AT@ 11793 @LENGTH@ 35
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11806 @LENGTH@ 3
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11811 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 11811 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 11817 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:value=parse(" \" \"") @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11839 @LENGTH@ 24
------INS Assignment@@value=parse(" \" \"") @TO@ ExpressionStatement@@Assignment:value=parse(" \" \"") @AT@ 11839 @LENGTH@ 23
---------INS SimpleName@@value @TO@ Assignment@@value=parse(" \" \"") @AT@ 11839 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@value=parse(" \" \"") @AT@ 11844 @LENGTH@ 1
---------INS MethodInvocation@@parse(" \" \"") @TO@ Assignment@@value=parse(" \" \"") @AT@ 11847 @LENGTH@ 15
------------INS SimpleName@@MethodName:parse:[" \" \""] @TO@ MethodInvocation@@parse(" \" \"") @AT@ 11847 @LENGTH@ 15
---------------INS StringLiteral@@" \" \"" @TO@ SimpleName@@MethodName:parse:[" \" \""] @AT@ 11853 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11872 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 11872 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 11872 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 11886 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11902 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 11902 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 11902 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11915 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 11915 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 11925 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 11933 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 11933 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 11939 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 11959 @LENGTH@ 36
------INS MethodInvocation@@assertEquals(" ",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" ",value.asString()) @AT@ 11959 @LENGTH@ 35
---------INS SimpleName@@MethodName:assertEquals:[" ", value.asString()] @TO@ MethodInvocation@@assertEquals(" ",value.asString()) @AT@ 11959 @LENGTH@ 35
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11972 @LENGTH@ 3
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" ", value.asString()] @AT@ 11977 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 11977 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 11983 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:value=parse(" \" \\\"\"") @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12005 @LENGTH@ 28
------INS Assignment@@value=parse(" \" \\\"\"") @TO@ ExpressionStatement@@Assignment:value=parse(" \" \\\"\"") @AT@ 12005 @LENGTH@ 27
---------INS SimpleName@@value @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12005 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12010 @LENGTH@ 1
---------INS MethodInvocation@@parse(" \" \\\"\"") @TO@ Assignment@@value=parse(" \" \\\"\"") @AT@ 12013 @LENGTH@ 19
------------INS SimpleName@@MethodName:parse:[" \" \\\"\""] @TO@ MethodInvocation@@parse(" \" \\\"\"") @AT@ 12013 @LENGTH@ 19
---------------INS StringLiteral@@" \" \\\"\"" @TO@ SimpleName@@MethodName:parse:[" \" \\\"\""] @AT@ 12019 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertNotNull(value) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12042 @LENGTH@ 21
------INS MethodInvocation@@assertNotNull(value) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(value) @AT@ 12042 @LENGTH@ 20
---------INS SimpleName@@MethodName:assertNotNull:[value] @TO@ MethodInvocation@@assertNotNull(value) @AT@ 12042 @LENGTH@ 20
------------INS SimpleName@@value @TO@ SimpleName@@MethodName:assertNotNull:[value] @AT@ 12056 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12072 @LENGTH@ 48
------INS MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ModelType.STRING,value.getType()) @AT@ 12072 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @TO@ MethodInvocation@@assertEquals(ModelType.STRING,value.getType()) @AT@ 12072 @LENGTH@ 47
------------INS QualifiedName@@ModelType.STRING @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 12085 @LENGTH@ 16
---------------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 12085 @LENGTH@ 9
---------------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 12095 @LENGTH@ 6
------------INS MethodInvocation@@value.getType() @TO@ SimpleName@@MethodName:assertEquals:[ModelType.STRING, value.getType()] @AT@ 12103 @LENGTH@ 15
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.getType() @AT@ 12103 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@value.getType() @AT@ 12109 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(" \"",value.asString()) @TO@ MethodDeclaration@@public, void, MethodName:testQuotesAndSpaces, Exception,  @AT@ 12129 @LENGTH@ 38
------INS MethodInvocation@@assertEquals(" \"",value.asString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(" \"",value.asString()) @AT@ 12129 @LENGTH@ 37
---------INS SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @TO@ MethodInvocation@@assertEquals(" \"",value.asString()) @AT@ 12129 @LENGTH@ 37
------------INS StringLiteral@@" \"" @TO@ SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @AT@ 12142 @LENGTH@ 5
------------INS MethodInvocation@@value.asString() @TO@ SimpleName@@MethodName:assertEquals:[" \"", value.asString()] @AT@ 12149 @LENGTH@ 16
---------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.asString() @AT@ 12149 @LENGTH@ 5
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@value.asString() @AT@ 12155 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:inOrder.verify(mockOperationContext).completeStep() @TO@ MethodInvocation:inOrder.verify(mockOperationContext).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3360 @LENGTH@ 52
---UPD MethodInvocation@@inOrder.verify(mockOperationContext).completeStep() @TO@ inOrder.verify(mockOperationContext).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3360 @LENGTH@ 51
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3397 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3410 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3410 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3410 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3427 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3443 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodInvocation:Thread.sleep(500) @AT@ 3851 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(200) @TO@ Thread.sleep(500) @AT@ 3851 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[500] @AT@ 3858 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 500 @AT@ 3864 @LENGTH@ 3


UPD IfStatement@@if (parts.length != 3) {  continue;} @TO@ if (parts.length != 3) {  throw new IllegalArgumentException("Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'");} @AT@ 6936 @LENGTH@ 262
---UPD Block@@ThenBody:{  continue;} @TO@ ThenBody:{  throw new IllegalArgumentException("Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'");} @AT@ 6959 @LENGTH@ 239
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'") @TO@ Block@@ThenBody:{  continue;} @AT@ 6985 @LENGTH@ 187
---------INS ClassInstanceCreation@@IllegalArgumentException["Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'") @AT@ 6991 @LENGTH@ 180
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'"] @AT@ 6991 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'"] @AT@ 6995 @LENGTH@ 24
------------INS InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'"] @AT@ 7020 @LENGTH@ 150
---------------INS StringLiteral@@"Malformed line '" @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7020 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7038 @LENGTH@ 1
---------------INS SimpleName@@rawLine @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7041 @LENGTH@ 7
---------------INS StringLiteral@@"' in language resource '" @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7051 @LENGTH@ 26
---------------INS SimpleName@@languageRulesResourceName @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7139 @LENGTH@ 25
---------------INS StringLiteral@@"'" @TO@ InfixExpression@@"Malformed line '" + rawLine + "' in language resource '"+ languageRulesResourceName+ "'" @AT@ 7167 @LENGTH@ 3
------DEL ContinueStatement@@ @AT@ 7167 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:cfg=new JobConf(original) @TO@ Assignment:cfg=new JobConf() @AT@ 2257 @LENGTH@ 28
---UPD Assignment@@cfg=new JobConf(original) @TO@ cfg=new JobConf() @AT@ 2257 @LENGTH@ 27
------UPD ClassInstanceCreation@@JobConf[original] @TO@ JobConf[] @AT@ 2263 @LENGTH@ 21
---------DEL SimpleName@@original @AT@ 2275 @LENGTH@ 8


INS VariableDeclarationStatement@@final String deploymentOverlay=address.getElement(address.size() - 2).getValue(); @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, final OperationContext context, final ModelNode operation, final ModelNode model, OperationFailedException,  @AT@ 1968 @LENGTH@ 82
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final String deploymentOverlay=address.getElement(address.size() - 2).getValue(); @AT@ 1968 @LENGTH@ 5
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String deploymentOverlay=address.getElement(address.size() - 2).getValue(); @AT@ 1974 @LENGTH@ 6
---INS VariableDeclarationFragment@@deploymentOverlay=address.getElement(address.size() - 2).getValue() @TO@ VariableDeclarationStatement@@final String deploymentOverlay=address.getElement(address.size() - 2).getValue(); @AT@ 1981 @LENGTH@ 68
------INS SimpleName@@deploymentOverlay @TO@ VariableDeclarationFragment@@deploymentOverlay=address.getElement(address.size() - 2).getValue() @AT@ 1981 @LENGTH@ 17
------INS MethodInvocation@@address.getElement(address.size() - 2).getValue() @TO@ VariableDeclarationFragment@@deploymentOverlay=address.getElement(address.size() - 2).getValue() @AT@ 2000 @LENGTH@ 49
---------INS MethodInvocation@@MethodName:getElement:[address.size() - 2] @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 2000 @LENGTH@ 38
------------INS InfixExpression@@address.size() - 2 @TO@ MethodInvocation@@MethodName:getElement:[address.size() - 2] @AT@ 2019 @LENGTH@ 18
---------------INS MethodInvocation@@address.size() @TO@ InfixExpression@@address.size() - 2 @AT@ 2019 @LENGTH@ 14
------------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.size() @AT@ 2019 @LENGTH@ 7
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@address.size() @AT@ 2027 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@address.size() - 2 @AT@ 2033 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ InfixExpression@@address.size() - 2 @AT@ 2036 @LENGTH@ 1
---------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 2000 @LENGTH@ 7
---------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@address.getElement(address.size() - 2).getValue() @AT@ 2039 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ MethodInvocation:serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).addDependency(PathManagerService.SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11274 @LENGTH@ 452
---UPD MethodInvocation@@serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).addDependency(PathManagerService.SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11281 @LENGTH@ 444
------INS MethodInvocation@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @TO@ MethodInvocation@@serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11281 @LENGTH@ 418
---------INS QualifiedName@@PathManagerService.SERVICE_NAME @TO@ MethodInvocation@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @AT@ 11667 @LENGTH@ 31
------------INS SimpleName@@PathManagerService @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 11667 @LENGTH@ 18
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 11686 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @TO@ TypeDeclaration@@[public]CriteriaTests,  @AT@ 2037 @LENGTH@ 275
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2037 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2044 @LENGTH@ 4
---INS SimpleName@@MethodName:equalIfCriteriaMatches @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2049 @LENGTH@ 22
---INS VariableDeclarationStatement@@Criteria left=new Criteria("name").is("Foo").and("lastname").is("Bar"); @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2081 @LENGTH@ 73
------INS SimpleType@@Criteria @TO@ VariableDeclarationStatement@@Criteria left=new Criteria("name").is("Foo").and("lastname").is("Bar"); @AT@ 2081 @LENGTH@ 8
------INS VariableDeclarationFragment@@left=new Criteria("name").is("Foo").and("lastname").is("Bar") @TO@ VariableDeclarationStatement@@Criteria left=new Criteria("name").is("Foo").and("lastname").is("Bar"); @AT@ 2090 @LENGTH@ 63
---------INS SimpleName@@left @TO@ VariableDeclarationFragment@@left=new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2090 @LENGTH@ 4
---------INS MethodInvocation@@new Criteria("name").is("Foo").and("lastname").is("Bar") @TO@ VariableDeclarationFragment@@left=new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2097 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:and:["lastname"] @TO@ MethodInvocation@@new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2097 @LENGTH@ 46
---------------INS StringLiteral@@"lastname" @TO@ MethodInvocation@@MethodName:and:["lastname"] @AT@ 2132 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:is:["Foo"] @TO@ MethodInvocation@@new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2097 @LENGTH@ 30
---------------INS StringLiteral@@"Foo" @TO@ MethodInvocation@@MethodName:is:["Foo"] @AT@ 2121 @LENGTH@ 5
------------INS ClassInstanceCreation@@Criteria["name"] @TO@ MethodInvocation@@new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2097 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2097 @LENGTH@ 3
---------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2101 @LENGTH@ 8
---------------INS StringLiteral@@"name" @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2110 @LENGTH@ 6
------------INS SimpleName@@MethodName:is:["Bar"] @TO@ MethodInvocation@@new Criteria("name").is("Foo").and("lastname").is("Bar") @AT@ 2144 @LENGTH@ 9
---------------INS StringLiteral@@"Bar" @TO@ SimpleName@@MethodName:is:["Bar"] @AT@ 2147 @LENGTH@ 5
---INS VariableDeclarationStatement@@Criteria right=new Criteria("name").is("Bar").and("lastname").is("Bar"); @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2158 @LENGTH@ 74
------INS SimpleType@@Criteria @TO@ VariableDeclarationStatement@@Criteria right=new Criteria("name").is("Bar").and("lastname").is("Bar"); @AT@ 2158 @LENGTH@ 8
------INS VariableDeclarationFragment@@right=new Criteria("name").is("Bar").and("lastname").is("Bar") @TO@ VariableDeclarationStatement@@Criteria right=new Criteria("name").is("Bar").and("lastname").is("Bar"); @AT@ 2167 @LENGTH@ 64
---------INS SimpleName@@right @TO@ VariableDeclarationFragment@@right=new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2167 @LENGTH@ 5
---------INS MethodInvocation@@new Criteria("name").is("Bar").and("lastname").is("Bar") @TO@ VariableDeclarationFragment@@right=new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2175 @LENGTH@ 56
------------INS MethodInvocation@@MethodName:and:["lastname"] @TO@ MethodInvocation@@new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2175 @LENGTH@ 46
---------------INS StringLiteral@@"lastname" @TO@ MethodInvocation@@MethodName:and:["lastname"] @AT@ 2210 @LENGTH@ 10
------------INS MethodInvocation@@MethodName:is:["Bar"] @TO@ MethodInvocation@@new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2175 @LENGTH@ 30
---------------INS StringLiteral@@"Bar" @TO@ MethodInvocation@@MethodName:is:["Bar"] @AT@ 2199 @LENGTH@ 5
------------INS ClassInstanceCreation@@Criteria["name"] @TO@ MethodInvocation@@new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2175 @LENGTH@ 20
---------------INS New@@new @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2175 @LENGTH@ 3
---------------INS SimpleType@@Criteria @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2179 @LENGTH@ 8
---------------INS StringLiteral@@"name" @TO@ ClassInstanceCreation@@Criteria["name"] @AT@ 2188 @LENGTH@ 6
------------INS SimpleName@@MethodName:is:["Bar"] @TO@ MethodInvocation@@new Criteria("name").is("Bar").and("lastname").is("Bar") @AT@ 2222 @LENGTH@ 9
---------------INS StringLiteral@@"Bar" @TO@ SimpleName@@MethodName:is:["Bar"] @AT@ 2225 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(left,is(not(right))) @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2238 @LENGTH@ 33
------INS MethodInvocation@@assertThat(left,is(not(right))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(left,is(not(right))) @AT@ 2238 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[left, is(not(right))] @TO@ MethodInvocation@@assertThat(left,is(not(right))) @AT@ 2238 @LENGTH@ 32
------------INS SimpleName@@left @TO@ SimpleName@@MethodName:assertThat:[left, is(not(right))] @AT@ 2249 @LENGTH@ 4
------------INS MethodInvocation@@is(not(right)) @TO@ SimpleName@@MethodName:assertThat:[left, is(not(right))] @AT@ 2255 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[not(right)] @TO@ MethodInvocation@@is(not(right)) @AT@ 2255 @LENGTH@ 14
------------------INS MethodInvocation@@not(right) @TO@ SimpleName@@MethodName:is:[not(right)] @AT@ 2258 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[not(right)] @TO@ MethodInvocation@@is(not(right)) @AT@ 2255 @LENGTH@ 14
------------------INS MethodInvocation@@not(right) @TO@ SimpleName@@MethodName:is:[not(right)] @AT@ 2258 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:not:[right] @TO@ MethodInvocation@@not(right) @AT@ 2258 @LENGTH@ 10
------------------------INS SimpleName@@right @TO@ SimpleName@@MethodName:not:[right] @AT@ 2262 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(right,is(not(left))) @TO@ MethodDeclaration@@public, void, MethodName:equalIfCriteriaMatches,  @AT@ 2275 @LENGTH@ 33
------INS MethodInvocation@@assertThat(right,is(not(left))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(right,is(not(left))) @AT@ 2275 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertThat:[right, is(not(left))] @TO@ MethodInvocation@@assertThat(right,is(not(left))) @AT@ 2275 @LENGTH@ 32
------------INS SimpleName@@right @TO@ SimpleName@@MethodName:assertThat:[right, is(not(left))] @AT@ 2286 @LENGTH@ 5
------------INS MethodInvocation@@is(not(left)) @TO@ SimpleName@@MethodName:assertThat:[right, is(not(left))] @AT@ 2293 @LENGTH@ 13
---------------INS SimpleName@@MethodName:is:[not(left)] @TO@ MethodInvocation@@is(not(left)) @AT@ 2293 @LENGTH@ 13
------------------INS MethodInvocation@@not(left) @TO@ SimpleName@@MethodName:is:[not(left)] @AT@ 2296 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[not(left)] @TO@ MethodInvocation@@is(not(left)) @AT@ 2293 @LENGTH@ 13
------------------INS MethodInvocation@@not(left) @TO@ SimpleName@@MethodName:is:[not(left)] @AT@ 2296 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:not:[left] @TO@ MethodInvocation@@not(left) @AT@ 2296 @LENGTH@ 9
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:not:[left] @AT@ 2300 @LENGTH@ 4


UPD MethodDeclaration@@Page<Person>, MethodName:findById, @Param("id") @ConvertWith(StringToListOfLongsConverter.class) List<Long> ids, Pageable pageable,  @TO@ Page<Person>, MethodName:findById, @Param("ids") List<Long> ids, Pageable pageable,  @AT@ 1326 @LENGTH@ 106
---UPD SingleVariableDeclaration@@@Param("id") @ConvertWith(StringToListOfLongsConverter.class) List<Long> ids @TO@ @Param("ids") List<Long> ids @AT@ 1335 @LENGTH@ 76


UPD FieldDeclaration@@private, Collection<ActivityState>, [activityStates=new HashSet<ActivityState>()] @TO@ private, Collection<ActivityState>, [activityStates=new CopyOnWriteArraySet<ActivityState>()] @AT@ 1517 @LENGTH@ 80
---UPD VariableDeclarationFragment@@activityStates=new HashSet<ActivityState>() @TO@ activityStates=new CopyOnWriteArraySet<ActivityState>() @AT@ 1551 @LENGTH@ 45
------UPD ClassInstanceCreation@@HashSet<ActivityState>[] @TO@ CopyOnWriteArraySet<ActivityState>[] @AT@ 1568 @LENGTH@ 28
---------UPD ParameterizedType@@HashSet<ActivityState> @TO@ CopyOnWriteArraySet<ActivityState> @AT@ 1572 @LENGTH@ 22
------------UPD SimpleType@@HashSet @TO@ CopyOnWriteArraySet @AT@ 1572 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @TO@ TypeDeclaration@@[public]LoggingErrorHandlerBuilderTest, ContextTestSupport @AT@ 4858 @LENGTH@ 642
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 4858 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 4865 @LENGTH@ 4
---INS SimpleName@@MethodName:testLoggingErrorHandler6 @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 4870 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 4904 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 4924 @LENGTH@ 402
------INS MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
) @AT@ 4924 @LENGTH@ 401
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
) @AT@ 4924 @LENGTH@ 7
---------INS SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
] @TO@ MethodInvocation@@context.addRoutes(new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
) @AT@ 4932 @LENGTH@ 393
------------INS ClassInstanceCreation@@RouteBuilder[] @TO@ SimpleName@@MethodName:addRoutes:[new RouteBuilder(){
  @Override public void configure() throws Exception {
    errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo"));
    from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn"));
  }
}
] @AT@ 4942 @LENGTH@ 382
---------------INS New@@new @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4942 @LENGTH@ 3
---------------INS SimpleType@@RouteBuilder @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4946 @LENGTH@ 12
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@RouteBuilder[] @AT@ 4961 @LENGTH@ 363
------------------INS MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 4997 @LENGTH@ 317
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 4997 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5004 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:configure @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5009 @LENGTH@ 9
---------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5028 @LENGTH@ 9
---------------------INS ExpressionStatement@@MethodInvocation:errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5056 @LENGTH@ 76
------------------------INS MethodInvocation@@errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")) @TO@ ExpressionStatement@@MethodInvocation:errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")) @AT@ 5056 @LENGTH@ 75
---------------------------INS SimpleName@@MethodName:errorHandler:[loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")] @TO@ MethodInvocation@@errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")) @AT@ 5056 @LENGTH@ 75
------------------------------INS MethodInvocation@@loggingErrorHandler().level(LoggingLevel.WARN).logName("foo") @TO@ SimpleName@@MethodName:errorHandler:[loggingErrorHandler().level(LoggingLevel.WARN).logName("foo")] @AT@ 5069 @LENGTH@ 61
---------------------------------INS MethodInvocation@@MethodName:level:[LoggingLevel.WARN] @TO@ MethodInvocation@@loggingErrorHandler().level(LoggingLevel.WARN).logName("foo") @AT@ 5069 @LENGTH@ 46
------------------------------------INS QualifiedName@@LoggingLevel.WARN @TO@ MethodInvocation@@MethodName:level:[LoggingLevel.WARN] @AT@ 5097 @LENGTH@ 17
---------------------------------------INS SimpleName@@LoggingLevel @TO@ QualifiedName@@LoggingLevel.WARN @AT@ 5097 @LENGTH@ 12
---------------------------------------INS SimpleName@@WARN @TO@ QualifiedName@@LoggingLevel.WARN @AT@ 5110 @LENGTH@ 4
---------------------------------INS MethodInvocation@@MethodName:loggingErrorHandler:[] @TO@ MethodInvocation@@loggingErrorHandler().level(LoggingLevel.WARN).logName("foo") @AT@ 5069 @LENGTH@ 21
---------------------------------INS SimpleName@@MethodName:logName:["foo"] @TO@ MethodInvocation@@loggingErrorHandler().level(LoggingLevel.WARN).logName("foo") @AT@ 5116 @LENGTH@ 14
------------------------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:logName:["foo"] @AT@ 5124 @LENGTH@ 5
---------------------INS ExpressionStatement@@MethodInvocation:from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @TO@ MethodDeclaration@@public, void, MethodName:configure, Exception,  @AT@ 5150 @LENGTH@ 150
------------------------INS MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @TO@ ExpressionStatement@@MethodInvocation:from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @AT@ 5150 @LENGTH@ 149
---------------------------INS MethodInvocation@@MethodName:to:["mock:foo"] @TO@ MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @AT@ 5150 @LENGTH@ 75
------------------------------INS StringLiteral@@"mock:foo" @TO@ MethodInvocation@@MethodName:to:["mock:foo"] @AT@ 5214 @LENGTH@ 10
---------------------------INS MethodInvocation@@MethodName:routeId:["myRoute"] @TO@ MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @AT@ 5150 @LENGTH@ 39
------------------------------INS StringLiteral@@"myRoute" @TO@ MethodInvocation@@MethodName:routeId:["myRoute"] @AT@ 5179 @LENGTH@ 9
---------------------------INS MethodInvocation@@MethodName:from:["direct:start"] @TO@ MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @AT@ 5150 @LENGTH@ 20
------------------------------INS StringLiteral@@"direct:start" @TO@ MethodInvocation@@MethodName:from:["direct:start"] @AT@ 5155 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:throwException:[new IllegalArgumentException("Damn")] @TO@ MethodInvocation@@from("direct:start").routeId("myRoute").to("mock:foo").throwException(new IllegalArgumentException("Damn")) @AT@ 5247 @LENGTH@ 52
------------------------------INS ClassInstanceCreation@@IllegalArgumentException["Damn"] @TO@ SimpleName@@MethodName:throwException:[new IllegalArgumentException("Damn")] @AT@ 5262 @LENGTH@ 36
---------------------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Damn"] @AT@ 5262 @LENGTH@ 3
---------------------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Damn"] @AT@ 5266 @LENGTH@ 24
---------------------------------INS StringLiteral@@"Damn" @TO@ ClassInstanceCreation@@IllegalArgumentException["Damn"] @AT@ 5291 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 5335 @LENGTH@ 16
------INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 5335 @LENGTH@ 15
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 5335 @LENGTH@ 7
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 5343 @LENGTH@ 7
---INS TryStatement@@try {  template.sendBody("direct:start","Hello World");} catch (Exception e) {} @TO@ MethodDeclaration@@public, void, MethodName:testLoggingErrorHandler6, Exception,  @AT@ 5361 @LENGTH@ 133
------INS ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello World") @TO@ TryStatement@@try {  template.sendBody("direct:start","Hello World");} catch (Exception e) {} @AT@ 5379 @LENGTH@ 49
---------INS MethodInvocation@@template.sendBody("direct:start","Hello World") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("direct:start","Hello World") @AT@ 5379 @LENGTH@ 48
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("direct:start","Hello World") @AT@ 5379 @LENGTH@ 8
------------INS SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @TO@ MethodInvocation@@template.sendBody("direct:start","Hello World") @AT@ 5388 @LENGTH@ 39
---------------INS StringLiteral@@"direct:start" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @AT@ 5397 @LENGTH@ 14
---------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:sendBody:["direct:start", "Hello World"] @AT@ 5413 @LENGTH@ 13
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  template.sendBody("direct:start","Hello World");} catch (Exception e) {} @AT@ 5439 @LENGTH@ 55
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 5446 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 5446 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 5456 @LENGTH@ 1


MOV MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ TypeDeclaration@@[@ContextName("contextB"), public]RoutesContextB, RouteBuilder @AT@ 1647 @LENGTH@ 138


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup)) {  return;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup,propertyReplacer)) {  return;} @AT@ 2871 @LENGTH@ 273
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup,propertyReplacer) @AT@ 2875 @LENGTH@ 96
------UPD SimpleName@@MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup] @TO@ MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup, propertyReplacer] @AT@ 2910 @LENGTH@ 61
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup] @AT@ 2972 @LENGTH@ 16


UPD ReturnStatement@@MethodInvocation:vault.retrieve(tokens[1],tokens[2],tokens[3].getBytes()) @TO@ MethodInvocation:vault.retrieve(tokens[1],tokens[2],tokens[3].getBytes(VaultSession.CHARSET)) @AT@ 4560 @LENGTH@ 66
---UPD MethodInvocation@@vault.retrieve(tokens[1],tokens[2],tokens[3].getBytes()) @TO@ vault.retrieve(tokens[1],tokens[2],tokens[3].getBytes(VaultSession.CHARSET)) @AT@ 4567 @LENGTH@ 58
------UPD SimpleName@@MethodName:retrieve:[tokens[1], tokens[2], tokens[3].getBytes()] @TO@ MethodName:retrieve:[tokens[1], tokens[2], tokens[3].getBytes(VaultSession.CHARSET)] @AT@ 4573 @LENGTH@ 52
---------UPD MethodInvocation@@tokens[3].getBytes() @TO@ tokens[3].getBytes(VaultSession.CHARSET) @AT@ 4604 @LENGTH@ 20
------------UPD SimpleName@@MethodName:getBytes:[] @TO@ MethodName:getBytes:[VaultSession.CHARSET] @AT@ 4614 @LENGTH@ 10
---------------INS QualifiedName@@VaultSession.CHARSET @TO@ SimpleName@@MethodName:getBytes:[] @AT@ 4623 @LENGTH@ 20
------------------INS SimpleName@@VaultSession @TO@ QualifiedName@@VaultSession.CHARSET @AT@ 4623 @LENGTH@ 12
------------------INS SimpleName@@CHARSET @TO@ QualifiedName@@VaultSession.CHARSET @AT@ 4636 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:setUp, Exception,  @TO@ protected, void, MethodName:doPostSetup, Exception,  @AT@ 1240 @LENGTH@ 142
---UPD Modifier@@public @TO@ protected @AT@ 1240 @LENGTH@ 6
---UPD SimpleName@@MethodName:setUp @TO@ MethodName:doPostSetup @AT@ 1252 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:this.map=Hazelcast.getMultiMap("bar") @TO@ Assignment:this.map=hazelcastInstance.getMultiMap("bar") @AT@ 1287 @LENGTH@ 40
------UPD Assignment@@this.map=Hazelcast.getMultiMap("bar") @TO@ this.map=hazelcastInstance.getMultiMap("bar") @AT@ 1287 @LENGTH@ 39
---------UPD MethodInvocation@@Hazelcast.getMultiMap("bar") @TO@ hazelcastInstance.getMultiMap("bar") @AT@ 1298 @LENGTH@ 28
------------UPD SimpleName@@Name:Hazelcast @TO@ Name:hazelcastInstance @AT@ 1298 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1362 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1362 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1368 @LENGTH@ 5
---INS VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1423 @LENGTH@ 93
------INS SimpleType@@HazelcastComponent @TO@ VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @AT@ 1423 @LENGTH@ 18
------INS VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @TO@ VariableDeclarationStatement@@HazelcastComponent component=context().getComponent("hazelcast",HazelcastComponent.class); @AT@ 1442 @LENGTH@ 73
---------INS SimpleName@@component @TO@ VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1442 @LENGTH@ 9
---------INS MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @TO@ VariableDeclarationFragment@@component=context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1454 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:context:[] @TO@ MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1454 @LENGTH@ 9
------------INS SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @TO@ MethodInvocation@@context().getComponent("hazelcast",HazelcastComponent.class) @AT@ 1464 @LENGTH@ 51
---------------INS StringLiteral@@"hazelcast" @TO@ SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @AT@ 1477 @LENGTH@ 11
---------------INS TypeLiteral@@HazelcastComponent.class @TO@ SimpleName@@MethodName:getComponent:["hazelcast", HazelcastComponent.class] @AT@ 1490 @LENGTH@ 24
---INS VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @TO@ MethodDeclaration@@public, void, MethodName:setUp, Exception,  @AT@ 1525 @LENGTH@ 71
------INS SimpleType@@HazelcastInstance @TO@ VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @AT@ 1525 @LENGTH@ 17
------INS VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @TO@ VariableDeclarationStatement@@HazelcastInstance hazelcastInstance=component.getHazelcastInstance(); @AT@ 1543 @LENGTH@ 52
---------INS SimpleName@@hazelcastInstance @TO@ VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @AT@ 1543 @LENGTH@ 17
---------INS MethodInvocation@@component.getHazelcastInstance() @TO@ VariableDeclarationFragment@@hazelcastInstance=component.getHazelcastInstance() @AT@ 1563 @LENGTH@ 32
------------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.getHazelcastInstance() @AT@ 1563 @LENGTH@ 9
------------INS SimpleName@@MethodName:getHazelcastInstance:[] @TO@ MethodInvocation@@component.getHazelcastInstance() @AT@ 1573 @LENGTH@ 22


UPD TryStatement@@try {  String mvn=future.getUrl();  String file=future.getFile().toURI().toURL().toString();  String real=url.replace(mvn,file);  SimpleDownloadTask task=new SimpleDownloadTask(real,executor);  executor.submit(task);  task.addListener(new FutureListener<DownloadFuture>(){    @Override public void operationComplete(    DownloadFuture future){      try {        download.setFile(future.getFile());      } catch (      IOException e) {      }    }  });} catch (IOException e) {} @TO@ try {  final String mvn=future.getUrl();  String file=future.getFile().toURI().toURL().toString();  String real=url.replace(mvn,file);  SimpleDownloadTask task=new SimpleDownloadTask(real,executor);  executor.submit(task);  task.addListener(new FutureListener<DownloadFuture>(){    @Override public void operationComplete(    DownloadFuture future){      try {        download.setFile(future.getFile());      } catch (      IOException e) {        download.setException(e);      }    }  });} catch (IOException e) {  download.setException(e);} @AT@ 3013 @LENGTH@ 1022
---UPD VariableDeclarationStatement@@String mvn=future.getUrl(); @TO@ final String mvn=future.getUrl(); @AT@ 3047 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@String mvn=future.getUrl(); @AT@ 3047 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
) @TO@ MethodInvocation:task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
) @AT@ 3403 @LENGTH@ 518
------UPD MethodInvocation@@task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
) @TO@ task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
) @AT@ 3403 @LENGTH@ 517
---------UPD SimpleName@@MethodName:addListener:[new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
] @TO@ MethodName:addListener:[new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
] @AT@ 3408 @LENGTH@ 512
---UPD CatchClause@@catch (IOException e) {} @TO@ catch (IOException e) {  download.setException(e);} @AT@ 3948 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:download.setException(e) @TO@ CatchClause@@catch (IOException e) {} @AT@ 4022 @LENGTH@ 25
---------INS MethodInvocation@@download.setException(e) @TO@ ExpressionStatement@@MethodInvocation:download.setException(e) @AT@ 4022 @LENGTH@ 24
------------INS SimpleName@@Name:download @TO@ MethodInvocation@@download.setException(e) @AT@ 4022 @LENGTH@ 8
------------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@download.setException(e) @AT@ 4031 @LENGTH@ 15
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 4044 @LENGTH@ 1


INS FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @TO@ TypeDeclaration@@[public]ValidateOperationHandler, [OperationStepHandler] @AT@ 3316 @LENGTH@ 303
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3316 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3323 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3330 @LENGTH@ 5
---INS SimpleType@@OperationDefinition @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3336 @LENGTH@ 19
---INS VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3356 @LENGTH@ 262
------INS SimpleName@@DEFINITION_PRIVATE @TO@ VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3356 @LENGTH@ 18
------INS MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @TO@ VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 241
---------INS MethodInvocation@@MethodName:setPrivateEntry:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 220
---------INS MethodInvocation@@MethodName:setRuntimeOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 189
---------INS MethodInvocation@@MethodName:setReadOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 159
---------INS MethodInvocation@@MethodName:setParameters:[VALUE] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 132
------------INS SimpleName@@VALUE @TO@ MethodInvocation@@MethodName:setParameters:[VALUE] @AT@ 3503 @LENGTH@ 5
---------INS ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 98
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3377 @LENGTH@ 3
------------INS SimpleType@@SimpleOperationDefinitionBuilder @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3381 @LENGTH@ 32
------------INS SimpleName@@VALIDATE_OPERATION @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3414 @LENGTH@ 18
------------INS MethodInvocation@@ControllerResolver.getResolver("global") @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3434 @LENGTH@ 40
---------------INS SimpleName@@Name:ControllerResolver @TO@ MethodInvocation@@ControllerResolver.getResolver("global") @AT@ 3434 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getResolver:["global"] @TO@ MethodInvocation@@ControllerResolver.getResolver("global") @AT@ 3453 @LENGTH@ 21
------------------INS StringLiteral@@"global" @TO@ SimpleName@@MethodName:getResolver:["global"] @AT@ 3465 @LENGTH@ 8
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3611 @LENGTH@ 7


UPD VariableDeclarationStatement@@final Configuration cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())); @TO@ final Configuration cfg=ConfigurationUtils.createFrom(configuration,properties); @AT@ 2695 @LENGTH@ 170
---UPD VariableDeclarationFragment@@cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @TO@ cfg=ConfigurationUtils.createFrom(configuration,properties) @AT@ 2715 @LENGTH@ 149
------DEL ParenthesizedExpression@@(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @AT@ 2721 @LENGTH@ 143
---------DEL ConditionalExpression@@properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration()) @AT@ 2722 @LENGTH@ 141
------------DEL InfixExpression@@properties != null @AT@ 2722 @LENGTH@ 18
---------------DEL SimpleName@@properties @AT@ 2722 @LENGTH@ 10
---------------DEL Operator@@!= @AT@ 2732 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 2736 @LENGTH@ 4
------------DEL ParenthesizedExpression@@(configuration != null ? configuration : new Configuration()) @AT@ 2802 @LENGTH@ 61
---------------DEL ConditionalExpression@@configuration != null ? configuration : new Configuration() @AT@ 2803 @LENGTH@ 59
------------------DEL InfixExpression@@configuration != null @AT@ 2803 @LENGTH@ 21
---------------------DEL SimpleName@@configuration @AT@ 2803 @LENGTH@ 13
---------------------DEL Operator@@!= @AT@ 2816 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 2820 @LENGTH@ 4
------------------DEL SimpleName@@configuration @AT@ 2827 @LENGTH@ 13
------------------DEL ClassInstanceCreation@@Configuration[] @AT@ 2843 @LENGTH@ 19
---------------------DEL New@@new @AT@ 2843 @LENGTH@ 3
---------------------DEL SimpleType@@Configuration @AT@ 2847 @LENGTH@ 13
------MOV MethodInvocation@@ConfigurationUtils.createFrom(configuration,properties) @TO@ VariableDeclarationFragment@@cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @AT@ 2743 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:InterceptorOrder.assertEquals(InterceptorParent.class,InterceptorChild.class,MethodInterceptorParent.class,MethodInterceptorChild.class,BeanParent.class,BeanChild.class,CDIInterceptor.class) @TO@ MethodInvocation:InterceptorOrder.assertEquals(InterceptorParent.class,InterceptorChild.class,MethodInterceptorParent.class,MethodInterceptorChild.class,CDIInterceptor.class,BeanParent.class,BeanChild.class) @AT@ 2434 @LENGTH@ 197
---UPD MethodInvocation@@InterceptorOrder.assertEquals(InterceptorParent.class,InterceptorChild.class,MethodInterceptorParent.class,MethodInterceptorChild.class,BeanParent.class,BeanChild.class,CDIInterceptor.class) @TO@ InterceptorOrder.assertEquals(InterceptorParent.class,InterceptorChild.class,MethodInterceptorParent.class,MethodInterceptorChild.class,CDIInterceptor.class,BeanParent.class,BeanChild.class) @AT@ 2434 @LENGTH@ 196
------UPD SimpleName@@MethodName:assertEquals:[InterceptorParent.class, InterceptorChild.class, MethodInterceptorParent.class, MethodInterceptorChild.class, BeanParent.class, BeanChild.class, CDIInterceptor.class] @TO@ MethodName:assertEquals:[InterceptorParent.class, InterceptorChild.class, MethodInterceptorParent.class, MethodInterceptorChild.class, CDIInterceptor.class, BeanParent.class, BeanChild.class] @AT@ 2451 @LENGTH@ 179
---------UPD TypeLiteral@@BeanParent.class @TO@ CDIInterceptor.class @AT@ 2574 @LENGTH@ 16
---------UPD TypeLiteral@@BeanChild.class @TO@ BeanParent.class @AT@ 2592 @LENGTH@ 15
---------UPD TypeLiteral@@CDIInterceptor.class @TO@ BeanChild.class @AT@ 2609 @LENGTH@ 20


UPD Block@@ThenBody:{  return tc.convertTo(type,exchange,embedded);} @TO@ ThenBody:{  Object result=tc.convertTo(type,exchange,embedded);  if (result != null) {    return (T)result;  }  break;} @AT@ 5390 @LENGTH@ 102
---UPD ReturnStatement@@MethodInvocation:tc.convertTo(type,exchange,embedded) @TO@ CastExpression:(T)result @AT@ 5420 @LENGTH@ 46
---INS VariableDeclarationStatement@@Object result=tc.convertTo(type,exchange,embedded); @TO@ Block@@ThenBody:{  return tc.convertTo(type,exchange,embedded);} @AT@ 5512 @LENGTH@ 55
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=tc.convertTo(type,exchange,embedded); @AT@ 5512 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=tc.convertTo(type,exchange,embedded) @TO@ VariableDeclarationStatement@@Object result=tc.convertTo(type,exchange,embedded); @AT@ 5519 @LENGTH@ 47
---------MOV MethodInvocation@@tc.convertTo(type,exchange,embedded) @TO@ VariableDeclarationFragment@@result=tc.convertTo(type,exchange,embedded) @AT@ 5427 @LENGTH@ 38
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=tc.convertTo(type,exchange,embedded) @AT@ 5519 @LENGTH@ 6
---INS IfStatement@@if (result != null) {  return (T)result;} @TO@ Block@@ThenBody:{  return tc.convertTo(type,exchange,embedded);} @AT@ 5596 @LENGTH@ 101
------INS InfixExpression@@result != null @TO@ IfStatement@@if (result != null) {  return (T)result;} @AT@ 5600 @LENGTH@ 14
---------INS SimpleName@@result @TO@ InfixExpression@@result != null @AT@ 5600 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@result != null @AT@ 5606 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@result != null @AT@ 5610 @LENGTH@ 4
------INS Block@@ThenBody:{  return (T)result;} @TO@ IfStatement@@if (result != null) {  return (T)result;} @AT@ 5616 @LENGTH@ 81
---------MOV ReturnStatement@@MethodInvocation:tc.convertTo(type,exchange,embedded) @TO@ Block@@ThenBody:{  return (T)result;} @AT@ 5420 @LENGTH@ 46
------------INS CastExpression@@(T)result @TO@ ReturnStatement@@MethodInvocation:tc.convertTo(type,exchange,embedded) @AT@ 5657 @LENGTH@ 9
---------------INS SimpleType@@T @TO@ CastExpression@@(T)result @AT@ 5658 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ CastExpression@@(T)result @AT@ 5660 @LENGTH@ 6
---INS BreakStatement@@ @TO@ Block@@ThenBody:{  return tc.convertTo(type,exchange,embedded);} @AT@ 5800 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @TO@ MethodDeclaration@@public, static, void, MethodName:createHostRegistry, final String hostName, final ManagementResourceRegistration root, final HostControllerConfigurationPersister configurationPersister, final HostControllerEnvironment environment, final HostRunningModeControl runningModeControl, final HostFileRepository localFileRepository, final LocalHostControllerInfoImpl hostControllerInfo, final ServerInventory serverInventory, final HostFileRepository remoteFileRepository, final ContentRepository contentRepository, final DomainController domainController, final ExtensionRegistry extensionRegistry, final AbstractVaultReader vaultReader, final IgnoredDomainResourceRegistry ignoredRegistry, final ControlledProcessState processState, final PathManagerService pathManager,  @AT@ 16141 @LENGTH@ 240
---INS MethodInvocation@@hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @TO@ ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 16141 @LENGTH@ 239
------INS SimpleName@@Name:hostRegistration @TO@ MethodInvocation@@hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 16141 @LENGTH@ 16
------INS SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @TO@ MethodInvocation@@hostRegistration.registerOperationHandler(ValidateAddressOperationHandler.OPERATION_NAME,ValidateAddressOperationHandler.INSTANCE,ValidateAddressOperationHandler.INSTANCE,false,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 16158 @LENGTH@ 222
---------INS QualifiedName@@ValidateAddressOperationHandler.OPERATION_NAME @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 16183 @LENGTH@ 46
------------INS SimpleName@@ValidateAddressOperationHandler @TO@ QualifiedName@@ValidateAddressOperationHandler.OPERATION_NAME @AT@ 16183 @LENGTH@ 31
------------INS SimpleName@@OPERATION_NAME @TO@ QualifiedName@@ValidateAddressOperationHandler.OPERATION_NAME @AT@ 16215 @LENGTH@ 14
---------INS QualifiedName@@ValidateAddressOperationHandler.INSTANCE @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 16231 @LENGTH@ 40
------------INS SimpleName@@ValidateAddressOperationHandler @TO@ QualifiedName@@ValidateAddressOperationHandler.INSTANCE @AT@ 16231 @LENGTH@ 31
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@ValidateAddressOperationHandler.INSTANCE @AT@ 16263 @LENGTH@ 8
---------INS QualifiedName@@ValidateAddressOperationHandler.INSTANCE @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 16289 @LENGTH@ 40
------------INS SimpleName@@ValidateAddressOperationHandler @TO@ QualifiedName@@ValidateAddressOperationHandler.INSTANCE @AT@ 16289 @LENGTH@ 31
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@ValidateAddressOperationHandler.INSTANCE @AT@ 16321 @LENGTH@ 8
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 16331 @LENGTH@ 5
---------INS MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateAddressOperationHandler.OPERATION_NAME, ValidateAddressOperationHandler.INSTANCE, ValidateAddressOperationHandler.INSTANCE, false, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 16338 @LENGTH@ 41
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @AT@ 16338 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[OperationEntry.Flag.READ_ONLY] @TO@ MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @AT@ 16346 @LENGTH@ 33
---------------INS QualifiedName@@OperationEntry.Flag.READ_ONLY @TO@ SimpleName@@MethodName:of:[OperationEntry.Flag.READ_ONLY] @AT@ 16349 @LENGTH@ 29
------------------INS QualifiedName@@OperationEntry.Flag @TO@ QualifiedName@@OperationEntry.Flag.READ_ONLY @AT@ 16349 @LENGTH@ 19
---------------------INS SimpleName@@OperationEntry @TO@ QualifiedName@@OperationEntry.Flag @AT@ 16349 @LENGTH@ 14
---------------------INS SimpleName@@Flag @TO@ QualifiedName@@OperationEntry.Flag @AT@ 16364 @LENGTH@ 4
------------------INS SimpleName@@READ_ONLY @TO@ QualifiedName@@OperationEntry.Flag.READ_ONLY @AT@ 16369 @LENGTH@ 9


UPD MethodDeclaration@@private, String, MethodName:getConnectorKey, WebsocketEndpoint endpoint,  @TO@ private, static, String, MethodName:getConnectorKey, WebsocketEndpoint endpoint,  @AT@ 25384 @LENGTH@ 159
---INS Modifier@@static @TO@ MethodDeclaration@@private, String, MethodName:getConnectorKey, WebsocketEndpoint endpoint,  @AT@ 25410 @LENGTH@ 6


DEL MethodDeclaration@@public, synchronized, void, MethodName:deploy, final File file, final String deploymentName, DeploymentExecutionException, DeploymentFailureException, IOException,  @AT@ 5329 @LENGTH@ 699
---DEL Modifier@@public @AT@ 5329 @LENGTH@ 6
---DEL Modifier@@synchronized @AT@ 5336 @LENGTH@ 12
---DEL PrimitiveType@@void @AT@ 5349 @LENGTH@ 4
---DEL SimpleName@@MethodName:deploy @AT@ 5354 @LENGTH@ 6
---DEL SingleVariableDeclaration@@final File file @AT@ 5361 @LENGTH@ 15
------DEL Modifier@@final @AT@ 5361 @LENGTH@ 5
------DEL SimpleType@@File @AT@ 5367 @LENGTH@ 4
------DEL SimpleName@@file @AT@ 5372 @LENGTH@ 4
---DEL SingleVariableDeclaration@@final String deploymentName @AT@ 5378 @LENGTH@ 27
------DEL Modifier@@final @AT@ 5378 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5384 @LENGTH@ 6
------DEL SimpleName@@deploymentName @AT@ 5391 @LENGTH@ 14
---DEL SimpleType@@DeploymentExecutionException @AT@ 5414 @LENGTH@ 28
---DEL SimpleType@@DeploymentFailureException @AT@ 5444 @LENGTH@ 26
---DEL SimpleType@@IOException @AT@ 5472 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:checkServerState() @AT@ 5494 @LENGTH@ 19
------DEL MethodInvocation@@MethodName:checkServerState:[] @AT@ 5494 @LENGTH@ 18
---DEL IfStatement@@if (isRunning()) {switch (StandaloneDeployment.create(client,file,deploymentName,Deployment.Type.DEPLOY).execute()) {case REQUIRES_RESTART:{      client.execute(Operations.createOperation(Operations.RELOAD));      break;    }case SUCCESS:  break;}} else {throw new DeploymentFailureException("Cannot deploy to a server that is not running.");} @AT@ 5522 @LENGTH@ 500
------DEL MethodInvocation@@MethodName:isRunning:[] @AT@ 5526 @LENGTH@ 11
------DEL Block@@ThenBody:{switch (StandaloneDeployment.create(client,file,deploymentName,Deployment.Type.DEPLOY).execute()) {case REQUIRES_RESTART:{      client.execute(Operations.createOperation(Operations.RELOAD));      break;    }case SUCCESS:  break;}} @AT@ 5539 @LENGTH@ 366
---------DEL SwitchStatement@@switch (StandaloneDeployment.create(client,file,deploymentName,Deployment.Type.DEPLOY).execute()) {case REQUIRES_RESTART:{    client.execute(Operations.createOperation(Operations.RELOAD));    break;  }case SUCCESS:break;} @AT@ 5553 @LENGTH@ 342
------------DEL MethodInvocation@@StandaloneDeployment.create(client,file,deploymentName,Deployment.Type.DEPLOY).execute() @AT@ 5561 @LENGTH@ 91
---------------DEL MethodInvocation@@MethodName:create:[client, file, deploymentName, Deployment.Type.DEPLOY] @AT@ 5561 @LENGTH@ 81
------------------DEL SimpleName@@client @AT@ 5589 @LENGTH@ 6
------------------DEL SimpleName@@file @AT@ 5597 @LENGTH@ 4
------------------DEL SimpleName@@deploymentName @AT@ 5603 @LENGTH@ 14
------------------DEL QualifiedName@@Deployment.Type.DEPLOY @AT@ 5619 @LENGTH@ 22
---------------------DEL QualifiedName@@Deployment.Type @AT@ 5619 @LENGTH@ 15
------------------------DEL SimpleName@@Deployment @AT@ 5619 @LENGTH@ 10
------------------------DEL SimpleName@@Type @AT@ 5630 @LENGTH@ 4
---------------------DEL SimpleName@@DEPLOY @AT@ 5635 @LENGTH@ 6
---------------DEL SimpleName@@Name:StandaloneDeployment @AT@ 5561 @LENGTH@ 20
---------------DEL SimpleName@@MethodName:execute:[] @AT@ 5643 @LENGTH@ 9
------------DEL SwitchCase@@case REQUIRES_RESTART: @AT@ 5672 @LENGTH@ 22
---------------DEL SimpleName@@REQUIRES_RESTART @AT@ 5677 @LENGTH@ 16
------------DEL ExpressionStatement@@MethodInvocation:client.execute(Operations.createOperation(Operations.RELOAD)) @AT@ 5717 @LENGTH@ 62
---------------DEL MethodInvocation@@client.execute(Operations.createOperation(Operations.RELOAD)) @AT@ 5717 @LENGTH@ 61
------------------DEL SimpleName@@Name:client @AT@ 5717 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:execute:[Operations.createOperation(Operations.RELOAD)] @AT@ 5724 @LENGTH@ 54
---------------------DEL MethodInvocation@@Operations.createOperation(Operations.RELOAD) @AT@ 5732 @LENGTH@ 45
------------------------DEL SimpleName@@Name:Operations @AT@ 5732 @LENGTH@ 10
------------------------DEL SimpleName@@MethodName:createOperation:[Operations.RELOAD] @AT@ 5743 @LENGTH@ 34
---------------------------DEL QualifiedName@@Operations.RELOAD @AT@ 5759 @LENGTH@ 17
------------------------------DEL SimpleName@@Operations @AT@ 5759 @LENGTH@ 10
------------------------------DEL SimpleName@@RELOAD @AT@ 5770 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 5800 @LENGTH@ 6
------------DEL SwitchCase@@case SUCCESS: @AT@ 5841 @LENGTH@ 13
---------------DEL SimpleName@@SUCCESS @AT@ 5846 @LENGTH@ 7
------------DEL BreakStatement@@ @AT@ 5875 @LENGTH@ 6
------DEL Block@@ElseBody:{  throw new DeploymentFailureException("Cannot deploy to a server that is not running.");} @AT@ 5911 @LENGTH@ 111
---------DEL ThrowStatement@@ClassInstanceCreation:new DeploymentFailureException("Cannot deploy to a server that is not running.") @AT@ 5925 @LENGTH@ 87
------------DEL ClassInstanceCreation@@DeploymentFailureException["Cannot deploy to a server that is not running."] @AT@ 5931 @LENGTH@ 80
---------------DEL New@@new @AT@ 5931 @LENGTH@ 3
---------------DEL SimpleType@@DeploymentFailureException @AT@ 5935 @LENGTH@ 26
---------------DEL StringLiteral@@"Cannot deploy to a server that is not running." @AT@ 5962 @LENGTH@ 48


UPD FieldDeclaration@@private, static, String, [NEW_LINE="\n"] @TO@ private, static, String, [NEW_LINE=String.format("%n")] @AT@ 2046 @LENGTH@ 38
---UPD VariableDeclarationFragment@@NEW_LINE="\n" @TO@ NEW_LINE=String.format("%n") @AT@ 2068 @LENGTH@ 15
------INS MethodInvocation@@String.format("%n") @TO@ VariableDeclarationFragment@@NEW_LINE="\n" @AT@ 2079 @LENGTH@ 19
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%n") @AT@ 2079 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["%n"] @TO@ MethodInvocation@@String.format("%n") @AT@ 2086 @LENGTH@ 12
------------INS StringLiteral@@"%n" @TO@ SimpleName@@MethodName:format:["%n"] @AT@ 2093 @LENGTH@ 4
------DEL StringLiteral@@"\n" @AT@ 2079 @LENGTH@ 4


UPD Block@@ThenBody:{  return tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));} @TO@ ThenBody:{  Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));  if (result == null) {    return (T)Void.TYPE;  } else {    return (T)result;  }} @AT@ 6872 @LENGTH@ 113
---UPD ReturnStatement@@MethodInvocation:tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @TO@ CastExpression:(T)result @AT@ 6890 @LENGTH@ 81
---INS VariableDeclarationStatement@@Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)); @TO@ Block@@ThenBody:{  return tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));} @AT@ 6891 @LENGTH@ 90
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)); @AT@ 6891 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @TO@ VariableDeclarationStatement@@Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)); @AT@ 6898 @LENGTH@ 82
---------MOV MethodInvocation@@tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @TO@ VariableDeclarationFragment@@result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @AT@ 6897 @LENGTH@ 73
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @AT@ 6898 @LENGTH@ 6
---INS IfStatement@@if (result == null) {  return (T)Void.TYPE;} else {  return (T)result;} @TO@ Block@@ThenBody:{  return tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));} @AT@ 6998 @LENGTH@ 236
------INS InfixExpression@@result == null @TO@ IfStatement@@if (result == null) {  return (T)Void.TYPE;} else {  return (T)result;} @AT@ 7002 @LENGTH@ 14
---------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 7002 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 7008 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 7012 @LENGTH@ 4
------INS Block@@ThenBody:{  return (T)Void.TYPE;} @TO@ IfStatement@@if (result == null) {  return (T)Void.TYPE;} else {  return (T)result;} @AT@ 7018 @LENGTH@ 152
---------INS ReturnStatement@@CastExpression:(T)Void.TYPE @TO@ Block@@ThenBody:{  return (T)Void.TYPE;} @AT@ 7131 @LENGTH@ 21
------------INS CastExpression@@(T)Void.TYPE @TO@ ReturnStatement@@CastExpression:(T)Void.TYPE @AT@ 7138 @LENGTH@ 13
---------------INS SimpleType@@T @TO@ CastExpression@@(T)Void.TYPE @AT@ 7139 @LENGTH@ 1
---------------INS QualifiedName@@Void.TYPE @TO@ CastExpression@@(T)Void.TYPE @AT@ 7142 @LENGTH@ 9
------------------INS SimpleName@@Void @TO@ QualifiedName@@Void.TYPE @AT@ 7142 @LENGTH@ 4
------------------INS SimpleName@@TYPE @TO@ QualifiedName@@Void.TYPE @AT@ 7147 @LENGTH@ 4
------INS Block@@ElseBody:{  return (T)result;} @TO@ IfStatement@@if (result == null) {  return (T)Void.TYPE;} else {  return (T)result;} @AT@ 7176 @LENGTH@ 58
---------MOV ReturnStatement@@MethodInvocation:tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @TO@ Block@@ElseBody:{  return (T)result;} @AT@ 6890 @LENGTH@ 81
------------INS CastExpression@@(T)result @TO@ ReturnStatement@@MethodInvocation:tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange)) @AT@ 7205 @LENGTH@ 10
---------------INS SimpleType@@T @TO@ CastExpression@@(T)result @AT@ 7206 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ CastExpression@@(T)result @AT@ 7209 @LENGTH@ 6


UPD IfStatement@@if (FileUtil.isWindows()) {  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} else {  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @TO@ if (FileUtil.isWindows()) {  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} else {  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 6427 @LENGTH@ 1116
---UPD Block@@ThenBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @TO@ ThenBody:{  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 6453 @LENGTH@ 554
------INS ExpressionStatement@@MethodInvocation:assertEquals("..\\foo",FileUtil.compactPath("..\\foo")) @TO@ Block@@ThenBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 6467 @LENGTH@ 57
---------INS MethodInvocation@@assertEquals("..\\foo",FileUtil.compactPath("..\\foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("..\\foo",FileUtil.compactPath("..\\foo")) @AT@ 6467 @LENGTH@ 56
------------INS SimpleName@@MethodName:assertEquals:["..\\foo", FileUtil.compactPath("..\\foo")] @TO@ MethodInvocation@@assertEquals("..\\foo",FileUtil.compactPath("..\\foo")) @AT@ 6467 @LENGTH@ 56
---------------INS StringLiteral@@"..\\foo" @TO@ SimpleName@@MethodName:assertEquals:["..\\foo", FileUtil.compactPath("..\\foo")] @AT@ 6480 @LENGTH@ 9
---------------INS MethodInvocation@@FileUtil.compactPath("..\\foo") @TO@ SimpleName@@MethodName:assertEquals:["..\\foo", FileUtil.compactPath("..\\foo")] @AT@ 6491 @LENGTH@ 31
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("..\\foo") @AT@ 6491 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["..\\foo"] @TO@ MethodInvocation@@FileUtil.compactPath("..\\foo") @AT@ 6500 @LENGTH@ 22
---------------------INS StringLiteral@@"..\\foo" @TO@ SimpleName@@MethodName:compactPath:["..\\foo"] @AT@ 6512 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo")) @TO@ Block@@ThenBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 6537 @LENGTH@ 65
---------INS MethodInvocation@@assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo")) @AT@ 6537 @LENGTH@ 64
------------INS SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo")] @TO@ MethodInvocation@@assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo")) @AT@ 6537 @LENGTH@ 64
---------------INS StringLiteral@@"..\\..\\foo" @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo")] @AT@ 6550 @LENGTH@ 13
---------------INS MethodInvocation@@FileUtil.compactPath("..\\..\\foo") @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo")] @AT@ 6565 @LENGTH@ 35
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo") @AT@ 6565 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["..\\..\\foo"] @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo") @AT@ 6574 @LENGTH@ 26
---------------------INS StringLiteral@@"..\\..\\foo" @TO@ SimpleName@@MethodName:compactPath:["..\\..\\foo"] @AT@ 6586 @LENGTH@ 13
------INS ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar")) @TO@ Block@@ThenBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 6615 @LENGTH@ 75
---------INS MethodInvocation@@assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar")) @AT@ 6615 @LENGTH@ 74
------------INS SimpleName@@MethodName:assertEquals:["..\\..\\foo\\bar", FileUtil.compactPath("..\\..\\foo\\bar")] @TO@ MethodInvocation@@assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar")) @AT@ 6615 @LENGTH@ 74
---------------INS StringLiteral@@"..\\..\\foo\\bar" @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo\\bar", FileUtil.compactPath("..\\..\\foo\\bar")] @AT@ 6628 @LENGTH@ 18
---------------INS MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar") @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo\\bar", FileUtil.compactPath("..\\..\\foo\\bar")] @AT@ 6648 @LENGTH@ 40
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar") @AT@ 6648 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["..\\..\\foo\\bar"] @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar") @AT@ 6657 @LENGTH@ 31
---------------------INS StringLiteral@@"..\\..\\foo\\bar" @TO@ SimpleName@@MethodName:compactPath:["..\\..\\foo\\bar"] @AT@ 6669 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\..")) @TO@ Block@@ThenBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 6703 @LENGTH@ 74
---------INS MethodInvocation@@assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\..")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\..")) @AT@ 6703 @LENGTH@ 73
------------INS SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo\\bar\\..")] @TO@ MethodInvocation@@assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\..")) @AT@ 6703 @LENGTH@ 73
---------------INS StringLiteral@@"..\\..\\foo" @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo\\bar\\..")] @AT@ 6716 @LENGTH@ 13
---------------INS MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar\\..") @TO@ SimpleName@@MethodName:assertEquals:["..\\..\\foo", FileUtil.compactPath("..\\..\\foo\\bar\\..")] @AT@ 6731 @LENGTH@ 44
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar\\..") @AT@ 6731 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["..\\..\\foo\\bar\\.."] @TO@ MethodInvocation@@FileUtil.compactPath("..\\..\\foo\\bar\\..") @AT@ 6740 @LENGTH@ 35
---------------------INS StringLiteral@@"..\\..\\foo\\bar\\.." @TO@ SimpleName@@MethodName:compactPath:["..\\..\\foo\\bar\\.."] @AT@ 6752 @LENGTH@ 22
---UPD Block@@ElseBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @TO@ ElseBody:{  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 7013 @LENGTH@ 530
------INS ExpressionStatement@@MethodInvocation:assertEquals("../foo",FileUtil.compactPath("../foo")) @TO@ Block@@ElseBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 7350 @LENGTH@ 55
---------INS MethodInvocation@@assertEquals("../foo",FileUtil.compactPath("../foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("../foo",FileUtil.compactPath("../foo")) @AT@ 7350 @LENGTH@ 54
------------INS SimpleName@@MethodName:assertEquals:["../foo", FileUtil.compactPath("../foo")] @TO@ MethodInvocation@@assertEquals("../foo",FileUtil.compactPath("../foo")) @AT@ 7350 @LENGTH@ 54
---------------INS StringLiteral@@"../foo" @TO@ SimpleName@@MethodName:assertEquals:["../foo", FileUtil.compactPath("../foo")] @AT@ 7363 @LENGTH@ 8
---------------INS MethodInvocation@@FileUtil.compactPath("../foo") @TO@ SimpleName@@MethodName:assertEquals:["../foo", FileUtil.compactPath("../foo")] @AT@ 7373 @LENGTH@ 30
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("../foo") @AT@ 7373 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["../foo"] @TO@ MethodInvocation@@FileUtil.compactPath("../foo") @AT@ 7382 @LENGTH@ 21
---------------------INS StringLiteral@@"../foo" @TO@ SimpleName@@MethodName:compactPath:["../foo"] @AT@ 7394 @LENGTH@ 8
------INS ExpressionStatement@@MethodInvocation:assertEquals("../../foo",FileUtil.compactPath("../../foo")) @TO@ Block@@ElseBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 7418 @LENGTH@ 61
---------INS MethodInvocation@@assertEquals("../../foo",FileUtil.compactPath("../../foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("../../foo",FileUtil.compactPath("../../foo")) @AT@ 7418 @LENGTH@ 60
------------INS SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo")] @TO@ MethodInvocation@@assertEquals("../../foo",FileUtil.compactPath("../../foo")) @AT@ 7418 @LENGTH@ 60
---------------INS StringLiteral@@"../../foo" @TO@ SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo")] @AT@ 7431 @LENGTH@ 11
---------------INS MethodInvocation@@FileUtil.compactPath("../../foo") @TO@ SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo")] @AT@ 7444 @LENGTH@ 33
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("../../foo") @AT@ 7444 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["../../foo"] @TO@ MethodInvocation@@FileUtil.compactPath("../../foo") @AT@ 7453 @LENGTH@ 24
---------------------INS StringLiteral@@"../../foo" @TO@ SimpleName@@MethodName:compactPath:["../../foo"] @AT@ 7465 @LENGTH@ 11
------INS ExpressionStatement@@MethodInvocation:assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar")) @TO@ Block@@ElseBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 7492 @LENGTH@ 69
---------INS MethodInvocation@@assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar")) @AT@ 7492 @LENGTH@ 68
------------INS SimpleName@@MethodName:assertEquals:["../../foo/bar", FileUtil.compactPath("../../foo/bar")] @TO@ MethodInvocation@@assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar")) @AT@ 7492 @LENGTH@ 68
---------------INS StringLiteral@@"../../foo/bar" @TO@ SimpleName@@MethodName:assertEquals:["../../foo/bar", FileUtil.compactPath("../../foo/bar")] @AT@ 7505 @LENGTH@ 15
---------------INS MethodInvocation@@FileUtil.compactPath("../../foo/bar") @TO@ SimpleName@@MethodName:assertEquals:["../../foo/bar", FileUtil.compactPath("../../foo/bar")] @AT@ 7522 @LENGTH@ 37
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("../../foo/bar") @AT@ 7522 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["../../foo/bar"] @TO@ MethodInvocation@@FileUtil.compactPath("../../foo/bar") @AT@ 7531 @LENGTH@ 28
---------------------INS StringLiteral@@"../../foo/bar" @TO@ SimpleName@@MethodName:compactPath:["../../foo/bar"] @AT@ 7543 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/..")) @TO@ Block@@ElseBody:{  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 7574 @LENGTH@ 68
---------INS MethodInvocation@@assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/..")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/..")) @AT@ 7574 @LENGTH@ 67
------------INS SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo/bar/..")] @TO@ MethodInvocation@@assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/..")) @AT@ 7574 @LENGTH@ 67
---------------INS StringLiteral@@"../../foo" @TO@ SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo/bar/..")] @AT@ 7587 @LENGTH@ 11
---------------INS MethodInvocation@@FileUtil.compactPath("../../foo/bar/..") @TO@ SimpleName@@MethodName:assertEquals:["../../foo", FileUtil.compactPath("../../foo/bar/..")] @AT@ 7600 @LENGTH@ 40
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("../../foo/bar/..") @AT@ 7600 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["../../foo/bar/.."] @TO@ MethodInvocation@@FileUtil.compactPath("../../foo/bar/..") @AT@ 7609 @LENGTH@ 31
---------------------INS StringLiteral@@"../../foo/bar/.." @TO@ SimpleName@@MethodName:compactPath:["../../foo/bar/.."] @AT@ 7621 @LENGTH@ 18


INS MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 15792 @LENGTH@ 85
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15792 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15799 @LENGTH@ 7
---INS SimpleName@@MethodName:syncContent @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15807 @LENGTH@ 11
---INS SingleVariableDeclaration@@byte[] hash @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15819 @LENGTH@ 11
------INS ArrayType@@byte[] @TO@ SingleVariableDeclaration@@byte[] hash @AT@ 15819 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 15819 @LENGTH@ 4
------INS SimpleName@@hash @TO@ SingleVariableDeclaration@@byte[] hash @AT@ 15826 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:syncContent, byte[] hash,  @AT@ 15850 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 15857 @LENGTH@ 5


UPD FieldDeclaration@@private, final, List<Bean<?>>, [routeBuilderBeans=new ArrayList<Bean<?>>()] @TO@ private, final, Set<Bean<?>>, [routeBuilderBeans=new LinkedHashSet<Bean<?>>()] @AT@ 1530 @LENGTH@ 73
---UPD ParameterizedType@@List<Bean<?>> @TO@ Set<Bean<?>> @AT@ 1544 @LENGTH@ 13
------UPD SimpleType@@List @TO@ Set @AT@ 1544 @LENGTH@ 4
---UPD VariableDeclarationFragment@@routeBuilderBeans=new ArrayList<Bean<?>>() @TO@ routeBuilderBeans=new LinkedHashSet<Bean<?>>() @AT@ 1558 @LENGTH@ 44
------UPD ClassInstanceCreation@@ArrayList<Bean<?>>[] @TO@ LinkedHashSet<Bean<?>>[] @AT@ 1578 @LENGTH@ 24
---------UPD ParameterizedType@@ArrayList<Bean<?>> @TO@ LinkedHashSet<Bean<?>> @AT@ 1582 @LENGTH@ 18
------------UPD SimpleType@@ArrayList @TO@ LinkedHashSet @AT@ 1582 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:mock2.expectedMinimumMessageCount(3) @TO@ MethodInvocation:mock2.expectedMinimumMessageCount(2) @AT@ 2720 @LENGTH@ 37
---UPD MethodInvocation@@mock2.expectedMinimumMessageCount(3) @TO@ mock2.expectedMinimumMessageCount(2) @AT@ 2720 @LENGTH@ 36
------UPD SimpleName@@MethodName:expectedMinimumMessageCount:[3] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 2726 @LENGTH@ 30
---------UPD NumberLiteral@@3 @TO@ 2 @AT@ 2754 @LENGTH@ 1


UPD VariableDeclarationStatement@@List<String> expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @TO@ List<String> expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop"); @AT@ 1977 @LENGTH@ 279
---UPD VariableDeclarationFragment@@expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ expectedEvents=Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 1990 @LENGTH@ 265
------UPD MethodInvocation@@Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @TO@ Arrays.asList("onThreadPoolAdd","onContextStart","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onServiceAdd","onThreadPoolAdd","onComponentAdd","onEndpointAdd","onComponentRemove","onContextStop") @AT@ 2007 @LENGTH@ 248
---------UPD SimpleName@@MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @TO@ MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onThreadPoolAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2014 @LENGTH@ 241
------------INS StringLiteral@@"onThreadPoolAdd" @TO@ SimpleName@@MethodName:asList:["onThreadPoolAdd", "onContextStart", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onServiceAdd", "onComponentAdd", "onEndpointAdd", "onComponentRemove", "onContextStop"] @AT@ 2202 @LENGTH@ 17


UPD Block@@ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655);} @TO@ ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0650);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0650);  Field field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM");  ReflectionUtils.makeAccessible(field);  FsPermission perm=(FsPermission)ReflectionUtils.getField(field,null);  perm.fromShort((short)0650);} @AT@ 1239 @LENGTH@ 162
---UPD ExpressionStatement@@MethodInvocation:JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655) @TO@ MethodInvocation:JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0650) @AT@ 1268 @LENGTH@ 62
------UPD MethodInvocation@@JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655) @TO@ JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0650) @AT@ 1268 @LENGTH@ 61
---------UPD SimpleName@@MethodName:fromShort:[(short)0655] @TO@ MethodName:fromShort:[(short)0650] @AT@ 1306 @LENGTH@ 23
------------UPD CastExpression@@(short)0655 @TO@ (short)0650 @AT@ 1316 @LENGTH@ 12
---------------UPD NumberLiteral@@0655 @TO@ 0650 @AT@ 1324 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655) @TO@ MethodInvocation:JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0650) @AT@ 1334 @LENGTH@ 63
------UPD MethodInvocation@@JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655) @TO@ JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0650) @AT@ 1334 @LENGTH@ 62
---------UPD SimpleName@@MethodName:fromShort:[(short)0655] @TO@ MethodName:fromShort:[(short)0650] @AT@ 1373 @LENGTH@ 23
------------UPD CastExpression@@(short)0655 @TO@ (short)0650 @AT@ 1383 @LENGTH@ 12
---------------UPD NumberLiteral@@0655 @TO@ 0650 @AT@ 1391 @LENGTH@ 4
---INS VariableDeclarationStatement@@Field field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM"); @TO@ Block@@ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655);} @AT@ 1641 @LENGTH@ 106
------INS SimpleType@@Field @TO@ VariableDeclarationStatement@@Field field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM"); @AT@ 1641 @LENGTH@ 5
------INS VariableDeclarationFragment@@field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @TO@ VariableDeclarationStatement@@Field field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM"); @AT@ 1647 @LENGTH@ 99
---------INS SimpleName@@field @TO@ VariableDeclarationFragment@@field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @AT@ 1647 @LENGTH@ 5
---------INS MethodInvocation@@ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @TO@ VariableDeclarationFragment@@field=ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @AT@ 1655 @LENGTH@ 91
------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @AT@ 1655 @LENGTH@ 15
------------INS SimpleName@@MethodName:findField:[TrackerDistributedCacheManager.class, "PUBLIC_CACHE_OBJECT_PERM"] @TO@ MethodInvocation@@ReflectionUtils.findField(TrackerDistributedCacheManager.class,"PUBLIC_CACHE_OBJECT_PERM") @AT@ 1671 @LENGTH@ 75
---------------INS TypeLiteral@@TrackerDistributedCacheManager.class @TO@ SimpleName@@MethodName:findField:[TrackerDistributedCacheManager.class, "PUBLIC_CACHE_OBJECT_PERM"] @AT@ 1681 @LENGTH@ 36
---------------INS StringLiteral@@"PUBLIC_CACHE_OBJECT_PERM" @TO@ SimpleName@@MethodName:findField:[TrackerDistributedCacheManager.class, "PUBLIC_CACHE_OBJECT_PERM"] @AT@ 1719 @LENGTH@ 26
---INS ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(field) @TO@ Block@@ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655);} @AT@ 1751 @LENGTH@ 38
------INS MethodInvocation@@ReflectionUtils.makeAccessible(field) @TO@ ExpressionStatement@@MethodInvocation:ReflectionUtils.makeAccessible(field) @AT@ 1751 @LENGTH@ 37
---------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(field) @AT@ 1751 @LENGTH@ 15
---------INS SimpleName@@MethodName:makeAccessible:[field] @TO@ MethodInvocation@@ReflectionUtils.makeAccessible(field) @AT@ 1767 @LENGTH@ 21
------------INS SimpleName@@field @TO@ SimpleName@@MethodName:makeAccessible:[field] @AT@ 1782 @LENGTH@ 5
---INS VariableDeclarationStatement@@FsPermission perm=(FsPermission)ReflectionUtils.getField(field,null); @TO@ Block@@ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655);} @AT@ 1793 @LENGTH@ 73
------INS SimpleType@@FsPermission @TO@ VariableDeclarationStatement@@FsPermission perm=(FsPermission)ReflectionUtils.getField(field,null); @AT@ 1793 @LENGTH@ 12
------INS VariableDeclarationFragment@@perm=(FsPermission)ReflectionUtils.getField(field,null) @TO@ VariableDeclarationStatement@@FsPermission perm=(FsPermission)ReflectionUtils.getField(field,null); @AT@ 1806 @LENGTH@ 59
---------INS SimpleName@@perm @TO@ VariableDeclarationFragment@@perm=(FsPermission)ReflectionUtils.getField(field,null) @AT@ 1806 @LENGTH@ 4
---------INS CastExpression@@(FsPermission)ReflectionUtils.getField(field,null) @TO@ VariableDeclarationFragment@@perm=(FsPermission)ReflectionUtils.getField(field,null) @AT@ 1813 @LENGTH@ 52
------------INS SimpleType@@FsPermission @TO@ CastExpression@@(FsPermission)ReflectionUtils.getField(field,null) @AT@ 1814 @LENGTH@ 12
------------INS MethodInvocation@@ReflectionUtils.getField(field,null) @TO@ CastExpression@@(FsPermission)ReflectionUtils.getField(field,null) @AT@ 1828 @LENGTH@ 37
---------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.getField(field,null) @AT@ 1828 @LENGTH@ 15
---------------INS SimpleName@@MethodName:getField:[field, null] @TO@ MethodInvocation@@ReflectionUtils.getField(field,null) @AT@ 1844 @LENGTH@ 21
------------------INS SimpleName@@field @TO@ SimpleName@@MethodName:getField:[field, null] @AT@ 1853 @LENGTH@ 5
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getField:[field, null] @AT@ 1860 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:perm.fromShort((short)0650) @TO@ Block@@ThenBody:{  JobSubmissionFiles.JOB_DIR_PERMISSION.fromShort((short)0655);  JobSubmissionFiles.JOB_FILE_PERMISSION.fromShort((short)0655);} @AT@ 1870 @LENGTH@ 29
------INS MethodInvocation@@perm.fromShort((short)0650) @TO@ ExpressionStatement@@MethodInvocation:perm.fromShort((short)0650) @AT@ 1870 @LENGTH@ 28
---------INS SimpleName@@Name:perm @TO@ MethodInvocation@@perm.fromShort((short)0650) @AT@ 1870 @LENGTH@ 4
---------INS SimpleName@@MethodName:fromShort:[(short)0650] @TO@ MethodInvocation@@perm.fromShort((short)0650) @AT@ 1875 @LENGTH@ 23
------------INS CastExpression@@(short)0650 @TO@ SimpleName@@MethodName:fromShort:[(short)0650] @AT@ 1885 @LENGTH@ 12
---------------INS PrimitiveType@@short @TO@ CastExpression@@(short)0650 @AT@ 1886 @LENGTH@ 5
---------------INS NumberLiteral@@0650 @TO@ CastExpression@@(short)0650 @AT@ 1893 @LENGTH@ 4


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.userTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.removeUserTransaction(this.userTransactionID); @AT@ 2015 @LENGTH@ 102
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.userTransactionID) @TO@ transaction=this.transactionsRepository.removeUserTransaction(this.userTransactionID) @AT@ 2033 @LENGTH@ 83
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.userTransactionID) @TO@ this.transactionsRepository.removeUserTransaction(this.userTransactionID) @AT@ 2047 @LENGTH@ 69
---------UPD SimpleName@@MethodName:removeTransaction:[this.userTransactionID] @TO@ MethodName:removeUserTransaction:[this.userTransactionID] @AT@ 2075 @LENGTH@ 41


UPD FieldDeclaration@@public, static, final, int, [TERMINAL_INTERCEPTOR=0xC00] @TO@ public, static, final, int, [TERMINAL_INTERCEPTOR=0xD00] @AT@ 2827 @LENGTH@ 53
---UPD VariableDeclarationFragment@@TERMINAL_INTERCEPTOR=0xC00 @TO@ TERMINAL_INTERCEPTOR=0xD00 @AT@ 2851 @LENGTH@ 28
------UPD NumberLiteral@@0xC00 @TO@ 0xD00 @AT@ 2874 @LENGTH@ 5


UPD ReturnStatement@@BooleanLiteral:false @TO@ MethodInvocation:rootMBeanServer.isRegistered(name) @AT@ 10980 @LENGTH@ 13
---DEL BooleanLiteral@@false @AT@ 10987 @LENGTH@ 5
---INS MethodInvocation@@rootMBeanServer.isRegistered(name) @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11067 @LENGTH@ 34
------INS SimpleName@@Name:rootMBeanServer @TO@ MethodInvocation@@rootMBeanServer.isRegistered(name) @AT@ 11067 @LENGTH@ 15
------INS SimpleName@@MethodName:isRegistered:[name] @TO@ MethodInvocation@@rootMBeanServer.isRegistered(name) @AT@ 11083 @LENGTH@ 18
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:isRegistered:[name] @AT@ 11096 @LENGTH@ 4


DEL FieldDeclaration@@public, static, final, String, [SHORT_DEBUG="-d"] @AT@ 1911 @LENGTH@ 46
---DEL Modifier@@public @AT@ 1911 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1918 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1925 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1931 @LENGTH@ 6
---DEL VariableDeclarationFragment@@SHORT_DEBUG="-d" @AT@ 1938 @LENGTH@ 18
------DEL SimpleName@@SHORT_DEBUG @AT@ 1938 @LENGTH@ 11
------DEL StringLiteral@@"-d" @AT@ 1952 @LENGTH@ 4


UPD IfStatement@@if (event instanceof CamelContextStartedEvent) {  CamelContext context=((CamelContextStartedEvent)event).getContext();  Properties props=new Properties();  props.put(CONTEXT_SYMBOLIC_NAME_PROPERTY,bundleContext.getBundle().getSymbolicName());  props.put(CONTEXT_VERSION_PROPERTY,getBundleVersion(bundleContext.getBundle()));  props.put(CONTEXT_NAME_PROPERTY,context.getName());  log.debug("Registering CamelContext [{}] of in OSGi registry",props);  ServiceRegistration reg=bundleContext.registerService(CamelContext.class.getName(),context,props);  registrations.put(context,reg);} else if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @TO@ if (event instanceof CamelContextStartedEvent) {  CamelContext context=((CamelContextStartedEvent)event).getContext();  Dictionary<String,Object> props=new Hashtable<String,Object>();  props.put(CONTEXT_SYMBOLIC_NAME_PROPERTY,bundleContext.getBundle().getSymbolicName());  props.put(CONTEXT_VERSION_PROPERTY,getBundleVersion(bundleContext.getBundle()));  props.put(CONTEXT_NAME_PROPERTY,context.getName());  log.debug("Registering CamelContext [{}] of in OSGi registry",props);  ServiceRegistration<?> reg=bundleContext.registerService(CamelContext.class.getName(),context,props);  registrations.put(context,reg);} else if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration<?> reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @AT@ 2248 @LENGTH@ 1157
---UPD Block@@ThenBody:{  CamelContext context=((CamelContextStartedEvent)event).getContext();  Properties props=new Properties();  props.put(CONTEXT_SYMBOLIC_NAME_PROPERTY,bundleContext.getBundle().getSymbolicName());  props.put(CONTEXT_VERSION_PROPERTY,getBundleVersion(bundleContext.getBundle()));  props.put(CONTEXT_NAME_PROPERTY,context.getName());  log.debug("Registering CamelContext [{}] of in OSGi registry",props);  ServiceRegistration reg=bundleContext.registerService(CamelContext.class.getName(),context,props);  registrations.put(context,reg);} @TO@ ThenBody:{  CamelContext context=((CamelContextStartedEvent)event).getContext();  Dictionary<String,Object> props=new Hashtable<String,Object>();  props.put(CONTEXT_SYMBOLIC_NAME_PROPERTY,bundleContext.getBundle().getSymbolicName());  props.put(CONTEXT_VERSION_PROPERTY,getBundleVersion(bundleContext.getBundle()));  props.put(CONTEXT_NAME_PROPERTY,context.getName());  log.debug("Registering CamelContext [{}] of in OSGi registry",props);  ServiceRegistration<?> reg=bundleContext.registerService(CamelContext.class.getName(),context,props);  registrations.put(context,reg);} @AT@ 2295 @LENGTH@ 649
------UPD VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Dictionary<String,Object> props=new Hashtable<String,Object>(); @AT@ 2394 @LENGTH@ 36
---------DEL SimpleType@@Properties @AT@ 2394 @LENGTH@ 10
---------INS ParameterizedType@@Dictionary<String,Object> @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 2399 @LENGTH@ 27
------------INS SimpleType@@Dictionary @TO@ ParameterizedType@@Dictionary<String,Object> @AT@ 2399 @LENGTH@ 10
------------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,Object> @AT@ 2410 @LENGTH@ 6
------------INS SimpleType@@Object @TO@ ParameterizedType@@Dictionary<String,Object> @AT@ 2418 @LENGTH@ 6
---------UPD VariableDeclarationFragment@@props=new Properties() @TO@ props=new Hashtable<String,Object>() @AT@ 2405 @LENGTH@ 24
------------UPD ClassInstanceCreation@@Properties[] @TO@ Hashtable<String,Object>[] @AT@ 2413 @LENGTH@ 16
---------------DEL SimpleType@@Properties @AT@ 2417 @LENGTH@ 10
---------------INS ParameterizedType@@Hashtable<String,Object> @TO@ ClassInstanceCreation@@Properties[] @AT@ 2439 @LENGTH@ 25
------------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2439 @LENGTH@ 9
------------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2449 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ ParameterizedType@@Hashtable<String,Object> @AT@ 2457 @LENGTH@ 6
------UPD VariableDeclarationStatement@@ServiceRegistration reg=bundleContext.registerService(CamelContext.class.getName(),context,props); @TO@ ServiceRegistration<?> reg=bundleContext.registerService(CamelContext.class.getName(),context,props); @AT@ 2787 @LENGTH@ 102
---------DEL SimpleType@@ServiceRegistration @AT@ 2787 @LENGTH@ 19
---------INS ParameterizedType@@ServiceRegistration<?> @TO@ VariableDeclarationStatement@@ServiceRegistration reg=bundleContext.registerService(CamelContext.class.getName(),context,props); @AT@ 2824 @LENGTH@ 22
------------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2824 @LENGTH@ 19
------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2844 @LENGTH@ 1
---UPD Block@@ElseBody:if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @TO@ ElseBody:if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration<?> reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @AT@ 2950 @LENGTH@ 455
------UPD IfStatement@@if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @TO@ if (event instanceof CamelContextStoppingEvent) {  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration<?> reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @AT@ 2950 @LENGTH@ 455
---------UPD Block@@ThenBody:{  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @TO@ ThenBody:{  CamelContext context=((CamelContextStoppingEvent)event).getContext();  ServiceRegistration<?> reg=registrations.get(context);  if (reg != null) {    if (log.isDebugEnabled()) {      log.debug("Unregistering CamelContext [{}] from OSGi registry",context.getName());    }    reg.unregister();  }} @AT@ 2998 @LENGTH@ 407
------------UPD VariableDeclarationStatement@@ServiceRegistration reg=registrations.get(context); @TO@ ServiceRegistration<?> reg=registrations.get(context); @AT@ 3097 @LENGTH@ 53
---------------DEL SimpleType@@ServiceRegistration @AT@ 3097 @LENGTH@ 19
---------------INS ParameterizedType@@ServiceRegistration<?> @TO@ VariableDeclarationStatement@@ServiceRegistration reg=registrations.get(context); @AT@ 3137 @LENGTH@ 22
------------------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 3137 @LENGTH@ 19
------------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 3157 @LENGTH@ 1


UPD VariableDeclarationStatement@@Poetry response=producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class); @TO@ Poetry response=template.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class); @AT@ 1340 @LENGTH@ 113
---UPD VariableDeclarationFragment@@response=producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class) @TO@ response=template.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class) @AT@ 1347 @LENGTH@ 105
------UPD MethodInvocation@@producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class) @TO@ template.requestBody("netty:udp://localhost:{{port}}?sync=true",poetry,Poetry.class) @AT@ 1358 @LENGTH@ 94
---------UPD SimpleName@@Name:producerTemplate @TO@ Name:template @AT@ 1358 @LENGTH@ 16


MOV IfStatement@@if (!operation.hasDefined(PERSISTENT.getName())) {  operation.get(PERSISTENT.getName()).set(true);} @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4171 @LENGTH@ 119


INS FieldDeclaration@@private, String, [zookeeperPassword] @TO@ TypeDeclaration@@[@Command(name="ensemble-create",scope="fabric",description="Create a new ZooKeeper ensemble",detailedDescription="classpath:ensembleCreate.txt"), public]EnsembleCreate, EnsembleCommandSupport @AT@ 1622 @LENGTH@ 33
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [zookeeperPassword] @AT@ 1622 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [zookeeperPassword] @AT@ 1630 @LENGTH@ 6
---INS VariableDeclarationFragment@@zookeeperPassword @TO@ FieldDeclaration@@private, String, [zookeeperPassword] @AT@ 1637 @LENGTH@ 17
------INS SimpleName@@zookeeperPassword @TO@ VariableDeclarationFragment@@zookeeperPassword @AT@ 1637 @LENGTH@ 17


DEL SuperConstructorInvocation@@super();
 @AT@ 1678 @LENGTH@ 8


UPD VariableDeclarationStatement@@UserCredentials creadentials=getUserCredentials(); @TO@ UserCredentials credentials=getUserCredentials(); @AT@ 2939 @LENGTH@ 52
---UPD VariableDeclarationFragment@@creadentials=getUserCredentials() @TO@ credentials=getUserCredentials() @AT@ 2955 @LENGTH@ 35
------UPD SimpleName@@creadentials @TO@ credentials @AT@ 2955 @LENGTH@ 12


UPD IfStatement@@if (creadentials == null) {  return new SimpleMongoDbFactory(mongo(),getDatabaseName());} else {  return new SimpleMongoDbFactory(mongo(),getDatabaseName(),creadentials);} @TO@ if (credentials == null) {  return new SimpleMongoDbFactory(mongo(),getDatabaseName());} else {  return new SimpleMongoDbFactory(mongo(),getDatabaseName(),credentials);} @AT@ 2997 @LENGTH@ 188
---UPD InfixExpression@@creadentials == null @TO@ credentials == null @AT@ 3001 @LENGTH@ 20
------UPD SimpleName@@creadentials @TO@ credentials @AT@ 3001 @LENGTH@ 12
---UPD Block@@ElseBody:{  return new SimpleMongoDbFactory(mongo(),getDatabaseName(),creadentials);} @TO@ ElseBody:{  return new SimpleMongoDbFactory(mongo(),getDatabaseName(),credentials);} @AT@ 3100 @LENGTH@ 85
------UPD ReturnStatement@@ClassInstanceCreation:new SimpleMongoDbFactory(mongo(),getDatabaseName(),creadentials) @TO@ ClassInstanceCreation:new SimpleMongoDbFactory(mongo(),getDatabaseName(),credentials) @AT@ 3106 @LENGTH@ 74
---------UPD ClassInstanceCreation@@SimpleMongoDbFactory[mongo(), getDatabaseName(), creadentials] @TO@ SimpleMongoDbFactory[mongo(), getDatabaseName(), credentials] @AT@ 3113 @LENGTH@ 66
------------UPD SimpleName@@creadentials @TO@ credentials @AT@ 3166 @LENGTH@ 12


INS MethodDeclaration@@String, MethodName:getZookeeperPassword,  @TO@ TypeDeclaration@@[public]Join,  @AT@ 496 @LENGTH@ 23
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:getZookeeperPassword,  @AT@ 489 @LENGTH@ 6
---INS SimpleName@@MethodName:getZookeeperPassword @TO@ MethodDeclaration@@String, MethodName:getZookeeperPassword,  @AT@ 496 @LENGTH@ 20


UPD FieldDeclaration@@public, static, OperationContext.AttachmentKey<ModelNode>, [SLAVE_SERVER_OPERATION=OperationContext.AttachmentKey.create(ModelNode.class)] @TO@ public, static, OperationContext.AttachmentKey<List<DomainOperationTransformer>>, [SLAVE_SERVER_OPERATION_TRANSFORMERS=OperationContext.AttachmentKey.create(List.class)] @AT@ 1227 @LENGTH@ 136
---UPD ParameterizedType@@OperationContext.AttachmentKey<ModelNode> @TO@ OperationContext.AttachmentKey<List<DomainOperationTransformer>> @AT@ 1241 @LENGTH@ 41
------INS ParameterizedType@@List<DomainOperationTransformer> @TO@ ParameterizedType@@OperationContext.AttachmentKey<ModelNode> @AT@ 1264 @LENGTH@ 32
---------INS SimpleType@@DomainOperationTransformer @TO@ ParameterizedType@@List<DomainOperationTransformer> @AT@ 1269 @LENGTH@ 26
---------MOV SimpleType@@ModelNode @TO@ ParameterizedType@@List<DomainOperationTransformer> @AT@ 1272 @LENGTH@ 9
------UPD SimpleType@@ModelNode @TO@ List @AT@ 1272 @LENGTH@ 9
---UPD VariableDeclarationFragment@@SLAVE_SERVER_OPERATION=OperationContext.AttachmentKey.create(ModelNode.class) @TO@ SLAVE_SERVER_OPERATION_TRANSFORMERS=OperationContext.AttachmentKey.create(List.class) @AT@ 1283 @LENGTH@ 79
------UPD SimpleName@@SLAVE_SERVER_OPERATION @TO@ SLAVE_SERVER_OPERATION_TRANSFORMERS @AT@ 1283 @LENGTH@ 22
------UPD MethodInvocation@@OperationContext.AttachmentKey.create(ModelNode.class) @TO@ OperationContext.AttachmentKey.create(List.class) @AT@ 1308 @LENGTH@ 54
---------UPD SimpleName@@MethodName:create:[ModelNode.class] @TO@ MethodName:create:[List.class] @AT@ 1339 @LENGTH@ 23
------------UPD TypeLiteral@@ModelNode.class @TO@ List.class @AT@ 1346 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 12130 @LENGTH@ 305
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12130 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12137 @LENGTH@ 4
---INS SimpleName@@MethodName:executesNegatingSpecificationCorrectly @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12142 @LENGTH@ 38
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12190 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 12190 @LENGTH@ 16
---INS VariableDeclarationStatement@@Specification<User> spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")); @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12211 @LENGTH@ 90
------INS ParameterizedType@@Specification<User> @TO@ VariableDeclarationStatement@@Specification<User> spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")); @AT@ 12211 @LENGTH@ 19
---------INS SimpleType@@Specification @TO@ ParameterizedType@@Specification<User> @AT@ 12211 @LENGTH@ 13
---------INS SimpleType@@User @TO@ ParameterizedType@@Specification<User> @AT@ 12225 @LENGTH@ 4
------INS VariableDeclarationFragment@@spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @TO@ VariableDeclarationStatement@@Specification<User> spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")); @AT@ 12231 @LENGTH@ 69
---------INS SimpleName@@spec @TO@ VariableDeclarationFragment@@spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @AT@ 12231 @LENGTH@ 4
---------INS MethodInvocation@@not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @TO@ VariableDeclarationFragment@@spec=not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @AT@ 12238 @LENGTH@ 62
------------INS MethodInvocation@@MethodName:not:[userHasFirstname("Oliver")] @TO@ MethodInvocation@@not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @AT@ 12238 @LENGTH@ 31
---------------INS MethodInvocation@@userHasFirstname("Oliver") @TO@ MethodInvocation@@MethodName:not:[userHasFirstname("Oliver")] @AT@ 12242 @LENGTH@ 26
------------------INS SimpleName@@MethodName:userHasFirstname:["Oliver"] @TO@ MethodInvocation@@userHasFirstname("Oliver") @AT@ 12242 @LENGTH@ 26
---------------------INS StringLiteral@@"Oliver" @TO@ SimpleName@@MethodName:userHasFirstname:["Oliver"] @AT@ 12259 @LENGTH@ 8
------------INS SimpleName@@MethodName:and:[userHasLastname("Arrasz")] @TO@ MethodInvocation@@not(userHasFirstname("Oliver")).and(userHasLastname("Arrasz")) @AT@ 12270 @LENGTH@ 30
---------------INS MethodInvocation@@userHasLastname("Arrasz") @TO@ SimpleName@@MethodName:and:[userHasLastname("Arrasz")] @AT@ 12274 @LENGTH@ 25
------------------INS SimpleName@@MethodName:userHasLastname:["Arrasz"] @TO@ MethodInvocation@@userHasLastname("Arrasz") @AT@ 12274 @LENGTH@ 25
---------------------INS StringLiteral@@"Arrasz" @TO@ SimpleName@@MethodName:userHasLastname:["Arrasz"] @AT@ 12290 @LENGTH@ 8
---INS VariableDeclarationStatement@@List<User> result=repository.findAll(spec); @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12305 @LENGTH@ 45
------INS ParameterizedType@@List<User> @TO@ VariableDeclarationStatement@@List<User> result=repository.findAll(spec); @AT@ 12305 @LENGTH@ 10
---------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 12305 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 12310 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findAll(spec) @TO@ VariableDeclarationStatement@@List<User> result=repository.findAll(spec); @AT@ 12316 @LENGTH@ 33
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findAll(spec) @AT@ 12316 @LENGTH@ 6
---------INS MethodInvocation@@repository.findAll(spec) @TO@ VariableDeclarationFragment@@result=repository.findAll(spec) @AT@ 12325 @LENGTH@ 24
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(spec) @AT@ 12325 @LENGTH@ 10
------------INS SimpleName@@MethodName:findAll:[spec] @TO@ MethodInvocation@@repository.findAll(spec) @AT@ 12336 @LENGTH@ 13
---------------INS SimpleName@@spec @TO@ SimpleName@@MethodName:findAll:[spec] @AT@ 12344 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12356 @LENGTH@ 31
------INS MethodInvocation@@assertThat(result,hasSize(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasSize(1)) @AT@ 12356 @LENGTH@ 30
---------INS SimpleName@@MethodName:assertThat:[result, hasSize(1)] @TO@ MethodInvocation@@assertThat(result,hasSize(1)) @AT@ 12356 @LENGTH@ 30
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 12367 @LENGTH@ 6
------------INS MethodInvocation@@hasSize(1) @TO@ SimpleName@@MethodName:assertThat:[result, hasSize(1)] @AT@ 12375 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 12375 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 12383 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@hasSize(1) @AT@ 12375 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 12383 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:executesNegatingSpecificationCorrectly,  @AT@ 12391 @LENGTH@ 40
------INS MethodInvocation@@assertThat(result,hasItem(secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItem(secondUser)) @AT@ 12391 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[result, hasItem(secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItem(secondUser)) @AT@ 12391 @LENGTH@ 39
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(secondUser)] @AT@ 12402 @LENGTH@ 6
------------INS MethodInvocation@@hasItem(secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItem(secondUser)] @AT@ 12410 @LENGTH@ 19
---------------INS SimpleName@@MethodName:hasItem:[secondUser] @TO@ MethodInvocation@@hasItem(secondUser) @AT@ 12410 @LENGTH@ 19
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItem:[secondUser] @AT@ 12418 @LENGTH@ 10


UPD MethodDeclaration@@public, Object, MethodName:getObject, Exception,  @TO@ public, Boolean, MethodName:getObject, Exception,  @AT@ 2399 @LENGTH@ 514
---UPD SimpleType@@Object @TO@ Boolean @AT@ 2406 @LENGTH@ 6


INS ForStatement@@for (int i=0; i < base.getLength(); i++) {  iterator.next();} @TO@ MethodDeclaration@@public, PersistentPropertyPath<T>, MethodName:getExtensionForBaseOf, PersistentPropertyPath<T> base,  @AT@ 4434 @LENGTH@ 68
---INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < base.getLength(); i++) {  iterator.next();} @AT@ 4439 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4439 @LENGTH@ 3
------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 4443 @LENGTH@ 5
---------INS SimpleName@@i @TO@ VariableDeclarationFragment@@i=0 @AT@ 4443 @LENGTH@ 1
---------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 4447 @LENGTH@ 1
---INS InfixExpression@@i < base.getLength() @TO@ ForStatement@@for (int i=0; i < base.getLength(); i++) {  iterator.next();} @AT@ 4450 @LENGTH@ 20
------INS SimpleName@@i @TO@ InfixExpression@@i < base.getLength() @AT@ 4450 @LENGTH@ 1
------INS Operator@@< @TO@ InfixExpression@@i < base.getLength() @AT@ 4451 @LENGTH@ 1
------INS MethodInvocation@@base.getLength() @TO@ InfixExpression@@i < base.getLength() @AT@ 4454 @LENGTH@ 16
---------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.getLength() @AT@ 4454 @LENGTH@ 4
---------INS SimpleName@@MethodName:getLength:[] @TO@ MethodInvocation@@base.getLength() @AT@ 4459 @LENGTH@ 11
---INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < base.getLength(); i++) {  iterator.next();} @AT@ 4472 @LENGTH@ 3
------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 4472 @LENGTH@ 1
------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 4474 @LENGTH@ 2
---MOV ExpressionStatement@@MethodInvocation:iterator.next() @TO@ ForStatement@@for (int i=0; i < base.getLength(); i++) {  iterator.next();} @AT@ 4482 @LENGTH@ 16


UPD VariableDeclarationStatement@@Closure<List<? extends Number>> resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure); @TO@ Closure<List<? extends Number>> resultClosure=CollectionUtils.forAllDo(col,testClosure); @AT@ 22036 @LENGTH@ 147
---UPD VariableDeclarationFragment@@resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure) @TO@ resultClosure=CollectionUtils.forAllDo(col,testClosure) @AT@ 22068 @LENGTH@ 114
------UPD MethodInvocation@@CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure) @TO@ CollectionUtils.forAllDo(col,testClosure) @AT@ 22084 @LENGTH@ 98


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(110) @TO@ MethodInvocation:Thread.sleep(130) @AT@ 1344 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(110) @TO@ Thread.sleep(130) @AT@ 1344 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[110] @TO@ MethodName:sleep:[130] @AT@ 1351 @LENGTH@ 10
---------UPD NumberLiteral@@110 @TO@ 130 @AT@ 1357 @LENGTH@ 3


INS IfStatement@@if (latch != null) {  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @TO@ MethodDeclaration@@public, void, MethodName:prepareShutdown, boolean forced,  @AT@ 4214 @LENGTH@ 322
---INS InfixExpression@@latch != null @TO@ IfStatement@@if (latch != null) {  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @AT@ 4218 @LENGTH@ 13
------INS SimpleName@@latch @TO@ InfixExpression@@latch != null @AT@ 4218 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@latch != null @AT@ 4223 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@latch != null @AT@ 4227 @LENGTH@ 4
---INS Block@@ThenBody:{  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @TO@ IfStatement@@if (latch != null) {  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @AT@ 4233 @LENGTH@ 303
------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount()) @TO@ Block@@ThenBody:{  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @AT@ 4205 @LENGTH@ 99
------MOV TryStatement@@try {  latch.await();} catch (InterruptedException e) {} @TO@ Block@@ThenBody:{  LOG.debug("Preparing to shutdown, waiting for {} consumer threads to complete.",latch.getCount());  try {    latch.await();  } catch (  InterruptedException e) {  }} @AT@ 4353 @LENGTH@ 107


UPD ExpressionStatement@@MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,null,pathManagerService) @TO@ MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,pathManagerService) @AT@ 4886 @LENGTH@ 608
---UPD MethodInvocation@@ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,null,pathManagerService) @TO@ ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,pathManagerService) @AT@ 4886 @LENGTH@ 607
------UPD SimpleName@@MethodName:initOperations:[rootRegistration, createContentRepository(), new NullConfigurationPersister(), createStandaloneServerEnvironment(), null, runningModeControl, null, new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl), false, null, pathManagerService] @TO@ MethodName:initOperations:[rootRegistration, createContentRepository(), new NullConfigurationPersister(), createStandaloneServerEnvironment(), null, runningModeControl, null, new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl), false, pathManagerService] @AT@ 4912 @LENGTH@ 581
---------DEL NullLiteral@@null @AT@ 5423 @LENGTH@ 4


UPD IfStatement@@if (ensembleAutoStart) {  createLocalServer();} @TO@ if (ensembleAutoStart) {  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2342 @LENGTH@ 67
---UPD Block@@ThenBody:{  createLocalServer();} @TO@ ThenBody:{  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2365 @LENGTH@ 44
------INS ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ Block@@ThenBody:{  createLocalServer();} @AT@ 2379 @LENGTH@ 172
---------INS MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2379 @LENGTH@ 171
------------INS ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2379 @LENGTH@ 163
---------------INS New@@new @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2379 @LENGTH@ 3
---------------INS SimpleType@@Thread @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2383 @LENGTH@ 6
---------------INS ClassInstanceCreation@@Runnable[] @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2390 @LENGTH@ 151
------------------INS New@@new @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2390 @LENGTH@ 3
------------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2394 @LENGTH@ 8
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2405 @LENGTH@ 136
---------------------INS MethodDeclaration@@public, void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2449 @LENGTH@ 78
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2449 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2456 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2461 @LENGTH@ 3
------------------------INS ExpressionStatement@@MethodInvocation:createLocalServer() @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2489 @LENGTH@ 20
---------------------------MOV MethodInvocation@@MethodName:createLocalServer:[] @TO@ ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2379 @LENGTH@ 19
------------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2543 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2379 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:propertiesMatched.putIfAbsent(distanceKey,new ConcurrentHashMap<String,String>(matches)) @TO@ MethodInvocation:propertiesMatched.replace(distanceKey,new ConcurrentHashMap<String,String>(matches)) @AT@ 10375 @LENGTH@ 91


INS MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @TO@ TypeDeclaration@@[public, abstract]RepositoryExporterSupport,  @AT@ 2410 @LENGTH@ 211
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @AT@ 2410 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @AT@ 2417 @LENGTH@ 7
---INS SimpleName@@MethodName:hasRepositoryMetadataFor @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @AT@ 2425 @LENGTH@ 24
---INS SingleVariableDeclaration@@Class<?> domainType @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @AT@ 2450 @LENGTH@ 19
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> domainType @AT@ 2450 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 2450 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 2456 @LENGTH@ 1
------INS SimpleName@@domainType @TO@ SingleVariableDeclaration@@Class<?> domainType @AT@ 2459 @LENGTH@ 10
---INS TryStatement@@try {  return (null != repositoryMetadataFor(domainType));} catch (RepositoryNotFoundException ignored) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, Class<?> domainType,  @AT@ 2477 @LENGTH@ 140
------INS ReturnStatement@@ParenthesizedExpression:(null != repositoryMetadataFor(domainType)) @TO@ TryStatement@@try {  return (null != repositoryMetadataFor(domainType));} catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2489 @LENGTH@ 51
---------INS ParenthesizedExpression@@(null != repositoryMetadataFor(domainType)) @TO@ ReturnStatement@@ParenthesizedExpression:(null != repositoryMetadataFor(domainType)) @AT@ 2496 @LENGTH@ 43
------------INS InfixExpression@@null != repositoryMetadataFor(domainType) @TO@ ParenthesizedExpression@@(null != repositoryMetadataFor(domainType)) @AT@ 2497 @LENGTH@ 41
---------------INS NullLiteral@@null @TO@ InfixExpression@@null != repositoryMetadataFor(domainType) @AT@ 2497 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@null != repositoryMetadataFor(domainType) @AT@ 2501 @LENGTH@ 2
---------------INS MethodInvocation@@repositoryMetadataFor(domainType) @TO@ InfixExpression@@null != repositoryMetadataFor(domainType) @AT@ 2505 @LENGTH@ 33
------------------INS SimpleName@@MethodName:repositoryMetadataFor:[domainType] @TO@ MethodInvocation@@repositoryMetadataFor(domainType) @AT@ 2505 @LENGTH@ 33
---------------------INS SimpleName@@domainType @TO@ SimpleName@@MethodName:repositoryMetadataFor:[domainType] @AT@ 2527 @LENGTH@ 10
------INS CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @TO@ TryStatement@@try {  return (null != repositoryMetadataFor(domainType));} catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2547 @LENGTH@ 70
---------INS SingleVariableDeclaration@@RepositoryNotFoundException ignored @TO@ CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2553 @LENGTH@ 35
------------INS SimpleType@@RepositoryNotFoundException @TO@ SingleVariableDeclaration@@RepositoryNotFoundException ignored @AT@ 2553 @LENGTH@ 27
------------INS SimpleName@@ignored @TO@ SingleVariableDeclaration@@RepositoryNotFoundException ignored @AT@ 2581 @LENGTH@ 7
---------INS ReturnStatement@@BooleanLiteral:false @TO@ CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2598 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2605 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("bar",params.getFirst("state")) @TO@ MethodInvocation:assertEquals(null,params.getFirst("state")) @AT@ 3996 @LENGTH@ 46
---UPD MethodInvocation@@assertEquals("bar",params.getFirst("state")) @TO@ assertEquals(null,params.getFirst("state")) @AT@ 3996 @LENGTH@ 45
------UPD SimpleName@@MethodName:assertEquals:["bar", params.getFirst("state")] @TO@ MethodName:assertEquals:[null, params.getFirst("state")] @AT@ 3996 @LENGTH@ 45
---------DEL StringLiteral@@"bar" @AT@ 4009 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:assertEquals:["bar", params.getFirst("state")] @AT@ 4048 @LENGTH@ 4


UPD EnhancedForStatement@@for (final ModuleMetaData module : earMetaData.getModules()) {  if (module.getFileName().endsWith(".xml")) {    throw MESSAGES.unsupportedModuleType(module.getFileName());  }  final VirtualFile moduleFile=virtualFile.getChild(module.getFileName());  if (!moduleFile.exists()) {    throw MESSAGES.cannotProcessEarModule(virtualFile,module.getFileName());  }  subDeploymentFiles.add(moduleFile);  final boolean webArchive=module.getType() == ModuleType.Web;  final ResourceRoot childResource=this.createResourceRoot(deploymentUnit,moduleFile,true,webArchive);  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.MODULE_META_DATA,module);  if (!webArchive) {    ModuleRootMarker.mark(childResource);  }  final String alternativeDD=module.getAlternativeDD();  if (alternativeDD != null && alternativeDD.trim().length() > 0) {    final VirtualFile alternateDeploymentDescriptor=deploymentRoot.getRoot().getChild(alternativeDD);    if (!alternateDeploymentDescriptor.exists()) {      throw MESSAGES.alternateDeploymentDescriptor(alternateDeploymentDescriptor,moduleFile);    }switch (module.getType()) {case Client:      childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CLIENT_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);    break;case Connector:  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CONNECTOR_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Ejb:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_EJB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Web:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_WEB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Service:throw MESSAGES.unsupportedModuleType(module.getFileName());}}} @TO@ for (final ModuleMetaData module : earMetaData.getModules()) {  if (module.getFileName().endsWith(".xml")) {    throw MESSAGES.unsupportedModuleType(module.getFileName());  }  final VirtualFile moduleFile=virtualFile.getChild(module.getFileName());  if (!moduleFile.exists()) {    throw MESSAGES.cannotProcessEarModule(virtualFile,module.getFileName());  }  if (libDir != null) {    VirtualFile moduleParentFile=moduleFile.getParent();    if (moduleParentFile != null) {      if (libDir.equals(moduleParentFile)) {        throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());      }    }  }  subDeploymentFiles.add(moduleFile);  final boolean webArchive=module.getType() == ModuleType.Web;  final ResourceRoot childResource=this.createResourceRoot(deploymentUnit,moduleFile,true,webArchive);  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.MODULE_META_DATA,module);  if (!webArchive) {    ModuleRootMarker.mark(childResource);  }  final String alternativeDD=module.getAlternativeDD();  if (alternativeDD != null && alternativeDD.trim().length() > 0) {    final VirtualFile alternateDeploymentDescriptor=deploymentRoot.getRoot().getChild(alternativeDD);    if (!alternateDeploymentDescriptor.exists()) {      throw MESSAGES.alternateDeploymentDescriptor(alternateDeploymentDescriptor,moduleFile);    }switch (module.getType()) {case Client:      childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CLIENT_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);    break;case Connector:  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CONNECTOR_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Ejb:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_EJB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Web:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_WEB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Service:throw MESSAGES.unsupportedModuleType(module.getFileName());}}} @AT@ 7374 @LENGTH@ 2852
---INS IfStatement@@if (libDir != null) {  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @TO@ EnhancedForStatement@@for (final ModuleMetaData module : earMetaData.getModules()) {  if (module.getFileName().endsWith(".xml")) {    throw MESSAGES.unsupportedModuleType(module.getFileName());  }  final VirtualFile moduleFile=virtualFile.getChild(module.getFileName());  if (!moduleFile.exists()) {    throw MESSAGES.cannotProcessEarModule(virtualFile,module.getFileName());  }  subDeploymentFiles.add(moduleFile);  final boolean webArchive=module.getType() == ModuleType.Web;  final ResourceRoot childResource=this.createResourceRoot(deploymentUnit,moduleFile,true,webArchive);  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.MODULE_META_DATA,module);  if (!webArchive) {    ModuleRootMarker.mark(childResource);  }  final String alternativeDD=module.getAlternativeDD();  if (alternativeDD != null && alternativeDD.trim().length() > 0) {    final VirtualFile alternateDeploymentDescriptor=deploymentRoot.getRoot().getChild(alternativeDD);    if (!alternateDeploymentDescriptor.exists()) {      throw MESSAGES.alternateDeploymentDescriptor(alternateDeploymentDescriptor,moduleFile);    }switch (module.getType()) {case Client:      childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CLIENT_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);    break;case Connector:  childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_CONNECTOR_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Ejb:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_EJB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Web:childResource.putAttachment(org.jboss.as.ee.structure.Attachments.ALTERNATE_WEB_DEPLOYMENT_DESCRIPTOR,alternateDeploymentDescriptor);break;case Service:throw MESSAGES.unsupportedModuleType(module.getFileName());}}} @AT@ 8057 @LENGTH@ 416
------INS InfixExpression@@libDir != null @TO@ IfStatement@@if (libDir != null) {  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @AT@ 8061 @LENGTH@ 14
---------INS SimpleName@@libDir @TO@ InfixExpression@@libDir != null @AT@ 8061 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@libDir != null @AT@ 8067 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@libDir != null @AT@ 8071 @LENGTH@ 4
------INS Block@@ThenBody:{  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @TO@ IfStatement@@if (libDir != null) {  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @AT@ 8077 @LENGTH@ 396
---------INS VariableDeclarationStatement@@VirtualFile moduleParentFile=moduleFile.getParent(); @TO@ Block@@ThenBody:{  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @AT@ 8103 @LENGTH@ 54
------------INS SimpleType@@VirtualFile @TO@ VariableDeclarationStatement@@VirtualFile moduleParentFile=moduleFile.getParent(); @AT@ 8103 @LENGTH@ 11
------------INS VariableDeclarationFragment@@moduleParentFile=moduleFile.getParent() @TO@ VariableDeclarationStatement@@VirtualFile moduleParentFile=moduleFile.getParent(); @AT@ 8115 @LENGTH@ 41
---------------INS SimpleName@@moduleParentFile @TO@ VariableDeclarationFragment@@moduleParentFile=moduleFile.getParent() @AT@ 8115 @LENGTH@ 16
---------------INS MethodInvocation@@moduleFile.getParent() @TO@ VariableDeclarationFragment@@moduleParentFile=moduleFile.getParent() @AT@ 8134 @LENGTH@ 22
------------------INS SimpleName@@Name:moduleFile @TO@ MethodInvocation@@moduleFile.getParent() @AT@ 8134 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@moduleFile.getParent() @AT@ 8145 @LENGTH@ 11
---------INS IfStatement@@if (moduleParentFile != null) {  if (libDir.equals(moduleParentFile)) {    throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());  }} @TO@ Block@@ThenBody:{  VirtualFile moduleParentFile=moduleFile.getParent();  if (moduleParentFile != null) {    if (libDir.equals(moduleParentFile)) {      throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());    }  }} @AT@ 8182 @LENGTH@ 269
------------INS InfixExpression@@moduleParentFile != null @TO@ IfStatement@@if (moduleParentFile != null) {  if (libDir.equals(moduleParentFile)) {    throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());  }} @AT@ 8186 @LENGTH@ 24
---------------INS SimpleName@@moduleParentFile @TO@ InfixExpression@@moduleParentFile != null @AT@ 8186 @LENGTH@ 16
---------------INS Operator@@!= @TO@ InfixExpression@@moduleParentFile != null @AT@ 8202 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@moduleParentFile != null @AT@ 8206 @LENGTH@ 4
------------INS Block@@ThenBody:{  if (libDir.equals(moduleParentFile)) {    throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());  }} @TO@ IfStatement@@if (moduleParentFile != null) {  if (libDir.equals(moduleParentFile)) {    throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());  }} @AT@ 8212 @LENGTH@ 239
---------------INS IfStatement@@if (libDir.equals(moduleParentFile)) {  throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());} @TO@ Block@@ThenBody:{  if (libDir.equals(moduleParentFile)) {    throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());  }} @AT@ 8242 @LENGTH@ 183
------------------INS MethodInvocation@@libDir.equals(moduleParentFile) @TO@ IfStatement@@if (libDir.equals(moduleParentFile)) {  throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());} @AT@ 8246 @LENGTH@ 31
---------------------INS SimpleName@@Name:libDir @TO@ MethodInvocation@@libDir.equals(moduleParentFile) @AT@ 8246 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:equals:[moduleParentFile] @TO@ MethodInvocation@@libDir.equals(moduleParentFile) @AT@ 8253 @LENGTH@ 24
------------------------INS SimpleName@@moduleParentFile @TO@ SimpleName@@MethodName:equals:[moduleParentFile] @AT@ 8260 @LENGTH@ 16
------------------INS Block@@ThenBody:{  throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());} @TO@ IfStatement@@if (libDir.equals(moduleParentFile)) {  throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());} @AT@ 8279 @LENGTH@ 146
---------------------INS ThrowStatement@@MethodInvocation:MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName()) @TO@ Block@@ThenBody:{  throw MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName());} @AT@ 8313 @LENGTH@ 82
------------------------INS MethodInvocation@@MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName()) @TO@ ThrowStatement@@MethodInvocation:MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName()) @AT@ 8319 @LENGTH@ 75
---------------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName()) @AT@ 8319 @LENGTH@ 8
---------------------------INS SimpleName@@MethodName:earModuleChildOfLibraryDirectory:[libDirName, module.getFileName()] @TO@ MethodInvocation@@MESSAGES.earModuleChildOfLibraryDirectory(libDirName,module.getFileName()) @AT@ 8328 @LENGTH@ 66
------------------------------INS SimpleName@@libDirName @TO@ SimpleName@@MethodName:earModuleChildOfLibraryDirectory:[libDirName, module.getFileName()] @AT@ 8361 @LENGTH@ 10
------------------------------INS MethodInvocation@@module.getFileName() @TO@ SimpleName@@MethodName:earModuleChildOfLibraryDirectory:[libDirName, module.getFileName()] @AT@ 8373 @LENGTH@ 20
---------------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.getFileName() @AT@ 8373 @LENGTH@ 6
---------------------------------INS SimpleName@@MethodName:getFileName:[] @TO@ MethodInvocation@@module.getFileName() @AT@ 8380 @LENGTH@ 13


UPD IfStatement@@if (fieldName.getSymbolName().equals(CREATED)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} @TO@ if (fieldName.getSymbolName().equals(CREATED)) {  if (fieldType.equals(DATE)) {    fieldBuilder.setFieldInitializer("new java.util.Date()");  } else {    fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");  }} @AT@ 34375 @LENGTH@ 128
---INS Block@@ThenBody:{  if (fieldType.equals(DATE)) {    fieldBuilder.setFieldInitializer("new java.util.Date()");  } else {    fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");  }} @TO@ IfStatement@@if (fieldName.getSymbolName().equals(CREATED)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} @AT@ 34686 @LENGTH@ 307
------INS IfStatement@@if (fieldType.equals(DATE)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} else {  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @TO@ Block@@ThenBody:{  if (fieldType.equals(DATE)) {    fieldBuilder.setFieldInitializer("new java.util.Date()");  } else {    fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");  }} @AT@ 34700 @LENGTH@ 283
---------MOV Block@@ThenBody:{  fieldBuilder.setFieldInitializer("new java.util.Date()");} @TO@ IfStatement@@if (fieldType.equals(DATE)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} else {  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @AT@ 34422 @LENGTH@ 81
---------INS MethodInvocation@@fieldType.equals(DATE) @TO@ IfStatement@@if (fieldType.equals(DATE)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} else {  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @AT@ 34704 @LENGTH@ 22
------------INS SimpleName@@Name:fieldType @TO@ MethodInvocation@@fieldType.equals(DATE) @AT@ 34704 @LENGTH@ 9
------------INS SimpleName@@MethodName:equals:[DATE] @TO@ MethodInvocation@@fieldType.equals(DATE) @AT@ 34714 @LENGTH@ 12
---------------INS SimpleName@@DATE @TO@ SimpleName@@MethodName:equals:[DATE] @AT@ 34721 @LENGTH@ 4
---------INS Block@@ElseBody:{  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @TO@ IfStatement@@if (fieldType.equals(DATE)) {  fieldBuilder.setFieldInitializer("new java.util.Date()");} else {  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @AT@ 34835 @LENGTH@ 148
------------INS ExpressionStatement@@MethodInvocation:fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @TO@ Block@@ElseBody:{  fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())");} @AT@ 34853 @LENGTH@ 116
---------------INS MethodInvocation@@fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @TO@ ExpressionStatement@@MethodInvocation:fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @AT@ 34853 @LENGTH@ 115
------------------INS SimpleName@@Name:fieldBuilder @TO@ MethodInvocation@@fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @AT@ 34853 @LENGTH@ 12
------------------INS SimpleName@@MethodName:setFieldInitializer:["new java.sql.Timestamp(new java.util.Date().getTime())"] @TO@ MethodInvocation@@fieldBuilder.setFieldInitializer("new java.sql.Timestamp(new java.util.Date().getTime())") @AT@ 34891 @LENGTH@ 77
---------------------INS StringLiteral@@"new java.sql.Timestamp(new java.util.Date().getTime())" @TO@ SimpleName@@MethodName:setFieldInitializer:["new java.sql.Timestamp(new java.util.Date().getTime())"] @AT@ 34911 @LENGTH@ 56


INS MethodDeclaration@@public, Result, MethodName:install,  @TO@ TypeDeclaration@@[public]PatchImpl, [Patch] @AT@ 1766 @LENGTH@ 68
---INS Modifier@@public @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1766 @LENGTH@ 6
---INS SimpleType@@Result @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1773 @LENGTH@ 6
---INS SimpleName@@MethodName:install @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1780 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:install(false,true) @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1800 @LENGTH@ 28
------INS MethodInvocation@@install(false,true) @TO@ ReturnStatement@@MethodInvocation:install(false,true) @AT@ 1807 @LENGTH@ 20
---------INS SimpleName@@MethodName:install:[false, true] @TO@ MethodInvocation@@install(false,true) @AT@ 1807 @LENGTH@ 20
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:install:[false, true] @AT@ 1815 @LENGTH@ 5
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:install:[false, true] @AT@ 1822 @LENGTH@ 4


UPD EnhancedForStatement@@for (String name : model.get(Constants.VIRTUAL_SERVER).keys()) {  ModelNode virtualServer=model.get(Constants.VIRTUAL_SERVER,name);  swap(virtualServer,SSO_PATH,SSO_ALIAS);  swap(virtualServer,ACCESS_LOG_PATH,ACCESS_LOG_ALIAS);  swap(virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()),DIRECTORY_PATH,DIRECTORY_ALIAS);} @TO@ for (String name : model.get(Constants.VIRTUAL_SERVER).keys()) {  ModelNode virtualServer=model.get(Constants.VIRTUAL_SERVER,name);  swap(virtualServer,SSO_PATH,SSO_ALIAS);  swap(virtualServer,ACCESS_LOG_PATH,ACCESS_LOG_ALIAS);  ModelNode accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue());  swap(accessLog,DIRECTORY_PATH,DIRECTORY_ALIAS);} @AT@ 9356 @LENGTH@ 463
---UPD ExpressionStatement@@MethodInvocation:swap(virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()),DIRECTORY_PATH,DIRECTORY_ALIAS) @TO@ MethodInvocation:swap(accessLog,DIRECTORY_PATH,DIRECTORY_ALIAS) @AT@ 9684 @LENGTH@ 113
------UPD MethodInvocation@@swap(virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()),DIRECTORY_PATH,DIRECTORY_ALIAS) @TO@ swap(accessLog,DIRECTORY_PATH,DIRECTORY_ALIAS) @AT@ 9684 @LENGTH@ 112
---------UPD SimpleName@@MethodName:swap:[virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()), DIRECTORY_PATH, DIRECTORY_ALIAS] @TO@ MethodName:swap:[accessLog, DIRECTORY_PATH, DIRECTORY_ALIAS] @AT@ 9684 @LENGTH@ 112
------------INS SimpleName@@accessLog @TO@ SimpleName@@MethodName:swap:[virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()), DIRECTORY_PATH, DIRECTORY_ALIAS] @AT@ 9810 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()); @TO@ EnhancedForStatement@@for (String name : model.get(Constants.VIRTUAL_SERVER).keys()) {  ModelNode virtualServer=model.get(Constants.VIRTUAL_SERVER,name);  swap(virtualServer,SSO_PATH,SSO_ALIAS);  swap(virtualServer,ACCESS_LOG_PATH,ACCESS_LOG_ALIAS);  swap(virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()),DIRECTORY_PATH,DIRECTORY_ALIAS);} @AT@ 9684 @LENGTH@ 96
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()); @AT@ 9684 @LENGTH@ 9
------INS VariableDeclarationFragment@@accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()) @TO@ VariableDeclarationStatement@@ModelNode accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()); @AT@ 9694 @LENGTH@ 85
---------MOV MethodInvocation@@virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()) @TO@ VariableDeclarationFragment@@accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()) @AT@ 9689 @LENGTH@ 73
---------INS SimpleName@@accessLog @TO@ VariableDeclarationFragment@@accessLog=virtualServer.get(ACCESS_LOG_ALIAS.getKey(),ACCESS_LOG_ALIAS.getValue()) @AT@ 9694 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @TO@ TypeDeclaration@@[public]SimpleOperatorTest, LanguageTestSupport @AT@ 1894 @LENGTH@ 626
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1894 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1901 @LENGTH@ 4
---INS SimpleName@@MethodName:testEmptyValue @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1906 @LENGTH@ 14
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1930 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("") @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1950 @LENGTH@ 29
------INS MethodInvocation@@exchange.getIn().setBody("") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("") @AT@ 1950 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 1950 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 1950 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[""] @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 1967 @LENGTH@ 11
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:setBody:[""] @AT@ 1975 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == null",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 1988 @LENGTH@ 45
------INS MethodInvocation@@assertPredicate("${in.body} == null",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == null",false) @AT@ 1988 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertPredicate:["${in.body} == null", false] @TO@ MethodInvocation@@assertPredicate("${in.body} == null",false) @AT@ 1988 @LENGTH@ 44
------------INS StringLiteral@@"${in.body} == null" @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == null", false] @AT@ 2004 @LENGTH@ 20
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == null", false] @AT@ 2026 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${body} == null",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2042 @LENGTH@ 42
------INS MethodInvocation@@assertPredicate("${body} == null",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${body} == null",false) @AT@ 2042 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertPredicate:["${body} == null", false] @TO@ MethodInvocation@@assertPredicate("${body} == null",false) @AT@ 2042 @LENGTH@ 41
------------INS StringLiteral@@"${body} == null" @TO@ SimpleName@@MethodName:assertPredicate:["${body} == null", false] @AT@ 2058 @LENGTH@ 17
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${body} == null", false] @AT@ 2077 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("") @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2094 @LENGTH@ 29
------INS MethodInvocation@@exchange.getIn().setBody("") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("") @AT@ 2094 @LENGTH@ 28
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 2094 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 2094 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[""] @TO@ MethodInvocation@@exchange.getIn().setBody("") @AT@ 2111 @LENGTH@ 11
------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:setBody:[""] @AT@ 2119 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",true) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2132 @LENGTH@ 42
------INS MethodInvocation@@assertPredicate("${in.body} == ''",true) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",true) @AT@ 2132 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertPredicate:["${in.body} == ''", true] @TO@ MethodInvocation@@assertPredicate("${in.body} == ''",true) @AT@ 2132 @LENGTH@ 41
------------INS StringLiteral@@"${in.body} == ''" @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", true] @AT@ 2148 @LENGTH@ 18
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", true] @AT@ 2168 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",true) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2183 @LENGTH@ 41
------INS MethodInvocation@@assertPredicate("${body} == \"\"",true) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",true) @AT@ 2183 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertPredicate:["${body} == \"\"", true] @TO@ MethodInvocation@@assertPredicate("${body} == \"\"",true) @AT@ 2183 @LENGTH@ 40
------------INS StringLiteral@@"${body} == \"\"" @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", true] @AT@ 2199 @LENGTH@ 17
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", true] @AT@ 2218 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(" ") @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2234 @LENGTH@ 30
------INS MethodInvocation@@exchange.getIn().setBody(" ") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(" ") @AT@ 2234 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody(" ") @AT@ 2234 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody(" ") @AT@ 2234 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:[" "] @TO@ MethodInvocation@@exchange.getIn().setBody(" ") @AT@ 2251 @LENGTH@ 12
------------INS StringLiteral@@" " @TO@ SimpleName@@MethodName:setBody:[" "] @AT@ 2259 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2273 @LENGTH@ 43
------INS MethodInvocation@@assertPredicate("${in.body} == ''",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",false) @AT@ 2273 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @TO@ MethodInvocation@@assertPredicate("${in.body} == ''",false) @AT@ 2273 @LENGTH@ 42
------------INS StringLiteral@@"${in.body} == ''" @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @AT@ 2289 @LENGTH@ 18
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @AT@ 2309 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2325 @LENGTH@ 42
------INS MethodInvocation@@assertPredicate("${body} == \"\"",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",false) @AT@ 2325 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @TO@ MethodInvocation@@assertPredicate("${body} == \"\"",false) @AT@ 2325 @LENGTH@ 41
------------INS StringLiteral@@"${body} == \"\"" @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @AT@ 2341 @LENGTH@ 17
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @AT@ 2360 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Value") @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2377 @LENGTH@ 34
------INS MethodInvocation@@exchange.getIn().setBody("Value") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("Value") @AT@ 2377 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setBody("Value") @AT@ 2377 @LENGTH@ 16
---------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setBody("Value") @AT@ 2377 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBody:["Value"] @TO@ MethodInvocation@@exchange.getIn().setBody("Value") @AT@ 2394 @LENGTH@ 16
------------INS StringLiteral@@"Value" @TO@ SimpleName@@MethodName:setBody:["Value"] @AT@ 2402 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2420 @LENGTH@ 43
------INS MethodInvocation@@assertPredicate("${in.body} == ''",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${in.body} == ''",false) @AT@ 2420 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @TO@ MethodInvocation@@assertPredicate("${in.body} == ''",false) @AT@ 2420 @LENGTH@ 42
------------INS StringLiteral@@"${in.body} == ''" @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @AT@ 2436 @LENGTH@ 18
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${in.body} == ''", false] @AT@ 2456 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",false) @TO@ MethodDeclaration@@public, void, MethodName:testEmptyValue, Exception,  @AT@ 2472 @LENGTH@ 42
------INS MethodInvocation@@assertPredicate("${body} == \"\"",false) @TO@ ExpressionStatement@@MethodInvocation:assertPredicate("${body} == \"\"",false) @AT@ 2472 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @TO@ MethodInvocation@@assertPredicate("${body} == \"\"",false) @AT@ 2472 @LENGTH@ 41
------------INS StringLiteral@@"${body} == \"\"" @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @AT@ 2488 @LENGTH@ 17
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:assertPredicate:["${body} == \"\"", false] @AT@ 2507 @LENGTH@ 5


UPD VariableDeclarationStatement@@URI selfUri=buildUri(config.getBaseUri(),repositoryMetadata.name(),id.toString()); @TO@ URI selfUri=buildUri(config.getBaseUri(),repositoryMetadata.name(),String.format("%s",id)); @AT@ 1927 @LENGTH@ 86
---UPD VariableDeclarationFragment@@selfUri=buildUri(config.getBaseUri(),repositoryMetadata.name(),id.toString()) @TO@ selfUri=buildUri(config.getBaseUri(),repositoryMetadata.name(),String.format("%s",id)) @AT@ 1931 @LENGTH@ 81
------UPD MethodInvocation@@buildUri(config.getBaseUri(),repositoryMetadata.name(),id.toString()) @TO@ buildUri(config.getBaseUri(),repositoryMetadata.name(),String.format("%s",id)) @AT@ 1941 @LENGTH@ 71
---------UPD SimpleName@@MethodName:buildUri:[config.getBaseUri(), repositoryMetadata.name(), id.toString()] @TO@ MethodName:buildUri:[config.getBaseUri(), repositoryMetadata.name(), String.format("%s",id)] @AT@ 1941 @LENGTH@ 71
------------UPD MethodInvocation@@id.toString() @TO@ String.format("%s",id) @AT@ 1998 @LENGTH@ 13
---------------UPD SimpleName@@Name:id @TO@ Name:String @AT@ 1998 @LENGTH@ 2
---------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:format:["%s", id] @AT@ 2001 @LENGTH@ 10
------------------INS StringLiteral@@"%s" @TO@ SimpleName@@MethodName:toString:[] @AT@ 2012 @LENGTH@ 4
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:toString:[] @AT@ 2018 @LENGTH@ 2


UPD WhileStatement@@while (null != rootCause) {  rootCause=rootCause.getCause();} @TO@ while (null != rootCause && rootCause.getCause() != null) {  rootCause=rootCause.getCause();} @AT@ 2942 @LENGTH@ 91
---INS InfixExpression@@null != rootCause && rootCause.getCause() != null @TO@ WhileStatement@@while (null != rootCause) {  rootCause=rootCause.getCause();} @AT@ 2949 @LENGTH@ 49
------INS InfixExpression@@null != rootCause @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2949 @LENGTH@ 17
---------MOV NullLiteral@@null @TO@ InfixExpression@@null != rootCause @AT@ 2949 @LENGTH@ 4
---------MOV Operator@@!= @TO@ InfixExpression@@null != rootCause @AT@ 2953 @LENGTH@ 2
---------MOV SimpleName@@rootCause @TO@ InfixExpression@@null != rootCause @AT@ 2957 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2966 @LENGTH@ 2
------INS InfixExpression@@rootCause.getCause() != null @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2970 @LENGTH@ 28
---------INS MethodInvocation@@rootCause.getCause() @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2970 @LENGTH@ 20
------------INS SimpleName@@Name:rootCause @TO@ MethodInvocation@@rootCause.getCause() @AT@ 2970 @LENGTH@ 9
------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@rootCause.getCause() @AT@ 2980 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2990 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2994 @LENGTH@ 4
---DEL InfixExpression@@null != rootCause @AT@ 2949 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @TO@ MethodDeclaration@@public, void, MethodName:doWriteFaultResponse, Message message, HttpServletResponse response, Exchange exchange, IOException,  @AT@ 10511 @LENGTH@ 52
---INS MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @TO@ ExpressionStatement@@MethodInvocation:message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 10511 @LENGTH@ 51
------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 10511 @LENGTH@ 7
------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @TO@ MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 10519 @LENGTH@ 43
---------INS QualifiedName@@Exchange.HTTP_RESPONSE_CODE @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 10529 @LENGTH@ 27
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 10529 @LENGTH@ 8
------------INS SimpleName@@HTTP_RESPONSE_CODE @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 10538 @LENGTH@ 18
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 10558 @LENGTH@ 3


INS IfStatement@@if (options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty())) {  options.setZookeeperPassword(ZooKeeperUtils.generatePassword());} @TO@ MethodDeclaration@@public, CreateContainerMetadata[], MethodName:createContainers, final CreateContainerOptions options,  @AT@ 9766 @LENGTH@ 208
---INS InfixExpression@@options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @TO@ IfStatement@@if (options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty())) {  options.setZookeeperPassword(ZooKeeperUtils.generatePassword());} @AT@ 9770 @LENGTH@ 114
------INS MethodInvocation@@options.isEnsembleServer() @TO@ InfixExpression@@options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @AT@ 9770 @LENGTH@ 26
---------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 9770 @LENGTH@ 7
---------INS SimpleName@@MethodName:isEnsembleServer:[] @TO@ MethodInvocation@@options.isEnsembleServer() @AT@ 9778 @LENGTH@ 18
------INS Operator@@&& @TO@ InfixExpression@@options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @AT@ 9796 @LENGTH@ 2
------INS ParenthesizedExpression@@(options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @TO@ InfixExpression@@options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @AT@ 9800 @LENGTH@ 84
---------INS InfixExpression@@options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty() @TO@ ParenthesizedExpression@@(options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty()) @AT@ 9801 @LENGTH@ 82
------------INS InfixExpression@@options.getZookeeperPassword() == null @TO@ InfixExpression@@options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty() @AT@ 9801 @LENGTH@ 38
---------------INS MethodInvocation@@options.getZookeeperPassword() @TO@ InfixExpression@@options.getZookeeperPassword() == null @AT@ 9801 @LENGTH@ 30
------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 9801 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 9809 @LENGTH@ 22
---------------INS Operator@@== @TO@ InfixExpression@@options.getZookeeperPassword() == null @AT@ 9831 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@options.getZookeeperPassword() == null @AT@ 9835 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty() @AT@ 9839 @LENGTH@ 2
------------INS MethodInvocation@@options.getZookeeperPassword().isEmpty() @TO@ InfixExpression@@options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty() @AT@ 9843 @LENGTH@ 40
---------------INS MethodInvocation@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@options.getZookeeperPassword().isEmpty() @AT@ 9843 @LENGTH@ 30
---------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getZookeeperPassword().isEmpty() @AT@ 9843 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@options.getZookeeperPassword().isEmpty() @AT@ 9874 @LENGTH@ 9
---INS Block@@ThenBody:{  options.setZookeeperPassword(ZooKeeperUtils.generatePassword());} @TO@ IfStatement@@if (options.isEnsembleServer() && (options.getZookeeperPassword() == null || options.getZookeeperPassword().isEmpty())) {  options.setZookeeperPassword(ZooKeeperUtils.generatePassword());} @AT@ 9886 @LENGTH@ 88
------INS ExpressionStatement@@MethodInvocation:options.setZookeeperPassword(ZooKeeperUtils.generatePassword()) @TO@ Block@@ThenBody:{  options.setZookeeperPassword(ZooKeeperUtils.generatePassword());} @AT@ 9900 @LENGTH@ 64
---------INS MethodInvocation@@options.setZookeeperPassword(ZooKeeperUtils.generatePassword()) @TO@ ExpressionStatement@@MethodInvocation:options.setZookeeperPassword(ZooKeeperUtils.generatePassword()) @AT@ 9900 @LENGTH@ 63
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.setZookeeperPassword(ZooKeeperUtils.generatePassword()) @AT@ 9900 @LENGTH@ 7
------------INS SimpleName@@MethodName:setZookeeperPassword:[ZooKeeperUtils.generatePassword()] @TO@ MethodInvocation@@options.setZookeeperPassword(ZooKeeperUtils.generatePassword()) @AT@ 9908 @LENGTH@ 55
---------------INS MethodInvocation@@ZooKeeperUtils.generatePassword() @TO@ SimpleName@@MethodName:setZookeeperPassword:[ZooKeeperUtils.generatePassword()] @AT@ 9929 @LENGTH@ 33
------------------INS SimpleName@@Name:ZooKeeperUtils @TO@ MethodInvocation@@ZooKeeperUtils.generatePassword() @AT@ 9929 @LENGTH@ 14
------------------INS SimpleName@@MethodName:generatePassword:[] @TO@ MethodInvocation@@ZooKeeperUtils.generatePassword() @AT@ 9944 @LENGTH@ 18


UPD IfStatement@@if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inExtendedComment=false;} else {} @TO@ if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inExtendedComment=false;} @AT@ 6008 @LENGTH@ 189
---DEL Block@@ElseBody:{} @AT@ 6130 @LENGTH@ 67


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleConsumeAbsoluteNotStepwiseTest, SftpSimpleConsumeAbsoluteTest @TO@ [public]SftpSimpleConsumeAbsoluteNotStepwiseTest, SftpSimpleConsumeAbsoluteTest @AT@ 951 @LENGTH@ 634
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 951 @LENGTH@ 79


UPD IfStatement@@if (options.isEnsembleServer()) {  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} else if (options.getZookeeperUrl() != null) {  appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.url = " + options.getZookeeperUrl()));} @TO@ if (options.isEnsembleServer()) {  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} else if (options.getZookeeperUrl() != null) {  appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.url = " + options.getZookeeperUrl()));} @AT@ 7784 @LENGTH@ 489
---UPD Block@@ThenBody:{  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} @TO@ ThenBody:{  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} @AT@ 7816 @LENGTH@ 285
------INS ExpressionStatement@@MethodInvocation:appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")) @TO@ Block@@ThenBody:{  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} @AT@ 7952 @LENGTH@ 106
---------INS MethodInvocation@@appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")) @TO@ ExpressionStatement@@MethodInvocation:appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")) @AT@ 7952 @LENGTH@ 105
------------INS SimpleName@@MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")] @TO@ MethodInvocation@@appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")) @AT@ 7952 @LENGTH@ 105
---------------INS SimpleName@@sb @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")] @AT@ 7963 @LENGTH@ 2
---------------INS StringLiteral@@"etc/system.properties" @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")] @AT@ 7967 @LENGTH@ 23
---------------INS MethodInvocation@@Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true") @TO@ SimpleName@@MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true")] @AT@ 7992 @LENGTH@ 64
------------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true") @AT@ 7992 @LENGTH@ 6
------------------INS SimpleName@@MethodName:asList:[ZooKeeperClusterService.AGENT_AUTOSTART + "=true"] @TO@ MethodInvocation@@Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true") @AT@ 7999 @LENGTH@ 57
---------------------INS InfixExpression@@ZooKeeperClusterService.AGENT_AUTOSTART + "=true" @TO@ SimpleName@@MethodName:asList:[ZooKeeperClusterService.AGENT_AUTOSTART + "=true"] @AT@ 8006 @LENGTH@ 49
------------------------INS QualifiedName@@ZooKeeperClusterService.AGENT_AUTOSTART @TO@ InfixExpression@@ZooKeeperClusterService.AGENT_AUTOSTART + "=true" @AT@ 8006 @LENGTH@ 39
---------------------------INS SimpleName@@ZooKeeperClusterService @TO@ QualifiedName@@ZooKeeperClusterService.AGENT_AUTOSTART @AT@ 8006 @LENGTH@ 23
---------------------------INS SimpleName@@AGENT_AUTOSTART @TO@ QualifiedName@@ZooKeeperClusterService.AGENT_AUTOSTART @AT@ 8030 @LENGTH@ 15
------------------------INS Operator@@+ @TO@ InfixExpression@@ZooKeeperClusterService.AGENT_AUTOSTART + "=true" @AT@ 8045 @LENGTH@ 1
------------------------INS StringLiteral@@"=true" @TO@ InfixExpression@@ZooKeeperClusterService.AGENT_AUTOSTART + "=true" @AT@ 8048 @LENGTH@ 7


UPD IfStatement@@if (file.getPath().startsWith(endpointNormalized)) {  path=new File(ObjectHelper.after(file.getPath(),endpointNormalized + File.separator));} else {  path=new File(file.getPath());} @TO@ if (file.getPath().startsWith(endpointNormalized + File.separator)) {  path=new File(ObjectHelper.after(file.getPath(),endpointNormalized + File.separator));} else {  path=new File(file.getPath());} @AT@ 5988 @LENGTH@ 270
---UPD MethodInvocation@@file.getPath().startsWith(endpointNormalized) @TO@ file.getPath().startsWith(endpointNormalized + File.separator) @AT@ 5992 @LENGTH@ 45
------UPD SimpleName@@MethodName:startsWith:[endpointNormalized] @TO@ MethodName:startsWith:[endpointNormalized + File.separator] @AT@ 6007 @LENGTH@ 30
---------INS InfixExpression@@endpointNormalized + File.separator @TO@ SimpleName@@MethodName:startsWith:[endpointNormalized] @AT@ 6018 @LENGTH@ 35
------------INS SimpleName@@endpointNormalized @TO@ InfixExpression@@endpointNormalized + File.separator @AT@ 6018 @LENGTH@ 18
------------INS Operator@@+ @TO@ InfixExpression@@endpointNormalized + File.separator @AT@ 6036 @LENGTH@ 1
------------INS QualifiedName@@File.separator @TO@ InfixExpression@@endpointNormalized + File.separator @AT@ 6039 @LENGTH@ 14
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 6039 @LENGTH@ 4
---------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 6044 @LENGTH@ 9
---------DEL SimpleName@@endpointNormalized @AT@ 6018 @LENGTH@ 18


UPD IfStatement@@if (attrMeta.isCollectionLike()) {  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} else if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ if (attrMeta.isCollectionLike()) {  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} else if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11052 @LENGTH@ 2774
---UPD Block@@ThenBody:{  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} @TO@ ThenBody:{  Collection c=attrMeta.asCollection(entity);  if (null == c || c == Collections.emptyList()) {    c=new ArrayList();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object cval=jp.readValueAs(attrMeta.elementType());      c.add(cval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=c;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");  }} @AT@ 11084 @LENGTH@ 714
------UPD IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");} @TO@ if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  jp.nextToken();  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");} @AT@ 11276 @LENGTH@ 508
---------UPD Block@@ThenBody:{  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} @TO@ ThenBody:{  jp.nextToken();  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} @AT@ 11328 @LENGTH@ 240
------------INS ExpressionStatement@@MethodInvocation:jp.nextToken() @TO@ Block@@ThenBody:{  do {    Object cval=jp.readValueAs(attrMeta.elementType());    c.add(cval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=c;} @AT@ 11376 @LENGTH@ 15
---------------INS MethodInvocation@@jp.nextToken() @TO@ ExpressionStatement@@MethodInvocation:jp.nextToken() @AT@ 11376 @LENGTH@ 14
------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.nextToken() @AT@ 11376 @LENGTH@ 2
------------------INS SimpleName@@MethodName:nextToken:[] @TO@ MethodInvocation@@jp.nextToken() @AT@ 11379 @LENGTH@ 11
---UPD Block@@ElseBody:if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ ElseBody:if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11804 @LENGTH@ 2022
------UPD IfStatement@@if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @TO@ if (attrMeta.isSetLike()) {  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} else if (attrMeta.isMapLike()) {  Map m=attrMeta.asMap(entity);  if (null == m || m == Collections.emptyMap()) {    m=new HashMap();  }  if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {    do {      name=jp.getCurrentName();      Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);      tok=jp.nextToken();      Object mval=jp.readValueAs(attrMeta.elementType());      m.put(mkey,mval);    } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);    val=m;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");  }} else {  if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {    val=jp.readValueAs(attrMeta.type());  }} @AT@ 11804 @LENGTH@ 2022
---------UPD Block@@ThenBody:{  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} @TO@ ThenBody:{  Set s=attrMeta.asSet(entity);  if (null == s || s == Collections.emptySet()) {    s=new HashSet();  }  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    jp.nextToken();    do {      Object sval=jp.readValueAs(attrMeta.elementType());      s.add(sval);    } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);    val=s;  } else   if (tok == JsonToken.VALUE_NULL) {    val=null;  } else {    throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");  }} @AT@ 11829 @LENGTH@ 690
------------UPD IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");} @TO@ if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} else if (tok == JsonToken.VALUE_NULL) {  val=null;} else {  throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");} @AT@ 12004 @LENGTH@ 501
---------------UPD Block@@ThenBody:{  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @TO@ ThenBody:{  jp.nextToken();  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @AT@ 12056 @LENGTH@ 240
------------------INS ExpressionStatement@@MethodInvocation:jp.nextToken() @TO@ Block@@ThenBody:{  do {    Object sval=jp.readValueAs(attrMeta.elementType());    s.add(sval);  } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);  val=s;} @AT@ 12166 @LENGTH@ 15
---------------------INS MethodInvocation@@jp.nextToken() @TO@ ExpressionStatement@@MethodInvocation:jp.nextToken() @AT@ 12166 @LENGTH@ 14
------------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.nextToken() @AT@ 12166 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:nextToken:[] @TO@ MethodInvocation@@jp.nextToken() @AT@ 12169 @LENGTH@ 11


UPD CatchClause@@catch (IOException e) {  errors.add(e);} @TO@ catch (Throwable e) {  errors.add(e);} @AT@ 40694 @LENGTH@ 84
---UPD SingleVariableDeclaration@@IOException e @TO@ Throwable e @AT@ 40701 @LENGTH@ 13
------UPD SimpleType@@IOException @TO@ Throwable @AT@ 40701 @LENGTH@ 11


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @TO@ MethodInvocation:JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),protocolRelativePath.toString()) @AT@ 3326 @LENGTH@ 107
---INS MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),protocolRelativePath.toString()) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("property " + property.getName() + " not defined")) @AT@ 3329 @LENGTH@ 96
------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),protocolRelativePath.toString()) @AT@ 3329 @LENGTH@ 24
------MOV SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.propertyNotDefined(property.getName(),protocolRelativePath.toString()) @AT@ 3377 @LENGTH@ 54
---------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @AT@ 3373 @LENGTH@ 18
------------MOV SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 3395 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 3404 @LENGTH@ 9
---------INS MethodInvocation@@protocolRelativePath.toString() @TO@ SimpleName@@MethodName:set:["property " + property.getName() + " not defined"] @AT@ 3393 @LENGTH@ 31
------------INS SimpleName@@Name:protocolRelativePath @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 3393 @LENGTH@ 20
------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 3414 @LENGTH@ 10
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("property " + property.getName() + " not defined")] @AT@ 3332 @LENGTH@ 100
------DEL New@@new @AT@ 3332 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 3336 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("property " + property.getName() + " not defined") @AT@ 3361 @LENGTH@ 70
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 3361 @LENGTH@ 15
------------DEL New@@new @AT@ 3361 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 3365 @LENGTH@ 9


INS FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @TO@ TypeDeclaration@@[public, final]EscapeCharacterState, BaseParsingState @AT@ 1216 @LENGTH@ 52
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1216 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1223 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1230 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1236 @LENGTH@ 6
---INS VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1243 @LENGTH@ 24
------INS SimpleName@@ID @TO@ VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @AT@ 1243 @LENGTH@ 2
------INS StringLiteral@@"ESCAPED_CHARACTER" @TO@ VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @AT@ 1248 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:FileUtils.tar(parentDir,fileNames,archiveFileName) @TO@ MethodInvocation:CompressionUtils.tar(parentDir,fileNames,archiveFileName) @AT@ 14655 @LENGTH@ 52
---UPD MethodInvocation@@FileUtils.tar(parentDir,fileNames,archiveFileName) @TO@ CompressionUtils.tar(parentDir,fileNames,archiveFileName) @AT@ 14655 @LENGTH@ 51
------UPD SimpleName@@Name:FileUtils @TO@ Name:CompressionUtils @AT@ 14655 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:context.removeService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name)) @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model,  @AT@ 1829 @LENGTH@ 73
---INS MethodInvocation@@context.removeService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name)) @TO@ ExpressionStatement@@MethodInvocation:context.removeService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name)) @AT@ 1829 @LENGTH@ 72
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.removeService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name)) @AT@ 1829 @LENGTH@ 7
------INS SimpleName@@MethodName:removeService:[WebSubsystemServices.JBOSS_WEB_VALVE.append(name)] @TO@ MethodInvocation@@context.removeService(WebSubsystemServices.JBOSS_WEB_VALVE.append(name)) @AT@ 1837 @LENGTH@ 64
---------INS MethodInvocation@@WebSubsystemServices.JBOSS_WEB_VALVE.append(name) @TO@ SimpleName@@MethodName:removeService:[WebSubsystemServices.JBOSS_WEB_VALVE.append(name)] @AT@ 1851 @LENGTH@ 49
------------INS QualifiedName@@Name:WebSubsystemServices.JBOSS_WEB_VALVE @TO@ MethodInvocation@@WebSubsystemServices.JBOSS_WEB_VALVE.append(name) @AT@ 1851 @LENGTH@ 36
------------INS SimpleName@@MethodName:append:[name] @TO@ MethodInvocation@@WebSubsystemServices.JBOSS_WEB_VALVE.append(name) @AT@ 1888 @LENGTH@ 12
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:append:[name] @AT@ 1895 @LENGTH@ 4


INS MethodDeclaration@@boolean, MethodName:isPropertySeparator, char ch,  @TO@ TypeDeclaration@@[public]CommandLineFormat,  @AT@ 1210 @LENGTH@ 29
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1202 @LENGTH@ 7
---INS SimpleName@@MethodName:isPropertySeparator @TO@ MethodDeclaration@@boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1210 @LENGTH@ 19
---INS SingleVariableDeclaration@@char ch @TO@ MethodDeclaration@@boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1230 @LENGTH@ 7
------INS PrimitiveType@@char @TO@ SingleVariableDeclaration@@char ch @AT@ 1230 @LENGTH@ 4
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@char ch @AT@ 1235 @LENGTH@ 2


INS MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @TO@ TypeDeclaration@@[public, abstract]AbstractControllerService, [Service<ModelController>] @AT@ 11307 @LENGTH@ 40
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11307 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11317 @LENGTH@ 4
---INS SimpleName@@MethodName:bootThreadDone @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11322 @LENGTH@ 14


INS IfStatement@@if (that == this) {  return;} @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, org.apache.camel.Message that,  @AT@ 2200 @LENGTH@ 105
---INS InfixExpression@@that == this @TO@ IfStatement@@if (that == this) {  return;} @AT@ 2204 @LENGTH@ 12
------INS SimpleName@@that @TO@ InfixExpression@@that == this @AT@ 2204 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@that == this @AT@ 2208 @LENGTH@ 2
------INS ThisExpression@@this @TO@ InfixExpression@@that == this @AT@ 2212 @LENGTH@ 4
---INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (that == this) {  return;} @AT@ 2218 @LENGTH@ 87
------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 2288 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @TO@ TypeDeclaration@@[public]MapReduceResultsUnitTests,  @AT@ 1711 @LENGTH@ 273
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1711 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1718 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesLongTotalInResult @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1723 @LENGTH@ 24
---INS VariableDeclarationStatement@@DBObject inner=new BasicDBObject("total",1L); @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1755 @LENGTH@ 48
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject inner=new BasicDBObject("total",1L); @AT@ 1755 @LENGTH@ 8
------INS VariableDeclarationFragment@@inner=new BasicDBObject("total",1L) @TO@ VariableDeclarationStatement@@DBObject inner=new BasicDBObject("total",1L); @AT@ 1764 @LENGTH@ 38
---------INS SimpleName@@inner @TO@ VariableDeclarationFragment@@inner=new BasicDBObject("total",1L) @AT@ 1764 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicDBObject["total", 1L] @TO@ VariableDeclarationFragment@@inner=new BasicDBObject("total",1L) @AT@ 1772 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["total", 1L] @AT@ 1772 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["total", 1L] @AT@ 1776 @LENGTH@ 13
------------INS StringLiteral@@"total" @TO@ ClassInstanceCreation@@BasicDBObject["total", 1L] @AT@ 1790 @LENGTH@ 7
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@BasicDBObject["total", 1L] @AT@ 1799 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:inner.put("mapTime",1L) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1806 @LENGTH@ 25
------INS MethodInvocation@@inner.put("mapTime",1L) @TO@ ExpressionStatement@@MethodInvocation:inner.put("mapTime",1L) @AT@ 1806 @LENGTH@ 24
---------INS SimpleName@@Name:inner @TO@ MethodInvocation@@inner.put("mapTime",1L) @AT@ 1806 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["mapTime", 1L] @TO@ MethodInvocation@@inner.put("mapTime",1L) @AT@ 1812 @LENGTH@ 18
------------INS StringLiteral@@"mapTime" @TO@ SimpleName@@MethodName:put:["mapTime", 1L] @AT@ 1816 @LENGTH@ 9
------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:put:["mapTime", 1L] @AT@ 1827 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:inner.put("emitLoop",1) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1834 @LENGTH@ 25
------INS MethodInvocation@@inner.put("emitLoop",1) @TO@ ExpressionStatement@@MethodInvocation:inner.put("emitLoop",1) @AT@ 1834 @LENGTH@ 24
---------INS SimpleName@@Name:inner @TO@ MethodInvocation@@inner.put("emitLoop",1) @AT@ 1834 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["emitLoop", 1] @TO@ MethodInvocation@@inner.put("emitLoop",1) @AT@ 1840 @LENGTH@ 18
------------INS StringLiteral@@"emitLoop" @TO@ SimpleName@@MethodName:put:["emitLoop", 1] @AT@ 1844 @LENGTH@ 10
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:put:["emitLoop", 1] @AT@ 1856 @LENGTH@ 1
---INS VariableDeclarationStatement@@DBObject source=new BasicDBObject("timing",inner); @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1863 @LENGTH@ 53
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject source=new BasicDBObject("timing",inner); @AT@ 1863 @LENGTH@ 8
------INS VariableDeclarationFragment@@source=new BasicDBObject("timing",inner) @TO@ VariableDeclarationStatement@@DBObject source=new BasicDBObject("timing",inner); @AT@ 1872 @LENGTH@ 43
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new BasicDBObject("timing",inner) @AT@ 1872 @LENGTH@ 6
---------INS ClassInstanceCreation@@BasicDBObject["timing", inner] @TO@ VariableDeclarationFragment@@source=new BasicDBObject("timing",inner) @AT@ 1881 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["timing", inner] @AT@ 1881 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["timing", inner] @AT@ 1885 @LENGTH@ 13
------------INS StringLiteral@@"timing" @TO@ ClassInstanceCreation@@BasicDBObject["timing", inner] @AT@ 1899 @LENGTH@ 8
------------INS SimpleName@@inner @TO@ ClassInstanceCreation@@BasicDBObject["timing", inner] @AT@ 1909 @LENGTH@ 5
---INS ExpressionStatement@@ClassInstanceCreation:new MapReduceResults<Object>(Collections.emptyList(),source) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongTotalInResult,  @AT@ 1919 @LENGTH@ 62
------INS ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @TO@ ExpressionStatement@@ClassInstanceCreation:new MapReduceResults<Object>(Collections.emptyList(),source) @AT@ 1919 @LENGTH@ 61
---------INS New@@new @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 1919 @LENGTH@ 3
---------INS ParameterizedType@@MapReduceResults<Object> @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 1923 @LENGTH@ 24
------------INS SimpleType@@MapReduceResults @TO@ ParameterizedType@@MapReduceResults<Object> @AT@ 1923 @LENGTH@ 16
------------INS SimpleType@@Object @TO@ ParameterizedType@@MapReduceResults<Object> @AT@ 1940 @LENGTH@ 6
---------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 1948 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1948 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 1960 @LENGTH@ 11
---------INS SimpleName@@source @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 1973 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertEquals("Should be 1 processor",1,set.size()) @TO@ MethodInvocation:assertEquals("Should be 2 processors",2,set.size()) @AT@ 2409 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals("Should be 1 processor",1,set.size()) @TO@ assertEquals("Should be 2 processors",2,set.size()) @AT@ 2409 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:["Should be 1 processor", 1, set.size()] @TO@ MethodName:assertEquals:["Should be 2 processors", 2, set.size()] @AT@ 2409 @LENGTH@ 52
---------UPD StringLiteral@@"Should be 1 processor" @TO@ "Should be 2 processors" @AT@ 2422 @LENGTH@ 23
---------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2447 @LENGTH@ 1


INS FieldDeclaration@@protected, final, DeprecationData, [deprecationData] @TO@ TypeDeclaration@@[public, abstract]OperationDefinition,  @AT@ 1810 @LENGTH@ 48
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, final, DeprecationData, [deprecationData] @AT@ 1810 @LENGTH@ 9
---INS Modifier@@final @TO@ FieldDeclaration@@protected, final, DeprecationData, [deprecationData] @AT@ 1820 @LENGTH@ 5
---INS SimpleType@@DeprecationData @TO@ FieldDeclaration@@protected, final, DeprecationData, [deprecationData] @AT@ 1826 @LENGTH@ 15
---INS VariableDeclarationFragment@@deprecationData @TO@ FieldDeclaration@@protected, final, DeprecationData, [deprecationData] @AT@ 1842 @LENGTH@ 15
------INS SimpleName@@deprecationData @TO@ VariableDeclarationFragment@@deprecationData @AT@ 1842 @LENGTH@ 15


INS MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @TO@ TypeDeclaration@@[@ContextConfiguration(value="classpath:openjpa.xml",inheritLocations=true), public]OpenJpaNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 1944 @LENGTH@ 48
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1944 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1951 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesIterableOfIdsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1956 @LENGTH@ 29


INS MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @TO@ TypeDeclaration@@[public, abstract]ModelTestModelControllerService, AbstractControllerService @AT@ 10705 @LENGTH@ 98
---MOV ExpressionStatement@@MethodInvocation:latch.countDown() @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10519 @LENGTH@ 18
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10705 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10715 @LENGTH@ 4
---INS SimpleName@@MethodName:bootThreadDone @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10720 @LENGTH@ 14
---INS ExpressionStatement@@SuperMethodInvocation:super.bootThreadDone() @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10747 @LENGTH@ 23
------INS SuperMethodInvocation@@super.bootThreadDone() @TO@ ExpressionStatement@@SuperMethodInvocation:super.bootThreadDone() @AT@ 10747 @LENGTH@ 22
---------INS SimpleName@@MethodName:bootThreadDone:[] @TO@ SuperMethodInvocation@@super.bootThreadDone() @AT@ 10753 @LENGTH@ 14


UPD VariableDeclarationStatement@@long hours=(long)((uptime - days) * 60); @TO@ long hours=(long)((uptime - days) * 24); @AT@ 2507 @LENGTH@ 43
---UPD VariableDeclarationFragment@@hours=(long)((uptime - days) * 60) @TO@ hours=(long)((uptime - days) * 24) @AT@ 2512 @LENGTH@ 37
------UPD CastExpression@@(long)((uptime - days) * 60) @TO@ (long)((uptime - days) * 24) @AT@ 2520 @LENGTH@ 29
---------UPD ParenthesizedExpression@@((uptime - days) * 60) @TO@ ((uptime - days) * 24) @AT@ 2527 @LENGTH@ 22
------------UPD InfixExpression@@(uptime - days) * 60 @TO@ (uptime - days) * 24 @AT@ 2528 @LENGTH@ 20
---------------UPD NumberLiteral@@60 @TO@ 24 @AT@ 2546 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:op.get(CONTENT).set(content) @TO@ MethodInvocation:op.get(CONTENT).get(HASH).set(content) @AT@ 53080 @LENGTH@ 29
---UPD MethodInvocation@@op.get(CONTENT).set(content) @TO@ op.get(CONTENT).get(HASH).set(content) @AT@ 53080 @LENGTH@ 28
------INS MethodInvocation@@MethodName:get:[HASH] @TO@ MethodInvocation@@op.get(CONTENT).set(content) @AT@ 53080 @LENGTH@ 25
---------INS SimpleName@@HASH @TO@ MethodInvocation@@MethodName:get:[HASH] @AT@ 53100 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @TO@ MethodInvocation:org.jboss.as.controller.services.path.RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers,listeners) @AT@ 3440 @LENGTH@ 111
---UPD MethodInvocation@@RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @TO@ org.jboss.as.controller.services.path.RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers,listeners) @AT@ 3447 @LENGTH@ 103
------INS QualifiedName@@Name:org.jboss.as.controller.services.path.RelativePathService @TO@ MethodInvocation@@RelativePathService.addService(name,path,possiblyAbsolute,relativeTo,serviceTarget,newControllers) @AT@ 3447 @LENGTH@ 57
------DEL SimpleName@@Name:RelativePathService @AT@ 3447 @LENGTH@ 19
------UPD SimpleName@@MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers] @TO@ MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers, listeners] @AT@ 3467 @LENGTH@ 83
---------INS SimpleName@@listeners @TO@ SimpleName@@MethodName:addService:[name, path, possiblyAbsolute, relativeTo, serviceTarget, newControllers] @AT@ 3589 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:template.stop() @TO@ MethodDeclaration@@public, void, MethodName:testProducerAndConsumer, Exception,  @AT@ 3230 @LENGTH@ 16
---INS MethodInvocation@@template.stop() @TO@ ExpressionStatement@@MethodInvocation:template.stop() @AT@ 3230 @LENGTH@ 15
------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.stop() @AT@ 3230 @LENGTH@ 8
------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@template.stop() @AT@ 3239 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 4128 @LENGTH@ 86
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_VERSION,new ModelNode("Unknown")) @AT@ 4128 @LENGTH@ 85
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_VERSION, new ModelNode("Unknown")] @AT@ 4128 @LENGTH@ 85
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 4194 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 4208 @LENGTH@ 3


UPD TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @TO@ try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  file.getParentFile().mkdirs();  if (!file.getParentFile().isDirectory()) {    throw new IOException("Unable to create directory " + file.getParentFile().toString());  }  File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile());  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  is.close();  os.close();  if (file.exists() && !file.delete()) {    throw new IOException("Unable to delete file: " + file.toString());  }  if (!tmp.renameTo(file)) {    throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());  }  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 3516 @LENGTH@ 1028
---DEL VariableDeclarationStatement@@File tmp=new File(file.getAbsolutePath() + ".tmp"); @AT@ 3971 @LENGTH@ 53
------DEL VariableDeclarationFragment@@tmp=new File(file.getAbsolutePath() + ".tmp") @AT@ 3976 @LENGTH@ 47
---------DEL ClassInstanceCreation@@File[file.getAbsolutePath() + ".tmp"] @AT@ 3982 @LENGTH@ 41
---INS ExpressionStatement@@MethodInvocation:file.getParentFile().mkdirs() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 3972 @LENGTH@ 30
------INS MethodInvocation@@file.getParentFile().mkdirs() @TO@ ExpressionStatement@@MethodInvocation:file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 20
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 4
---------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3993 @LENGTH@ 8
---INS IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4019 @LENGTH@ 168
------INS PrefixExpression@@!file.getParentFile().isDirectory() @TO@ IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4023 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!file.getParentFile().isDirectory() @AT@ 4023 @LENGTH@ 1
---------INS MethodInvocation@@file.getParentFile().isDirectory() @TO@ PrefixExpression@@!file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 4
------------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4045 @LENGTH@ 13
------INS Block@@ThenBody:{  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @TO@ IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4060 @LENGTH@ 127
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to create directory " + file.getParentFile().toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4082 @LENGTH@ 87
------------INS ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to create directory " + file.getParentFile().toString()) @AT@ 4088 @LENGTH@ 80
---------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4088 @LENGTH@ 3
---------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4092 @LENGTH@ 11
---------------INS InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4104 @LENGTH@ 63
------------------INS StringLiteral@@"Unable to create directory " @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4104 @LENGTH@ 29
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4133 @LENGTH@ 1
------------------INS MethodInvocation@@file.getParentFile().toString() @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4136 @LENGTH@ 31
---------------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4136 @LENGTH@ 20
---------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4136 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4157 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:tmp.getParentFile().mkdirs() @AT@ 4041 @LENGTH@ 29
------DEL MethodInvocation@@tmp.getParentFile().mkdirs() @AT@ 4041 @LENGTH@ 28
---------DEL MethodInvocation@@MethodName:getParentFile:[] @AT@ 4041 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:file.delete() @AT@ 4178 @LENGTH@ 14
------DEL MethodInvocation@@file.delete() @AT@ 4178 @LENGTH@ 13
---INS VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4204 @LENGTH@ 76
------MOV SimpleType@@File @TO@ VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @AT@ 3971 @LENGTH@ 4
------INS VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @TO@ VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @AT@ 4209 @LENGTH@ 70
---------MOV SimpleName@@tmp @TO@ VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 3976 @LENGTH@ 3
---------INS MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @TO@ VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4215 @LENGTH@ 64
------------INS SimpleName@@Name:File @TO@ MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4215 @LENGTH@ 4
------------INS SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @TO@ MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4220 @LENGTH@ 59
---------------INS StringLiteral@@"fabric-agent-" @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4235 @LENGTH@ 15
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4252 @LENGTH@ 4
---------------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4258 @LENGTH@ 20
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 4258 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 4263 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:tmp.renameTo(file) @AT@ 4209 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:is.close() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4388 @LENGTH@ 11
------INS MethodInvocation@@is.close() @TO@ ExpressionStatement@@MethodInvocation:is.close() @AT@ 4388 @LENGTH@ 10
---------INS SimpleName@@Name:is @TO@ MethodInvocation@@is.close() @AT@ 4388 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@is.close() @AT@ 4391 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:os.close() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4416 @LENGTH@ 11
------INS MethodInvocation@@os.close() @TO@ ExpressionStatement@@MethodInvocation:os.close() @AT@ 4416 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.close() @AT@ 4416 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@os.close() @AT@ 4419 @LENGTH@ 7
---INS IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4444 @LENGTH@ 144
------INS InfixExpression@@file.exists() && !file.delete() @TO@ IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4448 @LENGTH@ 31
---------INS MethodInvocation@@file.exists() @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4448 @LENGTH@ 13
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 4448 @LENGTH@ 4
------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 4453 @LENGTH@ 8
---------INS Operator@@&& @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4461 @LENGTH@ 2
---------INS PrefixExpression@@!file.delete() @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4465 @LENGTH@ 14
------------INS Operator@@! @TO@ PrefixExpression@@!file.delete() @AT@ 4465 @LENGTH@ 1
------------INS MethodInvocation@@file.delete() @TO@ PrefixExpression@@!file.delete() @AT@ 4466 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.delete() @AT@ 4466 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.delete() @AT@ 4471 @LENGTH@ 8
------INS Block@@ThenBody:{  throw new IOException("Unable to delete file: " + file.toString());} @TO@ IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4481 @LENGTH@ 107
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to delete file: " + file.toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4503 @LENGTH@ 67
------------INS ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to delete file: " + file.toString()) @AT@ 4509 @LENGTH@ 60
---------------MOV New@@new @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3982 @LENGTH@ 3
---------------MOV SimpleType@@File @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3986 @LENGTH@ 4
---------------MOV InfixExpression@@file.getAbsolutePath() + ".tmp" @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3991 @LENGTH@ 31
------------------UPD MethodInvocation@@file.getAbsolutePath() @TO@ file.toString() @AT@ 3991 @LENGTH@ 22
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:toString:[] @AT@ 3996 @LENGTH@ 17
------------------DEL Operator@@+ @AT@ 4013 @LENGTH@ 1
------------------DEL StringLiteral@@".tmp" @AT@ 4016 @LENGTH@ 6
------------------INS StringLiteral@@"Unable to delete file: " @TO@ InfixExpression@@file.getAbsolutePath() + ".tmp" @AT@ 4525 @LENGTH@ 25
------------------INS Operator@@+ @TO@ InfixExpression@@file.getAbsolutePath() + ".tmp" @AT@ 4550 @LENGTH@ 1
---INS IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4605 @LENGTH@ 157
------INS PrefixExpression@@!tmp.renameTo(file) @TO@ IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4609 @LENGTH@ 19
---------MOV MethodInvocation@@tmp.renameTo(file) @TO@ PrefixExpression@@!tmp.renameTo(file) @AT@ 4209 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!tmp.renameTo(file) @AT@ 4609 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @TO@ IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4630 @LENGTH@ 132
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4652 @LENGTH@ 92
------------INS ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString()) @AT@ 4658 @LENGTH@ 85
---------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4658 @LENGTH@ 3
---------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4662 @LENGTH@ 11
---------------INS InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4674 @LENGTH@ 68
------------------INS StringLiteral@@"Unable to rename file " @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4674 @LENGTH@ 24
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4698 @LENGTH@ 1
------------------INS MethodInvocation@@tmp.toString() @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4701 @LENGTH@ 14
---------------------MOV SimpleName@@Name:tmp @TO@ MethodInvocation@@tmp.toString() @AT@ 4041 @LENGTH@ 3
---------------------MOV SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@tmp.toString() @AT@ 4061 @LENGTH@ 8
------------------INS StringLiteral@@" to " @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4718 @LENGTH@ 6
------------------INS MethodInvocation@@file.toString() @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4727 @LENGTH@ 15
---------------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.toString() @AT@ 4178 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.toString() @AT@ 4183 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue("Batch did not fail.",line.contains("Failed to execute batch")) @TO@ MethodInvocation:assertTrue("Batch did not fail.",line.contains("Composite operation failed and was rolled back")) @AT@ 6654 @LENGTH@ 76
---UPD MethodInvocation@@assertTrue("Batch did not fail.",line.contains("Failed to execute batch")) @TO@ assertTrue("Batch did not fail.",line.contains("Composite operation failed and was rolled back")) @AT@ 6654 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertTrue:["Batch did not fail.", line.contains("Failed to execute batch")] @TO@ MethodName:assertTrue:["Batch did not fail.", line.contains("Composite operation failed and was rolled back")] @AT@ 6654 @LENGTH@ 75
---------UPD MethodInvocation@@line.contains("Failed to execute batch") @TO@ line.contains("Composite operation failed and was rolled back") @AT@ 6688 @LENGTH@ 40
------------UPD SimpleName@@MethodName:contains:["Failed to execute batch"] @TO@ MethodName:contains:["Composite operation failed and was rolled back"] @AT@ 6693 @LENGTH@ 35
---------------UPD StringLiteral@@"Failed to execute batch" @TO@ "Composite operation failed and was rolled back" @AT@ 6702 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:factory.setBus(BusFactory.newInstance().createBus()) @TO@ MethodDeclaration@@public, void, MethodName:testInvokeProxyService,  @AT@ 2659 @LENGTH@ 53
---INS MethodInvocation@@factory.setBus(BusFactory.newInstance().createBus()) @TO@ ExpressionStatement@@MethodInvocation:factory.setBus(BusFactory.newInstance().createBus()) @AT@ 2659 @LENGTH@ 52
------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setBus(BusFactory.newInstance().createBus()) @AT@ 2659 @LENGTH@ 7
------INS SimpleName@@MethodName:setBus:[BusFactory.newInstance().createBus()] @TO@ MethodInvocation@@factory.setBus(BusFactory.newInstance().createBus()) @AT@ 2667 @LENGTH@ 44
---------INS MethodInvocation@@BusFactory.newInstance().createBus() @TO@ SimpleName@@MethodName:setBus:[BusFactory.newInstance().createBus()] @AT@ 2674 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:newInstance:[] @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 2674 @LENGTH@ 24
------------INS SimpleName@@Name:BusFactory @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 2674 @LENGTH@ 10
------------INS SimpleName@@MethodName:createBus:[] @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 2699 @LENGTH@ 11


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[private]FirstException, Exception @AT@ 1168 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1168 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1176 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1183 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1189 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1194 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1194 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1213 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:clientBean.setBus(BusFactory.getDefaultBus()) @TO@ MethodInvocation:clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 5409 @LENGTH@ 46
---UPD MethodInvocation@@clientBean.setBus(BusFactory.getDefaultBus()) @TO@ clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 5409 @LENGTH@ 45
------UPD SimpleName@@MethodName:setBus:[BusFactory.getDefaultBus()] @TO@ MethodName:setBus:[BusFactory.newInstance().createBus()] @AT@ 5420 @LENGTH@ 34
---------UPD MethodInvocation@@BusFactory.getDefaultBus() @TO@ BusFactory.newInstance().createBus() @AT@ 5427 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:newInstance:[] @TO@ MethodInvocation@@BusFactory.getDefaultBus() @AT@ 5427 @LENGTH@ 24
------------UPD SimpleName@@MethodName:getDefaultBus:[] @TO@ MethodName:createBus:[] @AT@ 5438 @LENGTH@ 15


UPD TypeDeclaration@@[public]RoutesXml,  @TO@ [public, final]RoutesXml,  @AT@ 1264 @LENGTH@ 1752
---INS Modifier@@final @TO@ TypeDeclaration@@[public]RoutesXml,  @AT@ 1273 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:clearAllProperties,  @TO@ TypeDeclaration@@[public, abstract]AbstractSystemPropertyTest, AbstractCoreModelTest @AT@ 2387 @LENGTH@ 203
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2387 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2394 @LENGTH@ 4
---INS SimpleName@@MethodName:clearAllProperties @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2399 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_ONE) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2430 @LENGTH@ 31
------INS MethodInvocation@@System.clearProperty(PROP_ONE) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_ONE) @AT@ 2430 @LENGTH@ 30
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_ONE) @AT@ 2430 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_ONE] @TO@ MethodInvocation@@System.clearProperty(PROP_ONE) @AT@ 2437 @LENGTH@ 23
------------INS SimpleName@@PROP_ONE @TO@ SimpleName@@MethodName:clearProperty:[PROP_ONE] @AT@ 2451 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_TWO) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2470 @LENGTH@ 31
------INS MethodInvocation@@System.clearProperty(PROP_TWO) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_TWO) @AT@ 2470 @LENGTH@ 30
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_TWO) @AT@ 2470 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_TWO] @TO@ MethodInvocation@@System.clearProperty(PROP_TWO) @AT@ 2477 @LENGTH@ 23
------------INS SimpleName@@PROP_TWO @TO@ SimpleName@@MethodName:clearProperty:[PROP_TWO] @AT@ 2491 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_THREE) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2510 @LENGTH@ 33
------INS MethodInvocation@@System.clearProperty(PROP_THREE) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_THREE) @AT@ 2510 @LENGTH@ 32
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_THREE) @AT@ 2510 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_THREE] @TO@ MethodInvocation@@System.clearProperty(PROP_THREE) @AT@ 2517 @LENGTH@ 25
------------INS SimpleName@@PROP_THREE @TO@ SimpleName@@MethodName:clearProperty:[PROP_THREE] @AT@ 2531 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_FOUR) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2552 @LENGTH@ 32
------INS MethodInvocation@@System.clearProperty(PROP_FOUR) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_FOUR) @AT@ 2552 @LENGTH@ 31
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_FOUR) @AT@ 2552 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_FOUR] @TO@ MethodInvocation@@System.clearProperty(PROP_FOUR) @AT@ 2559 @LENGTH@ 24
------------INS SimpleName@@PROP_FOUR @TO@ SimpleName@@MethodName:clearProperty:[PROP_FOUR] @AT@ 2573 @LENGTH@ 9


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup)) {  return;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup,propertyReplacer)) {  return;} @AT@ 4126 @LENGTH@ 273
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,(EnvironmentRefsGroupMetaData)jndiEnvRefGroup,propertyReplacer) @AT@ 4130 @LENGTH@ 96
------UPD SimpleName@@MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup] @TO@ MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup, propertyReplacer] @AT@ 4165 @LENGTH@ 61
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, (EnvironmentRefsGroupMetaData)jndiEnvRefGroup] @AT@ 4173 @LENGTH@ 16


UPD FieldDeclaration@@SimpleAttributeDefinition, [SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build()] @TO@ SimpleAttributeDefinition, [SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build()] @AT@ 2454 @LENGTH@ 260
---UPD VariableDeclarationFragment@@SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build() @TO@ SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build() @AT@ 2480 @LENGTH@ 233
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build() @TO@ SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build() @AT@ 2499 @LENGTH@ 214
---------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @AT@ 2499 @LENGTH@ 144
------------DEL ClassInstanceCreation@@ModelNode[false] @AT@ 2622 @LENGTH@ 20
---------------DEL New@@new @AT@ 2622 @LENGTH@ 3
---------------DEL SimpleType@@ModelNode @AT@ 2626 @LENGTH@ 9
---------------DEL BooleanLiteral@@false @AT@ 2636 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(repository.findAll(spec).size(),is(2)) @TO@ MethodInvocation:assertThat(repository.findAll(spec),hasSize(2)) @AT@ 12030 @LENGTH@ 51
---UPD MethodInvocation@@assertThat(repository.findAll(spec).size(),is(2)) @TO@ assertThat(repository.findAll(spec),hasSize(2)) @AT@ 12030 @LENGTH@ 50
------UPD SimpleName@@MethodName:assertThat:[repository.findAll(spec).size(), is(2)] @TO@ MethodName:assertThat:[repository.findAll(spec), hasSize(2)] @AT@ 12030 @LENGTH@ 50
---------UPD MethodInvocation@@repository.findAll(spec).size() @TO@ repository.findAll(spec) @AT@ 12041 @LENGTH@ 31
------------DEL MethodInvocation@@MethodName:findAll:[spec] @AT@ 12041 @LENGTH@ 24
---------------DEL SimpleName@@spec @AT@ 12060 @LENGTH@ 4
------------INS SimpleName@@MethodName:findAll:[spec] @TO@ MethodInvocation@@repository.findAll(spec).size() @AT@ 12052 @LENGTH@ 13
---------------INS SimpleName@@spec @TO@ SimpleName@@MethodName:findAll:[spec] @AT@ 12060 @LENGTH@ 4
------------DEL SimpleName@@MethodName:size:[] @AT@ 12066 @LENGTH@ 6
---------UPD MethodInvocation@@is(2) @TO@ hasSize(2) @AT@ 12074 @LENGTH@ 5
------------UPD SimpleName@@MethodName:is:[2] @TO@ MethodName:hasSize:[2] @AT@ 12074 @LENGTH@ 5
------------UPD SimpleName@@MethodName:is:[2] @TO@ MethodName:hasSize:[2] @AT@ 12074 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]QueryMapperUnitTests,  @AT@ 10224 @LENGTH@ 463
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10224 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10231 @LENGTH@ 4
---INS SimpleName@@MethodName:convertsInKeywordCorrectly @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10236 @LENGTH@ 26
---INS VariableDeclarationStatement@@Reference first=new Reference(); @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10270 @LENGTH@ 34
------INS SimpleType@@Reference @TO@ VariableDeclarationStatement@@Reference first=new Reference(); @AT@ 10270 @LENGTH@ 9
------INS VariableDeclarationFragment@@first=new Reference() @TO@ VariableDeclarationStatement@@Reference first=new Reference(); @AT@ 10280 @LENGTH@ 23
---------INS SimpleName@@first @TO@ VariableDeclarationFragment@@first=new Reference() @AT@ 10280 @LENGTH@ 5
---------INS ClassInstanceCreation@@Reference[] @TO@ VariableDeclarationFragment@@first=new Reference() @AT@ 10288 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@Reference[] @AT@ 10288 @LENGTH@ 3
------------INS SimpleType@@Reference @TO@ ClassInstanceCreation@@Reference[] @AT@ 10292 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:first.id=5L @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10307 @LENGTH@ 14
------INS Assignment@@first.id=5L @TO@ ExpressionStatement@@Assignment:first.id=5L @AT@ 10307 @LENGTH@ 13
---------INS QualifiedName@@first.id @TO@ Assignment@@first.id=5L @AT@ 10307 @LENGTH@ 8
------------INS SimpleName@@first @TO@ QualifiedName@@first.id @AT@ 10307 @LENGTH@ 5
------------INS SimpleName@@id @TO@ QualifiedName@@first.id @AT@ 10313 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@first.id=5L @AT@ 10315 @LENGTH@ 1
---------INS NumberLiteral@@5L @TO@ Assignment@@first.id=5L @AT@ 10318 @LENGTH@ 2
---INS VariableDeclarationStatement@@Reference second=new Reference(); @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10325 @LENGTH@ 35
------INS SimpleType@@Reference @TO@ VariableDeclarationStatement@@Reference second=new Reference(); @AT@ 10325 @LENGTH@ 9
------INS VariableDeclarationFragment@@second=new Reference() @TO@ VariableDeclarationStatement@@Reference second=new Reference(); @AT@ 10335 @LENGTH@ 24
---------INS SimpleName@@second @TO@ VariableDeclarationFragment@@second=new Reference() @AT@ 10335 @LENGTH@ 6
---------INS ClassInstanceCreation@@Reference[] @TO@ VariableDeclarationFragment@@second=new Reference() @AT@ 10344 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@Reference[] @AT@ 10344 @LENGTH@ 3
------------INS SimpleType@@Reference @TO@ ClassInstanceCreation@@Reference[] @AT@ 10348 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:second.id=6L @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10363 @LENGTH@ 15
------INS Assignment@@second.id=6L @TO@ ExpressionStatement@@Assignment:second.id=6L @AT@ 10363 @LENGTH@ 14
---------INS QualifiedName@@second.id @TO@ Assignment@@second.id=6L @AT@ 10363 @LENGTH@ 9
------------INS SimpleName@@second @TO@ QualifiedName@@second.id @AT@ 10363 @LENGTH@ 6
------------INS SimpleName@@id @TO@ QualifiedName@@second.id @AT@ 10370 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@second.id=6L @AT@ 10372 @LENGTH@ 1
---------INS NumberLiteral@@6L @TO@ Assignment@@second.id=6L @AT@ 10375 @LENGTH@ 2
---INS VariableDeclarationStatement@@Query query=query(where("reference").in(first,second)); @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10382 @LENGTH@ 58
------INS SimpleType@@Query @TO@ VariableDeclarationStatement@@Query query=query(where("reference").in(first,second)); @AT@ 10382 @LENGTH@ 5
------INS VariableDeclarationFragment@@query=query(where("reference").in(first,second)) @TO@ VariableDeclarationStatement@@Query query=query(where("reference").in(first,second)); @AT@ 10388 @LENGTH@ 51
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query=query(where("reference").in(first,second)) @AT@ 10388 @LENGTH@ 5
---------INS MethodInvocation@@query(where("reference").in(first,second)) @TO@ VariableDeclarationFragment@@query=query(where("reference").in(first,second)) @AT@ 10396 @LENGTH@ 43
------------INS SimpleName@@MethodName:query:[where("reference").in(first,second)] @TO@ MethodInvocation@@query(where("reference").in(first,second)) @AT@ 10396 @LENGTH@ 43
---------------INS MethodInvocation@@where("reference").in(first,second) @TO@ SimpleName@@MethodName:query:[where("reference").in(first,second)] @AT@ 10402 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:where:["reference"] @TO@ MethodInvocation@@where("reference").in(first,second) @AT@ 10402 @LENGTH@ 18
---------------------INS StringLiteral@@"reference" @TO@ MethodInvocation@@MethodName:where:["reference"] @AT@ 10408 @LENGTH@ 11
------------------INS SimpleName@@MethodName:in:[first, second] @TO@ MethodInvocation@@where("reference").in(first,second) @AT@ 10421 @LENGTH@ 17
---------------------INS SimpleName@@first @TO@ SimpleName@@MethodName:in:[first, second] @AT@ 10424 @LENGTH@ 5
---------------------INS SimpleName@@second @TO@ SimpleName@@MethodName:in:[first, second] @AT@ 10431 @LENGTH@ 6
---INS VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)); @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10443 @LENGTH@ 111
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)); @AT@ 10443 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @TO@ VariableDeclarationStatement@@DBObject result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)); @AT@ 10452 @LENGTH@ 101
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @AT@ 10452 @LENGTH@ 6
---------INS MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @TO@ VariableDeclarationFragment@@result=mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @AT@ 10461 @LENGTH@ 92
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @AT@ 10461 @LENGTH@ 6
------------INS SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(WithDBRef.class)] @TO@ MethodInvocation@@mapper.getMappedObject(query.getQueryObject(),context.getPersistentEntity(WithDBRef.class)) @AT@ 10468 @LENGTH@ 85
---------------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(WithDBRef.class)] @AT@ 10484 @LENGTH@ 22
------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 10484 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 10490 @LENGTH@ 16
---------------INS MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @TO@ SimpleName@@MethodName:getMappedObject:[query.getQueryObject(), context.getPersistentEntity(WithDBRef.class)] @AT@ 10508 @LENGTH@ 44
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @AT@ 10508 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getPersistentEntity:[WithDBRef.class] @TO@ MethodInvocation@@context.getPersistentEntity(WithDBRef.class) @AT@ 10516 @LENGTH@ 36
---------------------INS TypeLiteral@@WithDBRef.class @TO@ SimpleName@@MethodName:getPersistentEntity:[WithDBRef.class] @AT@ 10536 @LENGTH@ 15
---INS VariableDeclarationStatement@@DBObject reference=DBObjectUtils.getAsDBObject(result,"reference"); @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10558 @LENGTH@ 70
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject reference=DBObjectUtils.getAsDBObject(result,"reference"); @AT@ 10558 @LENGTH@ 8
------INS VariableDeclarationFragment@@reference=DBObjectUtils.getAsDBObject(result,"reference") @TO@ VariableDeclarationStatement@@DBObject reference=DBObjectUtils.getAsDBObject(result,"reference"); @AT@ 10567 @LENGTH@ 60
---------INS SimpleName@@reference @TO@ VariableDeclarationFragment@@reference=DBObjectUtils.getAsDBObject(result,"reference") @AT@ 10567 @LENGTH@ 9
---------INS MethodInvocation@@DBObjectUtils.getAsDBObject(result,"reference") @TO@ VariableDeclarationFragment@@reference=DBObjectUtils.getAsDBObject(result,"reference") @AT@ 10579 @LENGTH@ 48
------------INS SimpleName@@Name:DBObjectUtils @TO@ MethodInvocation@@DBObjectUtils.getAsDBObject(result,"reference") @AT@ 10579 @LENGTH@ 13
------------INS SimpleName@@MethodName:getAsDBObject:[result, "reference"] @TO@ MethodInvocation@@DBObjectUtils.getAsDBObject(result,"reference") @AT@ 10593 @LENGTH@ 34
---------------INS SimpleName@@result @TO@ SimpleName@@MethodName:getAsDBObject:[result, "reference"] @AT@ 10607 @LENGTH@ 6
---------------INS StringLiteral@@"reference" @TO@ SimpleName@@MethodName:getAsDBObject:[result, "reference"] @AT@ 10615 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(reference.containsField("$in"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:convertsInKeywordCorrectly,  @AT@ 10631 @LENGTH@ 53
------INS MethodInvocation@@assertThat(reference.containsField("$in"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(reference.containsField("$in"),is(true)) @AT@ 10631 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[reference.containsField("$in"), is(true)] @TO@ MethodInvocation@@assertThat(reference.containsField("$in"),is(true)) @AT@ 10631 @LENGTH@ 52
------------INS MethodInvocation@@reference.containsField("$in") @TO@ SimpleName@@MethodName:assertThat:[reference.containsField("$in"), is(true)] @AT@ 10642 @LENGTH@ 30
---------------INS SimpleName@@Name:reference @TO@ MethodInvocation@@reference.containsField("$in") @AT@ 10642 @LENGTH@ 9
---------------INS SimpleName@@MethodName:containsField:["$in"] @TO@ MethodInvocation@@reference.containsField("$in") @AT@ 10652 @LENGTH@ 20
------------------INS StringLiteral@@"$in" @TO@ SimpleName@@MethodName:containsField:["$in"] @AT@ 10666 @LENGTH@ 5
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[reference.containsField("$in"), is(true)] @AT@ 10674 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 10674 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 10677 @LENGTH@ 4


UPD EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @TO@ for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION);  if (op == null) {    op=operation;  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 3749 @LENGTH@ 617
---UPD VariableDeclarationStatement@@final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController); @TO@ final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController); @AT@ 4032 @LENGTH@ 118
------UPD VariableDeclarationFragment@@task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController) @TO@ task=new HostControllerUpdateTask(host,op.clone(),context,proxyController) @AT@ 4063 @LENGTH@ 86
---------UPD ClassInstanceCreation@@HostControllerUpdateTask[host, operation.clone(), context, proxyController] @TO@ HostControllerUpdateTask[host, op.clone(), context, proxyController] @AT@ 4070 @LENGTH@ 79
------------UPD MethodInvocation@@operation.clone() @TO@ op.clone() @AT@ 4105 @LENGTH@ 17
---------------UPD SimpleName@@Name:operation @TO@ Name:op @AT@ 4105 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4058 @LENGTH@ 82
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @AT@ 4058 @LENGTH@ 9
------INS VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @AT@ 4068 @LENGTH@ 71
---------INS SimpleName@@op @TO@ VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4068 @LENGTH@ 2
---------INS MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4073 @LENGTH@ 66
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4073 @LENGTH@ 7
------------INS SimpleName@@MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION] @TO@ MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @AT@ 4081 @LENGTH@ 58
---------------INS QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @TO@ SimpleName@@MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION] @AT@ 4095 @LENGTH@ 43
------------------INS SimpleName@@OperationAttachments @TO@ QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @AT@ 4095 @LENGTH@ 20
------------------INS SimpleName@@SLAVE_SERVER_OPERATION @TO@ QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @AT@ 4116 @LENGTH@ 22
---INS IfStatement@@if (op == null) {  op=operation;} @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,operation.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4153 @LENGTH@ 62
------INS InfixExpression@@op == null @TO@ IfStatement@@if (op == null) {  op=operation;} @AT@ 4156 @LENGTH@ 10
---------INS SimpleName@@op @TO@ InfixExpression@@op == null @AT@ 4156 @LENGTH@ 2
---------INS Operator@@== @TO@ InfixExpression@@op == null @AT@ 4158 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@op == null @AT@ 4162 @LENGTH@ 4
------INS Block@@ThenBody:{  op=operation;} @TO@ IfStatement@@if (op == null) {  op=operation;} @AT@ 4168 @LENGTH@ 47
---------INS ExpressionStatement@@Assignment:op=operation @TO@ Block@@ThenBody:{  op=operation;} @AT@ 4186 @LENGTH@ 15
------------INS Assignment@@op=operation @TO@ ExpressionStatement@@Assignment:op=operation @AT@ 4186 @LENGTH@ 14
---------------INS SimpleName@@op @TO@ Assignment@@op=operation @AT@ 4186 @LENGTH@ 2
---------------INS Operator@@= @TO@ Assignment@@op=operation @AT@ 4188 @LENGTH@ 1
---------------INS SimpleName@@operation @TO@ Assignment@@op=operation @AT@ 4191 @LENGTH@ 9


UPD TryStatement@@try {  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @TO@ try {  if (transformedOperation != null) {    transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));    if (operation != transformedOperation) {      transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    }  }  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 5135 @LENGTH@ 607
---INS IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @TO@ TryStatement@@try {  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 5463 @LENGTH@ 519
------INS InfixExpression@@transformedOperation != null @TO@ IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5466 @LENGTH@ 28
---------INS SimpleName@@transformedOperation @TO@ InfixExpression@@transformedOperation != null @AT@ 5466 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@transformedOperation != null @AT@ 5486 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@transformedOperation != null @AT@ 5490 @LENGTH@ 4
------INS Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @TO@ IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5496 @LENGTH@ 486
---------INS ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5518 @LENGTH@ 82
------------INS MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @TO@ ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 81
---------------INS MethodInvocation@@MethodName:get:[OPERATION_HEADERS] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 43
------------------INS SimpleName@@OPERATION_HEADERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS] @AT@ 5543 @LENGTH@ 17
---------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 20
---------------INS SimpleName@@MethodName:set:[operation.get(OPERATION_HEADERS)] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5562 @LENGTH@ 37
------------------INS MethodInvocation@@operation.get(OPERATION_HEADERS) @TO@ SimpleName@@MethodName:set:[operation.get(OPERATION_HEADERS)] @AT@ 5566 @LENGTH@ 32
---------------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(OPERATION_HEADERS) @AT@ 5566 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[OPERATION_HEADERS] @TO@ MethodInvocation@@operation.get(OPERATION_HEADERS) @AT@ 5576 @LENGTH@ 22
------------------------INS SimpleName@@OPERATION_HEADERS @TO@ SimpleName@@MethodName:get:[OPERATION_HEADERS] @AT@ 5580 @LENGTH@ 17
---------INS IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5688 @LENGTH@ 276
------------INS InfixExpression@@operation != transformedOperation @TO@ IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5691 @LENGTH@ 33
---------------INS SimpleName@@operation @TO@ InfixExpression@@operation != transformedOperation @AT@ 5691 @LENGTH@ 9
---------------INS Operator@@!= @TO@ InfixExpression@@operation != transformedOperation @AT@ 5700 @LENGTH@ 2
---------------INS SimpleName@@transformedOperation @TO@ InfixExpression@@operation != transformedOperation @AT@ 5704 @LENGTH@ 20
------------INS Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @TO@ IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5726 @LENGTH@ 238
---------------INS ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5832 @LENGTH@ 110
------------------INS MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @TO@ ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 109
---------------------INS MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 99
------------------------INS SimpleName@@OPERATION_HEADERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @AT@ 5857 @LENGTH@ 17
------------------------INS QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @AT@ 5876 @LENGTH@ 54
---------------------------INS SimpleName@@ServerOperationsResolverHandler @TO@ QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @AT@ 5876 @LENGTH@ 31
---------------------------INS SimpleName@@DOMAIN_PUSH_TO_SERVERS @TO@ QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @AT@ 5908 @LENGTH@ 22
---------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5932 @LENGTH@ 9
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 5936 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 6989 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 6989 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 6997 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 7064 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 7064 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 7064 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 7081 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 7097 @LENGTH@ 21


UPD VariableDeclarationStatement@@final ServiceName serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(name); @TO@ final ServiceName serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name); @AT@ 1968 @LENGTH@ 87
---UPD VariableDeclarationFragment@@serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(name) @TO@ serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name) @AT@ 1986 @LENGTH@ 68
------UPD MethodInvocation@@DeploymentOverlayLinkService.SERVICE_NAME.append(name) @TO@ DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name) @AT@ 2000 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:append:[deploymentOverlay] @TO@ MethodInvocation@@DeploymentOverlayLinkService.SERVICE_NAME.append(name) @AT@ 2091 @LENGTH@ 67
------------INS SimpleName@@deploymentOverlay @TO@ MethodInvocation@@MethodName:append:[deploymentOverlay] @AT@ 2140 @LENGTH@ 17


DEL IfStatement@@if (localSlaveHandler.isResourceExcluded(address)) {  System.out.println("should be ignoring this stuff! " + operation);} @AT@ 8010 @LENGTH@ 140
---DEL MethodInvocation@@localSlaveHandler.isResourceExcluded(address) @AT@ 8013 @LENGTH@ 45
------DEL SimpleName@@Name:localSlaveHandler @AT@ 8013 @LENGTH@ 17
------DEL SimpleName@@MethodName:isResourceExcluded:[address] @AT@ 8031 @LENGTH@ 27
---------DEL SimpleName@@address @AT@ 8050 @LENGTH@ 7
---DEL Block@@ThenBody:{  System.out.println("should be ignoring this stuff! " + operation);} @AT@ 8060 @LENGTH@ 90
------DEL ExpressionStatement@@MethodInvocation:System.out.println("should be ignoring this stuff! " + operation) @AT@ 8074 @LENGTH@ 66
---------DEL MethodInvocation@@System.out.println("should be ignoring this stuff! " + operation) @AT@ 8074 @LENGTH@ 65
------------DEL QualifiedName@@Name:System.out @AT@ 8074 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:["should be ignoring this stuff! " + operation] @AT@ 8085 @LENGTH@ 54
---------------DEL InfixExpression@@"should be ignoring this stuff! " + operation @AT@ 8093 @LENGTH@ 45
------------------DEL StringLiteral@@"should be ignoring this stuff! " @AT@ 8093 @LENGTH@ 33
------------------DEL Operator@@+ @AT@ 8126 @LENGTH@ 1
------------------DEL SimpleName@@operation @AT@ 8129 @LENGTH@ 9


UPD EnhancedForStatement@@for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {    result.get(id).set(stepResult);  } else {    final OperationResultTransformer transformer=step.getResult();    result.get(id).set(transformer.transformResult(stepResult));  }} @AT@ 3837 @LENGTH@ 338
---INS IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ EnhancedForStatement@@for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4062 @LENGTH@ 317
------INS MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4065 @LENGTH@ 50
---------INS SimpleName@@Name:IGNORED @TO@ MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @AT@ 4065 @LENGTH@ 7
---------INS SimpleName@@MethodName:equals:[stepResult.get(OUTCOME).asString()] @TO@ MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @AT@ 4073 @LENGTH@ 42
------------INS MethodInvocation@@stepResult.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:equals:[stepResult.get(OUTCOME).asString()] @AT@ 4080 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4080 @LENGTH@ 23
------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 4095 @LENGTH@ 7
---------------INS SimpleName@@Name:stepResult @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4080 @LENGTH@ 10
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4104 @LENGTH@ 10
------INS Block@@ThenBody:{  result.get(id).set(stepResult);} @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4117 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:result.get(id).set(stepResult) @TO@ Block@@ThenBody:{  result.get(id).set(stepResult);} @AT@ 4139 @LENGTH@ 31
------------INS MethodInvocation@@result.get(id).set(stepResult) @TO@ ExpressionStatement@@MethodInvocation:result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:get:[id] @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 14
------------------INS SimpleName@@id @TO@ MethodInvocation@@MethodName:get:[id] @AT@ 4150 @LENGTH@ 2
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 6
---------------INS SimpleName@@MethodName:set:[stepResult] @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4154 @LENGTH@ 15
------------------INS SimpleName@@stepResult @TO@ SimpleName@@MethodName:set:[stepResult] @AT@ 4158 @LENGTH@ 10
------INS Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4194 @LENGTH@ 185
---------MOV VariableDeclarationStatement@@final OperationResultTransformer transformer=step.getResult(); @TO@ Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4020 @LENGTH@ 64
---------MOV ExpressionStatement@@MethodInvocation:result.get(id).set(transformer.transformResult(stepResult)) @TO@ Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4101 @LENGTH@ 60


UPD MethodDeclaration@@private, BeanAdapter, MethodName:createBeanAdapter, Class beanClass, ContextName contextName,  @TO@ private, BeanAdapter, MethodName:createBeanAdapter, Class<?> beanClass, ContextName contextName,  @AT@ 10992 @LENGTH@ 1651
---UPD SingleVariableDeclaration@@Class beanClass @TO@ Class<?> beanClass @AT@ 11030 @LENGTH@ 15
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class beanClass @AT@ 11027 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 11027 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 11033 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 11030 @LENGTH@ 5


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpProducerFileWithPathNoStepwiseTest, SftpServerTestSupport @TO@ [public]SftpProducerFileWithPathNoStepwiseTest, SftpServerTestSupport @AT@ 1031 @LENGTH@ 896
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1031 @LENGTH@ 79


UPD ReturnStatement@@MethodInvocation:criteria.andOperator(criteria) @TO@ MethodInvocation:from(part.getType(),property,base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @AT@ 4718 @LENGTH@ 38
---MOV MethodInvocation@@from(part.getType(),property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @TO@ ReturnStatement@@MethodInvocation:criteria.andOperator(criteria) @AT@ 4547 @LENGTH@ 166
------UPD SimpleName@@MethodName:from:[part.getType(), property, where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)), (PotentiallyConvertingIterator)iterator] @TO@ MethodName:from:[part.getType(), property, base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)), (PotentiallyConvertingIterator)iterator] @AT@ 4547 @LENGTH@ 166
---------UPD MethodInvocation@@where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @TO@ base.and(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @AT@ 4582 @LENGTH@ 84
------------INS SimpleName@@Name:base @TO@ MethodInvocation@@where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @AT@ 4569 @LENGTH@ 4
------------INS SimpleName@@Name:base @TO@ MethodInvocation@@where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @AT@ 4569 @LENGTH@ 4
------------INS SimpleName@@Name:base @TO@ MethodInvocation@@where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)) @AT@ 4569 @LENGTH@ 4
------------UPD SimpleName@@MethodName:where:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:and:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @AT@ 4582 @LENGTH@ 84
------------UPD SimpleName@@MethodName:where:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:and:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @AT@ 4582 @LENGTH@ 84
------------UPD SimpleName@@MethodName:where:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @TO@ MethodName:and:[path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)] @AT@ 4582 @LENGTH@ 84
---DEL MethodInvocation@@criteria.andOperator(criteria) @AT@ 4725 @LENGTH@ 30
------DEL SimpleName@@Name:criteria @AT@ 4725 @LENGTH@ 8
------DEL SimpleName@@MethodName:andOperator:[criteria] @AT@ 4734 @LENGTH@ 21
---------DEL SimpleName@@criteria @AT@ 4746 @LENGTH@ 8


UPD SuperConstructorInvocation@@super(PathElement.pathElement(ModelDescriptionConstants.JVM),new StandardResourceDescriptionResolver("jvm",HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions",HostDescriptionProviders.class.getClassLoader(),true,false),new JVMAddHandler(JvmAttributes.getAttributes(server)),JVMRemoveHandler.INSTANCE);
 @TO@ super(PathElement.pathElement(ModelDescriptionConstants.JVM),new StandardResourceDescriptionResolver("jvm",HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostEnvironmentResourceDescription.class.getClassLoader(),true,false),new JVMAddHandler(JvmAttributes.getAttributes(server)),JVMRemoveHandler.INSTANCE);
 @AT@ 2002 @LENGTH@ 381
---UPD ClassInstanceCreation@@StandardResourceDescriptionResolver["jvm", HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions", HostDescriptionProviders.class.getClassLoader(), true, false] @TO@ StandardResourceDescriptionResolver["jvm", HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostEnvironmentResourceDescription.class.getClassLoader(), true, false] @AT@ 2080 @LENGTH@ 186
------UPD InfixExpression@@HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 2127 @LENGTH@ 76
---------UPD MethodInvocation@@HostDescriptionProviders.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 2127 @LENGTH@ 53
------------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2127 @LENGTH@ 30
------UPD MethodInvocation@@HostDescriptionProviders.class.getClassLoader() @TO@ HostEnvironmentResourceDescription.class.getClassLoader() @AT@ 2205 @LENGTH@ 47
---------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2205 @LENGTH@ 30


UPD ReturnStatement@@MethodInvocation:sub.get(element.getValue()) @TO@ MethodInvocation:sub.get(element.getValue(),iterator) @AT@ 5279 @LENGTH@ 35
---UPD MethodInvocation@@sub.get(element.getValue()) @TO@ sub.get(element.getValue(),iterator) @AT@ 5286 @LENGTH@ 27
------UPD SimpleName@@MethodName:get:[element.getValue()] @TO@ MethodName:get:[element.getValue(), iterator] @AT@ 5290 @LENGTH@ 23
---------INS SimpleName@@iterator @TO@ SimpleName@@MethodName:get:[element.getValue()] @AT@ 5314 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:httpUri.getPath() @TO@ ConditionalExpression:httpUri.getPath().length() == 0 ? "/" : httpUri.getPath() @AT@ 8398 @LENGTH@ 25
---DEL MethodInvocation@@httpUri.getPath() @AT@ 8405 @LENGTH@ 17
---INS ConditionalExpression@@httpUri.getPath().length() == 0 ? "/" : httpUri.getPath() @TO@ ReturnStatement@@MethodInvocation:httpUri.getPath() @AT@ 8474 @LENGTH@ 57
------INS InfixExpression@@httpUri.getPath().length() == 0 @TO@ ConditionalExpression@@httpUri.getPath().length() == 0 ? "/" : httpUri.getPath() @AT@ 8474 @LENGTH@ 31
---------INS MethodInvocation@@httpUri.getPath().length() @TO@ InfixExpression@@httpUri.getPath().length() == 0 @AT@ 8474 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getPath:[] @TO@ MethodInvocation@@httpUri.getPath().length() @AT@ 8474 @LENGTH@ 17
------------INS SimpleName@@Name:httpUri @TO@ MethodInvocation@@httpUri.getPath().length() @AT@ 8474 @LENGTH@ 7
------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@httpUri.getPath().length() @AT@ 8492 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@httpUri.getPath().length() == 0 @AT@ 8500 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@httpUri.getPath().length() == 0 @AT@ 8504 @LENGTH@ 1
------INS StringLiteral@@"/" @TO@ ConditionalExpression@@httpUri.getPath().length() == 0 ? "/" : httpUri.getPath() @AT@ 8508 @LENGTH@ 3
------INS MethodInvocation@@httpUri.getPath() @TO@ ConditionalExpression@@httpUri.getPath().length() == 0 ? "/" : httpUri.getPath() @AT@ 8514 @LENGTH@ 17
---------MOV SimpleName@@Name:httpUri @TO@ MethodInvocation@@httpUri.getPath() @AT@ 8405 @LENGTH@ 7
---------MOV SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@httpUri.getPath() @AT@ 8413 @LENGTH@ 9


DEL IfStatement@@if (localSlaveHandler.isResourceExcluded(address)) {  System.out.println("should be ignoring this stuff! " + operation);} @AT@ 8010 @LENGTH@ 140
---DEL MethodInvocation@@localSlaveHandler.isResourceExcluded(address) @AT@ 8013 @LENGTH@ 45
------DEL SimpleName@@Name:localSlaveHandler @AT@ 8013 @LENGTH@ 17
------DEL SimpleName@@MethodName:isResourceExcluded:[address] @AT@ 8031 @LENGTH@ 27
---------DEL SimpleName@@address @AT@ 8050 @LENGTH@ 7
---DEL Block@@ThenBody:{  System.out.println("should be ignoring this stuff! " + operation);} @AT@ 8060 @LENGTH@ 90
------DEL ExpressionStatement@@MethodInvocation:System.out.println("should be ignoring this stuff! " + operation) @AT@ 8074 @LENGTH@ 66
---------DEL MethodInvocation@@System.out.println("should be ignoring this stuff! " + operation) @AT@ 8074 @LENGTH@ 65
------------DEL QualifiedName@@Name:System.out @AT@ 8074 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:["should be ignoring this stuff! " + operation] @AT@ 8085 @LENGTH@ 54
---------------DEL InfixExpression@@"should be ignoring this stuff! " + operation @AT@ 8093 @LENGTH@ 45
------------------DEL StringLiteral@@"should be ignoring this stuff! " @AT@ 8093 @LENGTH@ 33
------------------DEL Operator@@+ @AT@ 8126 @LENGTH@ 1
------------------DEL SimpleName@@operation @AT@ 8129 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3460 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 3460 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 3468 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 3481 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3481 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3481 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 3498 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 3514 @LENGTH@ 21


UPD MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 3635 @LENGTH@ 2019
---UPD PrimitiveType@@void @TO@ boolean @AT@ 3642 @LENGTH@ 4
---DEL SimpleType@@Exception @AT@ 3681 @LENGTH@ 9
---INS SingleVariableDeclaration@@AsyncCallback callback @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3909 @LENGTH@ 22
------INS SimpleType@@AsyncCallback @TO@ SingleVariableDeclaration@@AsyncCallback callback @AT@ 3909 @LENGTH@ 13
------INS SimpleName@@callback @TO@ SingleVariableDeclaration@@AsyncCallback callback @AT@ 3923 @LENGTH@ 8
---UPD TryStatement@@try {  detour.process(exchange);} catch (Exception e) {  exchange.setException(e);} @TO@ try {  detour.process(exchange);} catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4154 @LENGTH@ 155
------UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 4224 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ CatchClause@@catch (Exception e) {  exchange.setException(e);} @AT@ 4622 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 4622 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 4622 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 4631 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 4636 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ CatchClause@@catch (Exception e) {  exchange.setException(e);} @AT@ 4663 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 4670 @LENGTH@ 4
---UPD IfStatement@@if (!continueProcessing(exchange,"skip sending to original intended destination: " + getEndpoint(),LOG)) {  return;} @TO@ if (!continueProcessing(exchange,"skip sending to original intended destination: " + getEndpoint(),LOG)) {  callback.done(true);  return true;} @AT@ 4472 @LENGTH@ 154
------UPD Block@@ThenBody:{  return;} @TO@ ThenBody:{  callback.done(true);  return true;} @AT@ 4579 @LENGTH@ 47
---------UPD ReturnStatement@@ @TO@ BooleanLiteral:true @AT@ 4601 @LENGTH@ 7
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@ @AT@ 5033 @LENGTH@ 4
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  return;} @AT@ 4985 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 4985 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 4985 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 4994 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 4999 @LENGTH@ 4
---UPD IfStatement@@if (!shouldSkip) {  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  producer.process(exchange);} else {  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @TO@ if (!shouldSkip) {  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer);  return AsyncProcessorHelper.process(async,exchange,callback);} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);  }  callback.done(true);  return true;} @AT@ 5081 @LENGTH@ 559
------UPD Block@@ThenBody:{  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  producer.process(exchange);} @TO@ ThenBody:{  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer);  return AsyncProcessorHelper.process(async,exchange,callback);} @AT@ 5098 @LENGTH@ 369
---------DEL ExpressionStatement@@MethodInvocation:producer.process(exchange) @AT@ 5422 @LENGTH@ 27
------------DEL MethodInvocation@@producer.process(exchange) @AT@ 5422 @LENGTH@ 26
---------INS VariableDeclarationStatement@@AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer); @TO@ Block@@ThenBody:{  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  producer.process(exchange);} @AT@ 5895 @LENGTH@ 71
------------INS SimpleType@@AsyncProcessor @TO@ VariableDeclarationStatement@@AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer); @AT@ 5895 @LENGTH@ 14
------------INS VariableDeclarationFragment@@async=AsyncProcessorConverterHelper.convert(producer) @TO@ VariableDeclarationStatement@@AsyncProcessor async=AsyncProcessorConverterHelper.convert(producer); @AT@ 5910 @LENGTH@ 55
---------------INS SimpleName@@async @TO@ VariableDeclarationFragment@@async=AsyncProcessorConverterHelper.convert(producer) @AT@ 5910 @LENGTH@ 5
---------------INS MethodInvocation@@AsyncProcessorConverterHelper.convert(producer) @TO@ VariableDeclarationFragment@@async=AsyncProcessorConverterHelper.convert(producer) @AT@ 5918 @LENGTH@ 47
------------------INS SimpleName@@Name:AsyncProcessorConverterHelper @TO@ MethodInvocation@@AsyncProcessorConverterHelper.convert(producer) @AT@ 5918 @LENGTH@ 29
------------------INS SimpleName@@MethodName:convert:[producer] @TO@ MethodInvocation@@AsyncProcessorConverterHelper.convert(producer) @AT@ 5948 @LENGTH@ 17
---------------------INS SimpleName@@producer @TO@ SimpleName@@MethodName:convert:[producer] @AT@ 5956 @LENGTH@ 8
---------INS ReturnStatement@@MethodInvocation:AsyncProcessorHelper.process(async,exchange,callback) @TO@ Block@@ThenBody:{  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  producer.process(exchange);} @AT@ 5987 @LENGTH@ 63
------------INS MethodInvocation@@AsyncProcessorHelper.process(async,exchange,callback) @TO@ ReturnStatement@@MethodInvocation:AsyncProcessorHelper.process(async,exchange,callback) @AT@ 5994 @LENGTH@ 55
---------------MOV SimpleName@@Name:producer @TO@ MethodInvocation@@AsyncProcessorHelper.process(async,exchange,callback) @AT@ 5422 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:process:[exchange] @TO@ MethodInvocation@@AsyncProcessorHelper.process(async,exchange,callback) @AT@ 5431 @LENGTH@ 17
------------------INS SimpleName@@async @TO@ SimpleName@@MethodName:process:[exchange] @AT@ 6023 @LENGTH@ 5
------------------INS SimpleName@@callback @TO@ SimpleName@@MethodName:process:[exchange] @AT@ 6040 @LENGTH@ 8
------UPD Block@@ElseBody:{  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @TO@ ThenBody:{  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @AT@ 5473 @LENGTH@ 167
------INS Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);  }  callback.done(true);  return true;} @TO@ IfStatement@@if (!shouldSkip) {  if (exchange.hasOut()) {    exchange.setIn(exchange.getOut());    exchange.setOut(null);  }  producer.process(exchange);} else {  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @AT@ 6074 @LENGTH@ 315
---------INS IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);  }  callback.done(true);  return true;} @AT@ 6096 @LENGTH@ 201
------------MOV Block@@ElseBody:{  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @AT@ 5473 @LENGTH@ 167
------------INS MethodInvocation@@LOG.isDebugEnabled() @TO@ IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);} @AT@ 6100 @LENGTH@ 20
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 6100 @LENGTH@ 3
---------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@LOG.isDebugEnabled() @AT@ 6104 @LENGTH@ 16
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);  }  callback.done(true);  return true;} @AT@ 6318 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 6318 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 6318 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 6327 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 6332 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Stop() means skip sending exchange to original intended destination: {} for exchange: {}",getEndpoint(),exchange);  }  callback.done(true);  return true;} @AT@ 6359 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 6366 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:from("file://target/managed").to("mock:result") @TO@ MethodInvocation:from("file://target/managed").convertBodyTo(String.class).to("mock:result") @AT@ 3451 @LENGTH@ 48
---UPD MethodInvocation@@from("file://target/managed").to("mock:result") @TO@ from("file://target/managed").convertBodyTo(String.class).to("mock:result") @AT@ 3451 @LENGTH@ 47
------INS MethodInvocation@@MethodName:convertBodyTo:[String.class] @TO@ MethodInvocation@@from("file://target/managed").to("mock:result") @AT@ 3451 @LENGTH@ 78
---------INS TypeLiteral@@String.class @TO@ MethodInvocation@@MethodName:convertBodyTo:[String.class] @AT@ 3516 @LENGTH@ 12


UPD CatchClause@@catch (IOException e) {  errors.add(e);} @TO@ catch (Throwable e) {  errors.add(e);} @AT@ 42072 @LENGTH@ 84
---UPD SingleVariableDeclaration@@IOException e @TO@ Throwable e @AT@ 42079 @LENGTH@ 13
------UPD SimpleType@@IOException @TO@ Throwable @AT@ 42079 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:controller.execute(operation,null,OperationTransactionControl.COMMIT,null) @TO@ MethodInvocation:executeOperation(operation,OperationTransactionControl.COMMIT) @AT@ 7542 @LENGTH@ 85
---UPD MethodInvocation@@controller.execute(operation,null,OperationTransactionControl.COMMIT,null) @TO@ executeOperation(operation,OperationTransactionControl.COMMIT) @AT@ 7549 @LENGTH@ 77
------DEL SimpleName@@Name:controller @AT@ 7549 @LENGTH@ 10
------UPD SimpleName@@MethodName:execute:[operation, null, OperationTransactionControl.COMMIT, null] @TO@ MethodName:executeOperation:[operation, OperationTransactionControl.COMMIT] @AT@ 7560 @LENGTH@ 66
---------DEL NullLiteral@@null @AT@ 7579 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 7621 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod()) @TO@ MethodInvocation:LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method) @AT@ 11226 @LENGTH@ 97


UPD MethodDeclaration@@voidMethodName:ArgumentListState, ArgumentState argState, ArgumentValueState valueState, OutputTargetState outputTarget,  @TO@ voidMethodName:ArgumentListState, ArgumentState argState, final ArgumentValueState valueState, OutputTargetState outputTarget,  @AT@ 1798 @LENGTH@ 726
---UPD SingleVariableDeclaration@@ArgumentValueState valueState @TO@ final ArgumentValueState valueState @AT@ 1840 @LENGTH@ 29
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ArgumentValueState valueState @AT@ 1830 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new EnterStateCharacterHandler(valueState)) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(valueState);
  }
}
) @AT@ 2315 @LENGTH@ 62
------UPD MethodInvocation@@setDefaultHandler(new EnterStateCharacterHandler(valueState)) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(valueState);
  }
}
) @AT@ 2315 @LENGTH@ 61
---------UPD SimpleName@@MethodName:setDefaultHandler:[new EnterStateCharacterHandler(valueState)] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(valueState);
  }
}
] @AT@ 2315 @LENGTH@ 61
------------UPD ClassInstanceCreation@@EnterStateCharacterHandler[valueState] @TO@ LineBreakHandler[false, false] @AT@ 2333 @LENGTH@ 42
---------------UPD SimpleType@@EnterStateCharacterHandler @TO@ LineBreakHandler @AT@ 2337 @LENGTH@ 26
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[valueState] @AT@ 2350 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[valueState] @AT@ 2357 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[valueState] @AT@ 2363 @LENGTH@ 179
------------------INS MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2399 @LENGTH@ 133
---------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2399 @LENGTH@ 9
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2409 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doHandle @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2414 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2423 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2423 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2438 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2450 @LENGTH@ 22
---------------------INS ExpressionStatement@@MethodInvocation:ctx.enterState(valueState) @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2491 @LENGTH@ 27
------------------------INS MethodInvocation@@ctx.enterState(valueState) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(valueState) @AT@ 2491 @LENGTH@ 26
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(valueState) @AT@ 2491 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:enterState:[valueState] @TO@ MethodInvocation@@ctx.enterState(valueState) @AT@ 2495 @LENGTH@ 22
------------------------------INS SimpleName@@valueState @TO@ SimpleName@@MethodName:enterState:[valueState] @AT@ 2506 @LENGTH@ 10
---------------DEL SimpleName@@valueState @AT@ 2364 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:setReturnHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
) @TO@ MethodDeclaration@@voidMethodName:ArgumentListState, ArgumentState argState, ArgumentValueState valueState, OutputTargetState outputTarget,  @AT@ 2694 @LENGTH@ 350
------INS MethodInvocation@@setReturnHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:setReturnHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
) @AT@ 2694 @LENGTH@ 349
---------INS SimpleName@@MethodName:setReturnHandler:[new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
] @TO@ MethodInvocation@@setReturnHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
) @AT@ 2694 @LENGTH@ 349
------------INS ClassInstanceCreation@@CharacterHandler[] @TO@ SimpleName@@MethodName:setReturnHandler:[new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    if (ctx.isEndOfContent()) {
      ctx.leaveState();
    }
 else {
      getHandler(ctx.getCharacter()).handle(ctx);
    }
  }
}
] @AT@ 2711 @LENGTH@ 331
---------------INS New@@new @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2711 @LENGTH@ 3
---------------INS SimpleType@@CharacterHandler @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2715 @LENGTH@ 16
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2733 @LENGTH@ 309
------------------INS MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2769 @LENGTH@ 272
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2769 @LENGTH@ 6
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2776 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:handle @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2781 @LENGTH@ 6
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2788 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2788 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2803 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2815 @LENGTH@ 22
---------------------INS IfStatement@@if (ctx.isEndOfContent()) {  ctx.leaveState();} else {  getHandler(ctx.getCharacter()).handle(ctx);} @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2856 @LENGTH@ 171
------------------------INS MethodInvocation@@ctx.isEndOfContent() @TO@ IfStatement@@if (ctx.isEndOfContent()) {  ctx.leaveState();} else {  getHandler(ctx.getCharacter()).handle(ctx);} @AT@ 2859 @LENGTH@ 20
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.isEndOfContent() @AT@ 2859 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:isEndOfContent:[] @TO@ MethodInvocation@@ctx.isEndOfContent() @AT@ 2863 @LENGTH@ 16
------------------------INS Block@@ThenBody:{  ctx.leaveState();} @TO@ IfStatement@@if (ctx.isEndOfContent()) {  ctx.leaveState();} else {  getHandler(ctx.getCharacter()).handle(ctx);} @AT@ 2881 @LENGTH@ 57
---------------------------INS ExpressionStatement@@MethodInvocation:ctx.leaveState() @TO@ Block@@ThenBody:{  ctx.leaveState();} @AT@ 2903 @LENGTH@ 17
------------------------------INS MethodInvocation@@ctx.leaveState() @TO@ ExpressionStatement@@MethodInvocation:ctx.leaveState() @AT@ 2903 @LENGTH@ 16
---------------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.leaveState() @AT@ 2903 @LENGTH@ 3
---------------------------------INS SimpleName@@MethodName:leaveState:[] @TO@ MethodInvocation@@ctx.leaveState() @AT@ 2907 @LENGTH@ 12
------------------------INS Block@@ElseBody:{  getHandler(ctx.getCharacter()).handle(ctx);} @TO@ IfStatement@@if (ctx.isEndOfContent()) {  ctx.leaveState();} else {  getHandler(ctx.getCharacter()).handle(ctx);} @AT@ 2944 @LENGTH@ 83
---------------------------INS ExpressionStatement@@MethodInvocation:getHandler(ctx.getCharacter()).handle(ctx) @TO@ Block@@ElseBody:{  getHandler(ctx.getCharacter()).handle(ctx);} @AT@ 2966 @LENGTH@ 43
------------------------------INS MethodInvocation@@getHandler(ctx.getCharacter()).handle(ctx) @TO@ ExpressionStatement@@MethodInvocation:getHandler(ctx.getCharacter()).handle(ctx) @AT@ 2966 @LENGTH@ 42
---------------------------------INS MethodInvocation@@MethodName:getHandler:[ctx.getCharacter()] @TO@ MethodInvocation@@getHandler(ctx.getCharacter()).handle(ctx) @AT@ 2966 @LENGTH@ 30
------------------------------------INS MethodInvocation@@ctx.getCharacter() @TO@ MethodInvocation@@MethodName:getHandler:[ctx.getCharacter()] @AT@ 2977 @LENGTH@ 18
---------------------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2977 @LENGTH@ 3
---------------------------------------INS SimpleName@@MethodName:getCharacter:[] @TO@ MethodInvocation@@ctx.getCharacter() @AT@ 2981 @LENGTH@ 14
---------------------------------INS SimpleName@@MethodName:handle:[ctx] @TO@ MethodInvocation@@getHandler(ctx.getCharacter()).handle(ctx) @AT@ 2997 @LENGTH@ 11
------------------------------------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:handle:[ctx] @AT@ 3004 @LENGTH@ 3


UPD IfStatement@@if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} @TO@ if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} else {  modulePath=modulePath.split(File.pathSeparator)[0];} @AT@ 8360 @LENGTH@ 326
---INS Block@@ElseBody:{  modulePath=modulePath.split(File.pathSeparator)[0];} @TO@ IfStatement@@if (modulePath == null) {  String jbossHome=System.getProperty("jboss.home",null);  if (jbossHome == null) {    throw new IllegalStateException("Neither -Dmodule.path nor -Djboss.home were set");  }  modulePath=jbossHome + File.separatorChar + "modules";} @AT@ 8690 @LENGTH@ 77
------INS ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @TO@ Block@@ElseBody:{  modulePath=modulePath.split(File.pathSeparator)[0];} @AT@ 8704 @LENGTH@ 53
---------INS Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @TO@ ExpressionStatement@@Assignment:modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 8704 @LENGTH@ 52
------------INS SimpleName@@modulePath @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 8704 @LENGTH@ 10
------------INS Operator@@= @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 8714 @LENGTH@ 1
------------INS ArrayAccess@@modulePath.split(File.pathSeparator)[0] @TO@ Assignment@@modulePath=modulePath.split(File.pathSeparator)[0] @AT@ 8717 @LENGTH@ 39
---------------INS MethodInvocation@@modulePath.split(File.pathSeparator) @TO@ ArrayAccess@@modulePath.split(File.pathSeparator)[0] @AT@ 8717 @LENGTH@ 36
------------------INS SimpleName@@Name:modulePath @TO@ MethodInvocation@@modulePath.split(File.pathSeparator) @AT@ 8717 @LENGTH@ 10
------------------INS SimpleName@@MethodName:split:[File.pathSeparator] @TO@ MethodInvocation@@modulePath.split(File.pathSeparator) @AT@ 8728 @LENGTH@ 25
---------------------INS QualifiedName@@File.pathSeparator @TO@ SimpleName@@MethodName:split:[File.pathSeparator] @AT@ 8734 @LENGTH@ 18
------------------------INS SimpleName@@File @TO@ QualifiedName@@File.pathSeparator @AT@ 8734 @LENGTH@ 4
------------------------INS SimpleName@@pathSeparator @TO@ QualifiedName@@File.pathSeparator @AT@ 8739 @LENGTH@ 13
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@modulePath.split(File.pathSeparator)[0] @AT@ 8754 @LENGTH@ 1


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") final ServiceController<PathManager> controller=(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME); @TO@ @SuppressWarnings("unchecked") final ServiceController<PathManager> controller=(ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME); @AT@ 3307 @LENGTH@ 199
---UPD VariableDeclarationFragment@@controller=(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ controller=(ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3383 @LENGTH@ 122
------UPD CastExpression@@(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ (ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3396 @LENGTH@ 109
---------UPD MethodInvocation@@context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3429 @LENGTH@ 76
------------UPD MethodInvocation@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 3429 @LENGTH@ 32
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 3456 @LENGTH@ 4


INS IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ MethodDeclaration@@public, void, MethodName:testSendAndRecieveMailWithAttachmentsWithDuplicateNames, Exception,  @AT@ 3346 @LENGTH@ 222
---INS MethodInvocation@@MethodName:isJava16:[] @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3350 @LENGTH@ 10
---INS Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3362 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @AT@ 3346 @LENGTH@ 69
---INS Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3461 @LENGTH@ 107
------INS ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3475 @LENGTH@ 83
---------INS MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3475 @LENGTH@ 82
------------INS SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @TO@ MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3475 @LENGTH@ 82
---------------INS StringLiteral@@"application/octet-stream; name=logo.jpeg" @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3488 @LENGTH@ 42
---------------INS MethodInvocation@@handler.getContentType() @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3532 @LENGTH@ 24
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getContentType() @AT@ 3532 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@handler.getContentType() @AT@ 3540 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:registration.registerOperationHandler("test",new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
,DESCRIPTION_PROVIDER,false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @TO@ MethodDeclaration@@public, void, MethodName:initialize, final ExtensionContext context,  @AT@ 2535 @LENGTH@ 427
---INS MethodInvocation@@registration.registerOperationHandler("test",new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
,DESCRIPTION_PROVIDER,false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @TO@ ExpressionStatement@@MethodInvocation:registration.registerOperationHandler("test",new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
,DESCRIPTION_PROVIDER,false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 2535 @LENGTH@ 426
------INS SimpleName@@Name:registration @TO@ MethodInvocation@@registration.registerOperationHandler("test",new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
,DESCRIPTION_PROVIDER,false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 2535 @LENGTH@ 12
------INS SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @TO@ MethodInvocation@@registration.registerOperationHandler("test",new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
,DESCRIPTION_PROVIDER,false,OperationEntry.EntryType.PUBLIC,EnumSet.of(OperationEntry.Flag.READ_ONLY)) @AT@ 2548 @LENGTH@ 413
---------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2573 @LENGTH@ 6
---------INS ClassInstanceCreation@@OperationStepHandler[] @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2581 @LENGTH@ 274
------------INS New@@new @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 2581 @LENGTH@ 3
------------INS SimpleType@@OperationStepHandler @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 2585 @LENGTH@ 20
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationStepHandler[] @AT@ 2608 @LENGTH@ 247
---------------INS MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2644 @LENGTH@ 201
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2644 @LENGTH@ 6
------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2651 @LENGTH@ 4
------------------INS SimpleName@@MethodName:execute @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2656 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2664 @LENGTH@ 24
---------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2664 @LENGTH@ 16
---------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 2681 @LENGTH@ 7
------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2690 @LENGTH@ 19
---------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2690 @LENGTH@ 9
---------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 2700 @LENGTH@ 9
------------------INS SimpleType@@OperationFailedException @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2718 @LENGTH@ 24
------------------INS ExpressionStatement@@MethodInvocation:context.getResult().set(true) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2761 @LENGTH@ 30
---------------------INS MethodInvocation@@context.getResult().set(true) @TO@ ExpressionStatement@@MethodInvocation:context.getResult().set(true) @AT@ 2761 @LENGTH@ 29
------------------------INS MethodInvocation@@MethodName:getResult:[] @TO@ MethodInvocation@@context.getResult().set(true) @AT@ 2761 @LENGTH@ 19
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getResult().set(true) @AT@ 2761 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@context.getResult().set(true) @AT@ 2781 @LENGTH@ 9
---------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 2785 @LENGTH@ 4
------------------INS ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2808 @LENGTH@ 23
---------------------INS MethodInvocation@@context.completeStep() @TO@ ExpressionStatement@@MethodInvocation:context.completeStep() @AT@ 2808 @LENGTH@ 22
------------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.completeStep() @AT@ 2808 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:completeStep:[] @TO@ MethodInvocation@@context.completeStep() @AT@ 2816 @LENGTH@ 14
---------INS SimpleName@@DESCRIPTION_PROVIDER @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2857 @LENGTH@ 20
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2879 @LENGTH@ 5
---------INS QualifiedName@@OperationEntry.EntryType.PUBLIC @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2886 @LENGTH@ 31
------------INS QualifiedName@@OperationEntry.EntryType @TO@ QualifiedName@@OperationEntry.EntryType.PUBLIC @AT@ 2886 @LENGTH@ 24
---------------INS SimpleName@@OperationEntry @TO@ QualifiedName@@OperationEntry.EntryType @AT@ 2886 @LENGTH@ 14
---------------INS SimpleName@@EntryType @TO@ QualifiedName@@OperationEntry.EntryType @AT@ 2901 @LENGTH@ 9
------------INS SimpleName@@PUBLIC @TO@ QualifiedName@@OperationEntry.EntryType.PUBLIC @AT@ 2911 @LENGTH@ 6
---------INS MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @TO@ SimpleName@@MethodName:registerOperationHandler:["test", new OperationStepHandler(){
  @Override public void execute(  OperationContext context,  ModelNode operation) throws OperationFailedException {
    context.getResult().set(true);
    context.completeStep();
  }
}
, DESCRIPTION_PROVIDER, false, OperationEntry.EntryType.PUBLIC, EnumSet.of(OperationEntry.Flag.READ_ONLY)] @AT@ 2919 @LENGTH@ 41
------------INS SimpleName@@Name:EnumSet @TO@ MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @AT@ 2919 @LENGTH@ 7
------------INS SimpleName@@MethodName:of:[OperationEntry.Flag.READ_ONLY] @TO@ MethodInvocation@@EnumSet.of(OperationEntry.Flag.READ_ONLY) @AT@ 2927 @LENGTH@ 33
---------------INS QualifiedName@@OperationEntry.Flag.READ_ONLY @TO@ SimpleName@@MethodName:of:[OperationEntry.Flag.READ_ONLY] @AT@ 2930 @LENGTH@ 29
------------------INS QualifiedName@@OperationEntry.Flag @TO@ QualifiedName@@OperationEntry.Flag.READ_ONLY @AT@ 2930 @LENGTH@ 19
---------------------INS SimpleName@@OperationEntry @TO@ QualifiedName@@OperationEntry.Flag @AT@ 2930 @LENGTH@ 14
---------------------INS SimpleName@@Flag @TO@ QualifiedName@@OperationEntry.Flag @AT@ 2945 @LENGTH@ 4
------------------INS SimpleName@@READ_ONLY @TO@ QualifiedName@@OperationEntry.Flag.READ_ONLY @AT@ 2950 @LENGTH@ 9


UPD ReturnStatement@@ConditionalExpression:convertVFS ? metaData.getParent().getParent().getPhysicalFile().toURI().toURL() : metaData.getParent().getParent().toURL() @TO@ ConditionalExpression:convertVFS ? metaData.getPhysicalFile().getParentFile().getParentFile().toURI().toURL() : metaData.getParent().getParent().toURL() @AT@ 14290 @LENGTH@ 170
---UPD ConditionalExpression@@convertVFS ? metaData.getParent().getParent().getPhysicalFile().toURI().toURL() : metaData.getParent().getParent().toURL() @TO@ convertVFS ? metaData.getPhysicalFile().getParentFile().getParentFile().toURI().toURL() : metaData.getParent().getParent().toURL() @AT@ 14297 @LENGTH@ 162
------UPD MethodInvocation@@metaData.getParent().getParent().getPhysicalFile().toURI().toURL() @TO@ metaData.getPhysicalFile().getParentFile().getParentFile().toURI().toURL() @AT@ 14330 @LENGTH@ 66
---------UPD MethodInvocation@@MethodName:getPhysicalFile:[] @TO@ MethodName:getParentFile:[] @AT@ 14330 @LENGTH@ 50
---------UPD MethodInvocation@@MethodName:getParent:[] @TO@ MethodName:getParentFile:[] @AT@ 14330 @LENGTH@ 32
---------UPD MethodInvocation@@MethodName:getParent:[] @TO@ MethodName:getPhysicalFile:[] @AT@ 14330 @LENGTH@ 20


UPD MethodDeclaration@@voidMethodName:ConcurrentSignState, ServerGroupState sg,  @TO@ voidMethodName:ConcurrentSignState, final ServerGroupState sg,  @AT@ 1564 @LENGTH@ 237
---UPD SingleVariableDeclaration@@ServerGroupState sg @TO@ final ServerGroupState sg @AT@ 1584 @LENGTH@ 19
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ServerGroupState sg @AT@ 1670 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new EnterStateCharacterHandler(sg)) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
) @AT@ 1670 @LENGTH@ 54
------UPD MethodInvocation@@setDefaultHandler(new EnterStateCharacterHandler(sg)) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
) @AT@ 1670 @LENGTH@ 53
---------UPD SimpleName@@MethodName:setDefaultHandler:[new EnterStateCharacterHandler(sg)] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(sg);
  }
}
] @AT@ 1670 @LENGTH@ 53
------------UPD ClassInstanceCreation@@EnterStateCharacterHandler[sg] @TO@ LineBreakHandler[false, false] @AT@ 1688 @LENGTH@ 34
---------------UPD SimpleType@@EnterStateCharacterHandler @TO@ LineBreakHandler @AT@ 1692 @LENGTH@ 26
---------------DEL SimpleName@@sg @AT@ 1719 @LENGTH@ 2
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1801 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1808 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[sg] @AT@ 1814 @LENGTH@ 171
------------------INS MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1850 @LENGTH@ 125
---------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1850 @LENGTH@ 9
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1860 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doHandle @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1865 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1874 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1874 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1889 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1901 @LENGTH@ 22
---------------------INS ExpressionStatement@@MethodInvocation:ctx.enterState(sg) @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1942 @LENGTH@ 19
------------------------INS MethodInvocation@@ctx.enterState(sg) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(sg) @AT@ 1942 @LENGTH@ 18
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(sg) @AT@ 1942 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:enterState:[sg] @TO@ MethodInvocation@@ctx.enterState(sg) @AT@ 1946 @LENGTH@ 14
------------------------------INS SimpleName@@sg @TO@ SimpleName@@MethodName:enterState:[sg] @AT@ 1957 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong customer id ",String.valueOf(response.get(0).getId()),"113") @TO@ MethodInvocation:assertTrue("Dan is missing!",response.contains(new Customer(113,"Dan"))) @AT@ 5380 @LENGTH@ 89
---UPD MethodInvocation@@assertEquals("Get a wrong customer id ",String.valueOf(response.get(0).getId()),"113") @TO@ assertTrue("Dan is missing!",response.contains(new Customer(113,"Dan"))) @AT@ 5380 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong customer id ", String.valueOf(response.get(0).getId()), "113"] @TO@ MethodName:assertTrue:["Dan is missing!", response.contains(new Customer(113,"Dan"))] @AT@ 5380 @LENGTH@ 88
---------UPD StringLiteral@@"Get a wrong customer id " @TO@ "Dan is missing!" @AT@ 5393 @LENGTH@ 26
---------UPD MethodInvocation@@String.valueOf(response.get(0).getId()) @TO@ response.contains(new Customer(113,"Dan")) @AT@ 5421 @LENGTH@ 39
------------UPD SimpleName@@Name:String @TO@ Name:response @AT@ 5421 @LENGTH@ 6
------------UPD SimpleName@@MethodName:valueOf:[response.get(0).getId()] @TO@ MethodName:contains:[new Customer(113,"Dan")] @AT@ 5428 @LENGTH@ 32
---------------INS ClassInstanceCreation@@Customer[113, "Dan"] @TO@ SimpleName@@MethodName:valueOf:[response.get(0).getId()] @AT@ 5428 @LENGTH@ 24
------------------INS New@@new @TO@ ClassInstanceCreation@@Customer[113, "Dan"] @AT@ 5428 @LENGTH@ 3
------------------INS SimpleType@@Customer @TO@ ClassInstanceCreation@@Customer[113, "Dan"] @AT@ 5432 @LENGTH@ 8
------------------INS NumberLiteral@@113 @TO@ ClassInstanceCreation@@Customer[113, "Dan"] @AT@ 5441 @LENGTH@ 3
------------------INS StringLiteral@@"Dan" @TO@ ClassInstanceCreation@@Customer[113, "Dan"] @AT@ 5446 @LENGTH@ 5
---------------DEL MethodInvocation@@response.get(0).getId() @AT@ 5436 @LENGTH@ 23
------------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 5436 @LENGTH@ 15
---------------------DEL NumberLiteral@@0 @AT@ 5449 @LENGTH@ 1
------------------DEL SimpleName@@Name:response @AT@ 5436 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getId:[] @AT@ 5452 @LENGTH@ 7
---------DEL StringLiteral@@"113" @AT@ 5462 @LENGTH@ 5


INS VariableDeclarationStatement@@final PathElement transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME); @TO@ MethodDeclaration@@public, void, MethodName:execute, final OperationContext context, final ModelNode operation, OperationFailedException,  @AT@ 1092 @LENGTH@ 113
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final PathElement transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME); @AT@ 1092 @LENGTH@ 5
---INS SimpleType@@PathElement @TO@ VariableDeclarationStatement@@final PathElement transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME); @AT@ 1098 @LENGTH@ 11
---INS VariableDeclarationFragment@@transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @TO@ VariableDeclarationStatement@@final PathElement transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME); @AT@ 1110 @LENGTH@ 94
------INS SimpleName@@transportRelativePath @TO@ VariableDeclarationFragment@@transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @AT@ 1110 @LENGTH@ 21
------INS MethodInvocation@@PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @TO@ VariableDeclarationFragment@@transportRelativePath=PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @AT@ 1134 @LENGTH@ 70
---------INS SimpleName@@Name:PathElement @TO@ MethodInvocation@@PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @AT@ 1134 @LENGTH@ 11
---------INS SimpleName@@MethodName:pathElement:[ModelKeys.TRANSPORT, ModelKeys.TRANSPORT_NAME] @TO@ MethodInvocation@@PathElement.pathElement(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME) @AT@ 1146 @LENGTH@ 58
------------INS QualifiedName@@ModelKeys.TRANSPORT @TO@ SimpleName@@MethodName:pathElement:[ModelKeys.TRANSPORT, ModelKeys.TRANSPORT_NAME] @AT@ 1158 @LENGTH@ 19
---------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.TRANSPORT @AT@ 1158 @LENGTH@ 9
---------------INS SimpleName@@TRANSPORT @TO@ QualifiedName@@ModelKeys.TRANSPORT @AT@ 1168 @LENGTH@ 9
------------INS QualifiedName@@ModelKeys.TRANSPORT_NAME @TO@ SimpleName@@MethodName:pathElement:[ModelKeys.TRANSPORT, ModelKeys.TRANSPORT_NAME] @AT@ 1179 @LENGTH@ 24
---------------INS SimpleName@@ModelKeys @TO@ QualifiedName@@ModelKeys.TRANSPORT_NAME @AT@ 1179 @LENGTH@ 9
---------------INS SimpleName@@TRANSPORT_NAME @TO@ QualifiedName@@ModelKeys.TRANSPORT_NAME @AT@ 1189 @LENGTH@ 14


UPD EnhancedForStatement@@for (FieldError fe : ex.getErrors().getFieldErrors()) {  List<Object> args=new ArrayList<Object>();  args.add(fe.getObjectName());  args.add(fe.getField());  args.add(fe.getRejectedValue());  for (  Object o : fe.getArguments()) {    args.add(o);  }  String msg=applicationContext.getMessage(fe.getCode(),args.toArray(),fe.getDefaultMessage(),null);  errors.add(msg);} @TO@ for (FieldError fe : ex.getErrors().getFieldErrors()) {  List<Object> args=new ArrayList<Object>();  args.add(fe.getObjectName());  args.add(fe.getField());  args.add(fe.getRejectedValue());  if (null != fe.getArguments()) {    for (    Object o : fe.getArguments()) {      args.add(o);    }  }  String msg=applicationContext.getMessage(fe.getCode(),args.toArray(),fe.getDefaultMessage(),null);  errors.add(msg);} @AT@ 60225 @LENGTH@ 569
---INS IfStatement@@if (null != fe.getArguments()) {  for (  Object o : fe.getArguments()) {    args.add(o);  }} @TO@ EnhancedForStatement@@for (FieldError fe : ex.getErrors().getFieldErrors()) {  List<Object> args=new ArrayList<Object>();  args.add(fe.getObjectName());  args.add(fe.getField());  args.add(fe.getRejectedValue());  for (  Object o : fe.getArguments()) {    args.add(o);  }  String msg=applicationContext.getMessage(fe.getCode(),args.toArray(),fe.getDefaultMessage(),null);  errors.add(msg);} @AT@ 60443 @LENGTH@ 116
------INS InfixExpression@@null != fe.getArguments() @TO@ IfStatement@@if (null != fe.getArguments()) {  for (  Object o : fe.getArguments()) {    args.add(o);  }} @AT@ 60446 @LENGTH@ 25
---------INS NullLiteral@@null @TO@ InfixExpression@@null != fe.getArguments() @AT@ 60446 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@null != fe.getArguments() @AT@ 60450 @LENGTH@ 2
---------INS MethodInvocation@@fe.getArguments() @TO@ InfixExpression@@null != fe.getArguments() @AT@ 60454 @LENGTH@ 17
------------INS SimpleName@@Name:fe @TO@ MethodInvocation@@fe.getArguments() @AT@ 60454 @LENGTH@ 2
------------INS SimpleName@@MethodName:getArguments:[] @TO@ MethodInvocation@@fe.getArguments() @AT@ 60457 @LENGTH@ 14
------INS Block@@ThenBody:{  for (  Object o : fe.getArguments()) {    args.add(o);  }} @TO@ IfStatement@@if (null != fe.getArguments()) {  for (  Object o : fe.getArguments()) {    args.add(o);  }} @AT@ 60473 @LENGTH@ 86
---------MOV EnhancedForStatement@@for (Object o : fe.getArguments()) {  args.add(o);} @TO@ Block@@ThenBody:{  for (  Object o : fe.getArguments()) {    args.add(o);  }} @AT@ 60443 @LENGTH@ 64


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup)) return; @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup,propertyReplacer)) return; @AT@ 2358 @LENGTH@ 87
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup,propertyReplacer) @AT@ 2362 @LENGTH@ 65
------UPD SimpleName@@MethodName:parse:[reader, jndiEnvRefGroup] @TO@ MethodName:parse:[reader, jndiEnvRefGroup, propertyReplacer] @AT@ 2397 @LENGTH@ 30
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, jndiEnvRefGroup] @AT@ 2428 @LENGTH@ 16


UPD MethodDeclaration@@public, PersonValidator, MethodName:beforePersonSaveValidator,  @TO@ public, PersonValidator, MethodName:beforeSavePersonValidator,  @AT@ 3482 @LENGTH@ 90
---UPD SimpleName@@MethodName:beforePersonSaveValidator @TO@ MethodName:beforeSavePersonValidator @AT@ 3505 @LENGTH@ 25


INS IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 8246 @LENGTH@ 266
---INS PrefixExpression@@!reply.asList().isEmpty() @TO@ IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 8250 @LENGTH@ 25
------INS Operator@@! @TO@ PrefixExpression@@!reply.asList().isEmpty() @AT@ 8250 @LENGTH@ 1
------INS MethodInvocation@@reply.asList().isEmpty() @TO@ PrefixExpression@@!reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:asList:[] @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 14
---------INS SimpleName@@Name:reply @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 5
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8266 @LENGTH@ 9
---INS Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @TO@ IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 8277 @LENGTH@ 235
------MOV VariableDeclarationStatement@@final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle); @TO@ Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 6498 @LENGTH@ 105
------MOV IfStatement@@if (replyDesc != null) {  reply.get(DESCRIPTION).set(replyDesc);} @TO@ Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 6612 @LENGTH@ 85


UPD EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION);  if (op == null) {    op=operation;  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @TO@ for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 3775 @LENGTH@ 780
---UPD VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @TO@ List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS); @AT@ 4058 @LENGTH@ 82
------DEL SimpleType@@ModelNode @AT@ 4058 @LENGTH@ 9
------UPD VariableDeclarationFragment@@op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS) @AT@ 4068 @LENGTH@ 71
---------UPD SimpleName@@op @TO@ transformers @AT@ 4068 @LENGTH@ 2
---------UPD MethodInvocation@@context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION) @TO@ context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS) @AT@ 4073 @LENGTH@ 66
------------UPD SimpleName@@MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION] @TO@ MethodName:getAttachment:[OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS] @AT@ 4081 @LENGTH@ 58
---------------UPD QualifiedName@@OperationAttachments.SLAVE_SERVER_OPERATION @TO@ OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS @AT@ 4095 @LENGTH@ 43
------------------UPD SimpleName@@SLAVE_SERVER_OPERATION @TO@ SLAVE_SERVER_OPERATION_TRANSFORMERS @AT@ 4116 @LENGTH@ 22
------INS ParameterizedType@@List<DomainOperationTransformer> @TO@ VariableDeclarationStatement@@ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION); @AT@ 4128 @LENGTH@ 32
---------INS SimpleType@@List @TO@ ParameterizedType@@List<DomainOperationTransformer> @AT@ 4128 @LENGTH@ 4
---------INS SimpleType@@DomainOperationTransformer @TO@ ParameterizedType@@List<DomainOperationTransformer> @AT@ 4133 @LENGTH@ 26
---UPD IfStatement@@if (op == null) {  op=operation;} @TO@ if (transformers != null) {  for (  final DomainOperationTransformer transformer : transformers) {    op=transformer.transform(context,op);  }} @AT@ 4153 @LENGTH@ 62
------UPD InfixExpression@@op == null @TO@ transformers != null @AT@ 4156 @LENGTH@ 10
---------UPD SimpleName@@op @TO@ transformers @AT@ 4156 @LENGTH@ 2
---------UPD Operator@@== @TO@ != @AT@ 4158 @LENGTH@ 2
------UPD Block@@ThenBody:{  op=operation;} @TO@ ThenBody:{  for (  final DomainOperationTransformer transformer : transformers) {    op=transformer.transform(context,op);  }} @AT@ 4168 @LENGTH@ 47
---------DEL ExpressionStatement@@Assignment:op=operation @AT@ 4186 @LENGTH@ 15
---------INS EnhancedForStatement@@for (final DomainOperationTransformer transformer : transformers) {  op=transformer.transform(context,op);} @TO@ Block@@ThenBody:{  op=operation;} @AT@ 4350 @LENGTH@ 145
------------INS SingleVariableDeclaration@@final DomainOperationTransformer transformer @TO@ EnhancedForStatement@@for (final DomainOperationTransformer transformer : transformers) {  op=transformer.transform(context,op);} @AT@ 4354 @LENGTH@ 44
---------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DomainOperationTransformer transformer @AT@ 4354 @LENGTH@ 5
---------------INS SimpleType@@DomainOperationTransformer @TO@ SingleVariableDeclaration@@final DomainOperationTransformer transformer @AT@ 4360 @LENGTH@ 26
---------------INS SimpleName@@transformer @TO@ SingleVariableDeclaration@@final DomainOperationTransformer transformer @AT@ 4387 @LENGTH@ 11
------------INS SimpleName@@transformers @TO@ EnhancedForStatement@@for (final DomainOperationTransformer transformer : transformers) {  op=transformer.transform(context,op);} @AT@ 4401 @LENGTH@ 12
------------INS ExpressionStatement@@Assignment:op=transformer.transform(context,op) @TO@ EnhancedForStatement@@for (final DomainOperationTransformer transformer : transformers) {  op=transformer.transform(context,op);} @AT@ 4437 @LENGTH@ 40
---------------MOV Assignment@@op=operation @TO@ ExpressionStatement@@Assignment:op=transformer.transform(context,op) @AT@ 4186 @LENGTH@ 14
------------------DEL SimpleName@@operation @AT@ 4191 @LENGTH@ 9
------------------INS MethodInvocation@@transformer.transform(context,op) @TO@ Assignment@@op=operation @AT@ 4442 @LENGTH@ 34
---------------------INS SimpleName@@Name:transformer @TO@ MethodInvocation@@transformer.transform(context,op) @AT@ 4442 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:transform:[context, op] @TO@ MethodInvocation@@transformer.transform(context,op) @AT@ 4454 @LENGTH@ 22
------------------------INS SimpleName@@context @TO@ SimpleName@@MethodName:transform:[context, op] @AT@ 4464 @LENGTH@ 7
------------------------INS SimpleName@@op @TO@ SimpleName@@MethodName:transform:[context, op] @AT@ 4473 @LENGTH@ 2
---INS VariableDeclarationStatement@@ModelNode op=operation; @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  ModelNode op=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION);  if (op == null) {    op=operation;  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4269 @LENGTH@ 25
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode op=operation; @AT@ 4269 @LENGTH@ 9
------INS VariableDeclarationFragment@@op=operation @TO@ VariableDeclarationStatement@@ModelNode op=operation; @AT@ 4279 @LENGTH@ 14
---------INS SimpleName@@op @TO@ VariableDeclarationFragment@@op=operation @AT@ 4279 @LENGTH@ 2
---------INS SimpleName@@operation @TO@ VariableDeclarationFragment@@op=operation @AT@ 4284 @LENGTH@ 9


UPD EnhancedForStatement@@for (AttributeDefinition def : LoadMetricDefinition.ATTRIBUTES) {  def.validateAndSet(operation,targetOperation);} @TO@ for (AttributeDefinition def : CustomLoadMetricDefinition.ATTRIBUTES) {  def.validateAndSet(operation,targetOperation);} @AT@ 2270 @LENGTH@ 135
---UPD QualifiedName@@LoadMetricDefinition.ATTRIBUTES @TO@ CustomLoadMetricDefinition.ATTRIBUTES @AT@ 2301 @LENGTH@ 31
------UPD SimpleName@@LoadMetricDefinition @TO@ CustomLoadMetricDefinition @AT@ 2301 @LENGTH@ 20


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build()] @TO@ static, final, SimpleAttributeDefinition, [READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build()] @AT@ 3246 @LENGTH@ 281
---UPD VariableDeclarationFragment@@READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @TO@ READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @AT@ 3285 @LENGTH@ 241
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @AT@ 3309 @LENGTH@ 217
---------UPD MethodInvocation@@MethodName:create:[ModelDescriptionConstants.READ_ONLY, ModelType.STRING, true] @TO@ MethodName:create:[ModelDescriptionConstants.READ_ONLY, ModelType.BOOLEAN, true] @AT@ 3309 @LENGTH@ 100
------------UPD QualifiedName@@ModelType.STRING @TO@ ModelType.BOOLEAN @AT@ 3386 @LENGTH@ 16
---------------UPD SimpleName@@STRING @TO@ BOOLEAN @AT@ 3396 @LENGTH@ 6


INS MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @TO@ TypeDeclaration@@[public]Hadoop20Shims, [HadoopShims] @AT@ 17027 @LENGTH@ 66
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 17027 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 17034 @LENGTH@ 6
---INS SimpleName@@MethodName:unquoteHtmlChars @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 17041 @LENGTH@ 16
---INS SingleVariableDeclaration@@String item @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 17058 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String item @AT@ 17058 @LENGTH@ 6
------INS SimpleName@@item @TO@ SingleVariableDeclaration@@String item @AT@ 17065 @LENGTH@ 4
---INS ReturnStatement@@SimpleName:item @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 17077 @LENGTH@ 12
------INS SimpleName@@item @TO@ ReturnStatement@@SimpleName:item @AT@ 17084 @LENGTH@ 4


UPD MethodDeclaration@@private, String, MethodName:getKeyPassword,  @TO@ public, String, MethodName:getKeyPassword,  @AT@ 13271 @LENGTH@ 72
---UPD Modifier@@private @TO@ public @AT@ 13271 @LENGTH@ 7


INS MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @TO@ TypeDeclaration@@[public]CommandFormat, [CommandLineFormat] @AT@ 1658 @LENGTH@ 94
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1658 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1665 @LENGTH@ 7
---INS SimpleName@@MethodName:isPropertySeparator @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1673 @LENGTH@ 19
---INS SingleVariableDeclaration@@char ch @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1693 @LENGTH@ 7
------INS PrimitiveType@@char @TO@ SingleVariableDeclaration@@char ch @AT@ 1693 @LENGTH@ 4
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@char ch @AT@ 1698 @LENGTH@ 2
---INS ReturnStatement@@MethodInvocation:Character.isWhitespace(ch) @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1712 @LENGTH@ 34
------INS MethodInvocation@@Character.isWhitespace(ch) @TO@ ReturnStatement@@MethodInvocation:Character.isWhitespace(ch) @AT@ 1719 @LENGTH@ 26
---------INS SimpleName@@Name:Character @TO@ MethodInvocation@@Character.isWhitespace(ch) @AT@ 1719 @LENGTH@ 9
---------INS SimpleName@@MethodName:isWhitespace:[ch] @TO@ MethodInvocation@@Character.isWhitespace(ch) @AT@ 1729 @LENGTH@ 16
------------INS SimpleName@@ch @TO@ SimpleName@@MethodName:isWhitespace:[ch] @AT@ 1742 @LENGTH@ 2


UPD MethodDeclaration@@public, void, MethodName:foo,  @TO@ public, void, MethodName:createsIndexForConfiguredMappingContextOnly,  @AT@ 1709 @LENGTH@ 357
---UPD SimpleName@@MethodName:foo @TO@ MethodName:createsIndexForConfiguredMappingContextOnly @AT@ 1721 @LENGTH@ 3
---UPD ExpressionStatement@@Assignment:indexInfo=templateTwo.indexOps(SampleEntity.class).getIndexInfo() @TO@ Assignment:indexInfo=templateTwo.indexOps("sampleEntity").getIndexInfo() @AT@ 1958 @LENGTH@ 68
------UPD Assignment@@indexInfo=templateTwo.indexOps(SampleEntity.class).getIndexInfo() @TO@ indexInfo=templateTwo.indexOps("sampleEntity").getIndexInfo() @AT@ 1958 @LENGTH@ 67
---------UPD MethodInvocation@@templateTwo.indexOps(SampleEntity.class).getIndexInfo() @TO@ templateTwo.indexOps("sampleEntity").getIndexInfo() @AT@ 1970 @LENGTH@ 55
------------UPD MethodInvocation@@MethodName:indexOps:[SampleEntity.class] @TO@ MethodName:indexOps:["sampleEntity"] @AT@ 1970 @LENGTH@ 40
---------------DEL TypeLiteral@@SampleEntity.class @AT@ 1991 @LENGTH@ 18
---------------INS StringLiteral@@"sampleEntity" @TO@ MethodInvocation@@MethodName:indexOps:[SampleEntity.class] @AT@ 2031 @LENGTH@ 14


UPD FieldDeclaration@@public, static, final, SimpleOperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build()] @TO@ public, static, final, SimpleOperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build()] @AT@ 3268 @LENGTH@ 308
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build() @AT@ 3314 @LENGTH@ 261
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).setReplyType(ModelType.OBJECT).setReplyValueType(ModelType.OBJECT).build() @TO@ new SimpleOperationDefinitionBuilder(WHOAMI,ControllerResolver.getResolver("core","management")).setParameters(VERBOSE).build() @AT@ 3327 @LENGTH@ 248
---------DEL MethodInvocation@@MethodName:setReplyValueType:[ModelType.OBJECT] @AT@ 3327 @LENGTH@ 227
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 3537 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 3537 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 3547 @LENGTH@ 6
---------DEL MethodInvocation@@MethodName:setReplyType:[ModelType.OBJECT] @AT@ 3327 @LENGTH@ 178
------------DEL QualifiedName@@ModelType.OBJECT @AT@ 3488 @LENGTH@ 16
---------------DEL SimpleName@@ModelType @AT@ 3488 @LENGTH@ 9
---------------DEL SimpleName@@OBJECT @AT@ 3498 @LENGTH@ 6


UPD MethodDeclaration@@public, static, List<String>, MethodName:getAllReferencingServerGroups, String deploymentName, ModelControllerClient client, CommandLineException,  @TO@ public, static, List<String>, MethodName:getServerGroupsReferencingDeployment, String deploymentName, ModelControllerClient client, CommandLineException,  @AT@ 16770 @LENGTH@ 1694
---UPD SimpleName@@MethodName:getAllReferencingServerGroups @TO@ MethodName:getServerGroupsReferencingDeployment @AT@ 16797 @LENGTH@ 29


UPD EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @TO@ for (Policy policy : this) {  if (policy == null)   continue;  List<Scope> scopes=policy.scope;  if (scopes == null || scopes.isEmpty())   continue;  Scope scope=scopes.get(0);  if (scope != null) {    FilterElement filterElement=scope.filterElement;    if (filterElement != null && filterElement.equals(e)) {      answer.add(policy);    }  }} @AT@ 1142 @LENGTH@ 324
---DEL IfStatement@@if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {  continue;} @AT@ 1320 @LENGTH@ 119
------DEL InfixExpression@@policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e @AT@ 1324 @LENGTH@ 93
---------DEL InfixExpression@@policy.scope.size() == 0 || policy.scope.size() > 1 @AT@ 1324 @LENGTH@ 51
------------DEL InfixExpression@@policy.scope.size() > 1 @AT@ 1352 @LENGTH@ 23
---------------DEL Operator@@> @AT@ 1371 @LENGTH@ 1
---------------DEL NumberLiteral@@1 @AT@ 1374 @LENGTH@ 1
---------DEL Operator@@|| @AT@ 1375 @LENGTH@ 2
---------DEL InfixExpression@@policy.scope.get(0).filterElement != e @AT@ 1379 @LENGTH@ 38
------------DEL FieldAccess@@policy.scope.get(0).filterElement @AT@ 1379 @LENGTH@ 33
---------------DEL MethodInvocation@@policy.scope.get(0) @AT@ 1379 @LENGTH@ 19
------------------DEL QualifiedName@@Name:policy.scope @AT@ 1379 @LENGTH@ 12
---------------DEL SimpleName@@filterElement @AT@ 1399 @LENGTH@ 13
------------DEL SimpleName@@e @AT@ 1416 @LENGTH@ 1
---INS IfStatement@@if (policy == null) continue; @TO@ EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @AT@ 1352 @LENGTH@ 29
------INS InfixExpression@@policy == null @TO@ IfStatement@@if (policy == null) continue; @AT@ 1356 @LENGTH@ 14
---------INS SimpleName@@policy @TO@ InfixExpression@@policy == null @AT@ 1356 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@policy == null @AT@ 1362 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@policy == null @AT@ 1366 @LENGTH@ 4
------INS Block@@ThenBody:continue; @TO@ IfStatement@@if (policy == null) continue; @AT@ 1372 @LENGTH@ 9
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:continue; @AT@ 1372 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<Scope> scopes=policy.scope; @TO@ EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @AT@ 1394 @LENGTH@ 34
------INS ParameterizedType@@List<Scope> @TO@ VariableDeclarationStatement@@List<Scope> scopes=policy.scope; @AT@ 1394 @LENGTH@ 11
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Scope> @AT@ 1394 @LENGTH@ 4
---------INS SimpleType@@Scope @TO@ ParameterizedType@@List<Scope> @AT@ 1399 @LENGTH@ 5
------INS VariableDeclarationFragment@@scopes=policy.scope @TO@ VariableDeclarationStatement@@List<Scope> scopes=policy.scope; @AT@ 1406 @LENGTH@ 21
---------INS SimpleName@@scopes @TO@ VariableDeclarationFragment@@scopes=policy.scope @AT@ 1406 @LENGTH@ 6
---------INS QualifiedName@@policy.scope @TO@ VariableDeclarationFragment@@scopes=policy.scope @AT@ 1415 @LENGTH@ 12
------------INS SimpleName@@policy @TO@ QualifiedName@@policy.scope @AT@ 1415 @LENGTH@ 6
------------INS SimpleName@@scope @TO@ QualifiedName@@policy.scope @AT@ 1422 @LENGTH@ 5
---INS IfStatement@@if (scopes == null || scopes.isEmpty()) continue; @TO@ EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @AT@ 1441 @LENGTH@ 49
------INS InfixExpression@@scopes == null || scopes.isEmpty() @TO@ IfStatement@@if (scopes == null || scopes.isEmpty()) continue; @AT@ 1445 @LENGTH@ 34
---------MOV InfixExpression@@policy.scope.size() == 0 @TO@ InfixExpression@@scopes == null || scopes.isEmpty() @AT@ 1324 @LENGTH@ 24
------------DEL MethodInvocation@@policy.scope.size() @AT@ 1324 @LENGTH@ 19
---------------DEL QualifiedName@@Name:policy.scope @AT@ 1324 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:size:[] @AT@ 1337 @LENGTH@ 6
------------DEL NumberLiteral@@0 @AT@ 1347 @LENGTH@ 1
------------INS SimpleName@@scopes @TO@ InfixExpression@@policy.scope.size() == 0 @AT@ 1445 @LENGTH@ 6
------------INS NullLiteral@@null @TO@ InfixExpression@@policy.scope.size() == 0 @AT@ 1455 @LENGTH@ 4
---------MOV Operator@@|| @TO@ InfixExpression@@scopes == null || scopes.isEmpty() @AT@ 1348 @LENGTH@ 2
---------MOV MethodInvocation@@policy.scope.size() @TO@ InfixExpression@@scopes == null || scopes.isEmpty() @AT@ 1352 @LENGTH@ 19
------------DEL QualifiedName@@Name:policy.scope @AT@ 1352 @LENGTH@ 12
------------UPD SimpleName@@MethodName:size:[] @TO@ MethodName:isEmpty:[] @AT@ 1365 @LENGTH@ 6
------------INS SimpleName@@Name:scopes @TO@ MethodInvocation@@policy.scope.size() @AT@ 1463 @LENGTH@ 6
------INS Block@@ThenBody:continue; @TO@ IfStatement@@if (scopes == null || scopes.isEmpty()) continue; @AT@ 1481 @LENGTH@ 9
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:continue; @AT@ 1481 @LENGTH@ 9
---INS VariableDeclarationStatement@@Scope scope=scopes.get(0); @TO@ EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @AT@ 1503 @LENGTH@ 28
------INS SimpleType@@Scope @TO@ VariableDeclarationStatement@@Scope scope=scopes.get(0); @AT@ 1503 @LENGTH@ 5
------INS VariableDeclarationFragment@@scope=scopes.get(0) @TO@ VariableDeclarationStatement@@Scope scope=scopes.get(0); @AT@ 1509 @LENGTH@ 21
---------INS SimpleName@@scope @TO@ VariableDeclarationFragment@@scope=scopes.get(0) @AT@ 1509 @LENGTH@ 5
---------INS MethodInvocation@@scopes.get(0) @TO@ VariableDeclarationFragment@@scope=scopes.get(0) @AT@ 1517 @LENGTH@ 13
------------MOV SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@scopes.get(0) @AT@ 1392 @LENGTH@ 6
------------INS SimpleName@@Name:scopes @TO@ MethodInvocation@@scopes.get(0) @AT@ 1517 @LENGTH@ 6
---INS IfStatement@@if (scope != null) {  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @TO@ EnhancedForStatement@@for (Policy policy : this) {  if (policy.scope.size() == 0 || policy.scope.size() > 1 || policy.scope.get(0).filterElement != e) {    continue;  }  answer.add(policy);} @AT@ 1544 @LENGTH@ 231
------INS InfixExpression@@scope != null @TO@ IfStatement@@if (scope != null) {  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @AT@ 1548 @LENGTH@ 13
---------INS SimpleName@@scope @TO@ InfixExpression@@scope != null @AT@ 1548 @LENGTH@ 5
---------INS Operator@@!= @TO@ InfixExpression@@scope != null @AT@ 1553 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@scope != null @AT@ 1557 @LENGTH@ 4
------INS Block@@ThenBody:{  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @TO@ IfStatement@@if (scope != null) {  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @AT@ 1563 @LENGTH@ 212
---------INS VariableDeclarationStatement@@FilterElement filterElement=scope.filterElement; @TO@ Block@@ThenBody:{  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @AT@ 1581 @LENGTH@ 50
------------INS SimpleType@@FilterElement @TO@ VariableDeclarationStatement@@FilterElement filterElement=scope.filterElement; @AT@ 1581 @LENGTH@ 13
------------INS VariableDeclarationFragment@@filterElement=scope.filterElement @TO@ VariableDeclarationStatement@@FilterElement filterElement=scope.filterElement; @AT@ 1595 @LENGTH@ 35
---------------INS SimpleName@@filterElement @TO@ VariableDeclarationFragment@@filterElement=scope.filterElement @AT@ 1595 @LENGTH@ 13
---------------INS QualifiedName@@scope.filterElement @TO@ VariableDeclarationFragment@@filterElement=scope.filterElement @AT@ 1611 @LENGTH@ 19
------------------INS SimpleName@@scope @TO@ QualifiedName@@scope.filterElement @AT@ 1611 @LENGTH@ 5
------------------INS SimpleName@@filterElement @TO@ QualifiedName@@scope.filterElement @AT@ 1617 @LENGTH@ 13
---------INS IfStatement@@if (filterElement != null && filterElement.equals(e)) {  answer.add(policy);} @TO@ Block@@ThenBody:{  FilterElement filterElement=scope.filterElement;  if (filterElement != null && filterElement.equals(e)) {    answer.add(policy);  }} @AT@ 1648 @LENGTH@ 113
------------MOV Block@@ThenBody:{  continue;} @TO@ IfStatement@@if (filterElement != null && filterElement.equals(e)) {  answer.add(policy);} @AT@ 1419 @LENGTH@ 20
---------------DEL ContinueStatement@@ @AT@ 1425 @LENGTH@ 9
---------------MOV ExpressionStatement@@MethodInvocation:answer.add(policy) @TO@ Block@@ThenBody:{  continue;} @AT@ 1443 @LENGTH@ 19
------------INS InfixExpression@@filterElement != null && filterElement.equals(e) @TO@ IfStatement@@if (filterElement != null && filterElement.equals(e)) {  answer.add(policy);} @AT@ 1652 @LENGTH@ 48
---------------INS InfixExpression@@filterElement != null @TO@ InfixExpression@@filterElement != null && filterElement.equals(e) @AT@ 1652 @LENGTH@ 21
------------------MOV Operator@@!= @TO@ InfixExpression@@filterElement != null @AT@ 1412 @LENGTH@ 2
------------------INS SimpleName@@filterElement @TO@ InfixExpression@@filterElement != null @AT@ 1652 @LENGTH@ 13
------------------INS NullLiteral@@null @TO@ InfixExpression@@filterElement != null @AT@ 1669 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@filterElement != null && filterElement.equals(e) @AT@ 1673 @LENGTH@ 2
---------------INS MethodInvocation@@filterElement.equals(e) @TO@ InfixExpression@@filterElement != null && filterElement.equals(e) @AT@ 1677 @LENGTH@ 23
------------------INS SimpleName@@Name:filterElement @TO@ MethodInvocation@@filterElement.equals(e) @AT@ 1677 @LENGTH@ 13
------------------INS SimpleName@@MethodName:equals:[e] @TO@ MethodInvocation@@filterElement.equals(e) @AT@ 1691 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:equals:[e] @AT@ 1698 @LENGTH@ 1


UPD EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @TO@ for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  domainOperationContext.recordHostRequest(host,finalResult);  finalResults.put(host,finalResult);} @AT@ 3845 @LENGTH@ 1004
---INS ExpressionStatement@@MethodInvocation:domainOperationContext.recordHostRequest(host,finalResult) @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4803 @LENGTH@ 60
------INS MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @TO@ ExpressionStatement@@MethodInvocation:domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4803 @LENGTH@ 59
---------INS SimpleName@@Name:domainOperationContext @TO@ MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4803 @LENGTH@ 22
---------INS SimpleName@@MethodName:recordHostRequest:[host, finalResult] @TO@ MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4826 @LENGTH@ 36
------------INS SimpleName@@host @TO@ SimpleName@@MethodName:recordHostRequest:[host, finalResult] @AT@ 4844 @LENGTH@ 4
------------INS SimpleName@@finalResult @TO@ SimpleName@@MethodName:recordHostRequest:[host, finalResult] @AT@ 4850 @LENGTH@ 11


UPD MethodDeclaration@@public, static, Predicate<E>, E, MethodName:uniquePredicate,  @TO@ public, static, Predicate<T>, T, MethodName:uniquePredicate,  @AT@ 1567 @LENGTH@ 97
---UPD ParameterizedType@@Predicate<E> @TO@ Predicate<T> @AT@ 1585 @LENGTH@ 12
------UPD SimpleType@@E @TO@ T @AT@ 1595 @LENGTH@ 1
---UPD ReturnStatement@@ClassInstanceCreation:new UniquePredicate<E>() @TO@ ClassInstanceCreation:new UniquePredicate<T>() @AT@ 1626 @LENGTH@ 32
------UPD ClassInstanceCreation@@UniquePredicate<E>[] @TO@ UniquePredicate<T>[] @AT@ 1633 @LENGTH@ 24
---------UPD ParameterizedType@@UniquePredicate<E> @TO@ UniquePredicate<T> @AT@ 1637 @LENGTH@ 18
------------UPD SimpleType@@E @TO@ T @AT@ 1653 @LENGTH@ 1


UPD IfStatement@@if (content.hasDefined(HASH)) {  managedContentValidator.validate(content);  hash=content.require(HASH).asBytes();  addFromHash(hash,name,path,context);} else {  hash=addFromContentAdditionParameter(context,content);} @TO@ if (content.hasDefined(HASH)) {  managedContentValidator.validate(content);  hash=content.require(HASH).asBytes();  addFromHash(hash,name,path,context);} else {  hash=addFromContentAdditionParameter(context,content);  if (remoteRepository != null) {    remoteRepository.getDeploymentFiles(hash);  }} @AT@ 4939 @LENGTH@ 287
---UPD Block@@ElseBody:{  hash=addFromContentAdditionParameter(context,content);} @TO@ ElseBody:{  hash=addFromContentAdditionParameter(context,content);  if (remoteRepository != null) {    remoteRepository.getDeploymentFiles(hash);  }} @AT@ 5145 @LENGTH@ 81
------INS IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @TO@ Block@@ElseBody:{  hash=addFromContentAdditionParameter(context,content);} @AT@ 5229 @LENGTH@ 104
---------INS InfixExpression@@remoteRepository != null @TO@ IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @AT@ 5233 @LENGTH@ 24
------------INS SimpleName@@remoteRepository @TO@ InfixExpression@@remoteRepository != null @AT@ 5233 @LENGTH@ 16
------------INS Operator@@!= @TO@ InfixExpression@@remoteRepository != null @AT@ 5249 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@remoteRepository != null @AT@ 5253 @LENGTH@ 4
---------INS Block@@ThenBody:{  remoteRepository.getDeploymentFiles(hash);} @TO@ IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @AT@ 5259 @LENGTH@ 74
------------INS ExpressionStatement@@MethodInvocation:remoteRepository.getDeploymentFiles(hash) @TO@ Block@@ThenBody:{  remoteRepository.getDeploymentFiles(hash);} @AT@ 5277 @LENGTH@ 42
---------------INS MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @TO@ ExpressionStatement@@MethodInvocation:remoteRepository.getDeploymentFiles(hash) @AT@ 5277 @LENGTH@ 41
------------------INS SimpleName@@Name:remoteRepository @TO@ MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @AT@ 5277 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getDeploymentFiles:[hash] @TO@ MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @AT@ 5294 @LENGTH@ 24
---------------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:getDeploymentFiles:[hash] @AT@ 5313 @LENGTH@ 4


DEL SuperConstructorInvocation@@super();
 @AT@ 1678 @LENGTH@ 8


DEL ExpressionStatement@@MethodInvocation:System.out.println(model) @AT@ 4367 @LENGTH@ 26
---DEL MethodInvocation@@System.out.println(model) @AT@ 4367 @LENGTH@ 25
------DEL QualifiedName@@Name:System.out @AT@ 4367 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[model] @AT@ 4378 @LENGTH@ 14
---------DEL SimpleName@@model @AT@ 4386 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:RepositoryExporterHandlerMapping, EntityManagerFactory entityManagerFactory,  @TO@ public, voidMethodName:RepositoryExporterHandlerMapping,  @AT@ 503 @LENGTH@ 184
---DEL SingleVariableDeclaration@@EntityManagerFactory entityManagerFactory @AT@ 543 @LENGTH@ 41
------DEL SimpleType@@EntityManagerFactory @AT@ 543 @LENGTH@ 20
------DEL SimpleName@@entityManagerFactory @AT@ 564 @LENGTH@ 20
---DEL ExpressionStatement@@Assignment:this.entityManagerFactory=entityManagerFactory @AT@ 592 @LENGTH@ 49
------DEL Assignment@@this.entityManagerFactory=entityManagerFactory @AT@ 592 @LENGTH@ 48
---------DEL FieldAccess@@this.entityManagerFactory @AT@ 592 @LENGTH@ 25
------------DEL ThisExpression@@this @AT@ 592 @LENGTH@ 4
------------DEL SimpleName@@entityManagerFactory @AT@ 597 @LENGTH@ 20
---------DEL Operator@@= @AT@ 617 @LENGTH@ 1
---------DEL SimpleName@@entityManagerFactory @AT@ 620 @LENGTH@ 20


UPD TryStatement@@try {  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @TO@ try {  if (transformedOperation != null) {    transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));    if (operation != transformedOperation) {      transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);    }  }  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 5135 @LENGTH@ 607
---INS IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @TO@ TryStatement@@try {  final AsyncFuture<ModelNode> result=client.execute(subsystemListener,proxyOperation);  return new ExecutedHostRequest(result,transformationResult);} catch (IOException e) {  final TransactionalProtocolClient.PreparedOperation<ProxyOperation> result=BlockingQueueOperationListener.FailedOperation.create(proxyOperation,e);  subsystemListener.operationPrepared(result);  return new ExecutedHostRequest(result.getFinalResult(),transformationResult);} @AT@ 5463 @LENGTH@ 519
------INS InfixExpression@@transformedOperation != null @TO@ IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5466 @LENGTH@ 28
---------INS SimpleName@@transformedOperation @TO@ InfixExpression@@transformedOperation != null @AT@ 5466 @LENGTH@ 20
---------INS Operator@@!= @TO@ InfixExpression@@transformedOperation != null @AT@ 5486 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@transformedOperation != null @AT@ 5490 @LENGTH@ 4
------INS Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @TO@ IfStatement@@if (transformedOperation != null) {  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5496 @LENGTH@ 486
---------INS ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5518 @LENGTH@ 82
------------INS MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @TO@ ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 81
---------------INS MethodInvocation@@MethodName:get:[OPERATION_HEADERS] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 43
------------------INS SimpleName@@OPERATION_HEADERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS] @AT@ 5543 @LENGTH@ 17
---------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5518 @LENGTH@ 20
---------------INS SimpleName@@MethodName:set:[operation.get(OPERATION_HEADERS)] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS)) @AT@ 5562 @LENGTH@ 37
------------------INS MethodInvocation@@operation.get(OPERATION_HEADERS) @TO@ SimpleName@@MethodName:set:[operation.get(OPERATION_HEADERS)] @AT@ 5566 @LENGTH@ 32
---------------------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.get(OPERATION_HEADERS) @AT@ 5566 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:get:[OPERATION_HEADERS] @TO@ MethodInvocation@@operation.get(OPERATION_HEADERS) @AT@ 5576 @LENGTH@ 22
------------------------INS SimpleName@@OPERATION_HEADERS @TO@ SimpleName@@MethodName:get:[OPERATION_HEADERS] @AT@ 5580 @LENGTH@ 17
---------INS IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS).set(operation.get(OPERATION_HEADERS));  if (operation != transformedOperation) {    transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);  }} @AT@ 5688 @LENGTH@ 276
------------INS InfixExpression@@operation != transformedOperation @TO@ IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5691 @LENGTH@ 33
---------------INS SimpleName@@operation @TO@ InfixExpression@@operation != transformedOperation @AT@ 5691 @LENGTH@ 9
---------------INS Operator@@!= @TO@ InfixExpression@@operation != transformedOperation @AT@ 5700 @LENGTH@ 2
---------------INS SimpleName@@transformedOperation @TO@ InfixExpression@@operation != transformedOperation @AT@ 5704 @LENGTH@ 20
------------INS Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @TO@ IfStatement@@if (operation != transformedOperation) {  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5726 @LENGTH@ 238
---------------INS ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @TO@ Block@@ThenBody:{  transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true);} @AT@ 5832 @LENGTH@ 110
------------------INS MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @TO@ ExpressionStatement@@MethodInvocation:transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 109
---------------------INS MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 99
------------------------INS SimpleName@@OPERATION_HEADERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @AT@ 5857 @LENGTH@ 17
------------------------INS QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @TO@ MethodInvocation@@MethodName:get:[OPERATION_HEADERS, ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS] @AT@ 5876 @LENGTH@ 54
---------------------------INS SimpleName@@ServerOperationsResolverHandler @TO@ QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @AT@ 5876 @LENGTH@ 31
---------------------------INS SimpleName@@DOMAIN_PUSH_TO_SERVERS @TO@ QualifiedName@@ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS @AT@ 5908 @LENGTH@ 22
---------------------INS SimpleName@@Name:transformedOperation @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5832 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:set:[true] @TO@ MethodInvocation@@transformedOperation.get(OPERATION_HEADERS,ServerOperationsResolverHandler.DOMAIN_PUSH_TO_SERVERS).set(true) @AT@ 5932 @LENGTH@ 9
------------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:set:[true] @AT@ 5936 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:this.establishDeployedContentList(this.deploymentDir) @TO@ MethodDeclaration@@void, MethodName:oneOffScan, final DeploymentOperations deploymentOperations,  @AT@ 13448 @LENGTH@ 54
---INS MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @TO@ ExpressionStatement@@MethodInvocation:this.establishDeployedContentList(this.deploymentDir) @AT@ 13448 @LENGTH@ 53
------INS ThisExpression@@this @TO@ MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @AT@ 13448 @LENGTH@ 4
------INS SimpleName@@MethodName:establishDeployedContentList:[this.deploymentDir] @TO@ MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @AT@ 13453 @LENGTH@ 48
---------INS FieldAccess@@this.deploymentDir @TO@ SimpleName@@MethodName:establishDeployedContentList:[this.deploymentDir] @AT@ 13482 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.deploymentDir @AT@ 13482 @LENGTH@ 4
------------INS SimpleName@@deploymentDir @TO@ FieldAccess@@this.deploymentDir @AT@ 13487 @LENGTH@ 13


UPD IfStatement@@if ("links".equals(name)) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @TO@ if ("links".equals(name)) {  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    }  } else {    throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");  }  continue;} @AT@ 10450 @LENGTH@ 191
---INS Block@@ThenBody:{  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    }  } else {    throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");  }  continue;} @TO@ IfStatement@@if ("links".equals(name)) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @AT@ 10475 @LENGTH@ 471
------INS IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }} else {  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @TO@ Block@@ThenBody:{  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    }  } else {    throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");  }  continue;} @AT@ 10491 @LENGTH@ 417
---------MOV Block@@ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @TO@ IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }} else {  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @AT@ 10475 @LENGTH@ 166
------------DEL ContinueStatement@@ @AT@ 10618 @LENGTH@ 9
---------INS InfixExpression@@(tok=jp.nextToken()) == JsonToken.START_ARRAY @TO@ IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }} else {  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @AT@ 10494 @LENGTH@ 47
------------INS ParenthesizedExpression@@(tok=jp.nextToken()) @TO@ InfixExpression@@(tok=jp.nextToken()) == JsonToken.START_ARRAY @AT@ 10494 @LENGTH@ 22
---------------INS Assignment@@tok=jp.nextToken() @TO@ ParenthesizedExpression@@(tok=jp.nextToken()) @AT@ 10495 @LENGTH@ 20
------------------INS SimpleName@@tok @TO@ Assignment@@tok=jp.nextToken() @AT@ 10495 @LENGTH@ 3
------------------INS Operator@@= @TO@ Assignment@@tok=jp.nextToken() @AT@ 10498 @LENGTH@ 1
------------------INS MethodInvocation@@jp.nextToken() @TO@ Assignment@@tok=jp.nextToken() @AT@ 10501 @LENGTH@ 14
---------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.nextToken() @AT@ 10501 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:nextToken:[] @TO@ MethodInvocation@@jp.nextToken() @AT@ 10504 @LENGTH@ 11
------------INS Operator@@== @TO@ InfixExpression@@(tok=jp.nextToken()) == JsonToken.START_ARRAY @AT@ 10516 @LENGTH@ 2
------------INS QualifiedName@@JsonToken.START_ARRAY @TO@ InfixExpression@@(tok=jp.nextToken()) == JsonToken.START_ARRAY @AT@ 10520 @LENGTH@ 21
---------------INS SimpleName@@JsonToken @TO@ QualifiedName@@JsonToken.START_ARRAY @AT@ 10520 @LENGTH@ 9
---------------INS SimpleName@@START_ARRAY @TO@ QualifiedName@@JsonToken.START_ARRAY @AT@ 10530 @LENGTH@ 11
---------INS Block@@ElseBody:{  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @TO@ IfStatement@@if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }} else {  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @AT@ 10699 @LENGTH@ 209
------------INS ThrowStatement@@ClassInstanceCreation:new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.") @TO@ Block@@ElseBody:{  throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");} @AT@ 10717 @LENGTH@ 175
---------------INS ClassInstanceCreation@@HttpMessageNotReadableException["Property 'links' is not of array type. Either eliminate this property from the document or make it an array."] @TO@ ThrowStatement@@ClassInstanceCreation:new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.") @AT@ 10723 @LENGTH@ 168
------------------INS New@@new @TO@ ClassInstanceCreation@@HttpMessageNotReadableException["Property 'links' is not of array type. Either eliminate this property from the document or make it an array."] @AT@ 10723 @LENGTH@ 3
------------------INS SimpleType@@HttpMessageNotReadableException @TO@ ClassInstanceCreation@@HttpMessageNotReadableException["Property 'links' is not of array type. Either eliminate this property from the document or make it an array."] @AT@ 10727 @LENGTH@ 31
------------------INS StringLiteral@@"Property 'links' is not of array type. Either eliminate this property from the document or make it an array." @TO@ ClassInstanceCreation@@HttpMessageNotReadableException["Property 'links' is not of array type. Either eliminate this property from the document or make it an array."] @AT@ 10780 @LENGTH@ 110
------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {    while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {    }  } else {    throw new HttpMessageNotReadableException("Property 'links' is not of array type. Either eliminate this property from the document or make it an array.");  }  continue;} @AT@ 10923 @LENGTH@ 9
---UPD Block@@ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @TO@ ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }} @AT@ 10475 @LENGTH@ 166


UPD ExpressionStatement@@Assignment:value=System.getProperty(value,"") @TO@ Assignment:value=System.getProperty(key,"") @AT@ 7395 @LENGTH@ 38
---UPD Assignment@@value=System.getProperty(value,"") @TO@ value=System.getProperty(key,"") @AT@ 7395 @LENGTH@ 37
------UPD MethodInvocation@@System.getProperty(value,"") @TO@ System.getProperty(key,"") @AT@ 7403 @LENGTH@ 29
---------UPD SimpleName@@MethodName:getProperty:[value, ""] @TO@ MethodName:getProperty:[key, ""] @AT@ 7410 @LENGTH@ 22
------------UPD SimpleName@@value @TO@ key @AT@ 7422 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:assertEquals(1,ids.size()) @AT@ 6359 @LENGTH@ 28
---DEL MethodInvocation@@assertEquals(1,ids.size()) @AT@ 6359 @LENGTH@ 27
------DEL SimpleName@@MethodName:assertEquals:[1, ids.size()] @AT@ 6359 @LENGTH@ 27
---------DEL NumberLiteral@@1 @AT@ 6372 @LENGTH@ 1
---------DEL MethodInvocation@@ids.size() @AT@ 6375 @LENGTH@ 10
------------DEL SimpleName@@Name:ids @AT@ 6375 @LENGTH@ 3
------------DEL SimpleName@@MethodName:size:[] @AT@ 6379 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:processMessage(messageListener,message,null) @TO@ MethodInvocation:processMessage(messageListener,message,message.getChannel()) @AT@ 20997 @LENGTH@ 47
---UPD MethodInvocation@@processMessage(messageListener,message,null) @TO@ processMessage(messageListener,message,message.getChannel()) @AT@ 20997 @LENGTH@ 46
------UPD SimpleName@@MethodName:processMessage:[messageListener, message, null] @TO@ MethodName:processMessage:[messageListener, message, message.getChannel()] @AT@ 20997 @LENGTH@ 46
---------INS MethodInvocation@@message.getChannel() @TO@ SimpleName@@MethodName:processMessage:[messageListener, message, null] @AT@ 21038 @LENGTH@ 20
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getChannel() @AT@ 21038 @LENGTH@ 7
------------INS SimpleName@@MethodName:getChannel:[] @TO@ MethodInvocation@@message.getChannel() @AT@ 21046 @LENGTH@ 12
---------DEL NullLiteral@@null @AT@ 21038 @LENGTH@ 4


INS MethodDeclaration@@private, voidMethodName:TimedTaskManagerFactory,  @TO@ TypeDeclaration@@[public, final]TimedTaskManagerFactory,  @AT@ 1060 @LENGTH@ 41
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:TimedTaskManagerFactory,  @AT@ 1060 @LENGTH@ 7
---INS SimpleName@@MethodName:TimedTaskManagerFactory @TO@ MethodDeclaration@@private, voidMethodName:TimedTaskManagerFactory,  @AT@ 1068 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @TO@ TypeDeclaration@@[public]LogFormatterTest, ContextTestSupport @AT@ 1360 @LENGTH@ 196
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @AT@ 1360 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @AT@ 1367 @LENGTH@ 4
---INS SimpleName@@MethodName:testSendMessageToLogAllOff @TO@ MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @AT@ 1372 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @AT@ 1408 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:template.sendBody("log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false","Hello World") @TO@ MethodDeclaration@@public, void, MethodName:testSendMessageToLogAllOff, Exception,  @AT@ 1428 @LENGTH@ 122
------INS MethodInvocation@@template.sendBody("log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false","Hello World") @TO@ ExpressionStatement@@MethodInvocation:template.sendBody("log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false","Hello World") @AT@ 1428 @LENGTH@ 121
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.sendBody("log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false","Hello World") @AT@ 1428 @LENGTH@ 8
---------INS SimpleName@@MethodName:sendBody:["log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false", "Hello World"] @TO@ MethodInvocation@@template.sendBody("log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false","Hello World") @AT@ 1437 @LENGTH@ 112
------------INS StringLiteral@@"log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false" @TO@ SimpleName@@MethodName:sendBody:["log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false", "Hello World"] @AT@ 1446 @LENGTH@ 87
------------INS StringLiteral@@"Hello World" @TO@ SimpleName@@MethodName:sendBody:["log:org.apache.camel.TEST?showBody=false&showBodyType=false&showExchangePattern=false", "Hello World"] @AT@ 1535 @LENGTH@ 13


INS MethodDeclaration@@boolean, MethodName:updateValueIndex,  @TO@ TypeDeclaration@@[public]ParsingState,  @AT@ 1702 @LENGTH@ 19
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:updateValueIndex,  @AT@ 1694 @LENGTH@ 7
---INS SimpleName@@MethodName:updateValueIndex @TO@ MethodDeclaration@@boolean, MethodName:updateValueIndex,  @AT@ 1702 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:result.remove(CommonAttributes.EXPOSE_MODEL) @TO@ MethodDeclaration@@protected, ModelNode, MethodName:transformModel, TransformationContext context, ModelNode model,  @AT@ 7586 @LENGTH@ 45
---INS MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @TO@ ExpressionStatement@@MethodInvocation:result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7586 @LENGTH@ 44
------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7586 @LENGTH@ 6
------INS SimpleName@@MethodName:remove:[CommonAttributes.EXPOSE_MODEL] @TO@ MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7593 @LENGTH@ 37
---------INS QualifiedName@@CommonAttributes.EXPOSE_MODEL @TO@ SimpleName@@MethodName:remove:[CommonAttributes.EXPOSE_MODEL] @AT@ 7600 @LENGTH@ 29
------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.EXPOSE_MODEL @AT@ 7600 @LENGTH@ 16
------------INS SimpleName@@EXPOSE_MODEL @TO@ QualifiedName@@CommonAttributes.EXPOSE_MODEL @AT@ 7617 @LENGTH@ 12


UPD TypeDeclaration@@[public]SamplePropertyImpl, AnnotationBasedPersistentProperty<SampleProperty>[SampleProperty] @TO@ [public, static]SamplePropertyImpl, AnnotationBasedPersistentProperty<SampleProperty>[SampleProperty] @AT@ 3060 @LENGTH@ 508
---INS Modifier@@static @TO@ TypeDeclaration@@[public]SamplePropertyImpl, AnnotationBasedPersistentProperty<SampleProperty>[SampleProperty] @AT@ 3074 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, String, [JMS_REDELIVERED="JMSTimestamp"] @TO@ public, static, final, String, [JMS_REDELIVERED="JMSRedelivered"] @AT@ 2413 @LENGTH@ 60
---UPD VariableDeclarationFragment@@JMS_REDELIVERED="JMSTimestamp" @TO@ JMS_REDELIVERED="JMSRedelivered" @AT@ 2440 @LENGTH@ 32
------UPD StringLiteral@@"JMSTimestamp" @TO@ "JMSRedelivered" @AT@ 2458 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @TO@ TypeDeclaration@@[@SuppressWarnings("unchecked"), public]ProviderManagerTests,  @AT@ 11459 @LENGTH@ 856
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11459 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11466 @LENGTH@ 4
---INS SimpleName@@MethodName:statusExceptionIsPublished @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11471 @LENGTH@ 26
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11507 @LENGTH@ 9
---INS VariableDeclarationStatement@@AuthenticationManager parent=mock(AuthenticationManager.class); @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11527 @LENGTH@ 65
------INS SimpleType@@AuthenticationManager @TO@ VariableDeclarationStatement@@AuthenticationManager parent=mock(AuthenticationManager.class); @AT@ 11527 @LENGTH@ 21
------INS VariableDeclarationFragment@@parent=mock(AuthenticationManager.class) @TO@ VariableDeclarationStatement@@AuthenticationManager parent=mock(AuthenticationManager.class); @AT@ 11549 @LENGTH@ 42
---------INS SimpleName@@parent @TO@ VariableDeclarationFragment@@parent=mock(AuthenticationManager.class) @AT@ 11549 @LENGTH@ 6
---------INS MethodInvocation@@mock(AuthenticationManager.class) @TO@ VariableDeclarationFragment@@parent=mock(AuthenticationManager.class) @AT@ 11558 @LENGTH@ 33
------------INS SimpleName@@MethodName:mock:[AuthenticationManager.class] @TO@ MethodInvocation@@mock(AuthenticationManager.class) @AT@ 11558 @LENGTH@ 33
---------------INS TypeLiteral@@AuthenticationManager.class @TO@ SimpleName@@MethodName:mock:[AuthenticationManager.class] @AT@ 11563 @LENGTH@ 27
---INS VariableDeclarationStatement@@final LockedException expected=new LockedException(""); @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11601 @LENGTH@ 57
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final LockedException expected=new LockedException(""); @AT@ 11601 @LENGTH@ 5
------INS SimpleType@@LockedException @TO@ VariableDeclarationStatement@@final LockedException expected=new LockedException(""); @AT@ 11607 @LENGTH@ 15
------INS VariableDeclarationFragment@@expected=new LockedException("") @TO@ VariableDeclarationStatement@@final LockedException expected=new LockedException(""); @AT@ 11623 @LENGTH@ 34
---------INS SimpleName@@expected @TO@ VariableDeclarationFragment@@expected=new LockedException("") @AT@ 11623 @LENGTH@ 8
---------INS ClassInstanceCreation@@LockedException[""] @TO@ VariableDeclarationFragment@@expected=new LockedException("") @AT@ 11634 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@LockedException[""] @AT@ 11634 @LENGTH@ 3
------------INS SimpleType@@LockedException @TO@ ClassInstanceCreation@@LockedException[""] @AT@ 11638 @LENGTH@ 15
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@LockedException[""] @AT@ 11654 @LENGTH@ 2
---INS VariableDeclarationStatement@@ProviderManager mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent); @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11667 @LENGTH@ 119
------INS SimpleType@@ProviderManager @TO@ VariableDeclarationStatement@@ProviderManager mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent); @AT@ 11667 @LENGTH@ 15
------INS VariableDeclarationFragment@@mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent) @TO@ VariableDeclarationStatement@@ProviderManager mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent); @AT@ 11683 @LENGTH@ 102
---------INS SimpleName@@mgr @TO@ VariableDeclarationFragment@@mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent) @AT@ 11683 @LENGTH@ 3
---------INS ClassInstanceCreation@@ProviderManager[Arrays.asList(createProviderWhichThrows(expected)), parent] @TO@ VariableDeclarationFragment@@mgr=new ProviderManager(Arrays.asList(createProviderWhichThrows(expected)),parent) @AT@ 11689 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@ProviderManager[Arrays.asList(createProviderWhichThrows(expected)), parent] @AT@ 11689 @LENGTH@ 3
------------INS SimpleType@@ProviderManager @TO@ ClassInstanceCreation@@ProviderManager[Arrays.asList(createProviderWhichThrows(expected)), parent] @AT@ 11693 @LENGTH@ 15
------------INS MethodInvocation@@Arrays.asList(createProviderWhichThrows(expected)) @TO@ ClassInstanceCreation@@ProviderManager[Arrays.asList(createProviderWhichThrows(expected)), parent] @AT@ 11726 @LENGTH@ 50
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(createProviderWhichThrows(expected)) @AT@ 11726 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[createProviderWhichThrows(expected)] @TO@ MethodInvocation@@Arrays.asList(createProviderWhichThrows(expected)) @AT@ 11733 @LENGTH@ 43
------------------INS MethodInvocation@@createProviderWhichThrows(expected) @TO@ SimpleName@@MethodName:asList:[createProviderWhichThrows(expected)] @AT@ 11740 @LENGTH@ 35
---------------------INS SimpleName@@MethodName:createProviderWhichThrows:[expected] @TO@ MethodInvocation@@createProviderWhichThrows(expected) @AT@ 11740 @LENGTH@ 35
------------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:createProviderWhichThrows:[expected] @AT@ 11766 @LENGTH@ 8
------------INS SimpleName@@parent @TO@ ClassInstanceCreation@@ProviderManager[Arrays.asList(createProviderWhichThrows(expected)), parent] @AT@ 11778 @LENGTH@ 6
---INS VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11795 @LENGTH@ 58
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11795 @LENGTH@ 5
------INS SimpleType@@Authentication @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11801 @LENGTH@ 14
------INS VariableDeclarationFragment@@authReq=mock(Authentication.class) @TO@ VariableDeclarationStatement@@final Authentication authReq=mock(Authentication.class); @AT@ 11816 @LENGTH@ 36
---------INS SimpleName@@authReq @TO@ VariableDeclarationFragment@@authReq=mock(Authentication.class) @AT@ 11816 @LENGTH@ 7
---------INS MethodInvocation@@mock(Authentication.class) @TO@ VariableDeclarationFragment@@authReq=mock(Authentication.class) @AT@ 11826 @LENGTH@ 26
------------INS SimpleName@@MethodName:mock:[Authentication.class] @TO@ MethodInvocation@@mock(Authentication.class) @AT@ 11826 @LENGTH@ 26
---------------INS TypeLiteral@@Authentication.class @TO@ SimpleName@@MethodName:mock:[Authentication.class] @AT@ 11831 @LENGTH@ 20
---INS VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11862 @LENGTH@ 82
------INS SimpleType@@AuthenticationEventPublisher @TO@ VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @AT@ 11862 @LENGTH@ 28
------INS VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @TO@ VariableDeclarationStatement@@AuthenticationEventPublisher publisher=mock(AuthenticationEventPublisher.class); @AT@ 11891 @LENGTH@ 52
---------INS SimpleName@@publisher @TO@ VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @AT@ 11891 @LENGTH@ 9
---------INS MethodInvocation@@mock(AuthenticationEventPublisher.class) @TO@ VariableDeclarationFragment@@publisher=mock(AuthenticationEventPublisher.class) @AT@ 11903 @LENGTH@ 40
------------INS SimpleName@@MethodName:mock:[AuthenticationEventPublisher.class] @TO@ MethodInvocation@@mock(AuthenticationEventPublisher.class) @AT@ 11903 @LENGTH@ 40
---------------INS TypeLiteral@@AuthenticationEventPublisher.class @TO@ SimpleName@@MethodName:mock:[AuthenticationEventPublisher.class] @AT@ 11908 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:mgr.setAuthenticationEventPublisher(publisher) @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 11953 @LENGTH@ 47
------INS MethodInvocation@@mgr.setAuthenticationEventPublisher(publisher) @TO@ ExpressionStatement@@MethodInvocation:mgr.setAuthenticationEventPublisher(publisher) @AT@ 11953 @LENGTH@ 46
---------INS SimpleName@@Name:mgr @TO@ MethodInvocation@@mgr.setAuthenticationEventPublisher(publisher) @AT@ 11953 @LENGTH@ 3
---------INS SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @TO@ MethodInvocation@@mgr.setAuthenticationEventPublisher(publisher) @AT@ 11957 @LENGTH@ 42
------------INS SimpleName@@publisher @TO@ SimpleName@@MethodName:setAuthenticationEventPublisher:[publisher] @AT@ 11989 @LENGTH@ 9
---INS TryStatement@@try {  mgr.authenticate(authReq);  fail("Expected exception");} catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 12009 @LENGTH@ 225
------INS ExpressionStatement@@MethodInvocation:mgr.authenticate(authReq) @TO@ TryStatement@@try {  mgr.authenticate(authReq);  fail("Expected exception");} catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12027 @LENGTH@ 26
---------INS MethodInvocation@@mgr.authenticate(authReq) @TO@ ExpressionStatement@@MethodInvocation:mgr.authenticate(authReq) @AT@ 12027 @LENGTH@ 25
------------INS SimpleName@@Name:mgr @TO@ MethodInvocation@@mgr.authenticate(authReq) @AT@ 12027 @LENGTH@ 3
------------INS SimpleName@@MethodName:authenticate:[authReq] @TO@ MethodInvocation@@mgr.authenticate(authReq) @AT@ 12031 @LENGTH@ 21
---------------INS SimpleName@@authReq @TO@ SimpleName@@MethodName:authenticate:[authReq] @AT@ 12044 @LENGTH@ 7
------INS ExpressionStatement@@MethodInvocation:fail("Expected exception") @TO@ TryStatement@@try {  mgr.authenticate(authReq);  fail("Expected exception");} catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12066 @LENGTH@ 27
---------INS MethodInvocation@@fail("Expected exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Expected exception") @AT@ 12066 @LENGTH@ 26
------------INS SimpleName@@MethodName:fail:["Expected exception"] @TO@ MethodInvocation@@fail("Expected exception") @AT@ 12066 @LENGTH@ 26
---------------INS StringLiteral@@"Expected exception" @TO@ SimpleName@@MethodName:fail:["Expected exception"] @AT@ 12071 @LENGTH@ 20
------INS CatchClause@@catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @TO@ TryStatement@@try {  mgr.authenticate(authReq);  fail("Expected exception");} catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12104 @LENGTH@ 130
---------INS SingleVariableDeclaration@@LockedException e @TO@ CatchClause@@catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12111 @LENGTH@ 17
------------INS SimpleType@@LockedException @TO@ SingleVariableDeclaration@@LockedException e @AT@ 12111 @LENGTH@ 15
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@LockedException e @AT@ 12127 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertSame(expected,e) @TO@ CatchClause@@catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12144 @LENGTH@ 24
------------INS MethodInvocation@@assertSame(expected,e) @TO@ ExpressionStatement@@MethodInvocation:assertSame(expected,e) @AT@ 12144 @LENGTH@ 23
---------------INS SimpleName@@MethodName:assertSame:[expected, e] @TO@ MethodInvocation@@assertSame(expected,e) @AT@ 12144 @LENGTH@ 23
------------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:assertSame:[expected, e] @AT@ 12155 @LENGTH@ 8
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:assertSame:[expected, e] @AT@ 12165 @LENGTH@ 1
---------INS ExpressionStatement@@MethodInvocation:assertSame(authReq,e.getAuthentication()) @TO@ CatchClause@@catch (LockedException e) {  assertSame(expected,e);  assertSame(authReq,e.getAuthentication());} @AT@ 12181 @LENGTH@ 43
------------INS MethodInvocation@@assertSame(authReq,e.getAuthentication()) @TO@ ExpressionStatement@@MethodInvocation:assertSame(authReq,e.getAuthentication()) @AT@ 12181 @LENGTH@ 42
---------------INS SimpleName@@MethodName:assertSame:[authReq, e.getAuthentication()] @TO@ MethodInvocation@@assertSame(authReq,e.getAuthentication()) @AT@ 12181 @LENGTH@ 42
------------------INS SimpleName@@authReq @TO@ SimpleName@@MethodName:assertSame:[authReq, e.getAuthentication()] @AT@ 12192 @LENGTH@ 7
------------------INS MethodInvocation@@e.getAuthentication() @TO@ SimpleName@@MethodName:assertSame:[authReq, e.getAuthentication()] @AT@ 12201 @LENGTH@ 21
---------------------INS SimpleName@@Name:e @TO@ MethodInvocation@@e.getAuthentication() @AT@ 12201 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@e.getAuthentication() @AT@ 12203 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:verify(publisher).publishAuthenticationFailure(expected,authReq) @TO@ MethodDeclaration@@public, void, MethodName:statusExceptionIsPublished, Exception,  @AT@ 12243 @LENGTH@ 66
------INS MethodInvocation@@verify(publisher).publishAuthenticationFailure(expected,authReq) @TO@ ExpressionStatement@@MethodInvocation:verify(publisher).publishAuthenticationFailure(expected,authReq) @AT@ 12243 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:verify:[publisher] @TO@ MethodInvocation@@verify(publisher).publishAuthenticationFailure(expected,authReq) @AT@ 12243 @LENGTH@ 17
------------INS SimpleName@@publisher @TO@ MethodInvocation@@MethodName:verify:[publisher] @AT@ 12250 @LENGTH@ 9
---------INS SimpleName@@MethodName:publishAuthenticationFailure:[expected, authReq] @TO@ MethodInvocation@@verify(publisher).publishAuthenticationFailure(expected,authReq) @AT@ 12261 @LENGTH@ 47
------------INS SimpleName@@expected @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[expected, authReq] @AT@ 12290 @LENGTH@ 8
------------INS SimpleName@@authReq @TO@ SimpleName@@MethodName:publishAuthenticationFailure:[expected, authReq] @AT@ 12300 @LENGTH@ 7


UPD VariableDeclarationStatement@@EcaEndpoint answer=new EcaEndpoint(uri,this,createQueue(uri,parameters),consumers); @TO@ EcaEndpoint answer=new EcaEndpoint(uri,this,getOrCreateQueue(uri,size),consumers); @AT@ 1545 @LENGTH@ 89
---UPD VariableDeclarationFragment@@answer=new EcaEndpoint(uri,this,createQueue(uri,parameters),consumers) @TO@ answer=new EcaEndpoint(uri,this,getOrCreateQueue(uri,size),consumers) @AT@ 1557 @LENGTH@ 76
------UPD ClassInstanceCreation@@EcaEndpoint[uri, this, createQueue(uri,parameters), consumers] @TO@ EcaEndpoint[uri, this, getOrCreateQueue(uri,size), consumers] @AT@ 1566 @LENGTH@ 67
---------UPD MethodInvocation@@createQueue(uri,parameters) @TO@ getOrCreateQueue(uri,size) @AT@ 1593 @LENGTH@ 28
------------UPD SimpleName@@MethodName:createQueue:[uri, parameters] @TO@ MethodName:getOrCreateQueue:[uri, size] @AT@ 1593 @LENGTH@ 28
---------------UPD SimpleName@@parameters @TO@ size @AT@ 1610 @LENGTH@ 10


INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ TypeDeclaration@@[public]Query,  @AT@ 3463 @LENGTH@ 215
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3463 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3470 @LENGTH@ 6
---INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3477 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:String.format("Query: %s, Fields: %s, Sort: %s",serializeToJsonSafely(getQueryObject()),serializeToJsonSafely(getFieldsObject()),serializeToJsonSafely(getSortObject())) @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 3492 @LENGTH@ 183
------INS MethodInvocation@@String.format("Query: %s, Fields: %s, Sort: %s",serializeToJsonSafely(getQueryObject()),serializeToJsonSafely(getFieldsObject()),serializeToJsonSafely(getSortObject())) @TO@ ReturnStatement@@MethodInvocation:String.format("Query: %s, Fields: %s, Sort: %s",serializeToJsonSafely(getQueryObject()),serializeToJsonSafely(getFieldsObject()),serializeToJsonSafely(getSortObject())) @AT@ 3499 @LENGTH@ 175
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Query: %s, Fields: %s, Sort: %s",serializeToJsonSafely(getQueryObject()),serializeToJsonSafely(getFieldsObject()),serializeToJsonSafely(getSortObject())) @AT@ 3499 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["Query: %s, Fields: %s, Sort: %s", serializeToJsonSafely(getQueryObject()), serializeToJsonSafely(getFieldsObject()), serializeToJsonSafely(getSortObject())] @TO@ MethodInvocation@@String.format("Query: %s, Fields: %s, Sort: %s",serializeToJsonSafely(getQueryObject()),serializeToJsonSafely(getFieldsObject()),serializeToJsonSafely(getSortObject())) @AT@ 3506 @LENGTH@ 168
------------INS StringLiteral@@"Query: %s, Fields: %s, Sort: %s" @TO@ SimpleName@@MethodName:format:["Query: %s, Fields: %s, Sort: %s", serializeToJsonSafely(getQueryObject()), serializeToJsonSafely(getFieldsObject()), serializeToJsonSafely(getSortObject())] @AT@ 3513 @LENGTH@ 33
------------INS MethodInvocation@@serializeToJsonSafely(getQueryObject()) @TO@ SimpleName@@MethodName:format:["Query: %s, Fields: %s, Sort: %s", serializeToJsonSafely(getQueryObject()), serializeToJsonSafely(getFieldsObject()), serializeToJsonSafely(getSortObject())] @AT@ 3548 @LENGTH@ 39
---------------INS SimpleName@@MethodName:serializeToJsonSafely:[getQueryObject()] @TO@ MethodInvocation@@serializeToJsonSafely(getQueryObject()) @AT@ 3548 @LENGTH@ 39
------------------INS MethodInvocation@@MethodName:getQueryObject:[] @TO@ SimpleName@@MethodName:serializeToJsonSafely:[getQueryObject()] @AT@ 3570 @LENGTH@ 16
------------INS MethodInvocation@@serializeToJsonSafely(getFieldsObject()) @TO@ SimpleName@@MethodName:format:["Query: %s, Fields: %s, Sort: %s", serializeToJsonSafely(getQueryObject()), serializeToJsonSafely(getFieldsObject()), serializeToJsonSafely(getSortObject())] @AT@ 3593 @LENGTH@ 40
---------------INS SimpleName@@MethodName:serializeToJsonSafely:[getFieldsObject()] @TO@ MethodInvocation@@serializeToJsonSafely(getFieldsObject()) @AT@ 3593 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getFieldsObject:[] @TO@ SimpleName@@MethodName:serializeToJsonSafely:[getFieldsObject()] @AT@ 3615 @LENGTH@ 17
------------INS MethodInvocation@@serializeToJsonSafely(getSortObject()) @TO@ SimpleName@@MethodName:format:["Query: %s, Fields: %s, Sort: %s", serializeToJsonSafely(getQueryObject()), serializeToJsonSafely(getFieldsObject()), serializeToJsonSafely(getSortObject())] @AT@ 3635 @LENGTH@ 38
---------------INS SimpleName@@MethodName:serializeToJsonSafely:[getSortObject()] @TO@ MethodInvocation@@serializeToJsonSafely(getSortObject()) @AT@ 3635 @LENGTH@ 38
------------------INS MethodInvocation@@MethodName:getSortObject:[] @TO@ SimpleName@@MethodName:serializeToJsonSafely:[getSortObject()] @AT@ 3657 @LENGTH@ 15


UPD TryStatement@@try {  super.doHandle(ctx);} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @TO@ try {  super.doHandle(ctx);  ctx.printLine("The batch executed successfully");} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @AT@ 2080 @LENGTH@ 257
---INS ExpressionStatement@@MethodInvocation:ctx.printLine("The batch executed successfully") @TO@ TryStatement@@try {  super.doHandle(ctx);} catch (CommandLineException e) {  failed=true;  throw e;} finally {  if (!failed) {    ctx.getBatchManager().discardActiveBatch();  }} @AT@ 2131 @LENGTH@ 49
------INS MethodInvocation@@ctx.printLine("The batch executed successfully") @TO@ ExpressionStatement@@MethodInvocation:ctx.printLine("The batch executed successfully") @AT@ 2131 @LENGTH@ 48
---------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.printLine("The batch executed successfully") @AT@ 2131 @LENGTH@ 3
---------INS SimpleName@@MethodName:printLine:["The batch executed successfully"] @TO@ MethodInvocation@@ctx.printLine("The batch executed successfully") @AT@ 2135 @LENGTH@ 44
------------INS StringLiteral@@"The batch executed successfully" @TO@ SimpleName@@MethodName:printLine:["The batch executed successfully"] @AT@ 2145 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:noLongerMissingServices.put(name,controller == null) @TO@ MethodInvocation:noLongerMissingServices.put(name,controller != null) @AT@ 8212 @LENGTH@ 54
---UPD MethodInvocation@@noLongerMissingServices.put(name,controller == null) @TO@ noLongerMissingServices.put(name,controller != null) @AT@ 8212 @LENGTH@ 53
------UPD SimpleName@@MethodName:put:[name, controller == null] @TO@ MethodName:put:[name, controller != null] @AT@ 8236 @LENGTH@ 29
---------UPD InfixExpression@@controller == null @TO@ controller != null @AT@ 8246 @LENGTH@ 18
------------UPD Operator@@== @TO@ != @AT@ 8256 @LENGTH@ 2


UPD VariableDeclarationStatement@@Set<Method> methods=new HashSet<Method>(); @TO@ Set<Method> methods=new LinkedHashSet<Method>(); @AT@ 2511 @LENGTH@ 44
---UPD VariableDeclarationFragment@@methods=new HashSet<Method>() @TO@ methods=new LinkedHashSet<Method>() @AT@ 2523 @LENGTH@ 31
------UPD ClassInstanceCreation@@HashSet<Method>[] @TO@ LinkedHashSet<Method>[] @AT@ 2533 @LENGTH@ 21
---------UPD ParameterizedType@@HashSet<Method> @TO@ LinkedHashSet<Method> @AT@ 2537 @LENGTH@ 15
------------UPD SimpleType@@HashSet @TO@ LinkedHashSet @AT@ 2537 @LENGTH@ 7


UPD VariableDeclarationStatement@@Class<?> target=conversions.getCustomWriteTarget(getClass()); @TO@ Class<?> target=conversions.getCustomWriteTarget(obj.getClass()); @AT@ 28680 @LENGTH@ 63
---UPD VariableDeclarationFragment@@target=conversions.getCustomWriteTarget(getClass()) @TO@ target=conversions.getCustomWriteTarget(obj.getClass()) @AT@ 28689 @LENGTH@ 53
------UPD MethodInvocation@@conversions.getCustomWriteTarget(getClass()) @TO@ conversions.getCustomWriteTarget(obj.getClass()) @AT@ 28698 @LENGTH@ 44
---------UPD SimpleName@@MethodName:getCustomWriteTarget:[getClass()] @TO@ MethodName:getCustomWriteTarget:[obj.getClass()] @AT@ 28710 @LENGTH@ 32
------------UPD MethodInvocation@@MethodName:getClass:[] @TO@ obj.getClass() @AT@ 28731 @LENGTH@ 10
---------------INS SimpleName@@Name:obj @TO@ MethodInvocation@@MethodName:getClass:[] @AT@ 28731 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@MethodName:getClass:[] @AT@ 28735 @LENGTH@ 10


INS VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1846 @LENGTH@ 72
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1846 @LENGTH@ 7
---INS VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @TO@ VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1854 @LENGTH@ 63
------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1854 @LENGTH@ 4
------INS MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @TO@ VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1861 @LENGTH@ 56
---------INS SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @TO@ MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1861 @LENGTH@ 56
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1883 @LENGTH@ 10
------------INS StringLiteral@@"size" @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1895 @LENGTH@ 6
------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1903 @LENGTH@ 13


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + bundlesDir) @TO@ ClassInstanceCreation:new IllegalStateException("Invalid bundles directory: " + bundlesDir) @AT@ 4923 @LENGTH@ 76
---UPD ClassInstanceCreation@@IllegalStateException["Invalid modules directory: " + bundlesDir] @TO@ IllegalStateException["Invalid bundles directory: " + bundlesDir] @AT@ 4929 @LENGTH@ 69
------UPD InfixExpression@@"Invalid modules directory: " + bundlesDir @TO@ "Invalid bundles directory: " + bundlesDir @AT@ 4955 @LENGTH@ 42
---------UPD StringLiteral@@"Invalid modules directory: " @TO@ "Invalid bundles directory: " @AT@ 4955 @LENGTH@ 29


UPD SynchronizedStatement@@synchronized (pcf) {  policyConfiguration=pcf.getPolicyConfiguration(contextId,false);  if (standalone) {    if (metaData != null) {      createPermissions(metaData,policyConfiguration);    } else {      log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);    }  }  if (!standalone) {    PolicyConfiguration parent=parentPolicy.getValue();    if (parent != null) {      parent=pcf.getPolicyConfiguration(parent.getContextID(),false);      parent.linkConfiguration(policyConfiguration);      policyConfiguration.commit();      parent.commit();    } else {      log.debugf("Could not retrieve parent policy for policy " + contextId);    }  } else {    policyConfiguration.commit();  }  Policy.getPolicy().refresh();} @TO@ synchronized (pcf) {  policyConfiguration=pcf.getPolicyConfiguration(contextId,false);  if (metaData != null) {    createPermissions(metaData,policyConfiguration);  } else {    log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);  }  if (!standalone) {    PolicyConfiguration parent=parentPolicy.getValue();    if (parent != null) {      parent=pcf.getPolicyConfiguration(parent.getContextID(),false);      parent.linkConfiguration(policyConfiguration);      policyConfiguration.commit();      parent.commit();    } else {      log.debugf("Could not retrieve parent policy for policy " + contextId);    }  } else {    policyConfiguration.commit();  }  Policy.getPolicy().refresh();} @AT@ 3049 @LENGTH@ 1239
---UPD Block@@SyncBody:{  policyConfiguration=pcf.getPolicyConfiguration(contextId,false);  if (standalone) {    if (metaData != null) {      createPermissions(metaData,policyConfiguration);    } else {      log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);    }  }  if (!standalone) {    PolicyConfiguration parent=parentPolicy.getValue();    if (parent != null) {      parent=pcf.getPolicyConfiguration(parent.getContextID(),false);      parent.linkConfiguration(policyConfiguration);      policyConfiguration.commit();      parent.commit();    } else {      log.debugf("Could not retrieve parent policy for policy " + contextId);    }  } else {    policyConfiguration.commit();  }  Policy.getPolicy().refresh();} @TO@ SyncBody:{  policyConfiguration=pcf.getPolicyConfiguration(contextId,false);  if (metaData != null) {    createPermissions(metaData,policyConfiguration);  } else {    log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);  }  if (!standalone) {    PolicyConfiguration parent=parentPolicy.getValue();    if (parent != null) {      parent=pcf.getPolicyConfiguration(parent.getContextID(),false);      parent.linkConfiguration(policyConfiguration);      policyConfiguration.commit();      parent.commit();    } else {      log.debugf("Could not retrieve parent policy for policy " + contextId);    }  } else {    policyConfiguration.commit();  }  Policy.getPolicy().refresh();} @AT@ 3068 @LENGTH@ 1220
------DEL IfStatement@@if (standalone) {  if (metaData != null) {    createPermissions(metaData,policyConfiguration);  } else {    log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);  }} @AT@ 3200 @LENGTH@ 310
---------DEL SimpleName@@standalone @AT@ 3204 @LENGTH@ 10
---------DEL Block@@ThenBody:{  if (metaData != null) {    createPermissions(metaData,policyConfiguration);  } else {    log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);  }} @AT@ 3216 @LENGTH@ 294
------MOV IfStatement@@if (metaData != null) {  createPermissions(metaData,policyConfiguration);} else {  log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);} @TO@ Block@@SyncBody:{  policyConfiguration=pcf.getPolicyConfiguration(contextId,false);  if (standalone) {    if (metaData != null) {      createPermissions(metaData,policyConfiguration);    } else {      log.debugf("Cannot create permissions with 'null' metaData for id=" + contextId);    }  }  if (!standalone) {    PolicyConfiguration parent=parentPolicy.getValue();    if (parent != null) {      parent=pcf.getPolicyConfiguration(parent.getContextID(),false);      parent.linkConfiguration(policyConfiguration);      policyConfiguration.commit();      parent.commit();    } else {      log.debugf("Could not retrieve parent policy for policy " + contextId);    }  } else {    policyConfiguration.commit();  }  Policy.getPolicy().refresh();} @AT@ 3238 @LENGTH@ 254


INS MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @TO@ TypeDeclaration@@[public]MapReduceResultsUnitTests,  @AT@ 2027 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2027 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2034 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesLongResultsForCounts @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2039 @LENGTH@ 27
---INS VariableDeclarationStatement@@DBObject inner=new BasicDBObject("input",1L); @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2074 @LENGTH@ 48
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject inner=new BasicDBObject("input",1L); @AT@ 2074 @LENGTH@ 8
------INS VariableDeclarationFragment@@inner=new BasicDBObject("input",1L) @TO@ VariableDeclarationStatement@@DBObject inner=new BasicDBObject("input",1L); @AT@ 2083 @LENGTH@ 38
---------INS SimpleName@@inner @TO@ VariableDeclarationFragment@@inner=new BasicDBObject("input",1L) @AT@ 2083 @LENGTH@ 5
---------INS ClassInstanceCreation@@BasicDBObject["input", 1L] @TO@ VariableDeclarationFragment@@inner=new BasicDBObject("input",1L) @AT@ 2091 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["input", 1L] @AT@ 2091 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["input", 1L] @AT@ 2095 @LENGTH@ 13
------------INS StringLiteral@@"input" @TO@ ClassInstanceCreation@@BasicDBObject["input", 1L] @AT@ 2109 @LENGTH@ 7
------------INS NumberLiteral@@1L @TO@ ClassInstanceCreation@@BasicDBObject["input", 1L] @AT@ 2118 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:inner.put("emit",1L) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2125 @LENGTH@ 22
------INS MethodInvocation@@inner.put("emit",1L) @TO@ ExpressionStatement@@MethodInvocation:inner.put("emit",1L) @AT@ 2125 @LENGTH@ 21
---------INS SimpleName@@Name:inner @TO@ MethodInvocation@@inner.put("emit",1L) @AT@ 2125 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["emit", 1L] @TO@ MethodInvocation@@inner.put("emit",1L) @AT@ 2131 @LENGTH@ 15
------------INS StringLiteral@@"emit" @TO@ SimpleName@@MethodName:put:["emit", 1L] @AT@ 2135 @LENGTH@ 6
------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:put:["emit", 1L] @AT@ 2143 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:inner.put("output",1) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2150 @LENGTH@ 23
------INS MethodInvocation@@inner.put("output",1) @TO@ ExpressionStatement@@MethodInvocation:inner.put("output",1) @AT@ 2150 @LENGTH@ 22
---------INS SimpleName@@Name:inner @TO@ MethodInvocation@@inner.put("output",1) @AT@ 2150 @LENGTH@ 5
---------INS SimpleName@@MethodName:put:["output", 1] @TO@ MethodInvocation@@inner.put("output",1) @AT@ 2156 @LENGTH@ 16
------------INS StringLiteral@@"output" @TO@ SimpleName@@MethodName:put:["output", 1] @AT@ 2160 @LENGTH@ 8
------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:put:["output", 1] @AT@ 2170 @LENGTH@ 1
---INS VariableDeclarationStatement@@DBObject source=new BasicDBObject("counts",inner); @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2177 @LENGTH@ 53
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject source=new BasicDBObject("counts",inner); @AT@ 2177 @LENGTH@ 8
------INS VariableDeclarationFragment@@source=new BasicDBObject("counts",inner) @TO@ VariableDeclarationStatement@@DBObject source=new BasicDBObject("counts",inner); @AT@ 2186 @LENGTH@ 43
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new BasicDBObject("counts",inner) @AT@ 2186 @LENGTH@ 6
---------INS ClassInstanceCreation@@BasicDBObject["counts", inner] @TO@ VariableDeclarationFragment@@source=new BasicDBObject("counts",inner) @AT@ 2195 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@BasicDBObject["counts", inner] @AT@ 2195 @LENGTH@ 3
------------INS SimpleType@@BasicDBObject @TO@ ClassInstanceCreation@@BasicDBObject["counts", inner] @AT@ 2199 @LENGTH@ 13
------------INS StringLiteral@@"counts" @TO@ ClassInstanceCreation@@BasicDBObject["counts", inner] @AT@ 2213 @LENGTH@ 8
------------INS SimpleName@@inner @TO@ ClassInstanceCreation@@BasicDBObject["counts", inner] @AT@ 2223 @LENGTH@ 5
---INS ExpressionStatement@@ClassInstanceCreation:new MapReduceResults<Object>(Collections.emptyList(),source) @TO@ MethodDeclaration@@public, void, MethodName:handlesLongResultsForCounts,  @AT@ 2233 @LENGTH@ 62
------INS ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @TO@ ExpressionStatement@@ClassInstanceCreation:new MapReduceResults<Object>(Collections.emptyList(),source) @AT@ 2233 @LENGTH@ 61
---------INS New@@new @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 2233 @LENGTH@ 3
---------INS ParameterizedType@@MapReduceResults<Object> @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 2237 @LENGTH@ 24
------------INS SimpleType@@MapReduceResults @TO@ ParameterizedType@@MapReduceResults<Object> @AT@ 2237 @LENGTH@ 16
------------INS SimpleType@@Object @TO@ ParameterizedType@@MapReduceResults<Object> @AT@ 2254 @LENGTH@ 6
---------INS MethodInvocation@@Collections.emptyList() @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 2262 @LENGTH@ 23
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2262 @LENGTH@ 11
------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 2274 @LENGTH@ 11
---------INS SimpleName@@source @TO@ ClassInstanceCreation@@MapReduceResults<Object>[Collections.emptyList(), source] @AT@ 2287 @LENGTH@ 6


MOV MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ TypeDeclaration@@[@ContextName("contextC"), public]RoutesContextC, RouteBuilder @AT@ 1649 @LENGTH@ 71


DEL IfStatement@@if (!propertiesMatched.containsKey(distanceKey)) {  propertiesMatched.putIfAbsent(distanceKey,new ConcurrentHashMap<String,String>(matches));} @AT@ 10321 @LENGTH@ 149
---DEL PrefixExpression@@!propertiesMatched.containsKey(distanceKey) @AT@ 10325 @LENGTH@ 43
------DEL Operator@@! @AT@ 10325 @LENGTH@ 1
------DEL MethodInvocation@@propertiesMatched.containsKey(distanceKey) @AT@ 10326 @LENGTH@ 42
---------DEL SimpleName@@Name:propertiesMatched @AT@ 10326 @LENGTH@ 17
---------DEL SimpleName@@MethodName:containsKey:[distanceKey] @AT@ 10344 @LENGTH@ 24
------------DEL SimpleName@@distanceKey @AT@ 10356 @LENGTH@ 11
---DEL Block@@ThenBody:{  propertiesMatched.putIfAbsent(distanceKey,new ConcurrentHashMap<String,String>(matches));} @AT@ 10370 @LENGTH@ 100


UPD IfStatement@@if (file.exists()) break; @TO@ if (file.exists()) {  break;} @AT@ 1336 @LENGTH@ 25
---UPD Block@@ThenBody:break; @TO@ ThenBody:{  break;} @AT@ 1355 @LENGTH@ 6


UPD IfStatement@@if (container != null) {  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ if (container != null) {  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  if (legacyServices != null) {    for (    KernelServices legacyService : legacyServices.values()) {      legacyService.shutdown();    }  }} @AT@ 15260 @LENGTH@ 410
---UPD Block@@ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  if (legacyServices != null) {    for (    KernelServices legacyService : legacyServices.values()) {      legacyService.shutdown();    }  }} @AT@ 15283 @LENGTH@ 387
------INS IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ Block@@ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15543 @LENGTH@ 185
---------INS InfixExpression@@legacyServices != null @TO@ IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15547 @LENGTH@ 22
------------INS SimpleName@@legacyServices @TO@ InfixExpression@@legacyServices != null @AT@ 15547 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@legacyServices != null @AT@ 15561 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@legacyServices != null @AT@ 15565 @LENGTH@ 4
---------INS Block@@ThenBody:{  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15571 @LENGTH@ 157
------------MOV EnhancedForStatement@@for (KernelServices legacyService : legacyServices.values()) {  legacyService.shutdown();} @TO@ Block@@ThenBody:{  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15543 @LENGTH@ 117


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSetCipherTest, SftpServerTestSupport @TO@ [public]SftpSetCipherTest, SftpServerTestSupport @AT@ 1044 @LENGTH@ 1134
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1044 @LENGTH@ 79


UPD MethodDeclaration@@voidMethodName:HeaderListState, HeaderState headerState,  @TO@ voidMethodName:HeaderListState, final HeaderState headerState,  @AT@ 1683 @LENGTH@ 559
---UPD SingleVariableDeclaration@@HeaderState headerState @TO@ final HeaderState headerState @AT@ 1699 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@HeaderState headerState @AT@ 1689 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new EnterStateCharacterHandler(headerState)) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(headerState);
  }
}
) @AT@ 1823 @LENGTH@ 63
------UPD MethodInvocation@@setDefaultHandler(new EnterStateCharacterHandler(headerState)) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(headerState);
  }
}
) @AT@ 1823 @LENGTH@ 62
---------UPD SimpleName@@MethodName:setDefaultHandler:[new EnterStateCharacterHandler(headerState)] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(headerState);
  }
}
] @AT@ 1823 @LENGTH@ 62
------------UPD ClassInstanceCreation@@EnterStateCharacterHandler[headerState] @TO@ LineBreakHandler[false, false] @AT@ 1841 @LENGTH@ 43
---------------UPD SimpleType@@EnterStateCharacterHandler @TO@ LineBreakHandler @AT@ 1845 @LENGTH@ 26
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[headerState] @AT@ 1858 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[headerState] @AT@ 1865 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[headerState] @AT@ 1871 @LENGTH@ 158
------------------INS MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 1885 @LENGTH@ 134
---------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1885 @LENGTH@ 9
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1895 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doHandle @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1900 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1909 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1909 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 1924 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1936 @LENGTH@ 22
---------------------INS ExpressionStatement@@MethodInvocation:ctx.enterState(headerState) @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 1977 @LENGTH@ 28
------------------------INS MethodInvocation@@ctx.enterState(headerState) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(headerState) @AT@ 1977 @LENGTH@ 27
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(headerState) @AT@ 1977 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:enterState:[headerState] @TO@ MethodInvocation@@ctx.enterState(headerState) @AT@ 1981 @LENGTH@ 23
------------------------------INS SimpleName@@headerState @TO@ SimpleName@@MethodName:enterState:[headerState] @AT@ 1992 @LENGTH@ 11
---------------DEL SimpleName@@headerState @AT@ 1872 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000").to("jms:queue:foo?requestTimeout=5000") @TO@ MethodInvocation:fromF("jetty:http://0.0.0.0:%s/myservice?continuationTimeout=2000",getPort()).to("jms:queue:foo?requestTimeout=5000") @AT@ 2422 @LENGTH@ 213
---UPD MethodInvocation@@from("jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000").to("jms:queue:foo?requestTimeout=5000") @TO@ fromF("jetty:http://0.0.0.0:%s/myservice?continuationTimeout=2000",getPort()).to("jms:queue:foo?requestTimeout=5000") @AT@ 2422 @LENGTH@ 212
------UPD MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000"] @TO@ MethodName:fromF:["jetty:http://0.0.0.0:%s/myservice?continuationTimeout=2000", getPort()] @AT@ 2422 @LENGTH@ 81
---------DEL InfixExpression@@"jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000" @AT@ 2427 @LENGTH@ 75
------------DEL StringLiteral@@"jetty:http://0.0.0.0:" @AT@ 2427 @LENGTH@ 23
------------DEL Operator@@+ @AT@ 2450 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 2453 @LENGTH@ 9
------------DEL StringLiteral@@"/myservice?continuationTimeout=2000" @AT@ 2465 @LENGTH@ 37
---------INS StringLiteral@@"jetty:http://0.0.0.0:%s/myservice?continuationTimeout=2000" @TO@ MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000"] @AT@ 2428 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice?continuationTimeout=2000"] @AT@ 2490 @LENGTH@ 9


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is already defined")) @TO@ MethodInvocation:JGroupsMessages.MESSAGES.protocolAlreadyDefined(protocolRelativePath.toString()) @AT@ 1579 @LENGTH@ 147
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is already defined")] @AT@ 1585 @LENGTH@ 140
------DEL New@@new @AT@ 1585 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 1589 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is already defined") @AT@ 1614 @LENGTH@ 110
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 1614 @LENGTH@ 15
------------DEL New@@new @AT@ 1614 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 1618 @LENGTH@ 9
---INS MethodInvocation@@JGroupsMessages.MESSAGES.protocolAlreadyDefined(protocolRelativePath.toString()) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is already defined")) @AT@ 1641 @LENGTH@ 80
------MOV SimpleName@@MethodName:set:["protocol with relative path " + protocolRelativePath.toString() + " is already defined"] @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.protocolAlreadyDefined(protocolRelativePath.toString()) @AT@ 1630 @LENGTH@ 94
---------DEL InfixExpression@@"protocol with relative path " + protocolRelativePath.toString() + " is already defined" @AT@ 1634 @LENGTH@ 89
------------DEL StringLiteral@@"protocol with relative path " @AT@ 1634 @LENGTH@ 30
------------DEL Operator@@+ @AT@ 1664 @LENGTH@ 1
------------DEL MethodInvocation@@protocolRelativePath.toString() @AT@ 1667 @LENGTH@ 31
------------DEL StringLiteral@@" is already defined" @AT@ 1702 @LENGTH@ 21
---------INS MethodInvocation@@protocolRelativePath.toString() @TO@ SimpleName@@MethodName:set:["protocol with relative path " + protocolRelativePath.toString() + " is already defined"] @AT@ 1689 @LENGTH@ 31
------------MOV SimpleName@@Name:protocolRelativePath @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1667 @LENGTH@ 20
------------MOV SimpleName@@Name:protocolRelativePath @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1667 @LENGTH@ 20
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1688 @LENGTH@ 10
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1688 @LENGTH@ 10
------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.protocolAlreadyDefined(protocolRelativePath.toString()) @AT@ 1641 @LENGTH@ 24


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleConsumeRecursiveTest, SftpServerTestSupport @TO@ [public]SftpSimpleConsumeRecursiveTest, SftpServerTestSupport @AT@ 1061 @LENGTH@ 1397
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 1061 @LENGTH@ 79


UPD MethodDeclaration@@public, voidMethodName:TransactionErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, TransactionTemplate transactionTemplate, Predicate retryWhile, String executorServiceRef, LoggingLevel rollbackLoggingLevel,  @TO@ public, voidMethodName:TransactionErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, TransactionTemplate transactionTemplate, Predicate retryWhile, ScheduledExecutorService executorService, LoggingLevel rollbackLoggingLevel,  @AT@ 2933 @LENGTH@ 768
---UPD SingleVariableDeclaration@@String executorServiceRef @TO@ ScheduledExecutorService executorService @AT@ 3232 @LENGTH@ 25
------UPD SimpleType@@String @TO@ ScheduledExecutorService @AT@ 3232 @LENGTH@ 6
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 3239 @LENGTH@ 18
---UPD SuperConstructorInvocation@@super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,null,null,false,retryWhile,executorServiceRef);
 @TO@ super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,null,null,false,retryWhile,executorService);
 @AT@ 3317 @LENGTH@ 126
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 3423 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, ListAttributeDefinition, [XML_NAMESPACES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.XML_NAMESPACES,false,ModelType.STRING,new StringLengthValidator(1,Integer.MAX_VALUE,false,false),AttributeAccess.Flag.STORAGE_RUNTIME)] @TO@ public, static, final, ListAttributeDefinition, [XML_NAMESPACES=new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build()] @AT@ 2679 @LENGTH@ 286
---UPD VariableDeclarationFragment@@XML_NAMESPACES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.XML_NAMESPACES,false,ModelType.STRING,new StringLengthValidator(1,Integer.MAX_VALUE,false,false),AttributeAccess.Flag.STORAGE_RUNTIME) @TO@ XML_NAMESPACES=new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 2723 @LENGTH@ 241
------DEL ClassInstanceCreation@@PrimitiveListAttributeDefinition[ModelDescriptionConstants.XML_NAMESPACES, false, ModelType.STRING, new StringLengthValidator(1,Integer.MAX_VALUE,false,false), AttributeAccess.Flag.STORAGE_RUNTIME] @AT@ 2740 @LENGTH@ 224
---------DEL BooleanLiteral@@false @AT@ 2819 @LENGTH@ 5
---------DEL QualifiedName@@ModelType.STRING @AT@ 2826 @LENGTH@ 16
------------DEL SimpleName@@ModelType @AT@ 2826 @LENGTH@ 9
------------DEL SimpleName@@STRING @AT@ 2836 @LENGTH@ 6
---------DEL QualifiedName@@AttributeAccess.Flag.STORAGE_RUNTIME @AT@ 2927 @LENGTH@ 36
------------DEL QualifiedName@@AttributeAccess.Flag @AT@ 2927 @LENGTH@ 20
---------------DEL SimpleName@@AttributeAccess @AT@ 2927 @LENGTH@ 15
---------------DEL SimpleName@@Flag @AT@ 2943 @LENGTH@ 4
------------DEL SimpleName@@STORAGE_RUNTIME @AT@ 2948 @LENGTH@ 15
------INS MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @TO@ VariableDeclarationFragment@@XML_NAMESPACES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.XML_NAMESPACES,false,ModelType.STRING,new StringLengthValidator(1,Integer.MAX_VALUE,false,false),AttributeAccess.Flag.STORAGE_RUNTIME) @AT@ 2801 @LENGTH@ 259
---------INS MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1,Integer.MAX_VALUE,false,false)] @TO@ MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 2801 @LENGTH@ 238
------------MOV ClassInstanceCreation@@StringLengthValidator[1, Integer.MAX_VALUE, false, false] @TO@ MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1,Integer.MAX_VALUE,false,false)] @AT@ 2864 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:setStorageRuntime:[] @TO@ MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 2801 @LENGTH@ 149
---------INS MethodInvocation@@MethodName:setAllowNull:[false] @TO@ MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 2801 @LENGTH@ 116
------------INS BooleanLiteral@@false @TO@ MethodInvocation@@MethodName:setAllowNull:[false] @AT@ 2911 @LENGTH@ 5
---------INS ClassInstanceCreation@@StringListAttributeDefinition.Builder[ModelDescriptionConstants.XML_NAMESPACES] @TO@ MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 2801 @LENGTH@ 83
------------MOV New@@new @TO@ ClassInstanceCreation@@StringListAttributeDefinition.Builder[ModelDescriptionConstants.XML_NAMESPACES] @AT@ 2740 @LENGTH@ 3
------------MOV SimpleType@@PrimitiveListAttributeDefinition @TO@ ClassInstanceCreation@@StringListAttributeDefinition.Builder[ModelDescriptionConstants.XML_NAMESPACES] @AT@ 2744 @LENGTH@ 32
------------MOV QualifiedName@@ModelDescriptionConstants.XML_NAMESPACES @TO@ ClassInstanceCreation@@StringListAttributeDefinition.Builder[ModelDescriptionConstants.XML_NAMESPACES] @AT@ 2777 @LENGTH@ 40
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new StringListAttributeDefinition.Builder(ModelDescriptionConstants.XML_NAMESPACES).setAllowNull(false).setStorageRuntime().setValidator(new StringLengthValidator(1,Integer.MAX_VALUE,false,false)).build() @AT@ 3053 @LENGTH@ 7


UPD Block@@ThenBody:{  if (objectModelUri != null) {    defaultXPathFactory=XPathFactory.newInstance(objectModelUri);    LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory);  }  if (defaultXPathFactory == null) {    Properties properties=System.getProperties();    for (    Map.Entry<Object,Object> prop : properties.entrySet()) {      String key=(String)prop.getKey();      if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {        String uri=ObjectHelper.after(key,":");        if (uri != null) {          defaultXPathFactory=XPathFactory.newInstance(uri);          LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});        }      }    }  }  defaultXPathFactory=XPathFactory.newInstance();  LOG.info("Created default XPathFactory {}",defaultXPathFactory);} @TO@ ThenBody:{  if (objectModelUri != null) {    defaultXPathFactory=XPathFactory.newInstance(objectModelUri);    LOG.info("Using objectModelUri " + objectModelUri + " when created default XPathFactory {}",defaultXPathFactory);  }  if (defaultXPathFactory == null) {    Properties properties=System.getProperties();    for (    Map.Entry<Object,Object> prop : properties.entrySet()) {      String key=(String)prop.getKey();      if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {        String uri=ObjectHelper.after(key,":");        if (uri != null) {          defaultXPathFactory=XPathFactory.newInstance(uri);          LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});        }      }    }  }  defaultXPathFactory=XPathFactory.newInstance();  LOG.info("Created default XPathFactory {}",defaultXPathFactory);} @AT@ 41365 @LENGTH@ 1236
---UPD IfStatement@@if (objectModelUri != null) {  defaultXPathFactory=XPathFactory.newInstance(objectModelUri);  LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory);} @TO@ if (objectModelUri != null) {  defaultXPathFactory=XPathFactory.newInstance(objectModelUri);  LOG.info("Using objectModelUri " + objectModelUri + " when created default XPathFactory {}",defaultXPathFactory);} @AT@ 41379 @LENGTH@ 246
------UPD Block@@ThenBody:{  defaultXPathFactory=XPathFactory.newInstance(objectModelUri);  LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory);} @TO@ ThenBody:{  defaultXPathFactory=XPathFactory.newInstance(objectModelUri);  LOG.info("Using objectModelUri " + objectModelUri + " when created default XPathFactory {}",defaultXPathFactory);} @AT@ 41407 @LENGTH@ 218
---------UPD ExpressionStatement@@MethodInvocation:LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory) @TO@ MethodInvocation:LOG.info("Using objectModelUri " + objectModelUri + " when created default XPathFactory {}",defaultXPathFactory) @AT@ 41505 @LENGTH@ 106
------------UPD MethodInvocation@@LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory) @TO@ LOG.info("Using objectModelUri " + objectModelUri + " when created default XPathFactory {}",defaultXPathFactory) @AT@ 41505 @LENGTH@ 105
---------------UPD SimpleName@@MethodName:info:["Using objectModelUri " + objectModelUri + " when created XPathFactory {}", defaultXPathFactory] @TO@ MethodName:info:["Using objectModelUri " + objectModelUri + " when created default XPathFactory {}", defaultXPathFactory] @AT@ 41509 @LENGTH@ 101
------------------UPD InfixExpression@@"Using objectModelUri " + objectModelUri + " when created XPathFactory {}" @TO@ "Using objectModelUri " + objectModelUri + " when created default XPathFactory {}" @AT@ 41514 @LENGTH@ 74
---------------------UPD StringLiteral@@" when created XPathFactory {}" @TO@ " when created default XPathFactory {}" @AT@ 41557 @LENGTH@ 31
---UPD IfStatement@@if (defaultXPathFactory == null) {  Properties properties=System.getProperties();  for (  Map.Entry<Object,Object> prop : properties.entrySet()) {    String key=(String)prop.getKey();    if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {      String uri=ObjectHelper.after(key,":");      if (uri != null) {        defaultXPathFactory=XPathFactory.newInstance(uri);        LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});      }    }  }} @TO@ if (defaultXPathFactory == null) {  Properties properties=System.getProperties();  for (  Map.Entry<Object,Object> prop : properties.entrySet()) {    String key=(String)prop.getKey();    if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {      String uri=ObjectHelper.after(key,":");      if (uri != null) {        defaultXPathFactory=XPathFactory.newInstance(uri);        LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});      }    }  }} @AT@ 41639 @LENGTH@ 811
------UPD Block@@ThenBody:{  Properties properties=System.getProperties();  for (  Map.Entry<Object,Object> prop : properties.entrySet()) {    String key=(String)prop.getKey();    if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {      String uri=ObjectHelper.after(key,":");      if (uri != null) {        defaultXPathFactory=XPathFactory.newInstance(uri);        LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});      }    }  }} @TO@ ThenBody:{  Properties properties=System.getProperties();  for (  Map.Entry<Object,Object> prop : properties.entrySet()) {    String key=(String)prop.getKey();    if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {      String uri=ObjectHelper.after(key,":");      if (uri != null) {        defaultXPathFactory=XPathFactory.newInstance(uri);        LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});      }    }  }} @AT@ 41672 @LENGTH@ 778
---------UPD EnhancedForStatement@@for (Map.Entry<Object,Object> prop : properties.entrySet()) {  String key=(String)prop.getKey();  if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {    String uri=ObjectHelper.after(key,":");    if (uri != null) {      defaultXPathFactory=XPathFactory.newInstance(uri);      LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});    }  }} @TO@ for (Map.Entry<Object,Object> prop : properties.entrySet()) {  String key=(String)prop.getKey();  if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {    String uri=ObjectHelper.after(key,":");    if (uri != null) {      defaultXPathFactory=XPathFactory.newInstance(uri);      LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});    }  }} @AT@ 41828 @LENGTH@ 608
------------UPD IfStatement@@if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {  String uri=ObjectHelper.after(key,":");  if (uri != null) {    defaultXPathFactory=XPathFactory.newInstance(uri);    LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});  }} @TO@ if (key.startsWith(XPathFactory.DEFAULT_PROPERTY_NAME)) {  String uri=ObjectHelper.after(key,":");  if (uri != null) {    defaultXPathFactory=XPathFactory.newInstance(uri);    LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});  }} @AT@ 41968 @LENGTH@ 450
---------------UPD Block@@ThenBody:{  String uri=ObjectHelper.after(key,":");  if (uri != null) {    defaultXPathFactory=XPathFactory.newInstance(uri);    LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});  }} @TO@ ThenBody:{  String uri=ObjectHelper.after(key,":");  if (uri != null) {    defaultXPathFactory=XPathFactory.newInstance(uri);    LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});  }} @AT@ 42024 @LENGTH@ 394
------------------UPD IfStatement@@if (uri != null) {  defaultXPathFactory=XPathFactory.newInstance(uri);  LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});} @TO@ if (uri != null) {  defaultXPathFactory=XPathFactory.newInstance(uri);  LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});} @AT@ 42117 @LENGTH@ 279
---------------------UPD Block@@ThenBody:{  defaultXPathFactory=XPathFactory.newInstance(uri);  LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});} @TO@ ThenBody:{  defaultXPathFactory=XPathFactory.newInstance(uri);  LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory});} @AT@ 42134 @LENGTH@ 262
------------------------UPD ExpressionStatement@@MethodInvocation:LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory}) @TO@ MethodInvocation:LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory}) @AT@ 42245 @LENGTH@ 125
---------------------------UPD MethodInvocation@@LOG.info("Using system property {} with value {} when created XPathFactory {}",new Object[]{key,uri,defaultXPathFactory}) @TO@ LOG.info("Using system property {} with value {} when created default XPathFactory {}",new Object[]{key,uri,defaultXPathFactory}) @AT@ 42245 @LENGTH@ 124
------------------------------UPD SimpleName@@MethodName:info:["Using system property {} with value {} when created XPathFactory {}", new Object[]{key,uri,defaultXPathFactory}] @TO@ MethodName:info:["Using system property {} with value {} when created default XPathFactory {}", new Object[]{key,uri,defaultXPathFactory}] @AT@ 42249 @LENGTH@ 120
---------------------------------UPD StringLiteral@@"Using system property {} with value {} when created XPathFactory {}" @TO@ "Using system property {} with value {} when created default XPathFactory {}" @AT@ 42254 @LENGTH@ 69


UPD EnhancedForStatement@@for (Repository repository : repositories) {  for (  Feature feature : repository.getFeatures()) {    if (!allfeatures.contains(feature)) {      allfeatures.add(feature);    }  }} @TO@ for (Repository repository : repositories) {  try {    for (    Feature feature : repository.getFeatures()) {      if (!allfeatures.contains(feature)) {        allfeatures.add(feature);      }    }  } catch (  Exception ex) {    LOGGER.debug("Could not load features from %s.",repository.getURI());  }} @AT@ 8535 @LENGTH@ 273
---INS TryStatement@@try {  for (  Feature feature : repository.getFeatures()) {    if (!allfeatures.contains(feature)) {      allfeatures.add(feature);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @TO@ EnhancedForStatement@@for (Repository repository : repositories) {  for (  Feature feature : repository.getFeatures()) {    if (!allfeatures.contains(feature)) {      allfeatures.add(feature);    }  }} @AT@ 8596 @LENGTH@ 390
------MOV EnhancedForStatement@@for (Feature feature : repository.getFeatures()) {  if (!allfeatures.contains(feature)) {    allfeatures.add(feature);  }} @TO@ TryStatement@@try {  for (  Feature feature : repository.getFeatures()) {    if (!allfeatures.contains(feature)) {      allfeatures.add(feature);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @AT@ 8596 @LENGTH@ 198
------INS CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @TO@ TryStatement@@try {  for (  Feature feature : repository.getFeatures()) {    if (!allfeatures.contains(feature)) {      allfeatures.add(feature);    }  }} catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @AT@ 8855 @LENGTH@ 131
---------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @AT@ 8862 @LENGTH@ 12
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 8862 @LENGTH@ 9
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 8872 @LENGTH@ 2
---------INS ExpressionStatement@@MethodInvocation:LOGGER.debug("Could not load features from %s.",repository.getURI()) @TO@ CatchClause@@catch (Exception ex) {  LOGGER.debug("Could not load features from %s.",repository.getURI());} @AT@ 8898 @LENGTH@ 70
------------INS MethodInvocation@@LOGGER.debug("Could not load features from %s.",repository.getURI()) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.debug("Could not load features from %s.",repository.getURI()) @AT@ 8898 @LENGTH@ 69
---------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.debug("Could not load features from %s.",repository.getURI()) @AT@ 8898 @LENGTH@ 6
---------------INS SimpleName@@MethodName:debug:["Could not load features from %s.", repository.getURI()] @TO@ MethodInvocation@@LOGGER.debug("Could not load features from %s.",repository.getURI()) @AT@ 8905 @LENGTH@ 62
------------------INS StringLiteral@@"Could not load features from %s." @TO@ SimpleName@@MethodName:debug:["Could not load features from %s.", repository.getURI()] @AT@ 8911 @LENGTH@ 34
------------------INS MethodInvocation@@repository.getURI() @TO@ SimpleName@@MethodName:debug:["Could not load features from %s.", repository.getURI()] @AT@ 8947 @LENGTH@ 19
---------------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.getURI() @AT@ 8947 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:getURI:[] @TO@ MethodInvocation@@repository.getURI() @AT@ 8958 @LENGTH@ 8


UPD ForStatement@@for (int i=0; i < cnt; i++) {  final String processName=readUTFZBytes(dataStream);  final byte[] processAuthCode=new byte[16];  final boolean processRunning=StreamUtils.readBoolean(dataStream);  readFully(dataStream,processAuthCode);  inventory.put(processName,new ProcessInfo(processName,authCode,processRunning));} @TO@ for (int i=0; i < cnt; i++) {  final String processName=readUTFZBytes(dataStream);  final byte[] processAuthCode=new byte[16];  readFully(dataStream,processAuthCode);  final boolean processRunning=StreamUtils.readBoolean(dataStream);  inventory.put(processName,new ProcessInfo(processName,authCode,processRunning));} @AT@ 5332 @LENGTH@ 488
---MOV VariableDeclarationStatement@@final boolean processRunning=StreamUtils.readBoolean(dataStream); @TO@ ForStatement@@for (int i=0; i < cnt; i++) {  final String processName=readUTFZBytes(dataStream);  final byte[] processAuthCode=new byte[16];  final boolean processRunning=StreamUtils.readBoolean(dataStream);  readFully(dataStream,processAuthCode);  inventory.put(processName,new ProcessInfo(processName,authCode,processRunning));} @AT@ 5547 @LENGTH@ 67


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + modulesDir) @TO@ ClassInstanceCreation:new IllegalStateException("Invalid modules directory: " + bundlesDir) @AT@ 3974 @LENGTH@ 76
---UPD ClassInstanceCreation@@IllegalStateException["Invalid modules directory: " + modulesDir] @TO@ IllegalStateException["Invalid modules directory: " + bundlesDir] @AT@ 3980 @LENGTH@ 69
------UPD InfixExpression@@"Invalid modules directory: " + modulesDir @TO@ "Invalid modules directory: " + bundlesDir @AT@ 4006 @LENGTH@ 42
---------UPD SimpleName@@modulesDir @TO@ bundlesDir @AT@ 4038 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(1,profiles.length) @TO@ MethodInvocation:assertEquals(2,profiles.length) @AT@ 3395 @LENGTH@ 33
---UPD MethodInvocation@@assertEquals(1,profiles.length) @TO@ assertEquals(2,profiles.length) @AT@ 3395 @LENGTH@ 32
------UPD SimpleName@@MethodName:assertEquals:[1, profiles.length] @TO@ MethodName:assertEquals:[2, profiles.length] @AT@ 3395 @LENGTH@ 32
---------UPD NumberLiteral@@1 @TO@ 2 @AT@ 3408 @LENGTH@ 1


UPD MethodDeclaration@@static, void, MethodName:forbidSystemExitCall,  @TO@ static, void, MethodName:disableSystemExitCall,  @AT@ 1683 @LENGTH@ 288
---UPD SimpleName@@MethodName:forbidSystemExitCall @TO@ MethodName:disableSystemExitCall @AT@ 1695 @LENGTH@ 20
---UPD VariableDeclarationStatement@@final SecurityManager securityManager=new SecurityManager(){
  @Override public void checkExit(  int status){
    throw new ExitTrapped(status);
  }
}
; @TO@ final SecurityManager securityManager=new SecurityManager(){
  @Override public void checkPermission(  Permission permission){
    if (permission.getName().startsWith("exitVM")) {
      throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));
    }
  }
}
; @AT@ 1722 @LENGTH@ 160
------UPD VariableDeclarationFragment@@securityManager=new SecurityManager(){
  @Override public void checkExit(  int status){
    throw new ExitTrapped(status);
  }
}
 @TO@ securityManager=new SecurityManager(){
  @Override public void checkPermission(  Permission permission){
    if (permission.getName().startsWith("exitVM")) {
      throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));
    }
  }
}
 @AT@ 1744 @LENGTH@ 137


UPD MethodDeclaration@@public, void, MethodName:testDestroy,  @TO@ public, void, MethodName:testDestroy, InterruptedException,  @AT@ 1922 @LENGTH@ 186
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:testDestroy,  @AT@ 1916 @LENGTH@ 20
---INS VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @TO@ MethodDeclaration@@public, void, MethodName:testDestroy,  @AT@ 2043 @LENGTH@ 65
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @AT@ 2043 @LENGTH@ 4
------INS VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @TO@ VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @AT@ 2048 @LENGTH@ 59
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @AT@ 2048 @LENGTH@ 4
---------INS MethodInvocation@@template.requestBody("direct:get",null,Long.class) @TO@ VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @AT@ 2055 @LENGTH@ 52
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("direct:get",null,Long.class) @AT@ 2055 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @TO@ MethodInvocation@@template.requestBody("direct:get",null,Long.class) @AT@ 2064 @LENGTH@ 43
---------------INS StringLiteral@@"direct:get" @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2076 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2090 @LENGTH@ 4
---------------INS TypeLiteral@@Long.class @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2096 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:assertTrue(Hazelcast.getInstances().isEmpty()) @TO@ MethodInvocation:assertEquals(0,body) @AT@ 2055 @LENGTH@ 47
------UPD MethodInvocation@@assertTrue(Hazelcast.getInstances().isEmpty()) @TO@ assertEquals(0,body) @AT@ 2055 @LENGTH@ 46
---------UPD SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @TO@ MethodName:assertEquals:[0, body] @AT@ 2055 @LENGTH@ 46
------------DEL MethodInvocation@@Hazelcast.getInstances().isEmpty() @AT@ 2066 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getInstances:[] @AT@ 2066 @LENGTH@ 24
---------------DEL SimpleName@@Name:Hazelcast @AT@ 2066 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 2091 @LENGTH@ 9
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @AT@ 2161 @LENGTH@ 1
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @AT@ 2164 @LENGTH@ 4


INS MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @TO@ TypeDeclaration@@[public]XADataSourceAddCompositeHandler, ResourceCompositeOperationHandler[OperationCommandWithDescription] @AT@ 2348 @LENGTH@ 163
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2348 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2358 @LENGTH@ 4
---INS SimpleName@@MethodName:recognizeArguments @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2363 @LENGTH@ 18
---INS SingleVariableDeclaration@@CommandContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2382 @LENGTH@ 18
------INS SimpleType@@CommandContext @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 2382 @LENGTH@ 14
------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 2397 @LENGTH@ 3
---INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2409 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:updateConfig(pidConfig,FAB_PREFIX + overridesLocation.replace('/','_'),overridesLocation,set,delete) @TO@ MethodInvocation:updateConfig(pidConfig,OVERRIDE_PREFIX + overridesLocation.replace('/','_'),overridesLocation,set,delete) @AT@ 7515 @LENGTH@ 106
---UPD MethodInvocation@@updateConfig(pidConfig,FAB_PREFIX + overridesLocation.replace('/','_'),overridesLocation,set,delete) @TO@ updateConfig(pidConfig,OVERRIDE_PREFIX + overridesLocation.replace('/','_'),overridesLocation,set,delete) @AT@ 7515 @LENGTH@ 105
------UPD SimpleName@@MethodName:updateConfig:[pidConfig, FAB_PREFIX + overridesLocation.replace('/','_'), overridesLocation, set, delete] @TO@ MethodName:updateConfig:[pidConfig, OVERRIDE_PREFIX + overridesLocation.replace('/','_'), overridesLocation, set, delete] @AT@ 7515 @LENGTH@ 105
---------UPD InfixExpression@@FAB_PREFIX + overridesLocation.replace('/','_') @TO@ OVERRIDE_PREFIX + overridesLocation.replace('/','_') @AT@ 7539 @LENGTH@ 48
------------UPD SimpleName@@FAB_PREFIX @TO@ OVERRIDE_PREFIX @AT@ 7539 @LENGTH@ 10


UPD ExpressionStatement@@Assignment:annotations=(Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR) @TO@ Assignment:annotations=(Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(FACES_ANNOTATIONS_SC_ATTR) @AT@ 1744 @LENGTH@ 142
---UPD Assignment@@annotations=(Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR) @TO@ annotations=(Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(FACES_ANNOTATIONS_SC_ATTR) @AT@ 1744 @LENGTH@ 141
------UPD CastExpression@@(Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR) @TO@ (Map<Class<? extends Annotation>,Set<Class<?>>>)servletContext.getAttribute(FACES_ANNOTATIONS_SC_ATTR) @AT@ 1758 @LENGTH@ 127
---------UPD MethodInvocation@@servletContext.getAttribute(JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR) @TO@ servletContext.getAttribute(FACES_ANNOTATIONS_SC_ATTR) @AT@ 1808 @LENGTH@ 77
------------UPD SimpleName@@MethodName:getAttribute:[JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR] @TO@ MethodName:getAttribute:[FACES_ANNOTATIONS_SC_ATTR] @AT@ 1823 @LENGTH@ 62
---------------DEL QualifiedName@@JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR @AT@ 1836 @LENGTH@ 48
------------------DEL SimpleName@@JSFAnnotationProcessor @AT@ 1836 @LENGTH@ 22
------------------DEL SimpleName@@FACES_ANNOTATIONS_SC_ATTR @AT@ 1859 @LENGTH@ 25
---------------INS SimpleName@@FACES_ANNOTATIONS_SC_ATTR @TO@ SimpleName@@MethodName:getAttribute:[JSFAnnotationProcessor.FACES_ANNOTATIONS_SC_ATTR] @AT@ 2012 @LENGTH@ 25


INS ExpressionStatement@@Assignment:this.uri=null @TO@ MethodDeclaration@@public, void, MethodName:setEndpoint, Endpoint endpoint,  @AT@ 3096 @LENGTH@ 16
---INS Assignment@@this.uri=null @TO@ ExpressionStatement@@Assignment:this.uri=null @AT@ 3096 @LENGTH@ 15
------INS FieldAccess@@this.uri @TO@ Assignment@@this.uri=null @AT@ 3096 @LENGTH@ 8
---------INS ThisExpression@@this @TO@ FieldAccess@@this.uri @AT@ 3096 @LENGTH@ 4
---------INS SimpleName@@uri @TO@ FieldAccess@@this.uri @AT@ 3101 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@this.uri=null @AT@ 3104 @LENGTH@ 1
------INS NullLiteral@@null @TO@ Assignment@@this.uri=null @AT@ 3107 @LENGTH@ 4


INS FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @TO@ TypeDeclaration@@[public]MongoDbComponent, DefaultComponent @AT@ 1243 @LENGTH@ 238
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @AT@ 1243 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @AT@ 1250 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @AT@ 1257 @LENGTH@ 5
---INS ParameterizedType@@Set<MongoDbOperation> @TO@ FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @AT@ 1263 @LENGTH@ 21
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<MongoDbOperation> @AT@ 1263 @LENGTH@ 3
------INS SimpleType@@MongoDbOperation @TO@ ParameterizedType@@Set<MongoDbOperation> @AT@ 1267 @LENGTH@ 16
---INS VariableDeclarationFragment@@WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)) @TO@ FieldDeclaration@@public, static, final, Set<MongoDbOperation>, [WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove))] @AT@ 1285 @LENGTH@ 195
------INS SimpleName@@WRITE_OPERATIONS @TO@ VariableDeclarationFragment@@WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)) @AT@ 1285 @LENGTH@ 16
------INS ClassInstanceCreation@@HashSet<MongoDbOperation>[Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)] @TO@ VariableDeclarationFragment@@WRITE_OPERATIONS=new HashSet<MongoDbOperation>(Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)) @AT@ 1317 @LENGTH@ 163
---------INS New@@new @TO@ ClassInstanceCreation@@HashSet<MongoDbOperation>[Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)] @AT@ 1317 @LENGTH@ 3
---------INS ParameterizedType@@HashSet<MongoDbOperation> @TO@ ClassInstanceCreation@@HashSet<MongoDbOperation>[Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)] @AT@ 1321 @LENGTH@ 25
------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<MongoDbOperation> @AT@ 1321 @LENGTH@ 7
------------INS SimpleType@@MongoDbOperation @TO@ ParameterizedType@@HashSet<MongoDbOperation> @AT@ 1329 @LENGTH@ 16
---------INS MethodInvocation@@Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove) @TO@ ClassInstanceCreation@@HashSet<MongoDbOperation>[Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove)] @AT@ 1347 @LENGTH@ 132
------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove) @AT@ 1347 @LENGTH@ 6
------------INS SimpleName@@MethodName:asList:[MongoDbOperation.insert, MongoDbOperation.save, MongoDbOperation.update, MongoDbOperation.remove] @TO@ MethodInvocation@@Arrays.asList(MongoDbOperation.insert,MongoDbOperation.save,MongoDbOperation.update,MongoDbOperation.remove) @AT@ 1354 @LENGTH@ 125
---------------INS QualifiedName@@MongoDbOperation.insert @TO@ SimpleName@@MethodName:asList:[MongoDbOperation.insert, MongoDbOperation.save, MongoDbOperation.update, MongoDbOperation.remove] @AT@ 1361 @LENGTH@ 23
------------------INS SimpleName@@MongoDbOperation @TO@ QualifiedName@@MongoDbOperation.insert @AT@ 1361 @LENGTH@ 16
------------------INS SimpleName@@insert @TO@ QualifiedName@@MongoDbOperation.insert @AT@ 1378 @LENGTH@ 6
---------------INS QualifiedName@@MongoDbOperation.save @TO@ SimpleName@@MethodName:asList:[MongoDbOperation.insert, MongoDbOperation.save, MongoDbOperation.update, MongoDbOperation.remove] @AT@ 1386 @LENGTH@ 21
------------------INS SimpleName@@MongoDbOperation @TO@ QualifiedName@@MongoDbOperation.save @AT@ 1386 @LENGTH@ 16
------------------INS SimpleName@@save @TO@ QualifiedName@@MongoDbOperation.save @AT@ 1403 @LENGTH@ 4
---------------INS QualifiedName@@MongoDbOperation.update @TO@ SimpleName@@MethodName:asList:[MongoDbOperation.insert, MongoDbOperation.save, MongoDbOperation.update, MongoDbOperation.remove] @AT@ 1430 @LENGTH@ 23
------------------INS SimpleName@@MongoDbOperation @TO@ QualifiedName@@MongoDbOperation.update @AT@ 1430 @LENGTH@ 16
------------------INS SimpleName@@update @TO@ QualifiedName@@MongoDbOperation.update @AT@ 1447 @LENGTH@ 6
---------------INS QualifiedName@@MongoDbOperation.remove @TO@ SimpleName@@MethodName:asList:[MongoDbOperation.insert, MongoDbOperation.save, MongoDbOperation.update, MongoDbOperation.remove] @AT@ 1455 @LENGTH@ 23
------------------INS SimpleName@@MongoDbOperation @TO@ QualifiedName@@MongoDbOperation.remove @AT@ 1455 @LENGTH@ 16
------------------INS SimpleName@@remove @TO@ QualifiedName@@MongoDbOperation.remove @AT@ 1472 @LENGTH@ 6


INS MethodDeclaration@@private, voidMethodName:RoutesXml,  @TO@ TypeDeclaration@@[public]RoutesXml,  @AT@ 1306 @LENGTH@ 54
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:RoutesXml,  @AT@ 1306 @LENGTH@ 7
---INS SimpleName@@MethodName:RoutesXml @TO@ MethodDeclaration@@private, voidMethodName:RoutesXml,  @AT@ 1314 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:instructions.add(MESSAGES.argServerConfig()) @TO@ MethodInvocation:instructions.add(MESSAGES.argShortServerConfig()) @AT@ 926 @LENGTH@ 45
---UPD MethodInvocation@@instructions.add(MESSAGES.argServerConfig()) @TO@ instructions.add(MESSAGES.argShortServerConfig()) @AT@ 926 @LENGTH@ 44
------UPD SimpleName@@MethodName:add:[MESSAGES.argServerConfig()] @TO@ MethodName:add:[MESSAGES.argShortServerConfig()] @AT@ 939 @LENGTH@ 31
---------UPD MethodInvocation@@MESSAGES.argServerConfig() @TO@ MESSAGES.argShortServerConfig() @AT@ 943 @LENGTH@ 26
------------UPD SimpleName@@MethodName:argServerConfig:[] @TO@ MethodName:argShortServerConfig:[] @AT@ 952 @LENGTH@ 17


DEL ExpressionStatement@@MethodInvocation:System.out.println(model) @AT@ 4367 @LENGTH@ 26
---DEL MethodInvocation@@System.out.println(model) @AT@ 4367 @LENGTH@ 25
------DEL QualifiedName@@Name:System.out @AT@ 4367 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:[model] @AT@ 4378 @LENGTH@ 14
---------DEL SimpleName@@model @AT@ 4386 @LENGTH@ 5


UPD FieldDeclaration@@private, List<Order>, [orders] @TO@ private, final, List<Order>, [orders] @AT@ 1344 @LENGTH@ 27
---INS Modifier@@final @TO@ FieldDeclaration@@private, List<Order>, [orders] @AT@ 1355 @LENGTH@ 5


UPD MethodDeclaration@@public, static, void, MethodName:createContainerPaths, IZKClient zooKeeper, String container, String version, String profile, InterruptedException, KeeperException,  @TO@ public, static, void, MethodName:createContainerPaths, IZKClient zooKeeper, String container, String version, String profiles, InterruptedException, KeeperException,  @AT@ 8175 @LENGTH@ 863
---UPD SingleVariableDeclaration@@String profile @TO@ String profiles @AT@ 8270 @LENGTH@ 14
------UPD SimpleName@@profile @TO@ profiles @AT@ 8277 @LENGTH@ 7
---UPD IfStatement@@if (version == null) {  version=ZooKeeperUtils.get(zooKeeper,CONFIG_DEFAULT_VERSION.getPath());} @TO@ if (version == null) {  version=ZooKeeperUtils.get(zooKeeper,CONFIG_VERSION.getPath(container));} @AT@ 8392 @LENGTH@ 119
------UPD Block@@ThenBody:{  version=ZooKeeperUtils.get(zooKeeper,CONFIG_DEFAULT_VERSION.getPath());} @TO@ ThenBody:{  version=ZooKeeperUtils.get(zooKeeper,CONFIG_VERSION.getPath(container));} @AT@ 8413 @LENGTH@ 98
---------UPD ExpressionStatement@@Assignment:version=ZooKeeperUtils.get(zooKeeper,CONFIG_DEFAULT_VERSION.getPath()) @TO@ Assignment:version=ZooKeeperUtils.get(zooKeeper,CONFIG_VERSION.getPath(container)) @AT@ 8427 @LENGTH@ 74
------------UPD Assignment@@version=ZooKeeperUtils.get(zooKeeper,CONFIG_DEFAULT_VERSION.getPath()) @TO@ version=ZooKeeperUtils.get(zooKeeper,CONFIG_VERSION.getPath(container)) @AT@ 8427 @LENGTH@ 73
---------------UPD MethodInvocation@@ZooKeeperUtils.get(zooKeeper,CONFIG_DEFAULT_VERSION.getPath()) @TO@ ZooKeeperUtils.get(zooKeeper,CONFIG_VERSION.getPath(container)) @AT@ 8437 @LENGTH@ 63
------------------UPD SimpleName@@MethodName:get:[zooKeeper, CONFIG_DEFAULT_VERSION.getPath()] @TO@ MethodName:get:[zooKeeper, CONFIG_VERSION.getPath(container)] @AT@ 8452 @LENGTH@ 48
---------------------UPD MethodInvocation@@CONFIG_DEFAULT_VERSION.getPath() @TO@ CONFIG_VERSION.getPath(container) @AT@ 8467 @LENGTH@ 32
------------------------UPD SimpleName@@Name:CONFIG_DEFAULT_VERSION @TO@ Name:CONFIG_VERSION @AT@ 8467 @LENGTH@ 22
------------------------UPD SimpleName@@MethodName:getPath:[] @TO@ MethodName:getPath:[container] @AT@ 8490 @LENGTH@ 9
---------------------------INS SimpleName@@container @TO@ SimpleName@@MethodName:getPath:[] @AT@ 8491 @LENGTH@ 9
---UPD IfStatement@@if (version != null) {  if (zooKeeper.exists(ZkPath.CONFIG_CONTAINER.getPath(container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_CONTAINER.getPath(container),version);  }  if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile);  }} @TO@ if (version != null) {  if (zooKeeper.exists(ZkPath.CONFIG_CONTAINER.getPath(container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_CONTAINER.getPath(container),version);  }  if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles);  }} @AT@ 8521 @LENGTH@ 511
------UPD Block@@ThenBody:{  if (zooKeeper.exists(ZkPath.CONFIG_CONTAINER.getPath(container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_CONTAINER.getPath(container),version);  }  if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile);  }} @TO@ ThenBody:{  if (zooKeeper.exists(ZkPath.CONFIG_CONTAINER.getPath(container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_CONTAINER.getPath(container),version);  }  if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {    ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles);  }} @AT@ 8542 @LENGTH@ 490
---------UPD IfStatement@@if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {  ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile);} @TO@ if (zooKeeper.exists(ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container)) == null || versionProvided) {  ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles);} @AT@ 8778 @LENGTH@ 244
------------UPD Block@@ThenBody:{  ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile);} @TO@ ThenBody:{  ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles);} @AT@ 8889 @LENGTH@ 133
---------------UPD ExpressionStatement@@MethodInvocation:ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile) @TO@ MethodInvocation:ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles) @AT@ 8907 @LENGTH@ 101
------------------UPD MethodInvocation@@ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profile) @TO@ ZooKeeperUtils.set(zooKeeper,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container),profiles) @AT@ 8907 @LENGTH@ 100
---------------------UPD SimpleName@@MethodName:set:[zooKeeper, ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container), profile] @TO@ MethodName:set:[zooKeeper, ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,container), profiles] @AT@ 8922 @LENGTH@ 85
------------------------UPD SimpleName@@profile @TO@ profiles @AT@ 8999 @LENGTH@ 7


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,earMetaData.getEarEnvironmentRefsGroup())) {  return;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,earMetaData.getEarEnvironmentRefsGroup(),propertyReplacer)) {  return;} @AT@ 5931 @LENGTH@ 127
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,earMetaData.getEarEnvironmentRefsGroup()) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,earMetaData.getEarEnvironmentRefsGroup(),propertyReplacer) @AT@ 5935 @LENGTH@ 90
------UPD SimpleName@@MethodName:parse:[reader, earMetaData.getEarEnvironmentRefsGroup()] @TO@ MethodName:parse:[reader, earMetaData.getEarEnvironmentRefsGroup(), propertyReplacer] @AT@ 5970 @LENGTH@ 55
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, earMetaData.getEarEnvironmentRefsGroup()] @AT@ 6027 @LENGTH@ 16


UPD FieldDeclaration@@static, final, SimpleAttributeDefinition, [READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build()] @TO@ static, final, SimpleAttributeDefinition, [READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build()] @AT@ 3246 @LENGTH@ 281
---UPD VariableDeclarationFragment@@READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @TO@ READ_ONLY=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @AT@ 3285 @LENGTH@ 241
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.STRING,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.READ_ONLY,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).setStorageRuntime().build() @AT@ 3309 @LENGTH@ 217
---------UPD MethodInvocation@@MethodName:create:[ModelDescriptionConstants.READ_ONLY, ModelType.STRING, true] @TO@ MethodName:create:[ModelDescriptionConstants.READ_ONLY, ModelType.BOOLEAN, true] @AT@ 3309 @LENGTH@ 100
------------UPD QualifiedName@@ModelType.STRING @TO@ ModelType.BOOLEAN @AT@ 3386 @LENGTH@ 16
---------------UPD SimpleName@@STRING @TO@ BOOLEAN @AT@ 3396 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, String, [DEFAULT_RELATIVE_TO="jboss.server.data.dir"] @TO@ static, final, String, [DEFAULT_RELATIVE_TO=ServerEnvironment.SERVER_DATA_DIR] @AT@ 7839 @LENGTH@ 74
---DEL Modifier@@private @AT@ 7839 @LENGTH@ 7
---UPD VariableDeclarationFragment@@DEFAULT_RELATIVE_TO="jboss.server.data.dir" @TO@ DEFAULT_RELATIVE_TO=ServerEnvironment.SERVER_DATA_DIR @AT@ 7867 @LENGTH@ 45
------DEL StringLiteral@@"jboss.server.data.dir" @AT@ 7889 @LENGTH@ 23
------INS QualifiedName@@ServerEnvironment.SERVER_DATA_DIR @TO@ VariableDeclarationFragment@@DEFAULT_RELATIVE_TO="jboss.server.data.dir" @AT@ 7927 @LENGTH@ 33
---------INS SimpleName@@ServerEnvironment @TO@ QualifiedName@@ServerEnvironment.SERVER_DATA_DIR @AT@ 7927 @LENGTH@ 17
---------INS SimpleName@@SERVER_DATA_DIR @TO@ QualifiedName@@ServerEnvironment.SERVER_DATA_DIR @AT@ 7945 @LENGTH@ 15


UPD MethodDeclaration@@private, voidMethodName:ObjectTypeAttributeDefinition, final String name, final String xmlName, final String suffix, final AttributeDefinition[] valueTypes, final boolean allowNull, final ParameterValidator validator, final ParameterCorrector corrector, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @TO@ private, voidMethodName:ObjectTypeAttributeDefinition, final String name, final String xmlName, final String suffix, final AttributeDefinition[] valueTypes, final boolean allowNull, final ParameterValidator validator, final ParameterCorrector corrector, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final DeprecationData deprecated, final AttributeAccess.Flag... flags,  @AT@ 2277 @LENGTH@ 742
---UPD SuperConstructorInvocation@@super(name,xmlName,null,ModelType.OBJECT,allowNull,false,null,corrector,validator,false,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @TO@ super(name,xmlName,null,ModelType.OBJECT,allowNull,false,null,corrector,validator,false,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags);
 @AT@ 2690 @LENGTH@ 164
------INS SimpleName@@deprecated @TO@ SuperConstructorInvocation@@super(name,xmlName,null,ModelType.OBJECT,allowNull,false,null,corrector,validator,false,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @AT@ 2964 @LENGTH@ 10
---INS SingleVariableDeclaration@@final DeprecationData deprecated @TO@ MethodDeclaration@@private, voidMethodName:ObjectTypeAttributeDefinition, final String name, final String xmlName, final String suffix, final AttributeDefinition[] valueTypes, final boolean allowNull, final ParameterValidator validator, final ParameterCorrector corrector, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @AT@ 2727 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2727 @LENGTH@ 5
------INS SimpleType@@DeprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2733 @LENGTH@ 15
------INS SimpleName@@deprecated @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2749 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"port") @TO@ MethodDeclaration@@protected, void, MethodName:doParse, Element element, ParserContext parserContext, BeanDefinitionBuilder builder,  @AT@ 2170 @LENGTH@ 56
---INS MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"port") @TO@ ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyValue(element,builder,"port") @AT@ 2170 @LENGTH@ 55
------INS SimpleName@@Name:ParsingUtils @TO@ MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"port") @AT@ 2170 @LENGTH@ 12
------INS SimpleName@@MethodName:setPropertyValue:[element, builder, "port"] @TO@ MethodInvocation@@ParsingUtils.setPropertyValue(element,builder,"port") @AT@ 2183 @LENGTH@ 42
---------INS SimpleName@@element @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "port"] @AT@ 2200 @LENGTH@ 7
---------INS SimpleName@@builder @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "port"] @AT@ 2209 @LENGTH@ 7
---------INS StringLiteral@@"port" @TO@ SimpleName@@MethodName:setPropertyValue:[element, builder, "port"] @AT@ 2218 @LENGTH@ 6


UPD TypeDeclaration@@[@XmlRootElement(name="wireTap"), @XmlAccessorType(XmlAccessType.FIELD), public]WireTapDefinition, NoOutputDefinition<Type>[ExecutorServiceAwareDefinition<WireTapDefinition<Type>>] @TO@ [@XmlRootElement(name="wireTap"), @XmlAccessorType(XmlAccessType.FIELD), public]WireTapDefinition, NoOutputDefinition<WireTapDefinition<Type>>[ExecutorServiceAwareDefinition<WireTapDefinition<Type>>] @AT@ 1702 @LENGTH@ 11078
---UPD ParameterizedType@@NoOutputDefinition<Type> @TO@ NoOutputDefinition<WireTapDefinition<Type>> @AT@ 1853 @LENGTH@ 24
------INS ParameterizedType@@WireTapDefinition<Type> @TO@ ParameterizedType@@NoOutputDefinition<Type> @AT@ 1872 @LENGTH@ 23
---------INS SimpleType@@WireTapDefinition @TO@ ParameterizedType@@WireTapDefinition<Type> @AT@ 1872 @LENGTH@ 17
---------MOV SimpleType@@Type @TO@ ParameterizedType@@WireTapDefinition<Type> @AT@ 1872 @LENGTH@ 4


UPD IfStatement@@if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean()) {  continue;} @TO@ if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false)) {  continue;} @AT@ 14119 @LENGTH@ 111
---UPD InfixExpression@@boottimeOnly && !propResource.get(BOOT_TIME).asBoolean() @TO@ boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14123 @LENGTH@ 56
------UPD PrefixExpression@@!propResource.get(BOOT_TIME).asBoolean() @TO@ !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14139 @LENGTH@ 40
---------UPD MethodInvocation@@propResource.get(BOOT_TIME).asBoolean() @TO@ propResource.get(BOOT_TIME).asBoolean(false) @AT@ 14140 @LENGTH@ 39
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 14168 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 14178 @LENGTH@ 5


INS IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @TO@ MethodDeclaration@@public, void, MethodName:decodeRequest, ClassLoader loader, Class<?>[] types, DataByteArrayInputStream source, Object[] target, IOException, ClassNotFoundException,  @AT@ 2687 @LENGTH@ 91
---INS InfixExpression@@args != null @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2691 @LENGTH@ 10
------INS SimpleName@@args @TO@ InfixExpression@@args != null @AT@ 2691 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@args != null @AT@ 2695 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@args != null @AT@ 2697 @LENGTH@ 4
---INS Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2704 @LENGTH@ 74
------MOV ExpressionStatement@@MethodInvocation:System.arraycopy(args,0,target,0,args.length) @TO@ Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @AT@ 2687 @LENGTH@ 50


UPD IfStatement@@if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6) {  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @TO@ if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6) {  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME);  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12032 @LENGTH@ 1927
---UPD Block@@ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @TO@ ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME);  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12077 @LENGTH@ 1882
------INS ExpressionStatement@@MethodInvocation:bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @TO@ Block@@ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12436 @LENGTH@ 82
---------INS MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @TO@ ExpressionStatement@@MethodInvocation:bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12436 @LENGTH@ 81
------------INS SimpleName@@Name:bufPoolRoot @TO@ MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12436 @LENGTH@ 11
------------INS SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @TO@ MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12448 @LENGTH@ 69
---------------INS SimpleName@@NAME @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12474 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12479 @LENGTH@ 4
---------------INS QualifiedName@@AttributeAccess.Storage.RUNTIME @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12485 @LENGTH@ 31
------------------INS QualifiedName@@AttributeAccess.Storage @TO@ QualifiedName@@AttributeAccess.Storage.RUNTIME @AT@ 12485 @LENGTH@ 23
---------------------INS SimpleName@@AttributeAccess @TO@ QualifiedName@@AttributeAccess.Storage @AT@ 12485 @LENGTH@ 15
---------------------INS SimpleName@@Storage @TO@ QualifiedName@@AttributeAccess.Storage @AT@ 12501 @LENGTH@ 7
------------------INS SimpleName@@RUNTIME @TO@ QualifiedName@@AttributeAccess.Storage.RUNTIME @AT@ 12509 @LENGTH@ 7


UPD TryStatement@@try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} @TO@ try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} finally {  bootThreadDone();} @AT@ 9179 @LENGTH@ 735
---INS Block@@FinallyBody:{  bootThreadDone();} @TO@ TryStatement@@try {  try {    boot(new BootContext(){      public ServiceTarget getServiceTarget(){        return target;      }    });  }  finally {    processState.setRunning();  }} catch (Throwable t) {  container.shutdown();  if (t instanceof StackOverflowError) {    ROOT_LOGGER.errorBootingContainer(t,bootStackSize,BOOT_STACK_SIZE_PROPERTY);  } else {    ROOT_LOGGER.errorBootingContainer(t);  }} @AT@ 9923 @LENGTH@ 57
------INS ExpressionStatement@@MethodInvocation:bootThreadDone() @TO@ Block@@FinallyBody:{  bootThreadDone();} @AT@ 9945 @LENGTH@ 17
---------INS MethodInvocation@@MethodName:bootThreadDone:[] @TO@ ExpressionStatement@@MethodInvocation:bootThreadDone() @AT@ 9945 @LENGTH@ 16


UPD IfStatement@@if (endpoint.getRestletMethods() != null) {  Method[] methods=endpoint.getRestletMethods();  for (  Method method : methods) {    router.addRoute(method,target);    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method);  }} else {  router.addRoute(endpoint.getRestletMethod(),target);  if (LOG.isDebugEnabled()) {    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());  }} @TO@ if (endpoint.getRestletMethods() != null) {  Method[] methods=endpoint.getRestletMethods();  for (  Method method : methods) {    router.addRoute(method,target);    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method);  }} else {  Method method=endpoint.getRestletMethod();  router.addRoute(method,target);  LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method);} @AT@ 10782 @LENGTH@ 565
---UPD Block@@ElseBody:{  router.addRoute(endpoint.getRestletMethod(),target);  if (LOG.isDebugEnabled()) {    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());  }} @TO@ ElseBody:{  Method method=endpoint.getRestletMethod();  router.addRoute(method,target);  LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method);} @AT@ 11102 @LENGTH@ 245
------DEL ExpressionStatement@@MethodInvocation:router.addRoute(endpoint.getRestletMethod(),target) @AT@ 11116 @LENGTH@ 53
---------DEL MethodInvocation@@router.addRoute(endpoint.getRestletMethod(),target) @AT@ 11116 @LENGTH@ 52
------------DEL SimpleName@@Name:router @AT@ 11116 @LENGTH@ 6
------------DEL SimpleName@@MethodName:addRoute:[endpoint.getRestletMethod(), target] @AT@ 11123 @LENGTH@ 45
---------------DEL MethodInvocation@@endpoint.getRestletMethod() @AT@ 11132 @LENGTH@ 27
---------------DEL SimpleName@@target @AT@ 11161 @LENGTH@ 6
------INS VariableDeclarationStatement@@Method method=endpoint.getRestletMethod(); @TO@ Block@@ElseBody:{  router.addRoute(endpoint.getRestletMethod(),target);  if (LOG.isDebugEnabled()) {    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());  }} @AT@ 11116 @LENGTH@ 44
---------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=endpoint.getRestletMethod(); @AT@ 11116 @LENGTH@ 6
---------INS VariableDeclarationFragment@@method=endpoint.getRestletMethod() @TO@ VariableDeclarationStatement@@Method method=endpoint.getRestletMethod(); @AT@ 11123 @LENGTH@ 36
------------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=endpoint.getRestletMethod() @AT@ 11123 @LENGTH@ 6
------------INS MethodInvocation@@endpoint.getRestletMethod() @TO@ VariableDeclarationFragment@@method=endpoint.getRestletMethod() @AT@ 11132 @LENGTH@ 27
---------------MOV SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getRestletMethod() @AT@ 11132 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getRestletMethod:[] @TO@ MethodInvocation@@endpoint.getRestletMethod() @AT@ 11141 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:router.addRoute(method,target) @TO@ Block@@ElseBody:{  router.addRoute(endpoint.getRestletMethod(),target);  if (LOG.isDebugEnabled()) {    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());  }} @AT@ 11173 @LENGTH@ 32
---------INS MethodInvocation@@router.addRoute(method,target) @TO@ ExpressionStatement@@MethodInvocation:router.addRoute(method,target) @AT@ 11173 @LENGTH@ 31
------------MOV SimpleName@@Name:LOG @TO@ MethodInvocation@@router.addRoute(method,target) @AT@ 11186 @LENGTH@ 3
------------MOV SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@router.addRoute(method,target) @AT@ 11190 @LENGTH@ 16
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:isDebugEnabled:[] @AT@ 11189 @LENGTH@ 6
---------------INS SimpleName@@target @TO@ SimpleName@@MethodName:isDebugEnabled:[] @AT@ 11197 @LENGTH@ 6
------DEL IfStatement@@if (LOG.isDebugEnabled()) {  LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());} @AT@ 11182 @LENGTH@ 155
---------DEL MethodInvocation@@LOG.isDebugEnabled() @AT@ 11186 @LENGTH@ 20
---------DEL Block@@ThenBody:{  LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());} @AT@ 11208 @LENGTH@ 129
------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod()) @TO@ Block@@ElseBody:{  router.addRoute(endpoint.getRestletMethod(),target);  if (LOG.isDebugEnabled()) {    LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod());  }} @AT@ 11226 @LENGTH@ 97
---------UPD MethodInvocation@@LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,endpoint.getRestletMethod()) @TO@ LOG.debug("Attached restlet uriPattern: {} method: {}",uriPattern,method) @AT@ 11226 @LENGTH@ 96
------------UPD SimpleName@@MethodName:debug:["Attached restlet uriPattern: {} method: {}", uriPattern, endpoint.getRestletMethod()] @TO@ MethodName:debug:["Attached restlet uriPattern: {} method: {}", uriPattern, method] @AT@ 11230 @LENGTH@ 92
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:debug:["Attached restlet uriPattern: {} method: {}", uriPattern, endpoint.getRestletMethod()] @AT@ 11286 @LENGTH@ 6
---------------DEL MethodInvocation@@endpoint.getRestletMethod() @AT@ 11294 @LENGTH@ 27
------------------DEL SimpleName@@Name:endpoint @AT@ 11294 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getRestletMethod:[] @AT@ 11303 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 3101 @LENGTH@ 87
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 3101 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("Unknown")] @AT@ 3101 @LENGTH@ 86
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 3168 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 3182 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from(getQueueEndpointName()).setExchangePattern(ExchangePattern.InOptionalOut).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message in=exchange.getIn();
    assertEquals("Hello World",in.getBody());
    replyDestination=in.getHeader("JMSReplyTo",Destination.class);
    cid=in.getHeader("JMSCorrelationID",String.class);
    LOG.debug("ReplyDestination: " + replyDestination);
    LOG.debug("JMSCorrelationID: " + cid);
    LOG.debug("Ahh I cannot send a reply. Someone else must do it.");
    latch.countDown();
  }
}
).to("mock:result") @TO@ MethodInvocation:from(getQueueEndpointName()).setExchangePattern(ExchangePattern.InOnly).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message in=exchange.getIn();
    assertEquals("Hello World",in.getBody());
    replyDestination=in.getHeader("JMSReplyTo",Destination.class);
    cid=in.getHeader("JMSCorrelationID",String.class);
    LOG.debug("ReplyDestination: " + replyDestination);
    LOG.debug("JMSCorrelationID: " + cid);
    LOG.debug("Ahh I cannot send a reply. Someone else must do it.");
    latch.countDown();
  }
}
).to("mock:result") @AT@ 6309 @LENGTH@ 807
---UPD MethodInvocation@@from(getQueueEndpointName()).setExchangePattern(ExchangePattern.InOptionalOut).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message in=exchange.getIn();
    assertEquals("Hello World",in.getBody());
    replyDestination=in.getHeader("JMSReplyTo",Destination.class);
    cid=in.getHeader("JMSCorrelationID",String.class);
    LOG.debug("ReplyDestination: " + replyDestination);
    LOG.debug("JMSCorrelationID: " + cid);
    LOG.debug("Ahh I cannot send a reply. Someone else must do it.");
    latch.countDown();
  }
}
).to("mock:result") @TO@ from(getQueueEndpointName()).setExchangePattern(ExchangePattern.InOnly).process(new Processor(){
  public void process(  Exchange exchange) throws Exception {
    Message in=exchange.getIn();
    assertEquals("Hello World",in.getBody());
    replyDestination=in.getHeader("JMSReplyTo",Destination.class);
    cid=in.getHeader("JMSCorrelationID",String.class);
    LOG.debug("ReplyDestination: " + replyDestination);
    LOG.debug("JMSCorrelationID: " + cid);
    LOG.debug("Ahh I cannot send a reply. Someone else must do it.");
    latch.countDown();
  }
}
).to("mock:result") @AT@ 6309 @LENGTH@ 806
------UPD MethodInvocation@@MethodName:setExchangePattern:[ExchangePattern.InOptionalOut] @TO@ MethodName:setExchangePattern:[ExchangePattern.InOnly] @AT@ 6309 @LENGTH@ 78
---------UPD QualifiedName@@ExchangePattern.InOptionalOut @TO@ ExchangePattern.InOnly @AT@ 6357 @LENGTH@ 29
------------UPD SimpleName@@InOptionalOut @TO@ InOnly @AT@ 6373 @LENGTH@ 13


INS MethodDeclaration@@String, MethodName:argShortServerConfig,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ServerMessages,  @AT@ 3858 @LENGTH@ 23
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argShortServerConfig,  @AT@ 3851 @LENGTH@ 6
---INS SimpleName@@MethodName:argShortServerConfig @TO@ MethodDeclaration@@String, MethodName:argShortServerConfig,  @AT@ 3858 @LENGTH@ 20


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,env)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @AT@ 4888 @LENGTH@ 241
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,env) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer) @AT@ 4892 @LENGTH@ 53
------UPD SimpleName@@MethodName:parse:[reader, env] @TO@ MethodName:parse:[reader, env, propertyReplacer] @AT@ 4927 @LENGTH@ 18
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, env] @AT@ 4409 @LENGTH@ 16


INS MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 21059 @LENGTH@ 131
---INS Modifier@@public @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21059 @LENGTH@ 6
---INS SimpleType@@AccessGrant @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21066 @LENGTH@ 11
---INS SimpleName@@MethodName:refreshAccess @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21078 @LENGTH@ 13
---INS SingleVariableDeclaration@@String refreshToken @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21092 @LENGTH@ 19
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String refreshToken @AT@ 21092 @LENGTH@ 6
------INS SimpleName@@refreshToken @TO@ SingleVariableDeclaration@@String refreshToken @AT@ 21099 @LENGTH@ 12
---INS SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21113 @LENGTH@ 50
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @AT@ 21113 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 21113 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 21127 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 21135 @LENGTH@ 6
------INS SimpleName@@additionalParameters @TO@ SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @AT@ 21143 @LENGTH@ 20
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, AccessGrant, MethodName:refreshAccess, String refreshToken, MultiValueMap<String,String> additionalParameters,  @AT@ 21172 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 21179 @LENGTH@ 4


UPD TypeDeclaration@@[public]ResourceTap, SourceTap<Properties,Resource> @TO@ [@SuppressWarnings("serial"), public]ResourceTap, SourceTap<Properties,Resource> @AT@ 1232 @LENGTH@ 1474
---INS SingleMemberAnnotation@@@SuppressWarnings("serial") @TO@ TypeDeclaration@@[public]ResourceTap, SourceTap<Properties,Resource> @AT@ 1232 @LENGTH@ 27


UPD TypeDeclaration@@[public, static]ProblematicBean,  @TO@ [public, static, final]ProblematicBean,  @AT@ 2192 @LENGTH@ 208
---INS Modifier@@final @TO@ TypeDeclaration@@[public, static]ProblematicBean,  @AT@ 3010 @LENGTH@ 5


DEL MethodDeclaration@@public, voidMethodName:JettyEndpointSetHttpTraceTest,  @AT@ 1188 @LENGTH@ 121
---DEL Modifier@@public @AT@ 1188 @LENGTH@ 6
---DEL SimpleName@@MethodName:JettyEndpointSetHttpTraceTest @AT@ 1195 @LENGTH@ 29
---DEL ExpressionStatement@@Assignment:portTraceOn=getNextPort() @AT@ 1237 @LENGTH@ 28
------DEL Assignment@@portTraceOn=getNextPort() @AT@ 1237 @LENGTH@ 27
---------DEL SimpleName@@portTraceOn @AT@ 1237 @LENGTH@ 11
---------DEL Operator@@= @AT@ 1248 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:getNextPort:[] @AT@ 1251 @LENGTH@ 13
---DEL ExpressionStatement@@Assignment:portTraceOff=getNextPort() @AT@ 1274 @LENGTH@ 29
------DEL Assignment@@portTraceOff=getNextPort() @AT@ 1274 @LENGTH@ 28
---------DEL SimpleName@@portTraceOff @AT@ 1274 @LENGTH@ 12
---------DEL Operator@@= @AT@ 1286 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:getNextPort:[] @AT@ 1289 @LENGTH@ 13


UPD VariableDeclarationStatement@@String response=producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class); @TO@ String response=template.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class); @AT@ 1334 @LENGTH@ 248
---UPD VariableDeclarationFragment@@response=producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class) @TO@ response=template.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class) @AT@ 1341 @LENGTH@ 240
------UPD MethodInvocation@@producerTemplate.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class) @TO@ template.requestBody("netty:udp://localhost:{{port}}?sync=true","After the Battle of Thermopylae in 480 BC - Simonides of Ceos (c. 556 BC-468 BC), Greek lyric poet wrote ?",String.class) @AT@ 1352 @LENGTH@ 229
---------UPD SimpleName@@Name:producerTemplate @TO@ Name:template @AT@ 1352 @LENGTH@ 16


UPD TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @TO@ try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  file.getParentFile().mkdirs();  if (!file.getParentFile().isDirectory()) {    throw new IOException("Unable to create directory " + file.getParentFile().toString());  }  File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile());  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  is.close();  os.close();  if (file.exists() && !file.delete()) {    throw new IOException("Unable to delete file: " + file.toString());  }  if (!tmp.renameTo(file)) {    throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());  }  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 3516 @LENGTH@ 1028
---DEL VariableDeclarationStatement@@File tmp=new File(file.getAbsolutePath() + ".tmp"); @AT@ 3971 @LENGTH@ 53
------DEL VariableDeclarationFragment@@tmp=new File(file.getAbsolutePath() + ".tmp") @AT@ 3976 @LENGTH@ 47
---------DEL ClassInstanceCreation@@File[file.getAbsolutePath() + ".tmp"] @AT@ 3982 @LENGTH@ 41
---INS ExpressionStatement@@MethodInvocation:file.getParentFile().mkdirs() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 3972 @LENGTH@ 30
------INS MethodInvocation@@file.getParentFile().mkdirs() @TO@ ExpressionStatement@@MethodInvocation:file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 29
---------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 20
---------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3972 @LENGTH@ 4
---------INS SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@file.getParentFile().mkdirs() @AT@ 3993 @LENGTH@ 8
---INS IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4019 @LENGTH@ 168
------INS PrefixExpression@@!file.getParentFile().isDirectory() @TO@ IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4023 @LENGTH@ 35
---------INS Operator@@! @TO@ PrefixExpression@@!file.getParentFile().isDirectory() @AT@ 4023 @LENGTH@ 1
---------INS MethodInvocation@@file.getParentFile().isDirectory() @TO@ PrefixExpression@@!file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 20
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4024 @LENGTH@ 4
------------INS SimpleName@@MethodName:isDirectory:[] @TO@ MethodInvocation@@file.getParentFile().isDirectory() @AT@ 4045 @LENGTH@ 13
------INS Block@@ThenBody:{  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @TO@ IfStatement@@if (!file.getParentFile().isDirectory()) {  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4060 @LENGTH@ 127
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to create directory " + file.getParentFile().toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to create directory " + file.getParentFile().toString());} @AT@ 4082 @LENGTH@ 87
------------INS ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to create directory " + file.getParentFile().toString()) @AT@ 4088 @LENGTH@ 80
---------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4088 @LENGTH@ 3
---------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4092 @LENGTH@ 11
---------------INS InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @TO@ ClassInstanceCreation@@IOException["Unable to create directory " + file.getParentFile().toString()] @AT@ 4104 @LENGTH@ 63
------------------INS StringLiteral@@"Unable to create directory " @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4104 @LENGTH@ 29
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4133 @LENGTH@ 1
------------------INS MethodInvocation@@file.getParentFile().toString() @TO@ InfixExpression@@"Unable to create directory " + file.getParentFile().toString() @AT@ 4136 @LENGTH@ 31
---------------------INS MethodInvocation@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4136 @LENGTH@ 20
---------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4136 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@file.getParentFile().toString() @AT@ 4157 @LENGTH@ 10
---DEL ExpressionStatement@@MethodInvocation:tmp.getParentFile().mkdirs() @AT@ 4041 @LENGTH@ 29
------DEL MethodInvocation@@tmp.getParentFile().mkdirs() @AT@ 4041 @LENGTH@ 28
---------DEL MethodInvocation@@MethodName:getParentFile:[] @AT@ 4041 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:file.delete() @AT@ 4178 @LENGTH@ 14
------DEL MethodInvocation@@file.delete() @AT@ 4178 @LENGTH@ 13
---INS VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4204 @LENGTH@ 76
------MOV SimpleType@@File @TO@ VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @AT@ 3971 @LENGTH@ 4
------INS VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @TO@ VariableDeclarationStatement@@File tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()); @AT@ 4209 @LENGTH@ 70
---------MOV SimpleName@@tmp @TO@ VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 3976 @LENGTH@ 3
---------INS MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @TO@ VariableDeclarationFragment@@tmp=File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4215 @LENGTH@ 64
------------INS SimpleName@@Name:File @TO@ MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4215 @LENGTH@ 4
------------INS SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @TO@ MethodInvocation@@File.createTempFile("fabric-agent-",null,file.getParentFile()) @AT@ 4220 @LENGTH@ 59
---------------INS StringLiteral@@"fabric-agent-" @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4235 @LENGTH@ 15
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4252 @LENGTH@ 4
---------------INS MethodInvocation@@file.getParentFile() @TO@ SimpleName@@MethodName:createTempFile:["fabric-agent-", null, file.getParentFile()] @AT@ 4258 @LENGTH@ 20
------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getParentFile() @AT@ 4258 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getParentFile:[] @TO@ MethodInvocation@@file.getParentFile() @AT@ 4263 @LENGTH@ 15
---DEL ExpressionStatement@@MethodInvocation:tmp.renameTo(file) @AT@ 4209 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:is.close() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4388 @LENGTH@ 11
------INS MethodInvocation@@is.close() @TO@ ExpressionStatement@@MethodInvocation:is.close() @AT@ 4388 @LENGTH@ 10
---------INS SimpleName@@Name:is @TO@ MethodInvocation@@is.close() @AT@ 4388 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@is.close() @AT@ 4391 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:os.close() @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4416 @LENGTH@ 11
------INS MethodInvocation@@os.close() @TO@ ExpressionStatement@@MethodInvocation:os.close() @AT@ 4416 @LENGTH@ 10
---------INS SimpleName@@Name:os @TO@ MethodInvocation@@os.close() @AT@ 4416 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@os.close() @AT@ 4419 @LENGTH@ 7
---INS IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4444 @LENGTH@ 144
------INS InfixExpression@@file.exists() && !file.delete() @TO@ IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4448 @LENGTH@ 31
---------INS MethodInvocation@@file.exists() @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4448 @LENGTH@ 13
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 4448 @LENGTH@ 4
------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 4453 @LENGTH@ 8
---------INS Operator@@&& @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4461 @LENGTH@ 2
---------INS PrefixExpression@@!file.delete() @TO@ InfixExpression@@file.exists() && !file.delete() @AT@ 4465 @LENGTH@ 14
------------INS Operator@@! @TO@ PrefixExpression@@!file.delete() @AT@ 4465 @LENGTH@ 1
------------INS MethodInvocation@@file.delete() @TO@ PrefixExpression@@!file.delete() @AT@ 4466 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.delete() @AT@ 4466 @LENGTH@ 4
---------------INS SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.delete() @AT@ 4471 @LENGTH@ 8
------INS Block@@ThenBody:{  throw new IOException("Unable to delete file: " + file.toString());} @TO@ IfStatement@@if (file.exists() && !file.delete()) {  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4481 @LENGTH@ 107
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to delete file: " + file.toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to delete file: " + file.toString());} @AT@ 4503 @LENGTH@ 67
------------INS ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to delete file: " + file.toString()) @AT@ 4509 @LENGTH@ 60
---------------MOV New@@new @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3982 @LENGTH@ 3
---------------MOV SimpleType@@File @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3986 @LENGTH@ 4
---------------MOV InfixExpression@@file.getAbsolutePath() + ".tmp" @TO@ ClassInstanceCreation@@IOException["Unable to delete file: " + file.toString()] @AT@ 3991 @LENGTH@ 31
------------------UPD MethodInvocation@@file.getAbsolutePath() @TO@ file.toString() @AT@ 3991 @LENGTH@ 22
---------------------UPD SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodName:toString:[] @AT@ 3996 @LENGTH@ 17
------------------DEL Operator@@+ @AT@ 4013 @LENGTH@ 1
------------------DEL StringLiteral@@".tmp" @AT@ 4016 @LENGTH@ 6
------------------INS StringLiteral@@"Unable to delete file: " @TO@ InfixExpression@@file.getAbsolutePath() + ".tmp" @AT@ 4525 @LENGTH@ 25
------------------INS Operator@@+ @TO@ InfixExpression@@file.getAbsolutePath() + ".tmp" @AT@ 4550 @LENGTH@ 1
---INS IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @TO@ TryStatement@@try {  configuration.enableProxy(artifact.getArtifactURL());  String repository=system.getFile().getAbsolutePath();  if (!repository.endsWith(Parser.FILE_SEPARATOR)) {    repository=repository + Parser.FILE_SEPARATOR;  }  InputStream is=artifact.getInputStream();  File file=new File(repository + parser.getArtifactPath());  File tmp=new File(file.getAbsolutePath() + ".tmp");  tmp.getParentFile().mkdirs();  OutputStream os=new FileOutputStream(tmp);  copy(is,os);  file.delete();  tmp.renameTo(file);  return file;} catch (IOException ignore) {  LOG.debug(Ix2 + "Could not download [" + artifact+ "]");  LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");} @AT@ 4605 @LENGTH@ 157
------INS PrefixExpression@@!tmp.renameTo(file) @TO@ IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4609 @LENGTH@ 19
---------MOV MethodInvocation@@tmp.renameTo(file) @TO@ PrefixExpression@@!tmp.renameTo(file) @AT@ 4209 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!tmp.renameTo(file) @AT@ 4609 @LENGTH@ 1
------INS Block@@ThenBody:{  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @TO@ IfStatement@@if (!tmp.renameTo(file)) {  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4630 @LENGTH@ 132
---------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString()) @TO@ Block@@ThenBody:{  throw new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString());} @AT@ 4652 @LENGTH@ 92
------------INS ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to rename file " + tmp.toString() + " to "+ file.toString()) @AT@ 4658 @LENGTH@ 85
---------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4658 @LENGTH@ 3
---------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4662 @LENGTH@ 11
---------------INS InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @TO@ ClassInstanceCreation@@IOException["Unable to rename file " + tmp.toString() + " to "+ file.toString()] @AT@ 4674 @LENGTH@ 68
------------------INS StringLiteral@@"Unable to rename file " @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4674 @LENGTH@ 24
------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4698 @LENGTH@ 1
------------------INS MethodInvocation@@tmp.toString() @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4701 @LENGTH@ 14
---------------------MOV SimpleName@@Name:tmp @TO@ MethodInvocation@@tmp.toString() @AT@ 4041 @LENGTH@ 3
---------------------MOV SimpleName@@MethodName:mkdirs:[] @TO@ MethodInvocation@@tmp.toString() @AT@ 4061 @LENGTH@ 8
------------------INS StringLiteral@@" to " @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4718 @LENGTH@ 6
------------------INS MethodInvocation@@file.toString() @TO@ InfixExpression@@"Unable to rename file " + tmp.toString() + " to "+ file.toString() @AT@ 4727 @LENGTH@ 15
---------------------MOV SimpleName@@Name:file @TO@ MethodInvocation@@file.toString() @AT@ 4178 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:delete:[] @TO@ MethodInvocation@@file.toString() @AT@ 4183 @LENGTH@ 8


UPD VariableDeclarationStatement@@ManagementResourceRegistration hostRegistration=root.registerSubModel(PathElement.pathElement(HOST),HostDescriptionProviders.HOST_ROOT_PROVIDER); @TO@ ManagementResourceRegistration hostRegistration=root.registerSubModel(PathElement.pathElement(HOST),new DescriptionProvider(){
  public ModelNode getModelDescription(  Locale locale){
    return new ModelNode();
  }
}
); @AT@ 31620 @LENGTH@ 148
---UPD VariableDeclarationFragment@@hostRegistration=root.registerSubModel(PathElement.pathElement(HOST),HostDescriptionProviders.HOST_ROOT_PROVIDER) @TO@ hostRegistration=root.registerSubModel(PathElement.pathElement(HOST),new DescriptionProvider(){
  public ModelNode getModelDescription(  Locale locale){
    return new ModelNode();
  }
}
) @AT@ 31651 @LENGTH@ 116
------UPD MethodInvocation@@root.registerSubModel(PathElement.pathElement(HOST),HostDescriptionProviders.HOST_ROOT_PROVIDER) @TO@ root.registerSubModel(PathElement.pathElement(HOST),new DescriptionProvider(){
  public ModelNode getModelDescription(  Locale locale){
    return new ModelNode();
  }
}
) @AT@ 31670 @LENGTH@ 97
---------UPD SimpleName@@MethodName:registerSubModel:[PathElement.pathElement(HOST), HostDescriptionProviders.HOST_ROOT_PROVIDER] @TO@ MethodName:registerSubModel:[PathElement.pathElement(HOST), new DescriptionProvider(){
  public ModelNode getModelDescription(  Locale locale){
    return new ModelNode();
  }
}
] @AT@ 31675 @LENGTH@ 92
------------INS ClassInstanceCreation@@DescriptionProvider[] @TO@ SimpleName@@MethodName:registerSubModel:[PathElement.pathElement(HOST), HostDescriptionProviders.HOST_ROOT_PROVIDER] @AT@ 31400 @LENGTH@ 189
---------------INS New@@new @TO@ ClassInstanceCreation@@DescriptionProvider[] @AT@ 31400 @LENGTH@ 3
---------------INS SimpleType@@DescriptionProvider @TO@ ClassInstanceCreation@@DescriptionProvider[] @AT@ 31404 @LENGTH@ 19
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@DescriptionProvider[] @AT@ 31426 @LENGTH@ 163
------------------INS MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 31448 @LENGTH@ 123
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 31448 @LENGTH@ 6
---------------------INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 31455 @LENGTH@ 9
---------------------INS SimpleName@@MethodName:getModelDescription @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 31465 @LENGTH@ 19
---------------------INS SingleVariableDeclaration@@Locale locale @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 31485 @LENGTH@ 13
------------------------INS SimpleType@@Locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 31485 @LENGTH@ 6
------------------------INS SimpleName@@locale @TO@ SingleVariableDeclaration@@Locale locale @AT@ 31492 @LENGTH@ 6
---------------------INS ReturnStatement@@ClassInstanceCreation:new ModelNode() @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 31526 @LENGTH@ 23
------------------------INS ClassInstanceCreation@@ModelNode[] @TO@ ReturnStatement@@ClassInstanceCreation:new ModelNode() @AT@ 31533 @LENGTH@ 15
---------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 31533 @LENGTH@ 3
---------------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 31537 @LENGTH@ 9
------------DEL QualifiedName@@HostDescriptionProviders.HOST_ROOT_PROVIDER @AT@ 31723 @LENGTH@ 43
---------------DEL SimpleName@@HostDescriptionProviders @AT@ 31723 @LENGTH@ 24
---------------DEL SimpleName@@HOST_ROOT_PROVIDER @AT@ 31748 @LENGTH@ 18


UPD IfStatement@@if (ensembleAutoStart) {  createLocalServer();} @TO@ if (ensembleAutoStart) {  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2472 @LENGTH@ 67
---UPD Block@@ThenBody:{  createLocalServer();} @TO@ ThenBody:{  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2495 @LENGTH@ 44
------INS ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ Block@@ThenBody:{  createLocalServer();} @AT@ 2509 @LENGTH@ 172
---------INS MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2509 @LENGTH@ 171
------------INS ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2509 @LENGTH@ 163
---------------INS New@@new @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2509 @LENGTH@ 3
---------------INS SimpleType@@Thread @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2513 @LENGTH@ 6
---------------INS ClassInstanceCreation@@Runnable[] @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2520 @LENGTH@ 151
------------------INS New@@new @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2520 @LENGTH@ 3
------------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2524 @LENGTH@ 8
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2535 @LENGTH@ 136
---------------------INS MethodDeclaration@@public, void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2579 @LENGTH@ 78
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2579 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2586 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2591 @LENGTH@ 3
------------------------INS ExpressionStatement@@MethodInvocation:createLocalServer() @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2619 @LENGTH@ 20
---------------------------MOV MethodInvocation@@MethodName:createLocalServer:[] @TO@ ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2509 @LENGTH@ 19
------------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2673 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2509 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:op.get(CONTENT).set(content) @TO@ MethodInvocation:op.get(CONTENT).get(HASH).set(content) @AT@ 53080 @LENGTH@ 29
---UPD MethodInvocation@@op.get(CONTENT).set(content) @TO@ op.get(CONTENT).get(HASH).set(content) @AT@ 53080 @LENGTH@ 28
------INS MethodInvocation@@MethodName:get:[HASH] @TO@ MethodInvocation@@op.get(CONTENT).set(content) @AT@ 53080 @LENGTH@ 25
---------INS SimpleName@@HASH @TO@ MethodInvocation@@MethodName:get:[HASH] @AT@ 53100 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION,validateOperationHandler) @TO@ MethodInvocation:hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION_PRIVATE,validateOperationHandler) @AT@ 17165 @LENGTH@ 105
---UPD MethodInvocation@@hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION,validateOperationHandler) @TO@ hostRegistration.registerOperationHandler(ValidateOperationHandler.DEFINITION_PRIVATE,validateOperationHandler) @AT@ 17165 @LENGTH@ 104
------UPD SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, validateOperationHandler] @TO@ MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION_PRIVATE, validateOperationHandler] @AT@ 17182 @LENGTH@ 87
---------UPD QualifiedName@@ValidateOperationHandler.DEFINITION @TO@ ValidateOperationHandler.DEFINITION_PRIVATE @AT@ 17207 @LENGTH@ 35
------------UPD SimpleName@@DEFINITION @TO@ DEFINITION_PRIVATE @AT@ 17232 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,null,pathManagerService) @TO@ MethodInvocation:ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,pathManagerService) @AT@ 4886 @LENGTH@ 608
---UPD MethodInvocation@@ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,null,pathManagerService) @TO@ ServerControllerModelUtil.initOperations(rootRegistration,createContentRepository(),new NullConfigurationPersister(),createStandaloneServerEnvironment(),null,runningModeControl,null,new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl),false,pathManagerService) @AT@ 4886 @LENGTH@ 607
------UPD SimpleName@@MethodName:initOperations:[rootRegistration, createContentRepository(), new NullConfigurationPersister(), createStandaloneServerEnvironment(), null, runningModeControl, null, new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl), false, null, pathManagerService] @TO@ MethodName:initOperations:[rootRegistration, createContentRepository(), new NullConfigurationPersister(), createStandaloneServerEnvironment(), null, runningModeControl, null, new ExtensionRegistry(ProcessType.STANDALONE_SERVER,runningModeControl), false, pathManagerService] @AT@ 4912 @LENGTH@ 581
---------DEL NullLiteral@@null @AT@ 5423 @LENGTH@ 4


UPD FieldDeclaration@@private, static, final, String, [AETHER_API_NAME="/org/sonatype/aether/aether-api/"] @TO@ private, static, final, String, [AETHER_API_NAME=File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\"] @AT@ 3085 @LENGTH@ 81
---UPD VariableDeclarationFragment@@AETHER_API_NAME="/org/sonatype/aether/aether-api/" @TO@ AETHER_API_NAME=File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3113 @LENGTH@ 52
------INS ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @TO@ VariableDeclarationFragment@@AETHER_API_NAME="/org/sonatype/aether/aether-api/" @AT@ 3131 @LENGTH@ 104
---------INS InfixExpression@@File.separatorChar == '/' @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3131 @LENGTH@ 25
------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3131 @LENGTH@ 18
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 3131 @LENGTH@ 4
---------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 3136 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3149 @LENGTH@ 2
------------INS CharacterLiteral@@'/' @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3153 @LENGTH@ 3
---------INS StringLiteral@@"/org/sonatype/aether/aether-api/" @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3159 @LENGTH@ 34
---------INS StringLiteral@@"\\org\\sonatype\\aether\\aether-api\\" @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3196 @LENGTH@ 39
------DEL StringLiteral@@"/org/sonatype/aether/aether-api/" @AT@ 3131 @LENGTH@ 34


INS ExpressionStatement@@MethodInvocation:localServer.awaitTermination(5000) @TO@ MethodDeclaration@@public, void, MethodName:httpConnectionNotOk, Exception,  @AT@ 1620 @LENGTH@ 35
---INS MethodInvocation@@localServer.awaitTermination(5000) @TO@ ExpressionStatement@@MethodInvocation:localServer.awaitTermination(5000) @AT@ 1620 @LENGTH@ 34
------INS SimpleName@@Name:localServer @TO@ MethodInvocation@@localServer.awaitTermination(5000) @AT@ 1620 @LENGTH@ 11
------INS SimpleName@@MethodName:awaitTermination:[5000] @TO@ MethodInvocation@@localServer.awaitTermination(5000) @AT@ 1632 @LENGTH@ 22
---------INS NumberLiteral@@5000 @TO@ SimpleName@@MethodName:awaitTermination:[5000] @AT@ 1649 @LENGTH@ 4


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup)) {  return;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup,propertyReplacer)) {  return;} @AT@ 3774 @LENGTH@ 227
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,jndiEnvRefGroup,propertyReplacer) @AT@ 3778 @LENGTH@ 65
------UPD SimpleName@@MethodName:parse:[reader, jndiEnvRefGroup] @TO@ MethodName:parse:[reader, jndiEnvRefGroup, propertyReplacer] @AT@ 3813 @LENGTH@ 30
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, jndiEnvRefGroup] @AT@ 3790 @LENGTH@ 16


INS MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @TO@ TypeDeclaration@@[public]ZooKeeperConfigAdminBridge, [NodeEventsListener<String>, LifecycleListener] @AT@ 7895 @LENGTH@ 233
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7895 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7903 @LENGTH@ 6
---INS SimpleType@@BundleContext @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7910 @LENGTH@ 13
---INS SimpleName@@MethodName:getBundleContext @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7924 @LENGTH@ 16
---INS TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7953 @LENGTH@ 169
------INS ReturnStatement@@MethodInvocation:FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @TO@ TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @AT@ 7971 @LENGTH@ 84
---------INS MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @TO@ ReturnStatement@@MethodInvocation:FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 76
------------INS MethodInvocation@@MethodName:getBundle:[ZooKeeperConfigAdminBridge.class] @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 57
---------------INS TypeLiteral@@ZooKeeperConfigAdminBridge.class @TO@ MethodInvocation@@MethodName:getBundle:[ZooKeeperConfigAdminBridge.class] @AT@ 8002 @LENGTH@ 32
------------INS SimpleName@@Name:FrameworkUtil @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 13
------------INS SimpleName@@MethodName:getBundleContext:[] @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 8036 @LENGTH@ 18
------INS CatchClause@@catch (Throwable t) {  return null;} @TO@ TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @AT@ 8066 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  return null;} @AT@ 8073 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 8073 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 8083 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Throwable t) {  return null;} @AT@ 8100 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8107 @LENGTH@ 4


UPD IfStatement@@if (deploymentUnit.getParent() == null) {  standalone=Boolean.TRUE;} @TO@ if (deploymentUnit.getParent() == null) {  standalone=Boolean.TRUE;} else {  contextId=deploymentUnit.getParent().getName() + "!" + contextId;} @AT@ 1669 @LENGTH@ 90
---INS Block@@ElseBody:{  contextId=deploymentUnit.getParent().getName() + "!" + contextId;} @TO@ IfStatement@@if (deploymentUnit.getParent() == null) {  standalone=Boolean.TRUE;} @AT@ 1773 @LENGTH@ 91
------INS ExpressionStatement@@Assignment:contextId=deploymentUnit.getParent().getName() + "!" + contextId @TO@ Block@@ElseBody:{  contextId=deploymentUnit.getParent().getName() + "!" + contextId;} @AT@ 1787 @LENGTH@ 67
---------INS Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @TO@ ExpressionStatement@@Assignment:contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1787 @LENGTH@ 66
------------INS SimpleName@@contextId @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1787 @LENGTH@ 9
------------INS Operator@@= @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1796 @LENGTH@ 1
------------INS InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1799 @LENGTH@ 54
---------------INS MethodInvocation@@deploymentUnit.getParent().getName() @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1799 @LENGTH@ 36
------------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 1799 @LENGTH@ 26
------------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 1799 @LENGTH@ 14
------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 1826 @LENGTH@ 9
---------------INS Operator@@+ @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1835 @LENGTH@ 1
---------------INS StringLiteral@@"!" @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1838 @LENGTH@ 3
---------------INS SimpleName@@contextId @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 1844 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(20) @TO@ MethodInvocation:Thread.sleep(200) @AT@ 2019 @LENGTH@ 17
---UPD MethodInvocation@@Thread.sleep(20) @TO@ Thread.sleep(200) @AT@ 2019 @LENGTH@ 16
------UPD SimpleName@@MethodName:sleep:[20] @TO@ MethodName:sleep:[200] @AT@ 2026 @LENGTH@ 9
---------UPD NumberLiteral@@20 @TO@ 200 @AT@ 2032 @LENGTH@ 2


UPD WhileStatement@@while (null != rootCause) {  rootCause=rootCause.getCause();} @TO@ while (null != rootCause && rootCause.getCause() != null) {  rootCause=rootCause.getCause();} @AT@ 2942 @LENGTH@ 91
---INS InfixExpression@@null != rootCause && rootCause.getCause() != null @TO@ WhileStatement@@while (null != rootCause) {  rootCause=rootCause.getCause();} @AT@ 2949 @LENGTH@ 49
------INS InfixExpression@@null != rootCause @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2949 @LENGTH@ 17
---------MOV NullLiteral@@null @TO@ InfixExpression@@null != rootCause @AT@ 2949 @LENGTH@ 4
---------MOV Operator@@!= @TO@ InfixExpression@@null != rootCause @AT@ 2953 @LENGTH@ 2
---------MOV SimpleName@@rootCause @TO@ InfixExpression@@null != rootCause @AT@ 2957 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2966 @LENGTH@ 2
------INS InfixExpression@@rootCause.getCause() != null @TO@ InfixExpression@@null != rootCause && rootCause.getCause() != null @AT@ 2970 @LENGTH@ 28
---------INS MethodInvocation@@rootCause.getCause() @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2970 @LENGTH@ 20
------------INS SimpleName@@Name:rootCause @TO@ MethodInvocation@@rootCause.getCause() @AT@ 2970 @LENGTH@ 9
------------INS SimpleName@@MethodName:getCause:[] @TO@ MethodInvocation@@rootCause.getCause() @AT@ 2980 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2990 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@rootCause.getCause() != null @AT@ 2994 @LENGTH@ 4
---DEL InfixExpression@@null != rootCause @AT@ 2949 @LENGTH@ 17


DEL ExpressionStatement@@Assignment:closures=FunctorUtils.copy(closures) @AT@ 1981 @LENGTH@ 39
---DEL Assignment@@closures=FunctorUtils.copy(closures) @AT@ 1981 @LENGTH@ 38
------DEL SimpleName@@closures @AT@ 1981 @LENGTH@ 8
------DEL Operator@@= @AT@ 1989 @LENGTH@ 1


UPD MethodDeclaration@@public, StatelessSession, MethodName:create, RemoteException, CreateException,  @TO@ StatelessSession, MethodName:create, RemoteException, CreateException,  @AT@ 1191 @LENGTH@ 73
---DEL Modifier@@public @AT@ 1191 @LENGTH@ 6


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Predicate<T> onePredicate=onePredicate(predicate1,predicate2); @TO@ @SuppressWarnings("unchecked") Predicate<T> onePredicate=PredicateUtils.<T>onePredicate(predicate1,predicate2); @AT@ 15121 @LENGTH@ 104
---UPD VariableDeclarationFragment@@onePredicate=onePredicate(predicate1,predicate2) @TO@ onePredicate=PredicateUtils.<T>onePredicate(predicate1,predicate2) @AT@ 15173 @LENGTH@ 51
------UPD MethodInvocation@@onePredicate(predicate1,predicate2) @TO@ PredicateUtils.<T>onePredicate(predicate1,predicate2) @AT@ 15188 @LENGTH@ 36
---------INS SimpleName@@Name:PredicateUtils @TO@ MethodInvocation@@onePredicate(predicate1,predicate2) @AT@ 15188 @LENGTH@ 14


INS MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingMongoConverterUnitTests,  @AT@ 4248 @LENGTH@ 595
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4248 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4255 @LENGTH@ 4
---INS SimpleName@@MethodName:convertsCustomTypeOnConvertToMongoType @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4260 @LENGTH@ 38
---INS VariableDeclarationStatement@@List<Converter<?,?>> converters=new ArrayList<Converter<?,?>>(); @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4306 @LENGTH@ 68
------INS ParameterizedType@@List<Converter<?,?>> @TO@ VariableDeclarationStatement@@List<Converter<?,?>> converters=new ArrayList<Converter<?,?>>(); @AT@ 4306 @LENGTH@ 21
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Converter<?,?>> @AT@ 4306 @LENGTH@ 4
---------INS ParameterizedType@@Converter<?,?> @TO@ ParameterizedType@@List<Converter<?,?>> @AT@ 4311 @LENGTH@ 15
------------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<?,?> @AT@ 4311 @LENGTH@ 9
------------INS WildcardType@@? @TO@ ParameterizedType@@Converter<?,?> @AT@ 4321 @LENGTH@ 1
------------INS WildcardType@@? @TO@ ParameterizedType@@Converter<?,?> @AT@ 4324 @LENGTH@ 1
------INS VariableDeclarationFragment@@converters=new ArrayList<Converter<?,?>>() @TO@ VariableDeclarationStatement@@List<Converter<?,?>> converters=new ArrayList<Converter<?,?>>(); @AT@ 4328 @LENGTH@ 45
---------INS SimpleName@@converters @TO@ VariableDeclarationFragment@@converters=new ArrayList<Converter<?,?>>() @AT@ 4328 @LENGTH@ 10
---------INS ClassInstanceCreation@@ArrayList<Converter<?,?>>[] @TO@ VariableDeclarationFragment@@converters=new ArrayList<Converter<?,?>>() @AT@ 4341 @LENGTH@ 32
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Converter<?,?>>[] @AT@ 4341 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<Converter<?,?>> @TO@ ClassInstanceCreation@@ArrayList<Converter<?,?>>[] @AT@ 4345 @LENGTH@ 26
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Converter<?,?>> @AT@ 4345 @LENGTH@ 9
---------------INS ParameterizedType@@Converter<?,?> @TO@ ParameterizedType@@ArrayList<Converter<?,?>> @AT@ 4355 @LENGTH@ 15
------------------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<?,?> @AT@ 4355 @LENGTH@ 9
------------------INS WildcardType@@? @TO@ ParameterizedType@@Converter<?,?> @AT@ 4365 @LENGTH@ 1
------------------INS WildcardType@@? @TO@ ParameterizedType@@Converter<?,?> @AT@ 4368 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:converters.add(new LocalDateToDateConverter()) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4377 @LENGTH@ 47
------INS MethodInvocation@@converters.add(new LocalDateToDateConverter()) @TO@ ExpressionStatement@@MethodInvocation:converters.add(new LocalDateToDateConverter()) @AT@ 4377 @LENGTH@ 46
---------INS SimpleName@@Name:converters @TO@ MethodInvocation@@converters.add(new LocalDateToDateConverter()) @AT@ 4377 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[new LocalDateToDateConverter()] @TO@ MethodInvocation@@converters.add(new LocalDateToDateConverter()) @AT@ 4388 @LENGTH@ 35
------------INS ClassInstanceCreation@@LocalDateToDateConverter[] @TO@ SimpleName@@MethodName:add:[new LocalDateToDateConverter()] @AT@ 4392 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@LocalDateToDateConverter[] @AT@ 4392 @LENGTH@ 3
---------------INS SimpleType@@LocalDateToDateConverter @TO@ ClassInstanceCreation@@LocalDateToDateConverter[] @AT@ 4396 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:converters.add(new DateToLocalDateConverter()) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4427 @LENGTH@ 47
------INS MethodInvocation@@converters.add(new DateToLocalDateConverter()) @TO@ ExpressionStatement@@MethodInvocation:converters.add(new DateToLocalDateConverter()) @AT@ 4427 @LENGTH@ 46
---------INS SimpleName@@Name:converters @TO@ MethodInvocation@@converters.add(new DateToLocalDateConverter()) @AT@ 4427 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[new DateToLocalDateConverter()] @TO@ MethodInvocation@@converters.add(new DateToLocalDateConverter()) @AT@ 4438 @LENGTH@ 35
------------INS ClassInstanceCreation@@DateToLocalDateConverter[] @TO@ SimpleName@@MethodName:add:[new DateToLocalDateConverter()] @AT@ 4442 @LENGTH@ 30
---------------INS New@@new @TO@ ClassInstanceCreation@@DateToLocalDateConverter[] @AT@ 4442 @LENGTH@ 3
---------------INS SimpleType@@DateToLocalDateConverter @TO@ ClassInstanceCreation@@DateToLocalDateConverter[] @AT@ 4446 @LENGTH@ 24
---INS VariableDeclarationStatement@@CustomConversions conversions=new CustomConversions(converters); @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4478 @LENGTH@ 66
------INS SimpleType@@CustomConversions @TO@ VariableDeclarationStatement@@CustomConversions conversions=new CustomConversions(converters); @AT@ 4478 @LENGTH@ 17
------INS VariableDeclarationFragment@@conversions=new CustomConversions(converters) @TO@ VariableDeclarationStatement@@CustomConversions conversions=new CustomConversions(converters); @AT@ 4496 @LENGTH@ 47
---------INS SimpleName@@conversions @TO@ VariableDeclarationFragment@@conversions=new CustomConversions(converters) @AT@ 4496 @LENGTH@ 11
---------INS ClassInstanceCreation@@CustomConversions[converters] @TO@ VariableDeclarationFragment@@conversions=new CustomConversions(converters) @AT@ 4510 @LENGTH@ 33
------------INS New@@new @TO@ ClassInstanceCreation@@CustomConversions[converters] @AT@ 4510 @LENGTH@ 3
------------INS SimpleType@@CustomConversions @TO@ ClassInstanceCreation@@CustomConversions[converters] @AT@ 4514 @LENGTH@ 17
------------INS SimpleName@@converters @TO@ ClassInstanceCreation@@CustomConversions[converters] @AT@ 4532 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(conversions.getSimpleTypeHolder()) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4547 @LENGTH@ 70
------INS MethodInvocation@@mappingContext.setSimpleTypeHolder(conversions.getSimpleTypeHolder()) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.setSimpleTypeHolder(conversions.getSimpleTypeHolder()) @AT@ 4547 @LENGTH@ 69
---------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(conversions.getSimpleTypeHolder()) @AT@ 4547 @LENGTH@ 14
---------INS SimpleName@@MethodName:setSimpleTypeHolder:[conversions.getSimpleTypeHolder()] @TO@ MethodInvocation@@mappingContext.setSimpleTypeHolder(conversions.getSimpleTypeHolder()) @AT@ 4562 @LENGTH@ 54
------------INS MethodInvocation@@conversions.getSimpleTypeHolder() @TO@ SimpleName@@MethodName:setSimpleTypeHolder:[conversions.getSimpleTypeHolder()] @AT@ 4582 @LENGTH@ 33
---------------INS SimpleName@@Name:conversions @TO@ MethodInvocation@@conversions.getSimpleTypeHolder() @AT@ 4582 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getSimpleTypeHolder:[] @TO@ MethodInvocation@@conversions.getSimpleTypeHolder() @AT@ 4594 @LENGTH@ 21
---INS ExpressionStatement@@Assignment:converter=new MappingMongoConverter(factory,mappingContext) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4621 @LENGTH@ 63
------INS Assignment@@converter=new MappingMongoConverter(factory,mappingContext) @TO@ ExpressionStatement@@Assignment:converter=new MappingMongoConverter(factory,mappingContext) @AT@ 4621 @LENGTH@ 62
---------INS SimpleName@@converter @TO@ Assignment@@converter=new MappingMongoConverter(factory,mappingContext) @AT@ 4621 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@converter=new MappingMongoConverter(factory,mappingContext) @AT@ 4630 @LENGTH@ 1
---------INS ClassInstanceCreation@@MappingMongoConverter[factory, mappingContext] @TO@ Assignment@@converter=new MappingMongoConverter(factory,mappingContext) @AT@ 4633 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@MappingMongoConverter[factory, mappingContext] @AT@ 4633 @LENGTH@ 3
------------INS SimpleType@@MappingMongoConverter @TO@ ClassInstanceCreation@@MappingMongoConverter[factory, mappingContext] @AT@ 4637 @LENGTH@ 21
------------INS SimpleName@@factory @TO@ ClassInstanceCreation@@MappingMongoConverter[factory, mappingContext] @AT@ 4659 @LENGTH@ 7
------------INS SimpleName@@mappingContext @TO@ ClassInstanceCreation@@MappingMongoConverter[factory, mappingContext] @AT@ 4668 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:converter.setCustomConversions(conversions) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4687 @LENGTH@ 44
------INS MethodInvocation@@converter.setCustomConversions(conversions) @TO@ ExpressionStatement@@MethodInvocation:converter.setCustomConversions(conversions) @AT@ 4687 @LENGTH@ 43
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.setCustomConversions(conversions) @AT@ 4687 @LENGTH@ 9
---------INS SimpleName@@MethodName:setCustomConversions:[conversions] @TO@ MethodInvocation@@converter.setCustomConversions(conversions) @AT@ 4697 @LENGTH@ 33
------------INS SimpleName@@conversions @TO@ SimpleName@@MethodName:setCustomConversions:[conversions] @AT@ 4718 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:converter.afterPropertiesSet() @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4734 @LENGTH@ 31
------INS MethodInvocation@@converter.afterPropertiesSet() @TO@ ExpressionStatement@@MethodInvocation:converter.afterPropertiesSet() @AT@ 4734 @LENGTH@ 30
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.afterPropertiesSet() @AT@ 4734 @LENGTH@ 9
---------INS SimpleName@@MethodName:afterPropertiesSet:[] @TO@ MethodInvocation@@converter.afterPropertiesSet() @AT@ 4744 @LENGTH@ 20
---INS VariableDeclarationStatement@@LocalDate date=new LocalDate(); @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4769 @LENGTH@ 33
------INS SimpleType@@LocalDate @TO@ VariableDeclarationStatement@@LocalDate date=new LocalDate(); @AT@ 4769 @LENGTH@ 9
------INS VariableDeclarationFragment@@date=new LocalDate() @TO@ VariableDeclarationStatement@@LocalDate date=new LocalDate(); @AT@ 4779 @LENGTH@ 22
---------INS SimpleName@@date @TO@ VariableDeclarationFragment@@date=new LocalDate() @AT@ 4779 @LENGTH@ 4
---------INS ClassInstanceCreation@@LocalDate[] @TO@ VariableDeclarationFragment@@date=new LocalDate() @AT@ 4786 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@LocalDate[] @AT@ 4786 @LENGTH@ 3
------------INS SimpleType@@LocalDate @TO@ ClassInstanceCreation@@LocalDate[] @AT@ 4790 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:converter.convertToMongoType(date) @TO@ MethodDeclaration@@public, void, MethodName:convertsCustomTypeOnConvertToMongoType,  @AT@ 4805 @LENGTH@ 35
------INS MethodInvocation@@converter.convertToMongoType(date) @TO@ ExpressionStatement@@MethodInvocation:converter.convertToMongoType(date) @AT@ 4805 @LENGTH@ 34
---------INS SimpleName@@Name:converter @TO@ MethodInvocation@@converter.convertToMongoType(date) @AT@ 4805 @LENGTH@ 9
---------INS SimpleName@@MethodName:convertToMongoType:[date] @TO@ MethodInvocation@@converter.convertToMongoType(date) @AT@ 4815 @LENGTH@ 24
------------INS SimpleName@@date @TO@ SimpleName@@MethodName:convertToMongoType:[date] @AT@ 4834 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:LOG.debug("Created node with id: {}",cmisObject.getId()) @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2201 @LENGTH@ 58
---INS MethodInvocation@@LOG.debug("Created node with id: {}",cmisObject.getId()) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Created node with id: {}",cmisObject.getId()) @AT@ 2201 @LENGTH@ 57
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Created node with id: {}",cmisObject.getId()) @AT@ 2201 @LENGTH@ 3
------INS SimpleName@@MethodName:debug:["Created node with id: {}", cmisObject.getId()] @TO@ MethodInvocation@@LOG.debug("Created node with id: {}",cmisObject.getId()) @AT@ 2205 @LENGTH@ 53
---------INS StringLiteral@@"Created node with id: {}" @TO@ SimpleName@@MethodName:debug:["Created node with id: {}", cmisObject.getId()] @AT@ 2211 @LENGTH@ 26
---------INS MethodInvocation@@cmisObject.getId() @TO@ SimpleName@@MethodName:debug:["Created node with id: {}", cmisObject.getId()] @AT@ 2239 @LENGTH@ 18
------------INS SimpleName@@Name:cmisObject @TO@ MethodInvocation@@cmisObject.getId() @AT@ 2239 @LENGTH@ 10
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@cmisObject.getId() @AT@ 2250 @LENGTH@ 7


INS IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveMailWithAttachmentsRedelivery, Exception,  @AT@ 3323 @LENGTH@ 222
---INS MethodInvocation@@MethodName:isJava16:[] @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3327 @LENGTH@ 10
---INS Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3339 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @AT@ 3323 @LENGTH@ 69
---INS Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3438 @LENGTH@ 107
------INS ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3452 @LENGTH@ 83
---------INS MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3452 @LENGTH@ 82
------------INS SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @TO@ MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3452 @LENGTH@ 82
---------------INS StringLiteral@@"application/octet-stream; name=logo.jpeg" @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3465 @LENGTH@ 42
---------------INS MethodInvocation@@handler.getContentType() @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3509 @LENGTH@ 24
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getContentType() @AT@ 3509 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@handler.getContentType() @AT@ 3517 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:runningModeControl.setReloaded(true) @TO@ MethodInvocation:runningModeControl.setReloaded() @AT@ 5420 @LENGTH@ 37
---UPD MethodInvocation@@runningModeControl.setReloaded(true) @TO@ runningModeControl.setReloaded() @AT@ 5420 @LENGTH@ 36
------UPD SimpleName@@MethodName:setReloaded:[true] @TO@ MethodName:setReloaded:[] @AT@ 5439 @LENGTH@ 17
---------DEL BooleanLiteral@@true @AT@ 5451 @LENGTH@ 4


INS FieldDeclaration@@static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @TO@ TypeDeclaration@@[public]ZooKeeperClusterService,  @AT@ 990 @LENGTH@ 61
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 990 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 997 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1003 @LENGTH@ 6
---INS VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @TO@ FieldDeclaration@@static, final, String, [ZOOKEEPER_PASSWORD="zookeeper.password"] @AT@ 1010 @LENGTH@ 40
------INS SimpleName@@ZOOKEEPER_PASSWORD @TO@ VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @AT@ 1010 @LENGTH@ 18
------INS StringLiteral@@"zookeeper.password" @TO@ VariableDeclarationFragment@@ZOOKEEPER_PASSWORD="zookeeper.password" @AT@ 1030 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor()) @TO@ MethodInvocation:processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor()) @AT@ 3422 @LENGTH@ 147
---UPD MethodInvocation@@processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME,Phase.PARSE,Phase.PARSE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor()) @TO@ processorTarget.addDeploymentProcessor(WeldExtension.SUBSYSTEM_NAME,Phase.POST_MODULE,Phase.POST_MODULE_WELD_WEB_INTEGRATION,new WebIntegrationProcessor()) @AT@ 3422 @LENGTH@ 146
------UPD SimpleName@@MethodName:addDeploymentProcessor:[WeldExtension.SUBSYSTEM_NAME, Phase.PARSE, Phase.PARSE_WELD_WEB_INTEGRATION, new WebIntegrationProcessor()] @TO@ MethodName:addDeploymentProcessor:[WeldExtension.SUBSYSTEM_NAME, Phase.POST_MODULE, Phase.POST_MODULE_WELD_WEB_INTEGRATION, new WebIntegrationProcessor()] @AT@ 3438 @LENGTH@ 130
---------UPD QualifiedName@@Phase.PARSE @TO@ Phase.POST_MODULE @AT@ 3491 @LENGTH@ 11
------------UPD SimpleName@@PARSE @TO@ POST_MODULE @AT@ 3497 @LENGTH@ 5
---------UPD QualifiedName@@Phase.PARSE_WELD_WEB_INTEGRATION @TO@ Phase.POST_MODULE_WELD_WEB_INTEGRATION @AT@ 3504 @LENGTH@ 32
------------UPD SimpleName@@PARSE_WELD_WEB_INTEGRATION @TO@ POST_MODULE_WELD_WEB_INTEGRATION @AT@ 3510 @LENGTH@ 26


UPD VariableDeclarationStatement@@ModelTestModelControllerService svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()); @TO@ ModelTestModelControllerService svc=TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()); @AT@ 4399 @LENGTH@ 218
---UPD VariableDeclarationFragment@@svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @TO@ svc=TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4431 @LENGTH@ 185
------INS MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @TO@ VariableDeclarationFragment@@svc=new TestModelControllerService(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4437 @LENGTH@ 182
---------INS SimpleName@@Name:TestModelControllerService @TO@ MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4437 @LENGTH@ 26
---------INS SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @TO@ MethodInvocation@@TestModelControllerService.create(mainExtension,controllerInitializer,additionalInit,controllerExtensionRegistry,persister,additionalInit.isValidateOperations()) @AT@ 4464 @LENGTH@ 155
------------INS SimpleName@@mainExtension @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4471 @LENGTH@ 13
------------INS SimpleName@@controllerInitializer @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4486 @LENGTH@ 21
------------INS SimpleName@@additionalInit @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4509 @LENGTH@ 14
------------INS SimpleName@@controllerExtensionRegistry @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4525 @LENGTH@ 27
------------INS SimpleName@@persister @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4570 @LENGTH@ 9
------------INS MethodInvocation@@additionalInit.isValidateOperations() @TO@ SimpleName@@MethodName:create:[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4581 @LENGTH@ 37
---------------MOV SimpleName@@Name:additionalInit @TO@ MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4578 @LENGTH@ 14
---------------MOV SimpleName@@MethodName:isValidateOperations:[] @TO@ MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4593 @LENGTH@ 22
------DEL ClassInstanceCreation@@TestModelControllerService[mainExtension, controllerInitializer, additionalInit, controllerExtensionRegistry, persister, additionalInit.isValidateOperations()] @AT@ 4437 @LENGTH@ 179
---------DEL New@@new @AT@ 4437 @LENGTH@ 3
---------DEL SimpleType@@TestModelControllerService @AT@ 4441 @LENGTH@ 26
---------DEL SimpleName@@mainExtension @AT@ 4468 @LENGTH@ 13
---------DEL SimpleName@@controllerInitializer @AT@ 4483 @LENGTH@ 21
---------DEL SimpleName@@additionalInit @AT@ 4506 @LENGTH@ 14
---------DEL SimpleName@@controllerExtensionRegistry @AT@ 4522 @LENGTH@ 27
---------DEL SimpleName@@persister @AT@ 4567 @LENGTH@ 9
---------DEL MethodInvocation@@additionalInit.isValidateOperations() @AT@ 4578 @LENGTH@ 37


UPD TypeDeclaration@@[private, static]ContainerResourceProvider,  @TO@ [private]ContainerResourceProvider,  @AT@ 6277 @LENGTH@ 150
---DEL Modifier@@static @AT@ 6285 @LENGTH@ 6


UPD EnhancedForStatement@@for (GatewayProxy gateway : gateways) {  Gateway gw=gatewayHub.addGateway(gateway.getId(),gateway.getConcurrencyLevel() == null ? Gateway.DEFAULT_CONCURRENCY_LEVEL : gateway.getConcurrencyLevel());  if (!CollectionUtils.isEmpty(gateway.getEndpoints())) {    for (    GatewayProxy.GatewayEndpoint endpoint : gateway.getEndpoints()) {      gw.addEndpoint(endpoint.getId(),endpoint.getHost(),endpoint.getPort());    }  }  if (!CollectionUtils.isEmpty(gateway.getListeners())) {    for (    GatewayEventListener listener : gateway.getListeners()) {      gw.addListener(listener);    }  }  if (gateway.getOrderPolicy() != null) {    Assert.isTrue(validOrderPolicyValues.contains(gateway.getOrderPolicy()),"The value of order policy:'" + gateway.getOrderPolicy() + "' is invalid");    gw.setOrderPolicy(OrderPolicy.valueOf(gateway.getOrderPolicy()));  }  if (gateway.getSocketBufferSize() != null) {    gw.setSocketBufferSize(gateway.getSocketBufferSize());  }  if (gateway.getSocketReadTimeout() != null) {    gw.setSocketReadTimeout(gateway.getSocketReadTimeout());  }  if (gateway.getQueue() != null) {    GatewayQueue queue=gateway.getQueue();    GatewayQueueAttributes queueAttributes=gw.getQueueAttributes();    if (queue.getAlertThreshold() != null) {      queueAttributes.setAlertThreshold(queue.getAlertThreshold());    }    if (queue.getEnableBatchConflation() != null) {      queueAttributes.setBatchConflation(queue.getEnableBatchConflation());    }    if (queue.getBatchSize() != null) {      queueAttributes.setBatchSize(queue.getBatchSize());    }    if (queue.getBatchTimeInterval() != null) {      queueAttributes.setBatchTimeInterval(queue.getBatchTimeInterval());    }    if (queue.getDiskStoreRef() != null) {      boolean persistent=(queue.getPersistent() == null) ? Boolean.TRUE : queue.getPersistent();      Assert.isTrue(persistent,"specifying a disk store requires persistent property to be true");      queueAttributes.setDiskStoreName(queue.getDiskStoreRef());    }    if (queue.getPersistent() != null) {      queueAttributes.setEnablePersistence(queue.getPersistent());    }    if (queue.getMaximumQueueMemory() != null) {      queueAttributes.setMaximumQueueMemory(queue.getMaximumQueueMemory());    }  }} @TO@ for (GatewayProxy gateway : gateways) {  Gateway gw=gatewayHub.addGateway(gateway.getId(),gateway.getConcurrencyLevel() == null ? Gateway.DEFAULT_CONCURRENCY_LEVEL : gateway.getConcurrencyLevel());  if (!CollectionUtils.isEmpty(gateway.getEndpoints())) {    for (    GatewayProxy.GatewayEndpoint endpoint : gateway.getEndpoints()) {      gw.addEndpoint(endpoint.getId(),endpoint.getHost(),endpoint.getPort());    }  }  if (!CollectionUtils.isEmpty(gateway.getListeners())) {    for (    GatewayEventListener listener : gateway.getListeners()) {      gw.addListener(listener);    }  }  if (gateway.getOrderPolicy() != null) {    Assert.isTrue(validOrderPolicyValues.contains(gateway.getOrderPolicy()),"The value of order policy:'" + gateway.getOrderPolicy() + "' is invalid");    gw.setOrderPolicy(OrderPolicy.valueOf(gateway.getOrderPolicy()));  }  if (gateway.getSocketBufferSize() != null) {    gw.setSocketBufferSize(gateway.getSocketBufferSize());  }  if (gateway.getQueue() != null) {    GatewayQueue queue=gateway.getQueue();    GatewayQueueAttributes queueAttributes=gw.getQueueAttributes();    if (queue.getAlertThreshold() != null) {      queueAttributes.setAlertThreshold(queue.getAlertThreshold());    }    if (queue.getEnableBatchConflation() != null) {      queueAttributes.setBatchConflation(queue.getEnableBatchConflation());    }    if (queue.getBatchSize() != null) {      queueAttributes.setBatchSize(queue.getBatchSize());    }    if (queue.getBatchTimeInterval() != null) {      queueAttributes.setBatchTimeInterval(queue.getBatchTimeInterval());    }    if (queue.getDiskStoreRef() != null) {      boolean persistent=(queue.getPersistent() == null) ? Boolean.TRUE : queue.getPersistent();      Assert.isTrue(persistent,"specifying a disk store requires persistent property to be true");      queueAttributes.setDiskStoreName(queue.getDiskStoreRef());    }    if (queue.getPersistent() != null) {      queueAttributes.setEnablePersistence(queue.getPersistent());    }    if (queue.getMaximumQueueMemory() != null) {      queueAttributes.setMaximumQueueMemory(queue.getMaximumQueueMemory());    }  }} @AT@ 2985 @LENGTH@ 2316
---DEL IfStatement@@if (gateway.getSocketReadTimeout() != null) {  gw.setSocketReadTimeout(gateway.getSocketReadTimeout());} @AT@ 3991 @LENGTH@ 111
------DEL InfixExpression@@gateway.getSocketReadTimeout() != null @AT@ 3995 @LENGTH@ 38
---------DEL MethodInvocation@@gateway.getSocketReadTimeout() @AT@ 3995 @LENGTH@ 30
------------DEL SimpleName@@Name:gateway @AT@ 3995 @LENGTH@ 7
------------DEL SimpleName@@MethodName:getSocketReadTimeout:[] @AT@ 4003 @LENGTH@ 22
---------DEL Operator@@!= @AT@ 4025 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4029 @LENGTH@ 4
------DEL Block@@ThenBody:{  gw.setSocketReadTimeout(gateway.getSocketReadTimeout());} @AT@ 4035 @LENGTH@ 67
---------DEL ExpressionStatement@@MethodInvocation:gw.setSocketReadTimeout(gateway.getSocketReadTimeout()) @AT@ 4041 @LENGTH@ 56
------------DEL MethodInvocation@@gw.setSocketReadTimeout(gateway.getSocketReadTimeout()) @AT@ 4041 @LENGTH@ 55
---------------DEL SimpleName@@Name:gw @AT@ 4041 @LENGTH@ 2
---------------DEL SimpleName@@MethodName:setSocketReadTimeout:[gateway.getSocketReadTimeout()] @AT@ 4044 @LENGTH@ 52
------------------DEL MethodInvocation@@gateway.getSocketReadTimeout() @AT@ 4065 @LENGTH@ 30
---------------------DEL SimpleName@@Name:gateway @AT@ 4065 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getSocketReadTimeout:[] @AT@ 4073 @LENGTH@ 22


INS MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @TO@ TypeDeclaration@@[public]IgnoredDomainResourceRegistry,  @AT@ 3567 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3567 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3574 @LENGTH@ 9
---INS SimpleName@@MethodName:getIgnoredResourcesAsModel @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3584 @LENGTH@ 26
---INS VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3623 @LENGTH@ 51
------INS SimpleType@@IgnoredDomainResourceRoot @TO@ VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @AT@ 3623 @LENGTH@ 25
------INS VariableDeclarationFragment@@root=this.rootResource @TO@ VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @AT@ 3649 @LENGTH@ 24
---------INS SimpleName@@root @TO@ VariableDeclarationFragment@@root=this.rootResource @AT@ 3649 @LENGTH@ 4
---------INS FieldAccess@@this.rootResource @TO@ VariableDeclarationFragment@@root=this.rootResource @AT@ 3656 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.rootResource @AT@ 3656 @LENGTH@ 4
------------INS SimpleName@@rootResource @TO@ FieldAccess@@this.rootResource @AT@ 3661 @LENGTH@ 12
---INS ReturnStatement@@ParenthesizedExpression:(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3683 @LENGTH@ 73
------INS ParenthesizedExpression@@(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @TO@ ReturnStatement@@ParenthesizedExpression:(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @AT@ 3690 @LENGTH@ 65
---------INS ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @TO@ ParenthesizedExpression@@(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @AT@ 3691 @LENGTH@ 63
------------INS InfixExpression@@root == null @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3691 @LENGTH@ 12
---------------INS SimpleName@@root @TO@ InfixExpression@@root == null @AT@ 3691 @LENGTH@ 4
---------------INS Operator@@== @TO@ InfixExpression@@root == null @AT@ 3695 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@root == null @AT@ 3699 @LENGTH@ 4
------------INS ClassInstanceCreation@@ModelNode[] @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3706 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3706 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3710 @LENGTH@ 9
------------INS MethodInvocation@@Resource.Tools.readModel(root) @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3724 @LENGTH@ 30
---------------INS QualifiedName@@Name:Resource.Tools @TO@ MethodInvocation@@Resource.Tools.readModel(root) @AT@ 3724 @LENGTH@ 14
---------------INS SimpleName@@MethodName:readModel:[root] @TO@ MethodInvocation@@Resource.Tools.readModel(root) @AT@ 3739 @LENGTH@ 15
------------------INS SimpleName@@root @TO@ SimpleName@@MethodName:readModel:[root] @AT@ 3749 @LENGTH@ 4


INS MethodDeclaration@@Long, MethodName:getLongNumber,  @TO@ TypeDeclaration@@[public]SimpleBeanMBean, [Serializable] @AT@ 1359 @LENGTH@ 16
---INS SimpleType@@Long @TO@ MethodDeclaration@@Long, MethodName:getLongNumber,  @AT@ 1354 @LENGTH@ 4
---INS SimpleName@@MethodName:getLongNumber @TO@ MethodDeclaration@@Long, MethodName:getLongNumber,  @AT@ 1359 @LENGTH@ 13


INS MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 26796 @LENGTH@ 115
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26796 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26803 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26810 @LENGTH@ 6
---INS SimpleName@@MethodName:getLineSeparator @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26817 @LENGTH@ 16
---INS ReturnStatement@@MethodInvocation:SecurityActions.getSystemProperty("line.separator") @TO@ MethodDeclaration@@public, static, String, MethodName:getLineSeparator,  @AT@ 26846 @LENGTH@ 59
------INS MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @TO@ ReturnStatement@@MethodInvocation:SecurityActions.getSystemProperty("line.separator") @AT@ 26853 @LENGTH@ 51
---------INS SimpleName@@Name:SecurityActions @TO@ MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @AT@ 26853 @LENGTH@ 15
---------INS SimpleName@@MethodName:getSystemProperty:["line.separator"] @TO@ MethodInvocation@@SecurityActions.getSystemProperty("line.separator") @AT@ 26869 @LENGTH@ 35
------------INS StringLiteral@@"line.separator" @TO@ SimpleName@@MethodName:getSystemProperty:["line.separator"] @AT@ 26887 @LENGTH@ 16


INS MethodDeclaration@@void, MethodName:setLongNumber, Long aMonitorNumber,  @TO@ TypeDeclaration@@[public]SimpleBeanMBean, [Serializable] @AT@ 1385 @LENGTH@ 35
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setLongNumber, Long aMonitorNumber,  @AT@ 1380 @LENGTH@ 4
---INS SimpleName@@MethodName:setLongNumber @TO@ MethodDeclaration@@void, MethodName:setLongNumber, Long aMonitorNumber,  @AT@ 1385 @LENGTH@ 13
---INS SingleVariableDeclaration@@Long aMonitorNumber @TO@ MethodDeclaration@@void, MethodName:setLongNumber, Long aMonitorNumber,  @AT@ 1399 @LENGTH@ 19
------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long aMonitorNumber @AT@ 1399 @LENGTH@ 4
------INS SimpleName@@aMonitorNumber @TO@ SingleVariableDeclaration@@Long aMonitorNumber @AT@ 1404 @LENGTH@ 14


UPD VariableDeclarationStatement@@String propertyRel=repository + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property; @TO@ String propertyRel=repoMeta.rel() + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property; @AT@ 52623 @LENGTH@ 106
---UPD VariableDeclarationFragment@@propertyRel=repository + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property @TO@ propertyRel=repoMeta.rel() + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property @AT@ 52630 @LENGTH@ 98
------UPD InfixExpression@@repository + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property @TO@ repoMeta.rel() + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property @AT@ 52644 @LENGTH@ 84
---------INS MethodInvocation@@repoMeta.rel() @TO@ InfixExpression@@repository + "." + repoMeta.entityMetadata().type().getSimpleName()+ "."+ property @AT@ 52644 @LENGTH@ 14
------------INS SimpleName@@Name:repoMeta @TO@ MethodInvocation@@repoMeta.rel() @AT@ 52644 @LENGTH@ 8
------------INS SimpleName@@MethodName:rel:[] @TO@ MethodInvocation@@repoMeta.rel() @AT@ 52653 @LENGTH@ 5
---------DEL SimpleName@@repository @AT@ 52644 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2908 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2908 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2916 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2929 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2929 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2929 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2946 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2962 @LENGTH@ 21


UPD VariableDeclarationStatement@@PigServer server=(PigServer)(ctx.getBean(defaultName,ObjectFactory.class)).getObject(); @TO@ PigServer server=(ctx.getBean(defaultName,PigServerFactory.class)).getPigServer(); @AT@ 2102 @LENGTH@ 91
---UPD VariableDeclarationFragment@@server=(PigServer)(ctx.getBean(defaultName,ObjectFactory.class)).getObject() @TO@ server=(ctx.getBean(defaultName,PigServerFactory.class)).getPigServer() @AT@ 2112 @LENGTH@ 80
------INS MethodInvocation@@(ctx.getBean(defaultName,PigServerFactory.class)).getPigServer() @TO@ VariableDeclarationFragment@@server=(PigServer)(ctx.getBean(defaultName,ObjectFactory.class)).getObject() @AT@ 2065 @LENGTH@ 65
---------MOV ParenthesizedExpression@@(ctx.getBean(defaultName,ObjectFactory.class)) @TO@ MethodInvocation@@(ctx.getBean(defaultName,PigServerFactory.class)).getPigServer() @AT@ 2133 @LENGTH@ 47
---------MOV SimpleName@@MethodName:getObject:[] @TO@ MethodInvocation@@(ctx.getBean(defaultName,PigServerFactory.class)).getPigServer() @AT@ 2181 @LENGTH@ 11
------DEL CastExpression@@(PigServer)(ctx.getBean(defaultName,ObjectFactory.class)).getObject() @AT@ 2121 @LENGTH@ 71
---------DEL SimpleType@@PigServer @AT@ 2122 @LENGTH@ 9
---------DEL MethodInvocation@@(ctx.getBean(defaultName,ObjectFactory.class)).getObject() @AT@ 2133 @LENGTH@ 59


INS IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE);} @TO@ MethodDeclaration@@public, void, MethodName:registerAttributes, ManagementResourceRegistration registry,  @AT@ 4345 @LENGTH@ 161
---INS SimpleName@@registerRuntimeOnly @TO@ IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE);} @AT@ 4349 @LENGTH@ 19
---INS Block@@ThenBody:{  registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE);} @TO@ IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE);} @AT@ 4370 @LENGTH@ 136
------MOV ExpressionStatement@@MethodInvocation:registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE) @TO@ Block@@ThenBody:{  registry.registerReadOnlyAttribute(BroadcastGroupControlHandler.STARTED,BroadcastGroupControlHandler.INSTANCE);} @AT@ 4345 @LENGTH@ 112


UPD IfStatement@@if (part.equals("..") && !stack.isEmpty() && !"..".equals(stack.peek())) {  stack.pop();} else {  stack.push(part);} @TO@ if (part.equals("..") && !stack.isEmpty() && !"..".equals(stack.peek())) {  stack.pop();} else if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @AT@ 6931 @LENGTH@ 261
---INS Block@@ElseBody:if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @TO@ IfStatement@@if (part.equals("..") && !stack.isEmpty() && !"..".equals(stack.peek())) {  stack.pop();} else {  stack.push(part);} @AT@ 6956 @LENGTH@ 184
------INS IfStatement@@if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @TO@ Block@@ElseBody:if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @AT@ 6956 @LENGTH@ 184
---------INS InfixExpression@@part.equals(".") || part.isEmpty() @TO@ IfStatement@@if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @AT@ 6960 @LENGTH@ 34
------------INS MethodInvocation@@part.equals(".") @TO@ InfixExpression@@part.equals(".") || part.isEmpty() @AT@ 6960 @LENGTH@ 16
---------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.equals(".") @AT@ 6960 @LENGTH@ 4
---------------INS SimpleName@@MethodName:equals:["."] @TO@ MethodInvocation@@part.equals(".") @AT@ 6965 @LENGTH@ 11
------------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:equals:["."] @AT@ 6972 @LENGTH@ 3
------------INS Operator@@|| @TO@ InfixExpression@@part.equals(".") || part.isEmpty() @AT@ 6976 @LENGTH@ 2
------------INS MethodInvocation@@part.isEmpty() @TO@ InfixExpression@@part.equals(".") || part.isEmpty() @AT@ 6980 @LENGTH@ 14
---------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.isEmpty() @AT@ 6980 @LENGTH@ 4
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@part.isEmpty() @AT@ 6985 @LENGTH@ 9
---------INS Block@@ThenBody:{} @TO@ IfStatement@@if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @AT@ 6996 @LENGTH@ 89
---------MOV Block@@ElseBody:{  stack.push(part);} @TO@ IfStatement@@if (part.equals(".") || part.isEmpty()) {} else {  stack.push(part);} @AT@ 7143 @LENGTH@ 49


UPD EnhancedForStatement@@for (String url : createContainers) {  String type=null;  String parent="root";  String name=url;  if (url.contains("://")) {    URI uri=new URI(url);    type=uri.getScheme();    parent=null;    name=uri.getHost();  } else {    type="child";    url="child://root";  }  CreateContainerOptions args=CreateContainerOptionsBuilder.type(type).name(name).parent(parent).number(1).ensembleServer(false).providerUri(url).proxyUri(fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl());  CreateContainerMetadata[] metadatas=fabricService.createContainers(args);  for (  CreateContainerMetadata metadata : metadatas) {    if (metadata.isSuccess()) {      Container child=metadata.getContainer();      child.setProfiles(new Profile[]{profile});      System.out.println("Successfully created container " + metadata.getContainerName());    } else {      System.out.println("Failed to create container " + metadata.getContainerName() + ": "+ metadata.getFailure().getMessage());    }  }} @TO@ for (String url : createContainers) {  String type=null;  String parent=fabricService.getCurrentContainerName();  String name=url;  if (url.contains("://")) {    URI uri=new URI(url);    type=uri.getScheme();    parent=null;    name=uri.getHost();  } else {    type="child";    url="child://" + parent;  }  CreateContainerOptions args=CreateContainerOptionsBuilder.type(type).name(name).parent(parent).number(1).ensembleServer(false).providerUri(url).proxyUri(fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl());  CreateContainerMetadata[] metadatas=fabricService.createContainers(args);  for (  CreateContainerMetadata metadata : metadatas) {    if (metadata.isSuccess()) {      Container child=metadata.getContainer();      child.setProfiles(new Profile[]{profile});      System.out.println("Successfully created container " + metadata.getContainerName());    } else {      System.out.println("Failed to create container " + metadata.getContainerName() + ": "+ metadata.getFailure().getMessage());    }  }} @AT@ 4640 @LENGTH@ 1594
---UPD VariableDeclarationStatement@@String parent="root"; @TO@ String parent=fabricService.getCurrentContainerName(); @AT@ 4731 @LENGTH@ 23
------UPD VariableDeclarationFragment@@parent="root" @TO@ parent=fabricService.getCurrentContainerName() @AT@ 4738 @LENGTH@ 15
---------INS MethodInvocation@@fabricService.getCurrentContainerName() @TO@ VariableDeclarationFragment@@parent="root" @AT@ 4747 @LENGTH@ 39
------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getCurrentContainerName() @AT@ 4747 @LENGTH@ 13
------------INS SimpleName@@MethodName:getCurrentContainerName:[] @TO@ MethodInvocation@@fabricService.getCurrentContainerName() @AT@ 4761 @LENGTH@ 25
---------DEL StringLiteral@@"root" @AT@ 4747 @LENGTH@ 6
---UPD IfStatement@@if (url.contains("://")) {  URI uri=new URI(url);  type=uri.getScheme();  parent=null;  name=uri.getHost();} else {  type="child";  url="child://root";} @TO@ if (url.contains("://")) {  URI uri=new URI(url);  type=uri.getScheme();  parent=null;  name=uri.getHost();} else {  type="child";  url="child://" + parent;} @AT@ 4806 @LENGTH@ 312
------UPD Block@@ElseBody:{  type="child";  url="child://root";} @TO@ ElseBody:{  type="child";  url="child://" + parent;} @AT@ 5021 @LENGTH@ 97
---------UPD ExpressionStatement@@Assignment:url="child://root" @TO@ Assignment:url="child://" + parent @AT@ 5079 @LENGTH@ 21
------------UPD Assignment@@url="child://root" @TO@ url="child://" + parent @AT@ 5079 @LENGTH@ 20
---------------DEL StringLiteral@@"child://root" @AT@ 5085 @LENGTH@ 14
---------------INS InfixExpression@@"child://" + parent @TO@ Assignment@@url="child://root" @AT@ 5118 @LENGTH@ 19
------------------INS StringLiteral@@"child://" @TO@ InfixExpression@@"child://" + parent @AT@ 5118 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"child://" + parent @AT@ 5128 @LENGTH@ 1
------------------INS SimpleName@@parent @TO@ InfixExpression@@"child://" + parent @AT@ 5131 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true").routeId("foo").noAutoStartup().to("log:result","mock:result") @TO@ MethodInvocation:from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true").routeId("foo").noAutoStartup().to("log:result","mock:result") @AT@ 2205 @LENGTH@ 220
---UPD MethodInvocation@@from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true").routeId("foo").noAutoStartup().to("log:result","mock:result") @TO@ from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true").routeId("foo").noAutoStartup().to("log:result","mock:result") @AT@ 2205 @LENGTH@ 219
------UPD MethodInvocation@@MethodName:from:["sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true"] @TO@ MethodName:from:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true"] @AT@ 2205 @LENGTH@ 114
---------UPD InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @TO@ "sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @AT@ 2210 @LENGTH@ 108
------------INS StringLiteral@@"/" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @AT@ 2139 @LENGTH@ 3
------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @AT@ 2145 @LENGTH@ 12
------------UPD StringLiteral@@"/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @TO@ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true" @AT@ 2244 @LENGTH@ 74


UPD IfStatement@@if (namingStore instanceof WritableNamingStore) {  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().rebind(absoluteName,object);} else {  throw MESSAGES.readOnlyNamingContext();} @TO@ if (namingStore instanceof WritableNamingStore) {  final Name absoluteName=getAbsoluteName(name);  if (object instanceof Referenceable) {    object=((Referenceable)object).getReference();  }  getWritableNamingStore().rebind(absoluteName,object);} else {  throw MESSAGES.readOnlyNamingContext();} @AT@ 8974 @LENGTH@ 255
---UPD Block@@ThenBody:{  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().rebind(absoluteName,object);} @TO@ ThenBody:{  final Name absoluteName=getAbsoluteName(name);  if (object instanceof Referenceable) {    object=((Referenceable)object).getReference();  }  getWritableNamingStore().rebind(absoluteName,object);} @AT@ 9021 @LENGTH@ 139
------INS IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @TO@ Block@@ThenBody:{  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().rebind(absoluteName,object);} @AT@ 9262 @LENGTH@ 118
---------INS InstanceofExpression@@object instanceof Referenceable @TO@ IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @AT@ 9266 @LENGTH@ 31
------------INS SimpleName@@object @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 9266 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 9273 @LENGTH@ 10
------------INS SimpleType@@Referenceable @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 9284 @LENGTH@ 13
---------INS Block@@ThenBody:{  object=((Referenceable)object).getReference();} @TO@ IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @AT@ 9299 @LENGTH@ 81
------------INS ExpressionStatement@@Assignment:object=((Referenceable)object).getReference() @TO@ Block@@ThenBody:{  object=((Referenceable)object).getReference();} @AT@ 9317 @LENGTH@ 49
---------------INS Assignment@@object=((Referenceable)object).getReference() @TO@ ExpressionStatement@@Assignment:object=((Referenceable)object).getReference() @AT@ 9317 @LENGTH@ 48
------------------INS SimpleName@@object @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 9317 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 9323 @LENGTH@ 1
------------------INS MethodInvocation@@((Referenceable)object).getReference() @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 9326 @LENGTH@ 39
---------------------INS ParenthesizedExpression@@((Referenceable)object) @TO@ MethodInvocation@@((Referenceable)object).getReference() @AT@ 9326 @LENGTH@ 24
------------------------INS CastExpression@@(Referenceable)object @TO@ ParenthesizedExpression@@((Referenceable)object) @AT@ 9327 @LENGTH@ 22
---------------------------INS SimpleType@@Referenceable @TO@ CastExpression@@(Referenceable)object @AT@ 9328 @LENGTH@ 13
---------------------------INS SimpleName@@object @TO@ CastExpression@@(Referenceable)object @AT@ 9343 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getReference:[] @TO@ MethodInvocation@@((Referenceable)object).getReference() @AT@ 9351 @LENGTH@ 14


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build()] @AT@ 2493 @LENGTH@ 216
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build() @AT@ 2533 @LENGTH@ 175
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build() @AT@ 2546 @LENGTH@ 162
---------UPD MethodInvocation@@MethodName:setReplyParameters:[URI] @TO@ MethodName:setParameters:[URI] @AT@ 2546 @LENGTH@ 141


UPD ExpressionStatement@@MethodInvocation:from("sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @TO@ MethodInvocation:from("sftp://localhost:" + getPort() + "//"+ createAbsolutePath()+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1336 @LENGTH@ 216
---UPD MethodInvocation@@from("sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @TO@ from("sftp://localhost:" + getPort() + "//"+ createAbsolutePath()+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1336 @LENGTH@ 215
------UPD MethodInvocation@@MethodName:from:["sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false"] @TO@ MethodName:from:["sftp://localhost:" + getPort() + "//"+ createAbsolutePath()+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false"] @AT@ 1336 @LENGTH@ 124
---------UPD InfixExpression@@"sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @TO@ "sftp://localhost:" + getPort() + "//"+ createAbsolutePath()+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1341 @LENGTH@ 118
------------INS StringLiteral@@"//" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1351 @LENGTH@ 4
------------INS MethodInvocation@@MethodName:createAbsolutePath:[] @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1358 @LENGTH@ 20
------------UPD StringLiteral@@"/tmp/mytemp?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @TO@ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1375 @LENGTH@ 84


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(200) @TO@ MethodInvocation:Thread.sleep(500) @AT@ 2421 @LENGTH@ 18
---UPD MethodInvocation@@Thread.sleep(200) @TO@ Thread.sleep(500) @AT@ 2421 @LENGTH@ 17
------UPD SimpleName@@MethodName:sleep:[200] @TO@ MethodName:sleep:[500] @AT@ 2428 @LENGTH@ 10
---------UPD NumberLiteral@@200 @TO@ 500 @AT@ 2434 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:writer.writeAttribute(RELATIVE_TO.getName(),relativeTo) @TO@ MethodInvocation:RELATIVE_TO.marshallAsAttribute(node.get(localName),writer) @AT@ 20932 @LENGTH@ 57


UPD EnhancedForStatement@@for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {    result.get(id).set(stepResult);  } else {    final OperationResultTransformer transformer=step.getResult();    result.get(id).set(transformer.transformResult(stepResult));  }} @AT@ 3837 @LENGTH@ 338
---INS IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ EnhancedForStatement@@for (final Step step : steps) {  final String id="step-" + step.getStepCount();  final ModelNode stepResult=original.get(RESULT,id);  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4062 @LENGTH@ 317
------INS MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4065 @LENGTH@ 50
---------INS SimpleName@@Name:IGNORED @TO@ MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @AT@ 4065 @LENGTH@ 7
---------INS SimpleName@@MethodName:equals:[stepResult.get(OUTCOME).asString()] @TO@ MethodInvocation@@IGNORED.equals(stepResult.get(OUTCOME).asString()) @AT@ 4073 @LENGTH@ 42
------------INS MethodInvocation@@stepResult.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:equals:[stepResult.get(OUTCOME).asString()] @AT@ 4080 @LENGTH@ 34
---------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4080 @LENGTH@ 23
------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 4095 @LENGTH@ 7
---------------INS SimpleName@@Name:stepResult @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4080 @LENGTH@ 10
---------------INS SimpleName@@MethodName:asString:[] @TO@ MethodInvocation@@stepResult.get(OUTCOME).asString() @AT@ 4104 @LENGTH@ 10
------INS Block@@ThenBody:{  result.get(id).set(stepResult);} @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4117 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:result.get(id).set(stepResult) @TO@ Block@@ThenBody:{  result.get(id).set(stepResult);} @AT@ 4139 @LENGTH@ 31
------------INS MethodInvocation@@result.get(id).set(stepResult) @TO@ ExpressionStatement@@MethodInvocation:result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:get:[id] @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 14
------------------INS SimpleName@@id @TO@ MethodInvocation@@MethodName:get:[id] @AT@ 4150 @LENGTH@ 2
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4139 @LENGTH@ 6
---------------INS SimpleName@@MethodName:set:[stepResult] @TO@ MethodInvocation@@result.get(id).set(stepResult) @AT@ 4154 @LENGTH@ 15
------------------INS SimpleName@@stepResult @TO@ SimpleName@@MethodName:set:[stepResult] @AT@ 4158 @LENGTH@ 10
------INS Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @TO@ IfStatement@@if (IGNORED.equals(stepResult.get(OUTCOME).asString())) {  result.get(id).set(stepResult);} else {  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4194 @LENGTH@ 185
---------MOV VariableDeclarationStatement@@final OperationResultTransformer transformer=step.getResult(); @TO@ Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4020 @LENGTH@ 64
---------MOV ExpressionStatement@@MethodInvocation:result.get(id).set(transformer.transformResult(stepResult)) @TO@ Block@@ElseBody:{  final OperationResultTransformer transformer=step.getResult();  result.get(id).set(transformer.transformResult(stepResult));} @AT@ 4101 @LENGTH@ 60


UPD IfStatement@@if (refreshToken == null) {  refreshToken=createRefreshToken(authentication);} @TO@ if (refreshToken == null) {  refreshToken=createRefreshToken(authentication);} else if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4062 @LENGTH@ 85
---INS Block@@ElseBody:if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @TO@ IfStatement@@if (refreshToken == null) {  refreshToken=createRefreshToken(authentication);} @AT@ 4235 @LENGTH@ 279
------INS IfStatement@@if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @TO@ Block@@ElseBody:if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4235 @LENGTH@ 279
---------INS InstanceofExpression@@refreshToken instanceof ExpiringOAuth2RefreshToken @TO@ IfStatement@@if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4239 @LENGTH@ 50
------------INS SimpleName@@refreshToken @TO@ InstanceofExpression@@refreshToken instanceof ExpiringOAuth2RefreshToken @AT@ 4239 @LENGTH@ 12
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@refreshToken instanceof ExpiringOAuth2RefreshToken @AT@ 4252 @LENGTH@ 10
------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ InstanceofExpression@@refreshToken instanceof ExpiringOAuth2RefreshToken @AT@ 4263 @LENGTH@ 26
---------INS Block@@ThenBody:{  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @TO@ IfStatement@@if (refreshToken instanceof ExpiringOAuth2RefreshToken) {  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4291 @LENGTH@ 223
------------INS VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken; @TO@ Block@@ThenBody:{  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4296 @LENGTH@ 80
---------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken; @AT@ 4296 @LENGTH@ 26
---------------INS VariableDeclarationFragment@@expiring=(ExpiringOAuth2RefreshToken)refreshToken @TO@ VariableDeclarationStatement@@ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken; @AT@ 4323 @LENGTH@ 52
------------------INS SimpleName@@expiring @TO@ VariableDeclarationFragment@@expiring=(ExpiringOAuth2RefreshToken)refreshToken @AT@ 4323 @LENGTH@ 8
------------------INS CastExpression@@(ExpiringOAuth2RefreshToken)refreshToken @TO@ VariableDeclarationFragment@@expiring=(ExpiringOAuth2RefreshToken)refreshToken @AT@ 4334 @LENGTH@ 41
---------------------INS SimpleType@@ExpiringOAuth2RefreshToken @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)refreshToken @AT@ 4335 @LENGTH@ 26
---------------------INS SimpleName@@refreshToken @TO@ CastExpression@@(ExpiringOAuth2RefreshToken)refreshToken @AT@ 4363 @LENGTH@ 12
------------INS IfStatement@@if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {  refreshToken=createRefreshToken(authentication);} @TO@ Block@@ThenBody:{  ExpiringOAuth2RefreshToken expiring=(ExpiringOAuth2RefreshToken)refreshToken;  if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {    refreshToken=createRefreshToken(authentication);  }} @AT@ 4380 @LENGTH@ 130
---------------INS InfixExpression@@System.currentTimeMillis() > expiring.getExpiration().getTime() @TO@ IfStatement@@if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {  refreshToken=createRefreshToken(authentication);} @AT@ 4384 @LENGTH@ 63
------------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.currentTimeMillis() > expiring.getExpiration().getTime() @AT@ 4384 @LENGTH@ 26
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4384 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4391 @LENGTH@ 19
------------------INS Operator@@> @TO@ InfixExpression@@System.currentTimeMillis() > expiring.getExpiration().getTime() @AT@ 4410 @LENGTH@ 1
------------------INS MethodInvocation@@expiring.getExpiration().getTime() @TO@ InfixExpression@@System.currentTimeMillis() > expiring.getExpiration().getTime() @AT@ 4413 @LENGTH@ 34
---------------------INS MethodInvocation@@MethodName:getExpiration:[] @TO@ MethodInvocation@@expiring.getExpiration().getTime() @AT@ 4413 @LENGTH@ 24
---------------------INS SimpleName@@Name:expiring @TO@ MethodInvocation@@expiring.getExpiration().getTime() @AT@ 4413 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@expiring.getExpiration().getTime() @AT@ 4438 @LENGTH@ 9
---------------INS Block@@ThenBody:{  refreshToken=createRefreshToken(authentication);} @TO@ IfStatement@@if (System.currentTimeMillis() > expiring.getExpiration().getTime()) {  refreshToken=createRefreshToken(authentication);} @AT@ 4449 @LENGTH@ 61
------------------INS ExpressionStatement@@Assignment:refreshToken=createRefreshToken(authentication) @TO@ Block@@ThenBody:{  refreshToken=createRefreshToken(authentication);} @AT@ 4455 @LENGTH@ 50
---------------------INS Assignment@@refreshToken=createRefreshToken(authentication) @TO@ ExpressionStatement@@Assignment:refreshToken=createRefreshToken(authentication) @AT@ 4455 @LENGTH@ 49
------------------------INS SimpleName@@refreshToken @TO@ Assignment@@refreshToken=createRefreshToken(authentication) @AT@ 4455 @LENGTH@ 12
------------------------INS Operator@@= @TO@ Assignment@@refreshToken=createRefreshToken(authentication) @AT@ 4467 @LENGTH@ 1
------------------------INS MethodInvocation@@createRefreshToken(authentication) @TO@ Assignment@@refreshToken=createRefreshToken(authentication) @AT@ 4470 @LENGTH@ 34
---------------------------INS SimpleName@@MethodName:createRefreshToken:[authentication] @TO@ MethodInvocation@@createRefreshToken(authentication) @AT@ 4470 @LENGTH@ 34
------------------------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:createRefreshToken:[authentication] @AT@ 4489 @LENGTH@ 14
---------------------------INS SimpleName@@MethodName:createRefreshToken:[authentication] @TO@ MethodInvocation@@createRefreshToken(authentication) @AT@ 4470 @LENGTH@ 34
------------------------------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:createRefreshToken:[authentication] @AT@ 4489 @LENGTH@ 14


MOV FieldDeclaration@@public, static, final, int, [PARSE_WELD_WEB_INTEGRATION=0x2B10] @TO@ EnumDeclaration@@[public]Phase,  @AT@ 13941 @LENGTH@ 77


DEL ExpressionStatement@@Assignment:predicates=FunctorUtils.copy(predicates) @AT@ 2287 @LENGTH@ 43
---DEL Assignment@@predicates=FunctorUtils.copy(predicates) @AT@ 2287 @LENGTH@ 42
------DEL SimpleName@@predicates @AT@ 2287 @LENGTH@ 10
------DEL Operator@@= @AT@ 2297 @LENGTH@ 1


UPD IfStatement@@if (body.endsWith("10")) {  log.info("10th message received.  Rolling back.");  exchange.getOut().setFault(true);  exchange.getOut().setBody("10th message received.  Rolling back.");} @TO@ if (body.endsWith("4") || body.endsWith("6")) {  log.info("10th message received.  Rolling back.");  exchange.getOut().setFault(true);  exchange.getOut().setBody("10th message received.  Rolling back.");} @AT@ 3961 @LENGTH@ 353
---DEL MethodInvocation@@body.endsWith("10") @AT@ 3965 @LENGTH@ 19
---INS InfixExpression@@body.endsWith("4") || body.endsWith("6") @TO@ IfStatement@@if (body.endsWith("10")) {  log.info("10th message received.  Rolling back.");  exchange.getOut().setFault(true);  exchange.getOut().setBody("10th message received.  Rolling back.");} @AT@ 4285 @LENGTH@ 40
------INS MethodInvocation@@body.endsWith("4") @TO@ InfixExpression@@body.endsWith("4") || body.endsWith("6") @AT@ 4285 @LENGTH@ 18
---------MOV SimpleName@@Name:body @TO@ MethodInvocation@@body.endsWith("4") @AT@ 3965 @LENGTH@ 4
---------MOV SimpleName@@MethodName:endsWith:["10"] @TO@ MethodInvocation@@body.endsWith("4") @AT@ 3970 @LENGTH@ 14
------------UPD StringLiteral@@"10" @TO@ "4" @AT@ 3979 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@body.endsWith("4") || body.endsWith("6") @AT@ 4303 @LENGTH@ 2
------INS MethodInvocation@@body.endsWith("6") @TO@ InfixExpression@@body.endsWith("4") || body.endsWith("6") @AT@ 4307 @LENGTH@ 18
---------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.endsWith("6") @AT@ 4307 @LENGTH@ 4
---------INS SimpleName@@MethodName:endsWith:["6"] @TO@ MethodInvocation@@body.endsWith("6") @AT@ 4312 @LENGTH@ 13
------------INS StringLiteral@@"6" @TO@ SimpleName@@MethodName:endsWith:["6"] @AT@ 4321 @LENGTH@ 3


UPD MethodDeclaration@@public, void, MethodName:systemPropertyUpdated, String propertyName, String propertyValue,  @TO@ protected, void, MethodName:systemPropertyUpdated, String propertyName, String propertyValue,  @AT@ 27839 @LENGTH@ 101
---UPD Modifier@@public @TO@ protected @AT@ 27839 @LENGTH@ 6


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpSimpleConsumeNotStepwiseTest, SftpSimpleConsumeTest @TO@ [public]SftpSimpleConsumeNotStepwiseTest, SftpSimpleConsumeTest @AT@ 951 @LENGTH@ 608
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 951 @LENGTH@ 79


UPD MethodDeclaration@@public, voidMethodName:LoggingErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, ExceptionPolicyStrategy exceptionPolicyStrategy,  @TO@ public, voidMethodName:LoggingErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy,  @AT@ 1559 @LENGTH@ 260
---UPD SuperConstructorInvocation@@super(camelContext,output,logger,null,new RedeliveryPolicy(),exceptionPolicyStrategy,null,null);
 @TO@ super(camelContext,output,logger,null,redeliveryPolicy,exceptionPolicyStrategy,null,null);
 @AT@ 1710 @LENGTH@ 103
------DEL ClassInstanceCreation@@RedeliveryPolicy[] @AT@ 1752 @LENGTH@ 22
---------DEL New@@new @AT@ 1752 @LENGTH@ 3
---------DEL SimpleType@@RedeliveryPolicy @AT@ 1756 @LENGTH@ 16
------INS SimpleName@@redeliveryPolicy @TO@ SuperConstructorInvocation@@super(camelContext,output,logger,null,new RedeliveryPolicy(),exceptionPolicyStrategy,null,null);
 @AT@ 1874 @LENGTH@ 16
---INS SingleVariableDeclaration@@RedeliveryPolicy redeliveryPolicy @TO@ MethodDeclaration@@public, voidMethodName:LoggingErrorHandler, CamelContext camelContext, Processor output, CamelLogger logger, ExceptionPolicyStrategy exceptionPolicyStrategy,  @AT@ 1738 @LENGTH@ 33
------INS SimpleType@@RedeliveryPolicy @TO@ SingleVariableDeclaration@@RedeliveryPolicy redeliveryPolicy @AT@ 1738 @LENGTH@ 16
------INS SimpleName@@redeliveryPolicy @TO@ SingleVariableDeclaration@@RedeliveryPolicy redeliveryPolicy @AT@ 1755 @LENGTH@ 16


UPD IfStatement@@if (FileUtil.isWindows()) {  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} else {  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @TO@ if (FileUtil.isWindows()) {  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));  assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz"));  assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz"));} else {  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));  assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz"));  assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz"));} @AT@ 6427 @LENGTH@ 1744
---UPD Block@@ThenBody:{  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @TO@ ThenBody:{  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));  assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz"));  assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz"));} @AT@ 6453 @LENGTH@ 877
------INS ExpressionStatement@@MethodInvocation:assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz")) @TO@ Block@@ThenBody:{  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 7333 @LENGTH@ 72
---------INS MethodInvocation@@assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz")) @AT@ 7333 @LENGTH@ 71
------------INS SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\.\\baz")] @TO@ MethodInvocation@@assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\.\\baz")) @AT@ 7333 @LENGTH@ 71
---------------INS StringLiteral@@"foo\\bar\\baz" @TO@ SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\.\\baz")] @AT@ 7346 @LENGTH@ 15
---------------INS MethodInvocation@@FileUtil.compactPath("foo\\bar\\.\\baz") @TO@ SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\.\\baz")] @AT@ 7363 @LENGTH@ 40
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("foo\\bar\\.\\baz") @AT@ 7363 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["foo\\bar\\.\\baz"] @TO@ MethodInvocation@@FileUtil.compactPath("foo\\bar\\.\\baz") @AT@ 7372 @LENGTH@ 31
---------------------INS StringLiteral@@"foo\\bar\\.\\baz" @TO@ SimpleName@@MethodName:compactPath:["foo\\bar\\.\\baz"] @AT@ 7384 @LENGTH@ 18
------INS ExpressionStatement@@MethodInvocation:assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz")) @TO@ Block@@ThenBody:{  assertEquals("..\\foo",FileUtil.compactPath("..\\foo"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo"));  assertEquals("..\\..\\foo\\bar",FileUtil.compactPath("..\\..\\foo\\bar"));  assertEquals("..\\..\\foo",FileUtil.compactPath("..\\..\\foo\\bar\\.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo\\..\\bar"));  assertEquals("bar\\baz",FileUtil.compactPath("foo\\..\\bar\\baz"));  assertEquals("foo\\baz",FileUtil.compactPath("foo\\bar\\..\\baz"));  assertEquals("baz",FileUtil.compactPath("foo\\bar\\..\\..\\baz"));  assertEquals("..\\baz",FileUtil.compactPath("foo\\bar\\..\\..\\..\\baz"));  assertEquals("..\\foo\\bar",FileUtil.compactPath("..\\foo\\bar"));} @AT@ 7418 @LENGTH@ 71
---------INS MethodInvocation@@assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz")) @AT@ 7418 @LENGTH@ 70
------------INS SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\\\baz")] @TO@ MethodInvocation@@assertEquals("foo\\bar\\baz",FileUtil.compactPath("foo\\bar\\\\baz")) @AT@ 7418 @LENGTH@ 70
---------------INS StringLiteral@@"foo\\bar\\baz" @TO@ SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\\\baz")] @AT@ 7431 @LENGTH@ 15
---------------INS MethodInvocation@@FileUtil.compactPath("foo\\bar\\\\baz") @TO@ SimpleName@@MethodName:assertEquals:["foo\\bar\\baz", FileUtil.compactPath("foo\\bar\\\\baz")] @AT@ 7448 @LENGTH@ 39
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("foo\\bar\\\\baz") @AT@ 7448 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["foo\\bar\\\\baz"] @TO@ MethodInvocation@@FileUtil.compactPath("foo\\bar\\\\baz") @AT@ 7457 @LENGTH@ 30
---------------------INS StringLiteral@@"foo\\bar\\\\baz" @TO@ SimpleName@@MethodName:compactPath:["foo\\bar\\\\baz"] @AT@ 7469 @LENGTH@ 17
---UPD Block@@ElseBody:{  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @TO@ ElseBody:{  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));  assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz"));  assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz"));} @AT@ 7336 @LENGTH@ 835
------INS ExpressionStatement@@MethodInvocation:assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz")) @TO@ Block@@ElseBody:{  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 8343 @LENGTH@ 67
---------INS MethodInvocation@@assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz")) @AT@ 8343 @LENGTH@ 66
------------INS SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar/./baz")] @TO@ MethodInvocation@@assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar/./baz")) @AT@ 8343 @LENGTH@ 66
---------------INS StringLiteral@@"foo/bar/baz" @TO@ SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar/./baz")] @AT@ 8356 @LENGTH@ 13
---------------INS MethodInvocation@@FileUtil.compactPath("foo/bar/./baz") @TO@ SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar/./baz")] @AT@ 8371 @LENGTH@ 37
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("foo/bar/./baz") @AT@ 8371 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["foo/bar/./baz"] @TO@ MethodInvocation@@FileUtil.compactPath("foo/bar/./baz") @AT@ 8380 @LENGTH@ 28
---------------------INS StringLiteral@@"foo/bar/./baz" @TO@ SimpleName@@MethodName:compactPath:["foo/bar/./baz"] @AT@ 8392 @LENGTH@ 15
------INS ExpressionStatement@@MethodInvocation:assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz")) @TO@ Block@@ElseBody:{  assertEquals("../foo",FileUtil.compactPath("../foo"));  assertEquals("../../foo",FileUtil.compactPath("../../foo"));  assertEquals("../../foo/bar",FileUtil.compactPath("../../foo/bar"));  assertEquals("../../foo",FileUtil.compactPath("../../foo/bar/.."));  assertEquals("foo",FileUtil.compactPath("foo"));  assertEquals("bar",FileUtil.compactPath("foo/../bar"));  assertEquals("bar/baz",FileUtil.compactPath("foo/../bar/baz"));  assertEquals("foo/baz",FileUtil.compactPath("foo/bar/../baz"));  assertEquals("baz",FileUtil.compactPath("foo/bar/../../baz"));  assertEquals("../baz",FileUtil.compactPath("foo/bar/../../../baz"));  assertEquals("../foo/bar",FileUtil.compactPath("../foo/bar"));} @AT@ 8423 @LENGTH@ 66
---------INS MethodInvocation@@assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz")) @AT@ 8423 @LENGTH@ 65
------------INS SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar//baz")] @TO@ MethodInvocation@@assertEquals("foo/bar/baz",FileUtil.compactPath("foo/bar//baz")) @AT@ 8423 @LENGTH@ 65
---------------INS StringLiteral@@"foo/bar/baz" @TO@ SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar//baz")] @AT@ 8436 @LENGTH@ 13
---------------INS MethodInvocation@@FileUtil.compactPath("foo/bar//baz") @TO@ SimpleName@@MethodName:assertEquals:["foo/bar/baz", FileUtil.compactPath("foo/bar//baz")] @AT@ 8451 @LENGTH@ 36
------------------INS SimpleName@@Name:FileUtil @TO@ MethodInvocation@@FileUtil.compactPath("foo/bar//baz") @AT@ 8451 @LENGTH@ 8
------------------INS SimpleName@@MethodName:compactPath:["foo/bar//baz"] @TO@ MethodInvocation@@FileUtil.compactPath("foo/bar//baz") @AT@ 8460 @LENGTH@ 27
---------------------INS StringLiteral@@"foo/bar//baz" @TO@ SimpleName@@MethodName:compactPath:["foo/bar//baz"] @AT@ 8472 @LENGTH@ 14


UPD MethodDeclaration@@private, void, MethodName:setKeyPassword, String keyPassword,  @TO@ public, void, MethodName:setKeyPassword, String keyPassword,  @AT@ 13353 @LENGTH@ 95
---UPD Modifier@@private @TO@ public @AT@ 13353 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @TO@ TypeDeclaration@@[public]CronScheduledRoutePolicy, ScheduledRoutePolicy[ScheduledRoutePolicyConstants] @AT@ 2924 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @AT@ 2924 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @AT@ 2931 @LENGTH@ 4
---INS SimpleName@@MethodName:onRemove @TO@ MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @AT@ 2936 @LENGTH@ 8
---INS SingleVariableDeclaration@@Route route @TO@ MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @AT@ 2945 @LENGTH@ 11
------INS SimpleType@@Route @TO@ SingleVariableDeclaration@@Route route @AT@ 2945 @LENGTH@ 5
------INS SimpleName@@route @TO@ SingleVariableDeclaration@@Route route @AT@ 2951 @LENGTH@ 5
---INS TryStatement@@try {  doStop();} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ MethodDeclaration@@public, void, MethodName:onRemove, Route route,  @AT@ 2968 @LENGTH@ 171
------INS ExpressionStatement@@MethodInvocation:doStop() @TO@ TryStatement@@try {  doStop();} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 3027 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:doStop:[] @TO@ ExpressionStatement@@MethodInvocation:doStop() @AT@ 3027 @LENGTH@ 8
------INS CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ TryStatement@@try {  doStop();} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 3047 @LENGTH@ 92
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 3054 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3054 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3064 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 3081 @LENGTH@ 48
------------INS MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @TO@ ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @AT@ 3087 @LENGTH@ 41
---------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 3087 @LENGTH@ 12
---------------INS SimpleName@@MethodName:wrapRuntimeCamelException:[e] @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 3100 @LENGTH@ 28
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:wrapRuntimeCamelException:[e] @AT@ 3126 @LENGTH@ 1


MOV IfStatement@@if (raName != null) {  ConnectorServices.unregisterResourceAdapterIdentifier(raName);} @TO@ MethodDeclaration@@public, void, MethodName:stop, StopContext context,  @AT@ 7098 @LENGTH@ 106


UPD ExpressionStatement@@MethodInvocation:from("direct:echo").delay(2000).throwException(new IllegalArgumentException("Forced")) @TO@ MethodInvocation:from("direct:echo").delay(250).throwException(new IllegalArgumentException("Forced")) @AT@ 2077 @LENGTH@ 129
---UPD MethodInvocation@@from("direct:echo").delay(2000).throwException(new IllegalArgumentException("Forced")) @TO@ from("direct:echo").delay(250).throwException(new IllegalArgumentException("Forced")) @AT@ 2077 @LENGTH@ 128
------UPD MethodInvocation@@MethodName:delay:[2000] @TO@ MethodName:delay:[250] @AT@ 2077 @LENGTH@ 52
---------UPD NumberLiteral@@2000 @TO@ 250 @AT@ 2124 @LENGTH@ 4


UPD FieldDeclaration@@private, final, int, [size=500] @TO@ private, final, int, [size=100] @AT@ 1210 @LENGTH@ 29
---UPD VariableDeclarationFragment@@size=500 @TO@ size=100 @AT@ 1228 @LENGTH@ 10
------UPD NumberLiteral@@500 @TO@ 100 @AT@ 1235 @LENGTH@ 3


INS ExpressionStatement@@Assignment:flow=createFlow() @TO@ MethodDeclaration@@public, void, MethodName:afterPropertiesSet, Exception,  @AT@ 1718 @LENGTH@ 20
---INS Assignment@@flow=createFlow() @TO@ ExpressionStatement@@Assignment:flow=createFlow() @AT@ 1718 @LENGTH@ 19
------INS SimpleName@@flow @TO@ Assignment@@flow=createFlow() @AT@ 1718 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@flow=createFlow() @AT@ 1722 @LENGTH@ 1
------INS MethodInvocation@@MethodName:createFlow:[] @TO@ Assignment@@flow=createFlow() @AT@ 1725 @LENGTH@ 12


UPD FieldDeclaration@@private, static, final, String, [CR="\n"] @TO@ private, static, final, String, [LF="\n"] @AT@ 1083 @LENGTH@ 38
---UPD VariableDeclarationFragment@@CR="\n" @TO@ LF="\n" @AT@ 1111 @LENGTH@ 9
------UPD SimpleName@@CR @TO@ LF @AT@ 1111 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertNotNull("Cannot find resource!") @TO@ MethodInvocation:assertNotNull("Cannot find resource!",resource) @AT@ 6637 @LENGTH@ 39
---UPD MethodInvocation@@assertNotNull("Cannot find resource!") @TO@ assertNotNull("Cannot find resource!",resource) @AT@ 6637 @LENGTH@ 38
------UPD SimpleName@@MethodName:assertNotNull:["Cannot find resource!"] @TO@ MethodName:assertNotNull:["Cannot find resource!", resource] @AT@ 6637 @LENGTH@ 38
---------INS SimpleName@@resource @TO@ SimpleName@@MethodName:assertNotNull:["Cannot find resource!"] @AT@ 6704 @LENGTH@ 8


INS MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @TO@ TypeDeclaration@@[public, abstract]TestSupport, Assert @AT@ 18544 @LENGTH@ 174
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18544 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18551 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18558 @LENGTH@ 7
---INS SimpleName@@MethodName:isJava16 @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18566 @LENGTH@ 8
---INS VariableDeclarationStatement@@String javaVersion=System.getProperty("java.version").toLowerCase(Locale.US); @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18587 @LENGTH@ 79
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String javaVersion=System.getProperty("java.version").toLowerCase(Locale.US); @AT@ 18587 @LENGTH@ 6
------INS VariableDeclarationFragment@@javaVersion=System.getProperty("java.version").toLowerCase(Locale.US) @TO@ VariableDeclarationStatement@@String javaVersion=System.getProperty("java.version").toLowerCase(Locale.US); @AT@ 18594 @LENGTH@ 71
---------INS SimpleName@@javaVersion @TO@ VariableDeclarationFragment@@javaVersion=System.getProperty("java.version").toLowerCase(Locale.US) @AT@ 18594 @LENGTH@ 11
---------INS MethodInvocation@@System.getProperty("java.version").toLowerCase(Locale.US) @TO@ VariableDeclarationFragment@@javaVersion=System.getProperty("java.version").toLowerCase(Locale.US) @AT@ 18608 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:getProperty:["java.version"] @TO@ MethodInvocation@@System.getProperty("java.version").toLowerCase(Locale.US) @AT@ 18608 @LENGTH@ 34
---------------INS StringLiteral@@"java.version" @TO@ MethodInvocation@@MethodName:getProperty:["java.version"] @AT@ 18627 @LENGTH@ 14
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("java.version").toLowerCase(Locale.US) @AT@ 18608 @LENGTH@ 6
------------INS SimpleName@@MethodName:toLowerCase:[Locale.US] @TO@ MethodInvocation@@System.getProperty("java.version").toLowerCase(Locale.US) @AT@ 18643 @LENGTH@ 22
---------------INS QualifiedName@@Locale.US @TO@ SimpleName@@MethodName:toLowerCase:[Locale.US] @AT@ 18655 @LENGTH@ 9
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.US @AT@ 18655 @LENGTH@ 6
------------------INS SimpleName@@US @TO@ QualifiedName@@Locale.US @AT@ 18662 @LENGTH@ 2
---INS ReturnStatement@@MethodInvocation:javaVersion.startsWith("1.6") @TO@ MethodDeclaration@@public, static, boolean, MethodName:isJava16,  @AT@ 18675 @LENGTH@ 37
------INS MethodInvocation@@javaVersion.startsWith("1.6") @TO@ ReturnStatement@@MethodInvocation:javaVersion.startsWith("1.6") @AT@ 18682 @LENGTH@ 29
---------INS SimpleName@@Name:javaVersion @TO@ MethodInvocation@@javaVersion.startsWith("1.6") @AT@ 18682 @LENGTH@ 11
---------INS SimpleName@@MethodName:startsWith:["1.6"] @TO@ MethodInvocation@@javaVersion.startsWith("1.6") @AT@ 18694 @LENGTH@ 17
------------INS StringLiteral@@"1.6" @TO@ SimpleName@@MethodName:startsWith:["1.6"] @AT@ 18705 @LENGTH@ 5


INS IfStatement@@if (endpoint != null) {  this.uri=endpoint.getEndpointUri();} @TO@ MethodDeclaration@@public, void, MethodName:setEndpoint, Endpoint endpoint,  @AT@ 3121 @LENGTH@ 83
---INS InfixExpression@@endpoint != null @TO@ IfStatement@@if (endpoint != null) {  this.uri=endpoint.getEndpointUri();} @AT@ 3125 @LENGTH@ 16
------INS SimpleName@@endpoint @TO@ InfixExpression@@endpoint != null @AT@ 3125 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@endpoint != null @AT@ 3133 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@endpoint != null @AT@ 3137 @LENGTH@ 4
---INS Block@@ThenBody:{  this.uri=endpoint.getEndpointUri();} @TO@ IfStatement@@if (endpoint != null) {  this.uri=endpoint.getEndpointUri();} @AT@ 3143 @LENGTH@ 61
------INS ExpressionStatement@@Assignment:this.uri=endpoint.getEndpointUri() @TO@ Block@@ThenBody:{  this.uri=endpoint.getEndpointUri();} @AT@ 3157 @LENGTH@ 37
---------INS Assignment@@this.uri=endpoint.getEndpointUri() @TO@ ExpressionStatement@@Assignment:this.uri=endpoint.getEndpointUri() @AT@ 3157 @LENGTH@ 36
------------INS FieldAccess@@this.uri @TO@ Assignment@@this.uri=endpoint.getEndpointUri() @AT@ 3157 @LENGTH@ 8
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.uri @AT@ 3157 @LENGTH@ 4
---------------INS SimpleName@@uri @TO@ FieldAccess@@this.uri @AT@ 3162 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@this.uri=endpoint.getEndpointUri() @AT@ 3165 @LENGTH@ 1
------------INS MethodInvocation@@endpoint.getEndpointUri() @TO@ Assignment@@this.uri=endpoint.getEndpointUri() @AT@ 3168 @LENGTH@ 25
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getEndpointUri() @AT@ 3168 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getEndpointUri:[] @TO@ MethodInvocation@@endpoint.getEndpointUri() @AT@ 3177 @LENGTH@ 16


UPD Block@@ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    List<Property> deployments=groupOverlay.get(name).asPropertyList();    for (    Property content : deployments) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    ModelNode deploymentsNode=groupOverlay.get(name);    if (deploymentsNode.has(DEPLOYMENT)) {      for (      Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {        final String deploymentName=content.getName();        final ModelNode deploymentDetails=content.getValue();        boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;        addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));        addOp=Util.getEmptyOperation(ADD,addr.toModelNode());        addOp.get(REGULAR_EXPRESSION).set(regEx);        updates.add(addOp);      }    }  }} @AT@ 28231 @LENGTH@ 1064
---INS IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ Block@@ThenBody:{  final ModelNode groupOverlay=serverGroup.get(DEPLOYMENT_OVERLAY).asObject();  if (groupOverlay.has(name)) {    List<Property> deployments=groupOverlay.get(name).asPropertyList();    for (    Property content : deployments) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28352 @LENGTH@ 1032
------MOV MethodInvocation@@groupOverlay.has(name) @TO@ IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28356 @LENGTH@ 22
------INS Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @TO@ IfStatement@@if (groupOverlay.has(name)) {  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28380 @LENGTH@ 1004
---------MOV IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28352 @LENGTH@ 925
------------UPD Block@@ThenBody:{  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ ThenBody:{  for (  Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28380 @LENGTH@ 897
---------------DEL VariableDeclarationStatement@@List<Property> deployments=groupOverlay.get(name).asPropertyList(); @AT@ 28406 @LENGTH@ 69
------------------DEL ParameterizedType@@List<Property> @AT@ 28406 @LENGTH@ 14
---------------------DEL SimpleType@@List @AT@ 28406 @LENGTH@ 4
---------------------DEL SimpleType@@Property @AT@ 28411 @LENGTH@ 8
------------------DEL VariableDeclarationFragment@@deployments=groupOverlay.get(name).asPropertyList() @AT@ 28421 @LENGTH@ 53
---------------------DEL SimpleName@@deployments @AT@ 28421 @LENGTH@ 11
---------------------DEL MethodInvocation@@groupOverlay.get(name).asPropertyList() @AT@ 28435 @LENGTH@ 39
------------------------DEL MethodInvocation@@MethodName:get:[name] @AT@ 28435 @LENGTH@ 22
---------------------------DEL SimpleName@@name @AT@ 28452 @LENGTH@ 4
------------------------DEL SimpleName@@Name:groupOverlay @AT@ 28435 @LENGTH@ 12
------------------------DEL SimpleName@@MethodName:asPropertyList:[] @AT@ 28458 @LENGTH@ 16
---------------UPD EnhancedForStatement@@for (Property content : deployments) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @TO@ for (Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @AT@ 28500 @LENGTH@ 755
------------------DEL SimpleName@@deployments @AT@ 28524 @LENGTH@ 11
------------------INS MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @TO@ EnhancedForStatement@@for (Property content : deployments) {  final String deploymentName=content.getName();  final ModelNode deploymentDetails=content.getValue();  boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;  addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));  addOp=Util.getEmptyOperation(ADD,addr.toModelNode());  addOp.get(REGULAR_EXPRESSION).set(regEx);  updates.add(addOp);} @AT@ 28568 @LENGTH@ 48
---------------------INS MethodInvocation@@MethodName:get:[DEPLOYMENT] @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28568 @LENGTH@ 31
------------------------INS SimpleName@@DEPLOYMENT @TO@ MethodInvocation@@MethodName:get:[DEPLOYMENT] @AT@ 28588 @LENGTH@ 10
---------------------INS SimpleName@@Name:deploymentsNode @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28568 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@deploymentsNode.get(DEPLOYMENT).asPropertyList() @AT@ 28600 @LENGTH@ 16
------------INS MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @TO@ IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28485 @LENGTH@ 31
---------------INS SimpleName@@Name:deploymentsNode @TO@ MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @AT@ 28485 @LENGTH@ 15
---------------INS SimpleName@@MethodName:has:[DEPLOYMENT] @TO@ MethodInvocation@@deploymentsNode.has(DEPLOYMENT) @AT@ 28501 @LENGTH@ 15
------------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:has:[DEPLOYMENT] @AT@ 28505 @LENGTH@ 10
---------INS VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @TO@ Block@@ThenBody:{  ModelNode deploymentsNode=groupOverlay.get(name);  if (deploymentsNode.has(DEPLOYMENT)) {    for (    Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {      final String deploymentName=content.getName();      final ModelNode deploymentDetails=content.getValue();      boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;      addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));      addOp=Util.getEmptyOperation(ADD,addr.toModelNode());      addOp.get(REGULAR_EXPRESSION).set(regEx);      updates.add(addOp);    }  }} @AT@ 28406 @LENGTH@ 51
------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @AT@ 28406 @LENGTH@ 9
------------INS VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @TO@ VariableDeclarationStatement@@ModelNode deploymentsNode=groupOverlay.get(name); @AT@ 28416 @LENGTH@ 40
---------------INS SimpleName@@deploymentsNode @TO@ VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @AT@ 28416 @LENGTH@ 15
---------------INS MethodInvocation@@groupOverlay.get(name) @TO@ VariableDeclarationFragment@@deploymentsNode=groupOverlay.get(name) @AT@ 28434 @LENGTH@ 22
------------------INS SimpleName@@Name:groupOverlay @TO@ MethodInvocation@@groupOverlay.get(name) @AT@ 28434 @LENGTH@ 12
------------------INS SimpleName@@MethodName:get:[name] @TO@ MethodInvocation@@groupOverlay.get(name) @AT@ 28447 @LENGTH@ 9
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:get:[name] @AT@ 28451 @LENGTH@ 4
---UPD IfStatement@@if (groupOverlay.has(name)) {  List<Property> deployments=groupOverlay.get(name).asPropertyList();  for (  Property content : deployments) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @TO@ if (deploymentsNode.has(DEPLOYMENT)) {  for (  Property content : deploymentsNode.get(DEPLOYMENT).asPropertyList()) {    final String deploymentName=content.getName();    final ModelNode deploymentDetails=content.getValue();    boolean regEx=deploymentDetails.hasDefined(REGULAR_EXPRESSION) ? deploymentDetails.require(REGULAR_EXPRESSION).asBoolean() : false;    addr=PathAddress.pathAddress(PathElement.pathElement(DEPLOYMENT_OVERLAY,name),PathElement.pathElement(DEPLOYMENT,deploymentName));    addOp=Util.getEmptyOperation(ADD,addr.toModelNode());    addOp.get(REGULAR_EXPRESSION).set(regEx);    updates.add(addOp);  }} @AT@ 28352 @LENGTH@ 925


DEL ExpressionStatement@@MethodInvocation:enterState('"',new QuotesState(false,true)) @AT@ 1716 @LENGTH@ 46
---DEL MethodInvocation@@enterState('"',new QuotesState(false,true)) @AT@ 1716 @LENGTH@ 45
------DEL SimpleName@@MethodName:enterState:['"', new QuotesState(false,true)] @AT@ 1716 @LENGTH@ 45
---------DEL CharacterLiteral@@'"' @AT@ 1727 @LENGTH@ 3
---------DEL ClassInstanceCreation@@QuotesState[false, true] @AT@ 1732 @LENGTH@ 28
------------DEL New@@new @AT@ 1732 @LENGTH@ 3
------------DEL SimpleType@@QuotesState @AT@ 1736 @LENGTH@ 11
------------DEL BooleanLiteral@@false @AT@ 1748 @LENGTH@ 5
------------DEL BooleanLiteral@@true @AT@ 1755 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setBody(body.getData()) @TO@ MethodInvocation:exchange.getIn().setBody(body.toByteArray()) @AT@ 3155 @LENGTH@ 41
---UPD MethodInvocation@@exchange.getIn().setBody(body.getData()) @TO@ exchange.getIn().setBody(body.toByteArray()) @AT@ 3155 @LENGTH@ 40
------UPD SimpleName@@MethodName:setBody:[body.getData()] @TO@ MethodName:setBody:[body.toByteArray()] @AT@ 3172 @LENGTH@ 23
---------UPD MethodInvocation@@body.getData() @TO@ body.toByteArray() @AT@ 3180 @LENGTH@ 14
------------UPD SimpleName@@MethodName:getData:[] @TO@ MethodName:toByteArray:[] @AT@ 3185 @LENGTH@ 9


DEL FieldDeclaration@@protected, ProducerTemplate, [producerTemplate] @AT@ 1155 @LENGTH@ 44
---DEL Modifier@@protected @AT@ 1155 @LENGTH@ 9
---DEL SimpleType@@ProducerTemplate @AT@ 1165 @LENGTH@ 16
---DEL VariableDeclarationFragment@@producerTemplate @AT@ 1182 @LENGTH@ 16
------DEL SimpleName@@producerTemplate @AT@ 1182 @LENGTH@ 16


DEL MethodDeclaration@@public, synchronized, void, MethodName:deploy, final File file, final String deploymentName, DeploymentExecutionException, DeploymentFailureException, IOException,  @AT@ 7173 @LENGTH@ 657
---DEL Modifier@@public @AT@ 7173 @LENGTH@ 6
---DEL Modifier@@synchronized @AT@ 7180 @LENGTH@ 12
---DEL PrimitiveType@@void @AT@ 7193 @LENGTH@ 4
---DEL SimpleName@@MethodName:deploy @AT@ 7198 @LENGTH@ 6
---DEL SingleVariableDeclaration@@final File file @AT@ 7205 @LENGTH@ 15
------DEL Modifier@@final @AT@ 7205 @LENGTH@ 5
------DEL SimpleType@@File @AT@ 7211 @LENGTH@ 4
------DEL SimpleName@@file @AT@ 7216 @LENGTH@ 4
---DEL SingleVariableDeclaration@@final String deploymentName @AT@ 7222 @LENGTH@ 27
------DEL Modifier@@final @AT@ 7222 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 7228 @LENGTH@ 6
------DEL SimpleName@@deploymentName @AT@ 7235 @LENGTH@ 14
---DEL SimpleType@@DeploymentExecutionException @AT@ 7258 @LENGTH@ 28
---DEL SimpleType@@DeploymentFailureException @AT@ 7288 @LENGTH@ 26
---DEL SimpleType@@IOException @AT@ 7316 @LENGTH@ 11
---DEL IfStatement@@if (isRunning) {switch (DomainDeployment.create(client,domain,file,deploymentName,Type.DEPLOY).execute()) {case REQUIRES_RESTART:{      client.execute(Operations.createOperation(Operations.RELOAD));      break;    }case SUCCESS:  break;}} else {throw new IllegalStateException("Cannot deploy to a server that is not running.");} @AT@ 7338 @LENGTH@ 486
------DEL SimpleName@@isRunning @AT@ 7342 @LENGTH@ 9
------DEL Block@@ThenBody:{switch (DomainDeployment.create(client,domain,file,deploymentName,Type.DEPLOY).execute()) {case REQUIRES_RESTART:{      client.execute(Operations.createOperation(Operations.RELOAD));      break;    }case SUCCESS:  break;}} @AT@ 7353 @LENGTH@ 359
---------DEL SwitchStatement@@switch (DomainDeployment.create(client,domain,file,deploymentName,Type.DEPLOY).execute()) {case REQUIRES_RESTART:{    client.execute(Operations.createOperation(Operations.RELOAD));    break;  }case SUCCESS:break;} @AT@ 7367 @LENGTH@ 335
------------DEL MethodInvocation@@DomainDeployment.create(client,domain,file,deploymentName,Type.DEPLOY).execute() @AT@ 7375 @LENGTH@ 84
---------------DEL MethodInvocation@@MethodName:create:[client, domain, file, deploymentName, Type.DEPLOY] @AT@ 7375 @LENGTH@ 74
------------------DEL SimpleName@@client @AT@ 7399 @LENGTH@ 6
------------------DEL SimpleName@@domain @AT@ 7407 @LENGTH@ 6
------------------DEL SimpleName@@file @AT@ 7415 @LENGTH@ 4
------------------DEL SimpleName@@deploymentName @AT@ 7421 @LENGTH@ 14
------------------DEL QualifiedName@@Type.DEPLOY @AT@ 7437 @LENGTH@ 11
---------------------DEL SimpleName@@Type @AT@ 7437 @LENGTH@ 4
---------------------DEL SimpleName@@DEPLOY @AT@ 7442 @LENGTH@ 6
---------------DEL SimpleName@@Name:DomainDeployment @AT@ 7375 @LENGTH@ 16
---------------DEL SimpleName@@MethodName:execute:[] @AT@ 7450 @LENGTH@ 9
------------DEL SwitchCase@@case REQUIRES_RESTART: @AT@ 7479 @LENGTH@ 22
---------------DEL SimpleName@@REQUIRES_RESTART @AT@ 7484 @LENGTH@ 16
------------DEL ExpressionStatement@@MethodInvocation:client.execute(Operations.createOperation(Operations.RELOAD)) @AT@ 7524 @LENGTH@ 62
---------------DEL MethodInvocation@@client.execute(Operations.createOperation(Operations.RELOAD)) @AT@ 7524 @LENGTH@ 61
------------------DEL SimpleName@@Name:client @AT@ 7524 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:execute:[Operations.createOperation(Operations.RELOAD)] @AT@ 7531 @LENGTH@ 54
---------------------DEL MethodInvocation@@Operations.createOperation(Operations.RELOAD) @AT@ 7539 @LENGTH@ 45
------------------------DEL SimpleName@@Name:Operations @AT@ 7539 @LENGTH@ 10
------------------------DEL SimpleName@@MethodName:createOperation:[Operations.RELOAD] @AT@ 7550 @LENGTH@ 34
---------------------------DEL QualifiedName@@Operations.RELOAD @AT@ 7566 @LENGTH@ 17
------------------------------DEL SimpleName@@Operations @AT@ 7566 @LENGTH@ 10
------------------------------DEL SimpleName@@RELOAD @AT@ 7577 @LENGTH@ 6
------------DEL BreakStatement@@ @AT@ 7607 @LENGTH@ 6
------------DEL SwitchCase@@case SUCCESS: @AT@ 7648 @LENGTH@ 13
---------------DEL SimpleName@@SUCCESS @AT@ 7653 @LENGTH@ 7
------------DEL BreakStatement@@ @AT@ 7682 @LENGTH@ 6
------DEL Block@@ElseBody:{  throw new IllegalStateException("Cannot deploy to a server that is not running.");} @AT@ 7718 @LENGTH@ 106
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Cannot deploy to a server that is not running.") @AT@ 7732 @LENGTH@ 82
------------DEL ClassInstanceCreation@@IllegalStateException["Cannot deploy to a server that is not running."] @AT@ 7738 @LENGTH@ 75
---------------DEL New@@new @AT@ 7738 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 7742 @LENGTH@ 21
---------------DEL StringLiteral@@"Cannot deploy to a server that is not running." @AT@ 7764 @LENGTH@ 48


INS IfStatement@@if (handler != null) {  correlation.put(newCorrelationId,handler,requestTimeout);} @TO@ MethodDeclaration@@public, void, MethodName:updateCorrelationId, String correlationId, String newCorrelationId, long requestTimeout,  @AT@ 2455 @LENGTH@ 104
---INS InfixExpression@@handler != null @TO@ IfStatement@@if (handler != null) {  correlation.put(newCorrelationId,handler,requestTimeout);} @AT@ 2459 @LENGTH@ 15
------INS SimpleName@@handler @TO@ InfixExpression@@handler != null @AT@ 2459 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@handler != null @AT@ 2466 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@handler != null @AT@ 2470 @LENGTH@ 4
---INS Block@@ThenBody:{  correlation.put(newCorrelationId,handler,requestTimeout);} @TO@ IfStatement@@if (handler != null) {  correlation.put(newCorrelationId,handler,requestTimeout);} @AT@ 2476 @LENGTH@ 83
------MOV ExpressionStatement@@MethodInvocation:correlation.put(newCorrelationId,handler,requestTimeout) @TO@ Block@@ThenBody:{  correlation.put(newCorrelationId,handler,requestTimeout);} @AT@ 2455 @LENGTH@ 59


UPD VariableDeclarationStatement@@int savedPos=context.pos; @TO@ final int savedPos=context.pos; @AT@ 17572 @LENGTH@ 27
---INS Modifier@@final @TO@ VariableDeclarationStatement@@int savedPos=context.pos; @AT@ 17584 @LENGTH@ 5


UPD VariableDeclarationStatement@@final Map<String,Integer> retval=new Hashtable(3); @TO@ final Map<String,Integer> retval=new Hashtable<String,Integer>(3); @AT@ 4022 @LENGTH@ 53
---UPD VariableDeclarationFragment@@retval=new Hashtable(3) @TO@ retval=new Hashtable<String,Integer>(3) @AT@ 4049 @LENGTH@ 25
------UPD ClassInstanceCreation@@Hashtable[3] @TO@ Hashtable<String,Integer>[3] @AT@ 4058 @LENGTH@ 16
---------INS ParameterizedType@@Hashtable<String,Integer> @TO@ ClassInstanceCreation@@Hashtable[3] @AT@ 4004 @LENGTH@ 26
------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,Integer> @AT@ 4004 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,Integer> @AT@ 4014 @LENGTH@ 6
------------INS SimpleType@@Integer @TO@ ParameterizedType@@Hashtable<String,Integer> @AT@ 4022 @LENGTH@ 7
---------DEL SimpleType@@Hashtable @AT@ 4062 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:eventPublisher.publishAuthenticationFailure(lastException,authentication) @AT@ 9563 @LENGTH@ 75
---DEL MethodInvocation@@eventPublisher.publishAuthenticationFailure(lastException,authentication) @AT@ 9563 @LENGTH@ 74
------DEL SimpleName@@Name:eventPublisher @AT@ 9563 @LENGTH@ 14
------DEL SimpleName@@MethodName:publishAuthenticationFailure:[lastException, authentication] @AT@ 9578 @LENGTH@ 59
---------DEL SimpleName@@lastException @AT@ 9607 @LENGTH@ 13
---------DEL SimpleName@@authentication @AT@ 9622 @LENGTH@ 14


UPD ExpressionStatement@@Assignment:resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @TO@ Assignment:resultClosure=CollectionUtils.forAllDo(col.iterator(),(Closure<List<? extends Number>>)null) @AT@ 23372 @LENGTH@ 119
---UPD Assignment@@resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @TO@ resultClosure=CollectionUtils.forAllDo(col.iterator(),(Closure<List<? extends Number>>)null) @AT@ 23372 @LENGTH@ 118
------UPD MethodInvocation@@CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @TO@ CollectionUtils.forAllDo(col.iterator(),(Closure<List<? extends Number>>)null) @AT@ 23388 @LENGTH@ 102
---------UPD SimpleName@@MethodName:forAllDo:[col.iterator(), null] @TO@ MethodName:forAllDo:[col.iterator(), (Closure<List<? extends Number>>)null] @AT@ 23460 @LENGTH@ 30
------------INS CastExpression@@(Closure<List<? extends Number>>)null @TO@ SimpleName@@MethodName:forAllDo:[col.iterator(), null] @AT@ 23387 @LENGTH@ 38
---------------INS ParameterizedType@@Closure<List<? extends Number>> @TO@ CastExpression@@(Closure<List<? extends Number>>)null @AT@ 23388 @LENGTH@ 31
------------------INS SimpleType@@Closure @TO@ ParameterizedType@@Closure<List<? extends Number>> @AT@ 23388 @LENGTH@ 7
------------------INS ParameterizedType@@List<? extends Number> @TO@ ParameterizedType@@Closure<List<? extends Number>> @AT@ 23396 @LENGTH@ 22
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<? extends Number> @AT@ 23396 @LENGTH@ 4
---------------------INS WildcardType@@? @TO@ ParameterizedType@@List<? extends Number> @AT@ 23401 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ CastExpression@@(Closure<List<? extends Number>>)null @AT@ 23421 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 23485 @LENGTH@ 4


DEL IfStatement@@if (node != null) {  node.set(ModelType.STRING);} @AT@ 11544 @LENGTH@ 69
---DEL InfixExpression@@node != null @AT@ 11548 @LENGTH@ 12
------DEL SimpleName@@node @AT@ 11548 @LENGTH@ 4
------DEL Operator@@!= @AT@ 11552 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 11556 @LENGTH@ 4
---DEL Block@@ThenBody:{  node.set(ModelType.STRING);} @AT@ 11562 @LENGTH@ 51
------DEL ExpressionStatement@@MethodInvocation:node.set(ModelType.STRING) @AT@ 11576 @LENGTH@ 27
---------DEL MethodInvocation@@node.set(ModelType.STRING) @AT@ 11576 @LENGTH@ 26
------------DEL SimpleName@@Name:node @AT@ 11576 @LENGTH@ 4
------------DEL SimpleName@@MethodName:set:[ModelType.STRING] @AT@ 11581 @LENGTH@ 21
---------------DEL QualifiedName@@ModelType.STRING @AT@ 11585 @LENGTH@ 16
------------------DEL SimpleName@@ModelType @AT@ 11585 @LENGTH@ 9
------------------DEL SimpleName@@STRING @AT@ 11595 @LENGTH@ 6


UPD MethodDeclaration@@public, static, List<O>, O, MethodName:selectRejected, Collection<? extends O> inputCollection, Predicate<? super O> predicate,  @TO@ public, static, List<E>, E, MethodName:selectRejected, Collection<? extends E> inputCollection, Predicate<? super E> predicate,  @AT@ 6761 @LENGTH@ 250
---UPD ParameterizedType@@List<O> @TO@ List<E> @AT@ 6779 @LENGTH@ 7
------UPD SimpleType@@O @TO@ E @AT@ 6784 @LENGTH@ 1
---UPD SingleVariableDeclaration@@Collection<? extends O> inputCollection @TO@ Collection<? extends E> inputCollection @AT@ 6802 @LENGTH@ 39
------UPD ParameterizedType@@Collection<? extends O> @TO@ Collection<? extends E> @AT@ 6802 @LENGTH@ 23
---UPD SingleVariableDeclaration@@Predicate<? super O> predicate @TO@ Predicate<? super E> predicate @AT@ 6855 @LENGTH@ 30
------UPD ParameterizedType@@Predicate<? super O> @TO@ Predicate<? super E> @AT@ 6855 @LENGTH@ 20
---UPD ReturnStatement@@MethodInvocation:CollectionUtils.selectRejected(inputCollection,predicate,new ArrayList<O>(inputCollection.size())) @TO@ MethodInvocation:CollectionUtils.selectRejected(inputCollection,predicate,new ArrayList<E>(inputCollection.size())) @AT@ 6897 @LENGTH@ 108
------UPD MethodInvocation@@CollectionUtils.selectRejected(inputCollection,predicate,new ArrayList<O>(inputCollection.size())) @TO@ CollectionUtils.selectRejected(inputCollection,predicate,new ArrayList<E>(inputCollection.size())) @AT@ 6904 @LENGTH@ 100
---------UPD SimpleName@@MethodName:selectRejected:[inputCollection, predicate, new ArrayList<O>(inputCollection.size())] @TO@ MethodName:selectRejected:[inputCollection, predicate, new ArrayList<E>(inputCollection.size())] @AT@ 6920 @LENGTH@ 84
------------UPD ClassInstanceCreation@@ArrayList<O>[inputCollection.size()] @TO@ ArrayList<E>[inputCollection.size()] @AT@ 6963 @LENGTH@ 40
---------------UPD ParameterizedType@@ArrayList<O> @TO@ ArrayList<E> @AT@ 6967 @LENGTH@ 12
------------------UPD SimpleType@@O @TO@ E @AT@ 6977 @LENGTH@ 1


INS MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @TO@ TypeDeclaration@@[public]MapReduceResults, [Iterable<T>] @AT@ 2878 @LENGTH@ 147
---INS Modifier@@private @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2878 @LENGTH@ 7
---INS SimpleType@@Long @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2886 @LENGTH@ 4
---INS SimpleName@@MethodName:getAsLong @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2891 @LENGTH@ 9
---INS SingleVariableDeclaration@@DBObject source @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2901 @LENGTH@ 15
------INS SimpleType@@DBObject @TO@ SingleVariableDeclaration@@DBObject source @AT@ 2901 @LENGTH@ 8
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@DBObject source @AT@ 2910 @LENGTH@ 6
---INS SingleVariableDeclaration@@String key @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2918 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String key @AT@ 2918 @LENGTH@ 6
------INS SimpleName@@key @TO@ SingleVariableDeclaration@@String key @AT@ 2925 @LENGTH@ 3
---INS VariableDeclarationStatement@@Object raw=source.get(key); @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2934 @LENGTH@ 29
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object raw=source.get(key); @AT@ 2934 @LENGTH@ 6
------INS VariableDeclarationFragment@@raw=source.get(key) @TO@ VariableDeclarationStatement@@Object raw=source.get(key); @AT@ 2941 @LENGTH@ 21
---------INS SimpleName@@raw @TO@ VariableDeclarationFragment@@raw=source.get(key) @AT@ 2941 @LENGTH@ 3
---------INS MethodInvocation@@source.get(key) @TO@ VariableDeclarationFragment@@raw=source.get(key) @AT@ 2947 @LENGTH@ 15
------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.get(key) @AT@ 2947 @LENGTH@ 6
------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@source.get(key) @AT@ 2954 @LENGTH@ 8
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 2958 @LENGTH@ 3
---INS ReturnStatement@@ConditionalExpression:raw instanceof Long ? (Long)raw : (Integer)raw @TO@ MethodDeclaration@@private, Long, MethodName:getAsLong, DBObject source, String key,  @AT@ 2966 @LENGTH@ 56
------INS ConditionalExpression@@raw instanceof Long ? (Long)raw : (Integer)raw @TO@ ReturnStatement@@ConditionalExpression:raw instanceof Long ? (Long)raw : (Integer)raw @AT@ 2973 @LENGTH@ 48
---------INS InstanceofExpression@@raw instanceof Long @TO@ ConditionalExpression@@raw instanceof Long ? (Long)raw : (Integer)raw @AT@ 2973 @LENGTH@ 19
------------INS SimpleName@@raw @TO@ InstanceofExpression@@raw instanceof Long @AT@ 2973 @LENGTH@ 3
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@raw instanceof Long @AT@ 2977 @LENGTH@ 10
------------INS SimpleType@@Long @TO@ InstanceofExpression@@raw instanceof Long @AT@ 2988 @LENGTH@ 4
---------INS CastExpression@@(Long)raw @TO@ ConditionalExpression@@raw instanceof Long ? (Long)raw : (Integer)raw @AT@ 2995 @LENGTH@ 10
------------INS SimpleType@@Long @TO@ CastExpression@@(Long)raw @AT@ 2996 @LENGTH@ 4
------------INS SimpleName@@raw @TO@ CastExpression@@(Long)raw @AT@ 3002 @LENGTH@ 3
---------INS CastExpression@@(Integer)raw @TO@ ConditionalExpression@@raw instanceof Long ? (Long)raw : (Integer)raw @AT@ 3008 @LENGTH@ 13
------------INS SimpleType@@Integer @TO@ CastExpression@@(Integer)raw @AT@ 3009 @LENGTH@ 7
------------INS SimpleName@@raw @TO@ CastExpression@@(Integer)raw @AT@ 3018 @LENGTH@ 3


DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(1,ejbInstance.getTimers().size()) @AT@ 2944 @LENGTH@ 55
---DEL MethodInvocation@@Assert.assertEquals(1,ejbInstance.getTimers().size()) @AT@ 2944 @LENGTH@ 54
------DEL SimpleName@@Name:Assert @AT@ 2944 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertEquals:[1, ejbInstance.getTimers().size()] @AT@ 2951 @LENGTH@ 47
---------DEL NumberLiteral@@1 @AT@ 2964 @LENGTH@ 1
---------DEL MethodInvocation@@ejbInstance.getTimers().size() @AT@ 2967 @LENGTH@ 30
------------DEL MethodInvocation@@MethodName:getTimers:[] @AT@ 2967 @LENGTH@ 23
------------DEL SimpleName@@Name:ejbInstance @AT@ 2967 @LENGTH@ 11
------------DEL SimpleName@@MethodName:size:[] @AT@ 2991 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, ListAttributeDefinition, [NAMES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.NAMES,true,ModelType.STRING,new StringLengthValidator(1),AttributeAccess.Flag.RESTART_ALL_SERVICES)] @TO@ public, static, final, ListAttributeDefinition, [NAMES=new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build()] @AT@ 2775 @LENGTH@ 219
---UPD VariableDeclarationFragment@@NAMES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.NAMES,true,ModelType.STRING,new StringLengthValidator(1),AttributeAccess.Flag.RESTART_ALL_SERVICES) @TO@ NAMES=new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2819 @LENGTH@ 174
------INS MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @TO@ VariableDeclarationFragment@@NAMES=new PrimitiveListAttributeDefinition(ModelDescriptionConstants.NAMES,true,ModelType.STRING,new StringLengthValidator(1),AttributeAccess.Flag.RESTART_ALL_SERVICES) @AT@ 2629 @LENGTH@ 269
---------INS MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2629 @LENGTH@ 248
------------MOV QualifiedName@@AttributeAccess.Flag.RESTART_ALL_SERVICES @TO@ MethodInvocation@@MethodName:setFlags:[AttributeAccess.Flag.RESTART_ALL_SERVICES] @AT@ 2951 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1)] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2629 @LENGTH@ 183
------------INS ClassInstanceCreation@@StringLengthValidator[1] @TO@ MethodInvocation@@MethodName:setValidator:[new StringLengthValidator(1)] @AT@ 2783 @LENGTH@ 28
---------------MOV New@@new @TO@ ClassInstanceCreation@@StringLengthValidator[1] @AT@ 2921 @LENGTH@ 3
---------------MOV SimpleType@@StringLengthValidator @TO@ ClassInstanceCreation@@StringLengthValidator[1] @AT@ 2925 @LENGTH@ 21
---------------MOV NumberLiteral@@1 @TO@ ClassInstanceCreation@@StringLengthValidator[1] @AT@ 2947 @LENGTH@ 1
---------INS MethodInvocation@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2629 @LENGTH@ 127
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowNull:[true] @AT@ 2751 @LENGTH@ 4
---------INS ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.NAMES, ModelType.STRING] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2629 @LENGTH@ 95
------------MOV New@@new @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.NAMES, ModelType.STRING] @AT@ 2827 @LENGTH@ 3
------------MOV SimpleType@@PrimitiveListAttributeDefinition @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.NAMES, ModelType.STRING] @AT@ 2831 @LENGTH@ 32
------------MOV QualifiedName@@ModelDescriptionConstants.NAMES @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.NAMES, ModelType.STRING] @AT@ 2864 @LENGTH@ 31
------------MOV QualifiedName@@ModelType.STRING @TO@ ClassInstanceCreation@@PrimitiveListAttributeDefinition.Builder[ModelDescriptionConstants.NAMES, ModelType.STRING] @AT@ 2903 @LENGTH@ 16
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new PrimitiveListAttributeDefinition.Builder(ModelDescriptionConstants.NAMES,ModelType.STRING).setAllowNull(true).setValidator(new StringLengthValidator(1)).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES).build() @AT@ 2891 @LENGTH@ 7
------DEL ClassInstanceCreation@@PrimitiveListAttributeDefinition[ModelDescriptionConstants.NAMES, true, ModelType.STRING, new StringLengthValidator(1), AttributeAccess.Flag.RESTART_ALL_SERVICES] @AT@ 2827 @LENGTH@ 166
---------DEL BooleanLiteral@@true @AT@ 2897 @LENGTH@ 4
---------DEL ClassInstanceCreation@@StringLengthValidator[1] @AT@ 2921 @LENGTH@ 28


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.userTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.removeUserTransaction(this.userTransactionID); @AT@ 2023 @LENGTH@ 102
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.userTransactionID) @TO@ transaction=this.transactionsRepository.removeUserTransaction(this.userTransactionID) @AT@ 2041 @LENGTH@ 83
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.userTransactionID) @TO@ this.transactionsRepository.removeUserTransaction(this.userTransactionID) @AT@ 2055 @LENGTH@ 69
---------UPD SimpleName@@MethodName:removeTransaction:[this.userTransactionID] @TO@ MethodName:removeUserTransaction:[this.userTransactionID] @AT@ 2083 @LENGTH@ 41


UPD VariableDeclarationStatement@@byte[] originalHash=contentItemNode.hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,contentItemNode).asBytes() : null; @TO@ byte[] originalHash=replaceNode.get(CONTENT).get(0).hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,replaceNode.get(CONTENT).get(0)).asBytes() : null; @AT@ 5508 @LENGTH@ 153
---UPD VariableDeclarationFragment@@originalHash=contentItemNode.hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,contentItemNode).asBytes() : null @TO@ originalHash=replaceNode.get(CONTENT).get(0).hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,replaceNode.get(CONTENT).get(0)).asBytes() : null @AT@ 5515 @LENGTH@ 145
------UPD ConditionalExpression@@contentItemNode.hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,contentItemNode).asBytes() : null @TO@ replaceNode.get(CONTENT).get(0).hasDefined(CONTENT_HASH.getName()) ? CONTENT_HASH.resolveModelAttribute(context,replaceNode.get(CONTENT).get(0)).asBytes() : null @AT@ 5530 @LENGTH@ 130
---------UPD MethodInvocation@@contentItemNode.hasDefined(CONTENT_HASH.getName()) @TO@ replaceNode.get(CONTENT).get(0).hasDefined(CONTENT_HASH.getName()) @AT@ 5530 @LENGTH@ 50
------------INS MethodInvocation@@MethodName:get:[0] @TO@ MethodInvocation@@contentItemNode.hasDefined(CONTENT_HASH.getName()) @AT@ 5530 @LENGTH@ 31
---------------INS NumberLiteral@@0 @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 5559 @LENGTH@ 1
------------INS MethodInvocation@@MethodName:get:[CONTENT] @TO@ MethodInvocation@@contentItemNode.hasDefined(CONTENT_HASH.getName()) @AT@ 5530 @LENGTH@ 24
---------------INS SimpleName@@CONTENT @TO@ MethodInvocation@@MethodName:get:[CONTENT] @AT@ 5546 @LENGTH@ 7
------------UPD SimpleName@@Name:contentItemNode @TO@ Name:replaceNode @AT@ 5530 @LENGTH@ 15
---------UPD MethodInvocation@@CONTENT_HASH.resolveModelAttribute(context,contentItemNode).asBytes() @TO@ CONTENT_HASH.resolveModelAttribute(context,replaceNode.get(CONTENT).get(0)).asBytes() @AT@ 5583 @LENGTH@ 70
------------UPD MethodInvocation@@MethodName:resolveModelAttribute:[context, contentItemNode] @TO@ MethodName:resolveModelAttribute:[context, replaceNode.get(CONTENT).get(0)] @AT@ 5583 @LENGTH@ 60
---------------UPD SimpleName@@contentItemNode @TO@ Name:replaceNode @AT@ 5627 @LENGTH@ 15
---------------INS MethodInvocation@@replaceNode.get(CONTENT).get(0) @TO@ MethodInvocation@@MethodName:resolveModelAttribute:[context, contentItemNode] @AT@ 5643 @LENGTH@ 31
------------------MOV SimpleName@@contentItemNode @TO@ MethodInvocation@@replaceNode.get(CONTENT).get(0) @AT@ 5627 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:get:[CONTENT] @TO@ MethodInvocation@@replaceNode.get(CONTENT).get(0) @AT@ 5643 @LENGTH@ 24
---------------------INS SimpleName@@CONTENT @TO@ MethodInvocation@@MethodName:get:[CONTENT] @AT@ 5659 @LENGTH@ 7
------------------INS SimpleName@@MethodName:get:[0] @TO@ MethodInvocation@@replaceNode.get(CONTENT).get(0) @AT@ 5668 @LENGTH@ 6
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:get:[0] @AT@ 5672 @LENGTH@ 1


UPD FieldDeclaration@@private, int, [portTraceOff=8081] @TO@ private, int, [portTraceOff=getNextPort()] @AT@ 1153 @LENGTH@ 32
---UPD VariableDeclarationFragment@@portTraceOff=8081 @TO@ portTraceOff=getNextPort() @AT@ 1165 @LENGTH@ 19
------INS MethodInvocation@@MethodName:getNextPort:[] @TO@ VariableDeclarationFragment@@portTraceOff=8081 @AT@ 1168 @LENGTH@ 13
------DEL NumberLiteral@@8081 @AT@ 1180 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @TO@ TypeDeclaration@@[private, final]StubHttpClientResponse, AbstractClientHttpResponse @AT@ 4397 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @AT@ 4397 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @AT@ 4404 @LENGTH@ 4
---INS SimpleName@@MethodName:setStatus @TO@ MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @AT@ 4409 @LENGTH@ 9
---INS SingleVariableDeclaration@@HttpStatus status @TO@ MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @AT@ 4419 @LENGTH@ 17
------INS SimpleType@@HttpStatus @TO@ SingleVariableDeclaration@@HttpStatus status @AT@ 4419 @LENGTH@ 10
------INS SimpleName@@status @TO@ SingleVariableDeclaration@@HttpStatus status @AT@ 4430 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:this.status=status @TO@ MethodDeclaration@@public, void, MethodName:setStatus, HttpStatus status,  @AT@ 4443 @LENGTH@ 21
------INS Assignment@@this.status=status @TO@ ExpressionStatement@@Assignment:this.status=status @AT@ 4443 @LENGTH@ 20
---------INS FieldAccess@@this.status @TO@ Assignment@@this.status=status @AT@ 4443 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.status @AT@ 4443 @LENGTH@ 4
------------INS SimpleName@@status @TO@ FieldAccess@@this.status @AT@ 4448 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@this.status=status @AT@ 4454 @LENGTH@ 1
---------INS SimpleName@@status @TO@ Assignment@@this.status=status @AT@ 4457 @LENGTH@ 6


UPD VariableDeclarationStatement@@byte[] body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF}; @TO@ byte[] body="\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")); @AT@ 3986 @LENGTH@ 124
---UPD VariableDeclarationFragment@@body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @TO@ body="\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 3993 @LENGTH@ 116
------DEL ArrayInitializer@@{(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @AT@ 4000 @LENGTH@ 109
---------DEL CastExpression@@(byte)0xFF @AT@ 4014 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 4015 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 4020 @LENGTH@ 4
---------DEL CharacterLiteral@@'A' @AT@ 4026 @LENGTH@ 3
---------DEL CharacterLiteral@@'B' @AT@ 4031 @LENGTH@ 3
---------DEL CastExpression@@(byte)0x00 @AT@ 4036 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 4037 @LENGTH@ 4
------------DEL NumberLiteral@@0x00 @AT@ 4042 @LENGTH@ 4
---------DEL CastExpression@@(byte)0xFF @AT@ 4060 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 4061 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 4066 @LENGTH@ 4
---------DEL CastExpression@@(byte)0x7F @AT@ 4072 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 4073 @LENGTH@ 4
------------DEL NumberLiteral@@0x7F @AT@ 4078 @LENGTH@ 4
---------DEL CharacterLiteral@@'C' @AT@ 4084 @LENGTH@ 3
---------DEL CastExpression@@(byte)0xFF @AT@ 4089 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 4090 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 4095 @LENGTH@ 4
------INS MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @TO@ VariableDeclarationFragment@@body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @AT@ 4000 @LENGTH@ 69
---------INS StringLiteral@@"\u02C7AB\u0000\u02C7\u007F\u02C7" @TO@ MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 4000 @LENGTH@ 34
---------INS SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @TO@ MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 4035 @LENGTH@ 34
------------INS MethodInvocation@@Charset.forName("UTF-8") @TO@ SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @AT@ 4044 @LENGTH@ 24
---------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName("UTF-8") @AT@ 4044 @LENGTH@ 7
---------------INS SimpleName@@MethodName:forName:["UTF-8"] @TO@ MethodInvocation@@Charset.forName("UTF-8") @AT@ 4052 @LENGTH@ 16
------------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:forName:["UTF-8"] @AT@ 4060 @LENGTH@ 7


UPD IfStatement@@if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} @TO@ if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} else {  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 6483 @LENGTH@ 492
---INS Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @TO@ IfStatement@@if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} @AT@ 7063 @LENGTH@ 446
------INS VariableDeclarationStatement@@String value=key; @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7089 @LENGTH@ 19
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=key; @AT@ 7089 @LENGTH@ 6
---------INS VariableDeclarationFragment@@value=key @TO@ VariableDeclarationStatement@@String value=key; @AT@ 7096 @LENGTH@ 11
------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=key @AT@ 7096 @LENGTH@ 5
------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@value=key @AT@ 7104 @LENGTH@ 3
------INS VariableDeclarationStatement@@BundleContext context=getBundleContext(); @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7133 @LENGTH@ 43
---------INS SimpleType@@BundleContext @TO@ VariableDeclarationStatement@@BundleContext context=getBundleContext(); @AT@ 7133 @LENGTH@ 13
---------INS VariableDeclarationFragment@@context=getBundleContext() @TO@ VariableDeclarationStatement@@BundleContext context=getBundleContext(); @AT@ 7147 @LENGTH@ 28
------------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=getBundleContext() @AT@ 7147 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:getBundleContext:[] @TO@ VariableDeclarationFragment@@context=getBundleContext() @AT@ 7157 @LENGTH@ 18
------INS IfStatement@@if (context != null) {  value=context.getProperty(key);} @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7201 @LENGTH@ 110
---------INS InfixExpression@@context != null @TO@ IfStatement@@if (context != null) {  value=context.getProperty(key);} @AT@ 7205 @LENGTH@ 15
------------INS SimpleName@@context @TO@ InfixExpression@@context != null @AT@ 7205 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@context != null @AT@ 7212 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context != null @AT@ 7216 @LENGTH@ 4
---------INS Block@@ThenBody:{  value=context.getProperty(key);} @TO@ IfStatement@@if (context != null) {  value=context.getProperty(key);} @AT@ 7222 @LENGTH@ 89
------------INS ExpressionStatement@@Assignment:value=context.getProperty(key) @TO@ Block@@ThenBody:{  value=context.getProperty(key);} @AT@ 7252 @LENGTH@ 33
---------------INS Assignment@@value=context.getProperty(key) @TO@ ExpressionStatement@@Assignment:value=context.getProperty(key) @AT@ 7252 @LENGTH@ 32
------------------INS SimpleName@@value @TO@ Assignment@@value=context.getProperty(key) @AT@ 7252 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=context.getProperty(key) @AT@ 7257 @LENGTH@ 1
------------------INS MethodInvocation@@context.getProperty(key) @TO@ Assignment@@value=context.getProperty(key) @AT@ 7260 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getProperty(key) @AT@ 7260 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getProperty:[key] @TO@ MethodInvocation@@context.getProperty(key) @AT@ 7268 @LENGTH@ 16
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getProperty:[key] @AT@ 7280 @LENGTH@ 3
------INS IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7336 @LENGTH@ 113
---------INS InfixExpression@@value == null @TO@ IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @AT@ 7340 @LENGTH@ 13
------------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 7340 @LENGTH@ 5
------------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 7345 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 7349 @LENGTH@ 4
---------INS Block@@ThenBody:{  value=System.getProperty(value,"");} @TO@ IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @AT@ 7355 @LENGTH@ 94
------------INS ExpressionStatement@@Assignment:value=System.getProperty(value,"") @TO@ Block@@ThenBody:{  value=System.getProperty(value,"");} @AT@ 7385 @LENGTH@ 38
---------------INS Assignment@@value=System.getProperty(value,"") @TO@ ExpressionStatement@@Assignment:value=System.getProperty(value,"") @AT@ 7385 @LENGTH@ 37
------------------INS SimpleName@@value @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7385 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7390 @LENGTH@ 1
------------------INS MethodInvocation@@System.getProperty(value,"") @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7393 @LENGTH@ 29
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(value,"") @AT@ 7393 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProperty:[value, ""] @TO@ MethodInvocation@@System.getProperty(value,"") @AT@ 7400 @LENGTH@ 22
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:getProperty:[value, ""] @AT@ 7412 @LENGTH@ 5
------------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:getProperty:[value, ""] @AT@ 7419 @LENGTH@ 2
------INS ReturnStatement@@SimpleName:value @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7474 @LENGTH@ 13
---------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 7481 @LENGTH@ 5


INS IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @TO@ MethodDeclaration@@public, void, MethodName:decodeRequest, ClassLoader loader, Class<?>[] types, DataByteArrayInputStream source, Object[] target, IOException, ClassNotFoundException,  @AT@ 2687 @LENGTH@ 91
---INS InfixExpression@@args != null @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2691 @LENGTH@ 10
------INS SimpleName@@args @TO@ InfixExpression@@args != null @AT@ 2691 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@args != null @AT@ 2695 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@args != null @AT@ 2697 @LENGTH@ 4
---INS Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2704 @LENGTH@ 74
------MOV ExpressionStatement@@MethodInvocation:System.arraycopy(args,0,target,0,args.length) @TO@ Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @AT@ 2687 @LENGTH@ 50


UPD MethodDeclaration@@public, void, MethodName:systemPropertyUpdated, String propertyName, String propertyValue,  @TO@ protected, void, MethodName:systemPropertyUpdated, String propertyName, String propertyValue,  @AT@ 27839 @LENGTH@ 101
---UPD Modifier@@public @TO@ protected @AT@ 27839 @LENGTH@ 6


INS FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @TO@ TypeDeclaration@@[public, final]MongoDbConstants,  @AT@ 2133 @LENGTH@ 65
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @AT@ 2133 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @AT@ 2140 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @AT@ 2147 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @AT@ 2153 @LENGTH@ 6
---INS VariableDeclarationFragment@@WRITERESULT="CamelMongoWriteResult" @TO@ FieldDeclaration@@public, static, final, String, [WRITERESULT="CamelMongoWriteResult"] @AT@ 2160 @LENGTH@ 37
------INS SimpleName@@WRITERESULT @TO@ VariableDeclarationFragment@@WRITERESULT="CamelMongoWriteResult" @AT@ 2160 @LENGTH@ 11
------INS StringLiteral@@"CamelMongoWriteResult" @TO@ VariableDeclarationFragment@@WRITERESULT="CamelMongoWriteResult" @AT@ 2174 @LENGTH@ 23


INS ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @TO@ MethodDeclaration@@public, void, MethodName:testPatch, Exception,  @AT@ 8206 @LENGTH@ 45
---INS MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @TO@ ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @AT@ 8206 @LENGTH@ 44
------INS MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 8206 @LENGTH@ 28
---------INS MethodInvocation@@bundle.getBundleId() @TO@ MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @AT@ 8213 @LENGTH@ 20
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 8213 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBundleId:[] @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 8220 @LENGTH@ 13
------INS SimpleName@@MethodName:andReturn:[123L] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 8235 @LENGTH@ 15
---------INS NumberLiteral@@123L @TO@ SimpleName@@MethodName:andReturn:[123L] @AT@ 8245 @LENGTH@ 4


UPD VariableDeclarationStatement@@byte[] body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF}; @TO@ byte[] body="\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")); @AT@ 10939 @LENGTH@ 124
---UPD VariableDeclarationFragment@@body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @TO@ body="\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 10946 @LENGTH@ 116
------DEL ArrayInitializer@@{(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @AT@ 10953 @LENGTH@ 109
---------DEL CastExpression@@(byte)0xFF @AT@ 10967 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 10968 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 10973 @LENGTH@ 4
---------DEL CharacterLiteral@@'A' @AT@ 10979 @LENGTH@ 3
---------DEL CharacterLiteral@@'B' @AT@ 10984 @LENGTH@ 3
---------DEL CastExpression@@(byte)0x00 @AT@ 10989 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 10990 @LENGTH@ 4
------------DEL NumberLiteral@@0x00 @AT@ 10995 @LENGTH@ 4
---------DEL CastExpression@@(byte)0xFF @AT@ 11013 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 11014 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 11019 @LENGTH@ 4
---------DEL CastExpression@@(byte)0x7F @AT@ 11025 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 11026 @LENGTH@ 4
------------DEL NumberLiteral@@0x7F @AT@ 11031 @LENGTH@ 4
---------DEL CharacterLiteral@@'C' @AT@ 11037 @LENGTH@ 3
---------DEL CastExpression@@(byte)0xFF @AT@ 11042 @LENGTH@ 10
------------DEL PrimitiveType@@byte @AT@ 11043 @LENGTH@ 4
------------DEL NumberLiteral@@0xFF @AT@ 11048 @LENGTH@ 4
------INS MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @TO@ VariableDeclarationFragment@@body={(byte)0xFF,'A','B',(byte)0x00,(byte)0xFF,(byte)0x7F,'C',(byte)0xFF} @AT@ 10953 @LENGTH@ 69
---------INS StringLiteral@@"\u02C7AB\u0000\u02C7\u007F\u02C7" @TO@ MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 10953 @LENGTH@ 34
---------INS SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @TO@ MethodInvocation@@"\u02C7AB\u0000\u02C7\u007F\u02C7".getBytes(Charset.forName("UTF-8")) @AT@ 10988 @LENGTH@ 34
------------INS MethodInvocation@@Charset.forName("UTF-8") @TO@ SimpleName@@MethodName:getBytes:[Charset.forName("UTF-8")] @AT@ 10997 @LENGTH@ 24
---------------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.forName("UTF-8") @AT@ 10997 @LENGTH@ 7
---------------INS SimpleName@@MethodName:forName:["UTF-8"] @TO@ MethodInvocation@@Charset.forName("UTF-8") @AT@ 11005 @LENGTH@ 16
------------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:forName:["UTF-8"] @AT@ 11013 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:log.info("Exchange does not have a retry message.  Set the exception and allow the retry.") @TO@ MethodInvocation:log.info("{} Messages have been processed. Failing the exchange to force a rollback of the transaction.",MAX_ATTEMPTS_COUNT) @AT@ 4175 @LENGTH@ 92
---UPD MethodInvocation@@log.info("Exchange does not have a retry message.  Set the exception and allow the retry.") @TO@ log.info("{} Messages have been processed. Failing the exchange to force a rollback of the transaction.",MAX_ATTEMPTS_COUNT) @AT@ 4175 @LENGTH@ 91
------UPD SimpleName@@MethodName:info:["Exchange does not have a retry message.  Set the exception and allow the retry."] @TO@ MethodName:info:["{} Messages have been processed. Failing the exchange to force a rollback of the transaction.", MAX_ATTEMPTS_COUNT] @AT@ 4179 @LENGTH@ 87
---------UPD StringLiteral@@"Exchange does not have a retry message.  Set the exception and allow the retry." @TO@ "{} Messages have been processed. Failing the exchange to force a rollback of the transaction." @AT@ 4184 @LENGTH@ 81
---------INS SimpleName@@MAX_ATTEMPTS_COUNT @TO@ SimpleName@@MethodName:info:["Exchange does not have a retry message.  Set the exception and allow the retry."] @AT@ 4281 @LENGTH@ 18


UPD IfStatement@@if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 3454 @LENGTH@ 348
---UPD Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 3492 @LENGTH@ 310
------INS ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @TO@ Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @AT@ 3874 @LENGTH@ 45
---------INS MethodInvocation@@exchange.getIn().getHeaders().remove("host") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @AT@ 3874 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3874 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3874 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3874 @LENGTH@ 8
------------INS SimpleName@@MethodName:remove:["host"] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3904 @LENGTH@ 14
---------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:remove:["host"] @AT@ 3911 @LENGTH@ 6


UPD Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @TO@ ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  Operation operation=op.build();  result=ctx.getModelControllerClient().execute(operation);  operation.close();} @AT@ 29441 @LENGTH@ 290
---UPD ExpressionStatement@@Assignment:result=ctx.getModelControllerClient().execute(op.build()) @TO@ Assignment:result=ctx.getModelControllerClient().execute(operation) @AT@ 29657 @LENGTH@ 60
------UPD Assignment@@result=ctx.getModelControllerClient().execute(op.build()) @TO@ result=ctx.getModelControllerClient().execute(operation) @AT@ 29657 @LENGTH@ 59
---------UPD MethodInvocation@@ctx.getModelControllerClient().execute(op.build()) @TO@ ctx.getModelControllerClient().execute(operation) @AT@ 29666 @LENGTH@ 50
------------UPD SimpleName@@MethodName:execute:[op.build()] @TO@ MethodName:execute:[operation] @AT@ 29697 @LENGTH@ 19
---------------DEL MethodInvocation@@op.build() @AT@ 29705 @LENGTH@ 10
------------------DEL SimpleName@@Name:op @AT@ 29705 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:build:[] @AT@ 29708 @LENGTH@ 7
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:execute:[op.build()] @AT@ 29804 @LENGTH@ 9
---INS VariableDeclarationStatement@@Operation operation=op.build(); @TO@ Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @AT@ 29706 @LENGTH@ 33
------INS SimpleType@@Operation @TO@ VariableDeclarationStatement@@Operation operation=op.build(); @AT@ 29706 @LENGTH@ 9
------INS VariableDeclarationFragment@@operation=op.build() @TO@ VariableDeclarationStatement@@Operation operation=op.build(); @AT@ 29716 @LENGTH@ 22
---------INS SimpleName@@operation @TO@ VariableDeclarationFragment@@operation=op.build() @AT@ 29716 @LENGTH@ 9
---------INS MethodInvocation@@op.build() @TO@ VariableDeclarationFragment@@operation=op.build() @AT@ 29728 @LENGTH@ 10
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.build() @AT@ 29728 @LENGTH@ 2
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@op.build() @AT@ 29731 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:operation.close() @TO@ Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @AT@ 29832 @LENGTH@ 18
------INS MethodInvocation@@operation.close() @TO@ ExpressionStatement@@MethodInvocation:operation.close() @AT@ 29832 @LENGTH@ 17
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.close() @AT@ 29832 @LENGTH@ 9
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@operation.close() @AT@ 29842 @LENGTH@ 7


UPD VariableDeclarationStatement@@final Set<ResourceRoot> allResourceRoots=new LinkedHashSet<ResourceRoot>(); @TO@ final List<ResourceRoot> allResourceRoots=new ArrayList<ResourceRoot>(); @AT@ 3726 @LENGTH@ 77
---UPD ParameterizedType@@Set<ResourceRoot> @TO@ List<ResourceRoot> @AT@ 3732 @LENGTH@ 17
------UPD SimpleType@@Set @TO@ List @AT@ 3732 @LENGTH@ 3
---UPD VariableDeclarationFragment@@allResourceRoots=new LinkedHashSet<ResourceRoot>() @TO@ allResourceRoots=new ArrayList<ResourceRoot>() @AT@ 3750 @LENGTH@ 52
------UPD ClassInstanceCreation@@LinkedHashSet<ResourceRoot>[] @TO@ ArrayList<ResourceRoot>[] @AT@ 3769 @LENGTH@ 33
---------UPD ParameterizedType@@LinkedHashSet<ResourceRoot> @TO@ ArrayList<ResourceRoot> @AT@ 3773 @LENGTH@ 27
------------UPD SimpleType@@LinkedHashSet @TO@ ArrayList @AT@ 3773 @LENGTH@ 13


DEL MethodDeclaration@@protected, void, MethodName:onSessionChange, String originalSessionId, HttpSession newSession, Authentication auth,  @AT@ 6746 @LENGTH@ 302
---DEL Modifier@@protected @AT@ 6746 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 6756 @LENGTH@ 4
---DEL SimpleName@@MethodName:onSessionChange @AT@ 6761 @LENGTH@ 15
---DEL SingleVariableDeclaration@@String originalSessionId @AT@ 6777 @LENGTH@ 24
------DEL SimpleType@@String @AT@ 6777 @LENGTH@ 6
------DEL SimpleName@@originalSessionId @AT@ 6784 @LENGTH@ 17
---DEL SingleVariableDeclaration@@HttpSession newSession @AT@ 6803 @LENGTH@ 22
------DEL SimpleType@@HttpSession @AT@ 6803 @LENGTH@ 11
------DEL SimpleName@@newSession @AT@ 6815 @LENGTH@ 10
---DEL SingleVariableDeclaration@@Authentication auth @AT@ 6827 @LENGTH@ 19
------DEL SimpleType@@Authentication @AT@ 6827 @LENGTH@ 14
------DEL SimpleName@@auth @AT@ 6842 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:sessionRegistry.removeSessionInformation(originalSessionId) @AT@ 6897 @LENGTH@ 60
------DEL MethodInvocation@@sessionRegistry.removeSessionInformation(originalSessionId) @AT@ 6897 @LENGTH@ 59
---------DEL SimpleName@@Name:sessionRegistry @AT@ 6897 @LENGTH@ 15
---------DEL SimpleName@@MethodName:removeSessionInformation:[originalSessionId] @AT@ 6913 @LENGTH@ 43
------------DEL SimpleName@@originalSessionId @AT@ 6938 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:sessionRegistry.registerNewSession(newSession.getId(),auth.getPrincipal()) @AT@ 6966 @LENGTH@ 76
------DEL MethodInvocation@@sessionRegistry.registerNewSession(newSession.getId(),auth.getPrincipal()) @AT@ 6966 @LENGTH@ 75
---------DEL SimpleName@@Name:sessionRegistry @AT@ 6966 @LENGTH@ 15
---------DEL SimpleName@@MethodName:registerNewSession:[newSession.getId(), auth.getPrincipal()] @AT@ 6982 @LENGTH@ 59
------------DEL MethodInvocation@@newSession.getId() @AT@ 7001 @LENGTH@ 18
---------------DEL SimpleName@@Name:newSession @AT@ 7001 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:getId:[] @AT@ 7012 @LENGTH@ 7
------------DEL MethodInvocation@@auth.getPrincipal() @AT@ 7021 @LENGTH@ 19
---------------DEL SimpleName@@Name:auth @AT@ 7021 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getPrincipal:[] @AT@ 7026 @LENGTH@ 14


UPD Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @TO@ ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  Operation operation=op.build();  result=ctx.getModelControllerClient().execute(operation);  operation.close();} @AT@ 29441 @LENGTH@ 290
---UPD ExpressionStatement@@Assignment:result=ctx.getModelControllerClient().execute(op.build()) @TO@ Assignment:result=ctx.getModelControllerClient().execute(operation) @AT@ 29657 @LENGTH@ 60
------UPD Assignment@@result=ctx.getModelControllerClient().execute(op.build()) @TO@ result=ctx.getModelControllerClient().execute(operation) @AT@ 29657 @LENGTH@ 59
---------UPD MethodInvocation@@ctx.getModelControllerClient().execute(op.build()) @TO@ ctx.getModelControllerClient().execute(operation) @AT@ 29666 @LENGTH@ 50
------------UPD SimpleName@@MethodName:execute:[op.build()] @TO@ MethodName:execute:[operation] @AT@ 29697 @LENGTH@ 19
---------------DEL MethodInvocation@@op.build() @AT@ 29705 @LENGTH@ 10
------------------DEL SimpleName@@Name:op @AT@ 29705 @LENGTH@ 2
------------------DEL SimpleName@@MethodName:build:[] @AT@ 29708 @LENGTH@ 7
---------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:execute:[op.build()] @AT@ 29804 @LENGTH@ 9
---INS VariableDeclarationStatement@@Operation operation=op.build(); @TO@ Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @AT@ 29706 @LENGTH@ 33
------INS SimpleType@@Operation @TO@ VariableDeclarationStatement@@Operation operation=op.build(); @AT@ 29706 @LENGTH@ 9
------INS VariableDeclarationFragment@@operation=op.build() @TO@ VariableDeclarationStatement@@Operation operation=op.build(); @AT@ 29716 @LENGTH@ 22
---------INS SimpleName@@operation @TO@ VariableDeclarationFragment@@operation=op.build() @AT@ 29716 @LENGTH@ 9
---------INS MethodInvocation@@op.build() @TO@ VariableDeclarationFragment@@operation=op.build() @AT@ 29728 @LENGTH@ 10
------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.build() @AT@ 29728 @LENGTH@ 2
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@op.build() @AT@ 29731 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:operation.close() @TO@ Block@@ThenBody:{  OperationBuilder op=new OperationBuilder(request);  op.addFileAsAttachment(f);  request.get(Util.CONTENT).get(0).get(Util.INPUT_STREAM_INDEX).set(0);  result=ctx.getModelControllerClient().execute(op.build());} @AT@ 29832 @LENGTH@ 18
------INS MethodInvocation@@operation.close() @TO@ ExpressionStatement@@MethodInvocation:operation.close() @AT@ 29832 @LENGTH@ 17
---------INS SimpleName@@Name:operation @TO@ MethodInvocation@@operation.close() @AT@ 29832 @LENGTH@ 9
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@operation.close() @AT@ 29842 @LENGTH@ 7


INS TryStatement@@try {  if (!endpoint.isDisableReplyTo() && exchange.getPattern().isOutCapable()) {    return processInOut(exchange,callback);  } else {    return processInOnly(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:process, Exchange exchange, AsyncCallback callback,  @AT@ 5193 @LENGTH@ 608
---MOV IfStatement@@if (!endpoint.isDisableReplyTo() && exchange.getPattern().isOutCapable()) {  return processInOut(exchange,callback);} else {  return processInOnly(exchange,callback);} @TO@ TryStatement@@try {  if (!endpoint.isDisableReplyTo() && exchange.getPattern().isOutCapable()) {    return processInOut(exchange,callback);  } else {    return processInOnly(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5193 @LENGTH@ 292
---INS CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ TryStatement@@try {  if (!endpoint.isDisableReplyTo() && exchange.getPattern().isOutCapable()) {    return processInOut(exchange,callback);  } else {    return processInOnly(exchange,callback);  }} catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5538 @LENGTH@ 263
------INS SingleVariableDeclaration@@Throwable e @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5545 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable e @AT@ 5545 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Throwable e @AT@ 5555 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:exchange.setException(e) @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5708 @LENGTH@ 25
---------INS MethodInvocation@@exchange.setException(e) @TO@ ExpressionStatement@@MethodInvocation:exchange.setException(e) @AT@ 5708 @LENGTH@ 24
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setException(e) @AT@ 5708 @LENGTH@ 8
------------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@exchange.setException(e) @AT@ 5717 @LENGTH@ 15
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 5730 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5746 @LENGTH@ 20
---------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 5746 @LENGTH@ 19
------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 5746 @LENGTH@ 8
------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 5755 @LENGTH@ 10
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 5760 @LENGTH@ 4
------INS ReturnStatement@@BooleanLiteral:true @TO@ CatchClause@@catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 5779 @LENGTH@ 12
---------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 5786 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:testDefaultCryptVariant, Exception,  @TO@ public, void, MethodName:testDefaultCryptVariant, NoSuchAlgorithmException,  @AT@ 952 @LENGTH@ 264
---UPD SimpleType@@Exception @TO@ NoSuchAlgorithmException @AT@ 997 @LENGTH@ 9


INS FieldDeclaration@@protected, String, [zookeeperPassword] @TO@ TypeDeclaration@@[public, abstract]ContainerCreateSupport, FabricCommand @AT@ 2382 @LENGTH@ 35
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, String, [zookeeperPassword] @AT@ 2382 @LENGTH@ 9
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, String, [zookeeperPassword] @AT@ 2392 @LENGTH@ 6
---INS VariableDeclarationFragment@@zookeeperPassword @TO@ FieldDeclaration@@protected, String, [zookeeperPassword] @AT@ 2399 @LENGTH@ 17
------INS SimpleName@@zookeeperPassword @TO@ VariableDeclarationFragment@@zookeeperPassword @AT@ 2399 @LENGTH@ 17


UPD IfStatement@@if (size >= value) {  return "size";} @TO@ if (size >= value) {  return "size";} else {  return null;} @AT@ 13474 @LENGTH@ 73
---INS Block@@ElseBody:{  return null;} @TO@ IfStatement@@if (size >= value) {  return "size";} @AT@ 13553 @LENGTH@ 93
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ElseBody:{  return null;} @AT@ 13616 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 13623 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:context.startRoute("FromFilePollThirdTimeOkTest") @TO@ MethodDeclaration@@public, void, MethodName:testPollFileAndShouldBeDeletedAtThirdPoll, Exception,  @AT@ 1655 @LENGTH@ 50
---INS MethodInvocation@@context.startRoute("FromFilePollThirdTimeOkTest") @TO@ ExpressionStatement@@MethodInvocation:context.startRoute("FromFilePollThirdTimeOkTest") @AT@ 1655 @LENGTH@ 49
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.startRoute("FromFilePollThirdTimeOkTest") @AT@ 1655 @LENGTH@ 7
------INS SimpleName@@MethodName:startRoute:["FromFilePollThirdTimeOkTest"] @TO@ MethodInvocation@@context.startRoute("FromFilePollThirdTimeOkTest") @AT@ 1663 @LENGTH@ 41
---------INS StringLiteral@@"FromFilePollThirdTimeOkTest" @TO@ SimpleName@@MethodName:startRoute:["FromFilePollThirdTimeOkTest"] @AT@ 1674 @LENGTH@ 29


INS ExpressionStatement@@MethodInvocation:testGetPersistenceUnitRootUrl(info) @TO@ MethodDeclaration@@public, EntityManagerFactory, MethodName:createContainerEntityManagerFactory, PersistenceUnitInfo info, Map map,  @AT@ 3603 @LENGTH@ 36
---INS MethodInvocation@@testGetPersistenceUnitRootUrl(info) @TO@ ExpressionStatement@@MethodInvocation:testGetPersistenceUnitRootUrl(info) @AT@ 3603 @LENGTH@ 35
------INS SimpleName@@MethodName:testGetPersistenceUnitRootUrl:[info] @TO@ MethodInvocation@@testGetPersistenceUnitRootUrl(info) @AT@ 3603 @LENGTH@ 35
---------INS SimpleName@@info @TO@ SimpleName@@MethodName:testGetPersistenceUnitRootUrl:[info] @AT@ 3633 @LENGTH@ 4


INS ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ MethodDeclaration@@public, static, String, MethodName:createURL, Exchange exchange, HttpEndpoint endpoint,  @AT@ 8338 @LENGTH@ 45
---INS Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8338 @LENGTH@ 44
------INS SimpleName@@uri @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8338 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8341 @LENGTH@ 1
------INS MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8344 @LENGTH@ 38
---------INS SimpleName@@Name:UnsafeUriCharactersEncoder @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 8344 @LENGTH@ 26
---------INS SimpleName@@MethodName:encode:[uri] @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 8371 @LENGTH@ 11
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:encode:[uri] @AT@ 8378 @LENGTH@ 3


UPD FieldDeclaration@@public, static, final, int, [INSTALL_EJB_JACC_PROCESSING=0x0405] @TO@ public, static, final, int, [INSTALL_EJB_JACC_PROCESSING=0x1105] @AT@ 25419 @LENGTH@ 77
---UPD VariableDeclarationFragment@@INSTALL_EJB_JACC_PROCESSING=0x0405 @TO@ INSTALL_EJB_JACC_PROCESSING=0x1105 @AT@ 25443 @LENGTH@ 52
------UPD NumberLiteral@@0x0405 @TO@ 0x1105 @AT@ 25489 @LENGTH@ 6


INS ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ MethodDeclaration@@public, static, String, MethodName:createURL, Exchange exchange, HttpEndpoint endpoint,  @AT@ 8347 @LENGTH@ 45
---INS Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @TO@ ExpressionStatement@@Assignment:uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8347 @LENGTH@ 44
------INS SimpleName@@uri @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8347 @LENGTH@ 3
------INS Operator@@= @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8350 @LENGTH@ 1
------INS MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @TO@ Assignment@@uri=UnsafeUriCharactersEncoder.encode(uri) @AT@ 8353 @LENGTH@ 38
---------INS SimpleName@@Name:UnsafeUriCharactersEncoder @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 8353 @LENGTH@ 26
---------INS SimpleName@@MethodName:encode:[uri] @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri) @AT@ 8380 @LENGTH@ 11
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:encode:[uri] @AT@ 8387 @LENGTH@ 3


UPD ReturnStatement@@MethodInvocation:pathManager.resolveRelativePathEntry(path,relativeToPath) @TO@ MethodInvocation:pathManager.resolveRelativePathEntry(path,relativeTo) @AT@ 13783 @LENGTH@ 66
---UPD MethodInvocation@@pathManager.resolveRelativePathEntry(path,relativeToPath) @TO@ pathManager.resolveRelativePathEntry(path,relativeTo) @AT@ 13790 @LENGTH@ 58
------UPD SimpleName@@MethodName:resolveRelativePathEntry:[path, relativeToPath] @TO@ MethodName:resolveRelativePathEntry:[path, relativeTo] @AT@ 13802 @LENGTH@ 46
---------UPD SimpleName@@relativeToPath @TO@ relativeTo @AT@ 13833 @LENGTH@ 14


UPD EnhancedForStatement@@for (FileStatus symlink : symlinks) {  BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }} @TO@ for (FileStatus symlink : symlinks) {  BufferedReader reader=null;  try {    reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));    partDesc.setInputFileFormatClass(TextInputFormat.class);    String line;    while ((line=reader.readLine()) != null) {      toAddPathToPart.put(line,partDesc);      pathToAliases.put(line,aliases);    }  }  finally {    org.apache.hadoop.io.IOUtils.closeStream(reader);  }} @AT@ 2711 @LENGTH@ 554
---UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))); @TO@ BufferedReader reader=null; @AT@ 2759 @LENGTH@ 117
------UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ reader=null @AT@ 2774 @LENGTH@ 101
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 2783 @LENGTH@ 4
---INS TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @TO@ EnhancedForStatement@@for (FileStatus symlink : symlinks) {  BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }} @AT@ 2799 @LENGTH@ 613
------INS ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 2817 @LENGTH@ 104
---------INS Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 2817 @LENGTH@ 103
------------MOV ClassInstanceCreation@@BufferedReader[new InputStreamReader(fileSystem.open(symlink.getPath()))] @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 2783 @LENGTH@ 92
------------INS SimpleName@@reader @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 2817 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 2823 @LENGTH@ 1
------MOV ExpressionStatement@@MethodInvocation:partDesc.setInputFileFormatClass(TextInputFormat.class) @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 2888 @LENGTH@ 56
------MOV VariableDeclarationStatement@@String line; @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 2956 @LENGTH@ 12
------MOV WhileStatement@@while ((line=reader.readLine()) != null) {  toAddPathToPart.put(line,partDesc);  pathToAliases.put(line,aliases);} @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 2979 @LENGTH@ 276
------INS Block@@FinallyBody:{  org.apache.hadoop.io.IOUtils.closeStream(reader);} @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  partDesc.setInputFileFormatClass(TextInputFormat.class);  String line;  while ((line=reader.readLine()) != null) {    toAddPathToPart.put(line,partDesc);    pathToAliases.put(line,aliases);  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 3337 @LENGTH@ 75
---------INS ExpressionStatement@@MethodInvocation:org.apache.hadoop.io.IOUtils.closeStream(reader) @TO@ Block@@FinallyBody:{  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 3351 @LENGTH@ 49
------------INS MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @TO@ ExpressionStatement@@MethodInvocation:org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 3351 @LENGTH@ 48
---------------INS QualifiedName@@Name:org.apache.hadoop.io.IOUtils @TO@ MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 3351 @LENGTH@ 28
---------------INS SimpleName@@MethodName:closeStream:[reader] @TO@ MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 3380 @LENGTH@ 19
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:closeStream:[reader] @AT@ 3392 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:foo,  @TO@ public, void, MethodName:doesNotTranslateNonIdPropertiesFor$NeCriteria,  @AT@ 6800 @LENGTH@ 506
---UPD SimpleName@@MethodName:foo @TO@ MethodName:doesNotTranslateNonIdPropertiesFor$NeCriteria @AT@ 6812 @LENGTH@ 3
---INS VariableDeclarationStatement@@ObjectId accidentallyAnObjectId=new ObjectId(); @TO@ MethodDeclaration@@public, void, MethodName:foo,  @AT@ 6817 @LENGTH@ 49
------INS SimpleType@@ObjectId @TO@ VariableDeclarationStatement@@ObjectId accidentallyAnObjectId=new ObjectId(); @AT@ 6817 @LENGTH@ 8
------INS VariableDeclarationFragment@@accidentallyAnObjectId=new ObjectId() @TO@ VariableDeclarationStatement@@ObjectId accidentallyAnObjectId=new ObjectId(); @AT@ 6826 @LENGTH@ 39
---------INS SimpleName@@accidentallyAnObjectId @TO@ VariableDeclarationFragment@@accidentallyAnObjectId=new ObjectId() @AT@ 6826 @LENGTH@ 22
---------INS ClassInstanceCreation@@ObjectId[] @TO@ VariableDeclarationFragment@@accidentallyAnObjectId=new ObjectId() @AT@ 6851 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 6851 @LENGTH@ 3
------------INS SimpleType@@ObjectId @TO@ ClassInstanceCreation@@ObjectId[] @AT@ 6855 @LENGTH@ 8
---UPD VariableDeclarationStatement@@Query query=Query.query(Criteria.where("id").is("id_value").and("publishers").ne("a_string_value")); @TO@ Query query=Query.query(Criteria.where("id").is("id_value").and("publishers").ne(accidentallyAnObjectId.toString())); @AT@ 6823 @LENGTH@ 102
------UPD VariableDeclarationFragment@@query=Query.query(Criteria.where("id").is("id_value").and("publishers").ne("a_string_value")) @TO@ query=Query.query(Criteria.where("id").is("id_value").and("publishers").ne(accidentallyAnObjectId.toString())) @AT@ 6829 @LENGTH@ 95
---------UPD MethodInvocation@@Query.query(Criteria.where("id").is("id_value").and("publishers").ne("a_string_value")) @TO@ Query.query(Criteria.where("id").is("id_value").and("publishers").ne(accidentallyAnObjectId.toString())) @AT@ 6837 @LENGTH@ 87
------------UPD SimpleName@@MethodName:query:[Criteria.where("id").is("id_value").and("publishers").ne("a_string_value")] @TO@ MethodName:query:[Criteria.where("id").is("id_value").and("publishers").ne(accidentallyAnObjectId.toString())] @AT@ 6843 @LENGTH@ 81
---------------UPD MethodInvocation@@Criteria.where("id").is("id_value").and("publishers").ne("a_string_value") @TO@ Criteria.where("id").is("id_value").and("publishers").ne(accidentallyAnObjectId.toString()) @AT@ 6849 @LENGTH@ 74
------------------UPD SimpleName@@MethodName:ne:["a_string_value"] @TO@ MethodName:toString:[] @AT@ 6903 @LENGTH@ 20
------------------INS SimpleName@@MethodName:ne:[accidentallyAnObjectId.toString()] @TO@ MethodInvocation@@Criteria.where("id").is("id_value").and("publishers").ne("a_string_value") @AT@ 6955 @LENGTH@ 37
---------------------INS MethodInvocation@@accidentallyAnObjectId.toString() @TO@ SimpleName@@MethodName:ne:[accidentallyAnObjectId.toString()] @AT@ 6958 @LENGTH@ 33
------------------------MOV SimpleName@@MethodName:ne:["a_string_value"] @TO@ MethodInvocation@@accidentallyAnObjectId.toString() @AT@ 6903 @LENGTH@ 20
---------------------------DEL StringLiteral@@"a_string_value" @AT@ 6906 @LENGTH@ 16
------------------------INS SimpleName@@Name:accidentallyAnObjectId @TO@ MethodInvocation@@accidentallyAnObjectId.toString() @AT@ 6958 @LENGTH@ 22
---UPD ExpressionStatement@@MethodInvocation:assertThat(dbObject.get("publishers"),isA((Class)DBObject.class)) @TO@ MethodInvocation:assertThat(dbObject.get("publishers"),is(instanceOf(DBObject.class))) @AT@ 7046 @LENGTH@ 68
------UPD MethodInvocation@@assertThat(dbObject.get("publishers"),isA((Class)DBObject.class)) @TO@ assertThat(dbObject.get("publishers"),is(instanceOf(DBObject.class))) @AT@ 7046 @LENGTH@ 67
---------UPD SimpleName@@MethodName:assertThat:[dbObject.get("publishers"), isA((Class)DBObject.class)] @TO@ MethodName:assertThat:[dbObject.get("publishers"), is(instanceOf(DBObject.class))] @AT@ 7046 @LENGTH@ 67
------------UPD MethodInvocation@@isA((Class)DBObject.class) @TO@ instanceOf(DBObject.class) @AT@ 7085 @LENGTH@ 27
------------INS MethodInvocation@@is(instanceOf(DBObject.class)) @TO@ SimpleName@@MethodName:assertThat:[dbObject.get("publishers"), isA((Class)DBObject.class)] @AT@ 7154 @LENGTH@ 30
---------------INS SimpleName@@MethodName:is:[instanceOf(DBObject.class)] @TO@ MethodInvocation@@is(instanceOf(DBObject.class)) @AT@ 7154 @LENGTH@ 30
------------------MOV MethodInvocation@@isA((Class)DBObject.class) @TO@ SimpleName@@MethodName:is:[instanceOf(DBObject.class)] @AT@ 7085 @LENGTH@ 27
---------------------UPD SimpleName@@MethodName:isA:[(Class)DBObject.class] @TO@ MethodName:instanceOf:[DBObject.class] @AT@ 7085 @LENGTH@ 27
------------------------DEL CastExpression@@(Class)DBObject.class @AT@ 7089 @LENGTH@ 22
---------------------------DEL SimpleType@@Class @AT@ 7090 @LENGTH@ 5
---------------------------DEL TypeLiteral@@DBObject.class @AT@ 7097 @LENGTH@ 14
------------------------INS TypeLiteral@@DBObject.class @TO@ SimpleName@@MethodName:isA:[(Class)DBObject.class] @AT@ 7168 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[instanceOf(DBObject.class)] @TO@ MethodInvocation@@is(instanceOf(DBObject.class)) @AT@ 7154 @LENGTH@ 30
------------------MOV MethodInvocation@@isA((Class)DBObject.class) @TO@ SimpleName@@MethodName:is:[instanceOf(DBObject.class)] @AT@ 7085 @LENGTH@ 27
---------------------UPD SimpleName@@MethodName:isA:[(Class)DBObject.class] @TO@ MethodName:instanceOf:[DBObject.class] @AT@ 7085 @LENGTH@ 27
------------------------DEL CastExpression@@(Class)DBObject.class @AT@ 7089 @LENGTH@ 22
---------------------------DEL SimpleType@@Class @AT@ 7090 @LENGTH@ 5
---------------------------DEL TypeLiteral@@DBObject.class @AT@ 7097 @LENGTH@ 14
------------------------INS TypeLiteral@@DBObject.class @TO@ SimpleName@@MethodName:isA:[(Class)DBObject.class] @AT@ 7168 @LENGTH@ 14
---UPD ExpressionStatement@@MethodInvocation:assertThat(publishers.get("$ne"),is((Object)"a_string_value")) @TO@ MethodInvocation:assertThat(publishers.get("$ne"),is(instanceOf(String.class))) @AT@ 7238 @LENGTH@ 65
------UPD MethodInvocation@@assertThat(publishers.get("$ne"),is((Object)"a_string_value")) @TO@ assertThat(publishers.get("$ne"),is(instanceOf(String.class))) @AT@ 7238 @LENGTH@ 64
---------UPD SimpleName@@MethodName:assertThat:[publishers.get("$ne"), is((Object)"a_string_value")] @TO@ MethodName:assertThat:[publishers.get("$ne"), is(instanceOf(String.class))] @AT@ 7238 @LENGTH@ 64
------------UPD MethodInvocation@@is((Object)"a_string_value") @TO@ is(instanceOf(String.class)) @AT@ 7272 @LENGTH@ 29
---------------UPD SimpleName@@MethodName:is:[(Object)"a_string_value"] @TO@ MethodName:is:[instanceOf(String.class)] @AT@ 7272 @LENGTH@ 29
------------------DEL CastExpression@@(Object)"a_string_value" @AT@ 7275 @LENGTH@ 25
---------------------DEL SimpleType@@Object @AT@ 7276 @LENGTH@ 6
---------------------DEL StringLiteral@@"a_string_value" @AT@ 7284 @LENGTH@ 16
------------------INS MethodInvocation@@instanceOf(String.class) @TO@ SimpleName@@MethodName:is:[(Object)"a_string_value"] @AT@ 7347 @LENGTH@ 24
---------------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 7347 @LENGTH@ 24
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 7358 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:instanceOf:[String.class] @TO@ MethodInvocation@@instanceOf(String.class) @AT@ 7347 @LENGTH@ 24
------------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:instanceOf:[String.class] @AT@ 7358 @LENGTH@ 12


DEL MethodDeclaration@@public, void, MethodName:marshallAsAttribute, AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer, XMLStreamException,  @AT@ 4521 @LENGTH@ 189
---DEL Modifier@@public @AT@ 4521 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 4528 @LENGTH@ 4
---DEL SimpleName@@MethodName:marshallAsAttribute @AT@ 4533 @LENGTH@ 19
---DEL SingleVariableDeclaration@@AttributeDefinition attribute @AT@ 4553 @LENGTH@ 29
------DEL SimpleType@@AttributeDefinition @AT@ 4553 @LENGTH@ 19
------DEL SimpleName@@attribute @AT@ 4573 @LENGTH@ 9
---DEL SingleVariableDeclaration@@ModelNode resourceModel @AT@ 4584 @LENGTH@ 23
------DEL SimpleType@@ModelNode @AT@ 4584 @LENGTH@ 9
------DEL SimpleName@@resourceModel @AT@ 4594 @LENGTH@ 13
---DEL SingleVariableDeclaration@@boolean marshallDefault @AT@ 4609 @LENGTH@ 23
------DEL PrimitiveType@@boolean @AT@ 4609 @LENGTH@ 7
------DEL SimpleName@@marshallDefault @AT@ 4617 @LENGTH@ 15
---DEL SingleVariableDeclaration@@XMLStreamWriter writer @AT@ 4634 @LENGTH@ 22
------DEL SimpleType@@XMLStreamWriter @AT@ 4634 @LENGTH@ 15
------DEL SimpleName@@writer @AT@ 4650 @LENGTH@ 6
---DEL SimpleType@@XMLStreamException @AT@ 4665 @LENGTH@ 18


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @TO@ TypeDeclaration@@[public]LoadPropertiesException, CamelException @AT@ 1038 @LENGTH@ 66
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @AT@ 1038 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @AT@ 1046 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @AT@ 1053 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @AT@ 1059 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=3684303677685065529L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=3684303677685065529L] @AT@ 1064 @LENGTH@ 39
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=3684303677685065529L @AT@ 1064 @LENGTH@ 16
------INS NumberLiteral@@3684303677685065529L @TO@ VariableDeclarationFragment@@serialVersionUID=3684303677685065529L @AT@ 1083 @LENGTH@ 20


MOV ExpressionStatement@@MethodInvocation:context.getRouteDefinitions().get(0).adviceWith(context,new AdviceWithRouteBuilder(){
  @Override public void configure() throws Exception {
    onException(AssertionError.class).to("log:error","mock:error");
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:testTransactionSuccess, Exception,  @AT@ 2703 @LENGTH@ 271


INS IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @TO@ MethodDeclaration@@public, static, void, MethodName:createRootRegistry, final ManagementResourceRegistration root, final HostControllerEnvironment environment, final IgnoredDomainResourceRegistry ignoredDomainResourceRegistry, final HostModelRegistrar hostModelRegistrar, ProcessType processType,  @AT@ 4684 @LENGTH@ 247
---INS InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @TO@ IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4688 @LENGTH@ 102
------INS MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4688 @LENGTH@ 96
---------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @AT@ 4688 @LENGTH@ 4
---------INS SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @TO@ MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @AT@ 4693 @LENGTH@ 91
------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @AT@ 4711 @LENGTH@ 25
---------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 4711 @LENGTH@ 11
---------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 4723 @LENGTH@ 13
------------INS MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @TO@ SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @AT@ 4738 @LENGTH@ 45
---------------INS QualifiedName@@Name:ValidateOperationHandler.DEFINITION @TO@ MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @AT@ 4738 @LENGTH@ 35
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @AT@ 4774 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4784 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4786 @LENGTH@ 4
---INS Block@@ThenBody:{  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @TO@ IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4791 @LENGTH@ 140
------INS ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @TO@ Block@@ThenBody:{  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4819 @LENGTH@ 102
---------INS MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4819 @LENGTH@ 101
------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4819 @LENGTH@ 4
------------INS SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @TO@ MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4824 @LENGTH@ 96
---------------INS QualifiedName@@ValidateOperationHandler.DEFINITION @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @AT@ 4849 @LENGTH@ 35
------------------INS SimpleName@@ValidateOperationHandler @TO@ QualifiedName@@ValidateOperationHandler.DEFINITION @AT@ 4849 @LENGTH@ 24
------------------INS SimpleName@@DEFINITION @TO@ QualifiedName@@ValidateOperationHandler.DEFINITION @AT@ 4874 @LENGTH@ 10
---------------INS QualifiedName@@ValidateOperationHandler.INSTANCE @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @AT@ 4886 @LENGTH@ 33
------------------INS SimpleName@@ValidateOperationHandler @TO@ QualifiedName@@ValidateOperationHandler.INSTANCE @AT@ 4886 @LENGTH@ 24
------------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@ValidateOperationHandler.INSTANCE @AT@ 4911 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:enterState('\\',EscapeCharacterState.INSTANCE) @TO@ MethodInvocation:setIgnoreWhitespaces(true) @AT@ 2703 @LENGTH@ 48
---UPD MethodInvocation@@enterState('\\',EscapeCharacterState.INSTANCE) @TO@ setIgnoreWhitespaces(true) @AT@ 2703 @LENGTH@ 47
------UPD SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @TO@ MethodName:setIgnoreWhitespaces:[true] @AT@ 2703 @LENGTH@ 47
---------DEL CharacterLiteral@@'\\' @AT@ 2714 @LENGTH@ 4
---------DEL QualifiedName@@EscapeCharacterState.INSTANCE @AT@ 2720 @LENGTH@ 29
------------DEL SimpleName@@EscapeCharacterState @AT@ 2720 @LENGTH@ 20
------------DEL SimpleName@@INSTANCE @AT@ 2741 @LENGTH@ 8
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @AT@ 2724 @LENGTH@ 4


INS VariableDeclarationStatement@@String reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class); @TO@ MethodDeclaration@@public, void, MethodName:testProxy, Exception,  @AT@ 1664 @LENGTH@ 111
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class); @AT@ 1664 @LENGTH@ 6
---INS VariableDeclarationFragment@@reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @TO@ VariableDeclarationStatement@@String reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class); @AT@ 1671 @LENGTH@ 103
------INS SimpleName@@reply2 @TO@ VariableDeclarationFragment@@reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @AT@ 1671 @LENGTH@ 6
------INS MethodInvocation@@template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @TO@ VariableDeclarationFragment@@reply2=template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @AT@ 1680 @LENGTH@ 94
---------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @AT@ 1680 @LENGTH@ 8
---------INS SimpleName@@MethodName:requestBody:["jetty:http://0.0.0.0:" + port1 + "/foo /bar baz", "Camel", String.class] @TO@ MethodInvocation@@template.requestBody("jetty:http://0.0.0.0:" + port1 + "/foo /bar baz","Camel",String.class) @AT@ 1689 @LENGTH@ 85
------------INS InfixExpression@@"jetty:http://0.0.0.0:" + port1 + "/foo /bar baz" @TO@ SimpleName@@MethodName:requestBody:["jetty:http://0.0.0.0:" + port1 + "/foo /bar baz", "Camel", String.class] @AT@ 1701 @LENGTH@ 49
---------------INS StringLiteral@@"jetty:http://0.0.0.0:" @TO@ InfixExpression@@"jetty:http://0.0.0.0:" + port1 + "/foo /bar baz" @AT@ 1701 @LENGTH@ 23
---------------INS Operator@@+ @TO@ InfixExpression@@"jetty:http://0.0.0.0:" + port1 + "/foo /bar baz" @AT@ 1724 @LENGTH@ 1
---------------INS SimpleName@@port1 @TO@ InfixExpression@@"jetty:http://0.0.0.0:" + port1 + "/foo /bar baz" @AT@ 1727 @LENGTH@ 5
---------------INS StringLiteral@@"/foo /bar baz" @TO@ InfixExpression@@"jetty:http://0.0.0.0:" + port1 + "/foo /bar baz" @AT@ 1735 @LENGTH@ 15
------------INS StringLiteral@@"Camel" @TO@ SimpleName@@MethodName:requestBody:["jetty:http://0.0.0.0:" + port1 + "/foo /bar baz", "Camel", String.class] @AT@ 1752 @LENGTH@ 7
------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:requestBody:["jetty:http://0.0.0.0:" + port1 + "/foo /bar baz", "Camel", String.class] @AT@ 1761 @LENGTH@ 12


INS MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @TO@ TypeDeclaration@@[public]ZooKeeperConfigAdminBridge, [NodeEventsListener<String>, LifecycleListener] @AT@ 7895 @LENGTH@ 233
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7895 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7903 @LENGTH@ 6
---INS SimpleType@@BundleContext @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7910 @LENGTH@ 13
---INS SimpleName@@MethodName:getBundleContext @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7924 @LENGTH@ 16
---INS TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @TO@ MethodDeclaration@@private, static, BundleContext, MethodName:getBundleContext,  @AT@ 7953 @LENGTH@ 169
------INS ReturnStatement@@MethodInvocation:FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @TO@ TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @AT@ 7971 @LENGTH@ 84
---------INS MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @TO@ ReturnStatement@@MethodInvocation:FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 76
------------INS MethodInvocation@@MethodName:getBundle:[ZooKeeperConfigAdminBridge.class] @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 57
---------------INS TypeLiteral@@ZooKeeperConfigAdminBridge.class @TO@ MethodInvocation@@MethodName:getBundle:[ZooKeeperConfigAdminBridge.class] @AT@ 8002 @LENGTH@ 32
------------INS SimpleName@@Name:FrameworkUtil @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 7978 @LENGTH@ 13
------------INS SimpleName@@MethodName:getBundleContext:[] @TO@ MethodInvocation@@FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext() @AT@ 8036 @LENGTH@ 18
------INS CatchClause@@catch (Throwable t) {  return null;} @TO@ TryStatement@@try {  return FrameworkUtil.getBundle(ZooKeeperConfigAdminBridge.class).getBundleContext();} catch (Throwable t) {  return null;} @AT@ 8066 @LENGTH@ 56
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  return null;} @AT@ 8073 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 8073 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 8083 @LENGTH@ 1
---------INS ReturnStatement@@NullLiteral:null @TO@ CatchClause@@catch (Throwable t) {  return null;} @AT@ 8100 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 8107 @LENGTH@ 4


UPD VariableDeclarationStatement@@String path=moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot(); @TO@ String path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot(); @AT@ 7613 @LENGTH@ 89
---UPD VariableDeclarationFragment@@path=moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @TO@ path=moduleId.getName().replace('.','/') + '/' + moduleId.getSlot() @AT@ 7620 @LENGTH@ 81
------UPD InfixExpression@@moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @TO@ moduleId.getName().replace('.','/') + '/' + moduleId.getSlot() @AT@ 7627 @LENGTH@ 74
---------INS CharacterLiteral@@'/' @TO@ InfixExpression@@moduleId.getName().replace('.','/') + File.separator + moduleId.getSlot() @AT@ 7644 @LENGTH@ 3
---------DEL QualifiedName@@File.separator @AT@ 7666 @LENGTH@ 14
------------DEL SimpleName@@File @AT@ 7666 @LENGTH@ 4
------------DEL SimpleName@@separator @AT@ 7671 @LENGTH@ 9


INS IfStatement@@if (null != entityManagerFactory) {  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @TO@ MethodDeclaration@@protected, void, MethodName:extendInterceptors, List<Object> interceptors,  @AT@ 885 @LENGTH@ 222
---INS InfixExpression@@null != entityManagerFactory @TO@ IfStatement@@if (null != entityManagerFactory) {  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @AT@ 889 @LENGTH@ 28
------INS NullLiteral@@null @TO@ InfixExpression@@null != entityManagerFactory @AT@ 889 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@null != entityManagerFactory @AT@ 893 @LENGTH@ 2
------INS SimpleName@@entityManagerFactory @TO@ InfixExpression@@null != entityManagerFactory @AT@ 897 @LENGTH@ 20
---INS Block@@ThenBody:{  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @TO@ IfStatement@@if (null != entityManagerFactory) {  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @AT@ 919 @LENGTH@ 188
------MOV VariableDeclarationStatement@@OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor(); @TO@ Block@@ThenBody:{  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @AT@ 904 @LENGTH@ 84
------MOV ExpressionStatement@@MethodInvocation:omivi.setEntityManagerFactory(entityManagerFactory) @TO@ Block@@ThenBody:{  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @AT@ 993 @LENGTH@ 52
------MOV ExpressionStatement@@MethodInvocation:interceptors.add(omivi) @TO@ Block@@ThenBody:{  OpenEntityManagerInViewInterceptor omivi=new OpenEntityManagerInViewInterceptor();  omivi.setEntityManagerFactory(entityManagerFactory);  interceptors.add(omivi);} @AT@ 1050 @LENGTH@ 24


UPD VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Dictionary<String,String> props=new Hashtable<String,String>(); @AT@ 3418 @LENGTH@ 36
---DEL SimpleType@@Properties @AT@ 3418 @LENGTH@ 10
---UPD VariableDeclarationFragment@@props=new Properties() @TO@ props=new Hashtable<String,String>() @AT@ 3429 @LENGTH@ 24
------UPD ClassInstanceCreation@@Properties[] @TO@ Hashtable<String,String>[] @AT@ 3437 @LENGTH@ 16
---------DEL SimpleType@@Properties @AT@ 3441 @LENGTH@ 10
---------INS ParameterizedType@@Hashtable<String,String> @TO@ ClassInstanceCreation@@Properties[] @AT@ 3488 @LENGTH@ 25
------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 3488 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 3498 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 3506 @LENGTH@ 6
---INS ParameterizedType@@Dictionary<String,String> @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 3449 @LENGTH@ 26
------INS SimpleType@@Dictionary @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 3449 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 3460 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 3468 @LENGTH@ 6


UPD VariableDeclarationStatement@@long timeout=System.currentTimeMillis() + 5000; @TO@ long timeout=System.currentTimeMillis() + 10000; @AT@ 5777 @LENGTH@ 49
---UPD VariableDeclarationFragment@@timeout=System.currentTimeMillis() + 5000 @TO@ timeout=System.currentTimeMillis() + 10000 @AT@ 5782 @LENGTH@ 43
------UPD InfixExpression@@System.currentTimeMillis() + 5000 @TO@ System.currentTimeMillis() + 10000 @AT@ 5792 @LENGTH@ 33
---------UPD NumberLiteral@@5000 @TO@ 10000 @AT@ 5821 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:Thread.sleep(290) @AT@ 1344 @LENGTH@ 18
---DEL MethodInvocation@@Thread.sleep(290) @AT@ 1344 @LENGTH@ 17
------DEL SimpleName@@Name:Thread @AT@ 1344 @LENGTH@ 6
------DEL SimpleName@@MethodName:sleep:[290] @AT@ 1351 @LENGTH@ 10
---------DEL NumberLiteral@@290 @AT@ 1357 @LENGTH@ 3


DEL VariableDeclarationStatement@@Criteria criteria=from(part.getType(),property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator); @AT@ 4527 @LENGTH@ 187
---DEL SimpleType@@Criteria @AT@ 4527 @LENGTH@ 8
---DEL VariableDeclarationFragment@@criteria=from(part.getType(),property,where(path.toDotPath(MongoPersistentProperty.PropertyToFieldNameConverter.INSTANCE)),(PotentiallyConvertingIterator)iterator) @AT@ 4536 @LENGTH@ 177
------DEL SimpleName@@criteria @AT@ 4536 @LENGTH@ 8


UPD FieldDeclaration@@private, static, final, String, [RESOURCE_NAME=HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions"] @TO@ private, static, final, String, [RESOURCE_NAME=HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions"] @AT@ 1963 @LENGTH@ 121
---UPD VariableDeclarationFragment@@RESOURCE_NAME=HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ RESOURCE_NAME=HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 1991 @LENGTH@ 92
------UPD InfixExpression@@HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 2007 @LENGTH@ 76
---------UPD MethodInvocation@@HostDescriptionProviders.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 2007 @LENGTH@ 53
------------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2007 @LENGTH@ 30


UPD IfStatement@@if (line.startsWith(HASH_INCLUDE)) {  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {    System.err.println("Warining: malformed import statement: " + rawLine);  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} else {  String[] parts=line.split("\\s+");  if (parts.length != 4) {    System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine);  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @TO@ if (line.startsWith(HASH_INCLUDE)) {  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} else {  String[] parts=line.split("\\s+");  if (parts.length != 4) {  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @AT@ 12848 @LENGTH@ 2328
---UPD Block@@ThenBody:{  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {    System.err.println("Warining: malformed import statement: " + rawLine);  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} @TO@ ThenBody:{  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} @AT@ 12883 @LENGTH@ 460
------UPD IfStatement@@if (incl.contains(" ")) {  System.err.println("Warining: malformed import statement: " + rawLine);} else {  lines.addAll(parseRules(createScanner(incl),location + "->" + incl));} @TO@ if (incl.contains(" ")) {} else {  lines.addAll(parseRules(createScanner(incl),location + "->" + incl));} @AT@ 13038 @LENGTH@ 283
---------UPD Block@@ThenBody:{  System.err.println("Warining: malformed import statement: " + rawLine);} @TO@ ThenBody:{} @AT@ 13062 @LENGTH@ 127
------------DEL ExpressionStatement@@MethodInvocation:System.err.println("Warining: malformed import statement: " + rawLine) @AT@ 13092 @LENGTH@ 71
---------------DEL MethodInvocation@@System.err.println("Warining: malformed import statement: " + rawLine) @AT@ 13092 @LENGTH@ 70
------------------DEL QualifiedName@@Name:System.err @AT@ 13092 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:println:["Warining: malformed import statement: " + rawLine] @AT@ 13103 @LENGTH@ 59
---------------------DEL InfixExpression@@"Warining: malformed import statement: " + rawLine @AT@ 13111 @LENGTH@ 50
------------------------DEL StringLiteral@@"Warining: malformed import statement: " @AT@ 13111 @LENGTH@ 40
------------------------DEL Operator@@+ @AT@ 13151 @LENGTH@ 1
------------------------DEL SimpleName@@rawLine @AT@ 13154 @LENGTH@ 7
---UPD Block@@ElseBody:{  String[] parts=line.split("\\s+");  if (parts.length != 4) {    System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine);  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @TO@ ElseBody:{  String[] parts=line.split("\\s+");  if (parts.length != 4) {  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @AT@ 13349 @LENGTH@ 1827
------UPD IfStatement@@if (parts.length != 4) {  System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine);} else {  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line " + currentLine,e);  }} @TO@ if (parts.length != 4) {} else {  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line " + currentLine,e);  }} @AT@ 13468 @LENGTH@ 1686
---------UPD Block@@ThenBody:{  System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine);} @TO@ ThenBody:{} @AT@ 13491 @LENGTH@ 162
------------DEL ExpressionStatement@@MethodInvocation:System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine) @AT@ 13521 @LENGTH@ 106
---------------DEL MethodInvocation@@System.err.println("Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine) @AT@ 13521 @LENGTH@ 105
------------------DEL QualifiedName@@Name:System.err @AT@ 13521 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:println:["Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine] @AT@ 13532 @LENGTH@ 94
---------------------DEL InfixExpression@@"Warning: malformed rule statement split into " + parts.length + " parts: "+ rawLine @AT@ 13540 @LENGTH@ 85
------------------------DEL StringLiteral@@"Warning: malformed rule statement split into " @AT@ 13540 @LENGTH@ 47
------------------------DEL Operator@@+ @AT@ 13587 @LENGTH@ 1
------------------------DEL QualifiedName@@parts.length @AT@ 13590 @LENGTH@ 12
---------------------------DEL SimpleName@@parts @AT@ 13590 @LENGTH@ 5
---------------------------DEL SimpleName@@length @AT@ 13596 @LENGTH@ 6
------------------------DEL StringLiteral@@" parts: " @AT@ 13605 @LENGTH@ 10
------------------------DEL SimpleName@@rawLine @AT@ 13618 @LENGTH@ 7


INS FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @TO@ TypeDeclaration@@[public, final]EscapeCharacterState, BaseParsingState @AT@ 1216 @LENGTH@ 52
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1216 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1223 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1230 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1236 @LENGTH@ 6
---INS VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @TO@ FieldDeclaration@@public, static, final, String, [ID="ESCAPED_CHARACTER"] @AT@ 1243 @LENGTH@ 24
------INS SimpleName@@ID @TO@ VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @AT@ 1243 @LENGTH@ 2
------INS StringLiteral@@"ESCAPED_CHARACTER" @TO@ VariableDeclarationFragment@@ID="ESCAPED_CHARACTER" @AT@ 1248 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
) @AT@ 2086 @LENGTH@ 432
---UPD MethodInvocation@@setDefaultHandler(new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
) @AT@ 2086 @LENGTH@ 431
------UPD SimpleName@@MethodName:setDefaultHandler:[new CharacterHandler(){
  @Override public void handle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override public void doHandle(  ParsingContext ctx) throws CommandFormatException {
    final CharacterHandler handler=enterStateHandlers.getHandler(ctx.getCharacter());
    if (handler == null) {
      ctx.enterState(nodeState);
    }
 else {
      handler.handle(ctx);
    }
  }
}
] @AT@ 2086 @LENGTH@ 431
---------UPD ClassInstanceCreation@@CharacterHandler[] @TO@ LineBreakHandler[false, false] @AT@ 2104 @LENGTH@ 412
------------UPD SimpleType@@CharacterHandler @TO@ LineBreakHandler @AT@ 2108 @LENGTH@ 16
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2175 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@CharacterHandler[] @AT@ 2182 @LENGTH@ 5


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build()] @AT@ 2482 @LENGTH@ 216
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build() @AT@ 2522 @LENGTH@ 175
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE).build() @AT@ 2535 @LENGTH@ 162
---------UPD MethodInvocation@@MethodName:setReplyParameters:[NAMESPACE] @TO@ MethodName:setParameters:[NAMESPACE] @AT@ 2535 @LENGTH@ 141


INS IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE);} @TO@ MethodDeclaration@@public, void, MethodName:registerAttributes, ManagementResourceRegistration registry,  @AT@ 5600 @LENGTH@ 145
---INS SimpleName@@registerRuntimeOnly @TO@ IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE);} @AT@ 5604 @LENGTH@ 19
---INS Block@@ThenBody:{  registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE);} @TO@ IfStatement@@if (registerRuntimeOnly) {  registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE);} @AT@ 5625 @LENGTH@ 120
------MOV ExpressionStatement@@MethodInvocation:registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE) @TO@ Block@@ThenBody:{  registry.registerReadOnlyAttribute(BridgeControlHandler.STARTED,BridgeControlHandler.INSTANCE);} @AT@ 5600 @LENGTH@ 96


UPD ForStatement@@for (int i=0; i < paramVals.length; i++) {  if (Pageable.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=pageSort;    continue;  } else   if (Sort.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=(null != pageSort ? pageSort.getSort() : null);    continue;  }  String queryVal;  if (null == (queryVal=request.getServletRequest().getParameter(paramNames[i]))) {    continue;  }  RepositoryMetadata paramRepoMeta;  if (String.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=queryVal;  } else   if (null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i]))) {    Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());    Object o=paramRepoMeta.repository().findOne(id);    if (null == o) {      return notFoundResponse(request);    }    paramVals[i]=o;  } else   if (conversionService.canConvert(String.class,paramTypes[i])) {    paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);  } else {    try {      paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);    } catch (    IOException e) {      throw new IllegalArgumentException(e);    }  }} @TO@ for (int i=0; i < paramVals.length; i++) {  if (Pageable.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=pageSort;    continue;  } else   if (Sort.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=(null != pageSort ? pageSort.getSort() : null);    continue;  }  String queryVal;  if (null == (queryVal=request.getServletRequest().getParameter(paramNames[i]))) {    continue;  }  if (String.class.isAssignableFrom(paramTypes[i])) {    paramVals[i]=queryVal;  } else   if (hasRepositoryMetadataFor(paramTypes[i])) {    RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]);    Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());    Object o=paramRepoMeta.repository().findOne(id);    if (null == o) {      return notFoundResponse(request);    }    paramVals[i]=o;  } else   if (conversionService.canConvert(String.class,paramTypes[i])) {    paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);  } else {    try {      paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);    } catch (    IOException e) {      throw new IllegalArgumentException(e);    }  }} @AT@ 20746 @LENGTH@ 1798
---DEL VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta; @AT@ 21256 @LENGTH@ 33
------DEL SimpleType@@RepositoryMetadata @AT@ 21256 @LENGTH@ 18
------DEL VariableDeclarationFragment@@paramRepoMeta @AT@ 21275 @LENGTH@ 13
---------DEL SimpleName@@paramRepoMeta @AT@ 21275 @LENGTH@ 13
---UPD IfStatement@@if (String.class.isAssignableFrom(paramTypes[i])) {  paramVals[i]=queryVal;} else if (null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i]))) {  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @TO@ if (String.class.isAssignableFrom(paramTypes[i])) {  paramVals[i]=queryVal;} else if (hasRepositoryMetadataFor(paramTypes[i])) {  RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]);  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @AT@ 21296 @LENGTH@ 1242
------UPD Block@@ElseBody:if (null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i]))) {  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @TO@ ElseBody:if (hasRepositoryMetadataFor(paramTypes[i])) {  RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]);  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @AT@ 21427 @LENGTH@ 1111
---------UPD IfStatement@@if (null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i]))) {  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @TO@ if (hasRepositoryMetadataFor(paramTypes[i])) {  RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]);  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @AT@ 21427 @LENGTH@ 1111
------------INS MethodInvocation@@hasRepositoryMetadataFor(paramTypes[i]) @TO@ IfStatement@@if (null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i]))) {  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} else if (conversionService.canConvert(String.class,paramTypes[i])) {  paramVals[i]=conversionService.convert(queryVal,paramTypes[i]);} else {  try {    paramVals[i]=objectMapper.readValue(queryVal,paramTypes[i]);  } catch (  IOException e) {    throw new IllegalArgumentException(e);  }} @AT@ 21390 @LENGTH@ 39
---------------INS SimpleName@@MethodName:hasRepositoryMetadataFor:[paramTypes[i]] @TO@ MethodInvocation@@hasRepositoryMetadataFor(paramTypes[i]) @AT@ 21390 @LENGTH@ 39
------------------INS ArrayAccess@@paramTypes[i] @TO@ SimpleName@@MethodName:hasRepositoryMetadataFor:[paramTypes[i]] @AT@ 21415 @LENGTH@ 13
---------------------INS SimpleName@@paramTypes @TO@ ArrayAccess@@paramTypes[i] @AT@ 21415 @LENGTH@ 10
---------------------INS SimpleName@@i @TO@ ArrayAccess@@paramTypes[i] @AT@ 21426 @LENGTH@ 1
------------DEL InfixExpression@@null != (paramRepoMeta=repositoryMetadataFor(paramTypes[i])) @AT@ 21430 @LENGTH@ 62
---------------DEL NullLiteral@@null @AT@ 21430 @LENGTH@ 4
---------------DEL Operator@@!= @AT@ 21434 @LENGTH@ 2
---------------DEL ParenthesizedExpression@@(paramRepoMeta=repositoryMetadataFor(paramTypes[i])) @AT@ 21438 @LENGTH@ 54
------------------DEL Assignment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21439 @LENGTH@ 52
---------------------DEL SimpleName@@paramRepoMeta @AT@ 21439 @LENGTH@ 13
---------------------DEL Operator@@= @AT@ 21452 @LENGTH@ 1
------------UPD Block@@ThenBody:{  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} @TO@ ThenBody:{  RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]);  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} @AT@ 21494 @LENGTH@ 563
---------------INS VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @TO@ Block@@ThenBody:{  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} @AT@ 21441 @LENGTH@ 72
------------------INS SimpleType@@RepositoryMetadata @TO@ VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @AT@ 21441 @LENGTH@ 18
------------------INS VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @AT@ 21460 @LENGTH@ 52
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------INS SimpleName@@paramRepoMeta @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21460 @LENGTH@ 13
---------------INS VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @TO@ Block@@ThenBody:{  Serializable id=stringToSerializable(queryVal,(Class<Serializable>)paramRepoMeta.entityMetadata().idAttribute().type());  Object o=paramRepoMeta.repository().findOne(id);  if (null == o) {    return notFoundResponse(request);  }  paramVals[i]=o;} @AT@ 21441 @LENGTH@ 72
------------------INS SimpleType@@RepositoryMetadata @TO@ VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @AT@ 21441 @LENGTH@ 18
------------------INS VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationStatement@@RepositoryMetadata paramRepoMeta=repositoryMetadataFor(paramTypes[i]); @AT@ 21460 @LENGTH@ 52
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------MOV MethodInvocation@@repositoryMetadataFor(paramTypes[i]) @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21455 @LENGTH@ 36
---------------------INS SimpleName@@paramRepoMeta @TO@ VariableDeclarationFragment@@paramRepoMeta=repositoryMetadataFor(paramTypes[i]) @AT@ 21460 @LENGTH@ 13


INS MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[public]HeaderValueState, DefaultParsingState @AT@ 2777 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2777 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2784 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2792 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2819 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2826 @LENGTH@ 4


MOV IfStatement@@if (defaults) {  final DescriptionProvider descriptionProvider=registry.getModelDescription(PathAddress.EMPTY_ADDRESS);  final Locale locale=getLocale(context,operation);  final ModelNode nodeDescription=descriptionProvider.getModelDescription(locale);  if (nodeDescription.isDefined() && nodeDescription.hasDefined(ATTRIBUTES)) {    for (    String key : nodeDescription.get(ATTRIBUTES).keys()) {      if ((!childrenByType.containsKey(key)) && (!directAttributes.containsKey(key) || !directAttributes.get(key).isDefined()) && nodeDescription.get(ATTRIBUTES).hasDefined(key)&& nodeDescription.get(ATTRIBUTES,key).hasDefined(DEFAULT)) {        directAttributes.put(key,nodeDescription.get(ATTRIBUTES,key,DEFAULT));      }    }  }} @TO@ MethodDeclaration@@public, void, MethodName:doExecute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 11418 @LENGTH@ 1119


UPD IfStatement@@if (isQueueing()) {  pipeline.zinterstore(destKey,sets);  return null;} @TO@ if (isPipelined()) {  pipeline.zinterstore(destKey,sets);  return null;} @AT@ 35071 @LENGTH@ 82
---UPD MethodInvocation@@MethodName:isQueueing:[] @TO@ MethodName:isPipelined:[] @AT@ 35075 @LENGTH@ 12


UPD Block@@ThenBody:{  String password=generatePassword();  appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.url = " + password));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} @TO@ ThenBody:{  appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.password = " + options.getZookeeperPassword()));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.ENSEMBLE_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.AGENT_AUTOSTART + "=true"));  appendFile(sb,"etc/system.properties",Arrays.asList(ZooKeeperClusterService.PROFILES_AUTOIMPORT_PATH + "=${karaf.home}/fabric/import/"));} @AT@ 7715 @LENGTH@ 553
---DEL VariableDeclarationStatement@@String password=generatePassword(); @AT@ 7729 @LENGTH@ 37
------DEL SimpleType@@String @AT@ 7729 @LENGTH@ 6
------DEL VariableDeclarationFragment@@password=generatePassword() @AT@ 7736 @LENGTH@ 29
---------DEL SimpleName@@password @AT@ 7736 @LENGTH@ 8
---------DEL MethodInvocation@@MethodName:generatePassword:[] @AT@ 7747 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.url = " + password)) @TO@ MethodInvocation:appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.password = " + options.getZookeeperPassword())) @AT@ 7779 @LENGTH@ 86
------UPD MethodInvocation@@appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.url = " + password)) @TO@ appendFile(sb,"etc/system.properties",Arrays.asList("zookeeper.password = " + options.getZookeeperPassword())) @AT@ 7779 @LENGTH@ 85
---------UPD SimpleName@@MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList("zookeeper.url = " + password)] @TO@ MethodName:appendFile:[sb, "etc/system.properties", Arrays.asList("zookeeper.password = " + options.getZookeeperPassword())] @AT@ 7779 @LENGTH@ 85
------------UPD MethodInvocation@@Arrays.asList("zookeeper.url = " + password) @TO@ Arrays.asList("zookeeper.password = " + options.getZookeeperPassword()) @AT@ 7819 @LENGTH@ 44
---------------UPD SimpleName@@MethodName:asList:["zookeeper.url = " + password] @TO@ MethodName:asList:["zookeeper.password = " + options.getZookeeperPassword()] @AT@ 7826 @LENGTH@ 37
------------------UPD InfixExpression@@"zookeeper.url = " + password @TO@ "zookeeper.password = " + options.getZookeeperPassword() @AT@ 7833 @LENGTH@ 29
---------------------INS MethodInvocation@@options.getZookeeperPassword() @TO@ InfixExpression@@"zookeeper.url = " + password @AT@ 7809 @LENGTH@ 30
------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 7809 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 7817 @LENGTH@ 22
---------------------INS MethodInvocation@@options.getZookeeperPassword() @TO@ InfixExpression@@"zookeeper.url = " + password @AT@ 7809 @LENGTH@ 30
------------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 7809 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@options.getZookeeperPassword() @AT@ 7817 @LENGTH@ 22
---------------------UPD StringLiteral@@"zookeeper.url = " @TO@ "zookeeper.password = " @AT@ 7833 @LENGTH@ 18
---------------------DEL SimpleName@@password @AT@ 7854 @LENGTH@ 8


MOV ExpressionStatement@@MethodInvocation:_events.add(false) @TO@ MethodDeclaration@@public, void, MethodName:end,  @AT@ 6593 @LENGTH@ 19


UPD Block@@ThenBody:{  deploymentResourceRoot.putAttachment(Attachments.INDEX_RESOURCE_ROOT,false);  ModuleRootMarker.mark(deploymentResourceRoot,false);} @TO@ ThenBody:{  deploymentResourceRoot.putAttachment(Attachments.INDEX_RESOURCE_ROOT,false);  deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true));  deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false));  ModuleRootMarker.mark(deploymentResourceRoot,true);} @AT@ 4397 @LENGTH@ 326
---UPD ExpressionStatement@@MethodInvocation:ModuleRootMarker.mark(deploymentResourceRoot,false) @TO@ MethodInvocation:ModuleRootMarker.mark(deploymentResourceRoot,true) @AT@ 4660 @LENGTH@ 53
------UPD MethodInvocation@@ModuleRootMarker.mark(deploymentResourceRoot,false) @TO@ ModuleRootMarker.mark(deploymentResourceRoot,true) @AT@ 4660 @LENGTH@ 52
---------UPD SimpleName@@MethodName:mark:[deploymentResourceRoot, false] @TO@ MethodName:mark:[deploymentResourceRoot, true] @AT@ 4677 @LENGTH@ 35
------------UPD BooleanLiteral@@false @TO@ true @AT@ 4706 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @TO@ Block@@ThenBody:{  deploymentResourceRoot.putAttachment(Attachments.INDEX_RESOURCE_ROOT,false);  ModuleRootMarker.mark(deploymentResourceRoot,false);} @AT@ 4841 @LENGTH@ 109
------INS MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @TO@ ExpressionStatement@@MethodInvocation:deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @AT@ 4841 @LENGTH@ 108
---------INS MethodInvocation@@MethodName:getExportFilters:[] @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @AT@ 4841 @LENGTH@ 41
---------INS SimpleName@@Name:deploymentResourceRoot @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @AT@ 4841 @LENGTH@ 22
---------INS SimpleName@@MethodName:add:[new FilterSpecification(PathFilters.getMetaInfFilter(),true)] @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.getMetaInfFilter(),true)) @AT@ 4883 @LENGTH@ 66
------------INS ClassInstanceCreation@@FilterSpecification[PathFilters.getMetaInfFilter(), true] @TO@ SimpleName@@MethodName:add:[new FilterSpecification(PathFilters.getMetaInfFilter(),true)] @AT@ 4887 @LENGTH@ 61
---------------INS New@@new @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.getMetaInfFilter(), true] @AT@ 4887 @LENGTH@ 3
---------------INS SimpleType@@FilterSpecification @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.getMetaInfFilter(), true] @AT@ 4891 @LENGTH@ 19
---------------INS MethodInvocation@@PathFilters.getMetaInfFilter() @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.getMetaInfFilter(), true] @AT@ 4911 @LENGTH@ 30
------------------INS SimpleName@@Name:PathFilters @TO@ MethodInvocation@@PathFilters.getMetaInfFilter() @AT@ 4911 @LENGTH@ 11
------------------INS SimpleName@@MethodName:getMetaInfFilter:[] @TO@ MethodInvocation@@PathFilters.getMetaInfFilter() @AT@ 4923 @LENGTH@ 18
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.getMetaInfFilter(), true] @AT@ 4943 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @TO@ Block@@ThenBody:{  deploymentResourceRoot.putAttachment(Attachments.INDEX_RESOURCE_ROOT,false);  ModuleRootMarker.mark(deploymentResourceRoot,false);} @AT@ 4963 @LENGTH@ 103
------INS MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @TO@ ExpressionStatement@@MethodInvocation:deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @AT@ 4963 @LENGTH@ 102
---------INS MethodInvocation@@MethodName:getExportFilters:[] @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @AT@ 4963 @LENGTH@ 41
---------INS SimpleName@@Name:deploymentResourceRoot @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @AT@ 4963 @LENGTH@ 22
---------INS SimpleName@@MethodName:add:[new FilterSpecification(PathFilters.acceptAll(),false)] @TO@ MethodInvocation@@deploymentResourceRoot.getExportFilters().add(new FilterSpecification(PathFilters.acceptAll(),false)) @AT@ 5005 @LENGTH@ 60
------------INS ClassInstanceCreation@@FilterSpecification[PathFilters.acceptAll(), false] @TO@ SimpleName@@MethodName:add:[new FilterSpecification(PathFilters.acceptAll(),false)] @AT@ 5009 @LENGTH@ 55
---------------INS New@@new @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.acceptAll(), false] @AT@ 5009 @LENGTH@ 3
---------------INS SimpleType@@FilterSpecification @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.acceptAll(), false] @AT@ 5013 @LENGTH@ 19
---------------INS MethodInvocation@@PathFilters.acceptAll() @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.acceptAll(), false] @AT@ 5033 @LENGTH@ 23
------------------INS SimpleName@@Name:PathFilters @TO@ MethodInvocation@@PathFilters.acceptAll() @AT@ 5033 @LENGTH@ 11
------------------INS SimpleName@@MethodName:acceptAll:[] @TO@ MethodInvocation@@PathFilters.acceptAll() @AT@ 5045 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@FilterSpecification[PathFilters.acceptAll(), false] @AT@ 5058 @LENGTH@ 5


UPD IfStatement@@if (isQueueing()) {  pipeline.zcount(key,min,max);  return null;} @TO@ if (isPipelined()) {  pipeline.zcount(key,min,max);  return null;} @AT@ 33764 @LENGTH@ 77
---UPD MethodInvocation@@MethodName:isQueueing:[] @TO@ MethodName:isPipelined:[] @AT@ 33768 @LENGTH@ 12


DEL MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 656
---DEL Modifier@@public @AT@ 21099 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21106 @LENGTH@ 6
---DEL ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 12
------DEL SimpleType@@List @AT@ 21113 @LENGTH@ 4
------DEL SimpleType@@String @AT@ 21118 @LENGTH@ 6
---DEL SimpleName@@MethodName:getDeployments @AT@ 21126 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 28
------DEL SimpleType@@ModelControllerClient @AT@ 21141 @LENGTH@ 21
------DEL SimpleName@@client @AT@ 21163 @LENGTH@ 6
---DEL SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 18
------DEL SimpleType@@String @AT@ 21171 @LENGTH@ 6
------DEL SimpleName@@serverGroup @AT@ 21178 @LENGTH@ 11
---DEL VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 42
------DEL Modifier@@final @AT@ 21202 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 21208 @LENGTH@ 9
------DEL VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 25
---------DEL SimpleName@@request @AT@ 21218 @LENGTH@ 7
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 15
------------DEL New@@new @AT@ 21228 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 21232 @LENGTH@ 9
---DEL VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 41
------DEL SimpleType@@ModelNode @AT@ 21253 @LENGTH@ 9
------DEL VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 30
---------DEL SimpleName@@address @AT@ 21263 @LENGTH@ 7
---------DEL MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------DEL SimpleName@@Name:request @AT@ 21273 @LENGTH@ 7
------------DEL SimpleName@@MethodName:get:[ADDRESS] @AT@ 21281 @LENGTH@ 12
---------------DEL SimpleName@@ADDRESS @AT@ 21285 @LENGTH@ 7
---DEL IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21303 @LENGTH@ 87
------DEL InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 19
---------DEL SimpleName@@serverGroup @AT@ 21306 @LENGTH@ 11
---------DEL Operator@@!= @AT@ 21317 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 21321 @LENGTH@ 4
------DEL Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------DEL ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 39
------------DEL MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------DEL SimpleName@@Name:address @AT@ 21341 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21349 @LENGTH@ 30
------------------DEL SimpleName@@SERVER_GROUP @AT@ 21353 @LENGTH@ 12
------------------DEL SimpleName@@serverGroup @AT@ 21367 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 48
------DEL MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------DEL MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21399 @LENGTH@ 22
------------DEL SimpleName@@OPERATION @AT@ 21411 @LENGTH@ 9
---------DEL SimpleName@@Name:request @AT@ 21399 @LENGTH@ 7
---------DEL SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21422 @LENGTH@ 24
------------DEL SimpleName@@READ_CHILDREN_NAMES @AT@ 21426 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 40
------DEL MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------DEL MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21456 @LENGTH@ 23
------------DEL SimpleName@@CHILD_TYPE @AT@ 21468 @LENGTH@ 10
---------DEL SimpleName@@Name:request @AT@ 21456 @LENGTH@ 7
---------DEL SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21480 @LENGTH@ 15
------------DEL SimpleName@@DEPLOYMENT @AT@ 21484 @LENGTH@ 10
---DEL TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21505 @LENGTH@ 203
------DEL VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 50
---------DEL Modifier@@final @AT@ 21523 @LENGTH@ 5
---------DEL SimpleType@@ModelNode @AT@ 21529 @LENGTH@ 9
---------DEL VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 33
------------DEL SimpleName@@outcome @AT@ 21539 @LENGTH@ 7
------------DEL MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------DEL SimpleName@@Name:client @AT@ 21549 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:execute:[request] @AT@ 21556 @LENGTH@ 16
------------------DEL SimpleName@@request @AT@ 21564 @LENGTH@ 7
------DEL IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21586 @LENGTH@ 80
---------DEL MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
------------DEL SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21590 @LENGTH@ 18
---------------DEL SimpleName@@outcome @AT@ 21600 @LENGTH@ 7
---------DEL Block@@ThenBody:{  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------DEL ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21628 @LENGTH@ 24
---------------DEL MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:getList:[outcome] @AT@ 21635 @LENGTH@ 16
---------------------DEL SimpleName@@outcome @AT@ 21643 @LENGTH@ 7
------DEL CatchClause@@catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------DEL SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 21684 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 21694 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21718 @LENGTH@ 31
------DEL MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------DEL SimpleName@@Name:Collections @AT@ 21725 @LENGTH@ 11
---------DEL SimpleName@@MethodName:emptyList:[] @AT@ 21737 @LENGTH@ 11


UPD ReturnStatement@@ClassInstanceCreation:new StandardResourceDescriptionResolver(prefix.toString(),HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostModelUtil.class.getClassLoader(),true,false) @TO@ ClassInstanceCreation:new StandardResourceDescriptionResolver(prefix.toString(),HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostModelUtil.class.getClassLoader(),true,false) @AT@ 6884 @LENGTH@ 204
---UPD ClassInstanceCreation@@StandardResourceDescriptionResolver[prefix.toString(), HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostModelUtil.class.getClassLoader(), true, false] @TO@ StandardResourceDescriptionResolver[prefix.toString(), HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostModelUtil.class.getClassLoader(), true, false] @AT@ 6891 @LENGTH@ 196
------UPD InfixExpression@@HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 6950 @LENGTH@ 85
---------UPD MethodInvocation@@HostControllerResourceDescription.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 6950 @LENGTH@ 62
------------UPD TypeLiteral@@HostControllerResourceDescription.class @TO@ HostEnvironmentResourceDescription.class @AT@ 6950 @LENGTH@ 39


UPD VariableDeclarationStatement@@String type=System.getProperty("jboss.as.comare.type",null); @TO@ String type=System.getProperty("jboss.as.compare.type",null); @AT@ 4679 @LENGTH@ 63
---UPD VariableDeclarationFragment@@type=System.getProperty("jboss.as.comare.type",null) @TO@ type=System.getProperty("jboss.as.compare.type",null) @AT@ 4686 @LENGTH@ 55
------UPD MethodInvocation@@System.getProperty("jboss.as.comare.type",null) @TO@ System.getProperty("jboss.as.compare.type",null) @AT@ 4693 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getProperty:["jboss.as.comare.type", null] @TO@ MethodName:getProperty:["jboss.as.compare.type", null] @AT@ 4700 @LENGTH@ 41
------------UPD StringLiteral@@"jboss.as.comare.type" @TO@ "jboss.as.compare.type" @AT@ 4712 @LENGTH@ 22


INS MethodDeclaration@@String, MethodName:getUrl,  @TO@ TypeDeclaration@@[public]DownloadFuture, [Future<DownloadFuture>] @AT@ 885 @LENGTH@ 9
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:getUrl,  @AT@ 878 @LENGTH@ 6
---INS SimpleName@@MethodName:getUrl @TO@ MethodDeclaration@@String, MethodName:getUrl,  @AT@ 885 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:controller.execute(operation,null,OperationTransactionControl.COMMIT,null) @TO@ MethodInvocation:executeOperation(operation,OperationTransactionControl.COMMIT) @AT@ 7542 @LENGTH@ 85
---UPD MethodInvocation@@controller.execute(operation,null,OperationTransactionControl.COMMIT,null) @TO@ executeOperation(operation,OperationTransactionControl.COMMIT) @AT@ 7549 @LENGTH@ 77
------DEL SimpleName@@Name:controller @AT@ 7549 @LENGTH@ 10
------UPD SimpleName@@MethodName:execute:[operation, null, OperationTransactionControl.COMMIT, null] @TO@ MethodName:executeOperation:[operation, OperationTransactionControl.COMMIT] @AT@ 7560 @LENGTH@ 66
---------DEL NullLiteral@@null @AT@ 7579 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 7621 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]EJBSecurityTestCase,  @AT@ 8307 @LENGTH@ 553
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8307 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8314 @LENGTH@ 4
---INS SimpleName@@MethodName:testEmptyRolesAllowedAnnotationValue @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8319 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8365 @LENGTH@ 9
---INS VariableDeclarationStatement@@final Context ctx=new InitialContext(); @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8385 @LENGTH@ 41
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final Context ctx=new InitialContext(); @AT@ 8385 @LENGTH@ 5
------INS SimpleType@@Context @TO@ VariableDeclarationStatement@@final Context ctx=new InitialContext(); @AT@ 8391 @LENGTH@ 7
------INS VariableDeclarationFragment@@ctx=new InitialContext() @TO@ VariableDeclarationStatement@@final Context ctx=new InitialContext(); @AT@ 8399 @LENGTH@ 26
---------INS SimpleName@@ctx @TO@ VariableDeclarationFragment@@ctx=new InitialContext() @AT@ 8399 @LENGTH@ 3
---------INS ClassInstanceCreation@@InitialContext[] @TO@ VariableDeclarationFragment@@ctx=new InitialContext() @AT@ 8405 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@InitialContext[] @AT@ 8405 @LENGTH@ 3
------------INS SimpleType@@InitialContext @TO@ ClassInstanceCreation@@InitialContext[] @AT@ 8409 @LENGTH@ 14
---INS VariableDeclarationStatement@@final AnnotatedSLSB annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()); @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8436 @LENGTH@ 155
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final AnnotatedSLSB annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()); @AT@ 8436 @LENGTH@ 5
------INS SimpleType@@AnnotatedSLSB @TO@ VariableDeclarationStatement@@final AnnotatedSLSB annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()); @AT@ 8442 @LENGTH@ 13
------INS VariableDeclarationFragment@@annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @TO@ VariableDeclarationStatement@@final AnnotatedSLSB annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()); @AT@ 8456 @LENGTH@ 134
---------INS SimpleName@@annotatedBean @TO@ VariableDeclarationFragment@@annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8456 @LENGTH@ 13
---------INS CastExpression@@(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @TO@ VariableDeclarationFragment@@annotatedBean=(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8472 @LENGTH@ 118
------------INS SimpleType@@AnnotatedSLSB @TO@ CastExpression@@(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8473 @LENGTH@ 13
------------INS MethodInvocation@@ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @TO@ CastExpression@@(AnnotatedSLSB)ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8488 @LENGTH@ 102
---------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8488 @LENGTH@ 3
---------------INS SimpleName@@MethodName:lookup:["java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()] @TO@ MethodInvocation@@ctx.lookup("java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()) @AT@ 8492 @LENGTH@ 98
------------------INS InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @TO@ SimpleName@@MethodName:lookup:["java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName()] @AT@ 8499 @LENGTH@ 90
---------------------INS StringLiteral@@"java:module/" @TO@ InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @AT@ 8499 @LENGTH@ 14
---------------------INS Operator@@+ @TO@ InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @AT@ 8513 @LENGTH@ 1
---------------------INS MethodInvocation@@AnnotatedSLSB.class.getSimpleName() @TO@ InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @AT@ 8516 @LENGTH@ 35
------------------------INS TypeLiteral@@AnnotatedSLSB.class @TO@ MethodInvocation@@AnnotatedSLSB.class.getSimpleName() @AT@ 8516 @LENGTH@ 19
------------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@AnnotatedSLSB.class.getSimpleName() @AT@ 8536 @LENGTH@ 15
---------------------INS StringLiteral@@"!" @TO@ InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @AT@ 8554 @LENGTH@ 3
---------------------INS MethodInvocation@@AnnotatedSLSB.class.getName() @TO@ InfixExpression@@"java:module/" + AnnotatedSLSB.class.getSimpleName() + "!"+ AnnotatedSLSB.class.getName() @AT@ 8560 @LENGTH@ 29
------------------------INS TypeLiteral@@AnnotatedSLSB.class @TO@ MethodInvocation@@AnnotatedSLSB.class.getName() @AT@ 8560 @LENGTH@ 19
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@AnnotatedSLSB.class.getName() @AT@ 8580 @LENGTH@ 9
---INS TryStatement@@try {  annotatedBean.methodWithEmptyRolesAllowedAnnotation();  Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail");} catch (EJBAccessException ejbae) {} @TO@ MethodDeclaration@@public, void, MethodName:testEmptyRolesAllowedAnnotationValue, Exception,  @AT@ 8600 @LENGTH@ 254
------INS ExpressionStatement@@MethodInvocation:annotatedBean.methodWithEmptyRolesAllowedAnnotation() @TO@ TryStatement@@try {  annotatedBean.methodWithEmptyRolesAllowedAnnotation();  Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail");} catch (EJBAccessException ejbae) {} @AT@ 8618 @LENGTH@ 54
---------INS MethodInvocation@@annotatedBean.methodWithEmptyRolesAllowedAnnotation() @TO@ ExpressionStatement@@MethodInvocation:annotatedBean.methodWithEmptyRolesAllowedAnnotation() @AT@ 8618 @LENGTH@ 53
------------INS SimpleName@@Name:annotatedBean @TO@ MethodInvocation@@annotatedBean.methodWithEmptyRolesAllowedAnnotation() @AT@ 8618 @LENGTH@ 13
------------INS SimpleName@@MethodName:methodWithEmptyRolesAllowedAnnotation:[] @TO@ MethodInvocation@@annotatedBean.methodWithEmptyRolesAllowedAnnotation() @AT@ 8632 @LENGTH@ 39
------INS ExpressionStatement@@MethodInvocation:Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail") @TO@ TryStatement@@try {  annotatedBean.methodWithEmptyRolesAllowedAnnotation();  Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail");} catch (EJBAccessException ejbae) {} @AT@ 8685 @LENGTH@ 91
---------INS MethodInvocation@@Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail") @TO@ ExpressionStatement@@MethodInvocation:Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail") @AT@ 8685 @LENGTH@ 90
------------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail") @AT@ 8685 @LENGTH@ 6
------------INS SimpleName@@MethodName:fail:["Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail"] @TO@ MethodInvocation@@Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail") @AT@ 8692 @LENGTH@ 83
---------------INS StringLiteral@@"Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail" @TO@ SimpleName@@MethodName:fail:["Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail"] @AT@ 8697 @LENGTH@ 77
------INS CatchClause@@catch (EJBAccessException ejbae) {} @TO@ TryStatement@@try {  annotatedBean.methodWithEmptyRolesAllowedAnnotation();  Assert.fail("Call to methodWithEmptyRolesAllowedAnnotation() method was expected to fail");} catch (EJBAccessException ejbae) {} @AT@ 8787 @LENGTH@ 67
---------INS SingleVariableDeclaration@@EJBAccessException ejbae @TO@ CatchClause@@catch (EJBAccessException ejbae) {} @AT@ 8794 @LENGTH@ 24
------------INS SimpleType@@EJBAccessException @TO@ SingleVariableDeclaration@@EJBAccessException ejbae @AT@ 8794 @LENGTH@ 18
------------INS SimpleName@@ejbae @TO@ SingleVariableDeclaration@@EJBAccessException ejbae @AT@ 8813 @LENGTH@ 5


UPD TypeDeclaration@@[public]SampleMappingContext, AbstractMappingContext<MutablePersistentEntity<?,SampleProperty>,SampleProperty> @TO@ [public, static]SampleMappingContext, AbstractMappingContext<MutablePersistentEntity<?,SampleProperty>,SampleProperty> @AT@ 2411 @LENGTH@ 646
---INS Modifier@@static @TO@ TypeDeclaration@@[public]SampleMappingContext, AbstractMappingContext<MutablePersistentEntity<?,SampleProperty>,SampleProperty> @AT@ 2418 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 4446 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 4446 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 4454 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 4467 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 4467 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 4467 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 4484 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 4500 @LENGTH@ 21


UPD MethodDeclaration@@protected, voidMethodName:MapAttributeDefinition, final String name, final String xmlName, final boolean allowNull, boolean allowExpression, final int minSize, final int maxSize, final ParameterValidator elementValidator, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @TO@ protected, voidMethodName:MapAttributeDefinition, final String name, final String xmlName, final boolean allowNull, boolean allowExpression, final int minSize, final int maxSize, final ParameterValidator elementValidator, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final DeprecationData deprecated, final AttributeAccess.Flag... flags,  @AT@ 3191 @LENGTH@ 728
---INS SingleVariableDeclaration@@final DeprecationData deprecated @TO@ MethodDeclaration@@protected, voidMethodName:MapAttributeDefinition, final String name, final String xmlName, final boolean allowNull, boolean allowExpression, final int minSize, final int maxSize, final ParameterValidator elementValidator, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @AT@ 3634 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 3634 @LENGTH@ 5
------INS SimpleType@@DeprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 3640 @LENGTH@ 15
------INS SimpleName@@deprecated @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 3656 @LENGTH@ 10
---UPD SuperConstructorInvocation@@super(name,xmlName,null,ModelType.OBJECT,allowNull,allowExpression,null,null,new MapValidator(elementValidator,allowNull,minSize,maxSize),false,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @TO@ super(name,xmlName,null,ModelType.OBJECT,allowNull,allowExpression,null,null,new MapValidator(elementValidator,allowNull,minSize,maxSize),false,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags);
 @AT@ 3640 @LENGTH@ 223
------INS SimpleName@@deprecated @TO@ SuperConstructorInvocation@@super(name,xmlName,null,ModelType.OBJECT,allowNull,allowExpression,null,null,new MapValidator(elementValidator,allowNull,minSize,maxSize),false,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @AT@ 3931 @LENGTH@ 10


UPD ReturnStatement@@MethodInvocation:path.getName() @TO@ MethodInvocation:path.toUri().getPath() @AT@ 4473 @LENGTH@ 22
---UPD MethodInvocation@@path.getName() @TO@ path.toUri().getPath() @AT@ 4480 @LENGTH@ 14
------INS MethodInvocation@@MethodName:toUri:[] @TO@ MethodInvocation@@path.getName() @AT@ 4480 @LENGTH@ 12
------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:getPath:[] @AT@ 4485 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:assertEquals(1,ids.size()) @AT@ 5424 @LENGTH@ 28
---DEL MethodInvocation@@assertEquals(1,ids.size()) @AT@ 5424 @LENGTH@ 27
------DEL SimpleName@@MethodName:assertEquals:[1, ids.size()] @AT@ 5424 @LENGTH@ 27
---------DEL NumberLiteral@@1 @AT@ 5437 @LENGTH@ 1
---------DEL MethodInvocation@@ids.size() @AT@ 5440 @LENGTH@ 10
------------DEL SimpleName@@Name:ids @AT@ 5440 @LENGTH@ 3
------------DEL SimpleName@@MethodName:size:[] @AT@ 5444 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:CSVFormat, final Character delimiter, final Character encapsulator, final Character commentStart, final Character escape, final boolean surroundingSpacesIgnored, final boolean emptyLinesIgnored, final String lineSeparator, final String[] header,  @TO@ public, voidMethodName:CSVFormat, final Character delimiter, final Character encapsulator, final Character commentStart, final Character escape, final boolean ignoreSurroundingSpaces, final boolean ignoreEmptyLines, final String lineSeparator, final String[] header,  @AT@ 5454 @LENGTH@ 612
---UPD SingleVariableDeclaration@@final boolean surroundingSpacesIgnored @TO@ final boolean ignoreSurroundingSpaces @AT@ 5582 @LENGTH@ 51
------UPD SimpleName@@surroundingSpacesIgnored @TO@ ignoreSurroundingSpaces @AT@ 5609 @LENGTH@ 24
---UPD SingleVariableDeclaration@@final boolean emptyLinesIgnored @TO@ final boolean ignoreEmptyLines @AT@ 5635 @LENGTH@ 31
------UPD SimpleName@@emptyLinesIgnored @TO@ ignoreEmptyLines @AT@ 5649 @LENGTH@ 17
---UPD ExpressionStatement@@Assignment:this.ignoreSurroundingSpaces=surroundingSpacesIgnored @TO@ Assignment:this.ignoreSurroundingSpaces=ignoreSurroundingSpaces @AT@ 5879 @LENGTH@ 56
------UPD Assignment@@this.ignoreSurroundingSpaces=surroundingSpacesIgnored @TO@ this.ignoreSurroundingSpaces=ignoreSurroundingSpaces @AT@ 5879 @LENGTH@ 55
---------UPD SimpleName@@surroundingSpacesIgnored @TO@ ignoreSurroundingSpaces @AT@ 5910 @LENGTH@ 24
---UPD ExpressionStatement@@Assignment:this.ignoreEmptyLines=emptyLinesIgnored @TO@ Assignment:this.ignoreEmptyLines=ignoreEmptyLines @AT@ 5944 @LENGTH@ 42
------UPD Assignment@@this.ignoreEmptyLines=emptyLinesIgnored @TO@ this.ignoreEmptyLines=ignoreEmptyLines @AT@ 5944 @LENGTH@ 41
---------UPD SimpleName@@emptyLinesIgnored @TO@ ignoreEmptyLines @AT@ 5968 @LENGTH@ 17


UPD ReturnStatement@@ClassInstanceCreation:new NonePredicate<T>(predicates) @TO@ ClassInstanceCreation:new NonePredicate<T>(FunctorUtils.copy(predicates)) @AT@ 2339 @LENGTH@ 40
---UPD ClassInstanceCreation@@NonePredicate<T>[predicates] @TO@ NonePredicate<T>[FunctorUtils.copy(predicates)] @AT@ 2346 @LENGTH@ 32
------MOV MethodInvocation@@FunctorUtils.copy(predicates) @TO@ ClassInstanceCreation@@NonePredicate<T>[predicates] @AT@ 2300 @LENGTH@ 29
------DEL SimpleName@@predicates @AT@ 2367 @LENGTH@ 10


UPD ReturnStatement@@BooleanLiteral:false @TO@ MethodInvocation:rootMBeanServer.isRegistered(name) @AT@ 10980 @LENGTH@ 13
---DEL BooleanLiteral@@false @AT@ 10987 @LENGTH@ 5
---INS MethodInvocation@@rootMBeanServer.isRegistered(name) @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11067 @LENGTH@ 34
------INS SimpleName@@Name:rootMBeanServer @TO@ MethodInvocation@@rootMBeanServer.isRegistered(name) @AT@ 11067 @LENGTH@ 15
------INS SimpleName@@MethodName:isRegistered:[name] @TO@ MethodInvocation@@rootMBeanServer.isRegistered(name) @AT@ 11083 @LENGTH@ 18
---------INS SimpleName@@name @TO@ SimpleName@@MethodName:isRegistered:[name] @AT@ 11096 @LENGTH@ 4


UPD Block@@ThenBody:{  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }    if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {      ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());      String name=Element.FILE.getLocalName();      boolean startwritten=false;      startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);      startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);      if (startwritten) {        writer.writeEndElement();      }    }  }  writer.writeEndElement();} @TO@ ThenBody:{  boolean valvestartwritten=false;  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    valvestartwritten=true;    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }    if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {      ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());      String name=Element.FILE.getLocalName();      boolean startwritten=false;      startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);      startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);      if (startwritten) {        writer.writeEndElement();      }    }  }  if (valvestartwritten)   writer.writeEndElement();} @AT@ 11367 @LENGTH@ 1797
---UPD EnhancedForStatement@@for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }  if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {    ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());    String name=Element.FILE.getLocalName();    boolean startwritten=false;    startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);    startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);    if (startwritten) {      writer.writeEndElement();    }  }} @TO@ for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  valvestartwritten=true;  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }  if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {    ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());    String name=Element.FILE.getLocalName();    boolean startwritten=false;    startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);    startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);    if (startwritten) {      writer.writeEndElement();    }  }} @AT@ 11385 @LENGTH@ 1723
------INS ExpressionStatement@@Assignment:valvestartwritten=true @TO@ EnhancedForStatement@@for (final Property valve : node.get(VALVE).asPropertyList()) {  final ModelNode config=valve.getValue();  writer.writeStartElement(Element.VALVE.getLocalName());  writer.writeAttribute(NAME,valve.getName());  for (  SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {    attr.marshallAsAttribute(config,false,writer);  }  if (config.hasDefined(PARAM)) {    for (    final Property entry : config.get(PARAM).asPropertyList()) {      writer.writeEmptyElement(Element.PARAM.getLocalName());      writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());      writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());    }  }  if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {    ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());    String name=Element.FILE.getLocalName();    boolean startwritten=false;    startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);    startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);    if (startwritten) {      writer.writeEndElement();    }  }} @AT@ 11659 @LENGTH@ 25
---------INS Assignment@@valvestartwritten=true @TO@ ExpressionStatement@@Assignment:valvestartwritten=true @AT@ 11659 @LENGTH@ 24
------------INS SimpleName@@valvestartwritten @TO@ Assignment@@valvestartwritten=true @AT@ 11659 @LENGTH@ 17
------------INS Operator@@= @TO@ Assignment@@valvestartwritten=true @AT@ 11676 @LENGTH@ 1
------------INS BooleanLiteral@@true @TO@ Assignment@@valvestartwritten=true @AT@ 11679 @LENGTH@ 4
---INS VariableDeclarationStatement@@boolean valvestartwritten=false; @TO@ Block@@ThenBody:{  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }    if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {      ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());      String name=Element.FILE.getLocalName();      boolean startwritten=false;      startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);      startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);      if (startwritten) {        writer.writeEndElement();      }    }  }  writer.writeEndElement();} @AT@ 11385 @LENGTH@ 34
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean valvestartwritten=false; @AT@ 11385 @LENGTH@ 7
------INS VariableDeclarationFragment@@valvestartwritten=false @TO@ VariableDeclarationStatement@@boolean valvestartwritten=false; @AT@ 11393 @LENGTH@ 25
---------INS SimpleName@@valvestartwritten @TO@ VariableDeclarationFragment@@valvestartwritten=false @AT@ 11393 @LENGTH@ 17
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@valvestartwritten=false @AT@ 11413 @LENGTH@ 5
---INS IfStatement@@if (valvestartwritten) writer.writeEndElement(); @TO@ Block@@ThenBody:{  for (  final Property valve : node.get(VALVE).asPropertyList()) {    final ModelNode config=valve.getValue();    writer.writeStartElement(Element.VALVE.getLocalName());    writer.writeAttribute(NAME,valve.getName());    for (    SimpleAttributeDefinition attr : WebValveDefinition.ATTRIBUTES) {      attr.marshallAsAttribute(config,false,writer);    }    if (config.hasDefined(PARAM)) {      for (      final Property entry : config.get(PARAM).asPropertyList()) {        writer.writeEmptyElement(Element.PARAM.getLocalName());        writer.writeAttribute(Attribute.PARAM_NAME.getLocalName(),entry.getName());        writer.writeAttribute(Attribute.PARAM_VALUE.getLocalName(),entry.getValue().asString());      }    }    if (config.get(FILE_PATH.getKey(),FILE_PATH.getValue()).isDefined()) {      ModelNode file=config.get(FILE_PATH.getKey(),FILE_PATH.getValue());      String name=Element.FILE.getLocalName();      boolean startwritten=false;      startwritten=writeAttribute(writer,WebValveDefinition.PATH,file,startwritten,name);      startwritten=writeAttribute(writer,WebValveDefinition.RELATIVE_TO,file,startwritten,name);      if (startwritten) {        writer.writeEndElement();      }    }  }  writer.writeEndElement();} @AT@ 13222 @LENGTH@ 68
------INS SimpleName@@valvestartwritten @TO@ IfStatement@@if (valvestartwritten) writer.writeEndElement(); @AT@ 13226 @LENGTH@ 17
------INS Block@@ThenBody:writer.writeEndElement(); @TO@ IfStatement@@if (valvestartwritten) writer.writeEndElement(); @AT@ 13265 @LENGTH@ 25
---------MOV ExpressionStatement@@MethodInvocation:writer.writeEndElement() @TO@ Block@@ThenBody:writer.writeEndElement(); @AT@ 13125 @LENGTH@ 25


DEL MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 656
---DEL Modifier@@public @AT@ 21099 @LENGTH@ 6
---DEL Modifier@@static @AT@ 21106 @LENGTH@ 6
---DEL ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 12
------DEL SimpleType@@List @AT@ 21113 @LENGTH@ 4
------DEL SimpleType@@String @AT@ 21118 @LENGTH@ 6
---DEL SimpleName@@MethodName:getDeployments @AT@ 21126 @LENGTH@ 14
---DEL SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 28
------DEL SimpleType@@ModelControllerClient @AT@ 21141 @LENGTH@ 21
------DEL SimpleName@@client @AT@ 21163 @LENGTH@ 6
---DEL SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 18
------DEL SimpleType@@String @AT@ 21171 @LENGTH@ 6
------DEL SimpleName@@serverGroup @AT@ 21178 @LENGTH@ 11
---DEL VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 42
------DEL Modifier@@final @AT@ 21202 @LENGTH@ 5
------DEL SimpleType@@ModelNode @AT@ 21208 @LENGTH@ 9
------DEL VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 25
---------DEL SimpleName@@request @AT@ 21218 @LENGTH@ 7
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 15
------------DEL New@@new @AT@ 21228 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 21232 @LENGTH@ 9
---DEL VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 41
------DEL SimpleType@@ModelNode @AT@ 21253 @LENGTH@ 9
------DEL VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 30
---------DEL SimpleName@@address @AT@ 21263 @LENGTH@ 7
---------DEL MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------DEL SimpleName@@Name:request @AT@ 21273 @LENGTH@ 7
------------DEL SimpleName@@MethodName:get:[ADDRESS] @AT@ 21281 @LENGTH@ 12
---------------DEL SimpleName@@ADDRESS @AT@ 21285 @LENGTH@ 7
---DEL IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21303 @LENGTH@ 87
------DEL InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 19
---------DEL SimpleName@@serverGroup @AT@ 21306 @LENGTH@ 11
---------DEL Operator@@!= @AT@ 21317 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 21321 @LENGTH@ 4
------DEL Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------DEL ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 39
------------DEL MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------DEL SimpleName@@Name:address @AT@ 21341 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21349 @LENGTH@ 30
------------------DEL SimpleName@@SERVER_GROUP @AT@ 21353 @LENGTH@ 12
------------------DEL SimpleName@@serverGroup @AT@ 21367 @LENGTH@ 11
---DEL ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 48
------DEL MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------DEL MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21399 @LENGTH@ 22
------------DEL SimpleName@@OPERATION @AT@ 21411 @LENGTH@ 9
---------DEL SimpleName@@Name:request @AT@ 21399 @LENGTH@ 7
---------DEL SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21422 @LENGTH@ 24
------------DEL SimpleName@@READ_CHILDREN_NAMES @AT@ 21426 @LENGTH@ 19
---DEL ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 40
------DEL MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------DEL MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21456 @LENGTH@ 23
------------DEL SimpleName@@CHILD_TYPE @AT@ 21468 @LENGTH@ 10
---------DEL SimpleName@@Name:request @AT@ 21456 @LENGTH@ 7
---------DEL SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21480 @LENGTH@ 15
------------DEL SimpleName@@DEPLOYMENT @AT@ 21484 @LENGTH@ 10
---DEL TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21505 @LENGTH@ 203
------DEL VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 50
---------DEL Modifier@@final @AT@ 21523 @LENGTH@ 5
---------DEL SimpleType@@ModelNode @AT@ 21529 @LENGTH@ 9
---------DEL VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 33
------------DEL SimpleName@@outcome @AT@ 21539 @LENGTH@ 7
------------DEL MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------DEL SimpleName@@Name:client @AT@ 21549 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:execute:[request] @AT@ 21556 @LENGTH@ 16
------------------DEL SimpleName@@request @AT@ 21564 @LENGTH@ 7
------DEL IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21586 @LENGTH@ 80
---------DEL MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
------------DEL SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21590 @LENGTH@ 18
---------------DEL SimpleName@@outcome @AT@ 21600 @LENGTH@ 7
---------DEL Block@@ThenBody:{  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------DEL ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21628 @LENGTH@ 24
---------------DEL MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------DEL SimpleName@@MethodName:getList:[outcome] @AT@ 21635 @LENGTH@ 16
---------------------DEL SimpleName@@outcome @AT@ 21643 @LENGTH@ 7
------DEL CatchClause@@catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------DEL SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 21684 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 21694 @LENGTH@ 1
---DEL ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21718 @LENGTH@ 31
------DEL MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------DEL SimpleName@@Name:Collections @AT@ 21725 @LENGTH@ 11
---------DEL SimpleName@@MethodName:emptyList:[] @AT@ 21737 @LENGTH@ 11


DEL ExpressionStatement@@Assignment:node=find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11414 @LENGTH@ 121
---DEL Assignment@@node=find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11414 @LENGTH@ 120
------DEL SimpleName@@node @AT@ 11414 @LENGTH@ 4
------DEL Operator@@= @AT@ 11418 @LENGTH@ 1
------DEL MethodInvocation@@find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11421 @LENGTH@ 113
---------DEL SimpleName@@MethodName:find:[description, CHILDREN, HOST, MODEL_DESCRIPTION, "*", ATTRIBUTES, DOMAIN_CONTROLLER, VALUE_TYPE, LOCAL, TYPE] @AT@ 11421 @LENGTH@ 113
------------DEL SimpleName@@description @AT@ 11426 @LENGTH@ 11
------------DEL SimpleName@@CHILDREN @AT@ 11439 @LENGTH@ 8
------------DEL SimpleName@@HOST @AT@ 11449 @LENGTH@ 4
------------DEL SimpleName@@MODEL_DESCRIPTION @AT@ 11455 @LENGTH@ 17
------------DEL StringLiteral@@"*" @AT@ 11474 @LENGTH@ 3
------------DEL SimpleName@@ATTRIBUTES @AT@ 11479 @LENGTH@ 10
------------DEL SimpleName@@DOMAIN_CONTROLLER @AT@ 11491 @LENGTH@ 17
------------DEL SimpleName@@VALUE_TYPE @AT@ 11510 @LENGTH@ 10
------------DEL SimpleName@@LOCAL @AT@ 11522 @LENGTH@ 5
------------DEL SimpleName@@TYPE @AT@ 11529 @LENGTH@ 4


INS MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @TO@ TypeDeclaration@@[public]ServerSecurityManager,  @AT@ 1927 @LENGTH@ 138
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1919 @LENGTH@ 7
---INS SimpleName@@MethodName:authorize @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1927 @LENGTH@ 9
---INS SingleVariableDeclaration@@String ejbName @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1937 @LENGTH@ 14
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String ejbName @AT@ 1937 @LENGTH@ 6
------INS SimpleName@@ejbName @TO@ SingleVariableDeclaration@@String ejbName @AT@ 1944 @LENGTH@ 7
---INS SingleVariableDeclaration@@CodeSource ejbCodeSource @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1953 @LENGTH@ 24
------INS SimpleType@@CodeSource @TO@ SingleVariableDeclaration@@CodeSource ejbCodeSource @AT@ 1953 @LENGTH@ 10
------INS SimpleName@@ejbCodeSource @TO@ SingleVariableDeclaration@@CodeSource ejbCodeSource @AT@ 1964 @LENGTH@ 13
---INS SingleVariableDeclaration@@String ejbMethodIntf @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 1979 @LENGTH@ 20
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String ejbMethodIntf @AT@ 1979 @LENGTH@ 6
------INS SimpleName@@ejbMethodIntf @TO@ SingleVariableDeclaration@@String ejbMethodIntf @AT@ 1986 @LENGTH@ 13
---INS SingleVariableDeclaration@@Method ejbMethod @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2001 @LENGTH@ 16
------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@Method ejbMethod @AT@ 2001 @LENGTH@ 6
------INS SimpleName@@ejbMethod @TO@ SingleVariableDeclaration@@Method ejbMethod @AT@ 2008 @LENGTH@ 9
---INS SingleVariableDeclaration@@Set<Principal> methodRoles @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2019 @LENGTH@ 26
------INS ParameterizedType@@Set<Principal> @TO@ SingleVariableDeclaration@@Set<Principal> methodRoles @AT@ 2019 @LENGTH@ 14
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Principal> @AT@ 2019 @LENGTH@ 3
---------INS SimpleType@@Principal @TO@ ParameterizedType@@Set<Principal> @AT@ 2023 @LENGTH@ 9
------INS SimpleName@@methodRoles @TO@ SingleVariableDeclaration@@Set<Principal> methodRoles @AT@ 2034 @LENGTH@ 11
---INS SingleVariableDeclaration@@String contextID @TO@ MethodDeclaration@@boolean, MethodName:authorize, String ejbName, CodeSource ejbCodeSource, String ejbMethodIntf, Method ejbMethod, Set<Principal> methodRoles, String contextID,  @AT@ 2047 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String contextID @AT@ 2047 @LENGTH@ 6
------INS SimpleName@@contextID @TO@ SingleVariableDeclaration@@String contextID @AT@ 2054 @LENGTH@ 9


UPD Block@@ThenBody:{  ModelNode ret=operation.clone();  final List<ModelNode> list=new ArrayList<ModelNode>(ret.get(STEPS).asList());  ListIterator<ModelNode> it=list.listIterator();  while (it.hasNext()) {    final ModelNode subOperation=it.next();    transform(context,subOperation);  }  ret.get(STEPS).set(list);  return ret;} @TO@ ThenBody:{  ModelNode ret=operation.clone();  final List<ModelNode> list=new ArrayList<ModelNode>();  ListIterator<ModelNode> it=ret.get(STEPS).asList().listIterator();  while (it.hasNext()) {    final ModelNode subOperation=it.next();    list.add(transform(context,subOperation));  }  ret.get(STEPS).set(list);  return ret;} @AT@ 2033 @LENGTH@ 431
---UPD VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<ModelNode>(ret.get(STEPS).asList()); @TO@ final List<ModelNode> list=new ArrayList<ModelNode>(); @AT@ 2094 @LENGTH@ 79
------UPD VariableDeclarationFragment@@list=new ArrayList<ModelNode>(ret.get(STEPS).asList()) @TO@ list=new ArrayList<ModelNode>() @AT@ 2116 @LENGTH@ 56
---------UPD ClassInstanceCreation@@ArrayList<ModelNode>[ret.get(STEPS).asList()] @TO@ ArrayList<ModelNode>[] @AT@ 2123 @LENGTH@ 49
------------DEL MethodInvocation@@ret.get(STEPS).asList() @AT@ 2148 @LENGTH@ 23
---------------DEL MethodInvocation@@MethodName:get:[STEPS] @AT@ 2148 @LENGTH@ 14
------------------DEL SimpleName@@STEPS @AT@ 2156 @LENGTH@ 5
---------------DEL SimpleName@@Name:ret @AT@ 2148 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:asList:[] @AT@ 2163 @LENGTH@ 8
---UPD VariableDeclarationStatement@@ListIterator<ModelNode> it=list.listIterator(); @TO@ ListIterator<ModelNode> it=ret.get(STEPS).asList().listIterator(); @AT@ 2186 @LENGTH@ 49
------UPD VariableDeclarationFragment@@it=list.listIterator() @TO@ it=ret.get(STEPS).asList().listIterator() @AT@ 2210 @LENGTH@ 24
---------UPD MethodInvocation@@list.listIterator() @TO@ ret.get(STEPS).asList().listIterator() @AT@ 2215 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:asList:[] @TO@ MethodInvocation@@list.listIterator() @AT@ 2192 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:get:[STEPS] @TO@ MethodInvocation@@list.listIterator() @AT@ 2192 @LENGTH@ 14
---------------INS SimpleName@@STEPS @TO@ MethodInvocation@@MethodName:get:[STEPS] @AT@ 2200 @LENGTH@ 5
------------UPD SimpleName@@Name:list @TO@ Name:ret @AT@ 2215 @LENGTH@ 4
---UPD WhileStatement@@while (it.hasNext()) {  final ModelNode subOperation=it.next();  transform(context,subOperation);} @TO@ while (it.hasNext()) {  final ModelNode subOperation=it.next();  list.add(transform(context,subOperation));} @AT@ 2248 @LENGTH@ 144
------UPD Block@@WhileBody:{  final ModelNode subOperation=it.next();  transform(context,subOperation);} @TO@ WhileBody:{  final ModelNode subOperation=it.next();  list.add(transform(context,subOperation));} @AT@ 2269 @LENGTH@ 123
---------UPD ExpressionStatement@@MethodInvocation:transform(context,subOperation) @TO@ MethodInvocation:list.add(transform(context,subOperation)) @AT@ 2345 @LENGTH@ 33
------------INS MethodInvocation@@list.add(transform(context,subOperation)) @TO@ ExpressionStatement@@MethodInvocation:transform(context,subOperation) @AT@ 2341 @LENGTH@ 42
---------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(transform(context,subOperation)) @AT@ 2341 @LENGTH@ 4
---------------INS SimpleName@@MethodName:add:[transform(context,subOperation)] @TO@ MethodInvocation@@list.add(transform(context,subOperation)) @AT@ 2346 @LENGTH@ 37
------------------MOV MethodInvocation@@transform(context,subOperation) @TO@ SimpleName@@MethodName:add:[transform(context,subOperation)] @AT@ 2345 @LENGTH@ 32
------------------MOV MethodInvocation@@transform(context,subOperation) @TO@ SimpleName@@MethodName:add:[transform(context,subOperation)] @AT@ 2345 @LENGTH@ 32


DEL FieldDeclaration@@protected, ProducerTemplate, [producerTemplate] @AT@ 1514 @LENGTH@ 44
---DEL Modifier@@protected @AT@ 1514 @LENGTH@ 9
---DEL SimpleType@@ProducerTemplate @AT@ 1524 @LENGTH@ 16
---DEL VariableDeclarationFragment@@producerTemplate @AT@ 1541 @LENGTH@ 16
------DEL SimpleName@@producerTemplate @AT@ 1541 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed JMS Endpoint"), public]JmsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, MultipleConsumersSupport, Service] @AT@ 35106 @LENGTH@ 114
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @AT@ 35106 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @AT@ 35113 @LENGTH@ 4
---INS SimpleName@@MethodName:setAllowNullBody @TO@ MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @AT@ 35118 @LENGTH@ 16
---INS SingleVariableDeclaration@@boolean allowNullBody @TO@ MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @AT@ 35135 @LENGTH@ 21
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean allowNullBody @AT@ 35135 @LENGTH@ 7
------INS SimpleName@@allowNullBody @TO@ SingleVariableDeclaration@@boolean allowNullBody @AT@ 35143 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:configuration.setAllowNullBody(allowNullBody) @TO@ MethodDeclaration@@public, void, MethodName:setAllowNullBody, boolean allowNullBody,  @AT@ 35168 @LENGTH@ 46
------INS MethodInvocation@@configuration.setAllowNullBody(allowNullBody) @TO@ ExpressionStatement@@MethodInvocation:configuration.setAllowNullBody(allowNullBody) @AT@ 35168 @LENGTH@ 45
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.setAllowNullBody(allowNullBody) @AT@ 35168 @LENGTH@ 13
---------INS SimpleName@@MethodName:setAllowNullBody:[allowNullBody] @TO@ MethodInvocation@@configuration.setAllowNullBody(allowNullBody) @AT@ 35182 @LENGTH@ 31
------------INS SimpleName@@allowNullBody @TO@ SimpleName@@MethodName:setAllowNullBody:[allowNullBody] @AT@ 35199 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)) @TO@ MethodInvocation:mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)) @AT@ 1252 @LENGTH@ 290
---UPD MethodInvocation@@mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)) @TO@ mockServer.expect(requestTo("https://graph.facebook.com/123456/comments?offset=0&limit=25")).andExpect(method(GET)).andExpect(header("Authorization","OAuth someAccessToken")).andRespond(withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)) @AT@ 1252 @LENGTH@ 289
------UPD SimpleName@@MethodName:andRespond:[withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON)] @TO@ MethodName:andRespond:[withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON)] @AT@ 1440 @LENGTH@ 101
---------UPD MethodInvocation@@withSuccess(new FileSystemResource("/Users/habuma/foo.json"),MediaType.APPLICATION_JSON) @TO@ withSuccess(jsonResource("testdata/comments"),MediaType.APPLICATION_JSON) @AT@ 1451 @LENGTH@ 89
------------UPD SimpleName@@MethodName:withSuccess:[new FileSystemResource("/Users/habuma/foo.json"), MediaType.APPLICATION_JSON] @TO@ MethodName:withSuccess:[jsonResource("testdata/comments"), MediaType.APPLICATION_JSON] @AT@ 1451 @LENGTH@ 89
---------------INS MethodInvocation@@jsonResource("testdata/comments") @TO@ SimpleName@@MethodName:withSuccess:[new FileSystemResource("/Users/habuma/foo.json"), MediaType.APPLICATION_JSON] @AT@ 1408 @LENGTH@ 33
------------------INS SimpleName@@MethodName:jsonResource:["testdata/comments"] @TO@ MethodInvocation@@jsonResource("testdata/comments") @AT@ 1408 @LENGTH@ 33
---------------------INS StringLiteral@@"testdata/comments" @TO@ SimpleName@@MethodName:jsonResource:["testdata/comments"] @AT@ 1421 @LENGTH@ 19
---------------DEL ClassInstanceCreation@@FileSystemResource["/Users/habuma/foo.json"] @AT@ 1463 @LENGTH@ 48
------------------DEL New@@new @AT@ 1463 @LENGTH@ 3
------------------DEL SimpleType@@FileSystemResource @AT@ 1467 @LENGTH@ 18
------------------DEL StringLiteral@@"/Users/habuma/foo.json" @AT@ 1486 @LENGTH@ 24


MOV FieldDeclaration@@private, static, final, String, [RESOURCE_NAME=LoggingExtension.class.getPackage().getName() + ".LocalDescriptions"] @TO@ TypeDeclaration@@[public]LoggingExtension, [Extension] @AT@ 3308 @LENGTH@ 113


INS MethodDeclaration@@public, voidMethodName:TemporaryQueueReplyManager, CamelContext camelContext,  @TO@ TypeDeclaration@@[public]TemporaryQueueReplyManager, ReplyManagerSupport @AT@ 1548 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:TemporaryQueueReplyManager, CamelContext camelContext,  @AT@ 1548 @LENGTH@ 6
---INS SimpleName@@MethodName:TemporaryQueueReplyManager @TO@ MethodDeclaration@@public, voidMethodName:TemporaryQueueReplyManager, CamelContext camelContext,  @AT@ 1555 @LENGTH@ 26
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@public, voidMethodName:TemporaryQueueReplyManager, CamelContext camelContext,  @AT@ 1582 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 1582 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 1595 @LENGTH@ 12
---INS SuperConstructorInvocation@@super(camelContext);
 @TO@ MethodDeclaration@@public, voidMethodName:TemporaryQueueReplyManager, CamelContext camelContext,  @AT@ 1619 @LENGTH@ 20
------INS SimpleName@@camelContext @TO@ SuperConstructorInvocation@@super(camelContext);
 @AT@ 1625 @LENGTH@ 12


DEL ExpressionStatement@@MethodInvocation:System.out.println("prepared " + prepared.getPreparedResult()) @AT@ 6997 @LENGTH@ 63
---DEL MethodInvocation@@System.out.println("prepared " + prepared.getPreparedResult()) @AT@ 6997 @LENGTH@ 62
------DEL QualifiedName@@Name:System.out @AT@ 6997 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["prepared " + prepared.getPreparedResult()] @AT@ 7008 @LENGTH@ 51
---------DEL InfixExpression@@"prepared " + prepared.getPreparedResult() @AT@ 7016 @LENGTH@ 42
------------DEL StringLiteral@@"prepared " @AT@ 7016 @LENGTH@ 11
------------DEL Operator@@+ @AT@ 7027 @LENGTH@ 1
------------DEL MethodInvocation@@prepared.getPreparedResult() @AT@ 7030 @LENGTH@ 28
---------------DEL SimpleName@@Name:prepared @AT@ 7030 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getPreparedResult:[] @AT@ 7039 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:builder.addDependency(PathManagerService.SERVICE_NAME) @TO@ MethodDeclaration@@static, KernelServices, MethodName:create, String mainSubsystemName, AdditionalInitialization additionalInit, ExtensionRegistry controllerExtensionRegistry, List<ModelNode> bootOperations, ModelTestParser testParser, Extension mainExtension, ModelVersion legacyModelVersion, Exception,  @AT@ 4737 @LENGTH@ 55
---INS MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @TO@ ExpressionStatement@@MethodInvocation:builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4737 @LENGTH@ 54
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4737 @LENGTH@ 7
------INS SimpleName@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @TO@ MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4745 @LENGTH@ 46
---------INS QualifiedName@@PathManagerService.SERVICE_NAME @TO@ SimpleName@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @AT@ 4759 @LENGTH@ 31
------------INS SimpleName@@PathManagerService @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 4759 @LENGTH@ 18
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 4778 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:result=transformer.transformOperation(context,address,step) @TO@ Assignment:result=transformer.transformOperation(context,stepAddress,step) @AT@ 2977 @LENGTH@ 64
---UPD Assignment@@result=transformer.transformOperation(context,address,step) @TO@ result=transformer.transformOperation(context,stepAddress,step) @AT@ 2977 @LENGTH@ 63
------UPD MethodInvocation@@transformer.transformOperation(context,address,step) @TO@ transformer.transformOperation(context,stepAddress,step) @AT@ 2986 @LENGTH@ 54
---------UPD SimpleName@@MethodName:transformOperation:[context, address, step] @TO@ MethodName:transformOperation:[context, stepAddress, step] @AT@ 2998 @LENGTH@ 42
------------UPD SimpleName@@address @TO@ stepAddress @AT@ 3026 @LENGTH@ 7


UPD ReturnStatement@@NullLiteral:null @TO@ MethodInvocation:Collections.singleton(RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)) @AT@ 15895 @LENGTH@ 12
---INS MethodInvocation@@Collections.singleton(RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)) @TO@ ReturnStatement@@NullLiteral:null @AT@ 15902 @LENGTH@ 69
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)) @AT@ 15902 @LENGTH@ 11
------INS SimpleName@@MethodName:singleton:[RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)] @TO@ MethodInvocation@@Collections.singleton(RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)) @AT@ 15914 @LENGTH@ 57
---------INS MethodInvocation@@RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName) @TO@ SimpleName@@MethodName:singleton:[RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName)] @AT@ 15924 @LENGTH@ 46
------------INS SimpleName@@Name:RESOURCE_ADAPTER_SERVICE_PREFIX @TO@ MethodInvocation@@RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName) @AT@ 15924 @LENGTH@ 31
------------INS SimpleName@@MethodName:append:[raName] @TO@ MethodInvocation@@RESOURCE_ADAPTER_SERVICE_PREFIX.append(raName) @AT@ 15956 @LENGTH@ 14
---------------INS SimpleName@@raName @TO@ SimpleName@@MethodName:append:[raName] @AT@ 15963 @LENGTH@ 6
---DEL NullLiteral@@null @AT@ 15902 @LENGTH@ 4


UPD MethodDeclaration@@public, boolean, MethodName:evaluate, Object object,  @TO@ public, boolean, MethodName:evaluate, T object,  @AT@ 1875 @LENGTH@ 79
---UPD SingleVariableDeclaration@@Object object @TO@ T object @AT@ 1899 @LENGTH@ 13
------UPD SimpleType@@Object @TO@ T @AT@ 1899 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR=JSFAnnotationProcessor.class.getName() + "FACES_ANNOTATIONS"] @TO@ public, static, final, String, [FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS"] @AT@ 2561 @LENGTH@ 116
---UPD VariableDeclarationFragment@@FACES_ANNOTATIONS_SC_ATTR=JSFAnnotationProcessor.class.getName() + "FACES_ANNOTATIONS" @TO@ FACES_ANNOTATIONS_SC_ATTR="org.jboss.as.jsf.FACES_ANNOTATIONS" @AT@ 2588 @LENGTH@ 88
------DEL InfixExpression@@JSFAnnotationProcessor.class.getName() + "FACES_ANNOTATIONS" @AT@ 2616 @LENGTH@ 60
---------DEL MethodInvocation@@JSFAnnotationProcessor.class.getName() @AT@ 2616 @LENGTH@ 38
------------DEL TypeLiteral@@JSFAnnotationProcessor.class @AT@ 2616 @LENGTH@ 28
------------DEL SimpleName@@MethodName:getName:[] @AT@ 2645 @LENGTH@ 9
---------DEL Operator@@+ @AT@ 2654 @LENGTH@ 1
---------DEL StringLiteral@@"FACES_ANNOTATIONS" @AT@ 2657 @LENGTH@ 19
------INS StringLiteral@@"org.jboss.as.jsf.FACES_ANNOTATIONS" @TO@ VariableDeclarationFragment@@FACES_ANNOTATIONS_SC_ATTR=JSFAnnotationProcessor.class.getName() + "FACES_ANNOTATIONS" @AT@ 2617 @LENGTH@ 36


UPD FieldDeclaration@@private, ServiceRegistration, [registration] @TO@ private, ServiceRegistration<?>, [registration] @AT@ 1461 @LENGTH@ 41
---DEL SimpleType@@ServiceRegistration @AT@ 1469 @LENGTH@ 19
---INS ParameterizedType@@ServiceRegistration<?> @TO@ FieldDeclaration@@private, ServiceRegistration, [registration] @AT@ 1497 @LENGTH@ 22
------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1497 @LENGTH@ 19
------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1517 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:result.remove(CommonAttributes.EXPOSE_MODEL) @TO@ MethodDeclaration@@protected, ModelNode, MethodName:transformModel, TransformationContext context, ModelNode model,  @AT@ 7586 @LENGTH@ 45
---INS MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @TO@ ExpressionStatement@@MethodInvocation:result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7586 @LENGTH@ 44
------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7586 @LENGTH@ 6
------INS SimpleName@@MethodName:remove:[CommonAttributes.EXPOSE_MODEL] @TO@ MethodInvocation@@result.remove(CommonAttributes.EXPOSE_MODEL) @AT@ 7593 @LENGTH@ 37
---------INS QualifiedName@@CommonAttributes.EXPOSE_MODEL @TO@ SimpleName@@MethodName:remove:[CommonAttributes.EXPOSE_MODEL] @AT@ 7600 @LENGTH@ 29
------------INS SimpleName@@CommonAttributes @TO@ QualifiedName@@CommonAttributes.EXPOSE_MODEL @AT@ 7600 @LENGTH@ 16
------------INS SimpleName@@EXPOSE_MODEL @TO@ QualifiedName@@CommonAttributes.EXPOSE_MODEL @AT@ 7617 @LENGTH@ 12


INS MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]JmxMessages,  @AT@ 14324 @LENGTH@ 23
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @AT@ 14299 @LENGTH@ 24
---INS SimpleName@@MethodName:objectNameCantBeNull @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @AT@ 14324 @LENGTH@ 20


DEL ExpressionStatement@@MethodInvocation:assertFalse("Should not be done",future.isDone()) @AT@ 1404 @LENGTH@ 51
---DEL MethodInvocation@@assertFalse("Should not be done",future.isDone()) @AT@ 1404 @LENGTH@ 50
------DEL SimpleName@@MethodName:assertFalse:["Should not be done", future.isDone()] @AT@ 1404 @LENGTH@ 50
---------DEL StringLiteral@@"Should not be done" @AT@ 1416 @LENGTH@ 20
---------DEL MethodInvocation@@future.isDone() @AT@ 1438 @LENGTH@ 15
------------DEL SimpleName@@Name:future @AT@ 1438 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDone:[] @AT@ 1445 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("Should be 1 processor",1,set.size()) @TO@ MethodInvocation:assertEquals("Should be 2 processors",2,set.size()) @AT@ 4334 @LENGTH@ 53
---UPD MethodInvocation@@assertEquals("Should be 1 processor",1,set.size()) @TO@ assertEquals("Should be 2 processors",2,set.size()) @AT@ 4334 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertEquals:["Should be 1 processor", 1, set.size()] @TO@ MethodName:assertEquals:["Should be 2 processors", 2, set.size()] @AT@ 4334 @LENGTH@ 52
---------UPD StringLiteral@@"Should be 1 processor" @TO@ "Should be 2 processors" @AT@ 4347 @LENGTH@ 23
---------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4372 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertEquals(DigestUtils.shaHex(testData),DigestUtils.sha1Hex(new ByteArrayInputStream(testData))) @TO@ MethodInvocation:assertEquals(DigestUtils.sha1Hex(testData),DigestUtils.sha1Hex(new ByteArrayInputStream(testData))) @AT@ 6236 @LENGTH@ 116
---UPD MethodInvocation@@assertEquals(DigestUtils.shaHex(testData),DigestUtils.sha1Hex(new ByteArrayInputStream(testData))) @TO@ assertEquals(DigestUtils.sha1Hex(testData),DigestUtils.sha1Hex(new ByteArrayInputStream(testData))) @AT@ 6236 @LENGTH@ 115
------UPD SimpleName@@MethodName:assertEquals:[DigestUtils.shaHex(testData), DigestUtils.sha1Hex(new ByteArrayInputStream(testData))] @TO@ MethodName:assertEquals:[DigestUtils.sha1Hex(testData), DigestUtils.sha1Hex(new ByteArrayInputStream(testData))] @AT@ 6236 @LENGTH@ 115
---------UPD MethodInvocation@@DigestUtils.shaHex(testData) @TO@ DigestUtils.sha1Hex(testData) @AT@ 6249 @LENGTH@ 28
------------UPD SimpleName@@MethodName:shaHex:[testData] @TO@ MethodName:sha1Hex:[testData] @AT@ 6261 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:params.put("query",Collections.singleton((CharSequence)("params" + encoded_space + "spaced"))) @TO@ MethodInvocation:params.put("query",Collections.singleton((CharSequence)("params spaced"))) @AT@ 14155 @LENGTH@ 97
---UPD MethodInvocation@@params.put("query",Collections.singleton((CharSequence)("params" + encoded_space + "spaced"))) @TO@ params.put("query",Collections.singleton((CharSequence)("params spaced"))) @AT@ 14155 @LENGTH@ 96
------UPD SimpleName@@MethodName:put:["query", Collections.singleton((CharSequence)("params" + encoded_space + "spaced"))] @TO@ MethodName:put:["query", Collections.singleton((CharSequence)("params spaced"))] @AT@ 14162 @LENGTH@ 89
---------UPD MethodInvocation@@Collections.singleton((CharSequence)("params" + encoded_space + "spaced")) @TO@ Collections.singleton((CharSequence)("params spaced")) @AT@ 14175 @LENGTH@ 75
------------UPD SimpleName@@MethodName:singleton:[(CharSequence)("params" + encoded_space + "spaced")] @TO@ MethodName:singleton:[(CharSequence)("params spaced")] @AT@ 14187 @LENGTH@ 63
---------------UPD CastExpression@@(CharSequence)("params" + encoded_space + "spaced") @TO@ (CharSequence)("params spaced") @AT@ 14197 @LENGTH@ 52
------------------UPD ParenthesizedExpression@@("params" + encoded_space + "spaced") @TO@ ("params spaced") @AT@ 14212 @LENGTH@ 37
---------------------DEL InfixExpression@@"params" + encoded_space + "spaced" @AT@ 14213 @LENGTH@ 35
------------------------DEL StringLiteral@@"params" @AT@ 14213 @LENGTH@ 8
------------------------DEL Operator@@+ @AT@ 14221 @LENGTH@ 1
------------------------DEL SimpleName@@encoded_space @AT@ 14224 @LENGTH@ 13
------------------------DEL StringLiteral@@"spaced" @AT@ 14240 @LENGTH@ 8
---------------------INS StringLiteral@@"params spaced" @TO@ ParenthesizedExpression@@("params" + encoded_space + "spaced") @AT@ 14213 @LENGTH@ 15


UPD MethodDeclaration@@public, voidMethodName:OperationDefinition, String name, OperationEntry.EntryType entryType, EnumSet<OperationEntry.Flag> flags, final ModelType replyType, final ModelType replyValueType, AttributeDefinition... parameters,  @TO@ protected, voidMethodName:OperationDefinition, String name, OperationEntry.EntryType entryType, EnumSet<OperationEntry.Flag> flags, final ModelType replyType, final ModelType replyValueType, final DeprecationData deprecationData, AttributeDefinition... parameters,  @AT@ 1811 @LENGTH@ 578
---UPD Modifier@@public @TO@ protected @AT@ 1811 @LENGTH@ 6
---INS SingleVariableDeclaration@@final DeprecationData deprecationData @TO@ MethodDeclaration@@public, voidMethodName:OperationDefinition, String name, OperationEntry.EntryType entryType, EnumSet<OperationEntry.Flag> flags, final ModelType replyType, final ModelType replyValueType, AttributeDefinition... parameters,  @AT@ 2193 @LENGTH@ 37
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeprecationData deprecationData @AT@ 2193 @LENGTH@ 5
------INS SimpleType@@DeprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecationData @AT@ 2199 @LENGTH@ 15
------INS SimpleName@@deprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecationData @AT@ 2215 @LENGTH@ 15
---INS ExpressionStatement@@Assignment:this.deprecationData=deprecationData @TO@ MethodDeclaration@@public, voidMethodName:OperationDefinition, String name, OperationEntry.EntryType entryType, EnumSet<OperationEntry.Flag> flags, final ModelType replyType, final ModelType replyValueType, AttributeDefinition... parameters,  @AT@ 2518 @LENGTH@ 39
------INS Assignment@@this.deprecationData=deprecationData @TO@ ExpressionStatement@@Assignment:this.deprecationData=deprecationData @AT@ 2518 @LENGTH@ 38
---------INS FieldAccess@@this.deprecationData @TO@ Assignment@@this.deprecationData=deprecationData @AT@ 2518 @LENGTH@ 20
------------INS ThisExpression@@this @TO@ FieldAccess@@this.deprecationData @AT@ 2518 @LENGTH@ 4
------------INS SimpleName@@deprecationData @TO@ FieldAccess@@this.deprecationData @AT@ 2523 @LENGTH@ 15
---------INS Operator@@= @TO@ Assignment@@this.deprecationData=deprecationData @AT@ 2538 @LENGTH@ 1
---------INS SimpleName@@deprecationData @TO@ Assignment@@this.deprecationData=deprecationData @AT@ 2541 @LENGTH@ 15


MOV FieldDeclaration@@Endpoint, [a] @TO@ TypeDeclaration@@[@ContextName("contextB"), public]RoutesContextB, RouteBuilder @AT@ 1528 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2261 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2261 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2269 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2282 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2282 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2282 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2299 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2315 @LENGTH@ 21


DEL MethodDeclaration@@protected, CamelContext, MethodName:createCamelContext, Exception,  @AT@ 2242 @LENGTH@ 381
---DEL Modifier@@protected @AT@ 2242 @LENGTH@ 9
---DEL SimpleType@@CamelContext @AT@ 2252 @LENGTH@ 12
---DEL SimpleName@@MethodName:createCamelContext @AT@ 2265 @LENGTH@ 18
---DEL SimpleType@@Exception @AT@ 2293 @LENGTH@ 9
---DEL VariableDeclarationStatement@@CamelContext context=super.createCamelContext(); @AT@ 2472 @LENGTH@ 50
------DEL SimpleType@@CamelContext @AT@ 2472 @LENGTH@ 12
------DEL VariableDeclarationFragment@@context=super.createCamelContext() @AT@ 2485 @LENGTH@ 36
---------DEL SimpleName@@context @AT@ 2485 @LENGTH@ 7
---------DEL SuperMethodInvocation@@super.createCamelContext() @AT@ 2495 @LENGTH@ 26
------------DEL SimpleName@@MethodName:createCamelContext:[] @AT@ 2501 @LENGTH@ 18
---DEL ExpressionStatement@@MethodInvocation:context.addComponent("properties",new PropertiesComponent()) @AT@ 2531 @LENGTH@ 62
------DEL MethodInvocation@@context.addComponent("properties",new PropertiesComponent()) @AT@ 2531 @LENGTH@ 61
---------DEL SimpleName@@Name:context @AT@ 2531 @LENGTH@ 7
---------DEL SimpleName@@MethodName:addComponent:["properties", new PropertiesComponent()] @AT@ 2539 @LENGTH@ 53
------------DEL StringLiteral@@"properties" @AT@ 2552 @LENGTH@ 12
------------DEL ClassInstanceCreation@@PropertiesComponent[] @AT@ 2566 @LENGTH@ 25
---------------DEL New@@new @AT@ 2566 @LENGTH@ 3
---------------DEL SimpleType@@PropertiesComponent @AT@ 2570 @LENGTH@ 19
---DEL ReturnStatement@@SimpleName:context @AT@ 2602 @LENGTH@ 15
------DEL SimpleName@@context @AT@ 2609 @LENGTH@ 7


DEL ExpressionStatement@@MethodInvocation:assertEquals(1,ids.size()) @AT@ 6108 @LENGTH@ 28
---DEL MethodInvocation@@assertEquals(1,ids.size()) @AT@ 6108 @LENGTH@ 27
------DEL SimpleName@@MethodName:assertEquals:[1, ids.size()] @AT@ 6108 @LENGTH@ 27
---------DEL NumberLiteral@@1 @AT@ 6121 @LENGTH@ 1
---------DEL MethodInvocation@@ids.size() @AT@ 6124 @LENGTH@ 10
------------DEL SimpleName@@Name:ids @AT@ 6124 @LENGTH@ 3
------------DEL SimpleName@@MethodName:size:[] @AT@ 6128 @LENGTH@ 6


MOV MethodDeclaration@@public, RoutesDefinition, MethodName:createRoutes, Exception,  @TO@ TypeDeclaration@@[public]XmlRoutesFromClassPathTest, CdiTestSupport @AT@ 1252 @LENGTH@ 127


INS IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveMailWithAttachments, Exception,  @AT@ 3211 @LENGTH@ 222
---INS MethodInvocation@@MethodName:isJava16:[] @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3215 @LENGTH@ 10
---INS Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3227 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @AT@ 3211 @LENGTH@ 69
---INS Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3326 @LENGTH@ 107
------INS ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3340 @LENGTH@ 83
---------INS MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3340 @LENGTH@ 82
------------INS SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @TO@ MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3340 @LENGTH@ 82
---------------INS StringLiteral@@"application/octet-stream; name=logo.jpeg" @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3353 @LENGTH@ 42
---------------INS MethodInvocation@@handler.getContentType() @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3397 @LENGTH@ 24
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getContentType() @AT@ 3397 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@handler.getContentType() @AT@ 3405 @LENGTH@ 16


INS MethodDeclaration@@String, MethodName:argShortServerConfig,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]ServerMessages,  @AT@ 3858 @LENGTH@ 23
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:argShortServerConfig,  @AT@ 3851 @LENGTH@ 6
---INS SimpleName@@MethodName:argShortServerConfig @TO@ MethodDeclaration@@String, MethodName:argShortServerConfig,  @AT@ 3858 @LENGTH@ 20


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID); @AT@ 2436 @LENGTH@ 101
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2454 @LENGTH@ 82
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2468 @LENGTH@ 68
---------UPD SimpleName@@MethodName:removeTransaction:[this.xidTransactionID] @TO@ MethodName:getImportedTransaction:[this.xidTransactionID] @AT@ 2496 @LENGTH@ 40


UPD ForStatement@@for (int i=0; i < contentPairs.length; ++i) {  final String pair=contentPairs[i];  final int equalsIndex=pair.indexOf('=');  if (equalsIndex < 0) {    throw new CommandFormatException("Content pair is not following archive-path=fs-path format: '" + pair + "'");  }  contentNames[i]=pair.substring(0,equalsIndex);  if (contentNames[i].length() == 0) {    throw new CommandFormatException("The archive path is missing for the content '" + pair + "'");  }  String path=pair.substring(equalsIndex + 1);  if (path.length() == 0) {    throw new CommandFormatException("The filesystem paths is missing for the content '" + pair + "'");  }  String originalPath=path;  path=pathCompleter.translatePath(path);  final File f=new File(path);  if (!f.exists()) {    throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);  }  contentPaths[i]=f;} @TO@ for (int i=0; i < contentPairs.length; ++i) {  final String pair=contentPairs[i];  final int equalsIndex=pair.indexOf('=');  if (equalsIndex < 0) {    throw new CommandFormatException("Content pair is not following archive-path=fs-path format: '" + pair + "'");  }  contentNames[i]=pair.substring(0,equalsIndex);  if (contentNames[i].length() == 0) {    throw new CommandFormatException("The archive path is missing for the content '" + pair + "'");  }  String path=pair.substring(equalsIndex + 1);  if (path.length() == 0) {    throw new CommandFormatException("The filesystem paths is missing for the content '" + pair + "'");  }  path=pathCompleter.translatePath(path);  final File f=new File(path);  if (!f.exists()) {    throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());  }  contentPaths[i]=f;} @AT@ 28563 @LENGTH@ 1150
---DEL VariableDeclarationStatement@@String originalPath=path; @AT@ 29363 @LENGTH@ 27
------DEL SimpleType@@String @AT@ 29363 @LENGTH@ 6
------DEL VariableDeclarationFragment@@originalPath=path @AT@ 29370 @LENGTH@ 19
---------DEL SimpleName@@originalPath @AT@ 29370 @LENGTH@ 12
---------DEL SimpleName@@path @AT@ 29385 @LENGTH@ 4
---UPD IfStatement@@if (!f.exists()) {  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);} @TO@ if (!f.exists()) {  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());} @AT@ 29500 @LENGTH@ 170
------UPD Block@@ThenBody:{  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path);} @TO@ ThenBody:{  throw new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath());} @AT@ 29516 @LENGTH@ 154
---------UPD ThrowStatement@@ClassInstanceCreation:new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path) @TO@ ClassInstanceCreation:new CommandFormatException("Content file doesn't exist " + f.getAbsolutePath()) @AT@ 29534 @LENGTH@ 122
------------UPD ClassInstanceCreation@@CommandFormatException["Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path] @TO@ CommandFormatException["Content file doesn't exist " + f.getAbsolutePath()] @AT@ 29540 @LENGTH@ 115
---------------UPD InfixExpression@@"Content file doesn't exist " + f.getAbsolutePath() + ", "+ originalPath+ ", "+ path @TO@ "Content file doesn't exist " + f.getAbsolutePath() @AT@ 29567 @LENGTH@ 87
------------------DEL StringLiteral@@", " @AT@ 29621 @LENGTH@ 4
------------------DEL SimpleName@@originalPath @AT@ 29628 @LENGTH@ 12
------------------DEL StringLiteral@@", " @AT@ 29643 @LENGTH@ 4
------------------DEL SimpleName@@path @AT@ 29650 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:Thread.sleep(3000) @AT@ 4266 @LENGTH@ 19
---DEL MethodInvocation@@Thread.sleep(3000) @AT@ 4266 @LENGTH@ 18
------DEL SimpleName@@Name:Thread @AT@ 4266 @LENGTH@ 6
------DEL SimpleName@@MethodName:sleep:[3000] @AT@ 4273 @LENGTH@ 11
---------DEL NumberLiteral@@3000 @AT@ 4279 @LENGTH@ 4


UPD MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelVersion modelVersion, TransformedOperation op,  @TO@ public, ModelNode, MethodName:executeOperation, final ModelVersion modelVersion, final TransformedOperation op,  @AT@ 9122 @LENGTH@ 569
---UPD SingleVariableDeclaration@@ModelVersion modelVersion @TO@ final ModelVersion modelVersion @AT@ 9156 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ModelVersion modelVersion @AT@ 9156 @LENGTH@ 5
---UPD SingleVariableDeclaration@@TransformedOperation op @TO@ final TransformedOperation op @AT@ 9183 @LENGTH@ 23
------INS Modifier@@final @TO@ SingleVariableDeclaration@@TransformedOperation op @AT@ 9189 @LENGTH@ 5
---UPD IfStatement@@if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation());} @TO@ if (op.getTransformedOperation() != null) {  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 9336 @LENGTH@ 129
------UPD Block@@ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation());} @TO@ ThenBody:{  result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){    @Override public void operationPrepared(    ModelController.OperationTransaction transaction,    ModelNode result){      if (op.rejectOperation(result)) {        transaction.rollback();      } else {        transaction.commit();      }    }  });} @AT@ 9378 @LENGTH@ 87
---------UPD ExpressionStatement@@Assignment:result=legacy.executeOperation(op.getTransformedOperation()) @TO@ Assignment:result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9392 @LENGTH@ 63
------------UPD Assignment@@result=legacy.executeOperation(op.getTransformedOperation()) @TO@ result=legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9392 @LENGTH@ 62
---------------UPD MethodInvocation@@legacy.executeOperation(op.getTransformedOperation()) @TO@ legacy.executeOperation(op.getTransformedOperation(),new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
) @AT@ 9401 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:executeOperation:[op.getTransformedOperation()] @TO@ MethodName:executeOperation:[op.getTransformedOperation(), new ModelController.OperationTransactionControl(){
  @Override public void operationPrepared(  ModelController.OperationTransaction transaction,  ModelNode result){
    if (op.rejectOperation(result)) {
      transaction.rollback();
    }
 else {
      transaction.commit();
    }
  }
}
] @AT@ 9408 @LENGTH@ 46
---------------------INS ClassInstanceCreation@@ModelController.OperationTransactionControl[] @TO@ SimpleName@@MethodName:executeOperation:[op.getTransformedOperation()] @AT@ 9467 @LENGTH@ 459
------------------------INS New@@new @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9467 @LENGTH@ 3
------------------------INS SimpleType@@ModelController.OperationTransactionControl @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9471 @LENGTH@ 43
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ModelController.OperationTransactionControl[] @AT@ 9517 @LENGTH@ 409
---------------------------INS MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 9569 @LENGTH@ 339
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9569 @LENGTH@ 6
------------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9576 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:operationPrepared @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9581 @LENGTH@ 17
------------------------------INS SingleVariableDeclaration@@ModelController.OperationTransaction transaction @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9599 @LENGTH@ 48
---------------------------------INS SimpleType@@ModelController.OperationTransaction @TO@ SingleVariableDeclaration@@ModelController.OperationTransaction transaction @AT@ 9599 @LENGTH@ 36
---------------------------------INS SimpleName@@transaction @TO@ SingleVariableDeclaration@@ModelController.OperationTransaction transaction @AT@ 9636 @LENGTH@ 11
------------------------------INS SingleVariableDeclaration@@ModelNode result @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9649 @LENGTH@ 16
---------------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 9649 @LENGTH@ 9
---------------------------------INS SimpleName@@result @TO@ SingleVariableDeclaration@@ModelNode result @AT@ 9659 @LENGTH@ 6
------------------------------INS IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @TO@ MethodDeclaration@@public, void, MethodName:operationPrepared, ModelController.OperationTransaction transaction, ModelNode result,  @AT@ 9693 @LENGTH@ 193
---------------------------------INS MethodInvocation@@op.rejectOperation(result) @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9696 @LENGTH@ 26
------------------------------------INS SimpleName@@Name:op @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 9696 @LENGTH@ 2
------------------------------------INS SimpleName@@MethodName:rejectOperation:[result] @TO@ MethodInvocation@@op.rejectOperation(result) @AT@ 9699 @LENGTH@ 23
---------------------------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:rejectOperation:[result] @AT@ 9715 @LENGTH@ 6
---------------------------------INS Block@@ThenBody:{  transaction.rollback();} @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9724 @LENGTH@ 79
------------------------------------INS ExpressionStatement@@MethodInvocation:transaction.rollback() @TO@ Block@@ThenBody:{  transaction.rollback();} @AT@ 9754 @LENGTH@ 23
---------------------------------------INS MethodInvocation@@transaction.rollback() @TO@ ExpressionStatement@@MethodInvocation:transaction.rollback() @AT@ 9754 @LENGTH@ 22
------------------------------------------INS SimpleName@@Name:transaction @TO@ MethodInvocation@@transaction.rollback() @AT@ 9754 @LENGTH@ 11
------------------------------------------INS SimpleName@@MethodName:rollback:[] @TO@ MethodInvocation@@transaction.rollback() @AT@ 9766 @LENGTH@ 10
---------------------------------INS Block@@ElseBody:{  transaction.commit();} @TO@ IfStatement@@if (op.rejectOperation(result)) {  transaction.rollback();} else {  transaction.commit();} @AT@ 9809 @LENGTH@ 77
------------------------------------INS ExpressionStatement@@MethodInvocation:transaction.commit() @TO@ Block@@ElseBody:{  transaction.commit();} @AT@ 9839 @LENGTH@ 21
---------------------------------------INS MethodInvocation@@transaction.commit() @TO@ ExpressionStatement@@MethodInvocation:transaction.commit() @AT@ 9839 @LENGTH@ 20
------------------------------------------INS SimpleName@@Name:transaction @TO@ MethodInvocation@@transaction.commit() @AT@ 9839 @LENGTH@ 11
------------------------------------------INS SimpleName@@MethodName:commit:[] @TO@ MethodInvocation@@transaction.commit() @AT@ 9851 @LENGTH@ 8


INS MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @TO@ TypeDeclaration@@[public]IgnoredDomainResourceRegistry,  @AT@ 3567 @LENGTH@ 195
---INS Modifier@@public @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3567 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3574 @LENGTH@ 9
---INS SimpleName@@MethodName:getIgnoredResourcesAsModel @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3584 @LENGTH@ 26
---INS VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3623 @LENGTH@ 51
------INS SimpleType@@IgnoredDomainResourceRoot @TO@ VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @AT@ 3623 @LENGTH@ 25
------INS VariableDeclarationFragment@@root=this.rootResource @TO@ VariableDeclarationStatement@@IgnoredDomainResourceRoot root=this.rootResource; @AT@ 3649 @LENGTH@ 24
---------INS SimpleName@@root @TO@ VariableDeclarationFragment@@root=this.rootResource @AT@ 3649 @LENGTH@ 4
---------INS FieldAccess@@this.rootResource @TO@ VariableDeclarationFragment@@root=this.rootResource @AT@ 3656 @LENGTH@ 17
------------INS ThisExpression@@this @TO@ FieldAccess@@this.rootResource @AT@ 3656 @LENGTH@ 4
------------INS SimpleName@@rootResource @TO@ FieldAccess@@this.rootResource @AT@ 3661 @LENGTH@ 12
---INS ReturnStatement@@ParenthesizedExpression:(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @TO@ MethodDeclaration@@public, ModelNode, MethodName:getIgnoredResourcesAsModel,  @AT@ 3683 @LENGTH@ 73
------INS ParenthesizedExpression@@(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @TO@ ReturnStatement@@ParenthesizedExpression:(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @AT@ 3690 @LENGTH@ 65
---------INS ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @TO@ ParenthesizedExpression@@(root == null ? new ModelNode() : Resource.Tools.readModel(root)) @AT@ 3691 @LENGTH@ 63
------------INS InfixExpression@@root == null @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3691 @LENGTH@ 12
---------------INS SimpleName@@root @TO@ InfixExpression@@root == null @AT@ 3691 @LENGTH@ 4
---------------INS Operator@@== @TO@ InfixExpression@@root == null @AT@ 3695 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@root == null @AT@ 3699 @LENGTH@ 4
------------INS ClassInstanceCreation@@ModelNode[] @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3706 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3706 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 3710 @LENGTH@ 9
------------INS MethodInvocation@@Resource.Tools.readModel(root) @TO@ ConditionalExpression@@root == null ? new ModelNode() : Resource.Tools.readModel(root) @AT@ 3724 @LENGTH@ 30
---------------INS QualifiedName@@Name:Resource.Tools @TO@ MethodInvocation@@Resource.Tools.readModel(root) @AT@ 3724 @LENGTH@ 14
---------------INS SimpleName@@MethodName:readModel:[root] @TO@ MethodInvocation@@Resource.Tools.readModel(root) @AT@ 3739 @LENGTH@ 15
------------------INS SimpleName@@root @TO@ SimpleName@@MethodName:readModel:[root] @AT@ 3749 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 3101 @LENGTH@ 87
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 3101 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("Unknown")] @AT@ 3101 @LENGTH@ 86
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 3168 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 3182 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:PERSISTENT.validateAndSet(operation,newModel) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4435 @LENGTH@ 47
---INS MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @TO@ ExpressionStatement@@MethodInvocation:PERSISTENT.validateAndSet(operation,newModel) @AT@ 4435 @LENGTH@ 46
------INS SimpleName@@Name:PERSISTENT @TO@ MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @AT@ 4435 @LENGTH@ 10
------INS SimpleName@@MethodName:validateAndSet:[operation, newModel] @TO@ MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @AT@ 4446 @LENGTH@ 35
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:validateAndSet:[operation, newModel] @AT@ 4461 @LENGTH@ 9
---------INS SimpleName@@newModel @TO@ SimpleName@@MethodName:validateAndSet:[operation, newModel] @AT@ 4472 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2760 @LENGTH@ 69
---UPD MethodInvocation@@setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2760 @LENGTH@ 68
------UPD SimpleName@@MethodName:setDefaultHandler:[GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.IGNORE_LB_ESCAPE_ON] @AT@ 2760 @LENGTH@ 68
---------UPD QualifiedName@@GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER @TO@ WordCharacterHandler.IGNORE_LB_ESCAPE_ON @AT@ 2778 @LENGTH@ 49
------------UPD SimpleName@@GlobalCharacterHandlers @TO@ WordCharacterHandler @AT@ 2778 @LENGTH@ 23
------------UPD SimpleName@@CONTENT_CHARACTER_HANDLER @TO@ IGNORE_LB_ESCAPE_ON @AT@ 2802 @LENGTH@ 25


UPD VariableDeclarationStatement@@Closure<List<? extends Number>> resultClosure=CollectionUtils.forAllDo(col,testClosure); @TO@ Closure<List<? extends Number>> resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure); @AT@ 22036 @LENGTH@ 91
---UPD VariableDeclarationFragment@@resultClosure=CollectionUtils.forAllDo(col,testClosure) @TO@ resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure) @AT@ 22068 @LENGTH@ 58
------UPD MethodInvocation@@CollectionUtils.forAllDo(col,testClosure) @TO@ CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,testClosure) @AT@ 22084 @LENGTH@ 42


UPD IfStatement@@if (ejbsForViewName.size() > 1) {  if (beanName == null) {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,bindingName,ejbsForViewName);  } else {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,beanName,bindingName,ejbsForViewName);  }  error="More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName;} else {  final EJBViewDescription description=ejbsForViewName.iterator().next();  final EJBViewDescription ejbViewDescription=(EJBViewDescription)description;  if (ejbViewDescription.getMethodIntf() == MethodIntf.REMOTE || ejbViewDescription.getMethodIntf() == MethodIntf.HOME) {    final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();    final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();    final String earApplicationName=moduleDescription.getEarApplicationName();    remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful());  }  final ServiceName serviceName=description.getServiceName();  resolvedViewName=serviceName;} @TO@ if (ejbsForViewName.size() > 1) {  if (beanName == null) {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,bindingName,ejbsForViewName);  } else {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,beanName,bindingName,ejbsForViewName);  }} else {  final EJBViewDescription description=ejbsForViewName.iterator().next();  final EJBViewDescription ejbViewDescription=(EJBViewDescription)description;  if (ejbViewDescription.getMethodIntf() == MethodIntf.REMOTE || ejbViewDescription.getMethodIntf() == MethodIntf.HOME) {    final EJBComponentDescription componentDescription=(EJBComponentDescription)description.getComponentDescription();    final EEModuleDescription moduleDescription=componentDescription.getModuleDescription();    final String earApplicationName=moduleDescription.getEarApplicationName();    remoteFactory=new RemoteViewManagedReferenceFactory(earApplicationName,moduleDescription.getModuleName(),moduleDescription.getDistinctName(),componentDescription.getComponentName(),description.getViewClassName(),componentDescription.isStateful());  }  final ServiceName serviceName=description.getServiceName();  resolvedViewName=serviceName;} @AT@ 5893 @LENGTH@ 1955
---UPD Block@@ThenBody:{  if (beanName == null) {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,bindingName,ejbsForViewName);  } else {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,beanName,bindingName,ejbsForViewName);  }  error="More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName;} @TO@ ThenBody:{  if (beanName == null) {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,bindingName,ejbsForViewName);  } else {    error=EjbMessages.MESSAGES.moreThanOneEjbFound(typeName,beanName,bindingName,ejbsForViewName);  }} @AT@ 5925 @LENGTH@ 525
------DEL ExpressionStatement@@Assignment:error="More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName @AT@ 6304 @LENGTH@ 124
---------DEL Assignment@@error="More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName @AT@ 6304 @LENGTH@ 123
------------DEL SimpleName@@error @AT@ 6304 @LENGTH@ 5
------------DEL Operator@@= @AT@ 6309 @LENGTH@ 1
------------DEL InfixExpression@@"More than 1 component found for type '" + typeName + "' and bean name "+ beanName+ " for binding "+ bindingName @AT@ 6312 @LENGTH@ 115
---------------DEL StringLiteral@@"More than 1 component found for type '" @AT@ 6312 @LENGTH@ 40
---------------DEL Operator@@+ @AT@ 6352 @LENGTH@ 1
---------------DEL SimpleName@@typeName @AT@ 6355 @LENGTH@ 8
---------------DEL StringLiteral@@"' and bean name " @AT@ 6366 @LENGTH@ 18
---------------DEL SimpleName@@beanName @AT@ 6387 @LENGTH@ 8
---------------DEL StringLiteral@@" for binding " @AT@ 6398 @LENGTH@ 15
---------------DEL SimpleName@@bindingName @AT@ 6416 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:restTemplate.getForObject(buildUri("account/rate_limit_status.json","resources",joinedResources),RateLimitStatusHolder.class).getRateLimits() @TO@ MethodInvocation:restTemplate.getForObject(buildUri("application/rate_limit_status.json","resources",joinedResources),RateLimitStatusHolder.class).getRateLimits() @AT@ 3926 @LENGTH@ 152
---UPD MethodInvocation@@restTemplate.getForObject(buildUri("account/rate_limit_status.json","resources",joinedResources),RateLimitStatusHolder.class).getRateLimits() @TO@ restTemplate.getForObject(buildUri("application/rate_limit_status.json","resources",joinedResources),RateLimitStatusHolder.class).getRateLimits() @AT@ 3933 @LENGTH@ 144
------UPD MethodInvocation@@MethodName:getForObject:[buildUri("account/rate_limit_status.json","resources",joinedResources), RateLimitStatusHolder.class] @TO@ MethodName:getForObject:[buildUri("application/rate_limit_status.json","resources",joinedResources), RateLimitStatusHolder.class] @AT@ 3933 @LENGTH@ 128
---------UPD MethodInvocation@@buildUri("account/rate_limit_status.json","resources",joinedResources) @TO@ buildUri("application/rate_limit_status.json","resources",joinedResources) @AT@ 3959 @LENGTH@ 72
------------UPD SimpleName@@MethodName:buildUri:["account/rate_limit_status.json", "resources", joinedResources] @TO@ MethodName:buildUri:["application/rate_limit_status.json", "resources", joinedResources] @AT@ 3959 @LENGTH@ 72
---------------UPD StringLiteral@@"account/rate_limit_status.json" @TO@ "application/rate_limit_status.json" @AT@ 3968 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2641 @LENGTH@ 69
---UPD MethodInvocation@@setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2641 @LENGTH@ 68
------UPD SimpleName@@MethodName:setDefaultHandler:[GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.IGNORE_LB_ESCAPE_ON] @AT@ 2641 @LENGTH@ 68
---------UPD QualifiedName@@GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER @TO@ WordCharacterHandler.IGNORE_LB_ESCAPE_ON @AT@ 2659 @LENGTH@ 49
------------UPD SimpleName@@GlobalCharacterHandlers @TO@ WordCharacterHandler @AT@ 2659 @LENGTH@ 23
------------UPD SimpleName@@CONTENT_CHARACTER_HANDLER @TO@ IGNORE_LB_ESCAPE_ON @AT@ 2683 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @TO@ TypeDeclaration@@[public]SjmsEndpointTest, CamelTestSupport @AT@ 5716 @LENGTH@ 341
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5716 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5723 @LENGTH@ 4
---INS SimpleName@@MethodName:testDestinationName @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5728 @LENGTH@ 19
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5757 @LENGTH@ 9
---INS VariableDeclarationStatement@@Endpoint endpoint=context.getEndpoint("sjms:queue:test?synchronous=true"); @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5777 @LENGTH@ 76
------INS SimpleType@@Endpoint @TO@ VariableDeclarationStatement@@Endpoint endpoint=context.getEndpoint("sjms:queue:test?synchronous=true"); @AT@ 5777 @LENGTH@ 8
------INS VariableDeclarationFragment@@endpoint=context.getEndpoint("sjms:queue:test?synchronous=true") @TO@ VariableDeclarationStatement@@Endpoint endpoint=context.getEndpoint("sjms:queue:test?synchronous=true"); @AT@ 5786 @LENGTH@ 66
---------INS SimpleName@@endpoint @TO@ VariableDeclarationFragment@@endpoint=context.getEndpoint("sjms:queue:test?synchronous=true") @AT@ 5786 @LENGTH@ 8
---------INS MethodInvocation@@context.getEndpoint("sjms:queue:test?synchronous=true") @TO@ VariableDeclarationFragment@@endpoint=context.getEndpoint("sjms:queue:test?synchronous=true") @AT@ 5797 @LENGTH@ 55
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getEndpoint("sjms:queue:test?synchronous=true") @AT@ 5797 @LENGTH@ 7
------------INS SimpleName@@MethodName:getEndpoint:["sjms:queue:test?synchronous=true"] @TO@ MethodInvocation@@context.getEndpoint("sjms:queue:test?synchronous=true") @AT@ 5805 @LENGTH@ 47
---------------INS StringLiteral@@"sjms:queue:test?synchronous=true" @TO@ SimpleName@@MethodName:getEndpoint:["sjms:queue:test?synchronous=true"] @AT@ 5817 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:assertNotNull(endpoint) @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5862 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(endpoint) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(endpoint) @AT@ 5862 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[endpoint] @TO@ MethodInvocation@@assertNotNull(endpoint) @AT@ 5862 @LENGTH@ 23
------------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:assertNotNull:[endpoint] @AT@ 5876 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertTrue(endpoint instanceof SjmsEndpoint) @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5895 @LENGTH@ 45
------INS MethodInvocation@@assertTrue(endpoint instanceof SjmsEndpoint) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(endpoint instanceof SjmsEndpoint) @AT@ 5895 @LENGTH@ 44
---------INS SimpleName@@MethodName:assertTrue:[endpoint instanceof SjmsEndpoint] @TO@ MethodInvocation@@assertTrue(endpoint instanceof SjmsEndpoint) @AT@ 5895 @LENGTH@ 44
------------INS InstanceofExpression@@endpoint instanceof SjmsEndpoint @TO@ SimpleName@@MethodName:assertTrue:[endpoint instanceof SjmsEndpoint] @AT@ 5906 @LENGTH@ 32
---------------INS SimpleName@@endpoint @TO@ InstanceofExpression@@endpoint instanceof SjmsEndpoint @AT@ 5906 @LENGTH@ 8
---------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@endpoint instanceof SjmsEndpoint @AT@ 5915 @LENGTH@ 10
---------------INS SimpleType@@SjmsEndpoint @TO@ InstanceofExpression@@endpoint instanceof SjmsEndpoint @AT@ 5926 @LENGTH@ 12
---INS VariableDeclarationStatement@@SjmsEndpoint qe=(SjmsEndpoint)endpoint; @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 5949 @LENGTH@ 42
------INS SimpleType@@SjmsEndpoint @TO@ VariableDeclarationStatement@@SjmsEndpoint qe=(SjmsEndpoint)endpoint; @AT@ 5949 @LENGTH@ 12
------INS VariableDeclarationFragment@@qe=(SjmsEndpoint)endpoint @TO@ VariableDeclarationStatement@@SjmsEndpoint qe=(SjmsEndpoint)endpoint; @AT@ 5962 @LENGTH@ 28
---------INS SimpleName@@qe @TO@ VariableDeclarationFragment@@qe=(SjmsEndpoint)endpoint @AT@ 5962 @LENGTH@ 2
---------INS CastExpression@@(SjmsEndpoint)endpoint @TO@ VariableDeclarationFragment@@qe=(SjmsEndpoint)endpoint @AT@ 5967 @LENGTH@ 23
------------INS SimpleType@@SjmsEndpoint @TO@ CastExpression@@(SjmsEndpoint)endpoint @AT@ 5968 @LENGTH@ 12
------------INS SimpleName@@endpoint @TO@ CastExpression@@(SjmsEndpoint)endpoint @AT@ 5982 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertTrue(qe.getDestinationName().equals("test")) @TO@ MethodDeclaration@@public, void, MethodName:testDestinationName, Exception,  @AT@ 6000 @LENGTH@ 51
------INS MethodInvocation@@assertTrue(qe.getDestinationName().equals("test")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(qe.getDestinationName().equals("test")) @AT@ 6000 @LENGTH@ 50
---------INS SimpleName@@MethodName:assertTrue:[qe.getDestinationName().equals("test")] @TO@ MethodInvocation@@assertTrue(qe.getDestinationName().equals("test")) @AT@ 6000 @LENGTH@ 50
------------INS MethodInvocation@@qe.getDestinationName().equals("test") @TO@ SimpleName@@MethodName:assertTrue:[qe.getDestinationName().equals("test")] @AT@ 6011 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getDestinationName:[] @TO@ MethodInvocation@@qe.getDestinationName().equals("test") @AT@ 6011 @LENGTH@ 23
---------------INS SimpleName@@Name:qe @TO@ MethodInvocation@@qe.getDestinationName().equals("test") @AT@ 6011 @LENGTH@ 2
---------------INS SimpleName@@MethodName:equals:["test"] @TO@ MethodInvocation@@qe.getDestinationName().equals("test") @AT@ 6035 @LENGTH@ 14
------------------INS StringLiteral@@"test" @TO@ SimpleName@@MethodName:equals:["test"] @AT@ 6042 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[public]ArgumentValueState, DefaultParsingState @AT@ 3119 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3119 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3126 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3134 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 3161 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3168 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:hostRegistration.registerSubModel(HostControllerResourceDescription.of(environment)) @TO@ MethodInvocation:hostRegistration.registerSubModel(HostEnvironmentResourceDescription.of(environment)) @AT@ 19243 @LENGTH@ 85
---UPD MethodInvocation@@hostRegistration.registerSubModel(HostControllerResourceDescription.of(environment)) @TO@ hostRegistration.registerSubModel(HostEnvironmentResourceDescription.of(environment)) @AT@ 19243 @LENGTH@ 84
------UPD SimpleName@@MethodName:registerSubModel:[HostControllerResourceDescription.of(environment)] @TO@ MethodName:registerSubModel:[HostEnvironmentResourceDescription.of(environment)] @AT@ 19260 @LENGTH@ 67
---------UPD MethodInvocation@@HostControllerResourceDescription.of(environment) @TO@ HostEnvironmentResourceDescription.of(environment) @AT@ 19277 @LENGTH@ 49
------------UPD SimpleName@@Name:HostControllerResourceDescription @TO@ Name:HostEnvironmentResourceDescription @AT@ 19277 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2641 @LENGTH@ 69
---UPD MethodInvocation@@setDefaultHandler(GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER) @TO@ setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @AT@ 2641 @LENGTH@ 68
------UPD SimpleName@@MethodName:setDefaultHandler:[GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.IGNORE_LB_ESCAPE_ON] @AT@ 2641 @LENGTH@ 68
---------UPD QualifiedName@@GlobalCharacterHandlers.CONTENT_CHARACTER_HANDLER @TO@ WordCharacterHandler.IGNORE_LB_ESCAPE_ON @AT@ 2659 @LENGTH@ 49
------------UPD SimpleName@@GlobalCharacterHandlers @TO@ WordCharacterHandler @AT@ 2659 @LENGTH@ 23
------------UPD SimpleName@@CONTENT_CHARACTER_HANDLER @TO@ IGNORE_LB_ESCAPE_ON @AT@ 2683 @LENGTH@ 25


UPD FieldDeclaration@@private, final, Map<CamelContext,ServiceRegistration>, [registrations=new ConcurrentHashMap<CamelContext,ServiceRegistration>()] @TO@ private, final, Map<CamelContext,ServiceRegistration<?>>, [registrations=new ConcurrentHashMap<CamelContext,ServiceRegistration<?>>()] @AT@ 1930 @LENGTH@ 128
---UPD ParameterizedType@@Map<CamelContext,ServiceRegistration> @TO@ Map<CamelContext,ServiceRegistration<?>> @AT@ 1944 @LENGTH@ 38
------INS ParameterizedType@@ServiceRegistration<?> @TO@ ParameterizedType@@Map<CamelContext,ServiceRegistration> @AT@ 1961 @LENGTH@ 22
---------MOV SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1962 @LENGTH@ 19
---------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 1981 @LENGTH@ 1
---UPD VariableDeclarationFragment@@registrations=new ConcurrentHashMap<CamelContext,ServiceRegistration>() @TO@ registrations=new ConcurrentHashMap<CamelContext,ServiceRegistration<?>>() @AT@ 1983 @LENGTH@ 74
------UPD ClassInstanceCreation@@ConcurrentHashMap<CamelContext,ServiceRegistration>[] @TO@ ConcurrentHashMap<CamelContext,ServiceRegistration<?>>[] @AT@ 1999 @LENGTH@ 58
---------UPD ParameterizedType@@ConcurrentHashMap<CamelContext,ServiceRegistration> @TO@ ConcurrentHashMap<CamelContext,ServiceRegistration<?>> @AT@ 2003 @LENGTH@ 52
------------INS ParameterizedType@@ServiceRegistration<?> @TO@ ParameterizedType@@ConcurrentHashMap<CamelContext,ServiceRegistration> @AT@ 2037 @LENGTH@ 22
---------------MOV SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2035 @LENGTH@ 19
---------------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2057 @LENGTH@ 1


INS MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @TO@ TypeDeclaration@@[public, abstract]AbstractControllerService, [Service<ModelController>] @AT@ 11307 @LENGTH@ 40
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11307 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11317 @LENGTH@ 4
---INS SimpleName@@MethodName:bootThreadDone @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 11322 @LENGTH@ 14


UPD VariableDeclarationStatement@@String testFileDir="file://" + conf.get("test.data.files").replace('\\','/').replace("c:",""); @TO@ String testFileDir=new Path(conf.get("test.data.files")).toUri().getPath(); @AT@ 2979 @LENGTH@ 108
---UPD VariableDeclarationFragment@@testFileDir="file://" + conf.get("test.data.files").replace('\\','/').replace("c:","") @TO@ testFileDir=new Path(conf.get("test.data.files")).toUri().getPath() @AT@ 2986 @LENGTH@ 100
------DEL InfixExpression@@"file://" + conf.get("test.data.files").replace('\\','/').replace("c:","") @AT@ 3000 @LENGTH@ 86
---------DEL StringLiteral@@"file://" @AT@ 3000 @LENGTH@ 9
---------DEL Operator@@+ @AT@ 3009 @LENGTH@ 1
---------DEL MethodInvocation@@conf.get("test.data.files").replace('\\','/').replace("c:","") @AT@ 3022 @LENGTH@ 64
------------DEL MethodInvocation@@MethodName:get:["test.data.files"] @AT@ 3022 @LENGTH@ 27
---------------DEL StringLiteral@@"test.data.files" @AT@ 3031 @LENGTH@ 17
------INS MethodInvocation@@new Path(conf.get("test.data.files")).toUri().getPath() @TO@ VariableDeclarationFragment@@testFileDir="file://" + conf.get("test.data.files").replace('\\','/').replace("c:","") @AT@ 3000 @LENGTH@ 55
---------INS ClassInstanceCreation@@Path[conf.get("test.data.files")] @TO@ MethodInvocation@@new Path(conf.get("test.data.files")).toUri().getPath() @AT@ 3000 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@Path[conf.get("test.data.files")] @AT@ 3000 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[conf.get("test.data.files")] @AT@ 3004 @LENGTH@ 4
------------INS MethodInvocation@@conf.get("test.data.files") @TO@ ClassInstanceCreation@@Path[conf.get("test.data.files")] @AT@ 3009 @LENGTH@ 27
---------------INS SimpleName@@MethodName:get:["test.data.files"] @TO@ MethodInvocation@@conf.get("test.data.files") @AT@ 3014 @LENGTH@ 22
------------------INS StringLiteral@@"test.data.files" @TO@ SimpleName@@MethodName:get:["test.data.files"] @AT@ 3018 @LENGTH@ 17
---------------MOV SimpleName@@Name:conf @TO@ MethodInvocation@@conf.get("test.data.files") @AT@ 3022 @LENGTH@ 4
---------MOV MethodInvocation@@MethodName:replace:['\\', '/'] @TO@ MethodInvocation@@new Path(conf.get("test.data.files")).toUri().getPath() @AT@ 3022 @LENGTH@ 46
---------MOV SimpleName@@MethodName:replace:["c:", ""] @TO@ MethodInvocation@@new Path(conf.get("test.data.files")).toUri().getPath() @AT@ 3069 @LENGTH@ 17


MOV FieldDeclaration@@private, static, final, String, [RESOURCE_NAME=LoggingExtension.class.getPackage().getName() + ".LocalDescriptions"] @TO@ TypeDeclaration@@[public]LoggingExtension, [Extension] @AT@ 3308 @LENGTH@ 113


UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @TO@ MethodInvocation:setDefaultHandler(WordCharacterHandler.LB_LEAVE_ESCAPE_ON) @AT@ 1636 @LENGTH@ 60
---UPD MethodInvocation@@setDefaultHandler(WordCharacterHandler.IGNORE_LB_ESCAPE_ON) @TO@ setDefaultHandler(WordCharacterHandler.LB_LEAVE_ESCAPE_ON) @AT@ 1636 @LENGTH@ 59
------UPD SimpleName@@MethodName:setDefaultHandler:[WordCharacterHandler.IGNORE_LB_ESCAPE_ON] @TO@ MethodName:setDefaultHandler:[WordCharacterHandler.LB_LEAVE_ESCAPE_ON] @AT@ 1636 @LENGTH@ 59
---------UPD QualifiedName@@WordCharacterHandler.IGNORE_LB_ESCAPE_ON @TO@ WordCharacterHandler.LB_LEAVE_ESCAPE_ON @AT@ 1654 @LENGTH@ 40
------------UPD SimpleName@@IGNORE_LB_ESCAPE_ON @TO@ LB_LEAVE_ESCAPE_ON @AT@ 1675 @LENGTH@ 19


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build()] @AT@ 2493 @LENGTH@ 216
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build() @AT@ 2533 @LENGTH@ 175
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setReplyParameters(URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("schema-locations")).setParameters(URI).build() @AT@ 2546 @LENGTH@ 162
---------UPD MethodInvocation@@MethodName:setReplyParameters:[URI] @TO@ MethodName:setParameters:[URI] @AT@ 2546 @LENGTH@ 141


UPD Block@@ThenBody:{  ModelNode ret=operation.clone();  final List<ModelNode> list=new ArrayList<ModelNode>(ret.get(STEPS).asList());  ListIterator<ModelNode> it=list.listIterator();  while (it.hasNext()) {    final ModelNode subOperation=it.next();    transform(context,subOperation);  }  ret.get(STEPS).set(list);  return ret;} @TO@ ThenBody:{  ModelNode ret=operation.clone();  final List<ModelNode> list=new ArrayList<ModelNode>();  ListIterator<ModelNode> it=ret.get(STEPS).asList().listIterator();  while (it.hasNext()) {    final ModelNode subOperation=it.next();    list.add(transform(context,subOperation));  }  ret.get(STEPS).set(list);  return ret;} @AT@ 2033 @LENGTH@ 431
---UPD VariableDeclarationStatement@@final List<ModelNode> list=new ArrayList<ModelNode>(ret.get(STEPS).asList()); @TO@ final List<ModelNode> list=new ArrayList<ModelNode>(); @AT@ 2094 @LENGTH@ 79
------UPD VariableDeclarationFragment@@list=new ArrayList<ModelNode>(ret.get(STEPS).asList()) @TO@ list=new ArrayList<ModelNode>() @AT@ 2116 @LENGTH@ 56
---------UPD ClassInstanceCreation@@ArrayList<ModelNode>[ret.get(STEPS).asList()] @TO@ ArrayList<ModelNode>[] @AT@ 2123 @LENGTH@ 49
------------DEL MethodInvocation@@ret.get(STEPS).asList() @AT@ 2148 @LENGTH@ 23
---------------DEL MethodInvocation@@MethodName:get:[STEPS] @AT@ 2148 @LENGTH@ 14
------------------DEL SimpleName@@STEPS @AT@ 2156 @LENGTH@ 5
---------------DEL SimpleName@@Name:ret @AT@ 2148 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:asList:[] @AT@ 2163 @LENGTH@ 8
---UPD VariableDeclarationStatement@@ListIterator<ModelNode> it=list.listIterator(); @TO@ ListIterator<ModelNode> it=ret.get(STEPS).asList().listIterator(); @AT@ 2186 @LENGTH@ 49
------UPD VariableDeclarationFragment@@it=list.listIterator() @TO@ it=ret.get(STEPS).asList().listIterator() @AT@ 2210 @LENGTH@ 24
---------UPD MethodInvocation@@list.listIterator() @TO@ ret.get(STEPS).asList().listIterator() @AT@ 2215 @LENGTH@ 19
------------INS MethodInvocation@@MethodName:asList:[] @TO@ MethodInvocation@@list.listIterator() @AT@ 2192 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:get:[STEPS] @TO@ MethodInvocation@@list.listIterator() @AT@ 2192 @LENGTH@ 14
---------------INS SimpleName@@STEPS @TO@ MethodInvocation@@MethodName:get:[STEPS] @AT@ 2200 @LENGTH@ 5
------------UPD SimpleName@@Name:list @TO@ Name:ret @AT@ 2215 @LENGTH@ 4
---UPD WhileStatement@@while (it.hasNext()) {  final ModelNode subOperation=it.next();  transform(context,subOperation);} @TO@ while (it.hasNext()) {  final ModelNode subOperation=it.next();  list.add(transform(context,subOperation));} @AT@ 2248 @LENGTH@ 144
------UPD Block@@WhileBody:{  final ModelNode subOperation=it.next();  transform(context,subOperation);} @TO@ WhileBody:{  final ModelNode subOperation=it.next();  list.add(transform(context,subOperation));} @AT@ 2269 @LENGTH@ 123
---------UPD ExpressionStatement@@MethodInvocation:transform(context,subOperation) @TO@ MethodInvocation:list.add(transform(context,subOperation)) @AT@ 2345 @LENGTH@ 33
------------INS MethodInvocation@@list.add(transform(context,subOperation)) @TO@ ExpressionStatement@@MethodInvocation:transform(context,subOperation) @AT@ 2341 @LENGTH@ 42
---------------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(transform(context,subOperation)) @AT@ 2341 @LENGTH@ 4
---------------INS SimpleName@@MethodName:add:[transform(context,subOperation)] @TO@ MethodInvocation@@list.add(transform(context,subOperation)) @AT@ 2346 @LENGTH@ 37
------------------MOV MethodInvocation@@transform(context,subOperation) @TO@ SimpleName@@MethodName:add:[transform(context,subOperation)] @AT@ 2345 @LENGTH@ 32
------------------MOV MethodInvocation@@transform(context,subOperation) @TO@ SimpleName@@MethodName:add:[transform(context,subOperation)] @AT@ 2345 @LENGTH@ 32


INS ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @TO@ MethodDeclaration@@public, void, MethodName:testPatch, Exception,  @AT@ 6235 @LENGTH@ 45
---INS MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @TO@ ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @AT@ 6235 @LENGTH@ 44
------INS MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 6235 @LENGTH@ 28
---------INS MethodInvocation@@bundle.getBundleId() @TO@ MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @AT@ 6242 @LENGTH@ 20
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 6242 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBundleId:[] @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 6249 @LENGTH@ 13
------INS SimpleName@@MethodName:andReturn:[123L] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 6264 @LENGTH@ 15
---------INS NumberLiteral@@123L @TO@ SimpleName@@MethodName:andReturn:[123L] @AT@ 6274 @LENGTH@ 4


UPD VariableDeclarationStatement@@final ServiceName serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(name); @TO@ final ServiceName serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name); @AT@ 2771 @LENGTH@ 87
---UPD VariableDeclarationFragment@@serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(name) @TO@ serviceName=DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name) @AT@ 2789 @LENGTH@ 68
------UPD MethodInvocation@@DeploymentOverlayLinkService.SERVICE_NAME.append(name) @TO@ DeploymentOverlayLinkService.SERVICE_NAME.append(deploymentOverlay).append(name) @AT@ 2803 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:append:[deploymentOverlay] @TO@ MethodInvocation@@DeploymentOverlayLinkService.SERVICE_NAME.append(name) @AT@ 2803 @LENGTH@ 67
------------INS SimpleName@@deploymentOverlay @TO@ MethodInvocation@@MethodName:append:[deploymentOverlay] @AT@ 2852 @LENGTH@ 17


UPD IfStatement@@if (ensembleAutoStart) {  createLocalServer();} @TO@ if (ensembleAutoStart) {  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2342 @LENGTH@ 67
---UPD Block@@ThenBody:{  createLocalServer();} @TO@ ThenBody:{  new Thread(new Runnable(){    @Override public void run(){      createLocalServer();    }  }).start();} @AT@ 2365 @LENGTH@ 44
------INS ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ Block@@ThenBody:{  createLocalServer();} @AT@ 2379 @LENGTH@ 172
---------INS MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @TO@ ExpressionStatement@@MethodInvocation:new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2379 @LENGTH@ 171
------------INS ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2379 @LENGTH@ 163
---------------INS New@@new @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2379 @LENGTH@ 3
---------------INS SimpleType@@Thread @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2383 @LENGTH@ 6
---------------INS ClassInstanceCreation@@Runnable[] @TO@ ClassInstanceCreation@@Thread[new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
] @AT@ 2390 @LENGTH@ 151
------------------INS New@@new @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2390 @LENGTH@ 3
------------------INS SimpleType@@Runnable @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2394 @LENGTH@ 8
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Runnable[] @AT@ 2405 @LENGTH@ 136
---------------------INS MethodDeclaration@@public, void, MethodName:run,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2449 @LENGTH@ 78
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2449 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2456 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:run @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2461 @LENGTH@ 3
------------------------INS ExpressionStatement@@MethodInvocation:createLocalServer() @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2489 @LENGTH@ 20
---------------------------MOV MethodInvocation@@MethodName:createLocalServer:[] @TO@ ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2379 @LENGTH@ 19
------------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@new Thread(new Runnable(){
  @Override public void run(){
    createLocalServer();
  }
}
).start() @AT@ 2543 @LENGTH@ 7
------DEL ExpressionStatement@@MethodInvocation:createLocalServer() @AT@ 2379 @LENGTH@ 20


INS FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @TO@ TypeDeclaration@@[public]ValidateOperationHandler, [OperationStepHandler] @AT@ 3316 @LENGTH@ 303
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3316 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3323 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3330 @LENGTH@ 5
---INS SimpleType@@OperationDefinition @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3336 @LENGTH@ 19
---INS VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @TO@ FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build()] @AT@ 3356 @LENGTH@ 262
------INS SimpleName@@DEFINITION_PRIVATE @TO@ VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3356 @LENGTH@ 18
------INS MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @TO@ VariableDeclarationFragment@@DEFINITION_PRIVATE=new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 241
---------INS MethodInvocation@@MethodName:setPrivateEntry:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 220
---------INS MethodInvocation@@MethodName:setRuntimeOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 189
---------INS MethodInvocation@@MethodName:setReadOnly:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 159
---------INS MethodInvocation@@MethodName:setParameters:[VALUE] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 132
------------INS SimpleName@@VALUE @TO@ MethodInvocation@@MethodName:setParameters:[VALUE] @AT@ 3503 @LENGTH@ 5
---------INS ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3377 @LENGTH@ 98
------------INS New@@new @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3377 @LENGTH@ 3
------------INS SimpleType@@SimpleOperationDefinitionBuilder @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3381 @LENGTH@ 32
------------INS SimpleName@@VALIDATE_OPERATION @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3414 @LENGTH@ 18
------------INS MethodInvocation@@ControllerResolver.getResolver("global") @TO@ ClassInstanceCreation@@SimpleOperationDefinitionBuilder[VALIDATE_OPERATION, ControllerResolver.getResolver("global")] @AT@ 3434 @LENGTH@ 40
---------------INS SimpleName@@Name:ControllerResolver @TO@ MethodInvocation@@ControllerResolver.getResolver("global") @AT@ 3434 @LENGTH@ 18
---------------INS SimpleName@@MethodName:getResolver:["global"] @TO@ MethodInvocation@@ControllerResolver.getResolver("global") @AT@ 3453 @LENGTH@ 21
------------------INS StringLiteral@@"global" @TO@ SimpleName@@MethodName:getResolver:["global"] @AT@ 3465 @LENGTH@ 8
---------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new SimpleOperationDefinitionBuilder(VALIDATE_OPERATION,ControllerResolver.getResolver("global")).setParameters(VALUE).setReadOnly().setRuntimeOnly().setPrivateEntry().build() @AT@ 3611 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @TO@ protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2417 @LENGTH@ 309
---UPD Modifier@@public @TO@ protected @AT@ 2417 @LENGTH@ 6
---UPD SimpleName@@MethodName:handle @TO@ MethodName:doHandle @AT@ 2429 @LENGTH@ 6


UPD SuperConstructorInvocation@@super(PathElement.pathElement("session"),new TestResourceDescriptionResolver());
 @TO@ super(PathElement.pathElement("session"),new NonResolvingResourceDescriptionResolver());
 @AT@ 1010 @LENGTH@ 81
---UPD ClassInstanceCreation@@TestResourceDescriptionResolver[] @TO@ NonResolvingResourceDescriptionResolver[] @AT@ 1052 @LENGTH@ 37
------UPD SimpleType@@TestResourceDescriptionResolver @TO@ NonResolvingResourceDescriptionResolver @AT@ 1056 @LENGTH@ 31


MOV IfStatement@@if (!operation.hasDefined(PERSISTENT.getName())) {  operation.get(PERSISTENT.getName()).set(true);} @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4171 @LENGTH@ 119


UPD MethodDeclaration@@public, void, MethodName:testDestroy,  @TO@ public, void, MethodName:testDestroy, InterruptedException,  @AT@ 2242 @LENGTH@ 186
---INS SimpleType@@InterruptedException @TO@ MethodDeclaration@@public, void, MethodName:testDestroy,  @AT@ 2275 @LENGTH@ 20
---UPD ExpressionStatement@@MethodInvocation:assertTrue(Hazelcast.getInstances().isEmpty()) @TO@ MethodInvocation:assertEquals(0,body) @AT@ 2375 @LENGTH@ 47
------UPD MethodInvocation@@assertTrue(Hazelcast.getInstances().isEmpty()) @TO@ assertEquals(0,body) @AT@ 2375 @LENGTH@ 46
---------UPD SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @TO@ MethodName:assertEquals:[0, body] @AT@ 2375 @LENGTH@ 46
------------DEL MethodInvocation@@Hazelcast.getInstances().isEmpty() @AT@ 2386 @LENGTH@ 34
---------------DEL MethodInvocation@@MethodName:getInstances:[] @AT@ 2386 @LENGTH@ 24
---------------DEL SimpleName@@Name:Hazelcast @AT@ 2386 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:isEmpty:[] @AT@ 2411 @LENGTH@ 9
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @AT@ 2520 @LENGTH@ 1
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertTrue:[Hazelcast.getInstances().isEmpty()] @AT@ 2523 @LENGTH@ 4
---INS VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @TO@ MethodDeclaration@@public, void, MethodName:testDestroy,  @AT@ 2402 @LENGTH@ 65
------INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @AT@ 2402 @LENGTH@ 4
------INS VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @TO@ VariableDeclarationStatement@@long body=template.requestBody("direct:get",null,Long.class); @AT@ 2407 @LENGTH@ 59
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @AT@ 2407 @LENGTH@ 4
---------INS MethodInvocation@@template.requestBody("direct:get",null,Long.class) @TO@ VariableDeclarationFragment@@body=template.requestBody("direct:get",null,Long.class) @AT@ 2414 @LENGTH@ 52
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.requestBody("direct:get",null,Long.class) @AT@ 2414 @LENGTH@ 8
------------INS SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @TO@ MethodInvocation@@template.requestBody("direct:get",null,Long.class) @AT@ 2423 @LENGTH@ 43
---------------INS StringLiteral@@"direct:get" @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2435 @LENGTH@ 12
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2449 @LENGTH@ 4
---------------INS TypeLiteral@@Long.class @TO@ SimpleName@@MethodName:requestBody:["direct:get", null, Long.class] @AT@ 2455 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:assertEquals("Bye Camel",reply2) @TO@ MethodDeclaration@@public, void, MethodName:testProxy, Exception,  @AT@ 1784 @LENGTH@ 34
---INS MethodInvocation@@assertEquals("Bye Camel",reply2) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye Camel",reply2) @AT@ 1784 @LENGTH@ 33
------INS SimpleName@@MethodName:assertEquals:["Bye Camel", reply2] @TO@ MethodInvocation@@assertEquals("Bye Camel",reply2) @AT@ 1784 @LENGTH@ 33
---------INS StringLiteral@@"Bye Camel" @TO@ SimpleName@@MethodName:assertEquals:["Bye Camel", reply2] @AT@ 1797 @LENGTH@ 11
---------INS SimpleName@@reply2 @TO@ SimpleName@@MethodName:assertEquals:["Bye Camel", reply2] @AT@ 1810 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:doSomething,  @TO@ void, MethodName:doSomething,  @AT@ 3016 @LENGTH@ 26
---DEL Modifier@@public @AT@ 3016 @LENGTH@ 6


UPD Block@@ThenBody:{  result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,sb == null ? null : sb.toString());} @TO@ ThenBody:{  final String comment=sb == null ? null : sb.toString();  result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,comment);} @AT@ 6340 @LENGTH@ 160
---UPD ExpressionStatement@@Assignment:result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,sb == null ? null : sb.toString()) @TO@ Assignment:result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,comment) @AT@ 6354 @LENGTH@ 136
------UPD Assignment@@result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,sb == null ? null : sb.toString()) @TO@ result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,comment) @AT@ 6354 @LENGTH@ 135
---------UPD ClassInstanceCreation@@CSVRecord[record.toArray(new String[record.size()]), headerMapping, sb == null ? null : sb.toString()] @TO@ CSVRecord[record.toArray(new String[record.size()]), headerMapping, comment] @AT@ 6363 @LENGTH@ 126
------------INS SimpleName@@comment @TO@ ClassInstanceCreation@@CSVRecord[record.toArray(new String[record.size()]), headerMapping, sb == null ? null : sb.toString()] @AT@ 6505 @LENGTH@ 7
---INS VariableDeclarationStatement@@final String comment=sb == null ? null : sb.toString(); @TO@ Block@@ThenBody:{  result=new CSVRecord(record.toArray(new String[record.size()]),headerMapping,sb == null ? null : sb.toString());} @AT@ 6354 @LENGTH@ 57
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final String comment=sb == null ? null : sb.toString(); @AT@ 6354 @LENGTH@ 5
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@final String comment=sb == null ? null : sb.toString(); @AT@ 6360 @LENGTH@ 6
------INS VariableDeclarationFragment@@comment=sb == null ? null : sb.toString() @TO@ VariableDeclarationStatement@@final String comment=sb == null ? null : sb.toString(); @AT@ 6367 @LENGTH@ 43
---------INS SimpleName@@comment @TO@ VariableDeclarationFragment@@comment=sb == null ? null : sb.toString() @AT@ 6367 @LENGTH@ 7
---------MOV ConditionalExpression@@sb == null ? null : sb.toString() @TO@ VariableDeclarationFragment@@comment=sb == null ? null : sb.toString() @AT@ 6435 @LENGTH@ 53


UPD ReturnStatement@@ClassInstanceCreation:new HashSet<Object>() @TO@ MethodInvocation:getPotentiallyConvertedSimpleRead(new HashSet<Object>(),collectionType) @AT@ 25755 @LENGTH@ 29
---INS MethodInvocation@@getPotentiallyConvertedSimpleRead(new HashSet<Object>(),collectionType) @TO@ ReturnStatement@@ClassInstanceCreation:new HashSet<Object>() @AT@ 25813 @LENGTH@ 72
------INS SimpleName@@MethodName:getPotentiallyConvertedSimpleRead:[new HashSet<Object>(), collectionType] @TO@ MethodInvocation@@getPotentiallyConvertedSimpleRead(new HashSet<Object>(),collectionType) @AT@ 25813 @LENGTH@ 72
---------MOV ClassInstanceCreation@@HashSet<Object>[] @TO@ SimpleName@@MethodName:getPotentiallyConvertedSimpleRead:[new HashSet<Object>(), collectionType] @AT@ 25762 @LENGTH@ 21
---------INS SimpleName@@collectionType @TO@ SimpleName@@MethodName:getPotentiallyConvertedSimpleRead:[new HashSet<Object>(), collectionType] @AT@ 25870 @LENGTH@ 14


UPD MethodDeclaration@@public, Result, MethodName:install,  @TO@ public, Result, MethodName:install, boolean force, boolean synchronous,  @AT@ 1766 @LENGTH@ 76
---UPD ReturnStatement@@MethodInvocation:service.install(this,false) @TO@ MethodInvocation:service.install(this,force,synchronous) @AT@ 1800 @LENGTH@ 36
------UPD MethodInvocation@@service.install(this,false) @TO@ service.install(this,force,synchronous) @AT@ 1807 @LENGTH@ 28
---------UPD SimpleName@@MethodName:install:[this, false] @TO@ MethodName:install:[this, force, synchronous] @AT@ 1815 @LENGTH@ 20
------------DEL BooleanLiteral@@false @AT@ 1829 @LENGTH@ 5
------------INS SimpleName@@force @TO@ SimpleName@@MethodName:install:[this, false] @AT@ 1951 @LENGTH@ 5
------------INS SimpleName@@synchronous @TO@ SimpleName@@MethodName:install:[this, false] @AT@ 1958 @LENGTH@ 11
---INS SingleVariableDeclaration@@boolean force @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1876 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean force @AT@ 1876 @LENGTH@ 7
------INS SimpleName@@force @TO@ SingleVariableDeclaration@@boolean force @AT@ 1884 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean synchronous @TO@ MethodDeclaration@@public, Result, MethodName:install,  @AT@ 1891 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean synchronous @AT@ 1891 @LENGTH@ 7
------INS SimpleName@@synchronous @TO@ SingleVariableDeclaration@@boolean synchronous @AT@ 1899 @LENGTH@ 11


INS MethodDeclaration@@void, MethodName:setZookeeperPassword, String zookeeperPassword,  @TO@ TypeDeclaration@@[public]Join,  @AT@ 530 @LENGTH@ 47
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:setZookeeperPassword, String zookeeperPassword,  @AT@ 525 @LENGTH@ 4
---INS SimpleName@@MethodName:setZookeeperPassword @TO@ MethodDeclaration@@void, MethodName:setZookeeperPassword, String zookeeperPassword,  @AT@ 530 @LENGTH@ 20
---INS SingleVariableDeclaration@@String zookeeperPassword @TO@ MethodDeclaration@@void, MethodName:setZookeeperPassword, String zookeeperPassword,  @AT@ 551 @LENGTH@ 24
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String zookeeperPassword @AT@ 551 @LENGTH@ 6
------INS SimpleName@@zookeeperPassword @TO@ SingleVariableDeclaration@@String zookeeperPassword @AT@ 558 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:op.get(RUNTIME_NAME.getName()).set(state.get(RUNTIME_NAME.getName())) @TO@ MethodInvocation:op.get(RUNTIME_NAME_NILLABLE.getName()).set(state.get(RUNTIME_NAME_NILLABLE.getName())) @AT@ 2721 @LENGTH@ 70
---UPD MethodInvocation@@op.get(RUNTIME_NAME.getName()).set(state.get(RUNTIME_NAME.getName())) @TO@ op.get(RUNTIME_NAME_NILLABLE.getName()).set(state.get(RUNTIME_NAME_NILLABLE.getName())) @AT@ 2721 @LENGTH@ 69
------UPD MethodInvocation@@MethodName:get:[RUNTIME_NAME.getName()] @TO@ MethodName:get:[RUNTIME_NAME_NILLABLE.getName()] @AT@ 2721 @LENGTH@ 30
---------UPD MethodInvocation@@RUNTIME_NAME.getName() @TO@ RUNTIME_NAME_NILLABLE.getName() @AT@ 2728 @LENGTH@ 22
------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 2728 @LENGTH@ 12
------UPD SimpleName@@MethodName:set:[state.get(RUNTIME_NAME.getName())] @TO@ MethodName:set:[state.get(RUNTIME_NAME_NILLABLE.getName())] @AT@ 2752 @LENGTH@ 38
---------UPD MethodInvocation@@state.get(RUNTIME_NAME.getName()) @TO@ state.get(RUNTIME_NAME_NILLABLE.getName()) @AT@ 2756 @LENGTH@ 33
------------UPD SimpleName@@MethodName:get:[RUNTIME_NAME.getName()] @TO@ MethodName:get:[RUNTIME_NAME_NILLABLE.getName()] @AT@ 2762 @LENGTH@ 27
---------------UPD MethodInvocation@@RUNTIME_NAME.getName() @TO@ RUNTIME_NAME_NILLABLE.getName() @AT@ 2766 @LENGTH@ 22
------------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 2766 @LENGTH@ 12


MOV IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @TO@ MethodDeclaration@@byte[], MethodName:addFromHash, byte[] hash, String deploymentOverlayName, final String contentName, final OperationContext context, OperationFailedException,  @AT@ 5672 @LENGTH@ 96


UPD FieldDeclaration@@private, static, String, [NEW_LINE="\n"] @TO@ private, static, String, [NEW_LINE=String.format("%n")] @AT@ 2046 @LENGTH@ 38
---UPD VariableDeclarationFragment@@NEW_LINE="\n" @TO@ NEW_LINE=String.format("%n") @AT@ 2068 @LENGTH@ 15
------INS MethodInvocation@@String.format("%n") @TO@ VariableDeclarationFragment@@NEW_LINE="\n" @AT@ 2079 @LENGTH@ 19
---------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%n") @AT@ 2079 @LENGTH@ 6
---------INS SimpleName@@MethodName:format:["%n"] @TO@ MethodInvocation@@String.format("%n") @AT@ 2086 @LENGTH@ 12
------------INS StringLiteral@@"%n" @TO@ SimpleName@@MethodName:format:["%n"] @AT@ 2093 @LENGTH@ 4
------DEL StringLiteral@@"\n" @AT@ 2079 @LENGTH@ 4


INS MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @TO@ TypeDeclaration@@[static]SubRegistry,  @AT@ 11391 @LENGTH@ 388
---INS SimpleType@@OperationTransformerRegistry @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11362 @LENGTH@ 28
---INS SimpleName@@MethodName:get @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11391 @LENGTH@ 3
---INS SingleVariableDeclaration@@final String value @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11395 @LENGTH@ 18
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String value @AT@ 11395 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String value @AT@ 11401 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@final String value @AT@ 11408 @LENGTH@ 5
---INS SingleVariableDeclaration@@Iterator<PathElement> iterator @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11415 @LENGTH@ 30
------INS ParameterizedType@@Iterator<PathElement> @TO@ SingleVariableDeclaration@@Iterator<PathElement> iterator @AT@ 11415 @LENGTH@ 21
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<PathElement> @AT@ 11415 @LENGTH@ 8
---------INS SimpleType@@PathElement @TO@ ParameterizedType@@Iterator<PathElement> @AT@ 11424 @LENGTH@ 11
------INS SimpleName@@iterator @TO@ SingleVariableDeclaration@@Iterator<PathElement> iterator @AT@ 11437 @LENGTH@ 8
---INS VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11461 @LENGTH@ 70
------INS SimpleType@@OperationTransformerRegistry @TO@ VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @AT@ 11461 @LENGTH@ 28
------INS VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @TO@ VariableDeclarationStatement@@OperationTransformerRegistry entry=childrenUpdater.get(this,value); @AT@ 11490 @LENGTH@ 40
---------INS SimpleName@@entry @TO@ VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @AT@ 11490 @LENGTH@ 5
---------INS MethodInvocation@@childrenUpdater.get(this,value) @TO@ VariableDeclarationFragment@@entry=childrenUpdater.get(this,value) @AT@ 11498 @LENGTH@ 32
------------INS SimpleName@@Name:childrenUpdater @TO@ MethodInvocation@@childrenUpdater.get(this,value) @AT@ 11498 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:[this, value] @TO@ MethodInvocation@@childrenUpdater.get(this,value) @AT@ 11514 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:get:[this, value] @AT@ 11518 @LENGTH@ 4
---------------INS SimpleName@@value @TO@ SimpleName@@MethodName:get:[this, value] @AT@ 11524 @LENGTH@ 5
---INS IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11544 @LENGTH@ 176
------INS InfixExpression@@entry == null @TO@ IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11547 @LENGTH@ 13
---------INS SimpleName@@entry @TO@ InfixExpression@@entry == null @AT@ 11547 @LENGTH@ 5
---------INS Operator@@== @TO@ InfixExpression@@entry == null @AT@ 11552 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entry == null @AT@ 11556 @LENGTH@ 4
------INS Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @TO@ IfStatement@@if (entry == null) {  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11562 @LENGTH@ 158
---------INS ExpressionStatement@@Assignment:entry=childrenUpdater.get(this,"*") @TO@ Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11580 @LENGTH@ 39
------------INS Assignment@@entry=childrenUpdater.get(this,"*") @TO@ ExpressionStatement@@Assignment:entry=childrenUpdater.get(this,"*") @AT@ 11580 @LENGTH@ 38
---------------INS SimpleName@@entry @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11580 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11585 @LENGTH@ 1
---------------INS MethodInvocation@@childrenUpdater.get(this,"*") @TO@ Assignment@@entry=childrenUpdater.get(this,"*") @AT@ 11588 @LENGTH@ 30
------------------INS SimpleName@@Name:childrenUpdater @TO@ MethodInvocation@@childrenUpdater.get(this,"*") @AT@ 11588 @LENGTH@ 15
------------------INS SimpleName@@MethodName:get:[this, "*"] @TO@ MethodInvocation@@childrenUpdater.get(this,"*") @AT@ 11604 @LENGTH@ 14
---------------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:get:[this, "*"] @AT@ 11608 @LENGTH@ 4
---------------------INS StringLiteral@@"*" @TO@ SimpleName@@MethodName:get:[this, "*"] @AT@ 11614 @LENGTH@ 3
---------INS IfStatement@@if (entry == null) {  return null;} @TO@ Block@@ThenBody:{  entry=childrenUpdater.get(this,"*");  if (entry == null) {    return null;  }} @AT@ 11636 @LENGTH@ 70
------------INS InfixExpression@@entry == null @TO@ IfStatement@@if (entry == null) {  return null;} @AT@ 11639 @LENGTH@ 13
---------------INS SimpleName@@entry @TO@ InfixExpression@@entry == null @AT@ 11639 @LENGTH@ 5
---------------INS Operator@@== @TO@ InfixExpression@@entry == null @AT@ 11644 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@entry == null @AT@ 11648 @LENGTH@ 4
------------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (entry == null) {  return null;} @AT@ 11654 @LENGTH@ 52
---------------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 11676 @LENGTH@ 12
------------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 11683 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:entry.resolveChild(iterator) @TO@ MethodDeclaration@@OperationTransformerRegistry, MethodName:get, final String value, Iterator<PathElement> iterator,  @AT@ 11733 @LENGTH@ 36
------INS MethodInvocation@@entry.resolveChild(iterator) @TO@ ReturnStatement@@MethodInvocation:entry.resolveChild(iterator) @AT@ 11740 @LENGTH@ 28
---------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.resolveChild(iterator) @AT@ 11740 @LENGTH@ 5
---------INS SimpleName@@MethodName:resolveChild:[iterator] @TO@ MethodInvocation@@entry.resolveChild(iterator) @AT@ 11746 @LENGTH@ 22
------------INS SimpleName@@iterator @TO@ SimpleName@@MethodName:resolveChild:[iterator] @AT@ 11759 @LENGTH@ 8


UPD FieldDeclaration@@private, static, final, Logger, [LOG=Logger.getLogger(MultiPartInvokeImpl.class.getName())] @TO@ private, static, final, Logger, [LOG=LoggerFactory.getLogger(MultiPartInvokeImpl.class)] @AT@ 1425 @LENGTH@ 88
---UPD VariableDeclarationFragment@@LOG=Logger.getLogger(MultiPartInvokeImpl.class.getName()) @TO@ LOG=LoggerFactory.getLogger(MultiPartInvokeImpl.class) @AT@ 1453 @LENGTH@ 59
------UPD MethodInvocation@@Logger.getLogger(MultiPartInvokeImpl.class.getName()) @TO@ LoggerFactory.getLogger(MultiPartInvokeImpl.class) @AT@ 1459 @LENGTH@ 53
---------UPD SimpleName@@Name:Logger @TO@ Name:LoggerFactory @AT@ 1459 @LENGTH@ 6
---------UPD SimpleName@@MethodName:getLogger:[MultiPartInvokeImpl.class.getName()] @TO@ MethodName:getLogger:[MultiPartInvokeImpl.class] @AT@ 1466 @LENGTH@ 46
------------DEL MethodInvocation@@MultiPartInvokeImpl.class.getName() @AT@ 1476 @LENGTH@ 35
---------------DEL TypeLiteral@@MultiPartInvokeImpl.class @AT@ 1476 @LENGTH@ 25
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 1502 @LENGTH@ 9
------------INS TypeLiteral@@MultiPartInvokeImpl.class @TO@ SimpleName@@MethodName:getLogger:[MultiPartInvokeImpl.class.getName()] @AT@ 1506 @LENGTH@ 25


INS ExpressionStatement@@MethodInvocation:resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @TO@ MethodDeclaration@@private, void, MethodName:registerTransformers1_0_0, SubsystemRegistration registration,  @AT@ 8608 @LENGTH@ 54
---INS MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @TO@ ExpressionStatement@@MethodInvocation:resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8608 @LENGTH@ 53
------INS SimpleName@@Name:resolved @TO@ MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8608 @LENGTH@ 8
------INS SimpleName@@MethodName:discardOperations:[WRITE_ATTRIBUTE_OPERATION] @TO@ MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8617 @LENGTH@ 44
---------INS SimpleName@@WRITE_ATTRIBUTE_OPERATION @TO@ SimpleName@@MethodName:discardOperations:[WRITE_ATTRIBUTE_OPERATION] @AT@ 8635 @LENGTH@ 25


INS IfStatement@@if (defaultValueTransformer == null) {  throw new IllegalArgumentException("transformer must not be null");} @TO@ MethodDeclaration@@protected, voidMethodName:DefaultedMap, Map<K,V> map, Transformer<? super K,? extends V> defaultValueTransformer,  @AT@ 6413 @LENGTH@ 128
---INS InfixExpression@@defaultValueTransformer == null @TO@ IfStatement@@if (defaultValueTransformer == null) {  throw new IllegalArgumentException("transformer must not be null");} @AT@ 6417 @LENGTH@ 31
------INS SimpleName@@defaultValueTransformer @TO@ InfixExpression@@defaultValueTransformer == null @AT@ 6417 @LENGTH@ 23
------INS Operator@@== @TO@ InfixExpression@@defaultValueTransformer == null @AT@ 6440 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@defaultValueTransformer == null @AT@ 6444 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new IllegalArgumentException("transformer must not be null");} @TO@ IfStatement@@if (defaultValueTransformer == null) {  throw new IllegalArgumentException("transformer must not be null");} @AT@ 6450 @LENGTH@ 91
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("transformer must not be null") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("transformer must not be null");} @AT@ 6464 @LENGTH@ 67
---------INS ClassInstanceCreation@@IllegalArgumentException["transformer must not be null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("transformer must not be null") @AT@ 6470 @LENGTH@ 60
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["transformer must not be null"] @AT@ 6470 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["transformer must not be null"] @AT@ 6474 @LENGTH@ 24
------------INS StringLiteral@@"transformer must not be null" @TO@ ClassInstanceCreation@@IllegalArgumentException["transformer must not be null"] @AT@ 6499 @LENGTH@ 30


UPD CatchClause@@catch (ResourceAccessException e) {} @TO@ catch (Exception e) {} @AT@ 4093 @LENGTH@ 52
---UPD SingleVariableDeclaration@@ResourceAccessException e @TO@ Exception e @AT@ 4100 @LENGTH@ 25
------UPD SimpleType@@ResourceAccessException @TO@ Exception @AT@ 4100 @LENGTH@ 23


INS IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} else {  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @TO@ MethodDeclaration@@public, void, MethodName:testSendAndReceiveMailWithAttachments, Exception,  @AT@ 3309 @LENGTH@ 236
---INS MethodInvocation@@MethodName:isJava16:[] @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} else {  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @AT@ 3313 @LENGTH@ 10
---INS Block@@ThenBody:{  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} else {  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @AT@ 3325 @LENGTH@ 100
------MOV ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType()) @TO@ Block@@ThenBody:{  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} @AT@ 3309 @LENGTH@ 76
---INS Block@@ElseBody:{  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=\"" + name + "\"",handler.getContentType());} else {  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @AT@ 3431 @LENGTH@ 114
------INS ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType()) @TO@ Block@@ElseBody:{  assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType());} @AT@ 3445 @LENGTH@ 90
---------INS MethodInvocation@@assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType()) @AT@ 3445 @LENGTH@ 89
------------INS SimpleName@@MethodName:assertEquals:["application/octet-stream; name=\"" + name + "\"", handler.getContentType()] @TO@ MethodInvocation@@assertEquals("application/octet-stream; name=\"" + name + "\"",handler.getContentType()) @AT@ 3445 @LENGTH@ 89
---------------INS InfixExpression@@"application/octet-stream; name=\"" + name + "\"" @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=\"" + name + "\"", handler.getContentType()] @AT@ 3458 @LENGTH@ 49
------------------INS StringLiteral@@"application/octet-stream; name=\"" @TO@ InfixExpression@@"application/octet-stream; name=\"" + name + "\"" @AT@ 3458 @LENGTH@ 35
------------------INS Operator@@+ @TO@ InfixExpression@@"application/octet-stream; name=\"" + name + "\"" @AT@ 3493 @LENGTH@ 1
------------------INS SimpleName@@name @TO@ InfixExpression@@"application/octet-stream; name=\"" + name + "\"" @AT@ 3496 @LENGTH@ 4
------------------INS StringLiteral@@"\"" @TO@ InfixExpression@@"application/octet-stream; name=\"" + name + "\"" @AT@ 3503 @LENGTH@ 4
---------------INS MethodInvocation@@handler.getContentType() @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=\"" + name + "\"", handler.getContentType()] @AT@ 3509 @LENGTH@ 24
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getContentType() @AT@ 3509 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@handler.getContentType() @AT@ 3517 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 52
---UPD Assignment@@deploymentNames=Util.getDeployments(client,name) @TO@ deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 51
------UPD MethodInvocation@@Util.getDeployments(client,name) @TO@ Util.getMatchingDeployments(client,name) @AT@ 14073 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getDeployments:[client, name] @TO@ MethodName:getMatchingDeployments:[client, name] @AT@ 14078 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("FacesMessage facesMessage = MessageFactory.getMessage(\"label_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");") @TO@ MethodInvocation:bodyBuilder.appendFormalLine("FacesMessage facesMessage = MessageFactory.getMessage(\"message_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");") @AT@ 29493 @LENGTH@ 200
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("FacesMessage facesMessage = MessageFactory.getMessage(\"label_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");") @TO@ bodyBuilder.appendFormalLine("FacesMessage facesMessage = MessageFactory.getMessage(\"message_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");") @AT@ 29493 @LENGTH@ 199
------UPD SimpleName@@MethodName:appendFormalLine:["FacesMessage facesMessage = MessageFactory.getMessage(\"label_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");"] @TO@ MethodName:appendFormalLine:["FacesMessage facesMessage = MessageFactory.getMessage(\"message_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");"] @AT@ 29522 @LENGTH@ 170
---------UPD InfixExpression@@"FacesMessage facesMessage = MessageFactory.getMessage(\"label_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");" @TO@ "FacesMessage facesMessage = MessageFactory.getMessage(\"message_successfully_deleted\", \"" + entity.getSimpleTypeName() + "\");" @AT@ 29539 @LENGTH@ 152
------------UPD StringLiteral@@"FacesMessage facesMessage = MessageFactory.getMessage(\"label_successfully_deleted\", \"" @TO@ "FacesMessage facesMessage = MessageFactory.getMessage(\"message_successfully_deleted\", \"" @AT@ 29539 @LENGTH@ 90


UPD EnhancedForStatement@@for (final Method method : configuration.getDefinedComponentMethods()) {  configuration.addComponentInterceptor(method,Interceptors.getInitialInterceptorFactory(),InterceptorOrder.Component.INITIAL_INTERCEPTOR);  configuration.addComponentInterceptor(method,new ManagedReferenceMethodInterceptorFactory(instanceKey,method),InterceptorOrder.Component.TERMINAL_INTERCEPTOR);  final MethodIdentifier identifier=MethodIdentifier.getIdentifier(method.getReturnType(),method.getName(),method.getParameterTypes());  final List<InterceptorFactory> userAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userAroundTimeouts=new ArrayList<InterceptorFactory>();  if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : description.getDefaultInterceptors()) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  if (!description.isExcludeClassInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : classInterceptors) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  List<InterceptorDescription> methodLevelInterceptors=methodInterceptors.get(identifier);  if (methodLevelInterceptors != null) {    for (    InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {      String interceptorClassName=methodLevelInterceptor.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  userAroundInvokes.addAll(componentUserAroundInvoke);  if (componentUserAroundTimeout != null) {    userAroundTimeouts.addAll(componentUserAroundTimeout);  }  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userAroundInvokes),weaved(userAroundTimeouts)),InterceptorOrder.Component.USER_INTERCEPTORS);} @TO@ for (final Method method : configuration.getDefinedComponentMethods()) {  configuration.addComponentInterceptor(method,Interceptors.getInitialInterceptorFactory(),InterceptorOrder.Component.INITIAL_INTERCEPTOR);  configuration.addComponentInterceptor(method,new ManagedReferenceMethodInterceptorFactory(instanceKey,method),InterceptorOrder.Component.TERMINAL_INTERCEPTOR);  final MethodIdentifier identifier=MethodIdentifier.getIdentifier(method.getReturnType(),method.getName(),method.getParameterTypes());  final List<InterceptorFactory> userAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userAroundTimeouts=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userComponentAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userComponentAroundTimeouts=new ArrayList<InterceptorFactory>();  if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : description.getDefaultInterceptors()) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  if (!description.isExcludeClassInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : classInterceptors) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  List<InterceptorDescription> methodLevelInterceptors=methodInterceptors.get(identifier);  if (methodLevelInterceptors != null) {    for (    InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {      String interceptorClassName=methodLevelInterceptor.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  userComponentAroundInvokes.addAll(componentUserAroundInvoke);  if (componentUserAroundTimeout != null) {    userComponentAroundTimeouts.addAll(componentUserAroundTimeout);  }  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userAroundInvokes),weaved(userAroundTimeouts)),InterceptorOrder.Component.USER_INTERCEPTORS);  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS);} @AT@ 39904 @LENGTH@ 5095
---INS VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundInvokes=new ArrayList<InterceptorFactory>(); @TO@ EnhancedForStatement@@for (final Method method : configuration.getDefinedComponentMethods()) {  configuration.addComponentInterceptor(method,Interceptors.getInitialInterceptorFactory(),InterceptorOrder.Component.INITIAL_INTERCEPTOR);  configuration.addComponentInterceptor(method,new ManagedReferenceMethodInterceptorFactory(instanceKey,method),InterceptorOrder.Component.TERMINAL_INTERCEPTOR);  final MethodIdentifier identifier=MethodIdentifier.getIdentifier(method.getReturnType(),method.getName(),method.getParameterTypes());  final List<InterceptorFactory> userAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userAroundTimeouts=new ArrayList<InterceptorFactory>();  if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : description.getDefaultInterceptors()) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  if (!description.isExcludeClassInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : classInterceptors) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  List<InterceptorDescription> methodLevelInterceptors=methodInterceptors.get(identifier);  if (methodLevelInterceptors != null) {    for (    InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {      String interceptorClassName=methodLevelInterceptor.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  userAroundInvokes.addAll(componentUserAroundInvoke);  if (componentUserAroundTimeout != null) {    userAroundTimeouts.addAll(componentUserAroundTimeout);  }  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userAroundInvokes),weaved(userAroundTimeouts)),InterceptorOrder.Component.USER_INTERCEPTORS);} @AT@ 40860 @LENGTH@ 96
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundInvokes=new ArrayList<InterceptorFactory>(); @AT@ 40860 @LENGTH@ 5
------INS ParameterizedType@@List<InterceptorFactory> @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundInvokes=new ArrayList<InterceptorFactory>(); @AT@ 40866 @LENGTH@ 24
---------INS SimpleType@@List @TO@ ParameterizedType@@List<InterceptorFactory> @AT@ 40866 @LENGTH@ 4
---------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@List<InterceptorFactory> @AT@ 40871 @LENGTH@ 18
------INS VariableDeclarationFragment@@userComponentAroundInvokes=new ArrayList<InterceptorFactory>() @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundInvokes=new ArrayList<InterceptorFactory>(); @AT@ 40891 @LENGTH@ 64
---------INS SimpleName@@userComponentAroundInvokes @TO@ VariableDeclarationFragment@@userComponentAroundInvokes=new ArrayList<InterceptorFactory>() @AT@ 40891 @LENGTH@ 26
---------INS ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @TO@ VariableDeclarationFragment@@userComponentAroundInvokes=new ArrayList<InterceptorFactory>() @AT@ 40920 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @AT@ 40920 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<InterceptorFactory> @TO@ ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @AT@ 40924 @LENGTH@ 29
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<InterceptorFactory> @AT@ 40924 @LENGTH@ 9
---------------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@ArrayList<InterceptorFactory> @AT@ 40934 @LENGTH@ 18
---INS VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundTimeouts=new ArrayList<InterceptorFactory>(); @TO@ EnhancedForStatement@@for (final Method method : configuration.getDefinedComponentMethods()) {  configuration.addComponentInterceptor(method,Interceptors.getInitialInterceptorFactory(),InterceptorOrder.Component.INITIAL_INTERCEPTOR);  configuration.addComponentInterceptor(method,new ManagedReferenceMethodInterceptorFactory(instanceKey,method),InterceptorOrder.Component.TERMINAL_INTERCEPTOR);  final MethodIdentifier identifier=MethodIdentifier.getIdentifier(method.getReturnType(),method.getName(),method.getParameterTypes());  final List<InterceptorFactory> userAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userAroundTimeouts=new ArrayList<InterceptorFactory>();  if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : description.getDefaultInterceptors()) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  if (!description.isExcludeClassInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : classInterceptors) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  List<InterceptorDescription> methodLevelInterceptors=methodInterceptors.get(identifier);  if (methodLevelInterceptors != null) {    for (    InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {      String interceptorClassName=methodLevelInterceptor.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  userAroundInvokes.addAll(componentUserAroundInvoke);  if (componentUserAroundTimeout != null) {    userAroundTimeouts.addAll(componentUserAroundTimeout);  }  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userAroundInvokes),weaved(userAroundTimeouts)),InterceptorOrder.Component.USER_INTERCEPTORS);} @AT@ 40977 @LENGTH@ 97
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundTimeouts=new ArrayList<InterceptorFactory>(); @AT@ 40977 @LENGTH@ 5
------INS ParameterizedType@@List<InterceptorFactory> @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundTimeouts=new ArrayList<InterceptorFactory>(); @AT@ 40983 @LENGTH@ 24
---------INS SimpleType@@List @TO@ ParameterizedType@@List<InterceptorFactory> @AT@ 40983 @LENGTH@ 4
---------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@List<InterceptorFactory> @AT@ 40988 @LENGTH@ 18
------INS VariableDeclarationFragment@@userComponentAroundTimeouts=new ArrayList<InterceptorFactory>() @TO@ VariableDeclarationStatement@@final List<InterceptorFactory> userComponentAroundTimeouts=new ArrayList<InterceptorFactory>(); @AT@ 41008 @LENGTH@ 65
---------INS SimpleName@@userComponentAroundTimeouts @TO@ VariableDeclarationFragment@@userComponentAroundTimeouts=new ArrayList<InterceptorFactory>() @AT@ 41008 @LENGTH@ 27
---------INS ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @TO@ VariableDeclarationFragment@@userComponentAroundTimeouts=new ArrayList<InterceptorFactory>() @AT@ 41038 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @AT@ 41038 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<InterceptorFactory> @TO@ ClassInstanceCreation@@ArrayList<InterceptorFactory>[] @AT@ 41042 @LENGTH@ 29
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<InterceptorFactory> @AT@ 41042 @LENGTH@ 9
---------------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@ArrayList<InterceptorFactory> @AT@ 41052 @LENGTH@ 18
---UPD ExpressionStatement@@MethodInvocation:userAroundInvokes.addAll(componentUserAroundInvoke) @TO@ MethodInvocation:userComponentAroundInvokes.addAll(componentUserAroundInvoke) @AT@ 44570 @LENGTH@ 52
------UPD MethodInvocation@@userAroundInvokes.addAll(componentUserAroundInvoke) @TO@ userComponentAroundInvokes.addAll(componentUserAroundInvoke) @AT@ 44570 @LENGTH@ 51
---------UPD SimpleName@@Name:userAroundInvokes @TO@ Name:userComponentAroundInvokes @AT@ 44570 @LENGTH@ 17
---UPD IfStatement@@if (componentUserAroundTimeout != null) {  userAroundTimeouts.addAll(componentUserAroundTimeout);} @TO@ if (componentUserAroundTimeout != null) {  userComponentAroundTimeouts.addAll(componentUserAroundTimeout);} @AT@ 44643 @LENGTH@ 142
------UPD Block@@ThenBody:{  userAroundTimeouts.addAll(componentUserAroundTimeout);} @TO@ ThenBody:{  userComponentAroundTimeouts.addAll(componentUserAroundTimeout);} @AT@ 44683 @LENGTH@ 102
---------UPD ExpressionStatement@@MethodInvocation:userAroundTimeouts.addAll(componentUserAroundTimeout) @TO@ MethodInvocation:userComponentAroundTimeouts.addAll(componentUserAroundTimeout) @AT@ 44709 @LENGTH@ 54
------------UPD MethodInvocation@@userAroundTimeouts.addAll(componentUserAroundTimeout) @TO@ userComponentAroundTimeouts.addAll(componentUserAroundTimeout) @AT@ 44709 @LENGTH@ 53
---------------UPD SimpleName@@Name:userAroundTimeouts @TO@ Name:userComponentAroundTimeouts @AT@ 44709 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS) @TO@ EnhancedForStatement@@for (final Method method : configuration.getDefinedComponentMethods()) {  configuration.addComponentInterceptor(method,Interceptors.getInitialInterceptorFactory(),InterceptorOrder.Component.INITIAL_INTERCEPTOR);  configuration.addComponentInterceptor(method,new ManagedReferenceMethodInterceptorFactory(instanceKey,method),InterceptorOrder.Component.TERMINAL_INTERCEPTOR);  final MethodIdentifier identifier=MethodIdentifier.getIdentifier(method.getReturnType(),method.getName(),method.getParameterTypes());  final List<InterceptorFactory> userAroundInvokes=new ArrayList<InterceptorFactory>();  final List<InterceptorFactory> userAroundTimeouts=new ArrayList<InterceptorFactory>();  if (!description.isExcludeDefaultInterceptors() && !description.isExcludeDefaultInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : description.getDefaultInterceptors()) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  if (!description.isExcludeClassInterceptors(identifier)) {    for (    InterceptorDescription interceptorDescription : classInterceptors) {      String interceptorClassName=interceptorDescription.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  List<InterceptorDescription> methodLevelInterceptors=methodInterceptors.get(identifier);  if (methodLevelInterceptors != null) {    for (    InterceptorDescription methodLevelInterceptor : methodLevelInterceptors) {      String interceptorClassName=methodLevelInterceptor.getInterceptorClassName();      List<InterceptorFactory> aroundInvokes=userAroundInvokesByInterceptorClass.get(interceptorClassName);      if (aroundInvokes != null) {        userAroundInvokes.addAll(aroundInvokes);      }      if (description.isTimerServiceApplicable()) {        List<InterceptorFactory> aroundTimeouts=userAroundTimeoutsByInterceptorClass.get(interceptorClassName);        if (aroundTimeouts != null) {          userAroundTimeouts.addAll(aroundTimeouts);        }      }    }  }  userAroundInvokes.addAll(componentUserAroundInvoke);  if (componentUserAroundTimeout != null) {    userAroundTimeouts.addAll(componentUserAroundTimeout);  }  configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userAroundInvokes),weaved(userAroundTimeouts)),InterceptorOrder.Component.USER_INTERCEPTORS);} @AT@ 45255 @LENGTH@ 203
------INS MethodInvocation@@configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS) @TO@ ExpressionStatement@@MethodInvocation:configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS) @AT@ 45255 @LENGTH@ 202
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS) @AT@ 45255 @LENGTH@ 13
---------INS SimpleName@@MethodName:addComponentInterceptor:[method, new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)), InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS] @TO@ MethodInvocation@@configuration.addComponentInterceptor(method,new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)),InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS) @AT@ 45269 @LENGTH@ 188
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addComponentInterceptor:[method, new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)), InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS] @AT@ 45293 @LENGTH@ 6
------------INS ClassInstanceCreation@@UserInterceptorFactory[weaved(userComponentAroundInvokes), weaved(userComponentAroundTimeouts)] @TO@ SimpleName@@MethodName:addComponentInterceptor:[method, new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)), InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS] @AT@ 45301 @LENGTH@ 99
---------------INS New@@new @TO@ ClassInstanceCreation@@UserInterceptorFactory[weaved(userComponentAroundInvokes), weaved(userComponentAroundTimeouts)] @AT@ 45301 @LENGTH@ 3
---------------INS SimpleType@@UserInterceptorFactory @TO@ ClassInstanceCreation@@UserInterceptorFactory[weaved(userComponentAroundInvokes), weaved(userComponentAroundTimeouts)] @AT@ 45305 @LENGTH@ 22
---------------INS MethodInvocation@@weaved(userComponentAroundInvokes) @TO@ ClassInstanceCreation@@UserInterceptorFactory[weaved(userComponentAroundInvokes), weaved(userComponentAroundTimeouts)] @AT@ 45328 @LENGTH@ 34
------------------INS SimpleName@@MethodName:weaved:[userComponentAroundInvokes] @TO@ MethodInvocation@@weaved(userComponentAroundInvokes) @AT@ 45328 @LENGTH@ 34
---------------------INS SimpleName@@userComponentAroundInvokes @TO@ SimpleName@@MethodName:weaved:[userComponentAroundInvokes] @AT@ 45335 @LENGTH@ 26
---------------INS MethodInvocation@@weaved(userComponentAroundTimeouts) @TO@ ClassInstanceCreation@@UserInterceptorFactory[weaved(userComponentAroundInvokes), weaved(userComponentAroundTimeouts)] @AT@ 45364 @LENGTH@ 35
------------------INS SimpleName@@MethodName:weaved:[userComponentAroundTimeouts] @TO@ MethodInvocation@@weaved(userComponentAroundTimeouts) @AT@ 45364 @LENGTH@ 35
---------------------INS SimpleName@@userComponentAroundTimeouts @TO@ SimpleName@@MethodName:weaved:[userComponentAroundTimeouts] @AT@ 45371 @LENGTH@ 27
------------INS QualifiedName@@InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS @TO@ SimpleName@@MethodName:addComponentInterceptor:[method, new UserInterceptorFactory(weaved(userComponentAroundInvokes),weaved(userComponentAroundTimeouts)), InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS] @AT@ 45402 @LENGTH@ 54
---------------INS QualifiedName@@InterceptorOrder.Component @TO@ QualifiedName@@InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS @AT@ 45402 @LENGTH@ 26
------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Component @AT@ 45402 @LENGTH@ 16
------------------INS SimpleName@@Component @TO@ QualifiedName@@InterceptorOrder.Component @AT@ 45419 @LENGTH@ 9
---------------INS SimpleName@@USER_COMPONENT_INTERCEPTORS @TO@ QualifiedName@@InterceptorOrder.Component.USER_COMPONENT_INTERCEPTORS @AT@ 45429 @LENGTH@ 27


DEL ExpressionStatement@@MethodInvocation:enterState('"',new QuotesState(false,true)) @AT@ 1716 @LENGTH@ 46
---DEL MethodInvocation@@enterState('"',new QuotesState(false,true)) @AT@ 1716 @LENGTH@ 45
------DEL SimpleName@@MethodName:enterState:['"', new QuotesState(false,true)] @AT@ 1716 @LENGTH@ 45
---------DEL CharacterLiteral@@'"' @AT@ 1727 @LENGTH@ 3
---------DEL ClassInstanceCreation@@QuotesState[false, true] @AT@ 1732 @LENGTH@ 28
------------DEL New@@new @AT@ 1732 @LENGTH@ 3
------------DEL SimpleType@@QuotesState @AT@ 1736 @LENGTH@ 11
------------DEL BooleanLiteral@@false @AT@ 1748 @LENGTH@ 5
------------DEL BooleanLiteral@@true @AT@ 1755 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:exceptionExecuteNativeWithPipeline, Exception,  @TO@ public, void, MethodName:testExceptionExecuteNativeWithPipeline, Exception,  @AT@ 9910 @LENGTH@ 312
---UPD SimpleName@@MethodName:exceptionExecuteNativeWithPipeline @TO@ MethodName:testExceptionExecuteNativeWithPipeline @AT@ 9922 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:mock.expectedFileExists("target/failed/error/bye.txt","Kabom") @TO@ MethodInvocation:mock.expectedFileExists("target/failed/error/bye.txt") @AT@ 1483 @LENGTH@ 64
---UPD MethodInvocation@@mock.expectedFileExists("target/failed/error/bye.txt","Kabom") @TO@ mock.expectedFileExists("target/failed/error/bye.txt") @AT@ 1483 @LENGTH@ 63
------UPD SimpleName@@MethodName:expectedFileExists:["target/failed/error/bye.txt", "Kabom"] @TO@ MethodName:expectedFileExists:["target/failed/error/bye.txt"] @AT@ 1488 @LENGTH@ 58
---------DEL StringLiteral@@"Kabom" @AT@ 1538 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @TO@ TypeDeclaration@@[@DirtiesContext, @ContextConfiguration(value="classpath:eclipselink.xml",inheritLocations=true), public]EclipseLinkNamespaceUserRepositoryTests, NamespaceUserRepositoryTests @AT@ 1428 @LENGTH@ 49
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1428 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1435 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesIterableOfIdsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 1440 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @TO@ MethodInvocation:from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1320 @LENGTH@ 206
---UPD MethodInvocation@@from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @TO@ from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false").routeId("foo").noAutoStartup().to("mock:result") @AT@ 1320 @LENGTH@ 205
------UPD MethodInvocation@@MethodName:from:["sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false"] @TO@ MethodName:from:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false"] @AT@ 1320 @LENGTH@ 114
---------UPD InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @TO@ "sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1325 @LENGTH@ 108
------------INS StringLiteral@@"/" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1254 @LENGTH@ 3
------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1260 @LENGTH@ 12
------------UPD StringLiteral@@"/?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @TO@ "?username=admin&password=admin&delay=10s&disconnect=true&stepwise=false" @AT@ 1359 @LENGTH@ 74


UPD FieldDeclaration@@private, static, final, String, [RESOURCE_NAME=HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions"] @TO@ private, static, final, String, [RESOURCE_NAME=HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions"] @AT@ 1963 @LENGTH@ 121
---UPD VariableDeclarationFragment@@RESOURCE_NAME=HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ RESOURCE_NAME=HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 1991 @LENGTH@ 92
------UPD InfixExpression@@HostDescriptionProviders.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 2007 @LENGTH@ 76
---------UPD MethodInvocation@@HostDescriptionProviders.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 2007 @LENGTH@ 53
------------UPD TypeLiteral@@HostDescriptionProviders.class @TO@ HostEnvironmentResourceDescription.class @AT@ 2007 @LENGTH@ 30


UPD IfStatement@@if (namingStore instanceof WritableNamingStore) {  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().bind(absoluteName,object);} else {  throw MESSAGES.readOnlyNamingContext();} @TO@ if (namingStore instanceof WritableNamingStore) {  final Name absoluteName=getAbsoluteName(name);  if (object instanceof Referenceable) {    object=((Referenceable)object).getReference();  }  getWritableNamingStore().bind(absoluteName,object);} else {  throw MESSAGES.readOnlyNamingContext();} @AT@ 8448 @LENGTH@ 253
---UPD Block@@ThenBody:{  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().bind(absoluteName,object);} @TO@ ThenBody:{  final Name absoluteName=getAbsoluteName(name);  if (object instanceof Referenceable) {    object=((Referenceable)object).getReference();  }  getWritableNamingStore().bind(absoluteName,object);} @AT@ 8495 @LENGTH@ 137
------INS IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @TO@ Block@@ThenBody:{  final Name absoluteName=getAbsoluteName(name);  getWritableNamingStore().bind(absoluteName,object);} @AT@ 8605 @LENGTH@ 118
---------INS InstanceofExpression@@object instanceof Referenceable @TO@ IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @AT@ 8609 @LENGTH@ 31
------------INS SimpleName@@object @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 8609 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 8616 @LENGTH@ 10
------------INS SimpleType@@Referenceable @TO@ InstanceofExpression@@object instanceof Referenceable @AT@ 8627 @LENGTH@ 13
---------INS Block@@ThenBody:{  object=((Referenceable)object).getReference();} @TO@ IfStatement@@if (object instanceof Referenceable) {  object=((Referenceable)object).getReference();} @AT@ 8642 @LENGTH@ 81
------------INS ExpressionStatement@@Assignment:object=((Referenceable)object).getReference() @TO@ Block@@ThenBody:{  object=((Referenceable)object).getReference();} @AT@ 8660 @LENGTH@ 49
---------------INS Assignment@@object=((Referenceable)object).getReference() @TO@ ExpressionStatement@@Assignment:object=((Referenceable)object).getReference() @AT@ 8660 @LENGTH@ 48
------------------INS SimpleName@@object @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 8660 @LENGTH@ 6
------------------INS Operator@@= @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 8666 @LENGTH@ 1
------------------INS MethodInvocation@@((Referenceable)object).getReference() @TO@ Assignment@@object=((Referenceable)object).getReference() @AT@ 8669 @LENGTH@ 39
---------------------INS ParenthesizedExpression@@((Referenceable)object) @TO@ MethodInvocation@@((Referenceable)object).getReference() @AT@ 8669 @LENGTH@ 24
------------------------INS CastExpression@@(Referenceable)object @TO@ ParenthesizedExpression@@((Referenceable)object) @AT@ 8670 @LENGTH@ 22
---------------------------INS SimpleType@@Referenceable @TO@ CastExpression@@(Referenceable)object @AT@ 8671 @LENGTH@ 13
---------------------------INS SimpleName@@object @TO@ CastExpression@@(Referenceable)object @AT@ 8686 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getReference:[] @TO@ MethodInvocation@@((Referenceable)object).getReference() @AT@ 8694 @LENGTH@ 14


INS ExpressionStatement@@MethodInvocation:builder.addDependency(PathManagerService.SERVICE_NAME) @TO@ MethodDeclaration@@static, KernelServices, MethodName:create, String mainSubsystemName, AdditionalInitialization additionalInit, ExtensionRegistry controllerExtensionRegistry, List<ModelNode> bootOperations, ModelTestParser testParser, Extension mainExtension, ModelVersion legacyModelVersion, Exception,  @AT@ 4737 @LENGTH@ 55
---INS MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @TO@ ExpressionStatement@@MethodInvocation:builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4737 @LENGTH@ 54
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4737 @LENGTH@ 7
------INS SimpleName@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @TO@ MethodInvocation@@builder.addDependency(PathManagerService.SERVICE_NAME) @AT@ 4745 @LENGTH@ 46
---------INS QualifiedName@@PathManagerService.SERVICE_NAME @TO@ SimpleName@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @AT@ 4759 @LENGTH@ 31
------------INS SimpleName@@PathManagerService @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 4759 @LENGTH@ 18
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 4778 @LENGTH@ 12


UPD MethodDeclaration@@public, StatelessSessionLocal, MethodName:create, CreateException,  @TO@ StatelessSessionLocal, MethodName:create, CreateException,  @AT@ 1319 @LENGTH@ 61
---DEL Modifier@@public @AT@ 1319 @LENGTH@ 6


UPD VariableDeclarationStatement@@PigServer pig=(PigServer)(ctx.getBean("pig",ObjectFactory.class)).getObject(); @TO@ PigServer pig=(ctx.getBean("pig",PigServerFactory.class)).getPigServer(); @AT@ 2432 @LENGTH@ 82
---UPD VariableDeclarationFragment@@pig=(PigServer)(ctx.getBean("pig",ObjectFactory.class)).getObject() @TO@ pig=(ctx.getBean("pig",PigServerFactory.class)).getPigServer() @AT@ 2442 @LENGTH@ 71
------INS MethodInvocation@@(ctx.getBean("pig",PigServerFactory.class)).getPigServer() @TO@ VariableDeclarationFragment@@pig=(PigServer)(ctx.getBean("pig",ObjectFactory.class)).getObject() @AT@ 2386 @LENGTH@ 59
---------MOV ParenthesizedExpression@@(ctx.getBean("pig",ObjectFactory.class)) @TO@ MethodInvocation@@(ctx.getBean("pig",PigServerFactory.class)).getPigServer() @AT@ 2460 @LENGTH@ 41
---------MOV SimpleName@@MethodName:getObject:[] @TO@ MethodInvocation@@(ctx.getBean("pig",PigServerFactory.class)).getPigServer() @AT@ 2502 @LENGTH@ 11
------DEL CastExpression@@(PigServer)(ctx.getBean("pig",ObjectFactory.class)).getObject() @AT@ 2448 @LENGTH@ 65
---------DEL SimpleType@@PigServer @AT@ 2449 @LENGTH@ 9
---------DEL MethodInvocation@@(ctx.getBean("pig",ObjectFactory.class)).getObject() @AT@ 2460 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @TO@ MethodInvocation:log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: {}",entry.getValue(),t) @AT@ 7156 @LENGTH@ 160
---UPD MethodInvocation@@log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: ",entry.getValue(),t) @TO@ log.warn("Exception happened during eviction of entry ID {}, won't evict and will continue trying: {}",entry.getValue(),t) @AT@ 7156 @LENGTH@ 159
------UPD SimpleName@@MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: ", entry.getValue(), t] @TO@ MethodName:warn:["Exception happened during eviction of entry ID {}, won't evict and will continue trying: {}", entry.getValue(), t] @AT@ 7160 @LENGTH@ 155
---------UPD StringLiteral@@"Exception happened during eviction of entry ID {}, won't evict and will continue trying: " @TO@ "Exception happened during eviction of entry ID {}, won't evict and will continue trying: {}" @AT@ 7165 @LENGTH@ 91


UPD VariableDeclarationStatement@@Property prop=model.get(CommonAttributes.BROADCAST_GROUP).asProperty(); @TO@ Property prop=model.get(CommonAttributes.GROUPING_HANDLER).asProperty(); @AT@ 4696 @LENGTH@ 73
---UPD VariableDeclarationFragment@@prop=model.get(CommonAttributes.BROADCAST_GROUP).asProperty() @TO@ prop=model.get(CommonAttributes.GROUPING_HANDLER).asProperty() @AT@ 4705 @LENGTH@ 63
------UPD MethodInvocation@@model.get(CommonAttributes.BROADCAST_GROUP).asProperty() @TO@ model.get(CommonAttributes.GROUPING_HANDLER).asProperty() @AT@ 4712 @LENGTH@ 56
---------UPD MethodInvocation@@MethodName:get:[CommonAttributes.BROADCAST_GROUP] @TO@ MethodName:get:[CommonAttributes.GROUPING_HANDLER] @AT@ 4712 @LENGTH@ 43
------------UPD QualifiedName@@CommonAttributes.BROADCAST_GROUP @TO@ CommonAttributes.GROUPING_HANDLER @AT@ 4722 @LENGTH@ 32
---------------UPD SimpleName@@BROADCAST_GROUP @TO@ GROUPING_HANDLER @AT@ 4739 @LENGTH@ 15


INS MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @TO@ TypeDeclaration@@[public]HadoopShims,  @AT@ 5773 @LENGTH@ 44
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 5773 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 5780 @LENGTH@ 6
---INS SimpleName@@MethodName:unquoteHtmlChars @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 5787 @LENGTH@ 16
---INS SingleVariableDeclaration@@String item @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 5804 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String item @AT@ 5804 @LENGTH@ 6
------INS SimpleName@@item @TO@ SingleVariableDeclaration@@String item @AT@ 5811 @LENGTH@ 4


UPD FieldDeclaration@@private, List<ActivityRules>, [activities=new ArrayList<ActivityRules>()] @TO@ private, List<ActivityRules>, [activities=new CopyOnWriteArrayList<ActivityRules>()] @AT@ 1298 @LENGTH@ 72
---UPD VariableDeclarationFragment@@activities=new ArrayList<ActivityRules>() @TO@ activities=new CopyOnWriteArrayList<ActivityRules>() @AT@ 1326 @LENGTH@ 43
------UPD ClassInstanceCreation@@ArrayList<ActivityRules>[] @TO@ CopyOnWriteArrayList<ActivityRules>[] @AT@ 1339 @LENGTH@ 30
---------UPD ParameterizedType@@ArrayList<ActivityRules> @TO@ CopyOnWriteArrayList<ActivityRules> @AT@ 1343 @LENGTH@ 24
------------UPD SimpleType@@ArrayList @TO@ CopyOnWriteArrayList @AT@ 1343 @LENGTH@ 9


UPD IfStatement@@if (!RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined()) {  RUNTIME_NAME.validateAndSet(deployment,subModel);} @TO@ if (!RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined()) {  RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel);} @AT@ 4322 @LENGTH@ 146
---UPD PrefixExpression@@!RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined() @TO@ !RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined() @AT@ 4326 @LENGTH@ 66
------UPD MethodInvocation@@RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined() @TO@ RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined() @AT@ 4327 @LENGTH@ 65
---------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 4327 @LENGTH@ 12
---UPD Block@@ThenBody:{  RUNTIME_NAME.validateAndSet(deployment,subModel);} @TO@ ThenBody:{  RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel);} @AT@ 4394 @LENGTH@ 74
------UPD ExpressionStatement@@MethodInvocation:RUNTIME_NAME.validateAndSet(deployment,subModel) @TO@ MethodInvocation:RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel) @AT@ 4408 @LENGTH@ 50
---------UPD MethodInvocation@@RUNTIME_NAME.validateAndSet(deployment,subModel) @TO@ RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel) @AT@ 4408 @LENGTH@ 49
------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 4408 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:salt="" + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] @TO@ Assignment:salt="" + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] @AT@ 15434 @LENGTH@ 159
---UPD Assignment@@salt="" + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] @TO@ salt="" + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] @AT@ 15434 @LENGTH@ 158
------UPD InfixExpression@@"" + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] @TO@ "" + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] + SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] @AT@ 15441 @LENGTH@ 151
---------UPD ArrayAccess@@SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] @TO@ SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] @AT@ 15446 @LENGTH@ 62
------------UPD InfixExpression@@Math.abs(randomGenerator.nextInt()) % numSaltChars @TO@ (int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars @AT@ 15457 @LENGTH@ 50
---------------DEL MethodInvocation@@Math.abs(randomGenerator.nextInt()) @AT@ 15457 @LENGTH@ 35
---------------INS CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @TO@ InfixExpression@@Math.abs(randomGenerator.nextInt()) % numSaltChars @AT@ 15544 @LENGTH@ 46
------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @AT@ 15545 @LENGTH@ 3
------------------INS MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @TO@ CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @AT@ 15549 @LENGTH@ 41
---------------------MOV SimpleName@@Name:Math @TO@ MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @AT@ 15457 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:abs:[randomGenerator.nextInt()] @TO@ MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @AT@ 15462 @LENGTH@ 30
------------------------DEL MethodInvocation@@randomGenerator.nextInt() @AT@ 15466 @LENGTH@ 25
------------------------INS CastExpression@@(long)randomGenerator.nextInt() @TO@ SimpleName@@MethodName:abs:[randomGenerator.nextInt()] @AT@ 15558 @LENGTH@ 31
---------------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)randomGenerator.nextInt() @AT@ 15559 @LENGTH@ 4
---------------------------INS MethodInvocation@@randomGenerator.nextInt() @TO@ CastExpression@@(long)randomGenerator.nextInt() @AT@ 15564 @LENGTH@ 25
------------------------------MOV SimpleName@@Name:randomGenerator @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15466 @LENGTH@ 15
------------------------------MOV SimpleName@@Name:randomGenerator @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15466 @LENGTH@ 15
------------------------------MOV SimpleName@@MethodName:nextInt:[] @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15482 @LENGTH@ 9
------------------------------MOV SimpleName@@MethodName:nextInt:[] @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15482 @LENGTH@ 9
---------UPD ArrayAccess@@SALT_CHARS[Math.abs(randomGenerator.nextInt()) % numSaltChars] @TO@ SALT_CHARS[(int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars] @AT@ 15530 @LENGTH@ 62
------------UPD InfixExpression@@Math.abs(randomGenerator.nextInt()) % numSaltChars @TO@ (int)Math.abs((long)randomGenerator.nextInt()) % numSaltChars @AT@ 15541 @LENGTH@ 50
---------------DEL MethodInvocation@@Math.abs(randomGenerator.nextInt()) @AT@ 15541 @LENGTH@ 35
---------------INS CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @TO@ InfixExpression@@Math.abs(randomGenerator.nextInt()) % numSaltChars @AT@ 15639 @LENGTH@ 46
------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @AT@ 15640 @LENGTH@ 3
------------------INS MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @TO@ CastExpression@@(int)Math.abs((long)randomGenerator.nextInt()) @AT@ 15644 @LENGTH@ 41
---------------------MOV SimpleName@@Name:Math @TO@ MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @AT@ 15541 @LENGTH@ 4
---------------------MOV SimpleName@@MethodName:abs:[randomGenerator.nextInt()] @TO@ MethodInvocation@@Math.abs((long)randomGenerator.nextInt()) @AT@ 15546 @LENGTH@ 30
------------------------DEL MethodInvocation@@randomGenerator.nextInt() @AT@ 15550 @LENGTH@ 25
------------------------INS CastExpression@@(long)randomGenerator.nextInt() @TO@ SimpleName@@MethodName:abs:[randomGenerator.nextInt()] @AT@ 15653 @LENGTH@ 31
---------------------------INS PrimitiveType@@long @TO@ CastExpression@@(long)randomGenerator.nextInt() @AT@ 15654 @LENGTH@ 4
---------------------------INS MethodInvocation@@randomGenerator.nextInt() @TO@ CastExpression@@(long)randomGenerator.nextInt() @AT@ 15659 @LENGTH@ 25
------------------------------MOV SimpleName@@Name:randomGenerator @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15550 @LENGTH@ 15
------------------------------MOV SimpleName@@Name:randomGenerator @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15550 @LENGTH@ 15
------------------------------MOV SimpleName@@MethodName:nextInt:[] @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15566 @LENGTH@ 9
------------------------------MOV SimpleName@@MethodName:nextInt:[] @TO@ MethodInvocation@@randomGenerator.nextInt() @AT@ 15566 @LENGTH@ 9


UPD FieldDeclaration@@public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build()] @TO@ public, static, final, OperationDefinition, [DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build()] @AT@ 2776 @LENGTH@ 221
---UPD VariableDeclarationFragment@@DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build() @TO@ DEFINITION=new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build() @AT@ 2816 @LENGTH@ 180
------UPD MethodInvocation@@new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setReplyParameters(NAMESPACE,URI).build() @TO@ new SimpleOperationDefinitionBuilder(OPERATION_NAME,ControllerResolver.getResolver("namespaces")).setParameters(NAMESPACE,URI).build() @AT@ 2829 @LENGTH@ 167
---------UPD MethodInvocation@@MethodName:setReplyParameters:[NAMESPACE, URI] @TO@ MethodName:setParameters:[NAMESPACE, URI] @AT@ 2829 @LENGTH@ 146


UPD VariableDeclarationStatement@@Properties props=new Properties(); @TO@ Dictionary<String,String> props=new Hashtable<String,String>(); @AT@ 1335 @LENGTH@ 36
---DEL SimpleType@@Properties @AT@ 1335 @LENGTH@ 10
---UPD VariableDeclarationFragment@@props=new Properties() @TO@ props=new Hashtable<String,String>() @AT@ 1346 @LENGTH@ 24
------UPD ClassInstanceCreation@@Properties[] @TO@ Hashtable<String,String>[] @AT@ 1354 @LENGTH@ 16
---------DEL SimpleType@@Properties @AT@ 1358 @LENGTH@ 10
---------INS ParameterizedType@@Hashtable<String,String> @TO@ ClassInstanceCreation@@Properties[] @AT@ 1405 @LENGTH@ 25
------------INS SimpleType@@Hashtable @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1405 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1415 @LENGTH@ 6
------------INS SimpleType@@String @TO@ ParameterizedType@@Hashtable<String,String> @AT@ 1423 @LENGTH@ 6
---INS ParameterizedType@@Dictionary<String,String> @TO@ VariableDeclarationStatement@@Properties props=new Properties(); @AT@ 1366 @LENGTH@ 26
------INS SimpleType@@Dictionary @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1366 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1377 @LENGTH@ 6
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<String,String> @AT@ 1385 @LENGTH@ 6


UPD MethodDeclaration@@public, ResponseEntity<?>, MethodName:schemaForRepository, ServletServerHttpRequest request, URI baseUri, @PathVariable String repository, IOException,  @TO@ public, ResponseEntity<?>, MethodName:schemaForRepository, URI baseUri, @PathVariable String repository, IOException,  @AT@ 1424 @LENGTH@ 1015
---DEL SingleVariableDeclaration@@ServletServerHttpRequest request @AT@ 1469 @LENGTH@ 32
------DEL SimpleType@@ServletServerHttpRequest @AT@ 1469 @LENGTH@ 24
------DEL SimpleName@@request @AT@ 1494 @LENGTH@ 7
---UPD IfStatement@@if (null == repoMeta) {  throw new IllegalArgumentException("Resource /" + repository + "/schema not found.");} @TO@ if (null == repoMeta) {  return new ResponseEntity<Object>(HttpStatus.NOT_FOUND);} @AT@ 1737 @LENGTH@ 120
------UPD Block@@ThenBody:{  throw new IllegalArgumentException("Resource /" + repository + "/schema not found.");} @TO@ ThenBody:{  return new ResponseEntity<Object>(HttpStatus.NOT_FOUND);} @AT@ 1758 @LENGTH@ 99
---------INS ReturnStatement@@ClassInstanceCreation:new ResponseEntity<Object>(HttpStatus.NOT_FOUND) @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Resource /" + repository + "/schema not found.");} @AT@ 1620 @LENGTH@ 56
------------INS ClassInstanceCreation@@ResponseEntity<Object>[HttpStatus.NOT_FOUND] @TO@ ReturnStatement@@ClassInstanceCreation:new ResponseEntity<Object>(HttpStatus.NOT_FOUND) @AT@ 1627 @LENGTH@ 48
---------------INS ParameterizedType@@ResponseEntity<Object> @TO@ ClassInstanceCreation@@ResponseEntity<Object>[HttpStatus.NOT_FOUND] @AT@ 1631 @LENGTH@ 22
------------------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Object> @AT@ 1631 @LENGTH@ 14
------------------INS SimpleType@@Object @TO@ ParameterizedType@@ResponseEntity<Object> @AT@ 1646 @LENGTH@ 6
---------------INS QualifiedName@@HttpStatus.NOT_FOUND @TO@ ClassInstanceCreation@@ResponseEntity<Object>[HttpStatus.NOT_FOUND] @AT@ 1654 @LENGTH@ 20
------------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.NOT_FOUND @AT@ 1654 @LENGTH@ 10
------------------INS SimpleName@@NOT_FOUND @TO@ QualifiedName@@HttpStatus.NOT_FOUND @AT@ 1665 @LENGTH@ 9
---------------MOV New@@new @TO@ ClassInstanceCreation@@ResponseEntity<Object>[HttpStatus.NOT_FOUND] @AT@ 1772 @LENGTH@ 3
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Resource /" + repository + "/schema not found.") @AT@ 1766 @LENGTH@ 85
------------DEL ClassInstanceCreation@@IllegalArgumentException["Resource /" + repository + "/schema not found."] @AT@ 1772 @LENGTH@ 78
---------------DEL SimpleType@@IllegalArgumentException @AT@ 1776 @LENGTH@ 24
---------------DEL InfixExpression@@"Resource /" + repository + "/schema not found." @AT@ 1801 @LENGTH@ 48
------------------DEL StringLiteral@@"Resource /" @AT@ 1801 @LENGTH@ 12
------------------DEL Operator@@+ @AT@ 1813 @LENGTH@ 1
------------------DEL SimpleName@@repository @AT@ 1816 @LENGTH@ 10
------------------DEL StringLiteral@@"/schema not found." @AT@ 1829 @LENGTH@ 20
---INS VariableDeclarationStatement@@URI schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri(); @TO@ MethodDeclaration@@public, ResponseEntity<?>, MethodName:schemaForRepository, ServletServerHttpRequest request, URI baseUri, @PathVariable String repository, IOException,  @AT@ 1763 @LENGTH@ 227
------INS SimpleType@@URI @TO@ VariableDeclarationStatement@@URI schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri(); @AT@ 1763 @LENGTH@ 3
------INS VariableDeclarationFragment@@schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @TO@ VariableDeclarationStatement@@URI schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri(); @AT@ 1767 @LENGTH@ 222
---------INS SimpleName@@schemaUri @TO@ VariableDeclarationFragment@@schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1767 @LENGTH@ 9
---------INS MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @TO@ VariableDeclarationFragment@@schemaUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1779 @LENGTH@ 210
------------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1779 @LENGTH@ 161
------------INS MethodInvocation@@MethodName:pathSegment:[repository, "schema"] @TO@ MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1779 @LENGTH@ 112
---------------INS SimpleName@@repository @TO@ MethodInvocation@@MethodName:pathSegment:[repository, "schema"] @AT@ 1870 @LENGTH@ 10
---------------INS StringLiteral@@"schema" @TO@ MethodInvocation@@MethodName:pathSegment:[repository, "schema"] @AT@ 1882 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:fromUri:[baseUri] @TO@ MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1779 @LENGTH@ 37
---------------INS SimpleName@@baseUri @TO@ MethodInvocation@@MethodName:fromUri:[baseUri] @AT@ 1808 @LENGTH@ 7
------------INS SimpleName@@Name:UriComponentsBuilder @TO@ MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1779 @LENGTH@ 20
------------INS SimpleName@@MethodName:toUri:[] @TO@ MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).pathSegment(repository,"schema").build().toUri() @AT@ 1982 @LENGTH@ 7
---UPD VariableDeclarationStatement@@URI requestUri=UriComponentsBuilder.fromUri(baseUri).path(repository).build().toUri(); @TO@ URI requestUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository).build().toUri(); @AT@ 1938 @LENGTH@ 88
------UPD VariableDeclarationFragment@@requestUri=UriComponentsBuilder.fromUri(baseUri).path(repository).build().toUri() @TO@ requestUri=UriComponentsBuilder.fromUri(baseUri).pathSegment(repository).build().toUri() @AT@ 1942 @LENGTH@ 83
---------UPD MethodInvocation@@UriComponentsBuilder.fromUri(baseUri).path(repository).build().toUri() @TO@ UriComponentsBuilder.fromUri(baseUri).pathSegment(repository).build().toUri() @AT@ 1955 @LENGTH@ 70
------------UPD MethodInvocation@@MethodName:path:[repository] @TO@ MethodName:pathSegment:[repository] @AT@ 1955 @LENGTH@ 54
---UPD VariableDeclarationStatement@@Resource<JsonSchema> resource=new Resource<JsonSchema>(schema,new Link(request.getURI().toString(),"self"),new Link(requestUri.toString(),repoMeta.rel())); @TO@ Resource<JsonSchema> resource=new Resource<JsonSchema>(schema,new Link(schemaUri.toString(),"self"),new Link(requestUri.toString(),repoMeta.rel())); @AT@ 2031 @LENGTH@ 283
------UPD VariableDeclarationFragment@@resource=new Resource<JsonSchema>(schema,new Link(request.getURI().toString(),"self"),new Link(requestUri.toString(),repoMeta.rel())) @TO@ resource=new Resource<JsonSchema>(schema,new Link(schemaUri.toString(),"self"),new Link(requestUri.toString(),repoMeta.rel())) @AT@ 2052 @LENGTH@ 261
---------UPD ClassInstanceCreation@@Resource<JsonSchema>[schema, new Link(request.getURI().toString(),"self"), new Link(requestUri.toString(),repoMeta.rel())] @TO@ Resource<JsonSchema>[schema, new Link(schemaUri.toString(),"self"), new Link(requestUri.toString(),repoMeta.rel())] @AT@ 2063 @LENGTH@ 250
------------UPD ClassInstanceCreation@@Link[request.getURI().toString(), "self"] @TO@ Link[schemaUri.toString(), "self"] @AT@ 2157 @LENGTH@ 45
---------------UPD MethodInvocation@@request.getURI().toString() @TO@ schemaUri.toString() @AT@ 2166 @LENGTH@ 27
------------------DEL MethodInvocation@@MethodName:getURI:[] @AT@ 2166 @LENGTH@ 16
------------------UPD SimpleName@@Name:request @TO@ Name:schemaUri @AT@ 2166 @LENGTH@ 7


UPD VariableDeclarationStatement@@CreateSshContainerOptions options=CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(fabricService.getZookeeperPassword()).jvmOpts(jvmOpts); @TO@ CreateSshContainerOptions options=CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts); @AT@ 3394 @LENGTH@ 798
---UPD VariableDeclarationFragment@@options=CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(fabricService.getZookeeperPassword()).jvmOpts(jvmOpts) @TO@ options=CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts) @AT@ 3420 @LENGTH@ 771
------UPD MethodInvocation@@CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(fabricService.getZookeeperPassword()).jvmOpts(jvmOpts) @TO@ CreateContainerOptionsBuilder.ssh().name(name).resolver(resolver).ensembleServer(isEnsembleServer).number(1).host(host).username(user).password(password).privateKeyFile(privateKeyFile != null ? privateKeyFile : CreateSshContainerOptions.DEFAULT_PRIVATE_KEY_FILE).passPhrase(passPhrase).path(path).port(port).sshRetries(sshRetries).minimumPort(minimumPort).maximumPort(maximumPort).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts) @AT@ 3430 @LENGTH@ 761
---------UPD MethodInvocation@@MethodName:zookeeperPassword:[fabricService.getZookeeperPassword()] @TO@ MethodName:zookeeperPassword:[isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()] @AT@ 3430 @LENGTH@ 735
------------INS ConditionalExpression@@isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword() @TO@ MethodInvocation@@MethodName:zookeeperPassword:[fabricService.getZookeeperPassword()] @AT@ 4128 @LENGTH@ 104
---------------INS InfixExpression@@isEnsembleServer && zookeeperPassword != null @TO@ ConditionalExpression@@isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword() @AT@ 4128 @LENGTH@ 45
------------------INS SimpleName@@isEnsembleServer @TO@ InfixExpression@@isEnsembleServer && zookeeperPassword != null @AT@ 4128 @LENGTH@ 16
------------------INS Operator@@&& @TO@ InfixExpression@@isEnsembleServer && zookeeperPassword != null @AT@ 4144 @LENGTH@ 2
------------------INS InfixExpression@@zookeeperPassword != null @TO@ InfixExpression@@isEnsembleServer && zookeeperPassword != null @AT@ 4148 @LENGTH@ 25
---------------------INS SimpleName@@zookeeperPassword @TO@ InfixExpression@@zookeeperPassword != null @AT@ 4148 @LENGTH@ 17
---------------------INS Operator@@!= @TO@ InfixExpression@@zookeeperPassword != null @AT@ 4165 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@zookeeperPassword != null @AT@ 4169 @LENGTH@ 4
---------------INS SimpleName@@zookeeperPassword @TO@ ConditionalExpression@@isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword() @AT@ 4176 @LENGTH@ 17
---------------INS MethodInvocation@@fabricService.getZookeeperPassword() @TO@ ConditionalExpression@@isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword() @AT@ 4196 @LENGTH@ 36
------------------MOV SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getZookeeperPassword() @AT@ 4128 @LENGTH@ 13
------------------MOV SimpleName@@MethodName:getZookeeperPassword:[] @TO@ MethodInvocation@@fabricService.getZookeeperPassword() @AT@ 4142 @LENGTH@ 22
------------DEL MethodInvocation@@fabricService.getZookeeperPassword() @AT@ 4128 @LENGTH@ 36


UPD IfStatement@@if (line.startsWith(HASH_INCLUDE)) {  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} else {  String[] parts=line.split("\\s+");  if (parts.length != 4) {  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @TO@ if (line.startsWith(HASH_INCLUDE)) {  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {    throw new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location);  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} else {  String[] parts=line.split("\\s+");  if (parts.length != 4) {    throw new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location);  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);    }  }} @AT@ 12976 @LENGTH@ 2593
---UPD Block@@ThenBody:{  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} @TO@ ThenBody:{  String incl=line.substring(HASH_INCLUDE.length()).trim();  if (incl.contains(" ")) {    throw new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location);  } else {    lines.addAll(parseRules(createScanner(incl),location + "->" + incl));  }} @AT@ 13011 @LENGTH@ 568
------UPD IfStatement@@if (incl.contains(" ")) {} else {  lines.addAll(parseRules(createScanner(incl),location + "->" + incl));} @TO@ if (incl.contains(" ")) {  throw new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location);} else {  lines.addAll(parseRules(createScanner(incl),location + "->" + incl));} @AT@ 13166 @LENGTH@ 391
---------UPD Block@@ThenBody:{} @TO@ ThenBody:{  throw new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location);} @AT@ 13190 @LENGTH@ 235
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location) @TO@ Block@@ThenBody:{} @AT@ 13220 @LENGTH@ 161
---------------INS ClassInstanceCreation@@IllegalArgumentException["Malformed import statement '" + rawLine + "' in "+ location] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed import statement '" + rawLine + "' in "+ location) @AT@ 13226 @LENGTH@ 154
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed import statement '" + rawLine + "' in "+ location] @AT@ 13226 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed import statement '" + rawLine + "' in "+ location] @AT@ 13230 @LENGTH@ 24
------------------INS InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed import statement '" + rawLine + "' in "+ location] @AT@ 13255 @LENGTH@ 124
---------------------INS StringLiteral@@"Malformed import statement '" @TO@ InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @AT@ 13255 @LENGTH@ 30
---------------------INS Operator@@+ @TO@ InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @AT@ 13285 @LENGTH@ 1
---------------------INS SimpleName@@rawLine @TO@ InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @AT@ 13288 @LENGTH@ 7
---------------------INS StringLiteral@@"' in " @TO@ InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @AT@ 13298 @LENGTH@ 7
---------------------INS SimpleName@@location @TO@ InfixExpression@@"Malformed import statement '" + rawLine + "' in "+ location @AT@ 13371 @LENGTH@ 8
---UPD Block@@ElseBody:{  String[] parts=line.split("\\s+");  if (parts.length != 4) {  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line " + currentLine,e);    }  }} @TO@ ElseBody:{  String[] parts=line.split("\\s+");  if (parts.length != 4) {    throw new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location);  } else {    try {      String pat=stripQuotes(parts[0]);      String lCon=stripQuotes(parts[1]);      String rCon=stripQuotes(parts[2]);      PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));      final int cLine=currentLine;      Rule r=new Rule(pat,lCon,rCon,ph){        private final int myLine=cLine;        private final String loc=location;        @Override public String toString(){          final StringBuilder sb=new StringBuilder();          sb.append("Rule");          sb.append("{line=").append(myLine);          sb.append(", loc='").append(loc).append('\'');          sb.append('}');          return sb.toString();        }      };      lines.add(r);    } catch (    IllegalArgumentException e) {      throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);    }  }} @AT@ 13585 @LENGTH@ 1984
------UPD IfStatement@@if (parts.length != 4) {} else {  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line " + currentLine,e);  }} @TO@ if (parts.length != 4) {  throw new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location);} else {  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);  }} @AT@ 13704 @LENGTH@ 1843
---------UPD Block@@ThenBody:{} @TO@ ThenBody:{  throw new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location);} @AT@ 13727 @LENGTH@ 319
------------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location) @TO@ Block@@ThenBody:{} @AT@ 13739 @LENGTH@ 196
---------------INS ClassInstanceCreation@@IllegalArgumentException["Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location) @AT@ 13745 @LENGTH@ 189
------------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location] @AT@ 13745 @LENGTH@ 3
------------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location] @AT@ 13749 @LENGTH@ 24
------------------INS InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @TO@ ClassInstanceCreation@@IllegalArgumentException["Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location] @AT@ 13774 @LENGTH@ 159
---------------------INS StringLiteral@@"Malformed rule statement split into " @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13774 @LENGTH@ 38
---------------------INS Operator@@+ @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13812 @LENGTH@ 1
---------------------INS QualifiedName@@parts.length @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13815 @LENGTH@ 12
------------------------INS SimpleName@@parts @TO@ QualifiedName@@parts.length @AT@ 13815 @LENGTH@ 5
------------------------INS SimpleName@@length @TO@ QualifiedName@@parts.length @AT@ 13821 @LENGTH@ 6
---------------------INS StringLiteral@@" parts: " @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13893 @LENGTH@ 10
---------------------INS SimpleName@@rawLine @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13906 @LENGTH@ 7
---------------------INS StringLiteral@@" in " @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13916 @LENGTH@ 6
---------------------INS SimpleName@@location @TO@ InfixExpression@@"Malformed rule statement split into " + parts.length + " parts: "+ rawLine+ " in "+ location @AT@ 13925 @LENGTH@ 8
---------UPD Block@@ElseBody:{  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line " + currentLine,e);  }} @TO@ ElseBody:{  try {    String pat=stripQuotes(parts[0]);    String lCon=stripQuotes(parts[1]);    String rCon=stripQuotes(parts[2]);    PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));    final int cLine=currentLine;    Rule r=new Rule(pat,lCon,rCon,ph){      private final int myLine=cLine;      private final String loc=location;      @Override public String toString(){        final StringBuilder sb=new StringBuilder();        sb.append("Rule");        sb.append("{line=").append(myLine);        sb.append(", loc='").append(loc).append('\'');        sb.append('}');        return sb.toString();      }    };    lines.add(r);  } catch (  IllegalArgumentException e) {    throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);  }} @AT@ 14052 @LENGTH@ 1495
------------UPD TryStatement@@try {  String pat=stripQuotes(parts[0]);  String lCon=stripQuotes(parts[1]);  String rCon=stripQuotes(parts[2]);  PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));  final int cLine=currentLine;  Rule r=new Rule(pat,lCon,rCon,ph){    private final int myLine=cLine;    private final String loc=location;    @Override public String toString(){      final StringBuilder sb=new StringBuilder();      sb.append("Rule");      sb.append("{line=").append(myLine);      sb.append(", loc='").append(loc).append('\'');      sb.append('}');      return sb.toString();    }  };  lines.add(r);} catch (IllegalArgumentException e) {  throw new IllegalStateException("Problem parsing line " + currentLine,e);} @TO@ try {  String pat=stripQuotes(parts[0]);  String lCon=stripQuotes(parts[1]);  String rCon=stripQuotes(parts[2]);  PhonemeExpr ph=parsePhonemeExpr(stripQuotes(parts[3]));  final int cLine=currentLine;  Rule r=new Rule(pat,lCon,rCon,ph){    private final int myLine=cLine;    private final String loc=location;    @Override public String toString(){      final StringBuilder sb=new StringBuilder();      sb.append("Rule");      sb.append("{line=").append(myLine);      sb.append(", loc='").append(loc).append('\'');      sb.append('}');      return sb.toString();    }  };  lines.add(r);} catch (IllegalArgumentException e) {  throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);} @AT@ 14082 @LENGTH@ 1439
---------------UPD CatchClause@@catch (IllegalArgumentException e) {  throw new IllegalStateException("Problem parsing line " + currentLine,e);} @TO@ catch (IllegalArgumentException e) {  throw new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e);} @AT@ 15348 @LENGTH@ 173
------------------UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Problem parsing line " + currentLine,e) @TO@ ClassInstanceCreation:new IllegalStateException("Problem parsing line '" + currentLine + "' in "+ location,e) @AT@ 15417 @LENGTH@ 74
---------------------UPD ClassInstanceCreation@@IllegalStateException["Problem parsing line " + currentLine, e] @TO@ IllegalStateException["Problem parsing line '" + currentLine + "' in "+ location, e] @AT@ 15423 @LENGTH@ 67
------------------------UPD InfixExpression@@"Problem parsing line " + currentLine @TO@ "Problem parsing line '" + currentLine + "' in "+ location @AT@ 15449 @LENGTH@ 37
---------------------------INS StringLiteral@@"' in " @TO@ InfixExpression@@"Problem parsing line " + currentLine @AT@ 15405 @LENGTH@ 7
---------------------------UPD StringLiteral@@"Problem parsing line " @TO@ "Problem parsing line '" @AT@ 15449 @LENGTH@ 23
---------------------------INS SimpleName@@location @TO@ InfixExpression@@"Problem parsing line " + currentLine @AT@ 15479 @LENGTH@ 8


INS VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 1229 @LENGTH@ 72
---INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1229 @LENGTH@ 7
---INS VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @TO@ VariableDeclarationStatement@@Integer size=getAndRemoveParameter(parameters,"size",Integer.class); @AT@ 1237 @LENGTH@ 63
------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1237 @LENGTH@ 4
------INS MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @TO@ VariableDeclarationFragment@@size=getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1244 @LENGTH@ 56
---------INS SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @TO@ MethodInvocation@@getAndRemoveParameter(parameters,"size",Integer.class) @AT@ 1244 @LENGTH@ 56
------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1266 @LENGTH@ 10
------------INS StringLiteral@@"size" @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1278 @LENGTH@ 6
------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:getAndRemoveParameter:[parameters, "size", Integer.class] @AT@ 1286 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:errorHandler(loggingErrorHandler().level(LoggingLevel.ERROR).log(LoggerFactory.getLogger("foo"))) @TO@ MethodInvocation:errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).log(LoggerFactory.getLogger("foo"))) @AT@ 2205 @LENGTH@ 98
---UPD MethodInvocation@@errorHandler(loggingErrorHandler().level(LoggingLevel.ERROR).log(LoggerFactory.getLogger("foo"))) @TO@ errorHandler(loggingErrorHandler().level(LoggingLevel.WARN).log(LoggerFactory.getLogger("foo"))) @AT@ 2205 @LENGTH@ 97
------UPD SimpleName@@MethodName:errorHandler:[loggingErrorHandler().level(LoggingLevel.ERROR).log(LoggerFactory.getLogger("foo"))] @TO@ MethodName:errorHandler:[loggingErrorHandler().level(LoggingLevel.WARN).log(LoggerFactory.getLogger("foo"))] @AT@ 2205 @LENGTH@ 97
---------UPD MethodInvocation@@loggingErrorHandler().level(LoggingLevel.ERROR).log(LoggerFactory.getLogger("foo")) @TO@ loggingErrorHandler().level(LoggingLevel.WARN).log(LoggerFactory.getLogger("foo")) @AT@ 2218 @LENGTH@ 83
------------UPD MethodInvocation@@MethodName:level:[LoggingLevel.ERROR] @TO@ MethodName:level:[LoggingLevel.WARN] @AT@ 2218 @LENGTH@ 47
---------------UPD QualifiedName@@LoggingLevel.ERROR @TO@ LoggingLevel.WARN @AT@ 2246 @LENGTH@ 18
------------------UPD SimpleName@@ERROR @TO@ WARN @AT@ 2259 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:noop,  @TO@ void, MethodName:noop,  @AT@ 1497 @LENGTH@ 19
---DEL Modifier@@public @AT@ 1497 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 1" + "&delay=100&sendEmptyMessageWhenIdle=true").to("mock:result") @TO@ MethodInvocation:from("jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 999" + "&delay=100&sendEmptyMessageWhenIdle=true").to("mock:result") @AT@ 1842 @LENGTH@ 220
---UPD MethodInvocation@@from("jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 1" + "&delay=100&sendEmptyMessageWhenIdle=true").to("mock:result") @TO@ from("jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 999" + "&delay=100&sendEmptyMessageWhenIdle=true").to("mock:result") @AT@ 1842 @LENGTH@ 219
------UPD MethodInvocation@@MethodName:from:["jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 1" + "&delay=100&sendEmptyMessageWhenIdle=true"] @TO@ MethodName:from:["jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 999" + "&delay=100&sendEmptyMessageWhenIdle=true"] @AT@ 1842 @LENGTH@ 180
---------UPD InfixExpression@@"jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 1" + "&delay=100&sendEmptyMessageWhenIdle=true" @TO@ "jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 999" + "&delay=100&sendEmptyMessageWhenIdle=true" @AT@ 1847 @LENGTH@ 174
------------UPD StringLiteral@@"jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 1" @TO@ "jpa://org.apache.camel.examples.MultiSteps?consumer.nativeQuery=select * from MultiSteps where step = 999" @AT@ 1847 @LENGTH@ 105


UPD ExpressionStatement@@Assignment:resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @TO@ Assignment:resultClosure=CollectionUtils.forAllDo(col,(Closure<List<? extends Number>>)null) @AT@ 22322 @LENGTH@ 108
---UPD Assignment@@resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @TO@ resultClosure=CollectionUtils.forAllDo(col,(Closure<List<? extends Number>>)null) @AT@ 22322 @LENGTH@ 107
------UPD MethodInvocation@@CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col,null) @TO@ CollectionUtils.forAllDo(col,(Closure<List<? extends Number>>)null) @AT@ 22338 @LENGTH@ 91
---------UPD SimpleName@@MethodName:forAllDo:[col, null] @TO@ MethodName:forAllDo:[col, (Closure<List<? extends Number>>)null] @AT@ 22410 @LENGTH@ 19
------------INS CastExpression@@(Closure<List<? extends Number>>)null @TO@ SimpleName@@MethodName:forAllDo:[col, null] @AT@ 22358 @LENGTH@ 38
---------------INS ParameterizedType@@Closure<List<? extends Number>> @TO@ CastExpression@@(Closure<List<? extends Number>>)null @AT@ 22359 @LENGTH@ 31
------------------INS SimpleType@@Closure @TO@ ParameterizedType@@Closure<List<? extends Number>> @AT@ 22359 @LENGTH@ 7
------------------INS ParameterizedType@@List<? extends Number> @TO@ ParameterizedType@@Closure<List<? extends Number>> @AT@ 22367 @LENGTH@ 22
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<? extends Number> @AT@ 22367 @LENGTH@ 4
---------------------INS WildcardType@@? @TO@ ParameterizedType@@List<? extends Number> @AT@ 22372 @LENGTH@ 16
---------------INS NullLiteral@@null @TO@ CastExpression@@(Closure<List<? extends Number>>)null @AT@ 22392 @LENGTH@ 4
------------DEL NullLiteral@@null @AT@ 22424 @LENGTH@ 4


UPD TryStatement@@try {  ModelVersion oldVersion=ModelVersion.create(1,1,0);  KernelServicesBuilder builder=createKernelServicesBuilder(null).setSubsystemXml(getSubsystemXml());  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final");  KernelServices mainServices=builder.build();  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);  Assert.assertNotNull(legacyServices);  checkSubsystemModelTransformation(mainServices,oldVersion);  final ModelNode operation=new ModelNode();  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);  operation.get(OP_ADDR).add(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME);  operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());  operation.get(VALUE).set("${org.jboss.as.jpa.testBadExpr}");  final ModelNode mainResult=mainServices.executeOperation(operation);  System.out.println(mainResult);  Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));  try {    mainServices.transformOperation(oldVersion,operation);    Assert.fail("should reject the expression");  } catch (  OperationFailedException e) {  }}  finally {  System.clearProperty("org.jboss.as.jpa.testBadExpr");} @TO@ try {  ModelVersion oldVersion=ModelVersion.create(1,1,0);  KernelServicesBuilder builder=createKernelServicesBuilder(null).setSubsystemXml(getSubsystemXml());  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final");  KernelServices mainServices=builder.build();  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);  Assert.assertNotNull(legacyServices);  checkSubsystemModelTransformation(mainServices,oldVersion);  final ModelNode operation=new ModelNode();  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);  operation.get(OP_ADDR).add(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME);  operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());  operation.get(VALUE).set("${org.jboss.as.jpa.testBadExpr}");  final ModelNode mainResult=mainServices.executeOperation(operation);  System.out.println(mainResult);  Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));  final OperationTransformer.TransformedOperation op=mainServices.transformOperation(oldVersion,operation);  final ModelNode result=mainServices.executeOperation(oldVersion,op);  Assert.assertEquals(FAILED,result.get(OUTCOME).asString());}  finally {  System.clearProperty("org.jboss.as.jpa.testBadExpr");} @AT@ 2775 @LENGTH@ 1805
---DEL TryStatement@@try {  mainServices.transformOperation(oldVersion,operation);  Assert.fail("should reject the expression");} catch (OperationFailedException e) {} @AT@ 4061 @LENGTH@ 423
------DEL ExpressionStatement@@MethodInvocation:mainServices.transformOperation(oldVersion,operation) @AT@ 4083 @LENGTH@ 55
------DEL CatchClause@@catch (OperationFailedException e) {} @AT@ 4412 @LENGTH@ 72
---------DEL SingleVariableDeclaration@@OperationFailedException e @AT@ 4419 @LENGTH@ 26
------------DEL SimpleType@@OperationFailedException @AT@ 4419 @LENGTH@ 24
------------DEL SimpleName@@e @AT@ 4444 @LENGTH@ 1
---INS VariableDeclarationStatement@@final OperationTransformer.TransformedOperation op=mainServices.transformOperation(oldVersion,operation); @TO@ TryStatement@@try {  ModelVersion oldVersion=ModelVersion.create(1,1,0);  KernelServicesBuilder builder=createKernelServicesBuilder(null).setSubsystemXml(getSubsystemXml());  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final");  KernelServices mainServices=builder.build();  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);  Assert.assertNotNull(legacyServices);  checkSubsystemModelTransformation(mainServices,oldVersion);  final ModelNode operation=new ModelNode();  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);  operation.get(OP_ADDR).add(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME);  operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());  operation.get(VALUE).set("${org.jboss.as.jpa.testBadExpr}");  final ModelNode mainResult=mainServices.executeOperation(operation);  System.out.println(mainResult);  Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));  try {    mainServices.transformOperation(oldVersion,operation);    Assert.fail("should reject the expression");  } catch (  OperationFailedException e) {  }}  finally {  System.clearProperty("org.jboss.as.jpa.testBadExpr");} @AT@ 4209 @LENGTH@ 108
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final OperationTransformer.TransformedOperation op=mainServices.transformOperation(oldVersion,operation); @AT@ 4209 @LENGTH@ 5
------INS SimpleType@@OperationTransformer.TransformedOperation @TO@ VariableDeclarationStatement@@final OperationTransformer.TransformedOperation op=mainServices.transformOperation(oldVersion,operation); @AT@ 4215 @LENGTH@ 41
------INS VariableDeclarationFragment@@op=mainServices.transformOperation(oldVersion,operation) @TO@ VariableDeclarationStatement@@final OperationTransformer.TransformedOperation op=mainServices.transformOperation(oldVersion,operation); @AT@ 4257 @LENGTH@ 59
---------MOV MethodInvocation@@mainServices.transformOperation(oldVersion,operation) @TO@ VariableDeclarationFragment@@op=mainServices.transformOperation(oldVersion,operation) @AT@ 4083 @LENGTH@ 54
---------INS SimpleName@@op @TO@ VariableDeclarationFragment@@op=mainServices.transformOperation(oldVersion,operation) @AT@ 4257 @LENGTH@ 2
---INS VariableDeclarationStatement@@final ModelNode result=mainServices.executeOperation(oldVersion,op); @TO@ TryStatement@@try {  ModelVersion oldVersion=ModelVersion.create(1,1,0);  KernelServicesBuilder builder=createKernelServicesBuilder(null).setSubsystemXml(getSubsystemXml());  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final");  KernelServices mainServices=builder.build();  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);  Assert.assertNotNull(legacyServices);  checkSubsystemModelTransformation(mainServices,oldVersion);  final ModelNode operation=new ModelNode();  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);  operation.get(OP_ADDR).add(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME);  operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());  operation.get(VALUE).set("${org.jboss.as.jpa.testBadExpr}");  final ModelNode mainResult=mainServices.executeOperation(operation);  System.out.println(mainResult);  Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));  try {    mainServices.transformOperation(oldVersion,operation);    Assert.fail("should reject the expression");  } catch (  OperationFailedException e) {  }}  finally {  System.clearProperty("org.jboss.as.jpa.testBadExpr");} @AT@ 4330 @LENGTH@ 71
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode result=mainServices.executeOperation(oldVersion,op); @AT@ 4330 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode result=mainServices.executeOperation(oldVersion,op); @AT@ 4336 @LENGTH@ 9
------INS VariableDeclarationFragment@@result=mainServices.executeOperation(oldVersion,op) @TO@ VariableDeclarationStatement@@final ModelNode result=mainServices.executeOperation(oldVersion,op); @AT@ 4346 @LENGTH@ 54
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(oldVersion,op) @AT@ 4346 @LENGTH@ 6
---------INS MethodInvocation@@mainServices.executeOperation(oldVersion,op) @TO@ VariableDeclarationFragment@@result=mainServices.executeOperation(oldVersion,op) @AT@ 4355 @LENGTH@ 45
------------INS SimpleName@@Name:mainServices @TO@ MethodInvocation@@mainServices.executeOperation(oldVersion,op) @AT@ 4355 @LENGTH@ 12
------------INS SimpleName@@MethodName:executeOperation:[oldVersion, op] @TO@ MethodInvocation@@mainServices.executeOperation(oldVersion,op) @AT@ 4368 @LENGTH@ 32
---------------INS SimpleName@@oldVersion @TO@ SimpleName@@MethodName:executeOperation:[oldVersion, op] @AT@ 4385 @LENGTH@ 10
---------------INS SimpleName@@op @TO@ SimpleName@@MethodName:executeOperation:[oldVersion, op] @AT@ 4397 @LENGTH@ 2
---MOV ExpressionStatement@@MethodInvocation:Assert.fail("should reject the expression") @TO@ TryStatement@@try {  ModelVersion oldVersion=ModelVersion.create(1,1,0);  KernelServicesBuilder builder=createKernelServicesBuilder(null).setSubsystemXml(getSubsystemXml());  builder.createLegacyKernelServicesBuilder(null,oldVersion).setExtensionClassName(JPAExtension.class.getName()).addMavenResourceURL("org.jboss.as:jboss-as-jpa:7.1.2.Final");  KernelServices mainServices=builder.build();  KernelServices legacyServices=mainServices.getLegacyServices(oldVersion);  Assert.assertNotNull(legacyServices);  checkSubsystemModelTransformation(mainServices,oldVersion);  final ModelNode operation=new ModelNode();  operation.get(OP).set(WRITE_ATTRIBUTE_OPERATION);  operation.get(OP_ADDR).add(SUBSYSTEM,JPAExtension.SUBSYSTEM_NAME);  operation.get(NAME).set(JPADefinition.DEFAULT_DATASOURCE.getName());  operation.get(VALUE).set("${org.jboss.as.jpa.testBadExpr}");  final ModelNode mainResult=mainServices.executeOperation(operation);  System.out.println(mainResult);  Assert.assertTrue(SUCCESS.equals(mainResult.get(OUTCOME).asString()));  try {    mainServices.transformOperation(oldVersion,operation);    Assert.fail("should reject the expression");  } catch (  OperationFailedException e) {  }}  finally {  System.clearProperty("org.jboss.as.jpa.testBadExpr");} @AT@ 4353 @LENGTH@ 44
------UPD MethodInvocation@@Assert.fail("should reject the expression") @TO@ Assert.assertEquals(FAILED,result.get(OUTCOME).asString()) @AT@ 4353 @LENGTH@ 43
---------UPD SimpleName@@MethodName:fail:["should reject the expression"] @TO@ MethodName:asString:[] @AT@ 4360 @LENGTH@ 36
---------INS SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @TO@ MethodInvocation@@Assert.fail("should reject the expression") @AT@ 4421 @LENGTH@ 52
------------INS SimpleName@@FAILED @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 4434 @LENGTH@ 6
------------INS MethodInvocation@@result.get(OUTCOME).asString() @TO@ SimpleName@@MethodName:assertEquals:[FAILED, result.get(OUTCOME).asString()] @AT@ 4442 @LENGTH@ 30
---------------MOV SimpleName@@MethodName:fail:["should reject the expression"] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 4360 @LENGTH@ 36
------------------DEL StringLiteral@@"should reject the expression" @AT@ 4365 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:get:[OUTCOME] @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 4442 @LENGTH@ 19
------------------INS SimpleName@@OUTCOME @TO@ MethodInvocation@@MethodName:get:[OUTCOME] @AT@ 4453 @LENGTH@ 7
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.get(OUTCOME).asString() @AT@ 4442 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:remove(getIdQueryFor(object),collection) @TO@ MethodInvocation:doRemove(collection,getIdQueryFor(object),object.getClass()) @AT@ 35905 @LENGTH@ 42
---UPD MethodInvocation@@remove(getIdQueryFor(object),collection) @TO@ doRemove(collection,getIdQueryFor(object),object.getClass()) @AT@ 35905 @LENGTH@ 41
------UPD SimpleName@@MethodName:remove:[getIdQueryFor(object), collection] @TO@ MethodName:doRemove:[collection, getIdQueryFor(object), object.getClass()] @AT@ 35905 @LENGTH@ 41
---------MOV MethodInvocation@@getIdQueryFor(object) @TO@ SimpleName@@MethodName:remove:[getIdQueryFor(object), collection] @AT@ 35912 @LENGTH@ 21
---------INS MethodInvocation@@object.getClass() @TO@ SimpleName@@MethodName:remove:[getIdQueryFor(object), collection] @AT@ 35949 @LENGTH@ 17
------------INS SimpleName@@Name:object @TO@ MethodInvocation@@object.getClass() @AT@ 35949 @LENGTH@ 6
------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@object.getClass() @AT@ 35956 @LENGTH@ 10


UPD SwitchStatement@@switch (event.getEventType()) {case ADDED:{    EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());    remoteEndpoints.addCapability(endpoint);    for (    Map.Entry<ListenerInfo,SimpleFilter> entry : listeners.entrySet()) {      if (CapabilitySet.matches(endpoint,entry.getValue())) {        doImportService(endpoint,entry.getKey());      }    }  }break;case UPDATED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());Map<Long,ImportRegistration> registrations=importedServices.get(endpoint);for (ImportRegistration reg : registrations.values()) {  reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));}}break;case DELETED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());remoteEndpoints.removeCapability(endpoint);Map<Long,ImportRegistration> registrations=importedServices.remove(endpoint);for (ImportRegistration reg : registrations.values()) {reg.getImportedService().unregister();}}break;} @TO@ switch (event.getEventType()) {case ADDED:{    EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());    remoteEndpoints.addCapability(endpoint);    for (    Map.Entry<ListenerInfo,SimpleFilter> entry : listeners.entrySet()) {      if (CapabilitySet.matches(endpoint,entry.getValue())) {        doImportService(endpoint,entry.getKey());      }    }  }break;case UPDATED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());Map<Long,ImportRegistration> registrations=importedServices.get(endpoint);if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }}}break;case DELETED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());remoteEndpoints.removeCapability(endpoint);Map<Long,ImportRegistration> registrations=importedServices.remove(endpoint);if (registrations != null) {for (ImportRegistration reg : registrations.values()) {reg.getImportedService().unregister();}}}break;} @AT@ 12502 @LENGTH@ 1714
---INS IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }} @TO@ SwitchStatement@@switch (event.getEventType()) {case ADDED:{    EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());    remoteEndpoints.addCapability(endpoint);    for (    Map.Entry<ListenerInfo,SimpleFilter> entry : listeners.entrySet()) {      if (CapabilitySet.matches(endpoint,entry.getValue())) {        doImportService(endpoint,entry.getKey());      }    }  }break;case UPDATED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());Map<Long,ImportRegistration> registrations=importedServices.get(endpoint);for (ImportRegistration reg : registrations.values()) {  reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));}}break;case DELETED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());remoteEndpoints.removeCapability(endpoint);Map<Long,ImportRegistration> registrations=importedServices.remove(endpoint);for (ImportRegistration reg : registrations.values()) {reg.getImportedService().unregister();}}break;} @AT@ 13415 @LENGTH@ 292
------INS InfixExpression@@registrations != null @TO@ IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }} @AT@ 13419 @LENGTH@ 21
---------INS SimpleName@@registrations @TO@ InfixExpression@@registrations != null @AT@ 13419 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@registrations != null @AT@ 13432 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@registrations != null @AT@ 13436 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }} @TO@ IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }} @AT@ 13442 @LENGTH@ 265
---------MOV EnhancedForStatement@@for (ImportRegistration reg : registrations.values()) {  reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));} @TO@ Block@@ThenBody:{  for (  ImportRegistration reg : registrations.values()) {    reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));  }} @AT@ 13415 @LENGTH@ 201
---INS IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.getImportedService().unregister();  }} @TO@ SwitchStatement@@switch (event.getEventType()) {case ADDED:{    EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());    remoteEndpoints.addCapability(endpoint);    for (    Map.Entry<ListenerInfo,SimpleFilter> entry : listeners.entrySet()) {      if (CapabilitySet.matches(endpoint,entry.getValue())) {        doImportService(endpoint,entry.getKey());      }    }  }break;case UPDATED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());Map<Long,ImportRegistration> registrations=importedServices.get(endpoint);for (ImportRegistration reg : registrations.values()) {  reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));}}break;case DELETED:{EndpointDescription endpoint=Utils.getEndpointDescription(event.getData());remoteEndpoints.removeCapability(endpoint);Map<Long,ImportRegistration> registrations=importedServices.remove(endpoint);for (ImportRegistration reg : registrations.values()) {reg.getImportedService().unregister();}}break;} @AT@ 14092 @LENGTH@ 239
------INS InfixExpression@@registrations != null @TO@ IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.getImportedService().unregister();  }} @AT@ 14096 @LENGTH@ 21
---------INS SimpleName@@registrations @TO@ InfixExpression@@registrations != null @AT@ 14096 @LENGTH@ 13
---------INS Operator@@!= @TO@ InfixExpression@@registrations != null @AT@ 14109 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@registrations != null @AT@ 14113 @LENGTH@ 4
------INS Block@@ThenBody:{  for (  ImportRegistration reg : registrations.values()) {    reg.getImportedService().unregister();  }} @TO@ IfStatement@@if (registrations != null) {  for (  ImportRegistration reg : registrations.values()) {    reg.getImportedService().unregister();  }} @AT@ 14119 @LENGTH@ 212
---------MOV EnhancedForStatement@@for (ImportRegistration reg : registrations.values()) {  reg.getImportedService().unregister();} @TO@ Block@@ThenBody:{  for (  ImportRegistration reg : registrations.values()) {    reg.getImportedService().unregister();  }} @AT@ 14001 @LENGTH@ 148


UPD ExpressionStatement@@Assignment:serverGroups=Util.getAllReferencingServerGroups(deploymentName,client) @TO@ Assignment:serverGroups=Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15138 @LENGTH@ 74
---UPD Assignment@@serverGroups=Util.getAllReferencingServerGroups(deploymentName,client) @TO@ serverGroups=Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15138 @LENGTH@ 73
------UPD MethodInvocation@@Util.getAllReferencingServerGroups(deploymentName,client) @TO@ Util.getServerGroupsReferencingDeployment(deploymentName,client) @AT@ 15153 @LENGTH@ 58
---------UPD SimpleName@@MethodName:getAllReferencingServerGroups:[deploymentName, client] @TO@ MethodName:getServerGroupsReferencingDeployment:[deploymentName, client] @AT@ 15158 @LENGTH@ 53


UPD ExpressionStatement@@MethodInvocation:producerTemplate.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("./src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @TO@ MethodInvocation:template.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("./src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @AT@ 1629 @LENGTH@ 591
---UPD MethodInvocation@@producerTemplate.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("./src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @TO@ template.send(uri,new Processor(){
  public void process(  Exchange exchange) throws Exception {
    InputStream is=IOHelper.buffered(new FileInputStream("./src/test/resources/test.txt"));
    byte buffer[]=IOConverter.toBytes(is);
    is.close();
    exchange.setProperty(Exchange.CHARSET_NAME,"UTF-8");
    Message in=exchange.getIn();
    in.setBody(buffer);
  }
}
) @AT@ 1629 @LENGTH@ 590
------UPD SimpleName@@Name:producerTemplate @TO@ Name:template @AT@ 1629 @LENGTH@ 16


UPD VariableDeclarationStatement@@final Transaction transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID); @TO@ final Transaction transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID); @AT@ 2660 @LENGTH@ 101
---UPD VariableDeclarationFragment@@transaction=this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ transaction=this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2678 @LENGTH@ 82
------UPD MethodInvocation@@this.transactionsRepository.removeTransaction(this.xidTransactionID) @TO@ this.transactionsRepository.getImportedTransaction(this.xidTransactionID) @AT@ 2692 @LENGTH@ 68
---------UPD SimpleName@@MethodName:removeTransaction:[this.xidTransactionID] @TO@ MethodName:getImportedTransaction:[this.xidTransactionID] @AT@ 2720 @LENGTH@ 40


UPD ReturnStatement@@ClassInstanceCreation:new ChainedClosure<E>(closures) @TO@ ClassInstanceCreation:new ChainedClosure<E>(FunctorUtils.copy(closures)) @AT@ 2029 @LENGTH@ 39
---UPD ClassInstanceCreation@@ChainedClosure<E>[closures] @TO@ ChainedClosure<E>[FunctorUtils.copy(closures)] @AT@ 2036 @LENGTH@ 31
------MOV MethodInvocation@@FunctorUtils.copy(closures) @TO@ ClassInstanceCreation@@ChainedClosure<E>[closures] @AT@ 1992 @LENGTH@ 27
------DEL SimpleName@@closures @AT@ 2058 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from("timer://kickoff?period=10000").setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @TO@ MethodInvocation:from("timer://kickoff?period=1s").setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @AT@ 1563 @LENGTH@ 180
---UPD MethodInvocation@@from("timer://kickoff?period=10000").setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @TO@ from("timer://kickoff?period=1s").setBody(constant("select * from customer")).to("jdbc:testdb").to("mock:result") @AT@ 1563 @LENGTH@ 179
------UPD MethodInvocation@@MethodName:from:["timer://kickoff?period=10000"] @TO@ MethodName:from:["timer://kickoff?period=1s"] @AT@ 1563 @LENGTH@ 36
---------UPD StringLiteral@@"timer://kickoff?period=10000" @TO@ "timer://kickoff?period=1s" @AT@ 1568 @LENGTH@ 30


UPD FieldDeclaration@@private, List<EventNotifier>, [eventNotifiers=new ArrayList<EventNotifier>()] @TO@ private, List<EventNotifier>, [eventNotifiers=new CopyOnWriteArrayList<EventNotifier>()] @AT@ 2233 @LENGTH@ 76
---UPD VariableDeclarationFragment@@eventNotifiers=new ArrayList<EventNotifier>() @TO@ eventNotifiers=new CopyOnWriteArrayList<EventNotifier>() @AT@ 2261 @LENGTH@ 47
------UPD ClassInstanceCreation@@ArrayList<EventNotifier>[] @TO@ CopyOnWriteArrayList<EventNotifier>[] @AT@ 2278 @LENGTH@ 30
---------UPD ParameterizedType@@ArrayList<EventNotifier> @TO@ CopyOnWriteArrayList<EventNotifier> @AT@ 2282 @LENGTH@ 24
------------UPD SimpleType@@ArrayList @TO@ CopyOnWriteArrayList @AT@ 2282 @LENGTH@ 9


UPD FieldDeclaration@@private, ServiceRegistration, [registration] @TO@ private, ServiceRegistration<?>, [registration] @AT@ 1980 @LENGTH@ 41
---DEL SimpleType@@ServiceRegistration @AT@ 1988 @LENGTH@ 19
---INS ParameterizedType@@ServiceRegistration<?> @TO@ FieldDeclaration@@private, ServiceRegistration, [registration] @AT@ 2016 @LENGTH@ 22
------INS SimpleType@@ServiceRegistration @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2016 @LENGTH@ 19
------INS WildcardType@@? @TO@ ParameterizedType@@ServiceRegistration<?> @AT@ 2036 @LENGTH@ 1


UPD ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is not defined")) @TO@ MethodInvocation:JGroupsMessages.MESSAGES.protocolNotDefined(protocolRelativePath.toString()) @AT@ 1442 @LENGTH@ 143
---DEL ClassInstanceCreation@@OperationFailedException[new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is not defined")] @AT@ 1448 @LENGTH@ 136
------DEL New@@new @AT@ 1448 @LENGTH@ 3
------DEL SimpleType@@OperationFailedException @AT@ 1452 @LENGTH@ 24
------DEL MethodInvocation@@new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is not defined") @AT@ 1477 @LENGTH@ 106
---------DEL ClassInstanceCreation@@ModelNode[] @AT@ 1477 @LENGTH@ 15
------------DEL New@@new @AT@ 1477 @LENGTH@ 3
------------DEL SimpleType@@ModelNode @AT@ 1481 @LENGTH@ 9
---INS MethodInvocation@@JGroupsMessages.MESSAGES.protocolNotDefined(protocolRelativePath.toString()) @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFailedException(new ModelNode().set("protocol with relative path " + protocolRelativePath.toString() + " is not defined")) @AT@ 1504 @LENGTH@ 76
------MOV SimpleName@@MethodName:set:["protocol with relative path " + protocolRelativePath.toString() + " is not defined"] @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.protocolNotDefined(protocolRelativePath.toString()) @AT@ 1493 @LENGTH@ 90
---------DEL InfixExpression@@"protocol with relative path " + protocolRelativePath.toString() + " is not defined" @AT@ 1497 @LENGTH@ 85
------------DEL StringLiteral@@"protocol with relative path " @AT@ 1497 @LENGTH@ 30
------------DEL Operator@@+ @AT@ 1527 @LENGTH@ 1
------------DEL MethodInvocation@@protocolRelativePath.toString() @AT@ 1530 @LENGTH@ 31
------------DEL StringLiteral@@" is not defined" @AT@ 1565 @LENGTH@ 17
---------INS MethodInvocation@@protocolRelativePath.toString() @TO@ SimpleName@@MethodName:set:["protocol with relative path " + protocolRelativePath.toString() + " is not defined"] @AT@ 1548 @LENGTH@ 31
------------MOV SimpleName@@Name:protocolRelativePath @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1530 @LENGTH@ 20
------------MOV SimpleName@@Name:protocolRelativePath @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1530 @LENGTH@ 20
------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@protocolRelativePath.toString() @AT@ 1551 @LENGTH@ 10
------INS QualifiedName@@Name:JGroupsMessages.MESSAGES @TO@ MethodInvocation@@JGroupsMessages.MESSAGES.protocolNotDefined(protocolRelativePath.toString()) @AT@ 1504 @LENGTH@ 24


MOV MethodDeclaration@@public, void, MethodName:configure, Exception,  @TO@ TypeDeclaration@@[@ContextName("contextA"), public]RoutesContextA, RouteBuilder @AT@ 1647 @LENGTH@ 138


UPD IfStatement@@if (camelExchange.getPattern().isOutCapable()) {  response=camelExchange.getOut();} else {  response=camelExchange.getIn();} @TO@ if (camelExchange.hasOut()) {  response=camelExchange.getOut();  LOG.debug("Get the response from the out message");} else {  response=camelExchange.getIn();  LOG.debug("Get the response from the in message as a fallback");} @AT@ 12525 @LENGTH@ 168


DEL ExpressionStatement@@MethodInvocation:appendToLineInFile(sb,"etc/org.apache.karaf.features.cfg","featuresBoot=","fabric-agent,") @AT@ 8283 @LENGTH@ 94
---DEL MethodInvocation@@appendToLineInFile(sb,"etc/org.apache.karaf.features.cfg","featuresBoot=","fabric-agent,") @AT@ 8283 @LENGTH@ 93
------DEL SimpleName@@MethodName:appendToLineInFile:[sb, "etc/org.apache.karaf.features.cfg", "featuresBoot=", "fabric-agent,"] @AT@ 8283 @LENGTH@ 93
---------DEL SimpleName@@sb @AT@ 8302 @LENGTH@ 2
---------DEL StringLiteral@@"etc/org.apache.karaf.features.cfg" @AT@ 8306 @LENGTH@ 35
---------DEL StringLiteral@@"featuresBoot=" @AT@ 8343 @LENGTH@ 15
---------DEL StringLiteral@@"fabric-agent," @AT@ 8360 @LENGTH@ 15


INS IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @TO@ MethodDeclaration@@public, void, MethodName:decodeRequest, ClassLoader loader, Class<?>[] types, DataByteArrayInputStream source, Object[] target, IOException, ClassNotFoundException,  @AT@ 2687 @LENGTH@ 91
---INS InfixExpression@@args != null @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2691 @LENGTH@ 10
------INS SimpleName@@args @TO@ InfixExpression@@args != null @AT@ 2691 @LENGTH@ 4
------INS Operator@@!= @TO@ InfixExpression@@args != null @AT@ 2695 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@args != null @AT@ 2697 @LENGTH@ 4
---INS Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @TO@ IfStatement@@if (args != null) {  System.arraycopy(args,0,target,0,args.length);} @AT@ 2704 @LENGTH@ 74
------MOV ExpressionStatement@@MethodInvocation:System.arraycopy(args,0,target,0,args.length) @TO@ Block@@ThenBody:{  System.arraycopy(args,0,target,0,args.length);} @AT@ 2687 @LENGTH@ 50


INS MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @TO@ TypeDeclaration@@[public]ModelTestKernelServices,  @AT@ 8330 @LENGTH@ 170
---INS Modifier@@public @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8330 @LENGTH@ 6
---INS SimpleType@@ModelNode @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8337 @LENGTH@ 9
---INS SimpleName@@MethodName:executeOperation @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8347 @LENGTH@ 16
---INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8364 @LENGTH@ 19
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 8364 @LENGTH@ 9
------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 8374 @LENGTH@ 9
---INS SingleVariableDeclaration@@OperationTransactionControl txControl @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8385 @LENGTH@ 37
------INS SimpleType@@OperationTransactionControl @TO@ SingleVariableDeclaration@@OperationTransactionControl txControl @AT@ 8385 @LENGTH@ 27
------INS SimpleName@@txControl @TO@ SingleVariableDeclaration@@OperationTransactionControl txControl @AT@ 8413 @LENGTH@ 9
---INS ReturnStatement@@MethodInvocation:controller.execute(operation,null,txControl,null) @TO@ MethodDeclaration@@public, ModelNode, MethodName:executeOperation, ModelNode operation, OperationTransactionControl txControl,  @AT@ 8434 @LENGTH@ 60
------INS MethodInvocation@@controller.execute(operation,null,txControl,null) @TO@ ReturnStatement@@MethodInvocation:controller.execute(operation,null,txControl,null) @AT@ 8441 @LENGTH@ 52
---------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.execute(operation,null,txControl,null) @AT@ 8441 @LENGTH@ 10
---------INS SimpleName@@MethodName:execute:[operation, null, txControl, null] @TO@ MethodInvocation@@controller.execute(operation,null,txControl,null) @AT@ 8452 @LENGTH@ 41
------------INS SimpleName@@operation @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8460 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8471 @LENGTH@ 4
------------INS SimpleName@@txControl @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8477 @LENGTH@ 9
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:execute:[operation, null, txControl, null] @AT@ 8488 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @TO@ MethodDeclaration@@private, void, MethodName:registerTransformers1_0_0, SubsystemRegistration registration,  @AT@ 8608 @LENGTH@ 54
---INS MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @TO@ ExpressionStatement@@MethodInvocation:resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8608 @LENGTH@ 53
------INS SimpleName@@Name:resolved @TO@ MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8608 @LENGTH@ 8
------INS SimpleName@@MethodName:discardOperations:[WRITE_ATTRIBUTE_OPERATION] @TO@ MethodInvocation@@resolved.discardOperations(WRITE_ATTRIBUTE_OPERATION) @AT@ 8617 @LENGTH@ 44
---------INS SimpleName@@WRITE_ATTRIBUTE_OPERATION @TO@ SimpleName@@MethodName:discardOperations:[WRITE_ATTRIBUTE_OPERATION] @AT@ 8635 @LENGTH@ 25


UPD TryStatement@@try {  String mvn=future.getUrl();  String file=future.getFile().toURI().toURL().toString();  String real=url.replace(mvn,file);  SimpleDownloadTask task=new SimpleDownloadTask(real,executor);  executor.submit(task);  task.addListener(new FutureListener<DownloadFuture>(){    @Override public void operationComplete(    DownloadFuture future){      try {        download.setFile(future.getFile());      } catch (      IOException e) {      }    }  });} catch (IOException e) {} @TO@ try {  final String mvn=future.getUrl();  String file=future.getFile().toURI().toURL().toString();  String real=url.replace(mvn,file);  SimpleDownloadTask task=new SimpleDownloadTask(real,executor);  executor.submit(task);  task.addListener(new FutureListener<DownloadFuture>(){    @Override public void operationComplete(    DownloadFuture future){      try {        download.setFile(future.getFile());      } catch (      IOException e) {        download.setException(e);      }    }  });} catch (IOException e) {  download.setException(e);} @AT@ 3013 @LENGTH@ 1022
---UPD VariableDeclarationStatement@@String mvn=future.getUrl(); @TO@ final String mvn=future.getUrl(); @AT@ 3047 @LENGTH@ 29
------INS Modifier@@final @TO@ VariableDeclarationStatement@@String mvn=future.getUrl(); @AT@ 3047 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
) @TO@ MethodInvocation:task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
) @AT@ 3403 @LENGTH@ 518
------UPD MethodInvocation@@task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
) @TO@ task.addListener(new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
) @AT@ 3403 @LENGTH@ 517
---------UPD SimpleName@@MethodName:addListener:[new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
    }
  }
}
] @TO@ MethodName:addListener:[new FutureListener<DownloadFuture>(){
  @Override public void operationComplete(  DownloadFuture future){
    try {
      download.setFile(future.getFile());
    }
 catch (    IOException e) {
      download.setException(e);
    }
  }
}
] @AT@ 3408 @LENGTH@ 512
---UPD CatchClause@@catch (IOException e) {} @TO@ catch (IOException e) {  download.setException(e);} @AT@ 3948 @LENGTH@ 87
------INS ExpressionStatement@@MethodInvocation:download.setException(e) @TO@ CatchClause@@catch (IOException e) {} @AT@ 4022 @LENGTH@ 25
---------INS MethodInvocation@@download.setException(e) @TO@ ExpressionStatement@@MethodInvocation:download.setException(e) @AT@ 4022 @LENGTH@ 24
------------INS SimpleName@@Name:download @TO@ MethodInvocation@@download.setException(e) @AT@ 4022 @LENGTH@ 8
------------INS SimpleName@@MethodName:setException:[e] @TO@ MethodInvocation@@download.setException(e) @AT@ 4031 @LENGTH@ 15
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:setException:[e] @AT@ 4044 @LENGTH@ 1


MOV IfStatement@@if (raName != null && deploymentServiceName != null) {  ConnectorServices.unregisterDeployment(raName,deploymentServiceName);} @TO@ MethodDeclaration@@public, void, MethodName:stop, StopContext context,  @AT@ 6941 @LENGTH@ 147


DEL FieldDeclaration@@protected, BundleContext, [bundleContext] @AT@ 2051 @LENGTH@ 38
---DEL Modifier@@protected @AT@ 2051 @LENGTH@ 9
---DEL SimpleType@@BundleContext @AT@ 2061 @LENGTH@ 13
---DEL VariableDeclarationFragment@@bundleContext @AT@ 2075 @LENGTH@ 13
------DEL SimpleName@@bundleContext @AT@ 2075 @LENGTH@ 13


UPD ReturnStatement@@MethodInvocation:serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ MethodInvocation:serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).addDependency(PathManagerService.SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11274 @LENGTH@ 452
---UPD MethodInvocation@@serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).addDependency(PathManagerService.SERVICE_NAME).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11281 @LENGTH@ 444
------INS MethodInvocation@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @TO@ MethodInvocation@@serviceTarget.addService(SERVICE_NAME,service).addDependency(HostControllerService.HC_EXECUTOR_SERVICE_NAME,ExecutorService.class,service.getExecutorServiceInjector()).addDependency(ProcessControllerConnectionService.SERVICE_NAME,ProcessControllerConnectionService.class,service.injectedProcessControllerConnection).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 11281 @LENGTH@ 418
---------INS QualifiedName@@PathManagerService.SERVICE_NAME @TO@ MethodInvocation@@MethodName:addDependency:[PathManagerService.SERVICE_NAME] @AT@ 11667 @LENGTH@ 31
------------INS SimpleName@@PathManagerService @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 11667 @LENGTH@ 18
------------INS SimpleName@@SERVICE_NAME @TO@ QualifiedName@@PathManagerService.SERVICE_NAME @AT@ 11686 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 52
---UPD Assignment@@deploymentNames=Util.getDeployments(client,name) @TO@ deploymentNames=Util.getMatchingDeployments(client,name) @AT@ 14055 @LENGTH@ 51
------UPD MethodInvocation@@Util.getDeployments(client,name) @TO@ Util.getMatchingDeployments(client,name) @AT@ 14073 @LENGTH@ 33
---------UPD SimpleName@@MethodName:getDeployments:[client, name] @TO@ MethodName:getMatchingDeployments:[client, name] @AT@ 14078 @LENGTH@ 28


UPD IfStatement@@if (inExtendedComment) {  if (line.endsWith(ResourceConstants.EXT_CMT_END)) {    inExtendedComment=false;  } else {  }} else {  if (line.startsWith(ResourceConstants.EXT_CMT_START)) {    inExtendedComment=true;  } else   if (line.length() > 0) {    ls.add(line);  } else {  }} @TO@ if (inExtendedComment) {  if (line.endsWith(ResourceConstants.EXT_CMT_END)) {    inExtendedComment=false;  }} else {  if (line.startsWith(ResourceConstants.EXT_CMT_START)) {    inExtendedComment=true;  } else   if (line.length() > 0) {    ls.add(line);  }} @AT@ 5576 @LENGTH@ 528
---UPD Block@@ThenBody:{  if (line.endsWith(ResourceConstants.EXT_CMT_END)) {    inExtendedComment=false;  } else {  }} @TO@ ThenBody:{  if (line.endsWith(ResourceConstants.EXT_CMT_END)) {    inExtendedComment=false;  }} @AT@ 5599 @LENGTH@ 201
------UPD IfStatement@@if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inExtendedComment=false;} else {} @TO@ if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inExtendedComment=false;} @AT@ 5617 @LENGTH@ 169
---------DEL Block@@ElseBody:{} @AT@ 5739 @LENGTH@ 47
---UPD Block@@ElseBody:{  if (line.startsWith(ResourceConstants.EXT_CMT_START)) {    inExtendedComment=true;  } else   if (line.length() > 0) {    ls.add(line);  } else {  }} @TO@ ElseBody:{  if (line.startsWith(ResourceConstants.EXT_CMT_START)) {    inExtendedComment=true;  } else   if (line.length() > 0) {    ls.add(line);  }} @AT@ 5806 @LENGTH@ 298
------UPD IfStatement@@if (line.startsWith(ResourceConstants.EXT_CMT_START)) {  inExtendedComment=true;} else if (line.length() > 0) {  ls.add(line);} else {} @TO@ if (line.startsWith(ResourceConstants.EXT_CMT_START)) {  inExtendedComment=true;} else if (line.length() > 0) {  ls.add(line);} @AT@ 5824 @LENGTH@ 266
---------UPD Block@@ElseBody:if (line.length() > 0) {  ls.add(line);} else {} @TO@ ElseBody:if (line.length() > 0) {  ls.add(line);} @AT@ 5949 @LENGTH@ 141
------------UPD IfStatement@@if (line.length() > 0) {  ls.add(line);} else {} @TO@ if (line.length() > 0) {  ls.add(line);} @AT@ 5949 @LENGTH@ 141
---------------DEL Block@@ElseBody:{} @AT@ 6031 @LENGTH@ 59


UPD ExpressionStatement@@MethodInvocation:runningModeControl.setReloaded(true) @TO@ MethodInvocation:runningModeControl.setReloaded() @AT@ 5420 @LENGTH@ 37
---UPD MethodInvocation@@runningModeControl.setReloaded(true) @TO@ runningModeControl.setReloaded() @AT@ 5420 @LENGTH@ 36
------UPD SimpleName@@MethodName:setReloaded:[true] @TO@ MethodName:setReloaded:[] @AT@ 5439 @LENGTH@ 17
---------DEL BooleanLiteral@@true @AT@ 5451 @LENGTH@ 4


INS ExpressionStatement@@SuperMethodInvocation:super.setApplicationContext(applicationContext) @TO@ MethodDeclaration@@public, void, MethodName:setApplicationContext, ApplicationContext applicationContext, BeansException,  @AT@ 3259 @LENGTH@ 48
---INS SuperMethodInvocation@@super.setApplicationContext(applicationContext) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setApplicationContext(applicationContext) @AT@ 3259 @LENGTH@ 47
------INS SimpleName@@MethodName:setApplicationContext:[applicationContext] @TO@ SuperMethodInvocation@@super.setApplicationContext(applicationContext) @AT@ 3265 @LENGTH@ 21
------INS SimpleName@@applicationContext @TO@ SuperMethodInvocation@@super.setApplicationContext(applicationContext) @AT@ 3287 @LENGTH@ 18


UPD MethodDeclaration@@public, boolean, MethodName:hasKey, Object key,  @TO@ public, Boolean, MethodName:hasKey, Object key,  @AT@ 1681 @LENGTH@ 74
---DEL PrimitiveType@@boolean @AT@ 1688 @LENGTH@ 7
---INS SimpleType@@Boolean @TO@ MethodDeclaration@@public, boolean, MethodName:hasKey, Object key,  @AT@ 1688 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:op.get(RUNTIME_NAME.getName()).set(state.get(RUNTIME_NAME.getName())) @TO@ MethodInvocation:op.get(RUNTIME_NAME_NILLABLE.getName()).set(state.get(RUNTIME_NAME_NILLABLE.getName())) @AT@ 2721 @LENGTH@ 70
---UPD MethodInvocation@@op.get(RUNTIME_NAME.getName()).set(state.get(RUNTIME_NAME.getName())) @TO@ op.get(RUNTIME_NAME_NILLABLE.getName()).set(state.get(RUNTIME_NAME_NILLABLE.getName())) @AT@ 2721 @LENGTH@ 69
------UPD MethodInvocation@@MethodName:get:[RUNTIME_NAME.getName()] @TO@ MethodName:get:[RUNTIME_NAME_NILLABLE.getName()] @AT@ 2721 @LENGTH@ 30
---------UPD MethodInvocation@@RUNTIME_NAME.getName() @TO@ RUNTIME_NAME_NILLABLE.getName() @AT@ 2728 @LENGTH@ 22
------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 2728 @LENGTH@ 12
------UPD SimpleName@@MethodName:set:[state.get(RUNTIME_NAME.getName())] @TO@ MethodName:set:[state.get(RUNTIME_NAME_NILLABLE.getName())] @AT@ 2752 @LENGTH@ 38
---------UPD MethodInvocation@@state.get(RUNTIME_NAME.getName()) @TO@ state.get(RUNTIME_NAME_NILLABLE.getName()) @AT@ 2756 @LENGTH@ 33
------------UPD SimpleName@@MethodName:get:[RUNTIME_NAME.getName()] @TO@ MethodName:get:[RUNTIME_NAME_NILLABLE.getName()] @AT@ 2762 @LENGTH@ 27
---------------UPD MethodInvocation@@RUNTIME_NAME.getName() @TO@ RUNTIME_NAME_NILLABLE.getName() @AT@ 2766 @LENGTH@ 22
------------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 2766 @LENGTH@ 12


INS IfStatement@@if (exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class)) {  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} else {  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @TO@ MethodDeclaration@@public, void, MethodName:releaseExclusiveReadLock, GenericFileOperations<File> operations, GenericFile<File> file, Exchange exchange, Exception,  @AT@ 3027 @LENGTH@ 415
---INS MethodInvocation@@exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class) @TO@ IfStatement@@if (exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class)) {  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} else {  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @AT@ 3031 @LENGTH@ 71
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class) @AT@ 3031 @LENGTH@ 8
------INS SimpleName@@MethodName:getProperty:[Exchange.FILE_LOCK_FILE_GOT, false, Boolean.class] @TO@ MethodInvocation@@exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class) @AT@ 3040 @LENGTH@ 62
---------INS QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @TO@ SimpleName@@MethodName:getProperty:[Exchange.FILE_LOCK_FILE_GOT, false, Boolean.class] @AT@ 3052 @LENGTH@ 27
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @AT@ 3052 @LENGTH@ 8
------------INS SimpleName@@FILE_LOCK_FILE_GOT @TO@ QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @AT@ 3061 @LENGTH@ 18
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getProperty:[Exchange.FILE_LOCK_FILE_GOT, false, Boolean.class] @AT@ 3081 @LENGTH@ 5
---------INS TypeLiteral@@Boolean.class @TO@ SimpleName@@MethodName:getProperty:[Exchange.FILE_LOCK_FILE_GOT, false, Boolean.class] @AT@ 3088 @LENGTH@ 13
---INS Block@@ThenBody:{  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} @TO@ IfStatement@@if (exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class)) {  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} else {  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @AT@ 3104 @LENGTH@ 206
------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Unlocking file: {}",lockFileName) @TO@ Block@@ThenBody:{  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} @AT@ 2897 @LENGTH@ 46
------MOV VariableDeclarationStatement@@boolean deleted=FileUtil.deleteFile(lock); @TO@ Block@@ThenBody:{  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} @AT@ 2953 @LENGTH@ 44
------MOV ExpressionStatement@@MethodInvocation:LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted) @TO@ Block@@ThenBody:{  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} @AT@ 3006 @LENGTH@ 66
---INS Block@@ElseBody:{  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @TO@ IfStatement@@if (exchange.getProperty(Exchange.FILE_LOCK_FILE_GOT,false,Boolean.class)) {  LOG.trace("Unlocking file: {}",lockFileName);  boolean deleted=FileUtil.deleteFile(lock);  LOG.trace("Lock file: {} was deleted: {}",lockFileName,deleted);} else {  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @AT@ 3316 @LENGTH@ 126
------INS ExpressionStatement@@MethodInvocation:LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName) @TO@ Block@@ElseBody:{  LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName);} @AT@ 3330 @LENGTH@ 102
---------INS MethodInvocation@@LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName) @TO@ ExpressionStatement@@MethodInvocation:LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName) @AT@ 3330 @LENGTH@ 101
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName) @AT@ 3330 @LENGTH@ 3
------------INS SimpleName@@MethodName:trace:["Don't try to delete the Lock file: {} as camel doesn't get to lock before.", lockFileName] @TO@ MethodInvocation@@LOG.trace("Don't try to delete the Lock file: {} as camel doesn't get to lock before.",lockFileName) @AT@ 3334 @LENGTH@ 97
---------------INS StringLiteral@@"Don't try to delete the Lock file: {} as camel doesn't get to lock before." @TO@ SimpleName@@MethodName:trace:["Don't try to delete the Lock file: {} as camel doesn't get to lock before.", lockFileName] @AT@ 3340 @LENGTH@ 76
---------------INS SimpleName@@lockFileName @TO@ SimpleName@@MethodName:trace:["Don't try to delete the Lock file: {} as camel doesn't get to lock before.", lockFileName] @AT@ 3418 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:deploymentNames=Util.getMatchingDeployments(client,name) @TO@ Assignment:deploymentNames=Util.getDeployments(client,name) @AT@ 14055 @LENGTH@ 60
---UPD Assignment@@deploymentNames=Util.getMatchingDeployments(client,name) @TO@ deploymentNames=Util.getDeployments(client,name) @AT@ 14055 @LENGTH@ 59
------UPD MethodInvocation@@Util.getMatchingDeployments(client,name) @TO@ Util.getDeployments(client,name) @AT@ 14073 @LENGTH@ 41
---------UPD SimpleName@@MethodName:getMatchingDeployments:[client, name] @TO@ MethodName:getDeployments:[client, name] @AT@ 14078 @LENGTH@ 36


UPD MethodDeclaration@@private, voidMethodName:ObjectListAttributeDefinition, final String name, final String xmlName, final ObjectTypeAttributeDefinition valueType, final boolean allowNull, final int minSize, final int maxSize, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @TO@ private, voidMethodName:ObjectListAttributeDefinition, final String name, final String xmlName, final ObjectTypeAttributeDefinition valueType, final boolean allowNull, final int minSize, final int maxSize, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final DeprecationData deprecated, final AttributeAccess.Flag... flags,  @AT@ 2275 @LENGTH@ 549
---INS SingleVariableDeclaration@@final DeprecationData deprecated @TO@ MethodDeclaration@@private, voidMethodName:ObjectListAttributeDefinition, final String name, final String xmlName, final ObjectTypeAttributeDefinition valueType, final boolean allowNull, final int minSize, final int maxSize, final String[] alternatives, final String[] requires, final AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final AttributeAccess.Flag... flags,  @AT@ 2635 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2635 @LENGTH@ 5
------INS SimpleType@@DeprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2641 @LENGTH@ 15
------INS SimpleName@@deprecated @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 2657 @LENGTH@ 10
---UPD SuperConstructorInvocation@@super(name,xmlName,allowNull,minSize,maxSize,valueType.getValidator(),alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @TO@ super(name,xmlName,allowNull,minSize,maxSize,valueType.getValidator(),alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags);
 @AT@ 2640 @LENGTH@ 142
------INS SimpleName@@deprecated @TO@ SuperConstructorInvocation@@super(name,xmlName,allowNull,minSize,maxSize,valueType.getValidator(),alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @AT@ 2851 @LENGTH@ 10


INS MethodDeclaration@@ScheduledExecutorService, MethodName:getErrorHandlerExecutorService,  @TO@ TypeDeclaration@@[public]CamelContext, [SuspendableService, RuntimeConfiguration] @AT@ 30337 @LENGTH@ 33
---INS SimpleType@@ScheduledExecutorService @TO@ MethodDeclaration@@ScheduledExecutorService, MethodName:getErrorHandlerExecutorService,  @AT@ 30312 @LENGTH@ 24
---INS SimpleName@@MethodName:getErrorHandlerExecutorService @TO@ MethodDeclaration@@ScheduledExecutorService, MethodName:getErrorHandlerExecutorService,  @AT@ 30337 @LENGTH@ 30


UPD IfStatement@@if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6) {  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @TO@ if (PlatformMBeanUtil.JVM_MAJOR_VERSION > 6) {  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME);  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12032 @LENGTH@ 1927
---UPD Block@@ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @TO@ ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME);  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12077 @LENGTH@ 1882
------INS ExpressionStatement@@MethodInvocation:bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @TO@ Block@@ThenBody:{  ManagementResourceRegistration bufPoolRoot=root.registerSubModel(BUFFER_POOL_PATH,new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolRootResource(locale);    }  });  ManagementResourceRegistration bufPool=bufPoolRoot.registerSubModel(PathElement.pathElement(NAME),new DescriptionProvider(){    @Override public ModelNode getModelDescription(    Locale locale){      return PlatformMBeanDescriptions.getBufferPoolResource(locale);    }  });  BufferPoolMXBeanAttributeHandler.INSTANCE.register(bufPool);} @AT@ 12436 @LENGTH@ 82
---------INS MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @TO@ ExpressionStatement@@MethodInvocation:bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12436 @LENGTH@ 81
------------INS SimpleName@@Name:bufPoolRoot @TO@ MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12436 @LENGTH@ 11
------------INS SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @TO@ MethodInvocation@@bufPoolRoot.registerReadOnlyAttribute(NAME,null,AttributeAccess.Storage.RUNTIME) @AT@ 12448 @LENGTH@ 69
---------------INS SimpleName@@NAME @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12474 @LENGTH@ 4
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12479 @LENGTH@ 4
---------------INS QualifiedName@@AttributeAccess.Storage.RUNTIME @TO@ SimpleName@@MethodName:registerReadOnlyAttribute:[NAME, null, AttributeAccess.Storage.RUNTIME] @AT@ 12485 @LENGTH@ 31
------------------INS QualifiedName@@AttributeAccess.Storage @TO@ QualifiedName@@AttributeAccess.Storage.RUNTIME @AT@ 12485 @LENGTH@ 23
---------------------INS SimpleName@@AttributeAccess @TO@ QualifiedName@@AttributeAccess.Storage @AT@ 12485 @LENGTH@ 15
---------------------INS SimpleName@@Storage @TO@ QualifiedName@@AttributeAccess.Storage @AT@ 12501 @LENGTH@ 7
------------------INS SimpleName@@RUNTIME @TO@ QualifiedName@@AttributeAccess.Storage.RUNTIME @AT@ 12509 @LENGTH@ 7


INS MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @TO@ TypeDeclaration@@[public, abstract]RepositoryExporterSupport,  @AT@ 1799 @LENGTH@ 160
---INS Modifier@@public @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1799 @LENGTH@ 6
---INS SimpleType@@S @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1806 @LENGTH@ 1
---INS SimpleName@@MethodName:repositoryExporters @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1808 @LENGTH@ 19
---INS SingleVariableDeclaration@@RepositoryExporter... repositoryExporter @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1828 @LENGTH@ 40
------INS SimpleType@@RepositoryExporter @TO@ SingleVariableDeclaration@@RepositoryExporter... repositoryExporter @AT@ 1828 @LENGTH@ 18
------INS SimpleName@@repositoryExporter @TO@ SingleVariableDeclaration@@RepositoryExporter... repositoryExporter @AT@ 1850 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:setRepositoryExporters(Arrays.asList(repositoryExporter)) @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1876 @LENGTH@ 58
------INS MethodInvocation@@setRepositoryExporters(Arrays.asList(repositoryExporter)) @TO@ ExpressionStatement@@MethodInvocation:setRepositoryExporters(Arrays.asList(repositoryExporter)) @AT@ 1876 @LENGTH@ 57
---------INS SimpleName@@MethodName:setRepositoryExporters:[Arrays.asList(repositoryExporter)] @TO@ MethodInvocation@@setRepositoryExporters(Arrays.asList(repositoryExporter)) @AT@ 1876 @LENGTH@ 57
------------INS MethodInvocation@@Arrays.asList(repositoryExporter) @TO@ SimpleName@@MethodName:setRepositoryExporters:[Arrays.asList(repositoryExporter)] @AT@ 1899 @LENGTH@ 33
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(repositoryExporter) @AT@ 1899 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[repositoryExporter] @TO@ MethodInvocation@@Arrays.asList(repositoryExporter) @AT@ 1906 @LENGTH@ 26
------------------INS SimpleName@@repositoryExporter @TO@ SimpleName@@MethodName:asList:[repositoryExporter] @AT@ 1913 @LENGTH@ 18
---INS ReturnStatement@@CastExpression:(S)this @TO@ MethodDeclaration@@public, S, MethodName:repositoryExporters, RepositoryExporter... repositoryExporter,  @AT@ 1939 @LENGTH@ 16
------INS CastExpression@@(S)this @TO@ ReturnStatement@@CastExpression:(S)this @AT@ 1946 @LENGTH@ 8
---------INS SimpleType@@S @TO@ CastExpression@@(S)this @AT@ 1947 @LENGTH@ 1
---------INS ThisExpression@@this @TO@ CastExpression@@(S)this @AT@ 1950 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(new HashSet<Object>(Arrays.asList(3,5,7)),parameterInfo.getLegalValues()) @AT@ 16229 @LENGTH@ 97
---DEL MethodInvocation@@Assert.assertEquals(new HashSet<Object>(Arrays.asList(3,5,7)),parameterInfo.getLegalValues()) @AT@ 16229 @LENGTH@ 96
------DEL SimpleName@@Name:Assert @AT@ 16229 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertEquals:[new HashSet<Object>(Arrays.asList(3,5,7)), parameterInfo.getLegalValues()] @AT@ 16236 @LENGTH@ 89
---------DEL ClassInstanceCreation@@HashSet<Object>[Arrays.asList(3,5,7)] @AT@ 16249 @LENGTH@ 43
------------DEL New@@new @AT@ 16249 @LENGTH@ 3
------------DEL ParameterizedType@@HashSet<Object> @AT@ 16253 @LENGTH@ 15
---------------DEL SimpleType@@HashSet @AT@ 16253 @LENGTH@ 7
---------------DEL SimpleType@@Object @AT@ 16261 @LENGTH@ 6
------------DEL MethodInvocation@@Arrays.asList(3,5,7) @AT@ 16269 @LENGTH@ 22
---------------DEL SimpleName@@Name:Arrays @AT@ 16269 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:asList:[3, 5, 7] @AT@ 16276 @LENGTH@ 15
------------------DEL NumberLiteral@@3 @AT@ 16283 @LENGTH@ 1
------------------DEL NumberLiteral@@5 @AT@ 16286 @LENGTH@ 1
------------------DEL NumberLiteral@@7 @AT@ 16289 @LENGTH@ 1
---------DEL MethodInvocation@@parameterInfo.getLegalValues() @AT@ 16294 @LENGTH@ 30
------------DEL SimpleName@@Name:parameterInfo @AT@ 16294 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getLegalValues:[] @AT@ 16308 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory) @TO@ MethodInvocation:LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",xpathFactory) @AT@ 15336 @LENGTH@ 106
---UPD MethodInvocation@@LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",defaultXPathFactory) @TO@ LOG.info("Using objectModelUri " + objectModelUri + " when created XPathFactory {}",xpathFactory) @AT@ 15336 @LENGTH@ 105
------UPD SimpleName@@MethodName:info:["Using objectModelUri " + objectModelUri + " when created XPathFactory {}", defaultXPathFactory] @TO@ MethodName:info:["Using objectModelUri " + objectModelUri + " when created XPathFactory {}", xpathFactory] @AT@ 15340 @LENGTH@ 101
---------UPD SimpleName@@defaultXPathFactory @TO@ xpathFactory @AT@ 15421 @LENGTH@ 19


INS VariableDeclarationStatement@@BufferedReader reader=null; @TO@ MethodDeclaration@@public, static, boolean, MethodName:isWindowsScript, File file,  @AT@ 2683 @LENGTH@ 29
---INS SimpleType@@BufferedReader @TO@ VariableDeclarationStatement@@BufferedReader reader=null; @AT@ 2683 @LENGTH@ 14
---INS VariableDeclarationFragment@@reader=null @TO@ VariableDeclarationStatement@@BufferedReader reader=null; @AT@ 2698 @LENGTH@ 13
------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=null @AT@ 2698 @LENGTH@ 6
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@reader=null @AT@ 2707 @LENGTH@ 4


UPD MethodDeclaration@@voidMethodName:CommandState, AddressCommandSeparatorState addrCmdSeparator, ArgumentListState argList, OutputTargetState outputRedirect,  @TO@ voidMethodName:CommandState, AddressCommandSeparatorState addrCmdSeparator, final ArgumentListState argList, OutputTargetState outputRedirect,  @AT@ 1729 @LENGTH@ 810
---UPD SingleVariableDeclaration@@ArgumentListState argList @TO@ final ArgumentListState argList @AT@ 1789 @LENGTH@ 25
------INS Modifier@@final @TO@ SingleVariableDeclaration@@ArgumentListState argList @AT@ 1839 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:setDefaultHandler(new EnterStateCharacterHandler(argList)) @TO@ MethodInvocation:setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(argList);
  }
}
) @AT@ 1954 @LENGTH@ 59
------UPD MethodInvocation@@setDefaultHandler(new EnterStateCharacterHandler(argList)) @TO@ setDefaultHandler(new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(argList);
  }
}
) @AT@ 1954 @LENGTH@ 58
---------UPD SimpleName@@MethodName:setDefaultHandler:[new EnterStateCharacterHandler(argList)] @TO@ MethodName:setDefaultHandler:[new LineBreakHandler(false,false){
  @Override protected void doHandle(  ParsingContext ctx) throws CommandFormatException {
    ctx.enterState(argList);
  }
}
] @AT@ 1954 @LENGTH@ 58
------------UPD ClassInstanceCreation@@EnterStateCharacterHandler[argList] @TO@ LineBreakHandler[false, false] @AT@ 1972 @LENGTH@ 39
---------------UPD SimpleType@@EnterStateCharacterHandler @TO@ LineBreakHandler @AT@ 1976 @LENGTH@ 26
---------------DEL SimpleName@@argList @AT@ 2003 @LENGTH@ 7
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[argList] @AT@ 2049 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[argList] @AT@ 2056 @LENGTH@ 5
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@EnterStateCharacterHandler[argList] @AT@ 2062 @LENGTH@ 176
------------------INS MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2098 @LENGTH@ 130
---------------------INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2098 @LENGTH@ 9
---------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2108 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:doHandle @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2113 @LENGTH@ 8
---------------------INS SingleVariableDeclaration@@ParsingContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2122 @LENGTH@ 18
------------------------INS SimpleType@@ParsingContext @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2122 @LENGTH@ 14
------------------------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@ParsingContext ctx @AT@ 2137 @LENGTH@ 3
---------------------INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2149 @LENGTH@ 22
---------------------INS ExpressionStatement@@MethodInvocation:ctx.enterState(argList) @TO@ MethodDeclaration@@protected, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2190 @LENGTH@ 24
------------------------INS MethodInvocation@@ctx.enterState(argList) @TO@ ExpressionStatement@@MethodInvocation:ctx.enterState(argList) @AT@ 2190 @LENGTH@ 23
---------------------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.enterState(argList) @AT@ 2190 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:enterState:[argList] @TO@ MethodInvocation@@ctx.enterState(argList) @AT@ 2194 @LENGTH@ 19
------------------------------INS SimpleName@@argList @TO@ SimpleName@@MethodName:enterState:[argList] @AT@ 2205 @LENGTH@ 7


UPD IfStatement@@if (gatewayQueueElement != null) {  BeanDefinitionBuilder queueBuilder=BeanDefinitionBuilder.genericBeanDefinition(GatewayProxy.GatewayQueue.class);  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"alert-threshold");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-size");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-time-interval");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"maximum-queue-memory");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"persistent");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"disk-store-ref");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"enable-batch-conflation");  gatewayBuilder.addPropertyValue("queue",queueBuilder.getBeanDefinition());} @TO@ if (gatewayQueueElement != null) {  BeanDefinitionBuilder queueBuilder=BeanDefinitionBuilder.genericBeanDefinition(GatewayProxy.GatewayQueue.class);  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"alert-threshold");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-size");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-time-interval");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"maximum-queue-memory");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"persistent");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"disk-store-ref");  if (gatewayQueueElement.hasAttribute("disk-store-ref")) {    gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});  }  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"enable-batch-conflation");  gatewayBuilder.addPropertyValue("queue",queueBuilder.getBeanDefinition());} @AT@ 4183 @LENGTH@ 885
---UPD Block@@ThenBody:{  BeanDefinitionBuilder queueBuilder=BeanDefinitionBuilder.genericBeanDefinition(GatewayProxy.GatewayQueue.class);  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"alert-threshold");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-size");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-time-interval");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"maximum-queue-memory");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"persistent");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"disk-store-ref");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"enable-batch-conflation");  gatewayBuilder.addPropertyValue("queue",queueBuilder.getBeanDefinition());} @TO@ ThenBody:{  BeanDefinitionBuilder queueBuilder=BeanDefinitionBuilder.genericBeanDefinition(GatewayProxy.GatewayQueue.class);  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"alert-threshold");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-size");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-time-interval");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"maximum-queue-memory");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"persistent");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"disk-store-ref");  if (gatewayQueueElement.hasAttribute("disk-store-ref")) {    gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});  }  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"enable-batch-conflation");  gatewayBuilder.addPropertyValue("queue",queueBuilder.getBeanDefinition());} @AT@ 4216 @LENGTH@ 852
------INS IfStatement@@if (gatewayQueueElement.hasAttribute("disk-store-ref")) {  gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});} @TO@ Block@@ThenBody:{  BeanDefinitionBuilder queueBuilder=BeanDefinitionBuilder.genericBeanDefinition(GatewayProxy.GatewayQueue.class);  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"alert-threshold");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-size");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"batch-time-interval");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"maximum-queue-memory");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"persistent");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"disk-store-ref");  ParsingUtils.setPropertyValue(gatewayQueueElement,queueBuilder,"enable-batch-conflation");  gatewayBuilder.addPropertyValue("queue",queueBuilder.getBeanDefinition());} @AT@ 5018 @LENGTH@ 195
---------INS MethodInvocation@@gatewayQueueElement.hasAttribute("disk-store-ref") @TO@ IfStatement@@if (gatewayQueueElement.hasAttribute("disk-store-ref")) {  gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});} @AT@ 5022 @LENGTH@ 50
------------INS SimpleName@@Name:gatewayQueueElement @TO@ MethodInvocation@@gatewayQueueElement.hasAttribute("disk-store-ref") @AT@ 5022 @LENGTH@ 19
------------INS SimpleName@@MethodName:hasAttribute:["disk-store-ref"] @TO@ MethodInvocation@@gatewayQueueElement.hasAttribute("disk-store-ref") @AT@ 5042 @LENGTH@ 30
---------------INS StringLiteral@@"disk-store-ref" @TO@ SimpleName@@MethodName:hasAttribute:["disk-store-ref"] @AT@ 5055 @LENGTH@ 16
---------INS Block@@ThenBody:{  gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});} @TO@ IfStatement@@if (gatewayQueueElement.hasAttribute("disk-store-ref")) {  gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});} @AT@ 5074 @LENGTH@ 139
------------INS ExpressionStatement@@MethodInvocation:gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @TO@ Block@@ThenBody:{  gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")});} @AT@ 5082 @LENGTH@ 124
---------------INS MethodInvocation@@gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @TO@ ExpressionStatement@@MethodInvocation:gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @AT@ 5082 @LENGTH@ 123
------------------INS MethodInvocation@@MethodName:getBeanDefinition:[] @TO@ MethodInvocation@@gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @AT@ 5082 @LENGTH@ 34
------------------INS SimpleName@@Name:gatewayBuilder @TO@ MethodInvocation@@gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @AT@ 5082 @LENGTH@ 14
------------------INS SimpleName@@MethodName:setDependsOn:[new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}] @TO@ MethodInvocation@@gatewayBuilder.getBeanDefinition().setDependsOn(new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}) @AT@ 5117 @LENGTH@ 88
---------------------INS ArrayCreation@@new String[]{gatewayQueueElement.getAttribute("disk-store-ref")} @TO@ SimpleName@@MethodName:setDependsOn:[new String[]{gatewayQueueElement.getAttribute("disk-store-ref")}] @AT@ 5139 @LENGTH@ 65
------------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{gatewayQueueElement.getAttribute("disk-store-ref")} @AT@ 5143 @LENGTH@ 8
---------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5143 @LENGTH@ 6
------------------------INS ArrayInitializer@@{gatewayQueueElement.getAttribute("disk-store-ref")} @TO@ ArrayCreation@@new String[]{gatewayQueueElement.getAttribute("disk-store-ref")} @AT@ 5152 @LENGTH@ 52
---------------------------INS MethodInvocation@@gatewayQueueElement.getAttribute("disk-store-ref") @TO@ ArrayInitializer@@{gatewayQueueElement.getAttribute("disk-store-ref")} @AT@ 5153 @LENGTH@ 50
------------------------------INS SimpleName@@Name:gatewayQueueElement @TO@ MethodInvocation@@gatewayQueueElement.getAttribute("disk-store-ref") @AT@ 5153 @LENGTH@ 19
------------------------------INS SimpleName@@MethodName:getAttribute:["disk-store-ref"] @TO@ MethodInvocation@@gatewayQueueElement.getAttribute("disk-store-ref") @AT@ 5173 @LENGTH@ 30
---------------------------------INS StringLiteral@@"disk-store-ref" @TO@ SimpleName@@MethodName:getAttribute:["disk-store-ref"] @AT@ 5186 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:onInjectionTarget, @Observes ProcessInjectionTarget event,  @TO@ public, void, MethodName:onInjectionTarget, @Observes ProcessInjectionTarget<Object> event,  @AT@ 9064 @LENGTH@ 1094
---UPD SingleVariableDeclaration@@@Observes ProcessInjectionTarget event @TO@ @Observes ProcessInjectionTarget<Object> event @AT@ 9094 @LENGTH@ 38
------INS ParameterizedType@@ProcessInjectionTarget<Object> @TO@ SingleVariableDeclaration@@@Observes ProcessInjectionTarget event @AT@ 9069 @LENGTH@ 30
---------INS SimpleType@@ProcessInjectionTarget @TO@ ParameterizedType@@ProcessInjectionTarget<Object> @AT@ 9069 @LENGTH@ 22
---------INS SimpleType@@Object @TO@ ParameterizedType@@ProcessInjectionTarget<Object> @AT@ 9092 @LENGTH@ 6
------DEL SimpleType@@ProcessInjectionTarget @AT@ 9104 @LENGTH@ 22
---UPD VariableDeclarationStatement@@final InjectionTarget injectionTarget=event.getInjectionTarget(); @TO@ final InjectionTarget<Object> injectionTarget=event.getInjectionTarget(); @AT@ 9144 @LENGTH@ 67
------INS ParameterizedType@@InjectionTarget<Object> @TO@ VariableDeclarationStatement@@final InjectionTarget injectionTarget=event.getInjectionTarget(); @AT@ 9123 @LENGTH@ 23
---------INS SimpleType@@InjectionTarget @TO@ ParameterizedType@@InjectionTarget<Object> @AT@ 9123 @LENGTH@ 15
---------INS SimpleType@@Object @TO@ ParameterizedType@@InjectionTarget<Object> @AT@ 9139 @LENGTH@ 6
------DEL SimpleType@@InjectionTarget @AT@ 9150 @LENGTH@ 15
---UPD VariableDeclarationStatement@@AnnotatedType annotatedType=event.getAnnotatedType(); @TO@ AnnotatedType<Object> annotatedType=event.getAnnotatedType(); @AT@ 9220 @LENGTH@ 55
------INS ParameterizedType@@AnnotatedType<Object> @TO@ VariableDeclarationStatement@@AnnotatedType annotatedType=event.getAnnotatedType(); @AT@ 9201 @LENGTH@ 21
---------INS SimpleType@@AnnotatedType @TO@ ParameterizedType@@AnnotatedType<Object> @AT@ 9201 @LENGTH@ 13
---------INS SimpleType@@Object @TO@ ParameterizedType@@AnnotatedType<Object> @AT@ 9215 @LENGTH@ 6
------DEL SimpleType@@AnnotatedType @AT@ 9220 @LENGTH@ 13
---UPD VariableDeclarationStatement@@final Class beanClass=annotatedType.getJavaClass(); @TO@ final Class<Object> beanClass=annotatedType.getJavaClass(); @AT@ 9284 @LENGTH@ 53
------INS ParameterizedType@@Class<Object> @TO@ VariableDeclarationStatement@@final Class beanClass=annotatedType.getJavaClass(); @AT@ 9279 @LENGTH@ 13
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<Object> @AT@ 9279 @LENGTH@ 5
---------INS SimpleType@@Object @TO@ ParameterizedType@@Class<Object> @AT@ 9285 @LENGTH@ 6
------DEL SimpleType@@Class @AT@ 9290 @LENGTH@ 5


UPD IfStatement@@if (content.hasDefined(HASH)) {  managedContentValidator.validate(content);  hash=content.require(HASH).asBytes();  addFromHash(hash,name,path,context);} else {  hash=addFromContentAdditionParameter(context,content);} @TO@ if (content.hasDefined(HASH)) {  managedContentValidator.validate(content);  hash=content.require(HASH).asBytes();  addFromHash(hash,name,path,context);} else {  hash=addFromContentAdditionParameter(context,content);  if (remoteRepository != null) {    remoteRepository.getDeploymentFiles(hash);  }} @AT@ 4939 @LENGTH@ 287
---UPD Block@@ElseBody:{  hash=addFromContentAdditionParameter(context,content);} @TO@ ElseBody:{  hash=addFromContentAdditionParameter(context,content);  if (remoteRepository != null) {    remoteRepository.getDeploymentFiles(hash);  }} @AT@ 5145 @LENGTH@ 81
------INS IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @TO@ Block@@ElseBody:{  hash=addFromContentAdditionParameter(context,content);} @AT@ 5229 @LENGTH@ 104
---------INS InfixExpression@@remoteRepository != null @TO@ IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @AT@ 5233 @LENGTH@ 24
------------INS SimpleName@@remoteRepository @TO@ InfixExpression@@remoteRepository != null @AT@ 5233 @LENGTH@ 16
------------INS Operator@@!= @TO@ InfixExpression@@remoteRepository != null @AT@ 5249 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@remoteRepository != null @AT@ 5253 @LENGTH@ 4
---------INS Block@@ThenBody:{  remoteRepository.getDeploymentFiles(hash);} @TO@ IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @AT@ 5259 @LENGTH@ 74
------------INS ExpressionStatement@@MethodInvocation:remoteRepository.getDeploymentFiles(hash) @TO@ Block@@ThenBody:{  remoteRepository.getDeploymentFiles(hash);} @AT@ 5277 @LENGTH@ 42
---------------INS MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @TO@ ExpressionStatement@@MethodInvocation:remoteRepository.getDeploymentFiles(hash) @AT@ 5277 @LENGTH@ 41
------------------INS SimpleName@@Name:remoteRepository @TO@ MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @AT@ 5277 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getDeploymentFiles:[hash] @TO@ MethodInvocation@@remoteRepository.getDeploymentFiles(hash) @AT@ 5294 @LENGTH@ 24
---------------------INS SimpleName@@hash @TO@ SimpleName@@MethodName:getDeploymentFiles:[hash] @AT@ 5313 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, String, [DEFAULT_REPOSITORIES="http://repo.fusesource.com/nexus/content/groups/public/"] @TO@ public, static, final, String, [DEFAULT_REPOSITORIES="http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/"] @AT@ 2363 @LENGTH@ 108
---UPD VariableDeclarationFragment@@DEFAULT_REPOSITORIES="http://repo.fusesource.com/nexus/content/groups/public/" @TO@ DEFAULT_REPOSITORIES="http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/" @AT@ 2390 @LENGTH@ 80
------INS InfixExpression@@"http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/" @TO@ VariableDeclarationFragment@@DEFAULT_REPOSITORIES="http://repo.fusesource.com/nexus/content/groups/public/" @AT@ 2413 @LENGTH@ 176
---------INS StringLiteral@@"http://repo.fusesource.com/nexus/content/repositories/releases/," @TO@ InfixExpression@@"http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/" @AT@ 2413 @LENGTH@ 66
---------INS Operator@@+ @TO@ InfixExpression@@"http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/" @AT@ 2479 @LENGTH@ 1
---------INS StringLiteral@@"http://repo.fusesource.com/nexus/content/groups/ea/" @TO@ InfixExpression@@"http://repo.fusesource.com/nexus/content/repositories/releases/," + "http://repo.fusesource.com/nexus/content/groups/ea/" @AT@ 2536 @LENGTH@ 53
------DEL StringLiteral@@"http://repo.fusesource.com/nexus/content/groups/public/" @AT@ 2413 @LENGTH@ 57


INS IfStatement@@if (ssoClusterManager != null) {  ssoClusterManager.logout(ssoId);} @TO@ MethodDeclaration@@public, void, MethodName:deregister, String ssoId,  @AT@ 20150 @LENGTH@ 87
---INS InfixExpression@@ssoClusterManager != null @TO@ IfStatement@@if (ssoClusterManager != null) {  ssoClusterManager.logout(ssoId);} @AT@ 20154 @LENGTH@ 25
------INS SimpleName@@ssoClusterManager @TO@ InfixExpression@@ssoClusterManager != null @AT@ 20154 @LENGTH@ 17
------INS Operator@@!= @TO@ InfixExpression@@ssoClusterManager != null @AT@ 20171 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@ssoClusterManager != null @AT@ 20175 @LENGTH@ 4
---INS Block@@ThenBody:{  ssoClusterManager.logout(ssoId);} @TO@ IfStatement@@if (ssoClusterManager != null) {  ssoClusterManager.logout(ssoId);} @AT@ 20181 @LENGTH@ 56
------INS ExpressionStatement@@MethodInvocation:ssoClusterManager.logout(ssoId) @TO@ Block@@ThenBody:{  ssoClusterManager.logout(ssoId);} @AT@ 20195 @LENGTH@ 32
---------INS MethodInvocation@@ssoClusterManager.logout(ssoId) @TO@ ExpressionStatement@@MethodInvocation:ssoClusterManager.logout(ssoId) @AT@ 20195 @LENGTH@ 31
------------INS SimpleName@@Name:ssoClusterManager @TO@ MethodInvocation@@ssoClusterManager.logout(ssoId) @AT@ 20195 @LENGTH@ 17
------------INS SimpleName@@MethodName:logout:[ssoId] @TO@ MethodInvocation@@ssoClusterManager.logout(ssoId) @AT@ 20213 @LENGTH@ 13
---------------INS SimpleName@@ssoId @TO@ SimpleName@@MethodName:logout:[ssoId] @AT@ 20220 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Mockito.verify(mockContext2).completeStep() @TO@ MethodInvocation:Mockito.verify(mockContext2).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 4622 @LENGTH@ 44
---UPD MethodInvocation@@Mockito.verify(mockContext2).completeStep() @TO@ Mockito.verify(mockContext2).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 4622 @LENGTH@ 43
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 4651 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 4718 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 4718 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 4718 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 4735 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 4751 @LENGTH@ 21


UPD VariableDeclarationStatement@@String type=System.getProperty("jboss.as.comare.type",null); @TO@ String type=System.getProperty("jboss.as.compare.type",null); @AT@ 4679 @LENGTH@ 63
---UPD VariableDeclarationFragment@@type=System.getProperty("jboss.as.comare.type",null) @TO@ type=System.getProperty("jboss.as.compare.type",null) @AT@ 4686 @LENGTH@ 55
------UPD MethodInvocation@@System.getProperty("jboss.as.comare.type",null) @TO@ System.getProperty("jboss.as.compare.type",null) @AT@ 4693 @LENGTH@ 48
---------UPD SimpleName@@MethodName:getProperty:["jboss.as.comare.type", null] @TO@ MethodName:getProperty:["jboss.as.compare.type", null] @AT@ 4700 @LENGTH@ 41
------------UPD StringLiteral@@"jboss.as.comare.type" @TO@ "jboss.as.compare.type" @AT@ 4712 @LENGTH@ 22


UPD ExpressionStatement@@MethodInvocation:service.createCluster(containers) @TO@ MethodInvocation:service.createCluster(containers,zookeeperPassword) @AT@ 1946 @LENGTH@ 34
---UPD MethodInvocation@@service.createCluster(containers) @TO@ service.createCluster(containers,zookeeperPassword) @AT@ 1946 @LENGTH@ 33
------UPD SimpleName@@MethodName:createCluster:[containers] @TO@ MethodName:createCluster:[containers, zookeeperPassword] @AT@ 1954 @LENGTH@ 25
---------INS SimpleName@@zookeeperPassword @TO@ SimpleName@@MethodName:createCluster:[containers] @AT@ 2165 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ MethodInvocation:assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 4223 @LENGTH@ 87
---UPD MethodInvocation@@assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("-")) @TO@ assertAttribute(model,ModelDescriptionConstants.RELEASE_CODENAME,new ModelNode("Unknown")) @AT@ 4223 @LENGTH@ 86
------UPD SimpleName@@MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("-")] @TO@ MethodName:assertAttribute:[model, ModelDescriptionConstants.RELEASE_CODENAME, new ModelNode("Unknown")] @AT@ 4223 @LENGTH@ 86
---------UPD ClassInstanceCreation@@ModelNode["-"] @TO@ ModelNode["Unknown"] @AT@ 4290 @LENGTH@ 18
------------UPD StringLiteral@@"-" @TO@ "Unknown" @AT@ 4304 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:putHandler(' ',GlobalCharacterHandlers.LEAVE_STATE_HANDLER) @TO@ MethodInvocation:setLeaveOnWhitespace(true) @AT@ 1984 @LENGTH@ 61
---UPD MethodInvocation@@putHandler(' ',GlobalCharacterHandlers.LEAVE_STATE_HANDLER) @TO@ setLeaveOnWhitespace(true) @AT@ 1984 @LENGTH@ 60
------UPD SimpleName@@MethodName:putHandler:[' ', GlobalCharacterHandlers.LEAVE_STATE_HANDLER] @TO@ MethodName:setLeaveOnWhitespace:[true] @AT@ 1984 @LENGTH@ 60
---------DEL CharacterLiteral@@' ' @AT@ 1995 @LENGTH@ 3
---------DEL QualifiedName@@GlobalCharacterHandlers.LEAVE_STATE_HANDLER @AT@ 2000 @LENGTH@ 43
------------DEL SimpleName@@GlobalCharacterHandlers @AT@ 2000 @LENGTH@ 23
------------DEL SimpleName@@LEAVE_STATE_HANDLER @AT@ 2024 @LENGTH@ 19
---------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:putHandler:[' ', GlobalCharacterHandlers.LEAVE_STATE_HANDLER] @AT@ 2049 @LENGTH@ 4


INS MethodDeclaration@@public, boolean, MethodName:updateValueIndex,  @TO@ TypeDeclaration@@[abstract]BaseParsingState, [ParsingState] @AT@ 3033 @LENGTH@ 62
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:updateValueIndex,  @AT@ 3033 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:updateValueIndex,  @AT@ 3040 @LENGTH@ 7
---INS SimpleName@@MethodName:updateValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:updateValueIndex,  @AT@ 3048 @LENGTH@ 16
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:updateValueIndex,  @AT@ 3077 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 3084 @LENGTH@ 4


UPD TryStatement@@try {  Wrapper servlet=null;  try {    servlet=request.getWrapper();    if (servlet != null) {      String name=servlet.getName();      RunAsIdentityMetaData identity=metaData.getRunAsIdentity(name);      RunAsIdentity runAsIdentity=null;      if (identity != null) {        WebLogger.WEB_SECURITY_LOGGER.tracef(name + ", runAs: " + identity);        runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());      }      SecurityActions.pushRunAsIdentity(runAsIdentity);    }    Manager manager=container.getManager();    if (manager != null && hsession != null) {      try {        session=manager.findSession(hsession.getId());      } catch (      IOException ignore) {      }    }    if (caller == null || !(caller instanceof JBossGenericPrincipal)) {      if (session != null) {        principal=(JBossGenericPrincipal)session.getPrincipal();      }      if (principal == null) {        Session sessionInternal=request.getSessionInternal(false);        if (sessionInternal != null) {          principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);        }      }    } else {      principal=(JBossGenericPrincipal)caller;    }    if (principal != null) {      WebLogger.WEB_SECURITY_LOGGER.tracef("Restoring principal info from cache");      if (createdSecurityContext) {        sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());      }    }  } catch (  Throwable e) {    WebLogger.WEB_SECURITY_LOGGER.debug("Failed to determine servlet",e);  }  PolicyContext.setContextID(deploymentUnit.getName());  getNext().invoke(request,response);  if (servlet != null) {    SecurityActions.popRunAsIdentity();  }}  finally {  WebLogger.WEB_SECURITY_LOGGER.tracef("End invoke, caller=" + caller);  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  PolicyContext.setContextID(null);  activeRequest.set(null);} @TO@ try {  Wrapper servlet=null;  try {    servlet=request.getWrapper();    if (servlet != null) {      String name=servlet.getName();      RunAsIdentityMetaData identity=metaData.getRunAsIdentity(name);      RunAsIdentity runAsIdentity=null;      if (identity != null) {        WebLogger.WEB_SECURITY_LOGGER.tracef(name + ", runAs: " + identity);        runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());      }      SecurityActions.pushRunAsIdentity(runAsIdentity);    }    Manager manager=container.getManager();    if (manager != null && hsession != null) {      try {        session=manager.findSession(hsession.getId());      } catch (      IOException ignore) {      }    }    if (caller == null || !(caller instanceof JBossGenericPrincipal)) {      if (session != null) {        principal=(JBossGenericPrincipal)session.getPrincipal();      }      if (principal == null) {        Session sessionInternal=request.getSessionInternal(false);        if (sessionInternal != null) {          principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);        }      }    } else {      principal=(JBossGenericPrincipal)caller;    }    if (principal != null) {      WebLogger.WEB_SECURITY_LOGGER.tracef("Restoring principal info from cache");      if (createdSecurityContext) {        sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());      }    }  } catch (  Throwable e) {    WebLogger.WEB_SECURITY_LOGGER.debug("Failed to determine servlet",e);  }  String contextId=deploymentUnit.getName();  if (deploymentUnit.getParent() != null)   contextId=deploymentUnit.getParent().getName() + "!" + contextId;  PolicyContext.setContextID(contextId);  getNext().invoke(request,response);  if (servlet != null) {    SecurityActions.popRunAsIdentity();  }}  finally {  WebLogger.WEB_SECURITY_LOGGER.tracef("End invoke, caller=" + caller);  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  PolicyContext.setContextID(null);  activeRequest.set(null);} @AT@ 4006 @LENGTH@ 3270
---DEL ExpressionStatement@@MethodInvocation:PolicyContext.setContextID(deploymentUnit.getName()) @AT@ 6729 @LENGTH@ 53
------DEL MethodInvocation@@PolicyContext.setContextID(deploymentUnit.getName()) @AT@ 6729 @LENGTH@ 52
---------DEL SimpleName@@Name:PolicyContext @AT@ 6729 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setContextID:[deploymentUnit.getName()] @AT@ 6743 @LENGTH@ 38
------------DEL MethodInvocation@@deploymentUnit.getName() @AT@ 6756 @LENGTH@ 24
---INS VariableDeclarationStatement@@String contextId=deploymentUnit.getName(); @TO@ TryStatement@@try {  Wrapper servlet=null;  try {    servlet=request.getWrapper();    if (servlet != null) {      String name=servlet.getName();      RunAsIdentityMetaData identity=metaData.getRunAsIdentity(name);      RunAsIdentity runAsIdentity=null;      if (identity != null) {        WebLogger.WEB_SECURITY_LOGGER.tracef(name + ", runAs: " + identity);        runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());      }      SecurityActions.pushRunAsIdentity(runAsIdentity);    }    Manager manager=container.getManager();    if (manager != null && hsession != null) {      try {        session=manager.findSession(hsession.getId());      } catch (      IOException ignore) {      }    }    if (caller == null || !(caller instanceof JBossGenericPrincipal)) {      if (session != null) {        principal=(JBossGenericPrincipal)session.getPrincipal();      }      if (principal == null) {        Session sessionInternal=request.getSessionInternal(false);        if (sessionInternal != null) {          principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);        }      }    } else {      principal=(JBossGenericPrincipal)caller;    }    if (principal != null) {      WebLogger.WEB_SECURITY_LOGGER.tracef("Restoring principal info from cache");      if (createdSecurityContext) {        sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());      }    }  } catch (  Throwable e) {    WebLogger.WEB_SECURITY_LOGGER.debug("Failed to determine servlet",e);  }  PolicyContext.setContextID(deploymentUnit.getName());  getNext().invoke(request,response);  if (servlet != null) {    SecurityActions.popRunAsIdentity();  }}  finally {  WebLogger.WEB_SECURITY_LOGGER.tracef("End invoke, caller=" + caller);  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  PolicyContext.setContextID(null);  activeRequest.set(null);} @AT@ 6729 @LENGTH@ 44
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String contextId=deploymentUnit.getName(); @AT@ 6729 @LENGTH@ 6
------INS VariableDeclarationFragment@@contextId=deploymentUnit.getName() @TO@ VariableDeclarationStatement@@String contextId=deploymentUnit.getName(); @AT@ 6736 @LENGTH@ 36
---------INS SimpleName@@contextId @TO@ VariableDeclarationFragment@@contextId=deploymentUnit.getName() @AT@ 6736 @LENGTH@ 9
---------INS MethodInvocation@@deploymentUnit.getName() @TO@ VariableDeclarationFragment@@contextId=deploymentUnit.getName() @AT@ 6748 @LENGTH@ 24
------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 6748 @LENGTH@ 14
------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@deploymentUnit.getName() @AT@ 6763 @LENGTH@ 9
---INS IfStatement@@if (deploymentUnit.getParent() != null) contextId=deploymentUnit.getParent().getName() + "!" + contextId; @TO@ TryStatement@@try {  Wrapper servlet=null;  try {    servlet=request.getWrapper();    if (servlet != null) {      String name=servlet.getName();      RunAsIdentityMetaData identity=metaData.getRunAsIdentity(name);      RunAsIdentity runAsIdentity=null;      if (identity != null) {        WebLogger.WEB_SECURITY_LOGGER.tracef(name + ", runAs: " + identity);        runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());      }      SecurityActions.pushRunAsIdentity(runAsIdentity);    }    Manager manager=container.getManager();    if (manager != null && hsession != null) {      try {        session=manager.findSession(hsession.getId());      } catch (      IOException ignore) {      }    }    if (caller == null || !(caller instanceof JBossGenericPrincipal)) {      if (session != null) {        principal=(JBossGenericPrincipal)session.getPrincipal();      }      if (principal == null) {        Session sessionInternal=request.getSessionInternal(false);        if (sessionInternal != null) {          principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);        }      }    } else {      principal=(JBossGenericPrincipal)caller;    }    if (principal != null) {      WebLogger.WEB_SECURITY_LOGGER.tracef("Restoring principal info from cache");      if (createdSecurityContext) {        sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());      }    }  } catch (  Throwable e) {    WebLogger.WEB_SECURITY_LOGGER.debug("Failed to determine servlet",e);  }  PolicyContext.setContextID(deploymentUnit.getName());  getNext().invoke(request,response);  if (servlet != null) {    SecurityActions.popRunAsIdentity();  }}  finally {  WebLogger.WEB_SECURITY_LOGGER.tracef("End invoke, caller=" + caller);  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  PolicyContext.setContextID(null);  activeRequest.set(null);} @AT@ 6786 @LENGTH@ 123
------INS InfixExpression@@deploymentUnit.getParent() != null @TO@ IfStatement@@if (deploymentUnit.getParent() != null) contextId=deploymentUnit.getParent().getName() + "!" + contextId; @AT@ 6790 @LENGTH@ 34
---------INS MethodInvocation@@deploymentUnit.getParent() @TO@ InfixExpression@@deploymentUnit.getParent() != null @AT@ 6790 @LENGTH@ 26
------------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getParent() @AT@ 6790 @LENGTH@ 14
------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@deploymentUnit.getParent() @AT@ 6805 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@deploymentUnit.getParent() != null @AT@ 6816 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@deploymentUnit.getParent() != null @AT@ 6820 @LENGTH@ 4
------INS Block@@ThenBody:contextId=deploymentUnit.getParent().getName() + "!" + contextId; @TO@ IfStatement@@if (deploymentUnit.getParent() != null) contextId=deploymentUnit.getParent().getName() + "!" + contextId; @AT@ 6842 @LENGTH@ 67
---------INS ExpressionStatement@@Assignment:contextId=deploymentUnit.getParent().getName() + "!" + contextId @TO@ Block@@ThenBody:contextId=deploymentUnit.getParent().getName() + "!" + contextId; @AT@ 6842 @LENGTH@ 67
------------INS Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @TO@ ExpressionStatement@@Assignment:contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6842 @LENGTH@ 66
---------------INS SimpleName@@contextId @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6842 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6851 @LENGTH@ 1
---------------INS InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @TO@ Assignment@@contextId=deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6854 @LENGTH@ 54
------------------INS MethodInvocation@@deploymentUnit.getParent().getName() @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6854 @LENGTH@ 36
---------------------MOV SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 6756 @LENGTH@ 14
---------------------MOV SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 6771 @LENGTH@ 9
---------------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@deploymentUnit.getParent().getName() @AT@ 6854 @LENGTH@ 26
------------------INS Operator@@+ @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6890 @LENGTH@ 1
------------------INS StringLiteral@@"!" @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6893 @LENGTH@ 3
------------------INS SimpleName@@contextId @TO@ InfixExpression@@deploymentUnit.getParent().getName() + "!" + contextId @AT@ 6899 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:PolicyContext.setContextID(contextId) @TO@ TryStatement@@try {  Wrapper servlet=null;  try {    servlet=request.getWrapper();    if (servlet != null) {      String name=servlet.getName();      RunAsIdentityMetaData identity=metaData.getRunAsIdentity(name);      RunAsIdentity runAsIdentity=null;      if (identity != null) {        WebLogger.WEB_SECURITY_LOGGER.tracef(name + ", runAs: " + identity);        runAsIdentity=new RunAsIdentity(identity.getRoleName(),identity.getPrincipalName(),identity.getRunAsRoles());      }      SecurityActions.pushRunAsIdentity(runAsIdentity);    }    Manager manager=container.getManager();    if (manager != null && hsession != null) {      try {        session=manager.findSession(hsession.getId());      } catch (      IOException ignore) {      }    }    if (caller == null || !(caller instanceof JBossGenericPrincipal)) {      if (session != null) {        principal=(JBossGenericPrincipal)session.getPrincipal();      }      if (principal == null) {        Session sessionInternal=request.getSessionInternal(false);        if (sessionInternal != null) {          principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);        }      }    } else {      principal=(JBossGenericPrincipal)caller;    }    if (principal != null) {      WebLogger.WEB_SECURITY_LOGGER.tracef("Restoring principal info from cache");      if (createdSecurityContext) {        sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());      }    }  } catch (  Throwable e) {    WebLogger.WEB_SECURITY_LOGGER.debug("Failed to determine servlet",e);  }  PolicyContext.setContextID(deploymentUnit.getName());  getNext().invoke(request,response);  if (servlet != null) {    SecurityActions.popRunAsIdentity();  }}  finally {  WebLogger.WEB_SECURITY_LOGGER.tracef("End invoke, caller=" + caller);  SecurityActions.clearSecurityContext();  SecurityRolesAssociation.setSecurityRoles(null);  PolicyContext.setContextID(null);  activeRequest.set(null);} @AT@ 6922 @LENGTH@ 38
------INS MethodInvocation@@PolicyContext.setContextID(contextId) @TO@ ExpressionStatement@@MethodInvocation:PolicyContext.setContextID(contextId) @AT@ 6922 @LENGTH@ 37
---------INS SimpleName@@Name:PolicyContext @TO@ MethodInvocation@@PolicyContext.setContextID(contextId) @AT@ 6922 @LENGTH@ 13
---------INS SimpleName@@MethodName:setContextID:[contextId] @TO@ MethodInvocation@@PolicyContext.setContextID(contextId) @AT@ 6936 @LENGTH@ 23
------------INS SimpleName@@contextId @TO@ SimpleName@@MethodName:setContextID:[contextId] @AT@ 6949 @LENGTH@ 9


UPD IfStatement@@if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} @TO@ if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} else {  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 6483 @LENGTH@ 492
---INS Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @TO@ IfStatement@@if (key.startsWith("zk:")) {  try {    return new String(ZkPath.loadURL(zooKeeper,key),"UTF-8");  } catch (  KeeperException.ConnectionLossException e) {    throw new RuntimeException(e);  }catch (  Exception e) {    LOGGER.warn("Could not load zk value: {}. This exception will be ignored.",key,e);  }} @AT@ 7063 @LENGTH@ 446
------INS VariableDeclarationStatement@@String value=key; @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7089 @LENGTH@ 19
---------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=key; @AT@ 7089 @LENGTH@ 6
---------INS VariableDeclarationFragment@@value=key @TO@ VariableDeclarationStatement@@String value=key; @AT@ 7096 @LENGTH@ 11
------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=key @AT@ 7096 @LENGTH@ 5
------------INS SimpleName@@key @TO@ VariableDeclarationFragment@@value=key @AT@ 7104 @LENGTH@ 3
------INS VariableDeclarationStatement@@BundleContext context=getBundleContext(); @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7133 @LENGTH@ 43
---------INS SimpleType@@BundleContext @TO@ VariableDeclarationStatement@@BundleContext context=getBundleContext(); @AT@ 7133 @LENGTH@ 13
---------INS VariableDeclarationFragment@@context=getBundleContext() @TO@ VariableDeclarationStatement@@BundleContext context=getBundleContext(); @AT@ 7147 @LENGTH@ 28
------------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=getBundleContext() @AT@ 7147 @LENGTH@ 7
------------INS MethodInvocation@@MethodName:getBundleContext:[] @TO@ VariableDeclarationFragment@@context=getBundleContext() @AT@ 7157 @LENGTH@ 18
------INS IfStatement@@if (context != null) {  value=context.getProperty(key);} @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7201 @LENGTH@ 110
---------INS InfixExpression@@context != null @TO@ IfStatement@@if (context != null) {  value=context.getProperty(key);} @AT@ 7205 @LENGTH@ 15
------------INS SimpleName@@context @TO@ InfixExpression@@context != null @AT@ 7205 @LENGTH@ 7
------------INS Operator@@!= @TO@ InfixExpression@@context != null @AT@ 7212 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@context != null @AT@ 7216 @LENGTH@ 4
---------INS Block@@ThenBody:{  value=context.getProperty(key);} @TO@ IfStatement@@if (context != null) {  value=context.getProperty(key);} @AT@ 7222 @LENGTH@ 89
------------INS ExpressionStatement@@Assignment:value=context.getProperty(key) @TO@ Block@@ThenBody:{  value=context.getProperty(key);} @AT@ 7252 @LENGTH@ 33
---------------INS Assignment@@value=context.getProperty(key) @TO@ ExpressionStatement@@Assignment:value=context.getProperty(key) @AT@ 7252 @LENGTH@ 32
------------------INS SimpleName@@value @TO@ Assignment@@value=context.getProperty(key) @AT@ 7252 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=context.getProperty(key) @AT@ 7257 @LENGTH@ 1
------------------INS MethodInvocation@@context.getProperty(key) @TO@ Assignment@@value=context.getProperty(key) @AT@ 7260 @LENGTH@ 24
---------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getProperty(key) @AT@ 7260 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getProperty:[key] @TO@ MethodInvocation@@context.getProperty(key) @AT@ 7268 @LENGTH@ 16
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getProperty:[key] @AT@ 7280 @LENGTH@ 3
------INS IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7336 @LENGTH@ 113
---------INS InfixExpression@@value == null @TO@ IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @AT@ 7340 @LENGTH@ 13
------------INS SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 7340 @LENGTH@ 5
------------INS Operator@@== @TO@ InfixExpression@@value == null @AT@ 7345 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 7349 @LENGTH@ 4
---------INS Block@@ThenBody:{  value=System.getProperty(value,"");} @TO@ IfStatement@@if (value == null) {  value=System.getProperty(value,"");} @AT@ 7355 @LENGTH@ 94
------------INS ExpressionStatement@@Assignment:value=System.getProperty(value,"") @TO@ Block@@ThenBody:{  value=System.getProperty(value,"");} @AT@ 7385 @LENGTH@ 38
---------------INS Assignment@@value=System.getProperty(value,"") @TO@ ExpressionStatement@@Assignment:value=System.getProperty(value,"") @AT@ 7385 @LENGTH@ 37
------------------INS SimpleName@@value @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7385 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7390 @LENGTH@ 1
------------------INS MethodInvocation@@System.getProperty(value,"") @TO@ Assignment@@value=System.getProperty(value,"") @AT@ 7393 @LENGTH@ 29
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(value,"") @AT@ 7393 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getProperty:[value, ""] @TO@ MethodInvocation@@System.getProperty(value,"") @AT@ 7400 @LENGTH@ 22
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:getProperty:[value, ""] @AT@ 7412 @LENGTH@ 5
------------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:getProperty:[value, ""] @AT@ 7419 @LENGTH@ 2
------INS ReturnStatement@@SimpleName:value @TO@ Block@@ElseBody:{  String value=key;  BundleContext context=getBundleContext();  if (context != null) {    value=context.getProperty(key);  }  if (value == null) {    value=System.getProperty(value,"");  }  return value;} @AT@ 7474 @LENGTH@ 13
---------INS SimpleName@@value @TO@ ReturnStatement@@SimpleName:value @AT@ 7481 @LENGTH@ 5


UPD VariableDeclarationStatement@@int savedPos=context.pos; @TO@ final int savedPos=context.pos; @AT@ 14387 @LENGTH@ 27
---INS Modifier@@final @TO@ VariableDeclarationStatement@@int savedPos=context.pos; @AT@ 14387 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:Thread.sleep(50) @TO@ MethodDeclaration@@public, void, MethodName:testShutdownCompleteCurrentTaskOnly, Exception,  @AT@ 2390 @LENGTH@ 17
---INS MethodInvocation@@Thread.sleep(50) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(50) @AT@ 2390 @LENGTH@ 16
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(50) @AT@ 2390 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[50] @TO@ MethodInvocation@@Thread.sleep(50) @AT@ 2397 @LENGTH@ 9
---------INS NumberLiteral@@50 @TO@ SimpleName@@MethodName:sleep:[50] @AT@ 2403 @LENGTH@ 2


UPD TryStatement@@try {  BufferedReader reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));  char[] buffer=new char[4096];  int readLength=reader.read(buffer);  if (readLength >= 2 && buffer[0] == '#' && buffer[1] == '!') {    for (int i=2; i < readLength; ++i) {switch (buffer[i]) {case '\r':        return true;case '\n':      return false;  }}}} catch (Exception e) {} @TO@ try {  reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));  char[] buffer=new char[4096];  int readLength=reader.read(buffer);  if (readLength >= 2 && buffer[0] == '#' && buffer[1] == '!') {    for (int i=2; i < readLength; ++i) {switch (buffer[i]) {case '\r':        return true;case '\n':      return false;  }}}} catch (Exception e) {} finally {if (reader != null) {try {  reader.close();} catch (Exception e) {}}} @AT@ 2683 @LENGTH@ 572
---DEL VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))); @AT@ 2695 @LENGTH@ 93
------DEL SimpleType@@BufferedReader @AT@ 2695 @LENGTH@ 14
------DEL VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @AT@ 2710 @LENGTH@ 77
---------DEL SimpleName@@reader @AT@ 2710 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @TO@ TryStatement@@try {  BufferedReader reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));  char[] buffer=new char[4096];  int readLength=reader.read(buffer);  if (readLength >= 2 && buffer[0] == '#' && buffer[1] == '!') {    for (int i=2; i < readLength; ++i) {switch (buffer[i]) {case '\r':        return true;case '\n':      return false;  }}}} catch (Exception e) {} @AT@ 2729 @LENGTH@ 78
------INS Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @TO@ ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @AT@ 2729 @LENGTH@ 77
---------MOV ClassInstanceCreation@@BufferedReader[new InputStreamReader(new FileInputStream(file))] @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @AT@ 2719 @LENGTH@ 68
---------INS SimpleName@@reader @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @AT@ 2729 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(new FileInputStream(file))) @AT@ 2735 @LENGTH@ 1
---INS Block@@FinallyBody:{  if (reader != null) {    try {      reader.close();    } catch (    Exception e) {    }  }} @TO@ TryStatement@@try {  BufferedReader reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));  char[] buffer=new char[4096];  int readLength=reader.read(buffer);  if (readLength >= 2 && buffer[0] == '#' && buffer[1] == '!') {    for (int i=2; i < readLength; ++i) {switch (buffer[i]) {case '\r':        return true;case '\n':      return false;  }}}} catch (Exception e) {} @AT@ 3295 @LENGTH@ 124
------INS IfStatement@@if (reader != null) {  try {    reader.close();  } catch (  Exception e) {  }} @TO@ Block@@FinallyBody:{  if (reader != null) {    try {      reader.close();    } catch (    Exception e) {    }  }} @AT@ 3303 @LENGTH@ 110
---------INS InfixExpression@@reader != null @TO@ IfStatement@@if (reader != null) {  try {    reader.close();  } catch (  Exception e) {  }} @AT@ 3307 @LENGTH@ 14
------------INS SimpleName@@reader @TO@ InfixExpression@@reader != null @AT@ 3307 @LENGTH@ 6
------------INS Operator@@!= @TO@ InfixExpression@@reader != null @AT@ 3313 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@reader != null @AT@ 3317 @LENGTH@ 4
---------INS Block@@ThenBody:{  try {    reader.close();  } catch (  Exception e) {  }} @TO@ IfStatement@@if (reader != null) {  try {    reader.close();  } catch (  Exception e) {  }} @AT@ 3323 @LENGTH@ 90
------------INS TryStatement@@try {  reader.close();} catch (Exception e) {} @TO@ Block@@ThenBody:{  try {    reader.close();  } catch (  Exception e) {  }} @AT@ 3333 @LENGTH@ 72
---------------INS ExpressionStatement@@MethodInvocation:reader.close() @TO@ TryStatement@@try {  reader.close();} catch (Exception e) {} @AT@ 3349 @LENGTH@ 15
------------------INS MethodInvocation@@reader.close() @TO@ ExpressionStatement@@MethodInvocation:reader.close() @AT@ 3349 @LENGTH@ 14
---------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.close() @AT@ 3349 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@reader.close() @AT@ 3356 @LENGTH@ 7
---------------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  reader.close();} catch (Exception e) {} @AT@ 3374 @LENGTH@ 31
------------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 3381 @LENGTH@ 11
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 3381 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 3391 @LENGTH@ 1


UPD SuperConstructorInvocation@@super("ESCAPED_CHARACTER");
 @TO@ super(ID);
 @AT@ 1806 @LENGTH@ 27
---DEL StringLiteral@@"ESCAPED_CHARACTER" @AT@ 1812 @LENGTH@ 19
---INS SimpleName@@ID @TO@ SuperConstructorInvocation@@super("ESCAPED_CHARACTER");
 @AT@ 1870 @LENGTH@ 2


UPD TypeDeclaration@@[@Ignore("Disabled due CI servers fails on full build running with these tests"), public]SftpConsumeTemplateTest, SftpServerTestSupport @TO@ [public]SftpConsumeTemplateTest, SftpServerTestSupport @AT@ 962 @LENGTH@ 821
---DEL SingleMemberAnnotation@@@Ignore("Disabled due CI servers fails on full build running with these tests") @AT@ 962 @LENGTH@ 79


INS ExpressionStatement@@MethodInvocation:this.establishDeployedContentList(this.deploymentDir) @TO@ MethodDeclaration@@void, MethodName:oneOffScan, final DeploymentOperations deploymentOperations,  @AT@ 13448 @LENGTH@ 54
---INS MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @TO@ ExpressionStatement@@MethodInvocation:this.establishDeployedContentList(this.deploymentDir) @AT@ 13448 @LENGTH@ 53
------INS ThisExpression@@this @TO@ MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @AT@ 13448 @LENGTH@ 4
------INS SimpleName@@MethodName:establishDeployedContentList:[this.deploymentDir] @TO@ MethodInvocation@@this.establishDeployedContentList(this.deploymentDir) @AT@ 13453 @LENGTH@ 48
---------INS FieldAccess@@this.deploymentDir @TO@ SimpleName@@MethodName:establishDeployedContentList:[this.deploymentDir] @AT@ 13482 @LENGTH@ 18
------------INS ThisExpression@@this @TO@ FieldAccess@@this.deploymentDir @AT@ 13482 @LENGTH@ 4
------------INS SimpleName@@deploymentDir @TO@ FieldAccess@@this.deploymentDir @AT@ 13487 @LENGTH@ 13


DEL VariableDeclarationStatement@@final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR)); @AT@ 7921 @LENGTH@ 80
---DEL Modifier@@final @AT@ 7921 @LENGTH@ 5
---DEL SimpleType@@PathAddress @AT@ 7927 @LENGTH@ 11
---DEL VariableDeclarationFragment@@address=PathAddress.pathAddress(operation.require(OP_ADDR)) @AT@ 7939 @LENGTH@ 61
------DEL SimpleName@@address @AT@ 7939 @LENGTH@ 7
------DEL MethodInvocation@@PathAddress.pathAddress(operation.require(OP_ADDR)) @AT@ 7949 @LENGTH@ 51
---------DEL SimpleName@@Name:PathAddress @AT@ 7949 @LENGTH@ 11
---------DEL SimpleName@@MethodName:pathAddress:[operation.require(OP_ADDR)] @AT@ 7961 @LENGTH@ 39
------------DEL MethodInvocation@@operation.require(OP_ADDR) @AT@ 7973 @LENGTH@ 26
---------------DEL SimpleName@@Name:operation @AT@ 7973 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:require:[OP_ADDR] @AT@ 7983 @LENGTH@ 16
------------------DEL SimpleName@@OP_ADDR @AT@ 7991 @LENGTH@ 7


UPD ReturnStatement@@MethodInvocation:path.in(cb.parameter(List.class,"ids")) @TO@ MethodInvocation:path.in(cb.parameter(Iterable.class,"ids")) @AT@ 7635 @LENGTH@ 48
---UPD MethodInvocation@@path.in(cb.parameter(List.class,"ids")) @TO@ path.in(cb.parameter(Iterable.class,"ids")) @AT@ 7642 @LENGTH@ 40
------UPD SimpleName@@MethodName:in:[cb.parameter(List.class,"ids")] @TO@ MethodName:in:[cb.parameter(Iterable.class,"ids")] @AT@ 7647 @LENGTH@ 35
---------UPD MethodInvocation@@cb.parameter(List.class,"ids") @TO@ cb.parameter(Iterable.class,"ids") @AT@ 7650 @LENGTH@ 31
------------UPD SimpleName@@MethodName:parameter:[List.class, "ids"] @TO@ MethodName:parameter:[Iterable.class, "ids"] @AT@ 7653 @LENGTH@ 28
---------------UPD TypeLiteral@@List.class @TO@ Iterable.class @AT@ 7663 @LENGTH@ 10


UPD TryStatement@@try {  preBoot(bootOperations,rollbackOnRuntimeFailure);  if (validateOps == OperationValidation.EXIT_ON_VALIDATION_ERROR) {    new OperationValidator(rootRegistration).validateOperations(bootOperations);  } else   if (validateOps == OperationValidation.LOG_VALIDATION_ERRORS) {    new OperationValidator(rootRegistration,true,true,false).validateOperations(bootOperations);  }  bootSuccess=super.boot(persister.getBootOperations(),rollbackOnRuntimeFailure);  return bootSuccess;} catch (Exception e) {  error=e;}catch (Throwable t) {  error=new Exception(t);} finally {  postBoot();  latch.countDown();} @TO@ try {  preBoot(bootOperations,rollbackOnRuntimeFailure);  if (validateOps == OperationValidation.EXIT_ON_VALIDATION_ERROR) {    new OperationValidator(rootRegistration).validateOperations(bootOperations);  } else   if (validateOps == OperationValidation.LOG_VALIDATION_ERRORS) {    new OperationValidator(rootRegistration,true,true,false).validateOperations(bootOperations);  }  bootSuccess=super.boot(persister.getBootOperations(),rollbackOnRuntimeFailure);  return bootSuccess;} catch (Exception e) {  error=e;}catch (Throwable t) {  error=new Exception(t);} finally {  postBoot();} @AT@ 9762 @LENGTH@ 785
---UPD Block@@FinallyBody:{  postBoot();  latch.countDown();} @TO@ FinallyBody:{  postBoot();} @AT@ 10481 @LENGTH@ 66


UPD IfStatement@@if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 3576 @LENGTH@ 348
---UPD Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 3614 @LENGTH@ 310
------INS ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @TO@ Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @AT@ 3996 @LENGTH@ 45
---------INS MethodInvocation@@exchange.getIn().getHeaders().remove("host") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @AT@ 3996 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3996 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3996 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 3996 @LENGTH@ 8
------------INS SimpleName@@MethodName:remove:["host"] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 4026 @LENGTH@ 14
---------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:remove:["host"] @AT@ 4033 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:checkExit, int status,  @TO@ public, void, MethodName:checkPermission, Permission permission,  @AT@ 1802 @LENGTH@ 75
---UPD SimpleName@@MethodName:checkExit @TO@ MethodName:checkPermission @AT@ 1814 @LENGTH@ 9
---UPD SingleVariableDeclaration@@int status @TO@ Permission permission @AT@ 1824 @LENGTH@ 10
------DEL PrimitiveType@@int @AT@ 1824 @LENGTH@ 3
------UPD SimpleName@@status @TO@ permission @AT@ 1828 @LENGTH@ 6
------INS SimpleType@@Permission @TO@ SingleVariableDeclaration@@int status @AT@ 1868 @LENGTH@ 10
---DEL ThrowStatement@@ClassInstanceCreation:new ExitTrapped(status) @AT@ 1842 @LENGTH@ 30
---INS IfStatement@@if (permission.getName().startsWith("exitVM")) {  throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));} @TO@ MethodDeclaration@@public, void, MethodName:checkExit, int status,  @AT@ 1897 @LENGTH@ 134
------INS MethodInvocation@@permission.getName().startsWith("exitVM") @TO@ IfStatement@@if (permission.getName().startsWith("exitVM")) {  throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));} @AT@ 1901 @LENGTH@ 41
---------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@permission.getName().startsWith("exitVM") @AT@ 1901 @LENGTH@ 20
---------INS SimpleName@@Name:permission @TO@ MethodInvocation@@permission.getName().startsWith("exitVM") @AT@ 1901 @LENGTH@ 10
---------INS SimpleName@@MethodName:startsWith:["exitVM"] @TO@ MethodInvocation@@permission.getName().startsWith("exitVM") @AT@ 1922 @LENGTH@ 20
------------INS StringLiteral@@"exitVM" @TO@ SimpleName@@MethodName:startsWith:["exitVM"] @AT@ 1933 @LENGTH@ 8
------INS Block@@ThenBody:{  throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));} @TO@ IfStatement@@if (permission.getName().startsWith("exitVM")) {  throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));} @AT@ 1944 @LENGTH@ 87
---------INS ThrowStatement@@ClassInstanceCreation:new ExitTrapped(Integer.valueOf(permission.getName().substring(7))) @TO@ Block@@ThenBody:{  throw new ExitTrapped(Integer.valueOf(permission.getName().substring(7)));} @AT@ 1951 @LENGTH@ 74
------------MOV ClassInstanceCreation@@ExitTrapped[status] @TO@ ThrowStatement@@ClassInstanceCreation:new ExitTrapped(Integer.valueOf(permission.getName().substring(7))) @AT@ 1848 @LENGTH@ 23
---------------DEL SimpleName@@status @AT@ 1864 @LENGTH@ 6
---------------INS MethodInvocation@@Integer.valueOf(permission.getName().substring(7)) @TO@ ClassInstanceCreation@@ExitTrapped[status] @AT@ 1973 @LENGTH@ 50
------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.valueOf(permission.getName().substring(7)) @AT@ 1973 @LENGTH@ 7
------------------INS SimpleName@@MethodName:valueOf:[permission.getName().substring(7)] @TO@ MethodInvocation@@Integer.valueOf(permission.getName().substring(7)) @AT@ 1981 @LENGTH@ 42
---------------------INS MethodInvocation@@permission.getName().substring(7) @TO@ SimpleName@@MethodName:valueOf:[permission.getName().substring(7)] @AT@ 1989 @LENGTH@ 33
------------------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@permission.getName().substring(7) @AT@ 1989 @LENGTH@ 20
------------------------INS SimpleName@@Name:permission @TO@ MethodInvocation@@permission.getName().substring(7) @AT@ 1989 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:substring:[7] @TO@ MethodInvocation@@permission.getName().substring(7) @AT@ 2010 @LENGTH@ 12
---------------------------INS NumberLiteral@@7 @TO@ SimpleName@@MethodName:substring:[7] @AT@ 2020 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Mockito.verify(context).completeStep() @TO@ MethodInvocation:Mockito.verify(context).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2369 @LENGTH@ 39
---UPD MethodInvocation@@Mockito.verify(context).completeStep() @TO@ Mockito.verify(context).completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 2369 @LENGTH@ 38
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 2393 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 2406 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2406 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2406 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 2423 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 2439 @LENGTH@ 21


UPD SuperConstructorInvocation@@super(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,"test-subsystem"),new TestResourceDescriptionResolver());
 @TO@ super(PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM,"test-subsystem"),new NonResolvingResourceDescriptionResolver());
 @AT@ 1365 @LENGTH@ 141
---UPD ClassInstanceCreation@@TestResourceDescriptionResolver[] @TO@ NonResolvingResourceDescriptionResolver[] @AT@ 1467 @LENGTH@ 37
------UPD SimpleType@@TestResourceDescriptionResolver @TO@ NonResolvingResourceDescriptionResolver @AT@ 1471 @LENGTH@ 31


INS MethodDeclaration@@Result, MethodName:install, boolean force, boolean synchronous,  @TO@ TypeDeclaration@@[public]Patch,  @AT@ 927 @LENGTH@ 44
---INS SimpleType@@Result @TO@ MethodDeclaration@@Result, MethodName:install, boolean force, boolean synchronous,  @AT@ 920 @LENGTH@ 6
---INS SimpleName@@MethodName:install @TO@ MethodDeclaration@@Result, MethodName:install, boolean force, boolean synchronous,  @AT@ 927 @LENGTH@ 7
---INS SingleVariableDeclaration@@boolean force @TO@ MethodDeclaration@@Result, MethodName:install, boolean force, boolean synchronous,  @AT@ 935 @LENGTH@ 13
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean force @AT@ 935 @LENGTH@ 7
------INS SimpleName@@force @TO@ SingleVariableDeclaration@@boolean force @AT@ 943 @LENGTH@ 5
---INS SingleVariableDeclaration@@boolean synchronous @TO@ MethodDeclaration@@Result, MethodName:install, boolean force, boolean synchronous,  @AT@ 950 @LENGTH@ 19
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean synchronous @AT@ 950 @LENGTH@ 7
------INS SimpleName@@synchronous @TO@ SingleVariableDeclaration@@boolean synchronous @AT@ 958 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:buf.append("Verson:" + this.getVersion()) @TO@ MethodInvocation:buf.append("Version:" + this.getVersion()) @AT@ 1910 @LENGTH@ 42
---UPD MethodInvocation@@buf.append("Verson:" + this.getVersion()) @TO@ buf.append("Version:" + this.getVersion()) @AT@ 1910 @LENGTH@ 41
------UPD SimpleName@@MethodName:append:["Verson:" + this.getVersion()] @TO@ MethodName:append:["Version:" + this.getVersion()] @AT@ 1914 @LENGTH@ 37
---------UPD InfixExpression@@"Verson:" + this.getVersion() @TO@ "Version:" + this.getVersion() @AT@ 1921 @LENGTH@ 29
------------UPD StringLiteral@@"Verson:" @TO@ "Version:" @AT@ 1921 @LENGTH@ 9


UPD MethodDeclaration@@public, boolean, MethodName:isRuntimeSystemPropertyUpdateAllowed, String propertyName, String propertyValue, boolean bootTime,  @TO@ protected, boolean, MethodName:isRuntimeSystemPropertyUpdateAllowed, String propertyName, String propertyValue, boolean bootTime,  @AT@ 27486 @LENGTH@ 333
---UPD Modifier@@public @TO@ protected @AT@ 27486 @LENGTH@ 6


INS IfStatement@@if (gatewayHub.getManualStart() == false) {  try {    gatewayHub.start();  } catch (  IOException e) {    throw new RuntimeException(e);  }} @TO@ MethodDeclaration@@protected, void, MethodName:doInit,  @AT@ 5219 @LENGTH@ 149
---INS InfixExpression@@gatewayHub.getManualStart() == false @TO@ IfStatement@@if (gatewayHub.getManualStart() == false) {  try {    gatewayHub.start();  } catch (  IOException e) {    throw new RuntimeException(e);  }} @AT@ 5223 @LENGTH@ 36
------INS MethodInvocation@@gatewayHub.getManualStart() @TO@ InfixExpression@@gatewayHub.getManualStart() == false @AT@ 5223 @LENGTH@ 27
---------INS SimpleName@@Name:gatewayHub @TO@ MethodInvocation@@gatewayHub.getManualStart() @AT@ 5223 @LENGTH@ 10
---------INS SimpleName@@MethodName:getManualStart:[] @TO@ MethodInvocation@@gatewayHub.getManualStart() @AT@ 5234 @LENGTH@ 16
------INS Operator@@== @TO@ InfixExpression@@gatewayHub.getManualStart() == false @AT@ 5250 @LENGTH@ 2
------INS BooleanLiteral@@false @TO@ InfixExpression@@gatewayHub.getManualStart() == false @AT@ 5254 @LENGTH@ 5
---INS Block@@ThenBody:{  try {    gatewayHub.start();  } catch (  IOException e) {    throw new RuntimeException(e);  }} @TO@ IfStatement@@if (gatewayHub.getManualStart() == false) {  try {    gatewayHub.start();  } catch (  IOException e) {    throw new RuntimeException(e);  }} @AT@ 5261 @LENGTH@ 107
------INS TryStatement@@try {  gatewayHub.start();} catch (IOException e) {  throw new RuntimeException(e);} @TO@ Block@@ThenBody:{  try {    gatewayHub.start();  } catch (  IOException e) {    throw new RuntimeException(e);  }} @AT@ 5266 @LENGTH@ 98
---------INS ExpressionStatement@@MethodInvocation:gatewayHub.start() @TO@ TryStatement@@try {  gatewayHub.start();} catch (IOException e) {  throw new RuntimeException(e);} @AT@ 5276 @LENGTH@ 19
------------INS MethodInvocation@@gatewayHub.start() @TO@ ExpressionStatement@@MethodInvocation:gatewayHub.start() @AT@ 5276 @LENGTH@ 18
---------------INS SimpleName@@Name:gatewayHub @TO@ MethodInvocation@@gatewayHub.start() @AT@ 5276 @LENGTH@ 10
---------------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@gatewayHub.start() @AT@ 5287 @LENGTH@ 7
---------INS CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @TO@ TryStatement@@try {  gatewayHub.start();} catch (IOException e) {  throw new RuntimeException(e);} @AT@ 5301 @LENGTH@ 63
------------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @AT@ 5308 @LENGTH@ 13
---------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 5308 @LENGTH@ 11
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 5320 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ CatchClause@@catch (IOException e) {  throw new RuntimeException(e);} @AT@ 5329 @LENGTH@ 30
---------------INS ClassInstanceCreation@@RuntimeException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 5335 @LENGTH@ 23
------------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 5335 @LENGTH@ 3
------------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 5339 @LENGTH@ 16
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@RuntimeException[e] @AT@ 5356 @LENGTH@ 1


INS MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @TO@ TypeDeclaration@@[@MessageBundle(projectCode="JBAS"), public]JmxMessages,  @AT@ 14324 @LENGTH@ 23
---INS SimpleType@@IllegalArgumentException @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @AT@ 14299 @LENGTH@ 24
---INS SimpleName@@MethodName:objectNameCantBeNull @TO@ MethodDeclaration@@IllegalArgumentException, MethodName:objectNameCantBeNull,  @AT@ 14324 @LENGTH@ 20


UPD FieldDeclaration@@SimpleAttributeDefinition, [SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build()] @TO@ SimpleAttributeDefinition, [SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build()] @AT@ 2454 @LENGTH@ 260
---UPD VariableDeclarationFragment@@SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build() @TO@ SHOW_MODEL_ALIAS=SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build() @AT@ 2480 @LENGTH@ 233
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).setDefaultValue(new ModelNode(false)).addFlag(AttributeAccess.Flag.ALIAS).build() @TO@ SimpleAttributeDefinitionBuilder.create(CommonAttributes.SHOW_MODEL,ModelType.BOOLEAN,true).addFlag(AttributeAccess.Flag.ALIAS).build() @AT@ 2499 @LENGTH@ 214
---------DEL MethodInvocation@@MethodName:setDefaultValue:[new ModelNode(false)] @AT@ 2499 @LENGTH@ 144
------------DEL ClassInstanceCreation@@ModelNode[false] @AT@ 2622 @LENGTH@ 20
---------------DEL New@@new @AT@ 2622 @LENGTH@ 3
---------------DEL SimpleType@@ModelNode @AT@ 2626 @LENGTH@ 9
---------------DEL BooleanLiteral@@false @AT@ 2636 @LENGTH@ 5


INS MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @TO@ TypeDeclaration@@[public]MongoPersistentEntityIndexCreator, [ApplicationListener<MappingContextEvent<MongoPersistentEntity<?>,MongoPersistentProperty>>] @AT@ 6800 @LENGTH@ 113
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @AT@ 6800 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @AT@ 6807 @LENGTH@ 7
---INS SimpleName@@MethodName:isIndexCreatorFor @TO@ MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @AT@ 6815 @LENGTH@ 17
---INS SingleVariableDeclaration@@MappingContext<?,?> context @TO@ MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @AT@ 6833 @LENGTH@ 28
------INS ParameterizedType@@MappingContext<?,?> @TO@ SingleVariableDeclaration@@MappingContext<?,?> context @AT@ 6833 @LENGTH@ 20
---------INS SimpleType@@MappingContext @TO@ ParameterizedType@@MappingContext<?,?> @AT@ 6833 @LENGTH@ 14
---------INS WildcardType@@? @TO@ ParameterizedType@@MappingContext<?,?> @AT@ 6848 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@MappingContext<?,?> @AT@ 6851 @LENGTH@ 1
------INS SimpleName@@context @TO@ SingleVariableDeclaration@@MappingContext<?,?> context @AT@ 6854 @LENGTH@ 7
---INS ReturnStatement@@MethodInvocation:this.mappingContext.equals(context) @TO@ MethodDeclaration@@public, boolean, MethodName:isIndexCreatorFor, MappingContext<?,?> context,  @AT@ 6867 @LENGTH@ 43
------INS MethodInvocation@@this.mappingContext.equals(context) @TO@ ReturnStatement@@MethodInvocation:this.mappingContext.equals(context) @AT@ 6874 @LENGTH@ 35
---------INS FieldAccess@@this.mappingContext @TO@ MethodInvocation@@this.mappingContext.equals(context) @AT@ 6874 @LENGTH@ 19
------------INS ThisExpression@@this @TO@ FieldAccess@@this.mappingContext @AT@ 6874 @LENGTH@ 4
------------INS SimpleName@@mappingContext @TO@ FieldAccess@@this.mappingContext @AT@ 6879 @LENGTH@ 14
---------INS SimpleName@@MethodName:equals:[context] @TO@ MethodInvocation@@this.mappingContext.equals(context) @AT@ 6894 @LENGTH@ 15
------------INS SimpleName@@context @TO@ SimpleName@@MethodName:equals:[context] @AT@ 6901 @LENGTH@ 7


INS MethodDeclaration@@public, boolean, MethodName:isAllowNullBody,  @TO@ TypeDeclaration@@[@ManagedResource(description="Managed JMS Endpoint"), public]JmsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, MultipleConsumersSupport, Service] @AT@ 34990 @LENGTH@ 88
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isAllowNullBody,  @AT@ 34990 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isAllowNullBody,  @AT@ 34997 @LENGTH@ 7
---INS SimpleName@@MethodName:isAllowNullBody @TO@ MethodDeclaration@@public, boolean, MethodName:isAllowNullBody,  @AT@ 35005 @LENGTH@ 15
---INS ReturnStatement@@MethodInvocation:configuration.isAllowNullBody() @TO@ MethodDeclaration@@public, boolean, MethodName:isAllowNullBody,  @AT@ 35033 @LENGTH@ 39
------INS MethodInvocation@@configuration.isAllowNullBody() @TO@ ReturnStatement@@MethodInvocation:configuration.isAllowNullBody() @AT@ 35040 @LENGTH@ 31
---------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.isAllowNullBody() @AT@ 35040 @LENGTH@ 13
---------INS SimpleName@@MethodName:isAllowNullBody:[] @TO@ MethodInvocation@@configuration.isAllowNullBody() @AT@ 35054 @LENGTH@ 17


INS MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 20741 @LENGTH@ 159
---INS Modifier@@public @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20741 @LENGTH@ 6
---INS SimpleType@@AccessGrant @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20748 @LENGTH@ 11
---INS SimpleName@@MethodName:exchangeCredentialsForAccess @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20760 @LENGTH@ 28
---INS SingleVariableDeclaration@@String username @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20789 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String username @AT@ 20789 @LENGTH@ 6
------INS SimpleName@@username @TO@ SingleVariableDeclaration@@String username @AT@ 20796 @LENGTH@ 8
---INS SingleVariableDeclaration@@String password @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20806 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String password @AT@ 20806 @LENGTH@ 6
------INS SimpleName@@password @TO@ SingleVariableDeclaration@@String password @AT@ 20813 @LENGTH@ 8
---INS SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20823 @LENGTH@ 50
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @AT@ 20823 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 20823 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 20837 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 20845 @LENGTH@ 6
------INS SimpleName@@additionalParameters @TO@ SingleVariableDeclaration@@MultiValueMap<String,String> additionalParameters @AT@ 20853 @LENGTH@ 20
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, AccessGrant, MethodName:exchangeCredentialsForAccess, String username, String password, MultiValueMap<String,String> additionalParameters,  @AT@ 20882 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 20889 @LENGTH@ 4


UPD FieldDeclaration@@private, final, static, TimedTaskManager, [INSTANCE=new TimedTaskManager()] @TO@ private, static, final, TimedTaskManager, [INSTANCE=new TimedTaskManager()] @AT@ 1055 @LENGTH@ 72
---DEL Modifier@@static @AT@ 1069 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, TimedTaskManager, [INSTANCE=new TimedTaskManager()] @AT@ 1169 @LENGTH@ 6


INS MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @TO@ TypeDeclaration@@[public, abstract]HadoopShimsSecure, [HadoopShims] @AT@ 3118 @LENGTH@ 96
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 3118 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 3125 @LENGTH@ 6
---INS SimpleName@@MethodName:unquoteHtmlChars @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 3132 @LENGTH@ 16
---INS SingleVariableDeclaration@@String item @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 3149 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String item @AT@ 3149 @LENGTH@ 6
------INS SimpleName@@item @TO@ SingleVariableDeclaration@@String item @AT@ 3156 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:HtmlQuoting.unquoteHtmlChars(item) @TO@ MethodDeclaration@@public, String, MethodName:unquoteHtmlChars, String item,  @AT@ 3168 @LENGTH@ 42
------INS MethodInvocation@@HtmlQuoting.unquoteHtmlChars(item) @TO@ ReturnStatement@@MethodInvocation:HtmlQuoting.unquoteHtmlChars(item) @AT@ 3175 @LENGTH@ 34
---------INS SimpleName@@Name:HtmlQuoting @TO@ MethodInvocation@@HtmlQuoting.unquoteHtmlChars(item) @AT@ 3175 @LENGTH@ 11
---------INS SimpleName@@MethodName:unquoteHtmlChars:[item] @TO@ MethodInvocation@@HtmlQuoting.unquoteHtmlChars(item) @AT@ 3187 @LENGTH@ 22
------------INS SimpleName@@item @TO@ SimpleName@@MethodName:unquoteHtmlChars:[item] @AT@ 3204 @LENGTH@ 4


UPD MethodDeclaration@@public, abstract, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @TO@ public, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @AT@ 13566 @LENGTH@ 157
---DEL Modifier@@abstract @AT@ 13573 @LENGTH@ 8
---INS ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @TO@ MethodDeclaration@@public, abstract, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @AT@ 13723 @LENGTH@ 79
------INS MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @TO@ ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13729 @LENGTH@ 72
---------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13729 @LENGTH@ 27
---------INS SimpleName@@MethodName:couldNotMarshalAttributeAsElement:[getName()] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13757 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getName:[] @TO@ SimpleName@@MethodName:couldNotMarshalAttributeAsElement:[getName()] @AT@ 13791 @LENGTH@ 9


INS MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @TO@ TypeDeclaration@@[public, abstract]RepositoryExporterSupport,  @AT@ 2090 @LENGTH@ 197
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @AT@ 2090 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @AT@ 2097 @LENGTH@ 7
---INS SimpleName@@MethodName:hasRepositoryMetadataFor @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @AT@ 2105 @LENGTH@ 24
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @AT@ 2130 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 2130 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 2137 @LENGTH@ 4
---INS TryStatement@@try {  return (null != repositoryMetadataFor(name));} catch (RepositoryNotFoundException ignored) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:hasRepositoryMetadataFor, String name,  @AT@ 2149 @LENGTH@ 134
------INS ReturnStatement@@ParenthesizedExpression:(null != repositoryMetadataFor(name)) @TO@ TryStatement@@try {  return (null != repositoryMetadataFor(name));} catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2161 @LENGTH@ 45
---------INS ParenthesizedExpression@@(null != repositoryMetadataFor(name)) @TO@ ReturnStatement@@ParenthesizedExpression:(null != repositoryMetadataFor(name)) @AT@ 2168 @LENGTH@ 37
------------INS InfixExpression@@null != repositoryMetadataFor(name) @TO@ ParenthesizedExpression@@(null != repositoryMetadataFor(name)) @AT@ 2169 @LENGTH@ 35
---------------INS NullLiteral@@null @TO@ InfixExpression@@null != repositoryMetadataFor(name) @AT@ 2169 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@null != repositoryMetadataFor(name) @AT@ 2173 @LENGTH@ 2
---------------INS MethodInvocation@@repositoryMetadataFor(name) @TO@ InfixExpression@@null != repositoryMetadataFor(name) @AT@ 2177 @LENGTH@ 27
------------------INS SimpleName@@MethodName:repositoryMetadataFor:[name] @TO@ MethodInvocation@@repositoryMetadataFor(name) @AT@ 2177 @LENGTH@ 27
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:repositoryMetadataFor:[name] @AT@ 2199 @LENGTH@ 4
------INS CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @TO@ TryStatement@@try {  return (null != repositoryMetadataFor(name));} catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2213 @LENGTH@ 70
---------INS SingleVariableDeclaration@@RepositoryNotFoundException ignored @TO@ CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2219 @LENGTH@ 35
------------INS SimpleType@@RepositoryNotFoundException @TO@ SingleVariableDeclaration@@RepositoryNotFoundException ignored @AT@ 2219 @LENGTH@ 27
------------INS SimpleName@@ignored @TO@ SingleVariableDeclaration@@RepositoryNotFoundException ignored @AT@ 2247 @LENGTH@ 7
---------INS ReturnStatement@@BooleanLiteral:false @TO@ CatchClause@@catch (RepositoryNotFoundException ignored) {  return false;} @AT@ 2264 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2271 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:System.out.println("prepared " + prepared.getPreparedResult()) @AT@ 6997 @LENGTH@ 63
---DEL MethodInvocation@@System.out.println("prepared " + prepared.getPreparedResult()) @AT@ 6997 @LENGTH@ 62
------DEL QualifiedName@@Name:System.out @AT@ 6997 @LENGTH@ 10
------DEL SimpleName@@MethodName:println:["prepared " + prepared.getPreparedResult()] @AT@ 7008 @LENGTH@ 51
---------DEL InfixExpression@@"prepared " + prepared.getPreparedResult() @AT@ 7016 @LENGTH@ 42
------------DEL StringLiteral@@"prepared " @AT@ 7016 @LENGTH@ 11
------------DEL Operator@@+ @AT@ 7027 @LENGTH@ 1
------------DEL MethodInvocation@@prepared.getPreparedResult() @AT@ 7030 @LENGTH@ 28
---------------DEL SimpleName@@Name:prepared @AT@ 7030 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:getPreparedResult:[] @AT@ 7039 @LENGTH@ 19


UPD FieldDeclaration@@private, static, final, String, [AETHER_API_NAME="/org/sonatype/aether/aether-api/"] @TO@ private, static, final, String, [AETHER_API_NAME=File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\"] @AT@ 3085 @LENGTH@ 81
---UPD VariableDeclarationFragment@@AETHER_API_NAME="/org/sonatype/aether/aether-api/" @TO@ AETHER_API_NAME=File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3113 @LENGTH@ 52
------INS ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @TO@ VariableDeclarationFragment@@AETHER_API_NAME="/org/sonatype/aether/aether-api/" @AT@ 3131 @LENGTH@ 104
---------INS InfixExpression@@File.separatorChar == '/' @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3131 @LENGTH@ 25
------------INS QualifiedName@@File.separatorChar @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3131 @LENGTH@ 18
---------------INS SimpleName@@File @TO@ QualifiedName@@File.separatorChar @AT@ 3131 @LENGTH@ 4
---------------INS SimpleName@@separatorChar @TO@ QualifiedName@@File.separatorChar @AT@ 3136 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3149 @LENGTH@ 2
------------INS CharacterLiteral@@'/' @TO@ InfixExpression@@File.separatorChar == '/' @AT@ 3153 @LENGTH@ 3
---------INS StringLiteral@@"/org/sonatype/aether/aether-api/" @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3159 @LENGTH@ 34
---------INS StringLiteral@@"\\org\\sonatype\\aether\\aether-api\\" @TO@ ConditionalExpression@@File.separatorChar == '/' ? "/org/sonatype/aether/aether-api/" : "\\org\\sonatype\\aether\\aether-api\\" @AT@ 3196 @LENGTH@ 39
------DEL StringLiteral@@"/org/sonatype/aether/aether-api/" @AT@ 3131 @LENGTH@ 34


UPD ExpressionStatement@@MethodInvocation:assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1",DigestUtils.shaHex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")) @TO@ MethodInvocation:assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1",DigestUtils.sha1Hex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")) @AT@ 6060 @LENGTH@ 167
---UPD MethodInvocation@@assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1",DigestUtils.shaHex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")) @TO@ assertEquals("84983e441c3bd26ebaae4aa1f95129e5e54670f1",DigestUtils.sha1Hex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")) @AT@ 6060 @LENGTH@ 166
------UPD SimpleName@@MethodName:assertEquals:["84983e441c3bd26ebaae4aa1f95129e5e54670f1", DigestUtils.shaHex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")] @TO@ MethodName:assertEquals:["84983e441c3bd26ebaae4aa1f95129e5e54670f1", DigestUtils.sha1Hex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq")] @AT@ 6060 @LENGTH@ 166
---------UPD MethodInvocation@@DigestUtils.shaHex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq") @TO@ DigestUtils.sha1Hex("abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq") @AT@ 6142 @LENGTH@ 83
------------UPD SimpleName@@MethodName:shaHex:["abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq"] @TO@ MethodName:sha1Hex:["abcdbcdecdefdefgefghfghighij" + "hijkijkljklmklmnlmnomnopnopq"] @AT@ 6154 @LENGTH@ 71


UPD VariableDeclarationStatement@@String expectedPath=System.getProperty("test.build.resources") + "/hive-site.xml"; @TO@ String expectedPath=new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath(); @AT@ 1204 @LENGTH@ 84
---UPD VariableDeclarationFragment@@expectedPath=System.getProperty("test.build.resources") + "/hive-site.xml" @TO@ expectedPath=new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath() @AT@ 1211 @LENGTH@ 76
------INS MethodInvocation@@new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath() @TO@ VariableDeclarationFragment@@expectedPath=System.getProperty("test.build.resources") + "/hive-site.xml" @AT@ 1268 @LENGTH@ 89
---------INS MethodInvocation@@MethodName:toUri:[] @TO@ MethodInvocation@@new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath() @AT@ 1268 @LENGTH@ 79
---------INS ClassInstanceCreation@@Path[System.getProperty("test.build.resources") + "/hive-site.xml"] @TO@ MethodInvocation@@new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath() @AT@ 1268 @LENGTH@ 71
------------MOV InfixExpression@@System.getProperty("test.build.resources") + "/hive-site.xml" @TO@ ClassInstanceCreation@@Path[System.getProperty("test.build.resources") + "/hive-site.xml"] @AT@ 1226 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@Path[System.getProperty("test.build.resources") + "/hive-site.xml"] @AT@ 1268 @LENGTH@ 3
------------INS SimpleType@@Path @TO@ ClassInstanceCreation@@Path[System.getProperty("test.build.resources") + "/hive-site.xml"] @AT@ 1272 @LENGTH@ 4
---------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath() @AT@ 1348 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:logger.info("Setting shutdown timeout to [{} {}] on CamelContext with name [{}].",shutdownTimeout,shutdownTimeUnit,contextName) @TO@ MethodInvocation:logger.info("Setting shutdown timeout to [{} {}] on CamelContext with name [{}].",new Object[]{shutdownTimeout,shutdownTimeUnit,contextName}) @AT@ 10576 @LENGTH@ 131
---UPD MethodInvocation@@logger.info("Setting shutdown timeout to [{} {}] on CamelContext with name [{}].",shutdownTimeout,shutdownTimeUnit,contextName) @TO@ logger.info("Setting shutdown timeout to [{} {}] on CamelContext with name [{}].",new Object[]{shutdownTimeout,shutdownTimeUnit,contextName}) @AT@ 10576 @LENGTH@ 130
------UPD SimpleName@@MethodName:info:["Setting shutdown timeout to [{} {}] on CamelContext with name [{}].", shutdownTimeout, shutdownTimeUnit, contextName] @TO@ MethodName:info:["Setting shutdown timeout to [{} {}] on CamelContext with name [{}].", new Object[]{shutdownTimeout,shutdownTimeUnit,contextName}] @AT@ 10583 @LENGTH@ 123
---------INS ArrayCreation@@new Object[]{shutdownTimeout,shutdownTimeUnit,contextName} @TO@ SimpleName@@MethodName:info:["Setting shutdown timeout to [{} {}] on CamelContext with name [{}].", shutdownTimeout, shutdownTimeUnit, contextName] @AT@ 10659 @LENGTH@ 60
------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{shutdownTimeout,shutdownTimeUnit,contextName} @AT@ 10663 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 10663 @LENGTH@ 6
------------INS ArrayInitializer@@{shutdownTimeout,shutdownTimeUnit,contextName} @TO@ ArrayCreation@@new Object[]{shutdownTimeout,shutdownTimeUnit,contextName} @AT@ 10671 @LENGTH@ 48
---------------INS SimpleName@@shutdownTimeout @TO@ ArrayInitializer@@{shutdownTimeout,shutdownTimeUnit,contextName} @AT@ 10672 @LENGTH@ 15
---------------INS SimpleName@@shutdownTimeUnit @TO@ ArrayInitializer@@{shutdownTimeout,shutdownTimeUnit,contextName} @AT@ 10689 @LENGTH@ 16
---------------INS SimpleName@@contextName @TO@ ArrayInitializer@@{shutdownTimeout,shutdownTimeUnit,contextName} @AT@ 10707 @LENGTH@ 11
---------DEL SimpleName@@shutdownTimeout @AT@ 10659 @LENGTH@ 15
---------DEL SimpleName@@shutdownTimeUnit @AT@ 10676 @LENGTH@ 16
---------DEL SimpleName@@contextName @AT@ 10694 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 1700 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 1700 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 1708 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 1721 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 1721 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 1721 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 1738 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 1754 @LENGTH@ 21


INS MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 36771 @LENGTH@ 692
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36771 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36778 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36785 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36785 @LENGTH@ 4
---INS SimpleName@@MethodName:readBytes @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36792 @LENGTH@ 9
---INS SingleVariableDeclaration@@File f @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36802 @LENGTH@ 6
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File f @AT@ 36802 @LENGTH@ 4
------INS SimpleName@@f @TO@ SingleVariableDeclaration@@File f @AT@ 36807 @LENGTH@ 1
---INS SimpleType@@OperationFormatException @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36817 @LENGTH@ 24
---INS VariableDeclarationStatement@@byte[] bytes; @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36852 @LENGTH@ 13
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes; @AT@ 36852 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36852 @LENGTH@ 4
------INS VariableDeclarationFragment@@bytes @TO@ VariableDeclarationStatement@@byte[] bytes; @AT@ 36859 @LENGTH@ 5
---------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes @AT@ 36859 @LENGTH@ 5
---INS VariableDeclarationStatement@@FileInputStream is=null; @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36874 @LENGTH@ 26
------INS SimpleType@@FileInputStream @TO@ VariableDeclarationStatement@@FileInputStream is=null; @AT@ 36874 @LENGTH@ 15
------INS VariableDeclarationFragment@@is=null @TO@ VariableDeclarationStatement@@FileInputStream is=null; @AT@ 36890 @LENGTH@ 9
---------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=null @AT@ 36890 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@is=null @AT@ 36895 @LENGTH@ 4
---INS TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36909 @LENGTH@ 526
------INS ExpressionStatement@@Assignment:is=new FileInputStream(f) @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 36927 @LENGTH@ 28
---------INS Assignment@@is=new FileInputStream(f) @TO@ ExpressionStatement@@Assignment:is=new FileInputStream(f) @AT@ 36927 @LENGTH@ 27
------------INS SimpleName@@is @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36927 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36929 @LENGTH@ 1
------------INS ClassInstanceCreation@@FileInputStream[f] @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36932 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36932 @LENGTH@ 3
---------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36936 @LENGTH@ 15
---------------INS SimpleName@@f @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36952 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:bytes=new byte[(int)f.length()] @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 36968 @LENGTH@ 35
---------INS Assignment@@bytes=new byte[(int)f.length()] @TO@ ExpressionStatement@@Assignment:bytes=new byte[(int)f.length()] @AT@ 36968 @LENGTH@ 34
------------INS SimpleName@@bytes @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36968 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36973 @LENGTH@ 1
------------INS ArrayCreation@@new byte[(int)f.length()] @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36976 @LENGTH@ 26
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[(int)f.length()] @AT@ 36980 @LENGTH@ 22
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36980 @LENGTH@ 4
---------------INS CastExpression@@(int)f.length() @TO@ ArrayCreation@@new byte[(int)f.length()] @AT@ 36985 @LENGTH@ 16
------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)f.length() @AT@ 36986 @LENGTH@ 3
------------------INS MethodInvocation@@f.length() @TO@ CastExpression@@(int)f.length() @AT@ 36991 @LENGTH@ 10
---------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.length() @AT@ 36991 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@f.length() @AT@ 36993 @LENGTH@ 8
------INS VariableDeclarationStatement@@int read=is.read(bytes); @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37016 @LENGTH@ 26
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int read=is.read(bytes); @AT@ 37016 @LENGTH@ 3
---------INS VariableDeclarationFragment@@read=is.read(bytes) @TO@ VariableDeclarationStatement@@int read=is.read(bytes); @AT@ 37020 @LENGTH@ 21
------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=is.read(bytes) @AT@ 37020 @LENGTH@ 4
------------INS MethodInvocation@@is.read(bytes) @TO@ VariableDeclarationFragment@@read=is.read(bytes) @AT@ 37027 @LENGTH@ 14
---------------INS SimpleName@@Name:is @TO@ MethodInvocation@@is.read(bytes) @AT@ 37027 @LENGTH@ 2
---------------INS SimpleName@@MethodName:read:[bytes] @TO@ MethodInvocation@@is.read(bytes) @AT@ 37030 @LENGTH@ 11
------------------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:read:[bytes] @AT@ 37035 @LENGTH@ 5
------INS IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37055 @LENGTH@ 182
---------INS InfixExpression@@read != bytes.length @TO@ IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37058 @LENGTH@ 20
------------INS SimpleName@@read @TO@ InfixExpression@@read != bytes.length @AT@ 37058 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@read != bytes.length @AT@ 37062 @LENGTH@ 2
------------INS QualifiedName@@bytes.length @TO@ InfixExpression@@read != bytes.length @AT@ 37066 @LENGTH@ 12
---------------INS SimpleName@@bytes @TO@ QualifiedName@@bytes.length @AT@ 37066 @LENGTH@ 5
---------------INS SimpleName@@length @TO@ QualifiedName@@bytes.length @AT@ 37072 @LENGTH@ 6
---------INS Block@@ThenBody:{  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @TO@ IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37080 @LENGTH@ 157
------------INS ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()) @TO@ Block@@ThenBody:{  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37098 @LENGTH@ 125
---------------INS ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()) @AT@ 37104 @LENGTH@ 118
------------------INS New@@new @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37104 @LENGTH@ 3
------------------INS SimpleType@@OperationFormatException @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37108 @LENGTH@ 24
------------------INS InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37133 @LENGTH@ 88
---------------------INS StringLiteral@@"Failed to read bytes from " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37133 @LENGTH@ 28
---------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37161 @LENGTH@ 1
---------------------INS MethodInvocation@@f.getAbsolutePath() @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37164 @LENGTH@ 19
------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37164 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37166 @LENGTH@ 17
---------------------INS StringLiteral@@": " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37186 @LENGTH@ 4
---------------------INS SimpleName@@read @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37193 @LENGTH@ 4
---------------------INS StringLiteral@@" from " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37200 @LENGTH@ 8
---------------------INS MethodInvocation@@f.length() @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37211 @LENGTH@ 10
------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.length() @AT@ 37211 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@f.length() @AT@ 37213 @LENGTH@ 8
------INS CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37248 @LENGTH@ 128
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @AT@ 37255 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 37255 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 37265 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e) @TO@ CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @AT@ 37282 @LENGTH@ 84
------------INS ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e) @AT@ 37288 @LENGTH@ 77
---------------INS New@@new @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37288 @LENGTH@ 3
---------------INS SimpleType@@OperationFormatException @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37292 @LENGTH@ 24
---------------INS InfixExpression@@"Failed to read file " + f.getAbsolutePath() @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37317 @LENGTH@ 44
------------------INS StringLiteral@@"Failed to read file " @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37317 @LENGTH@ 22
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37339 @LENGTH@ 1
------------------INS MethodInvocation@@f.getAbsolutePath() @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37342 @LENGTH@ 19
---------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37342 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37344 @LENGTH@ 17
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37363 @LENGTH@ 1
------INS Block@@FinallyBody:{  StreamUtils.safeClose(is);} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37385 @LENGTH@ 50
---------INS ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(is) @TO@ Block@@FinallyBody:{  StreamUtils.safeClose(is);} @AT@ 37399 @LENGTH@ 26
------------INS MethodInvocation@@StreamUtils.safeClose(is) @TO@ ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(is) @AT@ 37399 @LENGTH@ 25
---------------INS SimpleName@@Name:StreamUtils @TO@ MethodInvocation@@StreamUtils.safeClose(is) @AT@ 37399 @LENGTH@ 11
---------------INS SimpleName@@MethodName:safeClose:[is] @TO@ MethodInvocation@@StreamUtils.safeClose(is) @AT@ 37411 @LENGTH@ 13
------------------INS SimpleName@@is @TO@ SimpleName@@MethodName:safeClose:[is] @AT@ 37421 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:bytes @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 37444 @LENGTH@ 13
------INS SimpleName@@bytes @TO@ ReturnStatement@@SimpleName:bytes @AT@ 37451 @LENGTH@ 5


UPD IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @TO@ if (entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @AT@ 10631 @LENGTH@ 248
---DEL PrefixExpression@@!entry.getValue() @AT@ 10635 @LENGTH@ 17
------DEL Operator@@! @AT@ 10635 @LENGTH@ 1
------DEL MethodInvocation@@entry.getValue() @AT@ 10636 @LENGTH@ 16
---INS MethodInvocation@@entry.getValue() @TO@ IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10635 @LENGTH@ 16
------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 10636 @LENGTH@ 5
------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 10642 @LENGTH@ 10
---UPD Block@@ThenBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @TO@ ElseBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @AT@ 10654 @LENGTH@ 113
---MOV Block@@ThenBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @TO@ IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10654 @LENGTH@ 113
---UPD Block@@ElseBody:{  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @TO@ ThenBody:{  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10773 @LENGTH@ 106


UPD EnhancedForStatement@@for (final Method method : methods) {  final Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method));  if (componentMethod != null) {    configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);    configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);  }} @TO@ for (final Method method : methods) {  MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifierForMethod(method);  Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier);  if (componentMethod != null) {    if ((BRIDGE & componentMethod.getModifiers()) != 0) {      Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());      for (      final Method other : otherMethods) {        if ((BRIDGE & other.getModifiers()) == 0) {          componentMethod=other;          break;        }      }    }    configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);    configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);  }} @AT@ 7223 @LENGTH@ 648
---UPD VariableDeclarationStatement@@final Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method)); @TO@ MethodIdentifier methodIdentifier=MethodIdentifier.getIdentifierForMethod(method); @AT@ 7277 @LENGTH@ 177
------DEL Modifier@@final @AT@ 7277 @LENGTH@ 5
------UPD SimpleType@@Method @TO@ MethodIdentifier @AT@ 7283 @LENGTH@ 6
------UPD VariableDeclarationFragment@@componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method)) @TO@ methodIdentifier=MethodIdentifier.getIdentifierForMethod(method) @AT@ 7290 @LENGTH@ 163
---------UPD SimpleName@@componentMethod @TO@ methodIdentifier @AT@ 7290 @LENGTH@ 15
---------DEL MethodInvocation@@ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method)) @AT@ 7308 @LENGTH@ 145
------------DEL SimpleName@@Name:ClassReflectionIndexUtil @AT@ 7308 @LENGTH@ 24
------------DEL SimpleName@@MethodName:findMethod:[reflectionIndex, componentConfiguration.getComponentClass(), MethodIdentifier.getIdentifierForMethod(method)] @AT@ 7333 @LENGTH@ 120
---------------DEL SimpleName@@reflectionIndex @AT@ 7344 @LENGTH@ 15
---------------DEL MethodInvocation@@componentConfiguration.getComponentClass() @AT@ 7361 @LENGTH@ 42
------------------DEL SimpleName@@Name:componentConfiguration @AT@ 7361 @LENGTH@ 22
------------------DEL SimpleName@@MethodName:getComponentClass:[] @AT@ 7384 @LENGTH@ 19
---------MOV MethodInvocation@@MethodIdentifier.getIdentifierForMethod(method) @TO@ VariableDeclarationFragment@@componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method)) @AT@ 7405 @LENGTH@ 47
---UPD IfStatement@@if (componentMethod != null) {  configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);  configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);} @TO@ if (componentMethod != null) {  if ((BRIDGE & componentMethod.getModifiers()) != 0) {    Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());    for (    final Method other : otherMethods) {      if ((BRIDGE & other.getModifiers()) == 0) {        componentMethod=other;        break;      }    }  }  configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);  configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);} @AT@ 7471 @LENGTH@ 386
------UPD Block@@ThenBody:{  configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);  configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);} @TO@ ThenBody:{  if ((BRIDGE & componentMethod.getModifiers()) != 0) {    Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());    for (    final Method other : otherMethods) {      if ((BRIDGE & other.getModifiers()) == 0) {        componentMethod=other;        break;      }    }  }  configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);  configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);} @AT@ 7500 @LENGTH@ 357
---------INS IfStatement@@if ((BRIDGE & componentMethod.getModifiers()) != 0) {  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @TO@ Block@@ThenBody:{  configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);  configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);} @AT@ 7711 @LENGTH@ 695
------------INS InfixExpression@@(BRIDGE & componentMethod.getModifiers()) != 0 @TO@ IfStatement@@if ((BRIDGE & componentMethod.getModifiers()) != 0) {  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @AT@ 7715 @LENGTH@ 46
---------------INS ParenthesizedExpression@@(BRIDGE & componentMethod.getModifiers()) @TO@ InfixExpression@@(BRIDGE & componentMethod.getModifiers()) != 0 @AT@ 7715 @LENGTH@ 41
------------------INS InfixExpression@@BRIDGE & componentMethod.getModifiers() @TO@ ParenthesizedExpression@@(BRIDGE & componentMethod.getModifiers()) @AT@ 7716 @LENGTH@ 39
---------------------INS SimpleName@@BRIDGE @TO@ InfixExpression@@BRIDGE & componentMethod.getModifiers() @AT@ 7716 @LENGTH@ 6
---------------------INS Operator@@& @TO@ InfixExpression@@BRIDGE & componentMethod.getModifiers() @AT@ 7722 @LENGTH@ 1
---------------------INS MethodInvocation@@componentMethod.getModifiers() @TO@ InfixExpression@@BRIDGE & componentMethod.getModifiers() @AT@ 7725 @LENGTH@ 30
------------------------INS SimpleName@@Name:componentMethod @TO@ MethodInvocation@@componentMethod.getModifiers() @AT@ 7725 @LENGTH@ 15
------------------------INS SimpleName@@MethodName:getModifiers:[] @TO@ MethodInvocation@@componentMethod.getModifiers() @AT@ 7741 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@(BRIDGE & componentMethod.getModifiers()) != 0 @AT@ 7756 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@(BRIDGE & componentMethod.getModifiers()) != 0 @AT@ 7760 @LENGTH@ 1
------------INS Block@@ThenBody:{  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @TO@ IfStatement@@if ((BRIDGE & componentMethod.getModifiers()) != 0) {  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @AT@ 7763 @LENGTH@ 643
---------------INS VariableDeclarationStatement@@Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()); @TO@ Block@@ThenBody:{  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @AT@ 7789 @LENGTH@ 229
------------------INS ParameterizedType@@Collection<Method> @TO@ VariableDeclarationStatement@@Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()); @AT@ 7789 @LENGTH@ 18
---------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Method> @AT@ 7789 @LENGTH@ 10
---------------------INS SimpleType@@Method @TO@ ParameterizedType@@Collection<Method> @AT@ 7800 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @TO@ VariableDeclarationStatement@@Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()); @AT@ 7808 @LENGTH@ 209
---------------------INS SimpleName@@otherMethods @TO@ VariableDeclarationFragment@@otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @AT@ 7808 @LENGTH@ 12
---------------------INS MethodInvocation@@ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @TO@ VariableDeclarationFragment@@otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @AT@ 7823 @LENGTH@ 194
------------------------INS SimpleName@@Name:ClassReflectionIndexUtil @TO@ MethodInvocation@@ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @AT@ 7823 @LENGTH@ 24
------------------------INS SimpleName@@MethodName:findMethods:[reflectionIndex, reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()), methodIdentifier.getName(), methodIdentifier.getParameterTypes()] @TO@ MethodInvocation@@ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes()) @AT@ 7848 @LENGTH@ 169
---------------------------INS SimpleName@@reflectionIndex @TO@ SimpleName@@MethodName:findMethods:[reflectionIndex, reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()), methodIdentifier.getName(), methodIdentifier.getParameterTypes()] @AT@ 7860 @LENGTH@ 15
---------------------------INS MethodInvocation@@reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()) @TO@ SimpleName@@MethodName:findMethods:[reflectionIndex, reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()), methodIdentifier.getName(), methodIdentifier.getParameterTypes()] @AT@ 7877 @LENGTH@ 73
------------------------------INS SimpleName@@Name:reflectionIndex @TO@ MethodInvocation@@reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()) @AT@ 7877 @LENGTH@ 15
------------------------------INS SimpleName@@MethodName:getClassIndex:[componentConfiguration.getComponentClass()] @TO@ MethodInvocation@@reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()) @AT@ 7893 @LENGTH@ 57
---------------------------------INS MethodInvocation@@componentConfiguration.getComponentClass() @TO@ SimpleName@@MethodName:getClassIndex:[componentConfiguration.getComponentClass()] @AT@ 7907 @LENGTH@ 42
------------------------------------INS SimpleName@@Name:componentConfiguration @TO@ MethodInvocation@@componentConfiguration.getComponentClass() @AT@ 7907 @LENGTH@ 22
------------------------------------INS SimpleName@@MethodName:getComponentClass:[] @TO@ MethodInvocation@@componentConfiguration.getComponentClass() @AT@ 7930 @LENGTH@ 19
---------------------------INS MethodInvocation@@methodIdentifier.getName() @TO@ SimpleName@@MethodName:findMethods:[reflectionIndex, reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()), methodIdentifier.getName(), methodIdentifier.getParameterTypes()] @AT@ 7952 @LENGTH@ 26
------------------------------INS SimpleName@@Name:methodIdentifier @TO@ MethodInvocation@@methodIdentifier.getName() @AT@ 7952 @LENGTH@ 16
------------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@methodIdentifier.getName() @AT@ 7969 @LENGTH@ 9
---------------------------INS MethodInvocation@@methodIdentifier.getParameterTypes() @TO@ SimpleName@@MethodName:findMethods:[reflectionIndex, reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()), methodIdentifier.getName(), methodIdentifier.getParameterTypes()] @AT@ 7980 @LENGTH@ 36
------------------------------INS SimpleName@@Name:methodIdentifier @TO@ MethodInvocation@@methodIdentifier.getParameterTypes() @AT@ 7980 @LENGTH@ 16
------------------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@methodIdentifier.getParameterTypes() @AT@ 7997 @LENGTH@ 19
---------------INS EnhancedForStatement@@for (final Method other : otherMethods) {  if ((BRIDGE & other.getModifiers()) == 0) {    componentMethod=other;    break;  }} @TO@ Block@@ThenBody:{  Collection<Method> otherMethods=ClassReflectionIndexUtil.findMethods(reflectionIndex,reflectionIndex.getClassIndex(componentConfiguration.getComponentClass()),methodIdentifier.getName(),methodIdentifier.getParameterTypes());  for (  final Method other : otherMethods) {    if ((BRIDGE & other.getModifiers()) == 0) {      componentMethod=other;      break;    }  }} @AT@ 8119 @LENGTH@ 265
------------------INS SingleVariableDeclaration@@final Method other @TO@ EnhancedForStatement@@for (final Method other : otherMethods) {  if ((BRIDGE & other.getModifiers()) == 0) {    componentMethod=other;    break;  }} @AT@ 8124 @LENGTH@ 18
---------------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Method other @AT@ 8124 @LENGTH@ 5
---------------------INS SimpleType@@Method @TO@ SingleVariableDeclaration@@final Method other @AT@ 8130 @LENGTH@ 6
---------------------INS SimpleName@@other @TO@ SingleVariableDeclaration@@final Method other @AT@ 8137 @LENGTH@ 5
------------------INS SimpleName@@otherMethods @TO@ EnhancedForStatement@@for (final Method other : otherMethods) {  if ((BRIDGE & other.getModifiers()) == 0) {    componentMethod=other;    break;  }} @AT@ 8145 @LENGTH@ 12
------------------INS IfStatement@@if ((BRIDGE & other.getModifiers()) == 0) {  componentMethod=other;  break;} @TO@ EnhancedForStatement@@for (final Method other : otherMethods) {  if ((BRIDGE & other.getModifiers()) == 0) {    componentMethod=other;    break;  }} @AT@ 8189 @LENGTH@ 169
---------------------INS InfixExpression@@(BRIDGE & other.getModifiers()) == 0 @TO@ IfStatement@@if ((BRIDGE & other.getModifiers()) == 0) {  componentMethod=other;  break;} @AT@ 8193 @LENGTH@ 36
------------------------INS ParenthesizedExpression@@(BRIDGE & other.getModifiers()) @TO@ InfixExpression@@(BRIDGE & other.getModifiers()) == 0 @AT@ 8193 @LENGTH@ 31
---------------------------INS InfixExpression@@BRIDGE & other.getModifiers() @TO@ ParenthesizedExpression@@(BRIDGE & other.getModifiers()) @AT@ 8194 @LENGTH@ 29
------------------------------INS SimpleName@@BRIDGE @TO@ InfixExpression@@BRIDGE & other.getModifiers() @AT@ 8194 @LENGTH@ 6
------------------------------INS Operator@@& @TO@ InfixExpression@@BRIDGE & other.getModifiers() @AT@ 8200 @LENGTH@ 1
------------------------------INS MethodInvocation@@other.getModifiers() @TO@ InfixExpression@@BRIDGE & other.getModifiers() @AT@ 8203 @LENGTH@ 20
---------------------------------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.getModifiers() @AT@ 8203 @LENGTH@ 5
---------------------------------INS SimpleName@@MethodName:getModifiers:[] @TO@ MethodInvocation@@other.getModifiers() @AT@ 8209 @LENGTH@ 14
------------------------INS Operator@@== @TO@ InfixExpression@@(BRIDGE & other.getModifiers()) == 0 @AT@ 8224 @LENGTH@ 2
------------------------INS NumberLiteral@@0 @TO@ InfixExpression@@(BRIDGE & other.getModifiers()) == 0 @AT@ 8228 @LENGTH@ 1
---------------------INS Block@@ThenBody:{  componentMethod=other;  break;} @TO@ IfStatement@@if ((BRIDGE & other.getModifiers()) == 0) {  componentMethod=other;  break;} @AT@ 8231 @LENGTH@ 127
------------------------INS ExpressionStatement@@Assignment:componentMethod=other @TO@ Block@@ThenBody:{  componentMethod=other;  break;} @AT@ 8265 @LENGTH@ 24
---------------------------INS Assignment@@componentMethod=other @TO@ ExpressionStatement@@Assignment:componentMethod=other @AT@ 8265 @LENGTH@ 23
------------------------------INS SimpleName@@componentMethod @TO@ Assignment@@componentMethod=other @AT@ 8265 @LENGTH@ 15
------------------------------INS Operator@@= @TO@ Assignment@@componentMethod=other @AT@ 8280 @LENGTH@ 1
------------------------------INS SimpleName@@other @TO@ Assignment@@componentMethod=other @AT@ 8283 @LENGTH@ 5
------------------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  componentMethod=other;  break;} @AT@ 8322 @LENGTH@ 6
---INS VariableDeclarationStatement@@Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier); @TO@ EnhancedForStatement@@for (final Method method : methods) {  final Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),MethodIdentifier.getIdentifierForMethod(method));  if (componentMethod != null) {    configuration.addViewInterceptor(method,new ImmediateInterceptorFactory(new ComponentDispatcherInterceptor(componentMethod)),InterceptorOrder.View.COMPONENT_DISPATCHER);    configuration.addClientInterceptor(method,CLIENT_DISPATCHER_INTERCEPTOR_FACTORY,InterceptorOrder.Client.CLIENT_DISPATCHER);  }} @AT@ 7501 @LENGTH@ 140
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier); @AT@ 7501 @LENGTH@ 6
------INS VariableDeclarationFragment@@componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @TO@ VariableDeclarationStatement@@Method componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier); @AT@ 7508 @LENGTH@ 132
---------INS SimpleName@@componentMethod @TO@ VariableDeclarationFragment@@componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @AT@ 7508 @LENGTH@ 15
---------INS MethodInvocation@@ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @TO@ VariableDeclarationFragment@@componentMethod=ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @AT@ 7526 @LENGTH@ 114
------------INS SimpleName@@Name:ClassReflectionIndexUtil @TO@ MethodInvocation@@ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @AT@ 7526 @LENGTH@ 24
------------INS SimpleName@@MethodName:findMethod:[reflectionIndex, componentConfiguration.getComponentClass(), methodIdentifier] @TO@ MethodInvocation@@ClassReflectionIndexUtil.findMethod(reflectionIndex,componentConfiguration.getComponentClass(),methodIdentifier) @AT@ 7551 @LENGTH@ 89
---------------INS SimpleName@@reflectionIndex @TO@ SimpleName@@MethodName:findMethod:[reflectionIndex, componentConfiguration.getComponentClass(), methodIdentifier] @AT@ 7562 @LENGTH@ 15
---------------INS MethodInvocation@@componentConfiguration.getComponentClass() @TO@ SimpleName@@MethodName:findMethod:[reflectionIndex, componentConfiguration.getComponentClass(), methodIdentifier] @AT@ 7579 @LENGTH@ 42
------------------INS SimpleName@@Name:componentConfiguration @TO@ MethodInvocation@@componentConfiguration.getComponentClass() @AT@ 7579 @LENGTH@ 22
------------------INS SimpleName@@MethodName:getComponentClass:[] @TO@ MethodInvocation@@componentConfiguration.getComponentClass() @AT@ 7602 @LENGTH@ 19
---------------INS SimpleName@@methodIdentifier @TO@ SimpleName@@MethodName:findMethod:[reflectionIndex, componentConfiguration.getComponentClass(), methodIdentifier] @AT@ 7623 @LENGTH@ 16


UPD IfStatement@@if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inMultilineComment=false;} else {} @TO@ if (line.endsWith(ResourceConstants.EXT_CMT_END)) {  inMultilineComment=false;} @AT@ 12159 @LENGTH@ 170
---DEL Block@@ElseBody:{} @AT@ 12282 @LENGTH@ 47


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build()] @TO@ public, static, final, AttributeDefinition, [SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build()] @AT@ 7143 @LENGTH@ 248
---UPD VariableDeclarationFragment@@SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build() @TO@ SCHEMA_LOCATIONS=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build() @AT@ 7183 @LENGTH@ 207
------UPD MethodInvocation@@new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()).build() @TO@ new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()).build() @AT@ 7202 @LENGTH@ 188
---------UPD ClassInstanceCreation@@SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build()] @TO@ SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build()] @AT@ 7202 @LENGTH@ 167
------------UPD MethodInvocation@@new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,true).build() @TO@ new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.SCHEMA_LOCATIONS,false).build() @AT@ 7256 @LENGTH@ 99
---------------UPD ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.SCHEMA_LOCATIONS, true] @TO@ PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.SCHEMA_LOCATIONS, false] @AT@ 7256 @LENGTH@ 91
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 7342 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:clearAllProperties,  @TO@ TypeDeclaration@@[public, abstract]AbstractSystemPropertyTest, AbstractCoreModelTest @AT@ 2387 @LENGTH@ 203
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2387 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2394 @LENGTH@ 4
---INS SimpleName@@MethodName:clearAllProperties @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2399 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_ONE) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2430 @LENGTH@ 31
------INS MethodInvocation@@System.clearProperty(PROP_ONE) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_ONE) @AT@ 2430 @LENGTH@ 30
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_ONE) @AT@ 2430 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_ONE] @TO@ MethodInvocation@@System.clearProperty(PROP_ONE) @AT@ 2437 @LENGTH@ 23
------------INS SimpleName@@PROP_ONE @TO@ SimpleName@@MethodName:clearProperty:[PROP_ONE] @AT@ 2451 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_TWO) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2470 @LENGTH@ 31
------INS MethodInvocation@@System.clearProperty(PROP_TWO) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_TWO) @AT@ 2470 @LENGTH@ 30
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_TWO) @AT@ 2470 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_TWO] @TO@ MethodInvocation@@System.clearProperty(PROP_TWO) @AT@ 2477 @LENGTH@ 23
------------INS SimpleName@@PROP_TWO @TO@ SimpleName@@MethodName:clearProperty:[PROP_TWO] @AT@ 2491 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_THREE) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2510 @LENGTH@ 33
------INS MethodInvocation@@System.clearProperty(PROP_THREE) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_THREE) @AT@ 2510 @LENGTH@ 32
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_THREE) @AT@ 2510 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_THREE] @TO@ MethodInvocation@@System.clearProperty(PROP_THREE) @AT@ 2517 @LENGTH@ 25
------------INS SimpleName@@PROP_THREE @TO@ SimpleName@@MethodName:clearProperty:[PROP_THREE] @AT@ 2531 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_FOUR) @TO@ MethodDeclaration@@public, void, MethodName:clearAllProperties,  @AT@ 2552 @LENGTH@ 32
------INS MethodInvocation@@System.clearProperty(PROP_FOUR) @TO@ ExpressionStatement@@MethodInvocation:System.clearProperty(PROP_FOUR) @AT@ 2552 @LENGTH@ 31
---------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.clearProperty(PROP_FOUR) @AT@ 2552 @LENGTH@ 6
---------INS SimpleName@@MethodName:clearProperty:[PROP_FOUR] @TO@ MethodInvocation@@System.clearProperty(PROP_FOUR) @AT@ 2559 @LENGTH@ 24
------------INS SimpleName@@PROP_FOUR @TO@ SimpleName@@MethodName:clearProperty:[PROP_FOUR] @AT@ 2573 @LENGTH@ 9


DEL VariableDeclarationStatement@@final PathAddress address=PathAddress.pathAddress(operation.require(OP_ADDR)); @AT@ 7921 @LENGTH@ 80
---DEL Modifier@@final @AT@ 7921 @LENGTH@ 5
---DEL SimpleType@@PathAddress @AT@ 7927 @LENGTH@ 11
---DEL VariableDeclarationFragment@@address=PathAddress.pathAddress(operation.require(OP_ADDR)) @AT@ 7939 @LENGTH@ 61
------DEL SimpleName@@address @AT@ 7939 @LENGTH@ 7
------DEL MethodInvocation@@PathAddress.pathAddress(operation.require(OP_ADDR)) @AT@ 7949 @LENGTH@ 51
---------DEL SimpleName@@Name:PathAddress @AT@ 7949 @LENGTH@ 11
---------DEL SimpleName@@MethodName:pathAddress:[operation.require(OP_ADDR)] @AT@ 7961 @LENGTH@ 39
------------DEL MethodInvocation@@operation.require(OP_ADDR) @AT@ 7973 @LENGTH@ 26
---------------DEL SimpleName@@Name:operation @AT@ 7973 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:require:[OP_ADDR] @AT@ 7983 @LENGTH@ 16
------------------DEL SimpleName@@OP_ADDR @AT@ 7991 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:instructions.add(MESSAGES.argServerConfig()) @TO@ MethodInvocation:instructions.add(MESSAGES.argShortServerConfig()) @AT@ 926 @LENGTH@ 45
---UPD MethodInvocation@@instructions.add(MESSAGES.argServerConfig()) @TO@ instructions.add(MESSAGES.argShortServerConfig()) @AT@ 926 @LENGTH@ 44
------UPD SimpleName@@MethodName:add:[MESSAGES.argServerConfig()] @TO@ MethodName:add:[MESSAGES.argShortServerConfig()] @AT@ 939 @LENGTH@ 31
---------UPD MethodInvocation@@MESSAGES.argServerConfig() @TO@ MESSAGES.argShortServerConfig() @AT@ 943 @LENGTH@ 26
------------UPD SimpleName@@MethodName:argServerConfig:[] @TO@ MethodName:argShortServerConfig:[] @AT@ 952 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(2200) @TO@ MethodInvocation:Thread.sleep(3000) @AT@ 2152 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(2200) @TO@ Thread.sleep(3000) @AT@ 2152 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[2200] @TO@ MethodName:sleep:[3000] @AT@ 2159 @LENGTH@ 11
---------UPD NumberLiteral@@2200 @TO@ 3000 @AT@ 2165 @LENGTH@ 4


INS MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @TO@ TypeDeclaration@@[public, final]ServiceHelper,  @AT@ 11472 @LENGTH@ 308
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11472 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11479 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11486 @LENGTH@ 7
---INS SimpleName@@MethodName:isSuspended @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11494 @LENGTH@ 11
---INS SingleVariableDeclaration@@Object value @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11506 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object value @AT@ 11506 @LENGTH@ 6
------INS SimpleName@@value @TO@ SingleVariableDeclaration@@Object value @AT@ 11513 @LENGTH@ 5
---INS IfStatement@@if (value instanceof StatefulService) {  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11530 @LENGTH@ 222
------INS InstanceofExpression@@value instanceof StatefulService @TO@ IfStatement@@if (value instanceof StatefulService) {  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @AT@ 11534 @LENGTH@ 32
---------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof StatefulService @AT@ 11534 @LENGTH@ 5
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof StatefulService @AT@ 11540 @LENGTH@ 10
---------INS SimpleType@@StatefulService @TO@ InstanceofExpression@@value instanceof StatefulService @AT@ 11551 @LENGTH@ 15
------INS Block@@ThenBody:{  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @TO@ IfStatement@@if (value instanceof StatefulService) {  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @AT@ 11568 @LENGTH@ 184
---------INS VariableDeclarationStatement@@StatefulService service=(StatefulService)value; @TO@ Block@@ThenBody:{  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @AT@ 11582 @LENGTH@ 50
------------INS SimpleType@@StatefulService @TO@ VariableDeclarationStatement@@StatefulService service=(StatefulService)value; @AT@ 11582 @LENGTH@ 15
------------INS VariableDeclarationFragment@@service=(StatefulService)value @TO@ VariableDeclarationStatement@@StatefulService service=(StatefulService)value; @AT@ 11598 @LENGTH@ 33
---------------INS SimpleName@@service @TO@ VariableDeclarationFragment@@service=(StatefulService)value @AT@ 11598 @LENGTH@ 7
---------------INS CastExpression@@(StatefulService)value @TO@ VariableDeclarationFragment@@service=(StatefulService)value @AT@ 11608 @LENGTH@ 23
------------------INS SimpleType@@StatefulService @TO@ CastExpression@@(StatefulService)value @AT@ 11609 @LENGTH@ 15
------------------INS SimpleName@@value @TO@ CastExpression@@(StatefulService)value @AT@ 11626 @LENGTH@ 5
---------INS IfStatement@@if (service.isSuspended() || service.isSuspending()) {  return true;} @TO@ Block@@ThenBody:{  StatefulService service=(StatefulService)value;  if (service.isSuspended() || service.isSuspending()) {    return true;  }} @AT@ 11645 @LENGTH@ 97
------------INS InfixExpression@@service.isSuspended() || service.isSuspending() @TO@ IfStatement@@if (service.isSuspended() || service.isSuspending()) {  return true;} @AT@ 11649 @LENGTH@ 47
---------------INS MethodInvocation@@service.isSuspended() @TO@ InfixExpression@@service.isSuspended() || service.isSuspending() @AT@ 11649 @LENGTH@ 21
------------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.isSuspended() @AT@ 11649 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isSuspended:[] @TO@ MethodInvocation@@service.isSuspended() @AT@ 11657 @LENGTH@ 13
---------------INS Operator@@|| @TO@ InfixExpression@@service.isSuspended() || service.isSuspending() @AT@ 11670 @LENGTH@ 2
---------------INS MethodInvocation@@service.isSuspending() @TO@ InfixExpression@@service.isSuspended() || service.isSuspending() @AT@ 11674 @LENGTH@ 22
------------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.isSuspending() @AT@ 11674 @LENGTH@ 7
------------------INS SimpleName@@MethodName:isSuspending:[] @TO@ MethodInvocation@@service.isSuspending() @AT@ 11682 @LENGTH@ 14
------------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (service.isSuspended() || service.isSuspending()) {  return true;} @AT@ 11698 @LENGTH@ 44
---------------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 11716 @LENGTH@ 12
------------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 11723 @LENGTH@ 4
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, static, boolean, MethodName:isSuspended, Object value,  @AT@ 11761 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 11768 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:clientBean.setBus(BusFactory.newInstance().createBus()) @TO@ MethodDeclaration@@protected, HelloService, MethodName:getCXFClient, Exception,  @AT@ 6539 @LENGTH@ 56
---INS MethodInvocation@@clientBean.setBus(BusFactory.newInstance().createBus()) @TO@ ExpressionStatement@@MethodInvocation:clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 6539 @LENGTH@ 55
------INS SimpleName@@Name:clientBean @TO@ MethodInvocation@@clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 6539 @LENGTH@ 10
------INS SimpleName@@MethodName:setBus:[BusFactory.newInstance().createBus()] @TO@ MethodInvocation@@clientBean.setBus(BusFactory.newInstance().createBus()) @AT@ 6550 @LENGTH@ 44
---------INS MethodInvocation@@BusFactory.newInstance().createBus() @TO@ SimpleName@@MethodName:setBus:[BusFactory.newInstance().createBus()] @AT@ 6557 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:newInstance:[] @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 6557 @LENGTH@ 24
------------INS SimpleName@@Name:BusFactory @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 6557 @LENGTH@ 10
------------INS SimpleName@@MethodName:createBus:[] @TO@ MethodInvocation@@BusFactory.newInstance().createBus() @AT@ 6582 @LENGTH@ 11


UPD MethodDeclaration@@public, abstract, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @TO@ public, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @AT@ 13566 @LENGTH@ 157
---DEL Modifier@@abstract @AT@ 13573 @LENGTH@ 8
---INS ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @TO@ MethodDeclaration@@public, abstract, void, MethodName:marshallAsElement, final ModelNode resourceModel, final boolean marshallDefault, final XMLStreamWriter writer, XMLStreamException,  @AT@ 13723 @LENGTH@ 79
------INS MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @TO@ ThrowStatement@@MethodInvocation:ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13729 @LENGTH@ 72
---------INS QualifiedName@@Name:ControllerMessages.MESSAGES @TO@ MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13729 @LENGTH@ 27
---------INS SimpleName@@MethodName:couldNotMarshalAttributeAsElement:[getName()] @TO@ MethodInvocation@@ControllerMessages.MESSAGES.couldNotMarshalAttributeAsElement(getName()) @AT@ 13757 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getName:[] @TO@ SimpleName@@MethodName:couldNotMarshalAttributeAsElement:[getName()] @AT@ 13791 @LENGTH@ 9


DEL VariableDeclarationStatement@@Flow<?> flow=createFlow(); @AT@ 1718 @LENGTH@ 28
---DEL ParameterizedType@@Flow<?> @AT@ 1718 @LENGTH@ 7
------DEL SimpleType@@Flow @AT@ 1718 @LENGTH@ 4
------DEL WildcardType@@? @AT@ 1723 @LENGTH@ 1
---DEL VariableDeclarationFragment@@flow=createFlow() @AT@ 1726 @LENGTH@ 19
------DEL SimpleName@@flow @AT@ 1726 @LENGTH@ 4
------DEL MethodInvocation@@MethodName:createFlow:[] @AT@ 1733 @LENGTH@ 12


UPD VariableDeclarationStatement@@Dictionary<?,?> props=getProperties(exchange); @TO@ Dictionary<String,?> props=getProperties(exchange); @AT@ 3207 @LENGTH@ 49
---UPD ParameterizedType@@Dictionary<?,?> @TO@ Dictionary<String,?> @AT@ 3207 @LENGTH@ 16
------INS SimpleType@@String @TO@ ParameterizedType@@Dictionary<?,?> @AT@ 3218 @LENGTH@ 6
------DEL WildcardType@@? @AT@ 3221 @LENGTH@ 1


INS MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @TO@ TypeDeclaration@@[@Configuration, @Import(RepositoryRestMvcConfiguration.class), @ComponentScan(basePackageClasses=ApplicationConfig.class), @EnableJpaRepositories, @EnableTransactionManagement, public]ApplicationConfig,  @AT@ 3074 @LENGTH@ 462
---INS Modifier@@public @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3074 @LENGTH@ 6
---INS SimpleType@@ConversionService @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3081 @LENGTH@ 17
---INS SimpleName@@MethodName:customConversionService @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3099 @LENGTH@ 23
---INS VariableDeclarationStatement@@DefaultFormattingConversionService cs=new DefaultFormattingConversionService(); @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3131 @LENGTH@ 81
------INS SimpleType@@DefaultFormattingConversionService @TO@ VariableDeclarationStatement@@DefaultFormattingConversionService cs=new DefaultFormattingConversionService(); @AT@ 3131 @LENGTH@ 34
------INS VariableDeclarationFragment@@cs=new DefaultFormattingConversionService() @TO@ VariableDeclarationStatement@@DefaultFormattingConversionService cs=new DefaultFormattingConversionService(); @AT@ 3166 @LENGTH@ 45
---------INS SimpleName@@cs @TO@ VariableDeclarationFragment@@cs=new DefaultFormattingConversionService() @AT@ 3166 @LENGTH@ 2
---------INS ClassInstanceCreation@@DefaultFormattingConversionService[] @TO@ VariableDeclarationFragment@@cs=new DefaultFormattingConversionService() @AT@ 3171 @LENGTH@ 40
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultFormattingConversionService[] @AT@ 3171 @LENGTH@ 3
------------INS SimpleType@@DefaultFormattingConversionService @TO@ ClassInstanceCreation@@DefaultFormattingConversionService[] @AT@ 3175 @LENGTH@ 34
---INS ExpressionStatement@@MethodInvocation:cs.addConverter(new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
) @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3217 @LENGTH@ 300
------INS MethodInvocation@@cs.addConverter(new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:cs.addConverter(new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
) @AT@ 3217 @LENGTH@ 299
---------INS SimpleName@@Name:cs @TO@ MethodInvocation@@cs.addConverter(new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
) @AT@ 3217 @LENGTH@ 2
---------INS SimpleName@@MethodName:addConverter:[new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
] @TO@ MethodInvocation@@cs.addConverter(new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
) @AT@ 3220 @LENGTH@ 296
------------INS ClassInstanceCreation@@Converter<String[],List<Long>>[] @TO@ SimpleName@@MethodName:addConverter:[new Converter<String[],List<Long>>(){
  @Override public List<Long> convert(  String[] source){
    List<Long> longs=new ArrayList<Long>(source.length);
    for (    String s : source) {
      longs.add(Long.parseLong(s));
    }
    return longs;
  }
}
] @AT@ 3233 @LENGTH@ 282
---------------INS New@@new @TO@ ClassInstanceCreation@@Converter<String[],List<Long>>[] @AT@ 3233 @LENGTH@ 3
---------------INS ParameterizedType@@Converter<String[],List<Long>> @TO@ ClassInstanceCreation@@Converter<String[],List<Long>>[] @AT@ 3237 @LENGTH@ 31
------------------INS SimpleType@@Converter @TO@ ParameterizedType@@Converter<String[],List<Long>> @AT@ 3237 @LENGTH@ 9
------------------INS ArrayType@@String[] @TO@ ParameterizedType@@Converter<String[],List<Long>> @AT@ 3247 @LENGTH@ 8
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3247 @LENGTH@ 6
------------------INS ParameterizedType@@List<Long> @TO@ ParameterizedType@@Converter<String[],List<Long>> @AT@ 3257 @LENGTH@ 10
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Long> @AT@ 3257 @LENGTH@ 4
---------------------INS SimpleType@@Long @TO@ ParameterizedType@@List<Long> @AT@ 3262 @LENGTH@ 4
---------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Converter<String[],List<Long>>[] @AT@ 3271 @LENGTH@ 244
------------------INS MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3289 @LENGTH@ 220
---------------------INS Modifier@@public @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3289 @LENGTH@ 6
---------------------INS ParameterizedType@@List<Long> @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3296 @LENGTH@ 10
------------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Long> @AT@ 3296 @LENGTH@ 4
------------------------INS SimpleType@@Long @TO@ ParameterizedType@@List<Long> @AT@ 3301 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:convert @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3307 @LENGTH@ 7
---------------------INS SingleVariableDeclaration@@String[] source @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3315 @LENGTH@ 15
------------------------INS ArrayType@@String[] @TO@ SingleVariableDeclaration@@String[] source @AT@ 3315 @LENGTH@ 8
---------------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 3315 @LENGTH@ 6
------------------------INS SimpleName@@source @TO@ SingleVariableDeclaration@@String[] source @AT@ 3324 @LENGTH@ 6
---------------------INS VariableDeclarationStatement@@List<Long> longs=new ArrayList<Long>(source.length); @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3342 @LENGTH@ 54
------------------------INS ParameterizedType@@List<Long> @TO@ VariableDeclarationStatement@@List<Long> longs=new ArrayList<Long>(source.length); @AT@ 3342 @LENGTH@ 10
---------------------------INS SimpleType@@List @TO@ ParameterizedType@@List<Long> @AT@ 3342 @LENGTH@ 4
---------------------------INS SimpleType@@Long @TO@ ParameterizedType@@List<Long> @AT@ 3347 @LENGTH@ 4
------------------------INS VariableDeclarationFragment@@longs=new ArrayList<Long>(source.length) @TO@ VariableDeclarationStatement@@List<Long> longs=new ArrayList<Long>(source.length); @AT@ 3353 @LENGTH@ 42
---------------------------INS SimpleName@@longs @TO@ VariableDeclarationFragment@@longs=new ArrayList<Long>(source.length) @AT@ 3353 @LENGTH@ 5
---------------------------INS ClassInstanceCreation@@ArrayList<Long>[source.length] @TO@ VariableDeclarationFragment@@longs=new ArrayList<Long>(source.length) @AT@ 3361 @LENGTH@ 34
------------------------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<Long>[source.length] @AT@ 3361 @LENGTH@ 3
------------------------------INS ParameterizedType@@ArrayList<Long> @TO@ ClassInstanceCreation@@ArrayList<Long>[source.length] @AT@ 3365 @LENGTH@ 15
---------------------------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<Long> @AT@ 3365 @LENGTH@ 9
---------------------------------INS SimpleType@@Long @TO@ ParameterizedType@@ArrayList<Long> @AT@ 3375 @LENGTH@ 4
------------------------------INS QualifiedName@@source.length @TO@ ClassInstanceCreation@@ArrayList<Long>[source.length] @AT@ 3381 @LENGTH@ 13
---------------------------------INS SimpleName@@source @TO@ QualifiedName@@source.length @AT@ 3381 @LENGTH@ 6
---------------------------------INS SimpleName@@length @TO@ QualifiedName@@source.length @AT@ 3388 @LENGTH@ 6
---------------------INS EnhancedForStatement@@for (String s : source) {  longs.add(Long.parseLong(s));} @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3405 @LENGTH@ 74
------------------------INS SingleVariableDeclaration@@String s @TO@ EnhancedForStatement@@for (String s : source) {  longs.add(Long.parseLong(s));} @AT@ 3409 @LENGTH@ 8
---------------------------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String s @AT@ 3409 @LENGTH@ 6
---------------------------INS SimpleName@@s @TO@ SingleVariableDeclaration@@String s @AT@ 3416 @LENGTH@ 1
------------------------INS SimpleName@@source @TO@ EnhancedForStatement@@for (String s : source) {  longs.add(Long.parseLong(s));} @AT@ 3420 @LENGTH@ 6
------------------------INS ExpressionStatement@@MethodInvocation:longs.add(Long.parseLong(s)) @TO@ EnhancedForStatement@@for (String s : source) {  longs.add(Long.parseLong(s));} @AT@ 3440 @LENGTH@ 29
---------------------------INS MethodInvocation@@longs.add(Long.parseLong(s)) @TO@ ExpressionStatement@@MethodInvocation:longs.add(Long.parseLong(s)) @AT@ 3440 @LENGTH@ 28
------------------------------INS SimpleName@@Name:longs @TO@ MethodInvocation@@longs.add(Long.parseLong(s)) @AT@ 3440 @LENGTH@ 5
------------------------------INS SimpleName@@MethodName:add:[Long.parseLong(s)] @TO@ MethodInvocation@@longs.add(Long.parseLong(s)) @AT@ 3446 @LENGTH@ 22
---------------------------------INS MethodInvocation@@Long.parseLong(s) @TO@ SimpleName@@MethodName:add:[Long.parseLong(s)] @AT@ 3450 @LENGTH@ 17
------------------------------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.parseLong(s) @AT@ 3450 @LENGTH@ 4
------------------------------------INS SimpleName@@MethodName:parseLong:[s] @TO@ MethodInvocation@@Long.parseLong(s) @AT@ 3455 @LENGTH@ 12
---------------------------------------INS SimpleName@@s @TO@ SimpleName@@MethodName:parseLong:[s] @AT@ 3465 @LENGTH@ 1
---------------------INS ReturnStatement@@SimpleName:longs @TO@ MethodDeclaration@@public, List<Long>, MethodName:convert, String[] source,  @AT@ 3488 @LENGTH@ 13
------------------------INS SimpleName@@longs @TO@ ReturnStatement@@SimpleName:longs @AT@ 3495 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:cs @TO@ MethodDeclaration@@public, ConversionService, MethodName:customConversionService,  @AT@ 3522 @LENGTH@ 10
------INS SimpleName@@cs @TO@ ReturnStatement@@SimpleName:cs @AT@ 3529 @LENGTH@ 2


INS IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ MethodDeclaration@@public, void, MethodName:testSendAndRecieveMailWithAttachments, Exception,  @AT@ 3585 @LENGTH@ 222
---INS MethodInvocation@@MethodName:isJava16:[] @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3589 @LENGTH@ 10
---INS Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3601 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ThenBody:{  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} @AT@ 3585 @LENGTH@ 69
---INS Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @TO@ IfStatement@@if (isJava16()) {  assertEquals("image/jpeg; name=logo.jpeg",handler.getContentType());} else {  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3700 @LENGTH@ 107
------INS ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ Block@@ElseBody:{  assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType());} @AT@ 3714 @LENGTH@ 83
---------INS MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3714 @LENGTH@ 82
------------INS SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @TO@ MethodInvocation@@assertEquals("application/octet-stream; name=logo.jpeg",handler.getContentType()) @AT@ 3714 @LENGTH@ 82
---------------INS StringLiteral@@"application/octet-stream; name=logo.jpeg" @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3727 @LENGTH@ 42
---------------INS MethodInvocation@@handler.getContentType() @TO@ SimpleName@@MethodName:assertEquals:["application/octet-stream; name=logo.jpeg", handler.getContentType()] @AT@ 3771 @LENGTH@ 24
------------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.getContentType() @AT@ 3771 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getContentType:[] @TO@ MethodInvocation@@handler.getContentType() @AT@ 3779 @LENGTH@ 16


UPD IfStatement@@if (EnvironmentRefsGroupMetaDataParser.parse(reader,env)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @TO@ if (EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer)) {  if (wmd.getJndiEnvironmentRefsGroup() == null) {    wmd.setJndiEnvironmentRefsGroup(env);  }  continue;} @AT@ 7100 @LENGTH@ 241
---UPD MethodInvocation@@EnvironmentRefsGroupMetaDataParser.parse(reader,env) @TO@ EnvironmentRefsGroupMetaDataParser.parse(reader,env,propertyReplacer) @AT@ 7104 @LENGTH@ 53
------UPD SimpleName@@MethodName:parse:[reader, env] @TO@ MethodName:parse:[reader, env, propertyReplacer] @AT@ 7139 @LENGTH@ 18
---------INS SimpleName@@propertyReplacer @TO@ SimpleName@@MethodName:parse:[reader, env] @AT@ 7158 @LENGTH@ 16


INS FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @TO@ TypeDeclaration@@[public, abstract]BaseJettyTest, CamelTestSupport @AT@ 1315 @LENGTH@ 66
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1315 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1323 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1330 @LENGTH@ 5
---INS SimpleType@@AtomicInteger @TO@ FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1336 @LENGTH@ 13
---INS VariableDeclarationFragment@@counter=new AtomicInteger(1) @TO@ FieldDeclaration@@private, static, final, AtomicInteger, [counter=new AtomicInteger(1)] @AT@ 1350 @LENGTH@ 30
------INS SimpleName@@counter @TO@ VariableDeclarationFragment@@counter=new AtomicInteger(1) @AT@ 1350 @LENGTH@ 7
------INS ClassInstanceCreation@@AtomicInteger[1] @TO@ VariableDeclarationFragment@@counter=new AtomicInteger(1) @AT@ 1360 @LENGTH@ 20
---------INS New@@new @TO@ ClassInstanceCreation@@AtomicInteger[1] @AT@ 1360 @LENGTH@ 3
---------INS SimpleType@@AtomicInteger @TO@ ClassInstanceCreation@@AtomicInteger[1] @AT@ 1364 @LENGTH@ 13
---------INS NumberLiteral@@1 @TO@ ClassInstanceCreation@@AtomicInteger[1] @AT@ 1378 @LENGTH@ 1


INS FieldDeclaration@@private, HazelcastInstance, [hazelcastInstance] @TO@ TypeDeclaration@@[public]HazelcastMultimapProducerForSpringTest, CamelSpringTestSupport @AT@ 1454 @LENGTH@ 44
---INS Modifier@@private @TO@ FieldDeclaration@@private, HazelcastInstance, [hazelcastInstance] @AT@ 1454 @LENGTH@ 7
---INS SimpleType@@HazelcastInstance @TO@ FieldDeclaration@@private, HazelcastInstance, [hazelcastInstance] @AT@ 1462 @LENGTH@ 17
---INS VariableDeclarationFragment@@hazelcastInstance @TO@ FieldDeclaration@@private, HazelcastInstance, [hazelcastInstance] @AT@ 1480 @LENGTH@ 17
------INS SimpleName@@hazelcastInstance @TO@ VariableDeclarationFragment@@hazelcastInstance @AT@ 1480 @LENGTH@ 17


UPD FieldDeclaration@@private, CountDownLatch, [latch] @TO@ private, volatile, CountDownLatch, [latch] @AT@ 2548 @LENGTH@ 29
---INS Modifier@@volatile @TO@ FieldDeclaration@@private, CountDownLatch, [latch] @AT@ 2556 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:log.info("Exchange does not have a retry message.  Set the exception and allow the retry.") @TO@ MethodInvocation:log.info("{} Messages have been processed. Failing the exchange to force a rollback of the transaction.",MAX_ATTEMPTS_COUNT) @AT@ 4059 @LENGTH@ 92
---UPD MethodInvocation@@log.info("Exchange does not have a retry message.  Set the exception and allow the retry.") @TO@ log.info("{} Messages have been processed. Failing the exchange to force a rollback of the transaction.",MAX_ATTEMPTS_COUNT) @AT@ 4059 @LENGTH@ 91
------UPD SimpleName@@MethodName:info:["Exchange does not have a retry message.  Set the exception and allow the retry."] @TO@ MethodName:info:["{} Messages have been processed. Failing the exchange to force a rollback of the transaction.", MAX_ATTEMPTS_COUNT] @AT@ 4063 @LENGTH@ 87
---------UPD StringLiteral@@"Exchange does not have a retry message.  Set the exception and allow the retry." @TO@ "{} Messages have been processed. Failing the exchange to force a rollback of the transaction." @AT@ 4068 @LENGTH@ 81
---------INS SimpleName@@MAX_ATTEMPTS_COUNT @TO@ SimpleName@@MethodName:info:["Exchange does not have a retry message.  Set the exception and allow the retry."] @AT@ 4165 @LENGTH@ 18


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build()] @AT@ 4291 @LENGTH@ 435
---UPD VariableDeclarationFragment@@SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build() @TO@ SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 4337 @LENGTH@ 388
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 4366 @LENGTH@ 359
---------UPD MethodInvocation@@MethodName:setValidator:[new ModelTypeValidator(ModelType.INT,true,true)] @TO@ MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @AT@ 4366 @LENGTH@ 338
------------UPD ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @TO@ IntRangeValidator[-65535, 65535, true, true] @AT@ 4654 @LENGTH@ 49
---------------UPD SimpleType@@ModelTypeValidator @TO@ IntRangeValidator @AT@ 4658 @LENGTH@ 18
---------------DEL QualifiedName@@ModelType.INT @AT@ 4677 @LENGTH@ 13
------------------DEL SimpleName@@ModelType @AT@ 4677 @LENGTH@ 9
------------------DEL SimpleName@@INT @AT@ 4687 @LENGTH@ 3
---------------INS PrefixExpression@@-65535 @TO@ ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @AT@ 4748 @LENGTH@ 6
------------------INS Operator@@- @TO@ PrefixExpression@@-65535 @AT@ 4748 @LENGTH@ 1
------------------INS NumberLiteral@@65535 @TO@ PrefixExpression@@-65535 @AT@ 4749 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @AT@ 4756 @LENGTH@ 5


UPD MethodDeclaration@@public, abstract, void, MethodName:deploy, final File file, final String deploymentName, MojoExecutionException, MojoFailureException, IOException,  @TO@ public, abstract, void, MethodName:deploy, final File file, final String deploymentName, DeploymentExecutionException, DeploymentFailureException, IOException,  @AT@ 5980 @LENGTH@ 139
---UPD SimpleType@@MojoExecutionException @TO@ DeploymentExecutionException @AT@ 6061 @LENGTH@ 22
---UPD SimpleType@@MojoFailureException @TO@ DeploymentFailureException @AT@ 6085 @LENGTH@ 20


UPD EnhancedForStatement@@for (FileStatus symlink : symlinks) {  BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }} @TO@ for (FileStatus symlink : symlinks) {  BufferedReader reader=null;  try {    reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));    String line;    while ((line=reader.readLine()) != null) {      targetPaths.add(new Path(line));      symlinkPaths.add(symlink.getPath());    }  }  finally {    org.apache.hadoop.io.IOUtils.closeStream(reader);  }} @AT@ 7206 @LENGTH@ 381
---UPD VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))); @TO@ BufferedReader reader=null; @AT@ 7252 @LENGTH@ 152
------UPD VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ reader=null @AT@ 7267 @LENGTH@ 136
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 7276 @LENGTH@ 4
---INS TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @TO@ EnhancedForStatement@@for (FileStatus symlink : symlinks) {  BufferedReader reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }} @AT@ 7290 @LENGTH@ 411
------INS ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 7306 @LENGTH@ 121
---------INS Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @TO@ ExpressionStatement@@Assignment:reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 7306 @LENGTH@ 120
------------MOV ClassInstanceCreation@@BufferedReader[new InputStreamReader(fileSystem.open(symlink.getPath()))] @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 7288 @LENGTH@ 115
------------INS SimpleName@@reader @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 7306 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath()))) @AT@ 7312 @LENGTH@ 1
------MOV VariableDeclarationStatement@@String line; @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 7414 @LENGTH@ 12
------MOV WhileStatement@@while ((line=reader.readLine()) != null) {  targetPaths.add(new Path(line));  symlinkPaths.add(symlink.getPath());} @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 7435 @LENGTH@ 144
------INS Block@@FinallyBody:{  org.apache.hadoop.io.IOUtils.closeStream(reader);} @TO@ TryStatement@@try {  reader=new BufferedReader(new InputStreamReader(fileSystem.open(symlink.getPath())));  String line;  while ((line=reader.readLine()) != null) {    targetPaths.add(new Path(line));    symlinkPaths.add(symlink.getPath());  }}  finally {  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 7630 @LENGTH@ 71
---------INS ExpressionStatement@@MethodInvocation:org.apache.hadoop.io.IOUtils.closeStream(reader) @TO@ Block@@FinallyBody:{  org.apache.hadoop.io.IOUtils.closeStream(reader);} @AT@ 7642 @LENGTH@ 49
------------INS MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @TO@ ExpressionStatement@@MethodInvocation:org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 7642 @LENGTH@ 48
---------------INS QualifiedName@@Name:org.apache.hadoop.io.IOUtils @TO@ MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 7642 @LENGTH@ 28
---------------INS SimpleName@@MethodName:closeStream:[reader] @TO@ MethodInvocation@@org.apache.hadoop.io.IOUtils.closeStream(reader) @AT@ 7671 @LENGTH@ 19
------------------INS SimpleName@@reader @TO@ SimpleName@@MethodName:closeStream:[reader] @AT@ 7683 @LENGTH@ 6


UPD VariableDeclarationStatement@@final Configuration cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())); @TO@ final Configuration cfg=ConfigurationUtils.createFrom(configuration,properties); @AT@ 4076 @LENGTH@ 170
---UPD VariableDeclarationFragment@@cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @TO@ cfg=ConfigurationUtils.createFrom(configuration,properties) @AT@ 4096 @LENGTH@ 149
------DEL ParenthesizedExpression@@(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @AT@ 4102 @LENGTH@ 143
---------DEL ConditionalExpression@@properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration()) @AT@ 4103 @LENGTH@ 141
------------DEL InfixExpression@@properties != null @AT@ 4103 @LENGTH@ 18
---------------DEL SimpleName@@properties @AT@ 4103 @LENGTH@ 10
---------------DEL Operator@@!= @AT@ 4113 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 4117 @LENGTH@ 4
------------DEL ParenthesizedExpression@@(configuration != null ? configuration : new Configuration()) @AT@ 4183 @LENGTH@ 61
---------------DEL ConditionalExpression@@configuration != null ? configuration : new Configuration() @AT@ 4184 @LENGTH@ 59
------------------DEL InfixExpression@@configuration != null @AT@ 4184 @LENGTH@ 21
---------------------DEL SimpleName@@configuration @AT@ 4184 @LENGTH@ 13
---------------------DEL Operator@@!= @AT@ 4197 @LENGTH@ 2
---------------------DEL NullLiteral@@null @AT@ 4201 @LENGTH@ 4
------------------DEL SimpleName@@configuration @AT@ 4208 @LENGTH@ 13
------------------DEL ClassInstanceCreation@@Configuration[] @AT@ 4224 @LENGTH@ 19
---------------------DEL New@@new @AT@ 4224 @LENGTH@ 3
---------------------DEL SimpleType@@Configuration @AT@ 4228 @LENGTH@ 13
------MOV MethodInvocation@@ConfigurationUtils.createFrom(configuration,properties) @TO@ VariableDeclarationFragment@@cfg=(properties != null ? ConfigurationUtils.createFrom(configuration,properties) : (configuration != null ? configuration : new Configuration())) @AT@ 4124 @LENGTH@ 56


UPD ExpressionStatement@@MethodInvocation:from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false").routeId("foo").noAutoStartup().to("log:result","mock:result") @TO@ MethodInvocation:from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false").routeId("foo").noAutoStartup().to("log:result","mock:result") @AT@ 1338 @LENGTH@ 235
---UPD MethodInvocation@@from("sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false").routeId("foo").noAutoStartup().to("log:result","mock:result") @TO@ from("sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false").routeId("foo").noAutoStartup().to("log:result","mock:result") @AT@ 1338 @LENGTH@ 234
------UPD MethodInvocation@@MethodName:from:["sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false"] @TO@ MethodName:from:["sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false"] @AT@ 1338 @LENGTH@ 129
---------UPD InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @TO@ "sftp://localhost:" + getPort() + "/"+ FTP_ROOT_DIR+ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @AT@ 1343 @LENGTH@ 123
------------INS StringLiteral@@"/" @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @AT@ 1272 @LENGTH@ 3
------------INS SimpleName@@FTP_ROOT_DIR @TO@ InfixExpression@@"sftp://localhost:" + getPort() + "/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @AT@ 1278 @LENGTH@ 12
------------UPD StringLiteral@@"/?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @TO@ "?username=admin&password=admin&delay=10s&disconnect=true&recursive=true&stepwise=false" @AT@ 1377 @LENGTH@ 89


INS TryStatement@@try {  if (null != entityType.getVersion(Long.class)) {    versionAttribute=new JpaAttributeMetadata(entityType,entityType.getVersion(Long.class));  }} catch (IllegalArgumentException ignored) {} @TO@ MethodDeclaration@@public, voidMethodName:JpaEntityMetadata, Repositories repositories, EntityType<?> entityType,  @AT@ 1422 @LENGTH@ 264
---MOV IfStatement@@if (null != entityType.getVersion(Long.class)) {  versionAttribute=new JpaAttributeMetadata(entityType,entityType.getVersion(Long.class));} @TO@ TryStatement@@try {  if (null != entityType.getVersion(Long.class)) {    versionAttribute=new JpaAttributeMetadata(entityType,entityType.getVersion(Long.class));  }} catch (IllegalArgumentException ignored) {} @AT@ 1422 @LENGTH@ 151
---INS CatchClause@@catch (IllegalArgumentException ignored) {} @TO@ TryStatement@@try {  if (null != entityType.getVersion(Long.class)) {    versionAttribute=new JpaAttributeMetadata(entityType,entityType.getVersion(Long.class));  }} catch (IllegalArgumentException ignored) {} @AT@ 1596 @LENGTH@ 90
------INS SingleVariableDeclaration@@IllegalArgumentException ignored @TO@ CatchClause@@catch (IllegalArgumentException ignored) {} @AT@ 1602 @LENGTH@ 32
---------INS SimpleType@@IllegalArgumentException @TO@ SingleVariableDeclaration@@IllegalArgumentException ignored @AT@ 1602 @LENGTH@ 24
---------INS SimpleName@@ignored @TO@ SingleVariableDeclaration@@IllegalArgumentException ignored @AT@ 1627 @LENGTH@ 7


UPD SwitchStatement@@switch (tok) {case FIELD_NAME:{    AttributeMetadata attrMeta=repoMeta.entityMetadata().attribute(name);    Object val=null;    if (name.startsWith("@http")) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1)));      continue;    }    if ("href".equals(name)) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(jp.nextTextValue()));      continue;    }    if ("rel".equals(name)) {      continue;    }    if (null == attrMeta) {      continue;    }    if (attrMeta.isCollectionLike()) {      Collection c=attrMeta.asCollection(entity);      if (null == c || c == Collections.emptyList()) {        c=new ArrayList();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object cval=jp.readValueAs(attrMeta.elementType());          c.add(cval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=c;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");      }    } else     if (attrMeta.isSetLike()) {      Set s=attrMeta.asSet(entity);      if (null == s || s == Collections.emptySet()) {        s=new HashSet();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object sval=jp.readValueAs(attrMeta.elementType());          s.add(sval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=s;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");      }    } else     if (attrMeta.isMapLike()) {      Map m=attrMeta.asMap(entity);      if (null == m || m == Collections.emptyMap()) {        m=new HashMap();      }      if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {        do {          name=jp.getCurrentName();          Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);          tok=jp.nextToken();          Object mval=jp.readValueAs(attrMeta.elementType());          m.put(mkey,mval);        } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);        val=m;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");      }    } else {      if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {        val=jp.readValueAs(attrMeta.type());      }    }    if (null != val) {      attrMeta.set(val,entity);    }    break;  }} @TO@ switch (tok) {case FIELD_NAME:{    AttributeMetadata attrMeta=repoMeta.entityMetadata().attribute(name);    Object val=null;    if (name.startsWith("@http")) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1)));      continue;    }    if ("href".equals(name)) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(jp.nextTextValue()));      continue;    }    if ("rel".equals(name)) {      continue;    }    if ("links".equals(name)) {      while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {      }      continue;    }    if (null == attrMeta) {      continue;    }    if (attrMeta.isCollectionLike()) {      Collection c=attrMeta.asCollection(entity);      if (null == c || c == Collections.emptyList()) {        c=new ArrayList();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object cval=jp.readValueAs(attrMeta.elementType());          c.add(cval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=c;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");      }    } else     if (attrMeta.isSetLike()) {      Set s=attrMeta.asSet(entity);      if (null == s || s == Collections.emptySet()) {        s=new HashSet();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object sval=jp.readValueAs(attrMeta.elementType());          s.add(sval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=s;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");      }    } else     if (attrMeta.isMapLike()) {      Map m=attrMeta.asMap(entity);      if (null == m || m == Collections.emptyMap()) {        m=new HashMap();      }      if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {        do {          name=jp.getCurrentName();          Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);          tok=jp.nextToken();          Object mval=jp.readValueAs(attrMeta.elementType());          m.put(mkey,mval);        } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);        val=m;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");      }    } else {      if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {        val=jp.readValueAs(attrMeta.type());      }    }    if (null != val) {      attrMeta.set(val,entity);    }    break;  }} @AT@ 9604 @LENGTH@ 3989
---INS IfStatement@@if ("links".equals(name)) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @TO@ SwitchStatement@@switch (tok) {case FIELD_NAME:{    AttributeMetadata attrMeta=repoMeta.entityMetadata().attribute(name);    Object val=null;    if (name.startsWith("@http")) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1)));      continue;    }    if ("href".equals(name)) {      entity=domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(jp.nextTextValue()));      continue;    }    if ("rel".equals(name)) {      continue;    }    if (null == attrMeta) {      continue;    }    if (attrMeta.isCollectionLike()) {      Collection c=attrMeta.asCollection(entity);      if (null == c || c == Collections.emptyList()) {        c=new ArrayList();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object cval=jp.readValueAs(attrMeta.elementType());          c.add(cval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=c;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Collection.");      }    } else     if (attrMeta.isSetLike()) {      Set s=attrMeta.asSet(entity);      if (null == s || s == Collections.emptySet()) {        s=new HashSet();      }      if ((tok=jp.nextToken()) == JsonToken.START_ARRAY) {        do {          Object sval=jp.readValueAs(attrMeta.elementType());          s.add(sval);        } while ((tok=jp.nextToken()) != JsonToken.END_ARRAY);        val=s;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Set.");      }    } else     if (attrMeta.isMapLike()) {      Map m=attrMeta.asMap(entity);      if (null == m || m == Collections.emptyMap()) {        m=new HashMap();      }      if ((tok=jp.nextToken()) == JsonToken.START_OBJECT) {        do {          name=jp.getCurrentName();          Object mkey=(name.startsWith("@http") ? domainObjectResolver.resolve(RepositoryRestController.BASE_URI.get(),URI.create(name.substring(1))) : name);          tok=jp.nextToken();          Object mval=jp.readValueAs(attrMeta.elementType());          m.put(mkey,mval);        } while ((tok=jp.nextToken()) != JsonToken.END_OBJECT);        val=m;      } else       if (tok == JsonToken.VALUE_NULL) {        val=null;      } else {        throw new HttpMessageNotReadableException("Cannot read a JSON " + tok + " as a Map.");      }    } else {      if ((tok=jp.nextToken()) != JsonToken.VALUE_NULL) {        val=jp.readValueAs(attrMeta.type());      }    }    if (null != val) {      attrMeta.set(val,entity);    }    break;  }} @AT@ 10450 @LENGTH@ 191
------INS MethodInvocation@@"links".equals(name) @TO@ IfStatement@@if ("links".equals(name)) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @AT@ 10453 @LENGTH@ 20
---------INS StringLiteral@@"links" @TO@ MethodInvocation@@"links".equals(name) @AT@ 10453 @LENGTH@ 7
---------INS SimpleName@@MethodName:equals:[name] @TO@ MethodInvocation@@"links".equals(name) @AT@ 10461 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:equals:[name] @AT@ 10468 @LENGTH@ 4
------INS Block@@ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @TO@ IfStatement@@if ("links".equals(name)) {  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @AT@ 10475 @LENGTH@ 166
---------INS WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {} @TO@ Block@@ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @AT@ 10491 @LENGTH@ 112
------------INS InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {} @AT@ 10497 @LENGTH@ 45
---------------INS ParenthesizedExpression@@(tok=jp.nextToken()) @TO@ InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @AT@ 10497 @LENGTH@ 22
------------------INS Assignment@@tok=jp.nextToken() @TO@ ParenthesizedExpression@@(tok=jp.nextToken()) @AT@ 10498 @LENGTH@ 20
---------------------INS SimpleName@@tok @TO@ Assignment@@tok=jp.nextToken() @AT@ 10498 @LENGTH@ 3
---------------------INS Operator@@= @TO@ Assignment@@tok=jp.nextToken() @AT@ 10501 @LENGTH@ 1
---------------------INS MethodInvocation@@jp.nextToken() @TO@ Assignment@@tok=jp.nextToken() @AT@ 10504 @LENGTH@ 14
------------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.nextToken() @AT@ 10504 @LENGTH@ 2
------------------------INS SimpleName@@MethodName:nextToken:[] @TO@ MethodInvocation@@jp.nextToken() @AT@ 10507 @LENGTH@ 11
---------------INS Operator@@!= @TO@ InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @AT@ 10519 @LENGTH@ 2
---------------INS QualifiedName@@JsonToken.END_ARRAY @TO@ InfixExpression@@(tok=jp.nextToken()) != JsonToken.END_ARRAY @AT@ 10523 @LENGTH@ 19
------------------INS SimpleName@@JsonToken @TO@ QualifiedName@@JsonToken.END_ARRAY @AT@ 10523 @LENGTH@ 9
------------------INS SimpleName@@END_ARRAY @TO@ QualifiedName@@JsonToken.END_ARRAY @AT@ 10533 @LENGTH@ 9
------------INS Block@@WhileBody:{} @TO@ WhileStatement@@while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {} @AT@ 10544 @LENGTH@ 59
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  while ((tok=jp.nextToken()) != JsonToken.END_ARRAY) {  }  continue;} @AT@ 10618 @LENGTH@ 9


UPD WhileStatement@@while ((inputLine=in.readLine()) != null) {  if (stackTracePattern.matcher(inputLine).matches() || endStackTracePattern.matcher(inputLine).matches()) {    if (stackTrace == null) {      stackTrace=new ArrayList<String>();      stackTrace.add(lastLine);    } else     if (!lastLineMatched) {      stackTrace.add(lastLine);    }    stackTrace.add(inputLine);    lastLineMatched=true;  } else {    if (!lastLineMatched && stackTrace != null) {      stackTraces.add(stackTrace);      stackTrace=null;    }    lastLineMatched=false;  }  lastLine=inputLine;} @TO@ while ((inputLine=ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine())) != null) {  if (stackTracePattern.matcher(inputLine).matches() || endStackTracePattern.matcher(inputLine).matches()) {    if (stackTrace == null) {      stackTrace=new ArrayList<String>();      stackTrace.add(lastLine);    } else     if (!lastLineMatched) {      stackTrace.add(lastLine);    }    stackTrace.add(inputLine);    lastLineMatched=true;  } else {    if (!lastLineMatched && stackTrace != null) {      stackTraces.add(stackTrace);      stackTrace=null;    }    lastLineMatched=false;  }  lastLine=inputLine;} @AT@ 6840 @LENGTH@ 1310
---UPD InfixExpression@@(inputLine=in.readLine()) != null @TO@ (inputLine=ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine())) != null @AT@ 6847 @LENGTH@ 35
------UPD ParenthesizedExpression@@(inputLine=in.readLine()) @TO@ (inputLine=ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine())) @AT@ 6847 @LENGTH@ 27
---------UPD Assignment@@inputLine=in.readLine() @TO@ inputLine=ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine()) @AT@ 6848 @LENGTH@ 25
------------DEL MethodInvocation@@in.readLine() @AT@ 6860 @LENGTH@ 13
------------INS MethodInvocation@@ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine()) @TO@ Assignment@@inputLine=in.readLine() @AT@ 6918 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:getHadoopShims:[] @TO@ MethodInvocation@@ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine()) @AT@ 6918 @LENGTH@ 27
---------------INS SimpleName@@Name:ShimLoader @TO@ MethodInvocation@@ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine()) @AT@ 6918 @LENGTH@ 10
---------------INS SimpleName@@MethodName:unquoteHtmlChars:[in.readLine()] @TO@ MethodInvocation@@ShimLoader.getHadoopShims().unquoteHtmlChars(in.readLine()) @AT@ 6946 @LENGTH@ 31
------------------INS MethodInvocation@@in.readLine() @TO@ SimpleName@@MethodName:unquoteHtmlChars:[in.readLine()] @AT@ 6963 @LENGTH@ 13
---------------------MOV SimpleName@@Name:in @TO@ MethodInvocation@@in.readLine() @AT@ 6860 @LENGTH@ 2
---------------------MOV SimpleName@@MethodName:readLine:[] @TO@ MethodInvocation@@in.readLine() @AT@ 6863 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:queryString.append('=').append(parameterValue) @TO@ MethodInvocation:queryString.append('=').append(urlEncode(parameterValue.toString())) @AT@ 17373 @LENGTH@ 47
---UPD MethodInvocation@@queryString.append('=').append(parameterValue) @TO@ queryString.append('=').append(urlEncode(parameterValue.toString())) @AT@ 17373 @LENGTH@ 46
------UPD SimpleName@@MethodName:append:[parameterValue] @TO@ MethodName:append:[urlEncode(parameterValue.toString())] @AT@ 17397 @LENGTH@ 22
---------INS MethodInvocation@@urlEncode(parameterValue.toString()) @TO@ SimpleName@@MethodName:append:[parameterValue] @AT@ 17404 @LENGTH@ 36
------------INS SimpleName@@MethodName:urlEncode:[parameterValue.toString()] @TO@ MethodInvocation@@urlEncode(parameterValue.toString()) @AT@ 17404 @LENGTH@ 36
---------------INS MethodInvocation@@parameterValue.toString() @TO@ SimpleName@@MethodName:urlEncode:[parameterValue.toString()] @AT@ 17414 @LENGTH@ 25
------------------INS SimpleName@@Name:parameterValue @TO@ MethodInvocation@@parameterValue.toString() @AT@ 17414 @LENGTH@ 14
------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@parameterValue.toString() @AT@ 17429 @LENGTH@ 10
---------DEL SimpleName@@parameterValue @AT@ 17404 @LENGTH@ 14


UPD EnhancedForStatement@@for (String url : createContainers) {  String type=null;  String parent="root";  String name=url;  if (url.contains("://")) {    URI uri=new URI(url);    type=uri.getScheme();    parent=null;    name=uri.getHost();  } else {    type="child";    url="child://root";  }  CreateContainerOptions args=CreateContainerOptionsBuilder.type(type).name(name).parent(parent).number(1).ensembleServer(false).providerUri(url).proxyUri(fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl());  CreateContainerMetadata[] metadatas=fabricService.createContainers(args);  for (  CreateContainerMetadata metadata : metadatas) {    if (metadata.isSuccess()) {      Container child=metadata.getContainer();      child.setProfiles(new Profile[]{profile});      System.out.println("Successfully created container " + metadata.getContainerName());    } else {      System.out.println("Failed to create container " + metadata.getContainerName() + ": "+ metadata.getFailure().getMessage());    }  }} @TO@ for (String url : createContainers) {  String type=null;  String parent=fabricService.getCurrentContainerName();  String name=url;  if (url.contains("://")) {    URI uri=new URI(url);    type=uri.getScheme();    parent=null;    name=uri.getHost();  } else {    type="child";    url="child://" + parent;  }  CreateContainerOptions args=CreateContainerOptionsBuilder.type(type).name(name).parent(parent).number(1).ensembleServer(false).providerUri(url).proxyUri(fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl());  CreateContainerMetadata[] metadatas=fabricService.createContainers(args);  for (  CreateContainerMetadata metadata : metadatas) {    if (metadata.isSuccess()) {      Container child=metadata.getContainer();      child.setProfiles(new Profile[]{profile});      System.out.println("Successfully created container " + metadata.getContainerName());    } else {      System.out.println("Failed to create container " + metadata.getContainerName() + ": "+ metadata.getFailure().getMessage());    }  }} @AT@ 4640 @LENGTH@ 1594
---UPD VariableDeclarationStatement@@String parent="root"; @TO@ String parent=fabricService.getCurrentContainerName(); @AT@ 4731 @LENGTH@ 23
------UPD VariableDeclarationFragment@@parent="root" @TO@ parent=fabricService.getCurrentContainerName() @AT@ 4738 @LENGTH@ 15
---------INS MethodInvocation@@fabricService.getCurrentContainerName() @TO@ VariableDeclarationFragment@@parent="root" @AT@ 4747 @LENGTH@ 39
------------INS SimpleName@@Name:fabricService @TO@ MethodInvocation@@fabricService.getCurrentContainerName() @AT@ 4747 @LENGTH@ 13
------------INS SimpleName@@MethodName:getCurrentContainerName:[] @TO@ MethodInvocation@@fabricService.getCurrentContainerName() @AT@ 4761 @LENGTH@ 25
---------DEL StringLiteral@@"root" @AT@ 4747 @LENGTH@ 6
---UPD IfStatement@@if (url.contains("://")) {  URI uri=new URI(url);  type=uri.getScheme();  parent=null;  name=uri.getHost();} else {  type="child";  url="child://root";} @TO@ if (url.contains("://")) {  URI uri=new URI(url);  type=uri.getScheme();  parent=null;  name=uri.getHost();} else {  type="child";  url="child://" + parent;} @AT@ 4806 @LENGTH@ 312
------UPD Block@@ElseBody:{  type="child";  url="child://root";} @TO@ ElseBody:{  type="child";  url="child://" + parent;} @AT@ 5021 @LENGTH@ 97
---------UPD ExpressionStatement@@Assignment:url="child://root" @TO@ Assignment:url="child://" + parent @AT@ 5079 @LENGTH@ 21
------------UPD Assignment@@url="child://root" @TO@ url="child://" + parent @AT@ 5079 @LENGTH@ 20
---------------DEL StringLiteral@@"child://root" @AT@ 5085 @LENGTH@ 14
---------------INS InfixExpression@@"child://" + parent @TO@ Assignment@@url="child://root" @AT@ 5118 @LENGTH@ 19
------------------INS StringLiteral@@"child://" @TO@ InfixExpression@@"child://" + parent @AT@ 5118 @LENGTH@ 10
------------------INS Operator@@+ @TO@ InfixExpression@@"child://" + parent @AT@ 5128 @LENGTH@ 1
------------------INS SimpleName@@parent @TO@ InfixExpression@@"child://" + parent @AT@ 5131 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @TO@ public, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2162 @LENGTH@ 353
---UPD SimpleName@@MethodName:handle @TO@ MethodName:doHandle @AT@ 2174 @LENGTH@ 6


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") final ServiceController<PathManager> controller=(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME); @TO@ @SuppressWarnings("unchecked") final ServiceController<PathManager> controller=(ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME); @AT@ 3307 @LENGTH@ 199
---UPD VariableDeclarationFragment@@controller=(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ controller=(ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3383 @LENGTH@ 122
------UPD CastExpression@@(ServiceController<PathManager>)context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ (ServiceController<PathManager>)context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3396 @LENGTH@ 109
---------UPD MethodInvocation@@context.getServiceRegistry(true).getService(PathManagerService.SERVICE_NAME) @TO@ context.getServiceRegistry(false).getService(PathManagerService.SERVICE_NAME) @AT@ 3429 @LENGTH@ 76
------------UPD MethodInvocation@@MethodName:getServiceRegistry:[true] @TO@ MethodName:getServiceRegistry:[false] @AT@ 3429 @LENGTH@ 32
---------------UPD BooleanLiteral@@true @TO@ false @AT@ 3456 @LENGTH@ 4


UPD EnhancedForStatement@@for (Entry<ResourceRoot,Index> entry : indexes.entrySet()) {  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(entry.getValue(),classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @TO@ for (Index index : indexes.values()) {  if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {    AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);    cmd=annotator.merge(cmd,repository,classLoader);    DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);  }} @AT@ 6719 @LENGTH@ 373
---UPD SingleVariableDeclaration@@Entry<ResourceRoot,Index> entry @TO@ Index index @AT@ 6724 @LENGTH@ 32
------DEL ParameterizedType@@Entry<ResourceRoot,Index> @AT@ 6724 @LENGTH@ 26
---------DEL SimpleType@@Entry @AT@ 6724 @LENGTH@ 5
---------DEL SimpleType@@ResourceRoot @AT@ 6730 @LENGTH@ 12
---------DEL SimpleType@@Index @AT@ 6744 @LENGTH@ 5
------INS SimpleType@@Index @TO@ SingleVariableDeclaration@@Entry<ResourceRoot,Index> entry @AT@ 6724 @LENGTH@ 5
------UPD SimpleName@@entry @TO@ index @AT@ 6751 @LENGTH@ 5
---UPD MethodInvocation@@indexes.entrySet() @TO@ indexes.values() @AT@ 6759 @LENGTH@ 18
------UPD SimpleName@@MethodName:entrySet:[] @TO@ MethodName:values:[] @AT@ 6767 @LENGTH@ 10
---DEL VariableDeclarationStatement@@AnnotationRepository repository=new JandexAnnotationRepositoryImpl(entry.getValue(),classLoader); @AT@ 6801 @LENGTH@ 100
---INS IfStatement@@if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @TO@ EnhancedForStatement@@for (Entry<ResourceRoot,Index> entry : indexes.entrySet()) {  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(entry.getValue(),classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6870 @LENGTH@ 393
------INS InfixExpression@@index.getKnownClasses() != null && index.getKnownClasses().size() > 0 @TO@ IfStatement@@if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6874 @LENGTH@ 69
---------INS InfixExpression@@index.getKnownClasses() != null @TO@ InfixExpression@@index.getKnownClasses() != null && index.getKnownClasses().size() > 0 @AT@ 6874 @LENGTH@ 31
------------INS MethodInvocation@@index.getKnownClasses() @TO@ InfixExpression@@index.getKnownClasses() != null @AT@ 6874 @LENGTH@ 23
---------------INS SimpleName@@Name:index @TO@ MethodInvocation@@index.getKnownClasses() @AT@ 6874 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getKnownClasses:[] @TO@ MethodInvocation@@index.getKnownClasses() @AT@ 6880 @LENGTH@ 17
------------INS Operator@@!= @TO@ InfixExpression@@index.getKnownClasses() != null @AT@ 6897 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@index.getKnownClasses() != null @AT@ 6901 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@index.getKnownClasses() != null && index.getKnownClasses().size() > 0 @AT@ 6905 @LENGTH@ 2
---------INS InfixExpression@@index.getKnownClasses().size() > 0 @TO@ InfixExpression@@index.getKnownClasses() != null && index.getKnownClasses().size() > 0 @AT@ 6909 @LENGTH@ 34
------------INS MethodInvocation@@index.getKnownClasses().size() @TO@ InfixExpression@@index.getKnownClasses().size() > 0 @AT@ 6909 @LENGTH@ 30
---------------INS MethodInvocation@@MethodName:getKnownClasses:[] @TO@ MethodInvocation@@index.getKnownClasses().size() @AT@ 6909 @LENGTH@ 23
---------------INS SimpleName@@Name:index @TO@ MethodInvocation@@index.getKnownClasses().size() @AT@ 6909 @LENGTH@ 5
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@index.getKnownClasses().size() @AT@ 6933 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@index.getKnownClasses().size() > 0 @AT@ 6939 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@index.getKnownClasses().size() > 0 @AT@ 6942 @LENGTH@ 1
------INS Block@@ThenBody:{  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @TO@ IfStatement@@if (index.getKnownClasses() != null && index.getKnownClasses().size() > 0) {  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6945 @LENGTH@ 318
---------MOV ExpressionStatement@@Assignment:cmd=annotator.merge(cmd,repository,classLoader) @TO@ Block@@ThenBody:{  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6922 @LENGTH@ 52
---------INS VariableDeclarationStatement@@AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader); @TO@ Block@@ThenBody:{  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6971 @LENGTH@ 89
------------MOV SimpleType@@AnnotationRepository @TO@ VariableDeclarationStatement@@AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader); @AT@ 6801 @LENGTH@ 20
------------MOV VariableDeclarationFragment@@repository=new JandexAnnotationRepositoryImpl(entry.getValue(),classLoader) @TO@ VariableDeclarationStatement@@AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader); @AT@ 6822 @LENGTH@ 78
---------------UPD ClassInstanceCreation@@JandexAnnotationRepositoryImpl[entry.getValue(), classLoader] @TO@ JandexAnnotationRepositoryImpl[index, classLoader] @AT@ 6835 @LENGTH@ 65
------------------DEL MethodInvocation@@entry.getValue() @AT@ 6870 @LENGTH@ 16
---------------------DEL SimpleName@@Name:entry @AT@ 6870 @LENGTH@ 5
---------------------DEL SimpleName@@MethodName:getValue:[] @AT@ 6876 @LENGTH@ 10
------------------INS SimpleName@@index @TO@ ClassInstanceCreation@@JandexAnnotationRepositoryImpl[entry.getValue(), classLoader] @AT@ 7040 @LENGTH@ 5
---------MOV ExpressionStatement@@MethodInvocation:DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd) @TO@ Block@@ThenBody:{  AnnotationRepository repository=new JandexAnnotationRepositoryImpl(index,classLoader);  cmd=annotator.merge(cmd,repository,classLoader);  DEPLOYMENT_CONNECTOR_LOGGER.debugf("ParsedRaDeploymentProcessor: CMD=%s",cmd);} @AT@ 6995 @LENGTH@ 79


UPD MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21099 @LENGTH@ 820
---UPD SimpleName@@MethodName:getDeployments @TO@ MethodName:getMatchingDeployments @AT@ 21126 @LENGTH@ 14


DEL MethodDeclaration@@public, abstract, void, MethodName:deploy, final File file, final String deploymentName, DeploymentExecutionException, DeploymentFailureException, IOException,  @AT@ 5847 @LENGTH@ 151
---DEL Modifier@@public @AT@ 5847 @LENGTH@ 6
---DEL Modifier@@abstract @AT@ 5854 @LENGTH@ 8
---DEL PrimitiveType@@void @AT@ 5863 @LENGTH@ 4
---DEL SimpleName@@MethodName:deploy @AT@ 5868 @LENGTH@ 6
---DEL SingleVariableDeclaration@@final File file @AT@ 5875 @LENGTH@ 15
------DEL Modifier@@final @AT@ 5875 @LENGTH@ 5
------DEL SimpleType@@File @AT@ 5881 @LENGTH@ 4
------DEL SimpleName@@file @AT@ 5886 @LENGTH@ 4
---DEL SingleVariableDeclaration@@final String deploymentName @AT@ 5892 @LENGTH@ 27
------DEL Modifier@@final @AT@ 5892 @LENGTH@ 5
------DEL SimpleType@@String @AT@ 5898 @LENGTH@ 6
------DEL SimpleName@@deploymentName @AT@ 5905 @LENGTH@ 14
---DEL SimpleType@@DeploymentExecutionException @AT@ 5928 @LENGTH@ 28
---DEL SimpleType@@DeploymentFailureException @AT@ 5958 @LENGTH@ 26
---DEL SimpleType@@IOException @AT@ 5986 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, int, [PARSE_WELD_WEB_INTEGRATION=0x2B10] @TO@ public, static, final, int, [POST_MODULE_WELD_WEB_INTEGRATION=0x0700] @AT@ 13941 @LENGTH@ 77
---UPD VariableDeclarationFragment@@PARSE_WELD_WEB_INTEGRATION=0x2B10 @TO@ POST_MODULE_WELD_WEB_INTEGRATION=0x0700 @AT@ 13965 @LENGTH@ 52
------UPD SimpleName@@PARSE_WELD_WEB_INTEGRATION @TO@ POST_MODULE_WELD_WEB_INTEGRATION @AT@ 13965 @LENGTH@ 26
------UPD NumberLiteral@@0x2B10 @TO@ 0x0700 @AT@ 14011 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:setValue=true @TO@ Assignment:setBoottime=true @AT@ 20424 @LENGTH@ 16
---UPD Assignment@@setValue=true @TO@ setBoottime=true @AT@ 20424 @LENGTH@ 15
------UPD SimpleName@@setValue @TO@ setBoottime @AT@ 20424 @LENGTH@ 8


UPD FieldDeclaration@@protected, String, [source="." + File.separator + "import"] @TO@ protected, String, [source=System.getProperty("karaf.home") + File.separator + "fabric"+ File.separator+ "import"] @AT@ 1504 @LENGTH@ 58
---UPD VariableDeclarationFragment@@source="." + File.separator + "import" @TO@ source=System.getProperty("karaf.home") + File.separator + "fabric"+ File.separator+ "import" @AT@ 1521 @LENGTH@ 40
------UPD InfixExpression@@"." + File.separator + "import" @TO@ System.getProperty("karaf.home") + File.separator + "fabric"+ File.separator+ "import" @AT@ 1530 @LENGTH@ 31
---------DEL StringLiteral@@"." @AT@ 1530 @LENGTH@ 3
---------INS MethodInvocation@@System.getProperty("karaf.home") @TO@ InfixExpression@@"." + File.separator + "import" @AT@ 1530 @LENGTH@ 32
------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty("karaf.home") @AT@ 1530 @LENGTH@ 6
------------INS SimpleName@@MethodName:getProperty:["karaf.home"] @TO@ MethodInvocation@@System.getProperty("karaf.home") @AT@ 1537 @LENGTH@ 25
---------------INS StringLiteral@@"karaf.home" @TO@ SimpleName@@MethodName:getProperty:["karaf.home"] @AT@ 1549 @LENGTH@ 12
---------INS StringLiteral@@"fabric" @TO@ InfixExpression@@"." + File.separator + "import" @AT@ 1582 @LENGTH@ 8
---------INS QualifiedName@@File.separator @TO@ InfixExpression@@"." + File.separator + "import" @AT@ 1593 @LENGTH@ 14
------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 1593 @LENGTH@ 4
------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 1598 @LENGTH@ 9


UPD IfStatement@@if (sendReply && exchange.getPattern().isOutCapable() && exchange.hasOut()) {  body=exchange.getOut();  cause=null;} @TO@ if (sendReply && exchange.getPattern().isOutCapable()) {  if (exchange.hasOut()) {    body=exchange.getOut();  } else {    body=exchange.getIn();  }  cause=null;} @AT@ 9050 @LENGTH@ 175
---DEL InfixExpression@@sendReply && exchange.getPattern().isOutCapable() && exchange.hasOut() @AT@ 9054 @LENGTH@ 70
------DEL MethodInvocation@@exchange.hasOut() @AT@ 9107 @LENGTH@ 17
---UPD Block@@ThenBody:{  body=exchange.getOut();  cause=null;} @TO@ ThenBody:{  body=exchange.getOut();} @AT@ 9126 @LENGTH@ 99
---INS InfixExpression@@sendReply && exchange.getPattern().isOutCapable() @TO@ IfStatement@@if (sendReply && exchange.getPattern().isOutCapable() && exchange.hasOut()) {  body=exchange.getOut();  cause=null;} @AT@ 9146 @LENGTH@ 49
------MOV SimpleName@@sendReply @TO@ InfixExpression@@sendReply && exchange.getPattern().isOutCapable() @AT@ 9054 @LENGTH@ 9
------MOV Operator@@&& @TO@ InfixExpression@@sendReply && exchange.getPattern().isOutCapable() @AT@ 9063 @LENGTH@ 2
------MOV MethodInvocation@@exchange.getPattern().isOutCapable() @TO@ InfixExpression@@sendReply && exchange.getPattern().isOutCapable() @AT@ 9067 @LENGTH@ 36
---INS Block@@ThenBody:{  if (exchange.hasOut()) {    body=exchange.getOut();  } else {    body=exchange.getIn();  }  cause=null;} @TO@ IfStatement@@if (sendReply && exchange.getPattern().isOutCapable() && exchange.hasOut()) {  body=exchange.getOut();  cause=null;} @AT@ 9197 @LENGTH@ 248
------MOV ExpressionStatement@@Assignment:cause=null @TO@ Block@@ThenBody:{  if (exchange.hasOut()) {    body=exchange.getOut();  } else {    body=exchange.getIn();  }  cause=null;} @AT@ 9194 @LENGTH@ 13
------INS IfStatement@@if (exchange.hasOut()) {  body=exchange.getOut();} else {  body=exchange.getIn();} @TO@ Block@@ThenBody:{  if (exchange.hasOut()) {    body=exchange.getOut();  } else {    body=exchange.getIn();  }  cause=null;} @AT@ 9219 @LENGTH@ 174
---------MOV Block@@ThenBody:{  body=exchange.getOut();  cause=null;} @TO@ IfStatement@@if (exchange.hasOut()) {  body=exchange.getOut();} else {  body=exchange.getIn();} @AT@ 9126 @LENGTH@ 99
---------INS MethodInvocation@@exchange.hasOut() @TO@ IfStatement@@if (exchange.hasOut()) {  body=exchange.getOut();} else {  body=exchange.getIn();} @AT@ 9223 @LENGTH@ 17
------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.hasOut() @AT@ 9107 @LENGTH@ 8
------------MOV SimpleName@@MethodName:hasOut:[] @TO@ MethodInvocation@@exchange.hasOut() @AT@ 9116 @LENGTH@ 8
---------INS Block@@ElseBody:{  body=exchange.getIn();} @TO@ IfStatement@@if (exchange.hasOut()) {  body=exchange.getOut();} else {  body=exchange.getIn();} @AT@ 9321 @LENGTH@ 72
------------INS ExpressionStatement@@Assignment:body=exchange.getIn() @TO@ Block@@ElseBody:{  body=exchange.getIn();} @AT@ 9347 @LENGTH@ 24
---------------INS Assignment@@body=exchange.getIn() @TO@ ExpressionStatement@@Assignment:body=exchange.getIn() @AT@ 9347 @LENGTH@ 23
------------------INS SimpleName@@body @TO@ Assignment@@body=exchange.getIn() @AT@ 9347 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@body=exchange.getIn() @AT@ 9351 @LENGTH@ 1
------------------INS MethodInvocation@@exchange.getIn() @TO@ Assignment@@body=exchange.getIn() @AT@ 9354 @LENGTH@ 16
---------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 9354 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 9363 @LENGTH@ 7


UPD VariableDeclarationStatement@@final ModelNode depNode=deployments.get(uniqueName); @TO@ final ModelNode depNode=deployments.get(deploymentName); @AT@ 74543 @LENGTH@ 54
---UPD VariableDeclarationFragment@@depNode=deployments.get(uniqueName) @TO@ depNode=deployments.get(deploymentName) @AT@ 74559 @LENGTH@ 37
------UPD MethodInvocation@@deployments.get(uniqueName) @TO@ deployments.get(deploymentName) @AT@ 74569 @LENGTH@ 27
---------UPD SimpleName@@MethodName:get:[uniqueName] @TO@ MethodName:get:[deploymentName] @AT@ 74581 @LENGTH@ 15
------------UPD SimpleName@@uniqueName @TO@ deploymentName @AT@ 74585 @LENGTH@ 10


INS MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @TO@ TypeDeclaration@@[public]PropertyValueState, DefaultParsingState @AT@ 2825 @LENGTH@ 60
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2825 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2832 @LENGTH@ 7
---INS SimpleName@@MethodName:lockValueIndex @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2840 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@public, boolean, MethodName:lockValueIndex,  @AT@ 2867 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2874 @LENGTH@ 4


UPD IfStatement@@if (property == null || "".equals(property.trim())) {  throw new IllegalArgumentException("PropertyPath must not null or empty!");} @TO@ if (!StringUtils.hasText(property)) {  throw new IllegalArgumentException("Property must not null or empty!");} @AT@ 5698 @LENGTH@ 138
---DEL InfixExpression@@property == null || "".equals(property.trim()) @AT@ 5702 @LENGTH@ 46
------DEL InfixExpression@@property == null @AT@ 5702 @LENGTH@ 16
---------DEL SimpleName@@property @AT@ 5702 @LENGTH@ 8
---------DEL Operator@@== @AT@ 5710 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 5714 @LENGTH@ 4
------DEL Operator@@|| @AT@ 5718 @LENGTH@ 2
------DEL MethodInvocation@@"".equals(property.trim()) @AT@ 5722 @LENGTH@ 26
---------DEL StringLiteral@@"" @AT@ 5722 @LENGTH@ 2
---UPD Block@@ThenBody:{  throw new IllegalArgumentException("PropertyPath must not null or empty!");} @TO@ ThenBody:{  throw new IllegalArgumentException("Property must not null or empty!");} @AT@ 5750 @LENGTH@ 86
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("PropertyPath must not null or empty!") @TO@ ClassInstanceCreation:new IllegalArgumentException("Property must not null or empty!") @AT@ 5756 @LENGTH@ 75
---------UPD ClassInstanceCreation@@IllegalArgumentException["PropertyPath must not null or empty!"] @TO@ IllegalArgumentException["Property must not null or empty!"] @AT@ 5762 @LENGTH@ 68
------------UPD StringLiteral@@"PropertyPath must not null or empty!" @TO@ "Property must not null or empty!" @AT@ 5791 @LENGTH@ 38
---INS PrefixExpression@@!StringUtils.hasText(property) @TO@ IfStatement@@if (property == null || "".equals(property.trim())) {  throw new IllegalArgumentException("PropertyPath must not null or empty!");} @AT@ 5860 @LENGTH@ 30
------INS Operator@@! @TO@ PrefixExpression@@!StringUtils.hasText(property) @AT@ 5860 @LENGTH@ 1
------INS MethodInvocation@@StringUtils.hasText(property) @TO@ PrefixExpression@@!StringUtils.hasText(property) @AT@ 5861 @LENGTH@ 29
---------MOV SimpleName@@MethodName:equals:[property.trim()] @TO@ MethodInvocation@@StringUtils.hasText(property) @AT@ 5725 @LENGTH@ 23
------------DEL MethodInvocation@@property.trim() @AT@ 5732 @LENGTH@ 15
---------------DEL SimpleName@@Name:property @AT@ 5732 @LENGTH@ 8
---------------DEL SimpleName@@MethodName:trim:[] @AT@ 5741 @LENGTH@ 6
------------INS SimpleName@@property @TO@ SimpleName@@MethodName:equals:[property.trim()] @AT@ 5881 @LENGTH@ 8
---------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.hasText(property) @AT@ 5861 @LENGTH@ 11


INS FieldDeclaration@@String, [id] @TO@ TypeDeclaration@@Address,  @AT@ 3820 @LENGTH@ 10
---INS SimpleType@@String @TO@ FieldDeclaration@@String, [id] @AT@ 3820 @LENGTH@ 6
---INS VariableDeclarationFragment@@id @TO@ FieldDeclaration@@String, [id] @AT@ 3827 @LENGTH@ 2
------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id @AT@ 3827 @LENGTH@ 2


UPD IfStatement@@if (indexDirectory != null) {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true));} else {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true));} @TO@ if (indexDirectory != null) {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory)));} else {  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory"))));} @AT@ 1886 @LENGTH@ 284
---UPD Block@@ThenBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true));} @TO@ ThenBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory)));} @AT@ 1914 @LENGTH@ 118
------UPD ExpressionStatement@@Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true)) @TO@ Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory))) @AT@ 1928 @LENGTH@ 94
---------UPD Assignment@@indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory),true)) @TO@ indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(indexDirectory))) @AT@ 1928 @LENGTH@ 93
------------UPD ClassInstanceCreation@@IndexSearcher[IndexReader.open(new NIOFSDirectory(indexDirectory),true)] @TO@ IndexSearcher[IndexReader.open(new NIOFSDirectory(indexDirectory))] @AT@ 1944 @LENGTH@ 77
---------------UPD MethodInvocation@@IndexReader.open(new NIOFSDirectory(indexDirectory),true) @TO@ IndexReader.open(new NIOFSDirectory(indexDirectory)) @AT@ 1962 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:open:[new NIOFSDirectory(indexDirectory), true] @TO@ MethodName:open:[new NIOFSDirectory(indexDirectory)] @AT@ 1974 @LENGTH@ 46
---------------------DEL BooleanLiteral@@true @AT@ 2015 @LENGTH@ 4
---UPD Block@@ElseBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true));} @TO@ ElseBody:{  indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory"))));} @AT@ 2038 @LENGTH@ 132
------UPD ExpressionStatement@@Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)) @TO@ Assignment:indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")))) @AT@ 2052 @LENGTH@ 108
---------UPD Assignment@@indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)) @TO@ indexSearcher=new IndexSearcher(IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")))) @AT@ 2052 @LENGTH@ 107
------------UPD ClassInstanceCreation@@IndexSearcher[IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true)] @TO@ IndexSearcher[IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")))] @AT@ 2068 @LENGTH@ 91
---------------UPD MethodInvocation@@IndexReader.open(new NIOFSDirectory(new File("./indexDirectory")),true) @TO@ IndexReader.open(new NIOFSDirectory(new File("./indexDirectory"))) @AT@ 2086 @LENGTH@ 72
------------------UPD SimpleName@@MethodName:open:[new NIOFSDirectory(new File("./indexDirectory")), true] @TO@ MethodName:open:[new NIOFSDirectory(new File("./indexDirectory"))] @AT@ 2098 @LENGTH@ 60
---------------------DEL BooleanLiteral@@true @AT@ 2153 @LENGTH@ 4


DEL MethodDeclaration@@public, TypeInformation<?>, MethodName:getComponentType,  @AT@ 3653 @LENGTH@ 160
---DEL Modifier@@public @AT@ 3653 @LENGTH@ 6
---DEL ParameterizedType@@TypeInformation<?> @AT@ 3660 @LENGTH@ 18
------DEL SimpleType@@TypeInformation @AT@ 3660 @LENGTH@ 15
------DEL WildcardType@@? @AT@ 3676 @LENGTH@ 1
---DEL SimpleName@@MethodName:getComponentType @AT@ 3679 @LENGTH@ 16
---DEL IfStatement@@if (type.isArray()) {  return createInfo(resolveArrayType(type));} @AT@ 3703 @LENGTH@ 71
------DEL MethodInvocation@@type.isArray() @AT@ 3707 @LENGTH@ 14
---------DEL SimpleName@@Name:type @AT@ 3707 @LENGTH@ 4
---------DEL SimpleName@@MethodName:isArray:[] @AT@ 3712 @LENGTH@ 9
------DEL Block@@ThenBody:{  return createInfo(resolveArrayType(type));} @AT@ 3723 @LENGTH@ 51
---------DEL ReturnStatement@@MethodInvocation:createInfo(resolveArrayType(type)) @AT@ 3728 @LENGTH@ 42
------------DEL MethodInvocation@@createInfo(resolveArrayType(type)) @AT@ 3735 @LENGTH@ 34
---------------DEL SimpleName@@MethodName:createInfo:[resolveArrayType(type)] @AT@ 3735 @LENGTH@ 34
------------------DEL MethodInvocation@@resolveArrayType(type) @AT@ 3746 @LENGTH@ 22
---------------------DEL SimpleName@@MethodName:resolveArrayType:[type] @AT@ 3746 @LENGTH@ 22
------------------------DEL SimpleName@@type @AT@ 3763 @LENGTH@ 4
---DEL ReturnStatement@@SuperMethodInvocation:super.getComponentType() @AT@ 3778 @LENGTH@ 32
------DEL SuperMethodInvocation@@super.getComponentType() @AT@ 3785 @LENGTH@ 24
---------DEL SimpleName@@MethodName:getComponentType:[] @AT@ 3791 @LENGTH@ 16


UPD EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @TO@ for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  domainOperationContext.recordHostRequest(host,finalResult);  finalResults.put(host,finalResult);} @AT@ 3845 @LENGTH@ 1004
---INS ExpressionStatement@@MethodInvocation:domainOperationContext.recordHostRequest(host,finalResult) @TO@ EnhancedForStatement@@for (Map.Entry<String,ProxyController> entry : hostProxies.entrySet()) {  final String host=entry.getKey();  final TransformingProxyController proxyController=(TransformingProxyController)entry.getValue();  List<DomainOperationTransformer> transformers=context.getAttachment(OperationAttachments.SLAVE_SERVER_OPERATION_TRANSFORMERS);  ModelNode op=operation;  if (transformers != null) {    for (    final DomainOperationTransformer transformer : transformers) {      op=transformer.transform(context,op);    }  }  final HostControllerUpdateTask task=new HostControllerUpdateTask(host,op.clone(),context,proxyController);  final HostControllerUpdateTask.ExecutedHostRequest finalResult=task.execute(listener);  finalResults.put(host,finalResult);} @AT@ 4803 @LENGTH@ 60
------INS MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @TO@ ExpressionStatement@@MethodInvocation:domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4803 @LENGTH@ 59
---------INS SimpleName@@Name:domainOperationContext @TO@ MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4803 @LENGTH@ 22
---------INS SimpleName@@MethodName:recordHostRequest:[host, finalResult] @TO@ MethodInvocation@@domainOperationContext.recordHostRequest(host,finalResult) @AT@ 4826 @LENGTH@ 36
------------INS SimpleName@@host @TO@ SimpleName@@MethodName:recordHostRequest:[host, finalResult] @AT@ 4844 @LENGTH@ 4
------------INS SimpleName@@finalResult @TO@ SimpleName@@MethodName:recordHostRequest:[host, finalResult] @AT@ 4850 @LENGTH@ 11


DEL ExpressionStatement@@Assignment:predicates=FunctorUtils.copy(predicates) @AT@ 2500 @LENGTH@ 43
---DEL Assignment@@predicates=FunctorUtils.copy(predicates) @AT@ 2500 @LENGTH@ 42
------DEL SimpleName@@predicates @AT@ 2500 @LENGTH@ 10
------DEL Operator@@= @AT@ 2510 @LENGTH@ 1


UPD IfStatement@@if (container != null) {  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ if (container != null) {  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  if (legacyServices != null) {    for (    KernelServices legacyService : legacyServices.values()) {      legacyService.shutdown();    }  }} @AT@ 15260 @LENGTH@ 410
---UPD Block@@ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  if (legacyServices != null) {    for (    KernelServices legacyService : legacyServices.values()) {      legacyService.shutdown();    }  }} @AT@ 15283 @LENGTH@ 387
------INS IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ Block@@ThenBody:{  container.shutdown();  try {    container.awaitTermination(5,TimeUnit.SECONDS);  } catch (  InterruptedException e) {    e.printStackTrace();  }  container=null;  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15543 @LENGTH@ 185
---------INS InfixExpression@@legacyServices != null @TO@ IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15547 @LENGTH@ 22
------------INS SimpleName@@legacyServices @TO@ InfixExpression@@legacyServices != null @AT@ 15547 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@legacyServices != null @AT@ 15561 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@legacyServices != null @AT@ 15565 @LENGTH@ 4
---------INS Block@@ThenBody:{  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @TO@ IfStatement@@if (legacyServices != null) {  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15571 @LENGTH@ 157
------------MOV EnhancedForStatement@@for (KernelServices legacyService : legacyServices.values()) {  legacyService.shutdown();} @TO@ Block@@ThenBody:{  for (  KernelServices legacyService : legacyServices.values()) {    legacyService.shutdown();  }} @AT@ 15543 @LENGTH@ 117


INS IfStatement@@if (session != null) {  ShellUtils.storeFabricCredentials(session,newUser,newUserPassword);} @TO@ MethodDeclaration@@protected, Object, MethodName:doExecute, Exception,  @AT@ 7157 @LENGTH@ 114
---INS InfixExpression@@session != null @TO@ IfStatement@@if (session != null) {  ShellUtils.storeFabricCredentials(session,newUser,newUserPassword);} @AT@ 7161 @LENGTH@ 15
------INS SimpleName@@session @TO@ InfixExpression@@session != null @AT@ 7161 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@session != null @AT@ 7168 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@session != null @AT@ 7172 @LENGTH@ 4
---INS Block@@ThenBody:{  ShellUtils.storeFabricCredentials(session,newUser,newUserPassword);} @TO@ IfStatement@@if (session != null) {  ShellUtils.storeFabricCredentials(session,newUser,newUserPassword);} @AT@ 7178 @LENGTH@ 93
------MOV ExpressionStatement@@MethodInvocation:ShellUtils.storeFabricCredentials(session,newUser,newUserPassword) @TO@ Block@@ThenBody:{  ShellUtils.storeFabricCredentials(session,newUser,newUserPassword);} @AT@ 7099 @LENGTH@ 69


UPD FieldDeclaration@@private, final, List<String>, [data=new ArrayList<String>()] @TO@ private, final, List<String>, [data=new Vector<String>()] @AT@ 2842 @LENGTH@ 58
---UPD VariableDeclarationFragment@@data=new ArrayList<String>() @TO@ data=new Vector<String>() @AT@ 2869 @LENGTH@ 30
------UPD ClassInstanceCreation@@ArrayList<String>[] @TO@ Vector<String>[] @AT@ 2876 @LENGTH@ 23
---------UPD ParameterizedType@@ArrayList<String> @TO@ Vector<String> @AT@ 2880 @LENGTH@ 17
------------UPD SimpleType@@ArrayList @TO@ Vector @AT@ 2880 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:result=transformer.transformOperation(context,address,step) @TO@ Assignment:result=transformer.transformOperation(context,stepAddress,step) @AT@ 2977 @LENGTH@ 64
---UPD Assignment@@result=transformer.transformOperation(context,address,step) @TO@ result=transformer.transformOperation(context,stepAddress,step) @AT@ 2977 @LENGTH@ 63
------UPD MethodInvocation@@transformer.transformOperation(context,address,step) @TO@ transformer.transformOperation(context,stepAddress,step) @AT@ 2986 @LENGTH@ 54
---------UPD SimpleName@@MethodName:transformOperation:[context, address, step] @TO@ MethodName:transformOperation:[context, stepAddress, step] @AT@ 2998 @LENGTH@ 42
------------UPD SimpleName@@address @TO@ stepAddress @AT@ 3026 @LENGTH@ 7


UPD MethodDeclaration@@public, static, List<String>, MethodName:getAllReferencingServerGroups, String deploymentName, ModelControllerClient client, CommandLineException,  @TO@ public, static, List<String>, MethodName:getServerGroupsReferencingDeployment, String deploymentName, ModelControllerClient client, CommandLineException,  @AT@ 16770 @LENGTH@ 1694
---UPD SimpleName@@MethodName:getAllReferencingServerGroups @TO@ MethodName:getServerGroupsReferencingDeployment @AT@ 16797 @LENGTH@ 29


INS MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 36771 @LENGTH@ 692
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36771 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36778 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36785 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36785 @LENGTH@ 4
---INS SimpleName@@MethodName:readBytes @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36792 @LENGTH@ 9
---INS SingleVariableDeclaration@@File f @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36802 @LENGTH@ 6
------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File f @AT@ 36802 @LENGTH@ 4
------INS SimpleName@@f @TO@ SingleVariableDeclaration@@File f @AT@ 36807 @LENGTH@ 1
---INS SimpleType@@OperationFormatException @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36817 @LENGTH@ 24
---INS VariableDeclarationStatement@@byte[] bytes; @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36852 @LENGTH@ 13
------INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] bytes; @AT@ 36852 @LENGTH@ 6
---------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36852 @LENGTH@ 4
------INS VariableDeclarationFragment@@bytes @TO@ VariableDeclarationStatement@@byte[] bytes; @AT@ 36859 @LENGTH@ 5
---------INS SimpleName@@bytes @TO@ VariableDeclarationFragment@@bytes @AT@ 36859 @LENGTH@ 5
---INS VariableDeclarationStatement@@FileInputStream is=null; @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36874 @LENGTH@ 26
------INS SimpleType@@FileInputStream @TO@ VariableDeclarationStatement@@FileInputStream is=null; @AT@ 36874 @LENGTH@ 15
------INS VariableDeclarationFragment@@is=null @TO@ VariableDeclarationStatement@@FileInputStream is=null; @AT@ 36890 @LENGTH@ 9
---------INS SimpleName@@is @TO@ VariableDeclarationFragment@@is=null @AT@ 36890 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@is=null @AT@ 36895 @LENGTH@ 4
---INS TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 36909 @LENGTH@ 526
------INS ExpressionStatement@@Assignment:is=new FileInputStream(f) @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 36927 @LENGTH@ 28
---------INS Assignment@@is=new FileInputStream(f) @TO@ ExpressionStatement@@Assignment:is=new FileInputStream(f) @AT@ 36927 @LENGTH@ 27
------------INS SimpleName@@is @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36927 @LENGTH@ 2
------------INS Operator@@= @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36929 @LENGTH@ 1
------------INS ClassInstanceCreation@@FileInputStream[f] @TO@ Assignment@@is=new FileInputStream(f) @AT@ 36932 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36932 @LENGTH@ 3
---------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36936 @LENGTH@ 15
---------------INS SimpleName@@f @TO@ ClassInstanceCreation@@FileInputStream[f] @AT@ 36952 @LENGTH@ 1
------INS ExpressionStatement@@Assignment:bytes=new byte[(int)f.length()] @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 36968 @LENGTH@ 35
---------INS Assignment@@bytes=new byte[(int)f.length()] @TO@ ExpressionStatement@@Assignment:bytes=new byte[(int)f.length()] @AT@ 36968 @LENGTH@ 34
------------INS SimpleName@@bytes @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36968 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36973 @LENGTH@ 1
------------INS ArrayCreation@@new byte[(int)f.length()] @TO@ Assignment@@bytes=new byte[(int)f.length()] @AT@ 36976 @LENGTH@ 26
---------------INS ArrayType@@byte[] @TO@ ArrayCreation@@new byte[(int)f.length()] @AT@ 36980 @LENGTH@ 22
------------------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 36980 @LENGTH@ 4
---------------INS CastExpression@@(int)f.length() @TO@ ArrayCreation@@new byte[(int)f.length()] @AT@ 36985 @LENGTH@ 16
------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)f.length() @AT@ 36986 @LENGTH@ 3
------------------INS MethodInvocation@@f.length() @TO@ CastExpression@@(int)f.length() @AT@ 36991 @LENGTH@ 10
---------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.length() @AT@ 36991 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@f.length() @AT@ 36993 @LENGTH@ 8
------INS VariableDeclarationStatement@@int read=is.read(bytes); @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37016 @LENGTH@ 26
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int read=is.read(bytes); @AT@ 37016 @LENGTH@ 3
---------INS VariableDeclarationFragment@@read=is.read(bytes) @TO@ VariableDeclarationStatement@@int read=is.read(bytes); @AT@ 37020 @LENGTH@ 21
------------INS SimpleName@@read @TO@ VariableDeclarationFragment@@read=is.read(bytes) @AT@ 37020 @LENGTH@ 4
------------INS MethodInvocation@@is.read(bytes) @TO@ VariableDeclarationFragment@@read=is.read(bytes) @AT@ 37027 @LENGTH@ 14
---------------INS SimpleName@@Name:is @TO@ MethodInvocation@@is.read(bytes) @AT@ 37027 @LENGTH@ 2
---------------INS SimpleName@@MethodName:read:[bytes] @TO@ MethodInvocation@@is.read(bytes) @AT@ 37030 @LENGTH@ 11
------------------INS SimpleName@@bytes @TO@ SimpleName@@MethodName:read:[bytes] @AT@ 37035 @LENGTH@ 5
------INS IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37055 @LENGTH@ 182
---------INS InfixExpression@@read != bytes.length @TO@ IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37058 @LENGTH@ 20
------------INS SimpleName@@read @TO@ InfixExpression@@read != bytes.length @AT@ 37058 @LENGTH@ 4
------------INS Operator@@!= @TO@ InfixExpression@@read != bytes.length @AT@ 37062 @LENGTH@ 2
------------INS QualifiedName@@bytes.length @TO@ InfixExpression@@read != bytes.length @AT@ 37066 @LENGTH@ 12
---------------INS SimpleName@@bytes @TO@ QualifiedName@@bytes.length @AT@ 37066 @LENGTH@ 5
---------------INS SimpleName@@length @TO@ QualifiedName@@bytes.length @AT@ 37072 @LENGTH@ 6
---------INS Block@@ThenBody:{  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @TO@ IfStatement@@if (read != bytes.length) {  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37080 @LENGTH@ 157
------------INS ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()) @TO@ Block@@ThenBody:{  throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());} @AT@ 37098 @LENGTH@ 125
---------------INS ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()) @AT@ 37104 @LENGTH@ 118
------------------INS New@@new @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37104 @LENGTH@ 3
------------------INS SimpleType@@OperationFormatException @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37108 @LENGTH@ 24
------------------INS InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length()] @AT@ 37133 @LENGTH@ 88
---------------------INS StringLiteral@@"Failed to read bytes from " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37133 @LENGTH@ 28
---------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37161 @LENGTH@ 1
---------------------INS MethodInvocation@@f.getAbsolutePath() @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37164 @LENGTH@ 19
------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37164 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37166 @LENGTH@ 17
---------------------INS StringLiteral@@": " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37186 @LENGTH@ 4
---------------------INS SimpleName@@read @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37193 @LENGTH@ 4
---------------------INS StringLiteral@@" from " @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37200 @LENGTH@ 8
---------------------INS MethodInvocation@@f.length() @TO@ InfixExpression@@"Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length() @AT@ 37211 @LENGTH@ 10
------------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.length() @AT@ 37211 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@f.length() @AT@ 37213 @LENGTH@ 8
------INS CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37248 @LENGTH@ 128
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @AT@ 37255 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 37255 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 37265 @LENGTH@ 1
---------INS ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e) @TO@ CatchClause@@catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} @AT@ 37282 @LENGTH@ 84
------------INS ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @TO@ ThrowStatement@@ClassInstanceCreation:new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e) @AT@ 37288 @LENGTH@ 77
---------------INS New@@new @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37288 @LENGTH@ 3
---------------INS SimpleType@@OperationFormatException @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37292 @LENGTH@ 24
---------------INS InfixExpression@@"Failed to read file " + f.getAbsolutePath() @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37317 @LENGTH@ 44
------------------INS StringLiteral@@"Failed to read file " @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37317 @LENGTH@ 22
------------------INS Operator@@+ @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37339 @LENGTH@ 1
------------------INS MethodInvocation@@f.getAbsolutePath() @TO@ InfixExpression@@"Failed to read file " + f.getAbsolutePath() @AT@ 37342 @LENGTH@ 19
---------------------INS SimpleName@@Name:f @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37342 @LENGTH@ 1
---------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@f.getAbsolutePath() @AT@ 37344 @LENGTH@ 17
---------------INS SimpleName@@e @TO@ ClassInstanceCreation@@OperationFormatException["Failed to read file " + f.getAbsolutePath(), e] @AT@ 37363 @LENGTH@ 1
------INS Block@@FinallyBody:{  StreamUtils.safeClose(is);} @TO@ TryStatement@@try {  is=new FileInputStream(f);  bytes=new byte[(int)f.length()];  int read=is.read(bytes);  if (read != bytes.length) {    throw new OperationFormatException("Failed to read bytes from " + f.getAbsolutePath() + ": "+ read+ " from "+ f.length());  }} catch (Exception e) {  throw new OperationFormatException("Failed to read file " + f.getAbsolutePath(),e);} finally {  StreamUtils.safeClose(is);} @AT@ 37385 @LENGTH@ 50
---------INS ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(is) @TO@ Block@@FinallyBody:{  StreamUtils.safeClose(is);} @AT@ 37399 @LENGTH@ 26
------------INS MethodInvocation@@StreamUtils.safeClose(is) @TO@ ExpressionStatement@@MethodInvocation:StreamUtils.safeClose(is) @AT@ 37399 @LENGTH@ 25
---------------INS SimpleName@@Name:StreamUtils @TO@ MethodInvocation@@StreamUtils.safeClose(is) @AT@ 37399 @LENGTH@ 11
---------------INS SimpleName@@MethodName:safeClose:[is] @TO@ MethodInvocation@@StreamUtils.safeClose(is) @AT@ 37411 @LENGTH@ 13
------------------INS SimpleName@@is @TO@ SimpleName@@MethodName:safeClose:[is] @AT@ 37421 @LENGTH@ 2
---INS ReturnStatement@@SimpleName:bytes @TO@ MethodDeclaration@@public, static, byte[], MethodName:readBytes, File f, OperationFormatException,  @AT@ 37444 @LENGTH@ 13
------INS SimpleName@@bytes @TO@ ReturnStatement@@SimpleName:bytes @AT@ 37451 @LENGTH@ 5


UPD FieldDeclaration@@int, [counter=0] @TO@ int, [counter] @AT@ 2238 @LENGTH@ 16
---UPD VariableDeclarationFragment@@counter=0 @TO@ counter @AT@ 2242 @LENGTH@ 11
------DEL NumberLiteral@@0 @AT@ 2252 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:context.completeStep() @TO@ MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 6212 @LENGTH@ 23
---UPD MethodInvocation@@context.completeStep() @TO@ context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 6212 @LENGTH@ 22
------UPD SimpleName@@MethodName:completeStep:[] @TO@ MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 6220 @LENGTH@ 14
---------INS QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @TO@ SimpleName@@MethodName:completeStep:[] @AT@ 6233 @LENGTH@ 54
------------INS QualifiedName@@OperationContext.RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 6233 @LENGTH@ 32
---------------INS SimpleName@@OperationContext @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 6233 @LENGTH@ 16
---------------INS SimpleName@@RollbackHandler @TO@ QualifiedName@@OperationContext.RollbackHandler @AT@ 6250 @LENGTH@ 15
------------INS SimpleName@@NOOP_ROLLBACK_HANDLER @TO@ QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 6266 @LENGTH@ 21


INS IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @TO@ MethodDeclaration@@public, ModelNode, MethodName:getModelDescription, Locale locale,  @AT@ 8246 @LENGTH@ 266
---INS PrefixExpression@@!reply.asList().isEmpty() @TO@ IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 8250 @LENGTH@ 25
------INS Operator@@! @TO@ PrefixExpression@@!reply.asList().isEmpty() @AT@ 8250 @LENGTH@ 1
------INS MethodInvocation@@reply.asList().isEmpty() @TO@ PrefixExpression@@!reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 24
---------INS MethodInvocation@@MethodName:asList:[] @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 14
---------INS SimpleName@@Name:reply @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8251 @LENGTH@ 5
---------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@reply.asList().isEmpty() @AT@ 8266 @LENGTH@ 9
---INS Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @TO@ IfStatement@@if (!reply.asList().isEmpty()) {  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 8277 @LENGTH@ 235
------MOV VariableDeclarationStatement@@final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle); @TO@ Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 6498 @LENGTH@ 105
------MOV IfStatement@@if (replyDesc != null) {  reply.get(DESCRIPTION).set(replyDesc);} @TO@ Block@@ThenBody:{  final String replyDesc=descriptionResolver.getOperationReplyDescription(operationName,locale,bundle);  if (replyDesc != null) {    reply.get(DESCRIPTION).set(replyDesc);  }} @AT@ 6612 @LENGTH@ 85


INS ExpressionStatement@@MethodInvocation:response.setStatus(HttpStatus.BAD_REQUEST) @TO@ MethodDeclaration@@public, void, MethodName:testRetrieveTokenFailsWhenTokenEndpointNotAvailable,  @AT@ 3061 @LENGTH@ 43
---INS MethodInvocation@@response.setStatus(HttpStatus.BAD_REQUEST) @TO@ ExpressionStatement@@MethodInvocation:response.setStatus(HttpStatus.BAD_REQUEST) @AT@ 3061 @LENGTH@ 42
------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.setStatus(HttpStatus.BAD_REQUEST) @AT@ 3061 @LENGTH@ 8
------INS SimpleName@@MethodName:setStatus:[HttpStatus.BAD_REQUEST] @TO@ MethodInvocation@@response.setStatus(HttpStatus.BAD_REQUEST) @AT@ 3070 @LENGTH@ 33
---------INS QualifiedName@@HttpStatus.BAD_REQUEST @TO@ SimpleName@@MethodName:setStatus:[HttpStatus.BAD_REQUEST] @AT@ 3080 @LENGTH@ 22
------------INS SimpleName@@HttpStatus @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3080 @LENGTH@ 10
------------INS SimpleName@@BAD_REQUEST @TO@ QualifiedName@@HttpStatus.BAD_REQUEST @AT@ 3091 @LENGTH@ 11


UPD IfStatement@@if (fieldType.equals(DATE)) {  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  dateTimeFormatBuilder.addStringAttribute("style","M-");  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @TO@ if (fieldType.equals(DATE) || fieldType.equals(TIMESTAMP)) {  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  if (fieldType.equals(DATE)) {    dateTimeFormatBuilder.addStringAttribute("style","M-");  } else {    dateTimeFormatBuilder.addStringAttribute("style","MM");  }  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @AT@ 33269 @LENGTH@ 764
---UPD Block@@ThenBody:{  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  dateTimeFormatBuilder.addStringAttribute("style","M-");  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @TO@ ThenBody:{  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  if (fieldType.equals(DATE)) {    dateTimeFormatBuilder.addStringAttribute("style","M-");  } else {    dateTimeFormatBuilder.addStringAttribute("style","MM");  }  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @AT@ 33297 @LENGTH@ 736
------INS IfStatement@@if (fieldType.equals(DATE)) {  dateTimeFormatBuilder.addStringAttribute("style","M-");} else {  dateTimeFormatBuilder.addStringAttribute("style","MM");} @TO@ Block@@ThenBody:{  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  dateTimeFormatBuilder.addStringAttribute("style","M-");  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @AT@ 33866 @LENGTH@ 222
---------MOV MethodInvocation@@fieldType.equals(DATE) @TO@ IfStatement@@if (fieldType.equals(DATE)) {  dateTimeFormatBuilder.addStringAttribute("style","M-");} else {  dateTimeFormatBuilder.addStringAttribute("style","MM");} @AT@ 33273 @LENGTH@ 22
---------INS Block@@ThenBody:{  dateTimeFormatBuilder.addStringAttribute("style","M-");} @TO@ IfStatement@@if (fieldType.equals(DATE)) {  dateTimeFormatBuilder.addStringAttribute("style","M-");} else {  dateTimeFormatBuilder.addStringAttribute("style","MM");} @AT@ 33894 @LENGTH@ 88
------------MOV ExpressionStatement@@MethodInvocation:dateTimeFormatBuilder.addStringAttribute("style","M-") @TO@ Block@@ThenBody:{  dateTimeFormatBuilder.addStringAttribute("style","M-");} @AT@ 33768 @LENGTH@ 56
---------INS Block@@ElseBody:{  dateTimeFormatBuilder.addStringAttribute("style","MM");} @TO@ IfStatement@@if (fieldType.equals(DATE)) {  dateTimeFormatBuilder.addStringAttribute("style","M-");} else {  dateTimeFormatBuilder.addStringAttribute("style","MM");} @AT@ 34000 @LENGTH@ 88
------------INS ExpressionStatement@@MethodInvocation:dateTimeFormatBuilder.addStringAttribute("style","MM") @TO@ Block@@ElseBody:{  dateTimeFormatBuilder.addStringAttribute("style","MM");} @AT@ 34018 @LENGTH@ 56
---------------INS MethodInvocation@@dateTimeFormatBuilder.addStringAttribute("style","MM") @TO@ ExpressionStatement@@MethodInvocation:dateTimeFormatBuilder.addStringAttribute("style","MM") @AT@ 34018 @LENGTH@ 55
------------------INS SimpleName@@Name:dateTimeFormatBuilder @TO@ MethodInvocation@@dateTimeFormatBuilder.addStringAttribute("style","MM") @AT@ 34018 @LENGTH@ 21
------------------INS SimpleName@@MethodName:addStringAttribute:["style", "MM"] @TO@ MethodInvocation@@dateTimeFormatBuilder.addStringAttribute("style","MM") @AT@ 34040 @LENGTH@ 33
---------------------INS StringLiteral@@"style" @TO@ SimpleName@@MethodName:addStringAttribute:["style", "MM"] @AT@ 34059 @LENGTH@ 7
---------------------INS StringLiteral@@"MM" @TO@ SimpleName@@MethodName:addStringAttribute:["style", "MM"] @AT@ 34068 @LENGTH@ 4
---INS InfixExpression@@fieldType.equals(DATE) || fieldType.equals(TIMESTAMP) @TO@ IfStatement@@if (fieldType.equals(DATE)) {  final AnnotationMetadataBuilder temporalBuilder=new AnnotationMetadataBuilder(TEMPORAL);  temporalBuilder.addEnumAttribute(VALUE,new EnumDetails(TEMPORAL_TYPE,new JavaSymbolName(column.getJdbcType())));  annotations.add(temporalBuilder);  final AnnotationMetadataBuilder dateTimeFormatBuilder=new AnnotationMetadataBuilder(DATE_TIME_FORMAT);  dateTimeFormatBuilder.addStringAttribute("style","M-");  if (fieldName.getSymbolName().equals(CREATED)) {    columnBuilder.addBooleanAttribute("updatable",false);  }  annotations.add(dateTimeFormatBuilder);} @AT@ 33340 @LENGTH@ 53
------INS MethodInvocation@@fieldType.equals(DATE) @TO@ InfixExpression@@fieldType.equals(DATE) || fieldType.equals(TIMESTAMP) @AT@ 33340 @LENGTH@ 22
---------INS SimpleName@@Name:fieldType @TO@ MethodInvocation@@fieldType.equals(DATE) @AT@ 33340 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[DATE] @TO@ MethodInvocation@@fieldType.equals(DATE) @AT@ 33350 @LENGTH@ 12
------------INS SimpleName@@DATE @TO@ SimpleName@@MethodName:equals:[DATE] @AT@ 33357 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@fieldType.equals(DATE) || fieldType.equals(TIMESTAMP) @AT@ 33362 @LENGTH@ 2
------INS MethodInvocation@@fieldType.equals(TIMESTAMP) @TO@ InfixExpression@@fieldType.equals(DATE) || fieldType.equals(TIMESTAMP) @AT@ 33366 @LENGTH@ 27
---------INS SimpleName@@Name:fieldType @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 33366 @LENGTH@ 9
---------INS SimpleName@@MethodName:equals:[TIMESTAMP] @TO@ MethodInvocation@@fieldType.equals(TIMESTAMP) @AT@ 33376 @LENGTH@ 17
------------INS SimpleName@@TIMESTAMP @TO@ SimpleName@@MethodName:equals:[TIMESTAMP] @AT@ 33383 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:bundleContext.getBundle().getEntry(uri) @TO@ MethodInvocation:bundleContext.getBundle().getResource(uri) @AT@ 2682 @LENGTH@ 47
---UPD MethodInvocation@@bundleContext.getBundle().getEntry(uri) @TO@ bundleContext.getBundle().getResource(uri) @AT@ 2689 @LENGTH@ 39
------UPD SimpleName@@MethodName:getEntry:[uri] @TO@ MethodName:getResource:[uri] @AT@ 2715 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:mock.setResultWaitTime(3000) @TO@ MethodInvocation:mock.setResultWaitTime(4000) @AT@ 1957 @LENGTH@ 29
---UPD MethodInvocation@@mock.setResultWaitTime(3000) @TO@ mock.setResultWaitTime(4000) @AT@ 1957 @LENGTH@ 28
------UPD SimpleName@@MethodName:setResultWaitTime:[3000] @TO@ MethodName:setResultWaitTime:[4000] @AT@ 1962 @LENGTH@ 23
---------UPD NumberLiteral@@3000 @TO@ 4000 @AT@ 1980 @LENGTH@ 4


MOV FieldDeclaration@@Endpoint, [a] @TO@ TypeDeclaration@@[@ContextName("contextA"), public]RoutesContextA, RouteBuilder @AT@ 1528 @LENGTH@ 11


UPD MethodDeclaration@@public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21761 @LENGTH@ 828
---UPD SimpleName@@MethodName:getMatchingDeployments @TO@ MethodName:getDeployments @AT@ 21788 @LENGTH@ 22


UPD VariableDeclarationStatement@@final ModelNode depNode=deployments.get(uniqueName); @TO@ final ModelNode depNode=deployments.get(deploymentName); @AT@ 74543 @LENGTH@ 54
---UPD VariableDeclarationFragment@@depNode=deployments.get(uniqueName) @TO@ depNode=deployments.get(deploymentName) @AT@ 74559 @LENGTH@ 37
------UPD MethodInvocation@@deployments.get(uniqueName) @TO@ deployments.get(deploymentName) @AT@ 74569 @LENGTH@ 27
---------UPD SimpleName@@MethodName:get:[uniqueName] @TO@ MethodName:get:[deploymentName] @AT@ 74581 @LENGTH@ 15
------------UPD SimpleName@@uniqueName @TO@ deploymentName @AT@ 74585 @LENGTH@ 10


INS MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @TO@ TypeDeclaration@@[public]Util,  @AT@ 21099 @LENGTH@ 656
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21099 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21106 @LENGTH@ 6
---INS ParameterizedType@@List<String> @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21113 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 21113 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 21118 @LENGTH@ 6
---INS SimpleName@@MethodName:getDeployments @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21126 @LENGTH@ 14
---INS SingleVariableDeclaration@@ModelControllerClient client @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21141 @LENGTH@ 28
------INS SimpleType@@ModelControllerClient @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21141 @LENGTH@ 21
------INS SimpleName@@client @TO@ SingleVariableDeclaration@@ModelControllerClient client @AT@ 21163 @LENGTH@ 6
---INS SingleVariableDeclaration@@String serverGroup @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21171 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21171 @LENGTH@ 6
------INS SimpleName@@serverGroup @TO@ SingleVariableDeclaration@@String serverGroup @AT@ 21178 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21202 @LENGTH@ 42
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21202 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21208 @LENGTH@ 9
------INS VariableDeclarationFragment@@request=new ModelNode() @TO@ VariableDeclarationStatement@@final ModelNode request=new ModelNode(); @AT@ 21218 @LENGTH@ 25
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21218 @LENGTH@ 7
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@request=new ModelNode() @AT@ 21228 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21228 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 21232 @LENGTH@ 9
---INS VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21253 @LENGTH@ 41
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21253 @LENGTH@ 9
------INS VariableDeclarationFragment@@address=request.get(ADDRESS) @TO@ VariableDeclarationStatement@@ModelNode address=request.get(ADDRESS); @AT@ 21263 @LENGTH@ 30
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21263 @LENGTH@ 7
---------INS MethodInvocation@@request.get(ADDRESS) @TO@ VariableDeclarationFragment@@address=request.get(ADDRESS) @AT@ 21273 @LENGTH@ 20
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21273 @LENGTH@ 7
------------INS SimpleName@@MethodName:get:[ADDRESS] @TO@ MethodInvocation@@request.get(ADDRESS) @AT@ 21281 @LENGTH@ 12
---------------INS SimpleName@@ADDRESS @TO@ SimpleName@@MethodName:get:[ADDRESS] @AT@ 21285 @LENGTH@ 7
---INS IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21303 @LENGTH@ 87
------INS InfixExpression@@serverGroup != null @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21306 @LENGTH@ 19
---------INS SimpleName@@serverGroup @TO@ InfixExpression@@serverGroup != null @AT@ 21306 @LENGTH@ 11
---------INS Operator@@!= @TO@ InfixExpression@@serverGroup != null @AT@ 21317 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@serverGroup != null @AT@ 21321 @LENGTH@ 4
------INS Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @TO@ IfStatement@@if (serverGroup != null) {  address.add(SERVER_GROUP,serverGroup);} @AT@ 21327 @LENGTH@ 63
---------INS ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @TO@ Block@@ThenBody:{  address.add(SERVER_GROUP,serverGroup);} @AT@ 21341 @LENGTH@ 39
------------INS MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @TO@ ExpressionStatement@@MethodInvocation:address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 38
---------------INS SimpleName@@Name:address @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21341 @LENGTH@ 7
---------------INS SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @TO@ MethodInvocation@@address.add(SERVER_GROUP,serverGroup) @AT@ 21349 @LENGTH@ 30
------------------INS SimpleName@@SERVER_GROUP @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21353 @LENGTH@ 12
------------------INS SimpleName@@serverGroup @TO@ SimpleName@@MethodName:add:[SERVER_GROUP, serverGroup] @AT@ 21367 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21399 @LENGTH@ 48
------INS MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @TO@ ExpressionStatement@@MethodInvocation:request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 47
---------INS MethodInvocation@@MethodName:get:[OPERATION] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 22
------------INS SimpleName@@OPERATION @TO@ MethodInvocation@@MethodName:get:[OPERATION] @AT@ 21411 @LENGTH@ 9
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21399 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @TO@ MethodInvocation@@request.get(OPERATION).set(READ_CHILDREN_NAMES) @AT@ 21422 @LENGTH@ 24
------------INS SimpleName@@READ_CHILDREN_NAMES @TO@ SimpleName@@MethodName:set:[READ_CHILDREN_NAMES] @AT@ 21426 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21456 @LENGTH@ 40
------INS MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @TO@ ExpressionStatement@@MethodInvocation:request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 39
---------INS MethodInvocation@@MethodName:get:[CHILD_TYPE] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 23
------------INS SimpleName@@CHILD_TYPE @TO@ MethodInvocation@@MethodName:get:[CHILD_TYPE] @AT@ 21468 @LENGTH@ 10
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21456 @LENGTH@ 7
---------INS SimpleName@@MethodName:set:[DEPLOYMENT] @TO@ MethodInvocation@@request.get(CHILD_TYPE).set(DEPLOYMENT) @AT@ 21480 @LENGTH@ 15
------------INS SimpleName@@DEPLOYMENT @TO@ SimpleName@@MethodName:set:[DEPLOYMENT] @AT@ 21484 @LENGTH@ 10
---INS TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21505 @LENGTH@ 203
------INS VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21523 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21523 @LENGTH@ 5
---------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21529 @LENGTH@ 9
---------INS VariableDeclarationFragment@@outcome=client.execute(request) @TO@ VariableDeclarationStatement@@final ModelNode outcome=client.execute(request); @AT@ 21539 @LENGTH@ 33
------------INS SimpleName@@outcome @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21539 @LENGTH@ 7
------------INS MethodInvocation@@client.execute(request) @TO@ VariableDeclarationFragment@@outcome=client.execute(request) @AT@ 21549 @LENGTH@ 23
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.execute(request) @AT@ 21549 @LENGTH@ 6
---------------INS SimpleName@@MethodName:execute:[request] @TO@ MethodInvocation@@client.execute(request) @AT@ 21556 @LENGTH@ 16
------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:execute:[request] @AT@ 21564 @LENGTH@ 7
------INS IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21586 @LENGTH@ 80
---------INS MethodInvocation@@isSuccess(outcome) @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21590 @LENGTH@ 18
------------INS SimpleName@@MethodName:isSuccess:[outcome] @TO@ MethodInvocation@@isSuccess(outcome) @AT@ 21590 @LENGTH@ 18
---------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:isSuccess:[outcome] @AT@ 21600 @LENGTH@ 7
---------INS Block@@ThenBody:{  return getList(outcome);} @TO@ IfStatement@@if (isSuccess(outcome)) {  return getList(outcome);} @AT@ 21610 @LENGTH@ 56
------------INS ReturnStatement@@MethodInvocation:getList(outcome) @TO@ Block@@ThenBody:{  return getList(outcome);} @AT@ 21628 @LENGTH@ 24
---------------INS MethodInvocation@@getList(outcome) @TO@ ReturnStatement@@MethodInvocation:getList(outcome) @AT@ 21635 @LENGTH@ 16
------------------INS SimpleName@@MethodName:getList:[outcome] @TO@ MethodInvocation@@getList(outcome) @AT@ 21635 @LENGTH@ 16
---------------------INS SimpleName@@outcome @TO@ SimpleName@@MethodName:getList:[outcome] @AT@ 21643 @LENGTH@ 7
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  final ModelNode outcome=client.execute(request);  if (isSuccess(outcome)) {    return getList(outcome);  }} catch (Exception e) {} @AT@ 21677 @LENGTH@ 31
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 21684 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 21684 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 21694 @LENGTH@ 1
---INS ReturnStatement@@MethodInvocation:Collections.emptyList() @TO@ MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String serverGroup,  @AT@ 21718 @LENGTH@ 31
------INS MethodInvocation@@Collections.emptyList() @TO@ ReturnStatement@@MethodInvocation:Collections.emptyList() @AT@ 21725 @LENGTH@ 23
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21725 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 21737 @LENGTH@ 11


DEL FieldDeclaration@@SimpleAttributeDefinition, [RELATIVE_TO=new SimpleAttributeDefinition("relative-to",ModelType.STRING,true)] @AT@ 20516 @LENGTH@ 109
---DEL SimpleType@@SimpleAttributeDefinition @AT@ 20516 @LENGTH@ 25
---DEL VariableDeclarationFragment@@RELATIVE_TO=new SimpleAttributeDefinition("relative-to",ModelType.STRING,true) @AT@ 20542 @LENGTH@ 82
------DEL SimpleName@@RELATIVE_TO @AT@ 20542 @LENGTH@ 11
------DEL ClassInstanceCreation@@SimpleAttributeDefinition["relative-to", ModelType.STRING, true] @AT@ 20556 @LENGTH@ 68
---------DEL New@@new @AT@ 20556 @LENGTH@ 3
---------DEL SimpleType@@SimpleAttributeDefinition @AT@ 20560 @LENGTH@ 25
---------DEL StringLiteral@@"relative-to" @AT@ 20586 @LENGTH@ 13
---------DEL QualifiedName@@ModelType.STRING @AT@ 20601 @LENGTH@ 16
------------DEL SimpleName@@ModelType @AT@ 20601 @LENGTH@ 9
------------DEL SimpleName@@STRING @AT@ 20611 @LENGTH@ 6
---------DEL BooleanLiteral@@true @AT@ 20619 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:mock.expectedMessageCount(2) @TO@ MethodInvocation:mock.expectedMinimumMessageCount(2) @AT@ 1557 @LENGTH@ 29
---UPD MethodInvocation@@mock.expectedMessageCount(2) @TO@ mock.expectedMinimumMessageCount(2) @AT@ 1557 @LENGTH@ 28
------UPD SimpleName@@MethodName:expectedMessageCount:[2] @TO@ MethodName:expectedMinimumMessageCount:[2] @AT@ 1562 @LENGTH@ 23


UPD MethodDeclaration@@public, voidMethodName:DeadLetterChannel, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, Processor deadLetter, String deadLetterUri, boolean useOriginalBodyPolicy, Predicate retryWhile, String executorServiceRef,  @TO@ public, voidMethodName:DeadLetterChannel, CamelContext camelContext, Processor output, CamelLogger logger, Processor redeliveryProcessor, RedeliveryPolicy redeliveryPolicy, ExceptionPolicyStrategy exceptionPolicyStrategy, Processor deadLetter, String deadLetterUri, boolean useOriginalBodyPolicy, Predicate retryWhile, ScheduledExecutorService executorService,  @AT@ 2560 @LENGTH@ 568
---UPD SingleVariableDeclaration@@String executorServiceRef @TO@ ScheduledExecutorService executorService @AT@ 2874 @LENGTH@ 25
------UPD SimpleType@@String @TO@ ScheduledExecutorService @AT@ 2874 @LENGTH@ 6
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 2881 @LENGTH@ 18
---UPD SuperConstructorInvocation@@super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,deadLetter,deadLetterUri,useOriginalBodyPolicy,retryWhile,executorServiceRef);
 @TO@ super(camelContext,output,logger,redeliveryProcessor,redeliveryPolicy,deadLetter,deadLetterUri,useOriginalBodyPolicy,retryWhile,executorService);
 @AT@ 2912 @LENGTH@ 157
------UPD SimpleName@@executorServiceRef @TO@ executorService @AT@ 3049 @LENGTH@ 18


UPD ExpressionStatement@@Assignment:allGroups=Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ Assignment:allGroups=Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5575 @LENGTH@ 95
---UPD Assignment@@allGroups=Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ allGroups=Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5575 @LENGTH@ 94
------UPD MethodInvocation@@Util.getAllReferencingServerGroups(deploymentName,ctx.getModelControllerClient()) @TO@ Util.getServerGroupsReferencingDeployment(deploymentName,ctx.getModelControllerClient()) @AT@ 5587 @LENGTH@ 82
---------UPD SimpleName@@MethodName:getAllReferencingServerGroups:[deploymentName, ctx.getModelControllerClient()] @TO@ MethodName:getServerGroupsReferencingDeployment:[deploymentName, ctx.getModelControllerClient()] @AT@ 5592 @LENGTH@ 77


INS MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @TO@ TypeDeclaration@@[public]TestPersistenceProvider, [PersistenceProvider] @AT@ 3829 @LENGTH@ 947
---INS Modifier@@private @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3829 @LENGTH@ 7
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3837 @LENGTH@ 4
---INS SimpleName@@MethodName:testGetPersistenceUnitRootUrl @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3842 @LENGTH@ 29
---INS SingleVariableDeclaration@@PersistenceUnitInfo info @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3872 @LENGTH@ 24
------INS SimpleType@@PersistenceUnitInfo @TO@ SingleVariableDeclaration@@PersistenceUnitInfo info @AT@ 3872 @LENGTH@ 19
------INS SimpleName@@info @TO@ SingleVariableDeclaration@@PersistenceUnitInfo info @AT@ 3892 @LENGTH@ 4
---INS VariableDeclarationStatement@@URL rootUrl=info.getPersistenceUnitRootUrl(); @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3908 @LENGTH@ 47
------INS SimpleType@@URL @TO@ VariableDeclarationStatement@@URL rootUrl=info.getPersistenceUnitRootUrl(); @AT@ 3908 @LENGTH@ 3
------INS VariableDeclarationFragment@@rootUrl=info.getPersistenceUnitRootUrl() @TO@ VariableDeclarationStatement@@URL rootUrl=info.getPersistenceUnitRootUrl(); @AT@ 3912 @LENGTH@ 42
---------INS SimpleName@@rootUrl @TO@ VariableDeclarationFragment@@rootUrl=info.getPersistenceUnitRootUrl() @AT@ 3912 @LENGTH@ 7
---------INS MethodInvocation@@info.getPersistenceUnitRootUrl() @TO@ VariableDeclarationFragment@@rootUrl=info.getPersistenceUnitRootUrl() @AT@ 3922 @LENGTH@ 32
------------INS SimpleName@@Name:info @TO@ MethodInvocation@@info.getPersistenceUnitRootUrl() @AT@ 3922 @LENGTH@ 4
------------INS SimpleName@@MethodName:getPersistenceUnitRootUrl:[] @TO@ MethodInvocation@@info.getPersistenceUnitRootUrl() @AT@ 3927 @LENGTH@ 27
---INS VariableDeclarationStatement@@File topFolder=new File(rootUrl.getFile()); @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 3964 @LENGTH@ 45
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File topFolder=new File(rootUrl.getFile()); @AT@ 3964 @LENGTH@ 4
------INS VariableDeclarationFragment@@topFolder=new File(rootUrl.getFile()) @TO@ VariableDeclarationStatement@@File topFolder=new File(rootUrl.getFile()); @AT@ 3969 @LENGTH@ 39
---------INS SimpleName@@topFolder @TO@ VariableDeclarationFragment@@topFolder=new File(rootUrl.getFile()) @AT@ 3969 @LENGTH@ 9
---------INS ClassInstanceCreation@@File[rootUrl.getFile()] @TO@ VariableDeclarationFragment@@topFolder=new File(rootUrl.getFile()) @AT@ 3981 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@File[rootUrl.getFile()] @AT@ 3981 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[rootUrl.getFile()] @AT@ 3985 @LENGTH@ 4
------------INS MethodInvocation@@rootUrl.getFile() @TO@ ClassInstanceCreation@@File[rootUrl.getFile()] @AT@ 3990 @LENGTH@ 17
---------------INS SimpleName@@Name:rootUrl @TO@ MethodInvocation@@rootUrl.getFile() @AT@ 3990 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getFile:[] @TO@ MethodInvocation@@rootUrl.getFile() @AT@ 3998 @LENGTH@ 9
---INS IfStatement@@if (topFolder == null) {  throw new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl");} @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 4018 @LENGTH@ 144
------INS InfixExpression@@topFolder == null @TO@ IfStatement@@if (topFolder == null) {  throw new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl");} @AT@ 4022 @LENGTH@ 17
---------INS SimpleName@@topFolder @TO@ InfixExpression@@topFolder == null @AT@ 4022 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@topFolder == null @AT@ 4031 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@topFolder == null @AT@ 4035 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl");} @TO@ IfStatement@@if (topFolder == null) {  throw new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl");} @AT@ 4041 @LENGTH@ 121
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl") @TO@ Block@@ThenBody:{  throw new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl");} @AT@ 4055 @LENGTH@ 97
------------INS ClassInstanceCreation@@RuntimeException["couldn't get root file representation of getPersistenceUnitRootUrl"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("couldn't get root file representation of getPersistenceUnitRootUrl") @AT@ 4061 @LENGTH@ 90
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["couldn't get root file representation of getPersistenceUnitRootUrl"] @AT@ 4061 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["couldn't get root file representation of getPersistenceUnitRootUrl"] @AT@ 4065 @LENGTH@ 16
---------------INS StringLiteral@@"couldn't get root file representation of getPersistenceUnitRootUrl" @TO@ ClassInstanceCreation@@RuntimeException["couldn't get root file representation of getPersistenceUnitRootUrl"] @AT@ 4082 @LENGTH@ 68
---INS VariableDeclarationStatement@@File metainfFolder[]=topFolder.listFiles(); @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 4171 @LENGTH@ 45
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File metainfFolder[]=topFolder.listFiles(); @AT@ 4171 @LENGTH@ 4
------INS VariableDeclarationFragment@@metainfFolder[]=topFolder.listFiles() @TO@ VariableDeclarationStatement@@File metainfFolder[]=topFolder.listFiles(); @AT@ 4176 @LENGTH@ 39
---------INS SimpleName@@metainfFolder @TO@ VariableDeclarationFragment@@metainfFolder[]=topFolder.listFiles() @AT@ 4176 @LENGTH@ 13
---------INS MethodInvocation@@topFolder.listFiles() @TO@ VariableDeclarationFragment@@metainfFolder[]=topFolder.listFiles() @AT@ 4194 @LENGTH@ 21
------------INS SimpleName@@Name:topFolder @TO@ MethodInvocation@@topFolder.listFiles() @AT@ 4194 @LENGTH@ 9
------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@topFolder.listFiles() @AT@ 4204 @LENGTH@ 11
---INS VariableDeclarationStatement@@File containedFiles[]=metainfFolder[0].listFiles(); @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 4238 @LENGTH@ 53
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File containedFiles[]=metainfFolder[0].listFiles(); @AT@ 4238 @LENGTH@ 4
------INS VariableDeclarationFragment@@containedFiles[]=metainfFolder[0].listFiles() @TO@ VariableDeclarationStatement@@File containedFiles[]=metainfFolder[0].listFiles(); @AT@ 4243 @LENGTH@ 47
---------INS SimpleName@@containedFiles @TO@ VariableDeclarationFragment@@containedFiles[]=metainfFolder[0].listFiles() @AT@ 4243 @LENGTH@ 14
---------INS MethodInvocation@@metainfFolder[0].listFiles() @TO@ VariableDeclarationFragment@@containedFiles[]=metainfFolder[0].listFiles() @AT@ 4262 @LENGTH@ 28
------------INS ArrayAccess@@metainfFolder[0] @TO@ MethodInvocation@@metainfFolder[0].listFiles() @AT@ 4262 @LENGTH@ 16
---------------INS SimpleName@@metainfFolder @TO@ ArrayAccess@@metainfFolder[0] @AT@ 4262 @LENGTH@ 13
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@metainfFolder[0] @AT@ 4276 @LENGTH@ 1
------------INS SimpleName@@MethodName:listFiles:[] @TO@ MethodInvocation@@metainfFolder[0].listFiles() @AT@ 4279 @LENGTH@ 11
---INS EnhancedForStatement@@for (File file : containedFiles) {  System.out.println("getPersistenceUnitRootUrl contains " + file.getName());  if (file.getName().equals("persistence.xml")) {    System.out.println("success: found persistence.xml");    return;  }} @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 4301 @LENGTH@ 301
------INS SingleVariableDeclaration@@File file @TO@ EnhancedForStatement@@for (File file : containedFiles) {  System.out.println("getPersistenceUnitRootUrl contains " + file.getName());  if (file.getName().equals("persistence.xml")) {    System.out.println("success: found persistence.xml");    return;  }} @AT@ 4306 @LENGTH@ 9
---------INS SimpleType@@File @TO@ SingleVariableDeclaration@@File file @AT@ 4306 @LENGTH@ 4
---------INS SimpleName@@file @TO@ SingleVariableDeclaration@@File file @AT@ 4311 @LENGTH@ 4
------INS SimpleName@@containedFiles @TO@ EnhancedForStatement@@for (File file : containedFiles) {  System.out.println("getPersistenceUnitRootUrl contains " + file.getName());  if (file.getName().equals("persistence.xml")) {    System.out.println("success: found persistence.xml");    return;  }} @AT@ 4317 @LENGTH@ 14
------INS ExpressionStatement@@MethodInvocation:System.out.println("getPersistenceUnitRootUrl contains " + file.getName()) @TO@ EnhancedForStatement@@for (File file : containedFiles) {  System.out.println("getPersistenceUnitRootUrl contains " + file.getName());  if (file.getName().equals("persistence.xml")) {    System.out.println("success: found persistence.xml");    return;  }} @AT@ 4348 @LENGTH@ 75
---------INS MethodInvocation@@System.out.println("getPersistenceUnitRootUrl contains " + file.getName()) @TO@ ExpressionStatement@@MethodInvocation:System.out.println("getPersistenceUnitRootUrl contains " + file.getName()) @AT@ 4348 @LENGTH@ 74
------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("getPersistenceUnitRootUrl contains " + file.getName()) @AT@ 4348 @LENGTH@ 10
------------INS SimpleName@@MethodName:println:["getPersistenceUnitRootUrl contains " + file.getName()] @TO@ MethodInvocation@@System.out.println("getPersistenceUnitRootUrl contains " + file.getName()) @AT@ 4359 @LENGTH@ 63
---------------INS InfixExpression@@"getPersistenceUnitRootUrl contains " + file.getName() @TO@ SimpleName@@MethodName:println:["getPersistenceUnitRootUrl contains " + file.getName()] @AT@ 4367 @LENGTH@ 54
------------------INS StringLiteral@@"getPersistenceUnitRootUrl contains " @TO@ InfixExpression@@"getPersistenceUnitRootUrl contains " + file.getName() @AT@ 4367 @LENGTH@ 37
------------------INS Operator@@+ @TO@ InfixExpression@@"getPersistenceUnitRootUrl contains " + file.getName() @AT@ 4404 @LENGTH@ 1
------------------INS MethodInvocation@@file.getName() @TO@ InfixExpression@@"getPersistenceUnitRootUrl contains " + file.getName() @AT@ 4407 @LENGTH@ 14
---------------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getName() @AT@ 4407 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@file.getName() @AT@ 4412 @LENGTH@ 9
------INS IfStatement@@if (file.getName().equals("persistence.xml")) {  System.out.println("success: found persistence.xml");  return;} @TO@ EnhancedForStatement@@for (File file : containedFiles) {  System.out.println("getPersistenceUnitRootUrl contains " + file.getName());  if (file.getName().equals("persistence.xml")) {    System.out.println("success: found persistence.xml");    return;  }} @AT@ 4436 @LENGTH@ 156
---------INS MethodInvocation@@file.getName().equals("persistence.xml") @TO@ IfStatement@@if (file.getName().equals("persistence.xml")) {  System.out.println("success: found persistence.xml");  return;} @AT@ 4440 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:getName:[] @TO@ MethodInvocation@@file.getName().equals("persistence.xml") @AT@ 4440 @LENGTH@ 14
------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.getName().equals("persistence.xml") @AT@ 4440 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:["persistence.xml"] @TO@ MethodInvocation@@file.getName().equals("persistence.xml") @AT@ 4455 @LENGTH@ 25
---------------INS StringLiteral@@"persistence.xml" @TO@ SimpleName@@MethodName:equals:["persistence.xml"] @AT@ 4462 @LENGTH@ 17
---------INS Block@@ThenBody:{  System.out.println("success: found persistence.xml");  return;} @TO@ IfStatement@@if (file.getName().equals("persistence.xml")) {  System.out.println("success: found persistence.xml");  return;} @AT@ 4482 @LENGTH@ 110
------------INS ExpressionStatement@@MethodInvocation:System.out.println("success: found persistence.xml") @TO@ Block@@ThenBody:{  System.out.println("success: found persistence.xml");  return;} @AT@ 4500 @LENGTH@ 53
---------------INS MethodInvocation@@System.out.println("success: found persistence.xml") @TO@ ExpressionStatement@@MethodInvocation:System.out.println("success: found persistence.xml") @AT@ 4500 @LENGTH@ 52
------------------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println("success: found persistence.xml") @AT@ 4500 @LENGTH@ 10
------------------INS SimpleName@@MethodName:println:["success: found persistence.xml"] @TO@ MethodInvocation@@System.out.println("success: found persistence.xml") @AT@ 4511 @LENGTH@ 41
---------------------INS StringLiteral@@"success: found persistence.xml" @TO@ SimpleName@@MethodName:println:["success: found persistence.xml"] @AT@ 4519 @LENGTH@ 32
------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  System.out.println("success: found persistence.xml");  return;} @AT@ 4570 @LENGTH@ 8
---INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'") @TO@ MethodDeclaration@@private, void, MethodName:testGetPersistenceUnitRootUrl, PersistenceUnitInfo info,  @AT@ 4611 @LENGTH@ 159
------INS ClassInstanceCreation@@RuntimeException["failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'") @AT@ 4617 @LENGTH@ 152
---------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'"] @AT@ 4617 @LENGTH@ 3
---------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'"] @AT@ 4621 @LENGTH@ 16
---------INS StringLiteral@@"failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'" @TO@ ClassInstanceCreation@@RuntimeException["failed to find 'persistence.xml' in PersistenceUnitInfo.getPersistenceUnitRootUrl() to verify that it contains 'persistence.xml'"] @AT@ 4638 @LENGTH@ 130


UPD ExpressionStatement@@MethodInvocation:ParsingUtils.setPropertyReference(element,builder,"pdx-serializer","pdxSerializer") @TO@ MethodInvocation:ParsingUtils.setPropertyReference(element,builder,"pdx-serializer-ref","pdxSerializer") @AT@ 2141 @LENGTH@ 87
---UPD MethodInvocation@@ParsingUtils.setPropertyReference(element,builder,"pdx-serializer","pdxSerializer") @TO@ ParsingUtils.setPropertyReference(element,builder,"pdx-serializer-ref","pdxSerializer") @AT@ 2141 @LENGTH@ 86
------UPD SimpleName@@MethodName:setPropertyReference:[element, builder, "pdx-serializer", "pdxSerializer"] @TO@ MethodName:setPropertyReference:[element, builder, "pdx-serializer-ref", "pdxSerializer"] @AT@ 2154 @LENGTH@ 73
---------UPD StringLiteral@@"pdx-serializer" @TO@ "pdx-serializer-ref" @AT@ 2193 @LENGTH@ 16


UPD IfStatement@@if (!RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined()) {  RUNTIME_NAME.validateAndSet(deployment,subModel);} @TO@ if (!RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined()) {  RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel);} @AT@ 4322 @LENGTH@ 146
---UPD PrefixExpression@@!RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined() @TO@ !RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined() @AT@ 4326 @LENGTH@ 66
------UPD MethodInvocation@@RUNTIME_NAME.resolveModelAttribute(context,subModel).isDefined() @TO@ RUNTIME_NAME_NILLABLE.resolveModelAttribute(context,subModel).isDefined() @AT@ 4327 @LENGTH@ 65
---------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 4327 @LENGTH@ 12
---UPD Block@@ThenBody:{  RUNTIME_NAME.validateAndSet(deployment,subModel);} @TO@ ThenBody:{  RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel);} @AT@ 4394 @LENGTH@ 74
------UPD ExpressionStatement@@MethodInvocation:RUNTIME_NAME.validateAndSet(deployment,subModel) @TO@ MethodInvocation:RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel) @AT@ 4408 @LENGTH@ 50
---------UPD MethodInvocation@@RUNTIME_NAME.validateAndSet(deployment,subModel) @TO@ RUNTIME_NAME_NILLABLE.validateAndSet(deployment,subModel) @AT@ 4408 @LENGTH@ 49
------------UPD SimpleName@@Name:RUNTIME_NAME @TO@ Name:RUNTIME_NAME_NILLABLE @AT@ 4408 @LENGTH@ 12


DEL ExpressionStatement@@Assignment:node=find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11414 @LENGTH@ 121
---DEL Assignment@@node=find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11414 @LENGTH@ 120
------DEL SimpleName@@node @AT@ 11414 @LENGTH@ 4
------DEL Operator@@= @AT@ 11418 @LENGTH@ 1
------DEL MethodInvocation@@find(description,CHILDREN,HOST,MODEL_DESCRIPTION,"*",ATTRIBUTES,DOMAIN_CONTROLLER,VALUE_TYPE,LOCAL,TYPE) @AT@ 11421 @LENGTH@ 113
---------DEL SimpleName@@MethodName:find:[description, CHILDREN, HOST, MODEL_DESCRIPTION, "*", ATTRIBUTES, DOMAIN_CONTROLLER, VALUE_TYPE, LOCAL, TYPE] @AT@ 11421 @LENGTH@ 113
------------DEL SimpleName@@description @AT@ 11426 @LENGTH@ 11
------------DEL SimpleName@@CHILDREN @AT@ 11439 @LENGTH@ 8
------------DEL SimpleName@@HOST @AT@ 11449 @LENGTH@ 4
------------DEL SimpleName@@MODEL_DESCRIPTION @AT@ 11455 @LENGTH@ 17
------------DEL StringLiteral@@"*" @AT@ 11474 @LENGTH@ 3
------------DEL SimpleName@@ATTRIBUTES @AT@ 11479 @LENGTH@ 10
------------DEL SimpleName@@DOMAIN_CONTROLLER @AT@ 11491 @LENGTH@ 17
------------DEL SimpleName@@VALUE_TYPE @AT@ 11510 @LENGTH@ 10
------------DEL SimpleName@@LOCAL @AT@ 11522 @LENGTH@ 5
------------DEL SimpleName@@TYPE @AT@ 11529 @LENGTH@ 4


UPD Block@@ThenBody:{  byte[] shortMessage=((MessageRequest)command).getShortMessage();  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {    return new String(shortMessage);  }} @TO@ ThenBody:{  byte[] shortMessage=((MessageRequest)command).getShortMessage();  if (shortMessage == null || shortMessage.length == 0) {    return null;  }  if (Charset.isSupported(configuration.getEncoding())) {    try {      return new String(shortMessage,configuration.getEncoding());    } catch (    UnsupportedEncodingException e) {    }  }  return new String(shortMessage);} @AT@ 2604 @LENGTH@ 305
---UPD TryStatement@@try {  return new String(shortMessage,configuration.getEncoding());} catch (UnsupportedEncodingException e) {  return new String(shortMessage);} @TO@ try {  return new String(shortMessage,configuration.getEncoding());} catch (UnsupportedEncodingException e) {} @AT@ 2698 @LENGTH@ 201
---INS IfStatement@@if (shortMessage == null || shortMessage.length == 0) {  return null;} @TO@ Block@@ThenBody:{  byte[] shortMessage=((MessageRequest)command).getShortMessage();  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {    return new String(shortMessage);  }} @AT@ 2731 @LENGTH@ 98
------INS InfixExpression@@shortMessage == null || shortMessage.length == 0 @TO@ IfStatement@@if (shortMessage == null || shortMessage.length == 0) {  return null;} @AT@ 2735 @LENGTH@ 48
---------INS InfixExpression@@shortMessage == null @TO@ InfixExpression@@shortMessage == null || shortMessage.length == 0 @AT@ 2735 @LENGTH@ 20
------------INS SimpleName@@shortMessage @TO@ InfixExpression@@shortMessage == null @AT@ 2735 @LENGTH@ 12
------------INS Operator@@== @TO@ InfixExpression@@shortMessage == null @AT@ 2747 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@shortMessage == null @AT@ 2751 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@shortMessage == null || shortMessage.length == 0 @AT@ 2755 @LENGTH@ 2
---------INS InfixExpression@@shortMessage.length == 0 @TO@ InfixExpression@@shortMessage == null || shortMessage.length == 0 @AT@ 2759 @LENGTH@ 24
------------INS QualifiedName@@shortMessage.length @TO@ InfixExpression@@shortMessage.length == 0 @AT@ 2759 @LENGTH@ 19
---------------INS SimpleName@@shortMessage @TO@ QualifiedName@@shortMessage.length @AT@ 2759 @LENGTH@ 12
---------------INS SimpleName@@length @TO@ QualifiedName@@shortMessage.length @AT@ 2772 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@shortMessage.length == 0 @AT@ 2778 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@shortMessage.length == 0 @AT@ 2782 @LENGTH@ 1
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (shortMessage == null || shortMessage.length == 0) {  return null;} @AT@ 2785 @LENGTH@ 44
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 2803 @LENGTH@ 12
------------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 2810 @LENGTH@ 4
---INS IfStatement@@if (Charset.isSupported(configuration.getEncoding())) {  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {  }} @TO@ Block@@ThenBody:{  byte[] shortMessage=((MessageRequest)command).getShortMessage();  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {    return new String(shortMessage);  }} @AT@ 2842 @LENGTH@ 280
------INS MethodInvocation@@Charset.isSupported(configuration.getEncoding()) @TO@ IfStatement@@if (Charset.isSupported(configuration.getEncoding())) {  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {  }} @AT@ 2846 @LENGTH@ 48
---------INS SimpleName@@Name:Charset @TO@ MethodInvocation@@Charset.isSupported(configuration.getEncoding()) @AT@ 2846 @LENGTH@ 7
---------INS SimpleName@@MethodName:isSupported:[configuration.getEncoding()] @TO@ MethodInvocation@@Charset.isSupported(configuration.getEncoding()) @AT@ 2854 @LENGTH@ 40
------------INS MethodInvocation@@configuration.getEncoding() @TO@ SimpleName@@MethodName:isSupported:[configuration.getEncoding()] @AT@ 2866 @LENGTH@ 27
---------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getEncoding() @AT@ 2866 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getEncoding:[] @TO@ MethodInvocation@@configuration.getEncoding() @AT@ 2880 @LENGTH@ 13
------INS Block@@ThenBody:{  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {  }} @TO@ IfStatement@@if (Charset.isSupported(configuration.getEncoding())) {  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {  }} @AT@ 2896 @LENGTH@ 226
---------MOV TryStatement@@try {  return new String(shortMessage,configuration.getEncoding());} catch (UnsupportedEncodingException e) {  return new String(shortMessage);} @TO@ Block@@ThenBody:{  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {  }} @AT@ 2698 @LENGTH@ 201
------------UPD CatchClause@@catch (UnsupportedEncodingException e) {  return new String(shortMessage);} @TO@ catch (UnsupportedEncodingException e) {} @AT@ 2796 @LENGTH@ 103
---MOV ReturnStatement@@ClassInstanceCreation:new String(shortMessage) @TO@ Block@@ThenBody:{  byte[] shortMessage=((MessageRequest)command).getShortMessage();  try {    return new String(shortMessage,configuration.getEncoding());  } catch (  UnsupportedEncodingException e) {    return new String(shortMessage);  }} @AT@ 2853 @LENGTH@ 32


DEL ExpressionStatement@@MethodInvocation:Assert.assertEquals(new HashSet<Object>(Arrays.asList(3,5,7)),parameterInfo.getLegalValues()) @AT@ 16229 @LENGTH@ 97
---DEL MethodInvocation@@Assert.assertEquals(new HashSet<Object>(Arrays.asList(3,5,7)),parameterInfo.getLegalValues()) @AT@ 16229 @LENGTH@ 96
------DEL SimpleName@@Name:Assert @AT@ 16229 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertEquals:[new HashSet<Object>(Arrays.asList(3,5,7)), parameterInfo.getLegalValues()] @AT@ 16236 @LENGTH@ 89
---------DEL ClassInstanceCreation@@HashSet<Object>[Arrays.asList(3,5,7)] @AT@ 16249 @LENGTH@ 43
------------DEL New@@new @AT@ 16249 @LENGTH@ 3
------------DEL ParameterizedType@@HashSet<Object> @AT@ 16253 @LENGTH@ 15
---------------DEL SimpleType@@HashSet @AT@ 16253 @LENGTH@ 7
---------------DEL SimpleType@@Object @AT@ 16261 @LENGTH@ 6
------------DEL MethodInvocation@@Arrays.asList(3,5,7) @AT@ 16269 @LENGTH@ 22
---------------DEL SimpleName@@Name:Arrays @AT@ 16269 @LENGTH@ 6
---------------DEL SimpleName@@MethodName:asList:[3, 5, 7] @AT@ 16276 @LENGTH@ 15
------------------DEL NumberLiteral@@3 @AT@ 16283 @LENGTH@ 1
------------------DEL NumberLiteral@@5 @AT@ 16286 @LENGTH@ 1
------------------DEL NumberLiteral@@7 @AT@ 16289 @LENGTH@ 1
---------DEL MethodInvocation@@parameterInfo.getLegalValues() @AT@ 16294 @LENGTH@ 30
------------DEL SimpleName@@Name:parameterInfo @AT@ 16294 @LENGTH@ 13
------------DEL SimpleName@@MethodName:getLegalValues:[] @AT@ 16308 @LENGTH@ 16


UPD VariableDeclarationStatement@@final Set<ResourceRoot> allResourceRoots=new LinkedHashSet<ResourceRoot>(); @TO@ final List<ResourceRoot> allResourceRoots=new ArrayList<ResourceRoot>(); @AT@ 3726 @LENGTH@ 77
---UPD ParameterizedType@@Set<ResourceRoot> @TO@ List<ResourceRoot> @AT@ 3732 @LENGTH@ 17
------UPD SimpleType@@Set @TO@ List @AT@ 3732 @LENGTH@ 3
---UPD VariableDeclarationFragment@@allResourceRoots=new LinkedHashSet<ResourceRoot>() @TO@ allResourceRoots=new ArrayList<ResourceRoot>() @AT@ 3750 @LENGTH@ 52
------UPD ClassInstanceCreation@@LinkedHashSet<ResourceRoot>[] @TO@ ArrayList<ResourceRoot>[] @AT@ 3769 @LENGTH@ 33
---------UPD ParameterizedType@@LinkedHashSet<ResourceRoot> @TO@ ArrayList<ResourceRoot> @AT@ 3773 @LENGTH@ 27
------------UPD SimpleType@@LinkedHashSet @TO@ ArrayList @AT@ 3773 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:methodWithEmptyRolesAllowedAnnotation,  @TO@ TypeDeclaration@@[@Stateless, @DeclareRoles(value={"Role1","Role2","Role3"}), @Local({Restriction.class,FullAccess.class}), @LocalBean, @SecurityDomain("other"), public]AnnotatedSLSB, Base[Restriction, FullAccess] @AT@ 1870 @LENGTH@ 148
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:methodWithEmptyRolesAllowedAnnotation,  @AT@ 1870 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:methodWithEmptyRolesAllowedAnnotation,  @AT@ 1877 @LENGTH@ 4
---INS SimpleName@@MethodName:methodWithEmptyRolesAllowedAnnotation @TO@ MethodDeclaration@@public, void, MethodName:methodWithEmptyRolesAllowedAnnotation,  @AT@ 1882 @LENGTH@ 37
---INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("This method was supposed to be restricted to all!") @TO@ MethodDeclaration@@public, void, MethodName:methodWithEmptyRolesAllowedAnnotation,  @AT@ 1932 @LENGTH@ 80
------INS ClassInstanceCreation@@RuntimeException["This method was supposed to be restricted to all!"] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("This method was supposed to be restricted to all!") @AT@ 1938 @LENGTH@ 73
---------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["This method was supposed to be restricted to all!"] @AT@ 1938 @LENGTH@ 3
---------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["This method was supposed to be restricted to all!"] @AT@ 1942 @LENGTH@ 16
---------INS StringLiteral@@"This method was supposed to be restricted to all!" @TO@ ClassInstanceCreation@@RuntimeException["This method was supposed to be restricted to all!"] @AT@ 1959 @LENGTH@ 51


DEL ExpressionStatement@@MethodInvocation:assertEquals(1,ids.size()) @AT@ 4839 @LENGTH@ 28
---DEL MethodInvocation@@assertEquals(1,ids.size()) @AT@ 4839 @LENGTH@ 27
------DEL SimpleName@@MethodName:assertEquals:[1, ids.size()] @AT@ 4839 @LENGTH@ 27
---------DEL NumberLiteral@@1 @AT@ 4852 @LENGTH@ 1
---------DEL MethodInvocation@@ids.size() @AT@ 4855 @LENGTH@ 10
------------DEL SimpleName@@Name:ids @AT@ 4855 @LENGTH@ 3
------------DEL SimpleName@@MethodName:size:[] @AT@ 4859 @LENGTH@ 6


UPD IfStatement@@if (current == null || !current.isManaged()) {  Configuration[] computeConfigs=findConfigurationByFactoryPid("org.jclouds.compute");  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @TO@ if (current == null || !current.isManaged()) {  Configuration[] computeConfigs=findConfigurationByFactoryPid("org.jclouds.compute");  if (computeConfigs != null) {    for (    Configuration configuration : computeConfigs) {      configuration.delete();    }  }} @AT@ 1727 @LENGTH@ 336
---UPD Block@@ThenBody:{  Configuration[] computeConfigs=findConfigurationByFactoryPid("org.jclouds.compute");  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @TO@ ThenBody:{  Configuration[] computeConfigs=findConfigurationByFactoryPid("org.jclouds.compute");  if (computeConfigs != null) {    for (    Configuration configuration : computeConfigs) {      configuration.delete();    }  }} @AT@ 1772 @LENGTH@ 291
------INS IfStatement@@if (computeConfigs != null) {  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @TO@ Block@@ThenBody:{  Configuration[] computeConfigs=findConfigurationByFactoryPid("org.jclouds.compute");  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @AT@ 1947 @LENGTH@ 174
---------INS InfixExpression@@computeConfigs != null @TO@ IfStatement@@if (computeConfigs != null) {  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @AT@ 1951 @LENGTH@ 22
------------INS SimpleName@@computeConfigs @TO@ InfixExpression@@computeConfigs != null @AT@ 1951 @LENGTH@ 14
------------INS Operator@@!= @TO@ InfixExpression@@computeConfigs != null @AT@ 1965 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@computeConfigs != null @AT@ 1969 @LENGTH@ 4
---------INS Block@@ThenBody:{  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @TO@ IfStatement@@if (computeConfigs != null) {  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @AT@ 1975 @LENGTH@ 146
------------MOV EnhancedForStatement@@for (Configuration configuration : computeConfigs) {  configuration.delete();} @TO@ Block@@ThenBody:{  for (  Configuration configuration : computeConfigs) {    configuration.delete();  }} @AT@ 1947 @LENGTH@ 106


DEL EnhancedForStatement@@for (@SuppressWarnings("unused") T candidate : base) {  iterator.next();} @AT@ 4422 @LENGTH@ 80
---DEL SingleVariableDeclaration@@@SuppressWarnings("unused") T candidate @AT@ 4427 @LENGTH@ 41
------DEL SimpleType@@T @AT@ 4457 @LENGTH@ 1
------DEL SimpleName@@candidate @AT@ 4459 @LENGTH@ 9
---DEL SimpleName@@base @AT@ 4471 @LENGTH@ 4


DEL MethodDeclaration@@private, static, Type, MethodName:resolveArrayType, Class<?> type,  @AT@ 4094 @LENGTH@ 225
---DEL Modifier@@private @AT@ 4094 @LENGTH@ 7
---DEL Modifier@@static @AT@ 4102 @LENGTH@ 6
---DEL SimpleType@@Type @AT@ 4109 @LENGTH@ 4
---DEL SimpleName@@MethodName:resolveArrayType @AT@ 4114 @LENGTH@ 16
---DEL SingleVariableDeclaration@@Class<?> type @AT@ 4131 @LENGTH@ 13
------DEL ParameterizedType@@Class<?> @AT@ 4131 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 4131 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 4137 @LENGTH@ 1
------DEL SimpleName@@type @AT@ 4140 @LENGTH@ 4
---DEL ExpressionStatement@@MethodInvocation:Assert.isTrue(type.isArray()) @AT@ 4150 @LENGTH@ 30
------DEL MethodInvocation@@Assert.isTrue(type.isArray()) @AT@ 4150 @LENGTH@ 29
---------DEL SimpleName@@Name:Assert @AT@ 4150 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isTrue:[type.isArray()] @AT@ 4157 @LENGTH@ 22
------------DEL MethodInvocation@@type.isArray() @AT@ 4164 @LENGTH@ 14
---------------DEL SimpleName@@Name:type @AT@ 4164 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:isArray:[] @AT@ 4169 @LENGTH@ 9
---DEL VariableDeclarationStatement@@Class<?> componentType=type.getComponentType(); @AT@ 4183 @LENGTH@ 49
------DEL ParameterizedType@@Class<?> @AT@ 4183 @LENGTH@ 8
---------DEL SimpleType@@Class @AT@ 4183 @LENGTH@ 5
---------DEL WildcardType@@? @AT@ 4189 @LENGTH@ 1
------DEL VariableDeclarationFragment@@componentType=type.getComponentType() @AT@ 4192 @LENGTH@ 39
---------DEL SimpleName@@componentType @AT@ 4192 @LENGTH@ 13
---------DEL MethodInvocation@@type.getComponentType() @AT@ 4208 @LENGTH@ 23
------------DEL SimpleName@@Name:type @AT@ 4208 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getComponentType:[] @AT@ 4213 @LENGTH@ 18
---DEL ReturnStatement@@ConditionalExpression:componentType.isArray() ? resolveArrayType(componentType) : componentType @AT@ 4235 @LENGTH@ 81
------DEL ConditionalExpression@@componentType.isArray() ? resolveArrayType(componentType) : componentType @AT@ 4242 @LENGTH@ 73
---------DEL MethodInvocation@@componentType.isArray() @AT@ 4242 @LENGTH@ 23
------------DEL SimpleName@@Name:componentType @AT@ 4242 @LENGTH@ 13
------------DEL SimpleName@@MethodName:isArray:[] @AT@ 4256 @LENGTH@ 9
---------DEL MethodInvocation@@resolveArrayType(componentType) @AT@ 4268 @LENGTH@ 31
------------DEL SimpleName@@MethodName:resolveArrayType:[componentType] @AT@ 4268 @LENGTH@ 31
---------------DEL SimpleName@@componentType @AT@ 4285 @LENGTH@ 13
---------DEL SimpleName@@componentType @AT@ 4302 @LENGTH@ 13


UPD ReturnStatement@@ClassInstanceCreation:new ObjectListAttributeDefinition(name,xmlName,valueType,allowNull,minSize,maxSize,alternatives,requires,attributeMarshaller,resourceOnly,flags) @TO@ ClassInstanceCreation:new ObjectListAttributeDefinition(name,xmlName,valueType,allowNull,minSize,maxSize,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags) @AT@ 8903 @LENGTH@ 162
---UPD ClassInstanceCreation@@ObjectListAttributeDefinition[name, xmlName, valueType, allowNull, minSize, maxSize, alternatives, requires, attributeMarshaller, resourceOnly, flags] @TO@ ObjectListAttributeDefinition[name, xmlName, valueType, allowNull, minSize, maxSize, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags] @AT@ 8910 @LENGTH@ 154
------INS SimpleName@@deprecated @TO@ ClassInstanceCreation@@ObjectListAttributeDefinition[name, xmlName, valueType, allowNull, minSize, maxSize, alternatives, requires, attributeMarshaller, resourceOnly, flags] @AT@ 9146 @LENGTH@ 10


UPD TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @TO@ try {  final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName);  final ModelNode finalResult=prepared.getFinalResult().get();  final ModelNode transformedResult=request.transformResult(finalResult);  domainOperationContext.addHostControllerResult(hostName,transformedResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 9712 @LENGTH@ 772
---INS VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @TO@ TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 9815 @LENGTH@ 88
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9815 @LENGTH@ 5
------INS SimpleType@@HostControllerUpdateTask.ExecutedHostRequest @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9821 @LENGTH@ 44
------INS VariableDeclarationFragment@@request=finalResults.get(hostName) @TO@ VariableDeclarationStatement@@final HostControllerUpdateTask.ExecutedHostRequest request=finalResults.get(hostName); @AT@ 9866 @LENGTH@ 36
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=finalResults.get(hostName) @AT@ 9866 @LENGTH@ 7
---------INS MethodInvocation@@finalResults.get(hostName) @TO@ VariableDeclarationFragment@@request=finalResults.get(hostName) @AT@ 9876 @LENGTH@ 26
------------INS SimpleName@@Name:finalResults @TO@ MethodInvocation@@finalResults.get(hostName) @AT@ 9876 @LENGTH@ 12
------------INS SimpleName@@MethodName:get:[hostName] @TO@ MethodInvocation@@finalResults.get(hostName) @AT@ 9889 @LENGTH@ 13
---------------INS SimpleName@@hostName @TO@ SimpleName@@MethodName:get:[hostName] @AT@ 9893 @LENGTH@ 8
---UPD ExpressionStatement@@MethodInvocation:domainOperationContext.addHostControllerResult(hostName,finalResult) @TO@ MethodInvocation:domainOperationContext.addHostControllerResult(hostName,transformedResult) @AT@ 9829 @LENGTH@ 70
------UPD MethodInvocation@@domainOperationContext.addHostControllerResult(hostName,finalResult) @TO@ domainOperationContext.addHostControllerResult(hostName,transformedResult) @AT@ 9829 @LENGTH@ 69
---------UPD SimpleName@@MethodName:addHostControllerResult:[hostName, finalResult] @TO@ MethodName:addHostControllerResult:[hostName, transformedResult] @AT@ 9852 @LENGTH@ 46
------------UPD SimpleName@@finalResult @TO@ transformedResult @AT@ 9886 @LENGTH@ 11
---INS VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @TO@ TryStatement@@try {  final ModelNode finalResult=prepared.getFinalResult().get();  domainOperationContext.addHostControllerResult(hostName,finalResult);  if (HOST_CONTROLLER_LOGGER.isTraceEnabled()) {    HOST_CONTROLLER_LOGGER.tracef("Final result for remote host %s is %s",hostName,finalResult);  }} catch (InterruptedException e) {  interrupted=true;  CONTROLLER_LOGGER.interruptedAwaitingFinalResponse(hostName);}catch (ExecutionException e) {  CONTROLLER_LOGGER.caughtExceptionAwaitingFinalResponse(e.getCause(),hostName);} @AT@ 10015 @LENGTH@ 73
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10015 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10021 @LENGTH@ 9
------INS VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @TO@ VariableDeclarationStatement@@final ModelNode transformedResult=request.transformResult(finalResult); @AT@ 10031 @LENGTH@ 56
---------INS SimpleName@@transformedResult @TO@ VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @AT@ 10031 @LENGTH@ 17
---------INS MethodInvocation@@request.transformResult(finalResult) @TO@ VariableDeclarationFragment@@transformedResult=request.transformResult(finalResult) @AT@ 10051 @LENGTH@ 36
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.transformResult(finalResult) @AT@ 10051 @LENGTH@ 7
------------INS SimpleName@@MethodName:transformResult:[finalResult] @TO@ MethodInvocation@@request.transformResult(finalResult) @AT@ 10059 @LENGTH@ 28
---------------INS SimpleName@@finalResult @TO@ SimpleName@@MethodName:transformResult:[finalResult] @AT@ 10075 @LENGTH@ 11


UPD VariableDeclarationStatement@@List<Exchange> polledExchanges=mock.getExchanges().get(0).getIn().getBody(List.class); @TO@ List<?> polledExchanges=mock.getExchanges().get(0).getIn().getBody(List.class); @AT@ 5173 @LENGTH@ 88
---UPD ParameterizedType@@List<Exchange> @TO@ List<?> @AT@ 5173 @LENGTH@ 14
------INS WildcardType@@? @TO@ ParameterizedType@@List<Exchange> @AT@ 5150 @LENGTH@ 1
------DEL SimpleType@@Exchange @AT@ 5178 @LENGTH@ 8


UPD IfStatement@@if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ if (getEndpoint().isBridgeEndpoint()) {  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 6339 @LENGTH@ 348
---UPD Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @TO@ ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }  exchange.getIn().getHeaders().remove("host");} @AT@ 6377 @LENGTH@ 310
------INS ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @TO@ Block@@ThenBody:{  exchange.setProperty(Exchange.SKIP_GZIP_ENCODING,Boolean.TRUE);  String queryString=exchange.getIn().getHeader(Exchange.HTTP_QUERY,String.class);  if (queryString != null) {    skipRequestHeaders=URISupport.parseQuery(queryString);  }} @AT@ 6759 @LENGTH@ 45
---------INS MethodInvocation@@exchange.getIn().getHeaders().remove("host") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().getHeaders().remove("host") @AT@ 6759 @LENGTH@ 44
------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 6759 @LENGTH@ 29
------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 6759 @LENGTH@ 16
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 6759 @LENGTH@ 8
------------INS SimpleName@@MethodName:remove:["host"] @TO@ MethodInvocation@@exchange.getIn().getHeaders().remove("host") @AT@ 6789 @LENGTH@ 14
---------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:remove:["host"] @AT@ 6796 @LENGTH@ 6


UPD MethodDeclaration@@public, static, List<String>, MethodName:getDeployments, ModelControllerClient client, String wildcardExpr,  @TO@ public, static, List<String>, MethodName:getMatchingDeployments, ModelControllerClient client, String wildcardExpr,  @AT@ 21099 @LENGTH@ 820
---UPD SimpleName@@MethodName:getDeployments @TO@ MethodName:getMatchingDeployments @AT@ 21126 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:log.info("Route: {} {}, was consuming from: {}",route.getId(),state,route.getConsumer().getEndpoint()) @TO@ MethodInvocation:log.info("Route: {} {}, was consuming from: {}",new Object[]{route.getId(),state,route.getConsumer().getEndpoint()}) @AT@ 75438 @LENGTH@ 106
---UPD MethodInvocation@@log.info("Route: {} {}, was consuming from: {}",route.getId(),state,route.getConsumer().getEndpoint()) @TO@ log.info("Route: {} {}, was consuming from: {}",new Object[]{route.getId(),state,route.getConsumer().getEndpoint()}) @AT@ 75438 @LENGTH@ 105
------UPD SimpleName@@MethodName:info:["Route: {} {}, was consuming from: {}", route.getId(), state, route.getConsumer().getEndpoint()] @TO@ MethodName:info:["Route: {} {}, was consuming from: {}", new Object[]{route.getId(),state,route.getConsumer().getEndpoint()}] @AT@ 75442 @LENGTH@ 101
---------INS ArrayCreation@@new Object[]{route.getId(),state,route.getConsumer().getEndpoint()} @TO@ SimpleName@@MethodName:info:["Route: {} {}, was consuming from: {}", route.getId(), state, route.getConsumer().getEndpoint()] @AT@ 75487 @LENGTH@ 69
------------INS ArrayType@@Object[] @TO@ ArrayCreation@@new Object[]{route.getId(),state,route.getConsumer().getEndpoint()} @AT@ 75491 @LENGTH@ 8
---------------INS SimpleType@@Object @TO@ ArrayType@@Object[] @AT@ 75491 @LENGTH@ 6
------------INS ArrayInitializer@@{route.getId(),state,route.getConsumer().getEndpoint()} @TO@ ArrayCreation@@new Object[]{route.getId(),state,route.getConsumer().getEndpoint()} @AT@ 75499 @LENGTH@ 57
---------------INS MethodInvocation@@route.getId() @TO@ ArrayInitializer@@{route.getId(),state,route.getConsumer().getEndpoint()} @AT@ 75500 @LENGTH@ 13
------------------MOV SimpleName@@Name:route @TO@ MethodInvocation@@route.getId() @AT@ 75487 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@route.getId() @AT@ 75493 @LENGTH@ 7
---------------INS SimpleName@@state @TO@ ArrayInitializer@@{route.getId(),state,route.getConsumer().getEndpoint()} @AT@ 75515 @LENGTH@ 5
---------------INS MethodInvocation@@route.getConsumer().getEndpoint() @TO@ ArrayInitializer@@{route.getId(),state,route.getConsumer().getEndpoint()} @AT@ 75522 @LENGTH@ 33
------------------MOV MethodInvocation@@MethodName:getConsumer:[] @TO@ MethodInvocation@@route.getConsumer().getEndpoint() @AT@ 75509 @LENGTH@ 19
------------------MOV SimpleName@@Name:route @TO@ MethodInvocation@@route.getConsumer().getEndpoint() @AT@ 75509 @LENGTH@ 5
------------------MOV SimpleName@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@route.getConsumer().getEndpoint() @AT@ 75529 @LENGTH@ 13
---------DEL MethodInvocation@@route.getId() @AT@ 75487 @LENGTH@ 13
---------DEL SimpleName@@state @AT@ 75502 @LENGTH@ 5
---------DEL MethodInvocation@@route.getConsumer().getEndpoint() @AT@ 75509 @LENGTH@ 33


UPD IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @TO@ if (entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @AT@ 10631 @LENGTH@ 248
---DEL PrefixExpression@@!entry.getValue() @AT@ 10635 @LENGTH@ 17
------DEL Operator@@! @AT@ 10635 @LENGTH@ 1
------DEL MethodInvocation@@entry.getValue() @AT@ 10636 @LENGTH@ 16
---INS MethodInvocation@@entry.getValue() @TO@ IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10635 @LENGTH@ 16
------MOV SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getValue() @AT@ 10636 @LENGTH@ 5
------MOV SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@entry.getValue() @AT@ 10642 @LENGTH@ 10
---UPD Block@@ThenBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @TO@ ElseBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @AT@ 10654 @LENGTH@ 113
---MOV Block@@ThenBody:{  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} @TO@ IfStatement@@if (!entry.getValue()) {  msg.append(MESSAGES.serviceStatusReportNoLongerRequired(entry.getKey()));} else {  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10654 @LENGTH@ 113
---UPD Block@@ElseBody:{  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @TO@ ThenBody:{  msg.append(MESSAGES.serviceStatusReportAvailable(entry.getKey()));} @AT@ 10773 @LENGTH@ 106


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")) @TO@ MethodInvocation:ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"),"MANIFEST.MF") @AT@ 2737 @LENGTH@ 373
---UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")) @TO@ ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"),"MANIFEST.MF") @AT@ 2744 @LENGTH@ 365
------INS MethodInvocation@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, ArchivePaths.create("beans.xml")] @TO@ MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")) @AT@ 2795 @LENGTH@ 365
---------MOV MethodInvocation@@ArchivePaths.create("beans.xml") @TO@ MethodInvocation@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, ArchivePaths.create("beans.xml")] @AT@ 3076 @LENGTH@ 32
---------INS QualifiedName@@EmptyAsset.INSTANCE @TO@ MethodInvocation@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, ArchivePaths.create("beans.xml")] @AT@ 3082 @LENGTH@ 19
------------MOV SimpleName@@EmptyAsset @TO@ QualifiedName@@EmptyAsset.INSTANCE @AT@ 3031 @LENGTH@ 10
------------MOV SimpleName@@INSTANCE @TO@ QualifiedName@@EmptyAsset.INSTANCE @AT@ 3042 @LENGTH@ 8
------DEL SimpleName@@MethodName:addAsManifestResource:[EmptyAsset.INSTANCE, ArchivePaths.create("beans.xml")] @AT@ 2984 @LENGTH@ 125
---------DEL QualifiedName@@EmptyAsset.INSTANCE @AT@ 3031 @LENGTH@ 19
------INS SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"), "MANIFEST.MF"] @TO@ MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"test.jar").addPackage(JMSOperations.class.getPackage()).addClass(CreateJMSBridgeSetupTask.class).addClass(CreateQueueSetupTask.class).addAsManifestResource(EmptyAsset.INSTANCE,ArchivePaths.create("beans.xml")) @AT@ 3178 @LENGTH@ 134
---------INS ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"] @TO@ SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"), "MANIFEST.MF"] @AT@ 3200 @LENGTH@ 96
------------INS New@@new @TO@ ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"] @AT@ 3200 @LENGTH@ 3
------------INS SimpleType@@StringAsset @TO@ ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"] @AT@ 3204 @LENGTH@ 11
------------INS StringLiteral@@"Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n" @TO@ ClassInstanceCreation@@StringAsset["Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"] @AT@ 3216 @LENGTH@ 79
---------INS StringLiteral@@"MANIFEST.MF" @TO@ SimpleName@@MethodName:addAsManifestResource:[new StringAsset("Dependencies: org.jboss.as.controller-client,org.jboss.dmr,org.jboss.as.cli\n"), "MANIFEST.MF"] @AT@ 3298 @LENGTH@ 13


UPD MethodDeclaration@@public, TypeInformation<?>, MethodName:resolveTypeFrom, Object source,  @TO@ public, TypeInformation<?>, MethodName:resolveTypeFrom, Object alias,  @AT@ 1881 @LENGTH@ 350
---UPD SingleVariableDeclaration@@Object source @TO@ Object alias @AT@ 1923 @LENGTH@ 13
------UPD SimpleName@@source @TO@ alias @AT@ 1930 @LENGTH@ 6
---UPD IfStatement@@if (!(source instanceof String)) {  return null;} @TO@ if (!(alias instanceof String)) {  return null;} @AT@ 1943 @LENGTH@ 54
------UPD PrefixExpression@@!(source instanceof String) @TO@ !(alias instanceof String) @AT@ 1947 @LENGTH@ 27
---------UPD ParenthesizedExpression@@(source instanceof String) @TO@ (alias instanceof String) @AT@ 1948 @LENGTH@ 26
------------UPD InstanceofExpression@@source instanceof String @TO@ alias instanceof String @AT@ 1949 @LENGTH@ 24
---------------UPD SimpleName@@source @TO@ alias @AT@ 1949 @LENGTH@ 6
---UPD VariableDeclarationStatement@@String value=(String)source; @TO@ String value=(String)alias; @AT@ 2001 @LENGTH@ 31
------UPD VariableDeclarationFragment@@value=(String)source @TO@ value=(String)alias @AT@ 2008 @LENGTH@ 23
---------UPD CastExpression@@(String)source @TO@ (String)alias @AT@ 2016 @LENGTH@ 15
------------UPD SimpleName@@source @TO@ alias @AT@ 2025 @LENGTH@ 6


UPD ReturnStatement@@ClassInstanceCreation:new StandardResourceDescriptionResolver(prefix.toString(),HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostModelUtil.class.getClassLoader(),true,false) @TO@ ClassInstanceCreation:new StandardResourceDescriptionResolver(prefix.toString(),HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions",HostModelUtil.class.getClassLoader(),true,false) @AT@ 6884 @LENGTH@ 204
---UPD ClassInstanceCreation@@StandardResourceDescriptionResolver[prefix.toString(), HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostModelUtil.class.getClassLoader(), true, false] @TO@ StandardResourceDescriptionResolver[prefix.toString(), HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions", HostModelUtil.class.getClassLoader(), true, false] @AT@ 6891 @LENGTH@ 196
------UPD InfixExpression@@HostControllerResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() + ".LocalDescriptions" @AT@ 6950 @LENGTH@ 85
---------UPD MethodInvocation@@HostControllerResourceDescription.class.getPackage().getName() @TO@ HostEnvironmentResourceDescription.class.getPackage().getName() @AT@ 6950 @LENGTH@ 62
------------UPD TypeLiteral@@HostControllerResourceDescription.class @TO@ HostEnvironmentResourceDescription.class @AT@ 6950 @LENGTH@ 39


UPD ExpressionStatement@@MethodInvocation:formatter.format(pathFormat,new Date()) @TO@ MethodInvocation:formatter.format(pathFormat,date) @AT@ 3140 @LENGTH@ 41
---UPD MethodInvocation@@formatter.format(pathFormat,new Date()) @TO@ formatter.format(pathFormat,date) @AT@ 3140 @LENGTH@ 40
------UPD SimpleName@@MethodName:format:[pathFormat, new Date()] @TO@ MethodName:format:[pathFormat, date] @AT@ 3150 @LENGTH@ 30
---------DEL ClassInstanceCreation@@Date[] @AT@ 3169 @LENGTH@ 10
------------DEL New@@new @AT@ 3169 @LENGTH@ 3
------------DEL SimpleType@@Date @AT@ 3173 @LENGTH@ 4
---------INS SimpleName@@date @TO@ SimpleName@@MethodName:format:[pathFormat, new Date()] @AT@ 3169 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue("The second candidate should also be a master.",electionCandidate2.isMaster()) @TO@ MethodInvocation:assertIsMaster(electionCandidate2) @AT@ 4294 @LENGTH@ 91
---UPD MethodInvocation@@assertTrue("The second candidate should also be a master.",electionCandidate2.isMaster()) @TO@ assertIsMaster(electionCandidate2) @AT@ 4294 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertTrue:["The second candidate should also be a master.", electionCandidate2.isMaster()] @TO@ MethodName:assertIsMaster:[electionCandidate2] @AT@ 4294 @LENGTH@ 90
---------INS SimpleName@@electionCandidate2 @TO@ SimpleName@@MethodName:assertTrue:["The second candidate should also be a master.", electionCandidate2.isMaster()] @AT@ 4224 @LENGTH@ 18
---------DEL StringLiteral@@"The second candidate should also be a master." @AT@ 4305 @LENGTH@ 47
---------DEL MethodInvocation@@electionCandidate2.isMaster() @AT@ 4354 @LENGTH@ 29
------------DEL SimpleName@@Name:electionCandidate2 @AT@ 4354 @LENGTH@ 18
------------DEL SimpleName@@MethodName:isMaster:[] @AT@ 4373 @LENGTH@ 10


MOV IfStatement@@if (remoteRepository != null) {  remoteRepository.getDeploymentFiles(hash);} @TO@ MethodDeclaration@@byte[], MethodName:addFromHash, byte[] hash, String deploymentOverlayName, final String contentName, final OperationContext context, OperationFailedException,  @AT@ 5672 @LENGTH@ 96


UPD Block@@ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>();  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      try {        stepCompleted=true;        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);      }  finally {        deploymentResults.set(result);        deploymentDoneLatch.countDown();      }    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    deploymentDoneLatch.countDown();    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @TO@ ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(new ModelNode());  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  boolean asyncCountDown=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      stepCompleted=true;      context.completeStep(new OperationContext.ResultHandler(){        @Override public void handleResult(        OperationContext.ResultAction resultAction,        OperationContext context,        ModelNode operation){          try {            deploymentResults.set(result);          }  finally {            deploymentDoneLatch.countDown();          }        }      });      asyncCountDown=true;    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    if (!asyncCountDown) {      deploymentDoneLatch.countDown();    }    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @AT@ 7601 @LENGTH@ 2624
---UPD VariableDeclarationStatement@@final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(); @TO@ final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>(new ModelNode()); @AT@ 7724 @LENGTH@ 86
------UPD VariableDeclarationFragment@@deploymentResults=new AtomicReference<ModelNode>() @TO@ deploymentResults=new AtomicReference<ModelNode>(new ModelNode()) @AT@ 7757 @LENGTH@ 52
---------UPD ClassInstanceCreation@@AtomicReference<ModelNode>[] @TO@ AtomicReference<ModelNode>[new ModelNode()] @AT@ 7777 @LENGTH@ 32
------------INS ClassInstanceCreation@@ModelNode[] @TO@ ClassInstanceCreation@@AtomicReference<ModelNode>[] @AT@ 7808 @LENGTH@ 15
---------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 7808 @LENGTH@ 3
---------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 7812 @LENGTH@ 9
---UPD TryStatement@@try {  scanDoneLatch.await();  final ModelNode op=deploymentOperation.get();  if (op != null) {    final ModelNode result=new ModelNode();    final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));    final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());    context.addStep(result,op,handler,OperationContext.Stage.MODEL);    try {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  finally {      deploymentResults.set(result);      deploymentDoneLatch.countDown();    }  } else {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }} catch (InterruptedException e) {  interrupted=true;  throw new RuntimeException(e);} finally {  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @TO@ try {  scanDoneLatch.await();  final ModelNode op=deploymentOperation.get();  if (op != null) {    final ModelNode result=new ModelNode();    final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));    final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());    context.addStep(result,op,handler,OperationContext.Stage.MODEL);    stepCompleted=true;    context.completeStep(new OperationContext.ResultHandler(){      @Override public void handleResult(      OperationContext.ResultAction resultAction,      OperationContext context,      ModelNode operation){        try {          deploymentResults.set(result);        }  finally {          deploymentDoneLatch.countDown();        }      }    });    asyncCountDown=true;  } else {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }} catch (InterruptedException e) {  interrupted=true;  throw new RuntimeException(e);} finally {  if (!asyncCountDown) {    deploymentDoneLatch.countDown();  }  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 8725 @LENGTH@ 1486
------UPD IfStatement@@if (op != null) {  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} else {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);} @TO@ if (op != null) {  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  stepCompleted=true;  context.completeStep(new OperationContext.ResultHandler(){    @Override public void handleResult(    OperationContext.ResultAction resultAction,    OperationContext context,    ModelNode operation){      try {        deploymentResults.set(result);      }  finally {        deploymentDoneLatch.countDown();      }    }  });  asyncCountDown=true;} else {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);} @AT@ 8863 @LENGTH@ 986
---------UPD Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @TO@ ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  stepCompleted=true;  context.completeStep(new OperationContext.ResultHandler(){    @Override public void handleResult(    OperationContext.ResultAction resultAction,    OperationContext context,    ModelNode operation){      try {        deploymentResults.set(result);      }  finally {        deploymentDoneLatch.countDown();      }    }  });  asyncCountDown=true;} @AT@ 8879 @LENGTH@ 793
------------DEL TryStatement@@try {  stepCompleted=true;  context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);}  finally {  deploymentResults.set(result);  deploymentDoneLatch.countDown();} @AT@ 9307 @LENGTH@ 343
---------------DEL ExpressionStatement@@MethodInvocation:context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @AT@ 9391 @LENGTH@ 77
------------MOV ExpressionStatement@@Assignment:stepCompleted=true @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9341 @LENGTH@ 21
------------INS ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
) @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9417 @LENGTH@ 553
---------------MOV MethodInvocation@@context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER) @TO@ ExpressionStatement@@MethodInvocation:context.completeStep(new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
) @AT@ 9391 @LENGTH@ 76
------------------UPD SimpleName@@MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @TO@ MethodName:completeStep:[new OperationContext.ResultHandler(){
  @Override public void handleResult(  OperationContext.ResultAction resultAction,  OperationContext context,  ModelNode operation){
    try {
      deploymentResults.set(result);
    }
  finally {
      deploymentDoneLatch.countDown();
    }
  }
}
] @AT@ 9399 @LENGTH@ 68
---------------------DEL QualifiedName@@OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER @AT@ 9412 @LENGTH@ 54
------------------------DEL QualifiedName@@OperationContext.RollbackHandler @AT@ 9412 @LENGTH@ 32
---------------------------DEL SimpleName@@OperationContext @AT@ 9412 @LENGTH@ 16
---------------------------DEL SimpleName@@RollbackHandler @AT@ 9429 @LENGTH@ 15
------------------------DEL SimpleName@@NOOP_ROLLBACK_HANDLER @AT@ 9445 @LENGTH@ 21
---------------------INS ClassInstanceCreation@@OperationContext.ResultHandler[] @TO@ SimpleName@@MethodName:completeStep:[OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER] @AT@ 9438 @LENGTH@ 530
------------------------INS New@@new @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9438 @LENGTH@ 3
------------------------INS SimpleType@@OperationContext.ResultHandler @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9442 @LENGTH@ 30
------------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@OperationContext.ResultHandler[] @AT@ 9475 @LENGTH@ 493
---------------------------INS MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 9543 @LENGTH@ 399
------------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9543 @LENGTH@ 6
------------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9550 @LENGTH@ 4
------------------------------INS SimpleName@@MethodName:handleResult @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9555 @LENGTH@ 12
------------------------------INS SingleVariableDeclaration@@OperationContext.ResultAction resultAction @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9568 @LENGTH@ 42
---------------------------------INS SimpleType@@OperationContext.ResultAction @TO@ SingleVariableDeclaration@@OperationContext.ResultAction resultAction @AT@ 9568 @LENGTH@ 29
---------------------------------INS SimpleName@@resultAction @TO@ SingleVariableDeclaration@@OperationContext.ResultAction resultAction @AT@ 9598 @LENGTH@ 12
------------------------------INS SingleVariableDeclaration@@OperationContext context @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9612 @LENGTH@ 24
---------------------------------INS SimpleType@@OperationContext @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 9612 @LENGTH@ 16
---------------------------------INS SimpleName@@context @TO@ SingleVariableDeclaration@@OperationContext context @AT@ 9629 @LENGTH@ 7
------------------------------INS SingleVariableDeclaration@@ModelNode operation @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9638 @LENGTH@ 19
---------------------------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 9638 @LENGTH@ 9
---------------------------------INS SimpleName@@operation @TO@ SingleVariableDeclaration@@ModelNode operation @AT@ 9648 @LENGTH@ 9
------------------------------INS TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @TO@ MethodDeclaration@@public, void, MethodName:handleResult, OperationContext.ResultAction resultAction, OperationContext context, ModelNode operation,  @AT@ 9693 @LENGTH@ 219
---------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentResults.set(result) @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9533 @LENGTH@ 30
---------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentResults.set(result) @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9533 @LENGTH@ 30
---------------------------------INS Block@@FinallyBody:{  deploymentDoneLatch.countDown();} @TO@ TryStatement@@try {  deploymentResults.set(result);}  finally {  deploymentDoneLatch.countDown();} @AT@ 9808 @LENGTH@ 104
------------------------------------MOV ExpressionStatement@@MethodInvocation:deploymentDoneLatch.countDown() @TO@ Block@@FinallyBody:{  deploymentDoneLatch.countDown();} @AT@ 10040 @LENGTH@ 32
------------INS ExpressionStatement@@Assignment:asyncCountDown=true @TO@ Block@@ThenBody:{  final ModelNode result=new ModelNode();  final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));  final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());  context.addStep(result,op,handler,OperationContext.Stage.MODEL);  try {    stepCompleted=true;    context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);  }  finally {    deploymentResults.set(result);    deploymentDoneLatch.countDown();  }} @AT@ 9995 @LENGTH@ 22
---------------INS Assignment@@asyncCountDown=true @TO@ ExpressionStatement@@Assignment:asyncCountDown=true @AT@ 9995 @LENGTH@ 21
------------------INS SimpleName@@asyncCountDown @TO@ Assignment@@asyncCountDown=true @AT@ 9995 @LENGTH@ 14
------------------INS Operator@@= @TO@ Assignment@@asyncCountDown=true @AT@ 10009 @LENGTH@ 1
------------------INS BooleanLiteral@@true @TO@ Assignment@@asyncCountDown=true @AT@ 10012 @LENGTH@ 4
------UPD Block@@FinallyBody:{  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @TO@ FinallyBody:{  if (!asyncCountDown) {    deploymentDoneLatch.countDown();  }  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 10018 @LENGTH@ 193
---------INS IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @TO@ Block@@FinallyBody:{  deploymentDoneLatch.countDown();  if (interrupted) {    Thread.currentThread().interrupt();  }} @AT@ 10408 @LENGTH@ 101
------------MOV Block@@FinallyBody:{  deploymentResults.set(result);  deploymentDoneLatch.countDown();} @TO@ IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @AT@ 9503 @LENGTH@ 147
------------INS PrefixExpression@@!asyncCountDown @TO@ IfStatement@@if (!asyncCountDown) {  deploymentDoneLatch.countDown();} @AT@ 10412 @LENGTH@ 15
---------------INS Operator@@! @TO@ PrefixExpression@@!asyncCountDown @AT@ 10412 @LENGTH@ 1
---------------INS SimpleName@@asyncCountDown @TO@ PrefixExpression@@!asyncCountDown @AT@ 10413 @LENGTH@ 14
---INS VariableDeclarationStatement@@boolean asyncCountDown=false; @TO@ Block@@ThenBody:{  final AtomicReference<ModelNode> deploymentOperation=new AtomicReference<ModelNode>();  final AtomicReference<ModelNode> deploymentResults=new AtomicReference<ModelNode>();  final CountDownLatch scanDoneLatch=new CountDownLatch(1);  final CountDownLatch deploymentDoneLatch=new CountDownLatch(1);  final DeploymentOperations deploymentOps=new BootTimeScannerDeployment(deploymentOperation,deploymentDoneLatch,deploymentResults,scanDoneLatch);  scheduledExecutorService.submit(new Runnable(){    @Override public void run(){      try {        bootTimeScanner.oneOffScan(deploymentOps);      } catch (      Throwable t) {        DeploymentScannerLogger.ROOT_LOGGER.initialScanFailed(t);      } finally {        scanDoneLatch.countDown();      }    }  });  boolean interrupted=false;  try {    scanDoneLatch.await();    final ModelNode op=deploymentOperation.get();    if (op != null) {      final ModelNode result=new ModelNode();      final PathAddress opPath=PathAddress.pathAddress(op.get(OP_ADDR));      final OperationStepHandler handler=context.getRootResourceRegistration().getOperationHandler(opPath,op.get(OP).asString());      context.addStep(result,op,handler,OperationContext.Stage.MODEL);      try {        stepCompleted=true;        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);      }  finally {        deploymentResults.set(result);        deploymentDoneLatch.countDown();      }    } else {      stepCompleted=true;      context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);    }  } catch (  InterruptedException e) {    interrupted=true;    throw new RuntimeException(e);  } finally {    deploymentDoneLatch.countDown();    if (interrupted) {      Thread.currentThread().interrupt();    }  }} @AT@ 8740 @LENGTH@ 31
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean asyncCountDown=false; @AT@ 8740 @LENGTH@ 7
------INS VariableDeclarationFragment@@asyncCountDown=false @TO@ VariableDeclarationStatement@@boolean asyncCountDown=false; @AT@ 8748 @LENGTH@ 22
---------INS SimpleName@@asyncCountDown @TO@ VariableDeclarationFragment@@asyncCountDown=false @AT@ 8748 @LENGTH@ 14
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@asyncCountDown=false @AT@ 8765 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:PERSISTENT.validateAndSet(operation,newModel) @TO@ MethodDeclaration@@public, void, MethodName:execute, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 4435 @LENGTH@ 47
---INS MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @TO@ ExpressionStatement@@MethodInvocation:PERSISTENT.validateAndSet(operation,newModel) @AT@ 4435 @LENGTH@ 46
------INS SimpleName@@Name:PERSISTENT @TO@ MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @AT@ 4435 @LENGTH@ 10
------INS SimpleName@@MethodName:validateAndSet:[operation, newModel] @TO@ MethodInvocation@@PERSISTENT.validateAndSet(operation,newModel) @AT@ 4446 @LENGTH@ 35
---------INS SimpleName@@operation @TO@ SimpleName@@MethodName:validateAndSet:[operation, newModel] @AT@ 4461 @LENGTH@ 9
---------INS SimpleName@@newModel @TO@ SimpleName@@MethodName:validateAndSet:[operation, newModel] @AT@ 4472 @LENGTH@ 8


DEL ExpressionStatement@@Assignment:transformers=FunctorUtils.copy(transformers) @AT@ 2232 @LENGTH@ 47
---DEL Assignment@@transformers=FunctorUtils.copy(transformers) @AT@ 2232 @LENGTH@ 46
------DEL SimpleName@@transformers @AT@ 2232 @LENGTH@ 12
------DEL Operator@@= @AT@ 2244 @LENGTH@ 1


UPD EnhancedForStatement@@for (Map.Entry<? extends K,? extends V> entry : map.entrySet()) {  put(index,entry.getKey(),entry.getValue());  index++;} @TO@ for (Map.Entry<? extends K,? extends V> entry : map.entrySet()) {  V old=put(index,entry.getKey(),entry.getValue());  if (old == null) {    index++;  } else {    index=indexOf(entry.getKey()) + 1;  }} @AT@ 8734 @LENGTH@ 155
---INS VariableDeclarationStatement@@V old=put(index,entry.getKey(),entry.getValue()); @TO@ EnhancedForStatement@@for (Map.Entry<? extends K,? extends V> entry : map.entrySet()) {  put(index,entry.getKey(),entry.getValue());  index++;} @AT@ 8813 @LENGTH@ 53
------INS SimpleType@@V @TO@ VariableDeclarationStatement@@V old=put(index,entry.getKey(),entry.getValue()); @AT@ 8813 @LENGTH@ 1
------INS VariableDeclarationFragment@@old=put(index,entry.getKey(),entry.getValue()) @TO@ VariableDeclarationStatement@@V old=put(index,entry.getKey(),entry.getValue()); @AT@ 8815 @LENGTH@ 50
---------MOV MethodInvocation@@put(index,entry.getKey(),entry.getValue()) @TO@ VariableDeclarationFragment@@old=put(index,entry.getKey(),entry.getValue()) @AT@ 8813 @LENGTH@ 44
---------INS SimpleName@@old @TO@ VariableDeclarationFragment@@old=put(index,entry.getKey(),entry.getValue()) @AT@ 8815 @LENGTH@ 3
---DEL ExpressionStatement@@MethodInvocation:put(index,entry.getKey(),entry.getValue()) @AT@ 8813 @LENGTH@ 45
---INS IfStatement@@if (old == null) {  index++;} else {  index=indexOf(entry.getKey()) + 1;} @TO@ EnhancedForStatement@@for (Map.Entry<? extends K,? extends V> entry : map.entrySet()) {  put(index,entry.getKey(),entry.getValue());  index++;} @AT@ 8879 @LENGTH@ 274
------INS InfixExpression@@old == null @TO@ IfStatement@@if (old == null) {  index++;} else {  index=indexOf(entry.getKey()) + 1;} @AT@ 8883 @LENGTH@ 11
---------INS SimpleName@@old @TO@ InfixExpression@@old == null @AT@ 8883 @LENGTH@ 3
---------INS Operator@@== @TO@ InfixExpression@@old == null @AT@ 8886 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@old == null @AT@ 8890 @LENGTH@ 4
------INS Block@@ThenBody:{  index++;} @TO@ IfStatement@@if (old == null) {  index++;} else {  index=indexOf(entry.getKey()) + 1;} @AT@ 8896 @LENGTH@ 103
---------MOV ExpressionStatement@@PostfixExpression:index++ @TO@ Block@@ThenBody:{  index++;} @AT@ 8871 @LENGTH@ 8
------INS Block@@ElseBody:{  index=indexOf(entry.getKey()) + 1;} @TO@ IfStatement@@if (old == null) {  index++;} else {  index=indexOf(entry.getKey()) + 1;} @AT@ 9005 @LENGTH@ 148
---------INS ExpressionStatement@@Assignment:index=indexOf(entry.getKey()) + 1 @TO@ Block@@ElseBody:{  index=indexOf(entry.getKey()) + 1;} @AT@ 9103 @LENGTH@ 36
------------INS Assignment@@index=indexOf(entry.getKey()) + 1 @TO@ ExpressionStatement@@Assignment:index=indexOf(entry.getKey()) + 1 @AT@ 9103 @LENGTH@ 35
---------------INS SimpleName@@index @TO@ Assignment@@index=indexOf(entry.getKey()) + 1 @AT@ 9103 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@index=indexOf(entry.getKey()) + 1 @AT@ 9108 @LENGTH@ 1
---------------INS InfixExpression@@indexOf(entry.getKey()) + 1 @TO@ Assignment@@index=indexOf(entry.getKey()) + 1 @AT@ 9111 @LENGTH@ 27
------------------INS MethodInvocation@@indexOf(entry.getKey()) @TO@ InfixExpression@@indexOf(entry.getKey()) + 1 @AT@ 9111 @LENGTH@ 23
---------------------INS SimpleName@@MethodName:indexOf:[entry.getKey()] @TO@ MethodInvocation@@indexOf(entry.getKey()) @AT@ 9111 @LENGTH@ 23
------------------------INS MethodInvocation@@entry.getKey() @TO@ SimpleName@@MethodName:indexOf:[entry.getKey()] @AT@ 9119 @LENGTH@ 14
---------------------------INS SimpleName@@Name:entry @TO@ MethodInvocation@@entry.getKey() @AT@ 9119 @LENGTH@ 5
---------------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@entry.getKey() @AT@ 9125 @LENGTH@ 8
------------------INS Operator@@+ @TO@ InfixExpression@@indexOf(entry.getKey()) + 1 @AT@ 9134 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@indexOf(entry.getKey()) + 1 @AT@ 9137 @LENGTH@ 1


UPD FieldDeclaration@@public, static, final, String, [NEWLINE=Util.getLineSeparator()] @TO@ public, static, final, String, [NEWLINE=Util.LINE_SEPARATOR] @AT@ 1597 @LENGTH@ 61
---UPD VariableDeclarationFragment@@NEWLINE=Util.getLineSeparator() @TO@ NEWLINE=Util.LINE_SEPARATOR @AT@ 1624 @LENGTH@ 33
------DEL MethodInvocation@@Util.getLineSeparator() @AT@ 1634 @LENGTH@ 23
---------DEL SimpleName@@Name:Util @AT@ 1634 @LENGTH@ 4
---------DEL SimpleName@@MethodName:getLineSeparator:[] @AT@ 1639 @LENGTH@ 18
------INS QualifiedName@@Util.LINE_SEPARATOR @TO@ VariableDeclarationFragment@@NEWLINE=Util.getLineSeparator() @AT@ 1634 @LENGTH@ 19
---------INS SimpleName@@Util @TO@ QualifiedName@@Util.LINE_SEPARATOR @AT@ 1634 @LENGTH@ 4
---------INS SimpleName@@LINE_SEPARATOR @TO@ QualifiedName@@Util.LINE_SEPARATOR @AT@ 1639 @LENGTH@ 14


UPD MethodDeclaration@@public, Object, MethodName:getBean, NoSuchBeanException,  @TO@ public, synchronized, Object, MethodName:getBean, NoSuchBeanException,  @AT@ 2135 @LENGTH@ 940
---INS Modifier@@synchronized @TO@ MethodDeclaration@@public, Object, MethodName:getBean, NoSuchBeanException,  @AT@ 2142 @LENGTH@ 12


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build()] @AT@ 3468 @LENGTH@ 307
---UPD VariableDeclarationFragment@@SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @TO@ SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 3514 @LENGTH@ 260
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setAllowExpression(true).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 3543 @LENGTH@ 231
---------INS MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @AT@ 3615 @LENGTH@ 337
------------INS ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @TO@ MethodInvocation@@MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @AT@ 3903 @LENGTH@ 48
---------------INS New@@new @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3903 @LENGTH@ 3
---------------INS SimpleType@@IntRangeValidator @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3907 @LENGTH@ 17
---------------INS PrefixExpression@@-65535 @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3925 @LENGTH@ 6
------------------INS Operator@@- @TO@ PrefixExpression@@-65535 @AT@ 3925 @LENGTH@ 1
------------------INS NumberLiteral@@65535 @TO@ PrefixExpression@@-65535 @AT@ 3926 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3933 @LENGTH@ 5
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3940 @LENGTH@ 4
---------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@IntRangeValidator[-65535, 65535, true, true] @AT@ 3946 @LENGTH@ 4
---------INS MethodInvocation@@MethodName:setAllowExpression:[true] @TO@ MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).build() @AT@ 3615 @LENGTH@ 261
------------INS BooleanLiteral@@true @TO@ MethodInvocation@@MethodName:setAllowExpression:[true] @AT@ 3871 @LENGTH@ 4


INS VariableDeclarationStatement@@final boolean useChunking=lineLength > 0 && chunkSeparatorLength > 0; @TO@ MethodDeclaration@@protected, voidMethodName:BaseNCodec, int unencodedBlockSize, int encodedBlockSize, int lineLength, int chunkSeparatorLength,  @AT@ 5800 @LENGTH@ 71
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final boolean useChunking=lineLength > 0 && chunkSeparatorLength > 0; @AT@ 5800 @LENGTH@ 5
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@final boolean useChunking=lineLength > 0 && chunkSeparatorLength > 0; @AT@ 5806 @LENGTH@ 7
---INS VariableDeclarationFragment@@useChunking=lineLength > 0 && chunkSeparatorLength > 0 @TO@ VariableDeclarationStatement@@final boolean useChunking=lineLength > 0 && chunkSeparatorLength > 0; @AT@ 5814 @LENGTH@ 56
------INS SimpleName@@useChunking @TO@ VariableDeclarationFragment@@useChunking=lineLength > 0 && chunkSeparatorLength > 0 @AT@ 5814 @LENGTH@ 11
------MOV InfixExpression@@lineLength > 0 && chunkSeparatorLength > 0 @TO@ VariableDeclarationFragment@@useChunking=lineLength > 0 && chunkSeparatorLength > 0 @AT@ 5818 @LENGTH@ 43


UPD CatchClause@@catch (ResourceAccessException e) {} @TO@ catch (Exception e) {} @AT@ 3058 @LENGTH@ 52
---UPD SingleVariableDeclaration@@ResourceAccessException e @TO@ Exception e @AT@ 3065 @LENGTH@ 25
------UPD SimpleType@@ResourceAccessException @TO@ Exception @AT@ 3065 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:lookup(parseName(name)) @TO@ MethodInvocation:lookupLink(parseName(name)) @AT@ 14842 @LENGTH@ 31
---UPD MethodInvocation@@lookup(parseName(name)) @TO@ lookupLink(parseName(name)) @AT@ 14849 @LENGTH@ 23
------UPD SimpleName@@MethodName:lookup:[parseName(name)] @TO@ MethodName:lookupLink:[parseName(name)] @AT@ 14849 @LENGTH@ 23


UPD IfStatement@@if (xmlLibDirName != null) {  libDirName=xmlLibDirName;} @TO@ if (xmlLibDirName != null) {  if (xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/') {    throw MESSAGES.rootAsLibraryDirectory();  }  libDirName=xmlLibDirName;} @AT@ 4477 @LENGTH@ 86
---UPD Block@@ThenBody:{  libDirName=xmlLibDirName;} @TO@ ThenBody:{  if (xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/') {    throw MESSAGES.rootAsLibraryDirectory();  }  libDirName=xmlLibDirName;} @AT@ 4504 @LENGTH@ 59
------INS IfStatement@@if (xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/') {  throw MESSAGES.rootAsLibraryDirectory();} @TO@ Block@@ThenBody:{  libDirName=xmlLibDirName;} @AT@ 4522 @LENGTH@ 147
---------INS InfixExpression@@xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/' @TO@ IfStatement@@if (xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/') {  throw MESSAGES.rootAsLibraryDirectory();} @AT@ 4526 @LENGTH@ 61
------------INS InfixExpression@@xmlLibDirName.length() == 1 @TO@ InfixExpression@@xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/' @AT@ 4526 @LENGTH@ 27
---------------INS MethodInvocation@@xmlLibDirName.length() @TO@ InfixExpression@@xmlLibDirName.length() == 1 @AT@ 4526 @LENGTH@ 22
------------------INS SimpleName@@Name:xmlLibDirName @TO@ MethodInvocation@@xmlLibDirName.length() @AT@ 4526 @LENGTH@ 13
------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@xmlLibDirName.length() @AT@ 4540 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@xmlLibDirName.length() == 1 @AT@ 4548 @LENGTH@ 2
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@xmlLibDirName.length() == 1 @AT@ 4552 @LENGTH@ 1
------------INS Operator@@&& @TO@ InfixExpression@@xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/' @AT@ 4553 @LENGTH@ 2
------------INS InfixExpression@@xmlLibDirName.charAt(0) == '/' @TO@ InfixExpression@@xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/' @AT@ 4557 @LENGTH@ 30
---------------INS MethodInvocation@@xmlLibDirName.charAt(0) @TO@ InfixExpression@@xmlLibDirName.charAt(0) == '/' @AT@ 4557 @LENGTH@ 23
------------------INS SimpleName@@Name:xmlLibDirName @TO@ MethodInvocation@@xmlLibDirName.charAt(0) @AT@ 4557 @LENGTH@ 13
------------------INS SimpleName@@MethodName:charAt:[0] @TO@ MethodInvocation@@xmlLibDirName.charAt(0) @AT@ 4571 @LENGTH@ 9
---------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:charAt:[0] @AT@ 4578 @LENGTH@ 1
---------------INS Operator@@== @TO@ InfixExpression@@xmlLibDirName.charAt(0) == '/' @AT@ 4580 @LENGTH@ 2
---------------INS CharacterLiteral@@'/' @TO@ InfixExpression@@xmlLibDirName.charAt(0) == '/' @AT@ 4584 @LENGTH@ 3
---------INS Block@@ThenBody:{  throw MESSAGES.rootAsLibraryDirectory();} @TO@ IfStatement@@if (xmlLibDirName.length() == 1 && xmlLibDirName.charAt(0) == '/') {  throw MESSAGES.rootAsLibraryDirectory();} @AT@ 4589 @LENGTH@ 80
------------INS ThrowStatement@@MethodInvocation:MESSAGES.rootAsLibraryDirectory() @TO@ Block@@ThenBody:{  throw MESSAGES.rootAsLibraryDirectory();} @AT@ 4611 @LENGTH@ 40
---------------INS MethodInvocation@@MESSAGES.rootAsLibraryDirectory() @TO@ ThrowStatement@@MethodInvocation:MESSAGES.rootAsLibraryDirectory() @AT@ 4617 @LENGTH@ 33
------------------INS SimpleName@@Name:MESSAGES @TO@ MethodInvocation@@MESSAGES.rootAsLibraryDirectory() @AT@ 4617 @LENGTH@ 8
------------------INS SimpleName@@MethodName:rootAsLibraryDirectory:[] @TO@ MethodInvocation@@MESSAGES.rootAsLibraryDirectory() @AT@ 4626 @LENGTH@ 24


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup(LongRunningThreadsCheckTestCase.TestCaseSetup.class), public]LongRunningThreadsCheckTestCase, JcaMgmtBase @TO@ [@RunWith(Arquillian.class), @ServerSetup(LongRunningThreadsCheckTestCase.TestCaseSetup.class), @Ignore("causing an osgi error during server reload"), public]LongRunningThreadsCheckTestCase, JcaMgmtBase @AT@ 2579 @LENGTH@ 6457
---INS SingleMemberAnnotation@@@Ignore("causing an osgi error during server reload") @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup(LongRunningThreadsCheckTestCase.TestCaseSetup.class), public]LongRunningThreadsCheckTestCase, JcaMgmtBase @AT@ 2672 @LENGTH@ 53


INS IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @TO@ MethodDeclaration@@public, static, void, MethodName:createRootRegistry, final ManagementResourceRegistration root, final HostControllerEnvironment environment, final IgnoredDomainResourceRegistry ignoredDomainResourceRegistry, final HostModelRegistrar hostModelRegistrar, ProcessType processType,  @AT@ 4684 @LENGTH@ 247
---INS InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @TO@ IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4688 @LENGTH@ 102
------INS MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4688 @LENGTH@ 96
---------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @AT@ 4688 @LENGTH@ 4
---------INS SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @TO@ MethodInvocation@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) @AT@ 4693 @LENGTH@ 91
------------INS QualifiedName@@PathAddress.EMPTY_ADDRESS @TO@ SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @AT@ 4711 @LENGTH@ 25
---------------INS SimpleName@@PathAddress @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 4711 @LENGTH@ 11
---------------INS SimpleName@@EMPTY_ADDRESS @TO@ QualifiedName@@PathAddress.EMPTY_ADDRESS @AT@ 4723 @LENGTH@ 13
------------INS MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @TO@ SimpleName@@MethodName:getOperationEntry:[PathAddress.EMPTY_ADDRESS, ValidateOperationHandler.DEFINITION.getName()] @AT@ 4738 @LENGTH@ 45
---------------INS QualifiedName@@Name:ValidateOperationHandler.DEFINITION @TO@ MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @AT@ 4738 @LENGTH@ 35
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@ValidateOperationHandler.DEFINITION.getName() @AT@ 4774 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4784 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null @AT@ 4786 @LENGTH@ 4
---INS Block@@ThenBody:{  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @TO@ IfStatement@@if (root.getOperationEntry(PathAddress.EMPTY_ADDRESS,ValidateOperationHandler.DEFINITION.getName()) == null) {  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4791 @LENGTH@ 140
------INS ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @TO@ Block@@ThenBody:{  root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE);} @AT@ 4819 @LENGTH@ 102
---------INS MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4819 @LENGTH@ 101
------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4819 @LENGTH@ 4
------------INS SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @TO@ MethodInvocation@@root.registerOperationHandler(ValidateOperationHandler.DEFINITION,ValidateOperationHandler.INSTANCE) @AT@ 4824 @LENGTH@ 96
---------------INS QualifiedName@@ValidateOperationHandler.DEFINITION @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @AT@ 4849 @LENGTH@ 35
------------------INS SimpleName@@ValidateOperationHandler @TO@ QualifiedName@@ValidateOperationHandler.DEFINITION @AT@ 4849 @LENGTH@ 24
------------------INS SimpleName@@DEFINITION @TO@ QualifiedName@@ValidateOperationHandler.DEFINITION @AT@ 4874 @LENGTH@ 10
---------------INS QualifiedName@@ValidateOperationHandler.INSTANCE @TO@ SimpleName@@MethodName:registerOperationHandler:[ValidateOperationHandler.DEFINITION, ValidateOperationHandler.INSTANCE] @AT@ 4886 @LENGTH@ 33
------------------INS SimpleName@@ValidateOperationHandler @TO@ QualifiedName@@ValidateOperationHandler.INSTANCE @AT@ 4886 @LENGTH@ 24
------------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@ValidateOperationHandler.INSTANCE @AT@ 4911 @LENGTH@ 8


INS MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @TO@ TypeDeclaration@@[public]OperationFormat, [CommandLineFormat] @AT@ 1668 @LENGTH@ 77
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1668 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1675 @LENGTH@ 7
---INS SimpleName@@MethodName:isPropertySeparator @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1683 @LENGTH@ 19
---INS SingleVariableDeclaration@@char ch @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1703 @LENGTH@ 7
------INS PrimitiveType@@char @TO@ SingleVariableDeclaration@@char ch @AT@ 1703 @LENGTH@ 4
------INS SimpleName@@ch @TO@ SingleVariableDeclaration@@char ch @AT@ 1708 @LENGTH@ 2
---INS ReturnStatement@@InfixExpression:ch == ',' @TO@ MethodDeclaration@@public, boolean, MethodName:isPropertySeparator, char ch,  @AT@ 1722 @LENGTH@ 17
------INS InfixExpression@@ch == ',' @TO@ ReturnStatement@@InfixExpression:ch == ',' @AT@ 1729 @LENGTH@ 9
---------INS SimpleName@@ch @TO@ InfixExpression@@ch == ',' @AT@ 1729 @LENGTH@ 2
---------INS Operator@@== @TO@ InfixExpression@@ch == ',' @AT@ 1731 @LENGTH@ 2
---------INS CharacterLiteral@@',' @TO@ InfixExpression@@ch == ',' @AT@ 1735 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("[1, 2, 3, 4, 3, 4]",processor.getProcessed().toString()) @TO@ MethodInvocation:assertEquals("[1, 2, 3, 4, 3, 4, 4]",processor.getProcessed().toString()) @AT@ 25804 @LENGTH@ 72
---UPD MethodInvocation@@assertEquals("[1, 2, 3, 4, 3, 4]",processor.getProcessed().toString()) @TO@ assertEquals("[1, 2, 3, 4, 3, 4, 4]",processor.getProcessed().toString()) @AT@ 25804 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertEquals:["[1, 2, 3, 4, 3, 4]", processor.getProcessed().toString()] @TO@ MethodName:assertEquals:["[1, 2, 3, 4, 3, 4, 4]", processor.getProcessed().toString()] @AT@ 25804 @LENGTH@ 71
---------UPD StringLiteral@@"[1, 2, 3, 4, 3, 4]" @TO@ "[1, 2, 3, 4, 3, 4, 4]" @AT@ 25817 @LENGTH@ 20


INS FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @TO@ TypeDeclaration@@[private]SecondException, Exception @AT@ 1294 @LENGTH@ 48
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1294 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1302 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1309 @LENGTH@ 5
---INS PrimitiveType@@long @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1315 @LENGTH@ 4
---INS VariableDeclarationFragment@@serialVersionUID=1L @TO@ FieldDeclaration@@private, static, final, long, [serialVersionUID=1L] @AT@ 1320 @LENGTH@ 21
------INS SimpleName@@serialVersionUID @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1320 @LENGTH@ 16
------INS NumberLiteral@@1L @TO@ VariableDeclarationFragment@@serialVersionUID=1L @AT@ 1339 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @TO@ MethodDeclaration@@public, void, MethodName:testPatch, Exception,  @AT@ 8206 @LENGTH@ 45
---INS MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @TO@ ExpressionStatement@@MethodInvocation:expect(bundle.getBundleId()).andReturn(123L) @AT@ 8206 @LENGTH@ 44
------INS MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 8206 @LENGTH@ 28
---------INS MethodInvocation@@bundle.getBundleId() @TO@ MethodInvocation@@MethodName:expect:[bundle.getBundleId()] @AT@ 8213 @LENGTH@ 20
------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 8213 @LENGTH@ 6
------------INS SimpleName@@MethodName:getBundleId:[] @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 8220 @LENGTH@ 13
------INS SimpleName@@MethodName:andReturn:[123L] @TO@ MethodInvocation@@expect(bundle.getBundleId()).andReturn(123L) @AT@ 8235 @LENGTH@ 15
---------INS NumberLiteral@@123L @TO@ SimpleName@@MethodName:andReturn:[123L] @AT@ 8245 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Created query " + query.getQueryObject()) @TO@ MethodInvocation:LOG.debug("Created query " + query) @AT@ 5474 @LENGTH@ 53
---UPD MethodInvocation@@LOG.debug("Created query " + query.getQueryObject()) @TO@ LOG.debug("Created query " + query) @AT@ 5474 @LENGTH@ 52
------UPD SimpleName@@MethodName:debug:["Created query " + query.getQueryObject()] @TO@ MethodName:debug:["Created query " + query] @AT@ 5478 @LENGTH@ 48
---------UPD InfixExpression@@"Created query " + query.getQueryObject() @TO@ "Created query " + query @AT@ 5484 @LENGTH@ 41
------------DEL MethodInvocation@@query.getQueryObject() @AT@ 5503 @LENGTH@ 22
---------------DEL SimpleName@@Name:query @AT@ 5503 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:getQueryObject:[] @AT@ 5509 @LENGTH@ 16
------------INS SimpleName@@query @TO@ InfixExpression@@"Created query " + query.getQueryObject() @AT@ 5503 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @TO@ TypeDeclaration@@[public]AliasResourceTestCase, AbstractControllerTestBase @AT@ 10190 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10190 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10197 @LENGTH@ 4
---INS SimpleName@@MethodName:testAliasedAttributes @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10202 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAliasedAttributes, Exception,  @AT@ 10233 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:enterState('\\',EscapeCharacterState.INSTANCE) @AT@ 2287 @LENGTH@ 48
---DEL MethodInvocation@@enterState('\\',EscapeCharacterState.INSTANCE) @AT@ 2287 @LENGTH@ 47
------DEL SimpleName@@MethodName:enterState:['\\', EscapeCharacterState.INSTANCE] @AT@ 2287 @LENGTH@ 47
---------DEL CharacterLiteral@@'\\' @AT@ 2298 @LENGTH@ 4
---------DEL QualifiedName@@EscapeCharacterState.INSTANCE @AT@ 2304 @LENGTH@ 29
------------DEL SimpleName@@EscapeCharacterState @AT@ 2304 @LENGTH@ 20
------------DEL SimpleName@@INSTANCE @AT@ 2325 @LENGTH@ 8


UPD VariableDeclarationStatement@@TransactionErrorHandler answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),transactionTemplate,getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorServiceRef(),getRollbackLoggingLevel()); @TO@ TransactionErrorHandler answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),transactionTemplate,getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorService(routeContext.getCamelContext()),getRollbackLoggingLevel()); @AT@ 5227 @LENGTH@ 340
---UPD VariableDeclarationFragment@@answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),transactionTemplate,getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorServiceRef(),getRollbackLoggingLevel()) @TO@ answer=new TransactionErrorHandler(routeContext.getCamelContext(),processor,getLogger(),getOnRedelivery(),getRedeliveryPolicy(),getExceptionPolicyStrategy(),transactionTemplate,getRetryWhilePolicy(routeContext.getCamelContext()),getExecutorService(routeContext.getCamelContext()),getRollbackLoggingLevel()) @AT@ 5251 @LENGTH@ 315
------UPD ClassInstanceCreation@@TransactionErrorHandler[routeContext.getCamelContext(), processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getExceptionPolicyStrategy(), transactionTemplate, getRetryWhilePolicy(routeContext.getCamelContext()), getExecutorServiceRef(), getRollbackLoggingLevel()] @TO@ TransactionErrorHandler[routeContext.getCamelContext(), processor, getLogger(), getOnRedelivery(), getRedeliveryPolicy(), getExceptionPolicyStrategy(), transactionTemplate, getRetryWhilePolicy(routeContext.getCamelContext()), getExecutorService(routeContext.getCamelContext()), getRollbackLoggingLevel()] @AT@ 5260 @LENGTH@ 306
---------UPD MethodInvocation@@MethodName:getExecutorServiceRef:[] @TO@ getExecutorService(routeContext.getCamelContext()) @AT@ 5515 @LENGTH@ 23
------------INS SimpleName@@MethodName:getExecutorService:[routeContext.getCamelContext()] @TO@ MethodInvocation@@MethodName:getExecutorServiceRef:[] @AT@ 5515 @LENGTH@ 50
---------------INS MethodInvocation@@routeContext.getCamelContext() @TO@ SimpleName@@MethodName:getExecutorService:[routeContext.getCamelContext()] @AT@ 5534 @LENGTH@ 30
------------------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 5534 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@routeContext.getCamelContext() @AT@ 5547 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.FILE_LOCK_FILE_GOT,acquired) @TO@ MethodDeclaration@@public, boolean, MethodName:acquireExclusiveReadLock, GenericFileOperations<File> operations, GenericFile<File> file, Exchange exchange, Exception,  @AT@ 2582 @LENGTH@ 60
---INS MethodInvocation@@exchange.setProperty(Exchange.FILE_LOCK_FILE_GOT,acquired) @TO@ ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.FILE_LOCK_FILE_GOT,acquired) @AT@ 2582 @LENGTH@ 59
------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.setProperty(Exchange.FILE_LOCK_FILE_GOT,acquired) @AT@ 2582 @LENGTH@ 8
------INS SimpleName@@MethodName:setProperty:[Exchange.FILE_LOCK_FILE_GOT, acquired] @TO@ MethodInvocation@@exchange.setProperty(Exchange.FILE_LOCK_FILE_GOT,acquired) @AT@ 2591 @LENGTH@ 50
---------INS QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @TO@ SimpleName@@MethodName:setProperty:[Exchange.FILE_LOCK_FILE_GOT, acquired] @AT@ 2603 @LENGTH@ 27
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @AT@ 2603 @LENGTH@ 8
------------INS SimpleName@@FILE_LOCK_FILE_GOT @TO@ QualifiedName@@Exchange.FILE_LOCK_FILE_GOT @AT@ 2612 @LENGTH@ 18
---------INS SimpleName@@acquired @TO@ SimpleName@@MethodName:setProperty:[Exchange.FILE_LOCK_FILE_GOT, acquired] @AT@ 2632 @LENGTH@ 8


UPD FieldDeclaration@@public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build()] @TO@ public, static, final, SimpleAttributeDefinition, [SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build()] @AT@ 4291 @LENGTH@ 435
---UPD VariableDeclarationFragment@@SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build() @TO@ SOCKET_BINDING_PORT_OFFSET=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 4337 @LENGTH@ 388
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new ModelTypeValidator(ModelType.INT,true,true)).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.SOCKET_BINDING_PORT_OFFSET,ModelType.INT,true).setAllowExpression(true).setDefaultValue(new ModelNode(0)).setXmlName(Attribute.PORT_OFFSET.getLocalName()).setValidator(new IntRangeValidator(-65535,65535,true,true)).build() @AT@ 4366 @LENGTH@ 359
---------UPD MethodInvocation@@MethodName:setValidator:[new ModelTypeValidator(ModelType.INT,true,true)] @TO@ MethodName:setValidator:[new IntRangeValidator(-65535,65535,true,true)] @AT@ 4366 @LENGTH@ 338
------------UPD ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @TO@ IntRangeValidator[-65535, 65535, true, true] @AT@ 4654 @LENGTH@ 49
---------------UPD SimpleType@@ModelTypeValidator @TO@ IntRangeValidator @AT@ 4658 @LENGTH@ 18
---------------DEL QualifiedName@@ModelType.INT @AT@ 4677 @LENGTH@ 13
------------------DEL SimpleName@@ModelType @AT@ 4677 @LENGTH@ 9
------------------DEL SimpleName@@INT @AT@ 4687 @LENGTH@ 3
---------------INS PrefixExpression@@-65535 @TO@ ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @AT@ 4748 @LENGTH@ 6
------------------INS Operator@@- @TO@ PrefixExpression@@-65535 @AT@ 4748 @LENGTH@ 1
------------------INS NumberLiteral@@65535 @TO@ PrefixExpression@@-65535 @AT@ 4749 @LENGTH@ 5
---------------INS NumberLiteral@@65535 @TO@ ClassInstanceCreation@@ModelTypeValidator[ModelType.INT, true, true] @AT@ 4756 @LENGTH@ 5


UPD MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @TO@ public, void, MethodName:doHandle, ParsingContext ctx, CommandFormatException,  @AT@ 2052 @LENGTH@ 532
---UPD SimpleName@@MethodName:handle @TO@ MethodName:doHandle @AT@ 2064 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("jetty:http://0.0.0.0:" + getPort() + "/myservice").delay(1000).transform(constant("Bye World")).to("mock:result") @TO@ MethodInvocation:fromF("jetty:http://0.0.0.0:%s/myservice",getPort()).delay(1000).transform(constant("Bye World")).to("mock:result") @AT@ 3252 @LENGTH@ 183
---UPD MethodInvocation@@from("jetty:http://0.0.0.0:" + getPort() + "/myservice").delay(1000).transform(constant("Bye World")).to("mock:result") @TO@ fromF("jetty:http://0.0.0.0:%s/myservice",getPort()).delay(1000).transform(constant("Bye World")).to("mock:result") @AT@ 3252 @LENGTH@ 182
------UPD MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice"] @TO@ MethodName:fromF:["jetty:http://0.0.0.0:%s/myservice", getPort()] @AT@ 3252 @LENGTH@ 56
---------DEL InfixExpression@@"jetty:http://0.0.0.0:" + getPort() + "/myservice" @AT@ 3257 @LENGTH@ 50
------------DEL StringLiteral@@"jetty:http://0.0.0.0:" @AT@ 3257 @LENGTH@ 23
------------DEL Operator@@+ @AT@ 3280 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 3283 @LENGTH@ 9
------------DEL StringLiteral@@"/myservice" @AT@ 3295 @LENGTH@ 12
---------INS StringLiteral@@"jetty:http://0.0.0.0:%s/myservice" @TO@ MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice"] @AT@ 3258 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:getPort:[] @TO@ MethodInvocation@@MethodName:from:["jetty:http://0.0.0.0:" + getPort() + "/myservice"] @AT@ 3295 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new ChainedTransformer<T>(transformers) @TO@ ClassInstanceCreation:new ChainedTransformer<T>(FunctorUtils.copy(transformers)) @AT@ 2288 @LENGTH@ 47
---UPD ClassInstanceCreation@@ChainedTransformer<T>[transformers] @TO@ ChainedTransformer<T>[FunctorUtils.copy(transformers)] @AT@ 2295 @LENGTH@ 39
------MOV MethodInvocation@@FunctorUtils.copy(transformers) @TO@ ClassInstanceCreation@@ChainedTransformer<T>[transformers] @AT@ 2247 @LENGTH@ 31
------DEL SimpleName@@transformers @AT@ 2321 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:SimpleAttributeDefinition, String name, String xmlName, final ModelNode defaultValue, final ModelType type, final boolean allowNull, final boolean allowExpression, final MeasurementUnit measurementUnit, final ParameterCorrector corrector, final ParameterValidator validator, boolean validateNull, String[] alternatives, String[] requires, AttributeMarshaller attributeMarshaller, final boolean resourceOnly, AttributeAccess.Flag... flags,  @TO@ public, voidMethodName:SimpleAttributeDefinition, String name, String xmlName, final ModelNode defaultValue, final ModelType type, final boolean allowNull, final boolean allowExpression, final MeasurementUnit measurementUnit, final ParameterCorrector corrector, final ParameterValidator validator, boolean validateNull, String[] alternatives, String[] requires, AttributeMarshaller attributeMarshaller, final boolean resourceOnly, final DeprecationData deprecated, AttributeAccess.Flag... flags,  @AT@ 6742 @LENGTH@ 836
---INS SingleVariableDeclaration@@final DeprecationData deprecated @TO@ MethodDeclaration@@public, voidMethodName:SimpleAttributeDefinition, String name, String xmlName, final ModelNode defaultValue, final ModelType type, final boolean allowNull, final boolean allowExpression, final MeasurementUnit measurementUnit, final ParameterCorrector corrector, final ParameterValidator validator, boolean validateNull, String[] alternatives, String[] requires, AttributeMarshaller attributeMarshaller, final boolean resourceOnly, AttributeAccess.Flag... flags,  @AT@ 7273 @LENGTH@ 32
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 7273 @LENGTH@ 5
------INS SimpleType@@DeprecationData @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 7279 @LENGTH@ 15
------INS SimpleName@@deprecated @TO@ SingleVariableDeclaration@@final DeprecationData deprecated @AT@ 7295 @LENGTH@ 10
---UPD SuperConstructorInvocation@@super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @TO@ super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,attributeMarshaller,resourceOnly,deprecated,flags);
 @AT@ 7308 @LENGTH@ 264
------INS SimpleName@@deprecated @TO@ SuperConstructorInvocation@@super(name,xmlName,defaultValue,type,allowNull,allowExpression,measurementUnit,corrector,createParameterValidator(validator,type,allowNull,allowExpression),validateNull,alternatives,requires,attributeMarshaller,resourceOnly,flags);
 @AT@ 7605 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @TO@ TypeDeclaration@@[public, abstract]ModelTestModelControllerService, AbstractControllerService @AT@ 10705 @LENGTH@ 98
---MOV ExpressionStatement@@MethodInvocation:latch.countDown() @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10519 @LENGTH@ 18
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10705 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10715 @LENGTH@ 4
---INS SimpleName@@MethodName:bootThreadDone @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10720 @LENGTH@ 14
---INS ExpressionStatement@@SuperMethodInvocation:super.bootThreadDone() @TO@ MethodDeclaration@@protected, void, MethodName:bootThreadDone,  @AT@ 10747 @LENGTH@ 23
------INS SuperMethodInvocation@@super.bootThreadDone() @TO@ ExpressionStatement@@SuperMethodInvocation:super.bootThreadDone() @AT@ 10747 @LENGTH@ 22
---------INS SimpleName@@MethodName:bootThreadDone:[] @TO@ SuperMethodInvocation@@super.bootThreadDone() @AT@ 10753 @LENGTH@ 14


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build()] @TO@ public, static, final, AttributeDefinition, [NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build()] @AT@ 6897 @LENGTH@ 240
---UPD VariableDeclarationFragment@@NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build() @TO@ NAMESPACES=new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build() @AT@ 6937 @LENGTH@ 199
------UPD MethodInvocation@@new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()).build() @TO@ new SimpleMapAttributeDefinition.Builder(new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()).build() @AT@ 6950 @LENGTH@ 186
---------UPD ClassInstanceCreation@@SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build()] @TO@ SimpleMapAttributeDefinition.Builder[new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build()] @AT@ 6950 @LENGTH@ 165
------------UPD MethodInvocation@@new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,true).build() @TO@ new PropertiesAttributeDefinition.Builder(ModelDescriptionConstants.NAMESPACES,false).build() @AT@ 7008 @LENGTH@ 93
---------------UPD ClassInstanceCreation@@PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.NAMESPACES, true] @TO@ PropertiesAttributeDefinition.Builder[ModelDescriptionConstants.NAMESPACES, false] @AT@ 7008 @LENGTH@ 85
------------------UPD BooleanLiteral@@true @TO@ false @AT@ 7088 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:application-context.xml"), @Transactional, public]UserRepositoryTests,  @AT@ 22925 @LENGTH@ 359
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 22925 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 22932 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesIterableOfIdsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 22937 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:flushTestUsers() @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 22976 @LENGTH@ 17
------INS MethodInvocation@@MethodName:flushTestUsers:[] @TO@ ExpressionStatement@@MethodInvocation:flushTestUsers() @AT@ 22976 @LENGTH@ 16
---INS VariableDeclarationStatement@@Set<Integer> set=new HashSet<Integer>(); @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 22999 @LENGTH@ 42
------INS ParameterizedType@@Set<Integer> @TO@ VariableDeclarationStatement@@Set<Integer> set=new HashSet<Integer>(); @AT@ 22999 @LENGTH@ 12
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Integer> @AT@ 22999 @LENGTH@ 3
---------INS SimpleType@@Integer @TO@ ParameterizedType@@Set<Integer> @AT@ 23003 @LENGTH@ 7
------INS VariableDeclarationFragment@@set=new HashSet<Integer>() @TO@ VariableDeclarationStatement@@Set<Integer> set=new HashSet<Integer>(); @AT@ 23012 @LENGTH@ 28
---------INS SimpleName@@set @TO@ VariableDeclarationFragment@@set=new HashSet<Integer>() @AT@ 23012 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashSet<Integer>[] @TO@ VariableDeclarationFragment@@set=new HashSet<Integer>() @AT@ 23018 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<Integer>[] @AT@ 23018 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<Integer> @TO@ ClassInstanceCreation@@HashSet<Integer>[] @AT@ 23022 @LENGTH@ 16
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<Integer> @AT@ 23022 @LENGTH@ 7
---------------INS SimpleType@@Integer @TO@ ParameterizedType@@HashSet<Integer> @AT@ 23030 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:set.add(firstUser.getId()) @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 23045 @LENGTH@ 27
------INS MethodInvocation@@set.add(firstUser.getId()) @TO@ ExpressionStatement@@MethodInvocation:set.add(firstUser.getId()) @AT@ 23045 @LENGTH@ 26
---------INS SimpleName@@Name:set @TO@ MethodInvocation@@set.add(firstUser.getId()) @AT@ 23045 @LENGTH@ 3
---------INS SimpleName@@MethodName:add:[firstUser.getId()] @TO@ MethodInvocation@@set.add(firstUser.getId()) @AT@ 23049 @LENGTH@ 22
------------INS MethodInvocation@@firstUser.getId() @TO@ SimpleName@@MethodName:add:[firstUser.getId()] @AT@ 23053 @LENGTH@ 17
---------------INS SimpleName@@Name:firstUser @TO@ MethodInvocation@@firstUser.getId() @AT@ 23053 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@firstUser.getId() @AT@ 23063 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:set.add(secondUser.getId()) @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 23076 @LENGTH@ 28
------INS MethodInvocation@@set.add(secondUser.getId()) @TO@ ExpressionStatement@@MethodInvocation:set.add(secondUser.getId()) @AT@ 23076 @LENGTH@ 27
---------INS SimpleName@@Name:set @TO@ MethodInvocation@@set.add(secondUser.getId()) @AT@ 23076 @LENGTH@ 3
---------INS SimpleName@@MethodName:add:[secondUser.getId()] @TO@ MethodInvocation@@set.add(secondUser.getId()) @AT@ 23080 @LENGTH@ 23
------------INS MethodInvocation@@secondUser.getId() @TO@ SimpleName@@MethodName:add:[secondUser.getId()] @AT@ 23084 @LENGTH@ 18
---------------INS SimpleName@@Name:secondUser @TO@ MethodInvocation@@secondUser.getId() @AT@ 23084 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@secondUser.getId() @AT@ 23095 @LENGTH@ 7
---INS VariableDeclarationStatement@@Iterable<User> result=repository.findAll(set); @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 23110 @LENGTH@ 48
------INS ParameterizedType@@Iterable<User> @TO@ VariableDeclarationStatement@@Iterable<User> result=repository.findAll(set); @AT@ 23110 @LENGTH@ 14
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<User> @AT@ 23110 @LENGTH@ 8
---------INS SimpleType@@User @TO@ ParameterizedType@@Iterable<User> @AT@ 23119 @LENGTH@ 4
------INS VariableDeclarationFragment@@result=repository.findAll(set) @TO@ VariableDeclarationStatement@@Iterable<User> result=repository.findAll(set); @AT@ 23125 @LENGTH@ 32
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findAll(set) @AT@ 23125 @LENGTH@ 6
---------INS MethodInvocation@@repository.findAll(set) @TO@ VariableDeclarationFragment@@result=repository.findAll(set) @AT@ 23134 @LENGTH@ 23
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(set) @AT@ 23134 @LENGTH@ 10
------------INS SimpleName@@MethodName:findAll:[set] @TO@ MethodInvocation@@repository.findAll(set) @AT@ 23145 @LENGTH@ 12
---------------INS SimpleName@@set @TO@ SimpleName@@MethodName:findAll:[set] @AT@ 23153 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(result,is(Matchers.<User>iterableWithSize(2))) @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 23164 @LENGTH@ 60
------INS MethodInvocation@@assertThat(result,is(Matchers.<User>iterableWithSize(2))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,is(Matchers.<User>iterableWithSize(2))) @AT@ 23164 @LENGTH@ 59
---------INS SimpleName@@MethodName:assertThat:[result, is(Matchers.<User>iterableWithSize(2))] @TO@ MethodInvocation@@assertThat(result,is(Matchers.<User>iterableWithSize(2))) @AT@ 23164 @LENGTH@ 59
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, is(Matchers.<User>iterableWithSize(2))] @AT@ 23175 @LENGTH@ 6
------------INS MethodInvocation@@is(Matchers.<User>iterableWithSize(2)) @TO@ SimpleName@@MethodName:assertThat:[result, is(Matchers.<User>iterableWithSize(2))] @AT@ 23183 @LENGTH@ 39
---------------INS SimpleName@@MethodName:is:[Matchers.<User>iterableWithSize(2)] @TO@ MethodInvocation@@is(Matchers.<User>iterableWithSize(2)) @AT@ 23183 @LENGTH@ 39
------------------INS MethodInvocation@@Matchers.<User>iterableWithSize(2) @TO@ SimpleName@@MethodName:is:[Matchers.<User>iterableWithSize(2)] @AT@ 23186 @LENGTH@ 35
---------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.<User>iterableWithSize(2) @AT@ 23186 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:iterableWithSize:[2] @TO@ MethodInvocation@@Matchers.<User>iterableWithSize(2) @AT@ 23202 @LENGTH@ 19
------------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:iterableWithSize:[2] @AT@ 23219 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[Matchers.<User>iterableWithSize(2)] @TO@ MethodInvocation@@is(Matchers.<User>iterableWithSize(2)) @AT@ 23183 @LENGTH@ 39
------------------INS MethodInvocation@@Matchers.<User>iterableWithSize(2) @TO@ SimpleName@@MethodName:is:[Matchers.<User>iterableWithSize(2)] @AT@ 23186 @LENGTH@ 35
---------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.<User>iterableWithSize(2) @AT@ 23186 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:iterableWithSize:[2] @TO@ MethodInvocation@@Matchers.<User>iterableWithSize(2) @AT@ 23202 @LENGTH@ 19
------------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:iterableWithSize:[2] @AT@ 23219 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @TO@ MethodDeclaration@@public, void, MethodName:handlesIterableOfIdsCorrectly,  @AT@ 23228 @LENGTH@ 52
------INS MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,hasItems(firstUser,secondUser)) @AT@ 23228 @LENGTH@ 51
---------INS SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @TO@ MethodInvocation@@assertThat(result,hasItems(firstUser,secondUser)) @AT@ 23228 @LENGTH@ 51
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 23239 @LENGTH@ 6
------------INS MethodInvocation@@hasItems(firstUser,secondUser) @TO@ SimpleName@@MethodName:assertThat:[result, hasItems(firstUser,secondUser)] @AT@ 23247 @LENGTH@ 31
---------------INS SimpleName@@MethodName:hasItems:[firstUser, secondUser] @TO@ MethodInvocation@@hasItems(firstUser,secondUser) @AT@ 23247 @LENGTH@ 31
------------------INS SimpleName@@firstUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 23256 @LENGTH@ 9
------------------INS SimpleName@@secondUser @TO@ SimpleName@@MethodName:hasItems:[firstUser, secondUser] @AT@ 23267 @LENGTH@ 10


INS MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @TO@ TypeDeclaration@@[public]XADataSourceAddCompositeHandler, ResourceCompositeOperationHandler[OperationCommandWithDescription] @AT@ 2348 @LENGTH@ 163
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2348 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2358 @LENGTH@ 4
---INS SimpleName@@MethodName:recognizeArguments @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2363 @LENGTH@ 18
---INS SingleVariableDeclaration@@CommandContext ctx @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2382 @LENGTH@ 18
------INS SimpleType@@CommandContext @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 2382 @LENGTH@ 14
------INS SimpleName@@ctx @TO@ SingleVariableDeclaration@@CommandContext ctx @AT@ 2397 @LENGTH@ 3
---INS SimpleType@@CommandFormatException @TO@ MethodDeclaration@@protected, void, MethodName:recognizeArguments, CommandContext ctx, CommandFormatException,  @AT@ 2409 @LENGTH@ 22


INS MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @TO@ TypeDeclaration@@[public]ProductConfig, [Serializable] @AT@ 3014 @LENGTH@ 221
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3014 @LENGTH@ 6
---INS SimpleName@@MethodName:ProductConfig @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3021 @LENGTH@ 13
---INS SingleVariableDeclaration@@final String productName @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3035 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String productName @AT@ 3035 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String productName @AT@ 3041 @LENGTH@ 6
------INS SimpleName@@productName @TO@ SingleVariableDeclaration@@final String productName @AT@ 3048 @LENGTH@ 11
---INS SingleVariableDeclaration@@final String productVersion @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3061 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3061 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3067 @LENGTH@ 6
------INS SimpleName@@productVersion @TO@ SingleVariableDeclaration@@final String productVersion @AT@ 3074 @LENGTH@ 14
---INS SingleVariableDeclaration@@final String consoleSlot @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3090 @LENGTH@ 24
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3090 @LENGTH@ 5
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3096 @LENGTH@ 6
------INS SimpleName@@consoleSlot @TO@ SingleVariableDeclaration@@final String consoleSlot @AT@ 3103 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:this.name=productName @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3126 @LENGTH@ 24
------INS Assignment@@this.name=productName @TO@ ExpressionStatement@@Assignment:this.name=productName @AT@ 3126 @LENGTH@ 23
---------INS FieldAccess@@this.name @TO@ Assignment@@this.name=productName @AT@ 3126 @LENGTH@ 9
------------INS ThisExpression@@this @TO@ FieldAccess@@this.name @AT@ 3126 @LENGTH@ 4
------------INS SimpleName@@name @TO@ FieldAccess@@this.name @AT@ 3131 @LENGTH@ 4
---------INS Operator@@= @TO@ Assignment@@this.name=productName @AT@ 3135 @LENGTH@ 1
---------INS SimpleName@@productName @TO@ Assignment@@this.name=productName @AT@ 3138 @LENGTH@ 11
---INS ExpressionStatement@@Assignment:this.version=productVersion @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3159 @LENGTH@ 30
------INS Assignment@@this.version=productVersion @TO@ ExpressionStatement@@Assignment:this.version=productVersion @AT@ 3159 @LENGTH@ 29
---------INS FieldAccess@@this.version @TO@ Assignment@@this.version=productVersion @AT@ 3159 @LENGTH@ 12
------------INS ThisExpression@@this @TO@ FieldAccess@@this.version @AT@ 3159 @LENGTH@ 4
------------INS SimpleName@@version @TO@ FieldAccess@@this.version @AT@ 3164 @LENGTH@ 7
---------INS Operator@@= @TO@ Assignment@@this.version=productVersion @AT@ 3171 @LENGTH@ 1
---------INS SimpleName@@productVersion @TO@ Assignment@@this.version=productVersion @AT@ 3174 @LENGTH@ 14
---INS ExpressionStatement@@Assignment:this.consoleSlot=consoleSlot @TO@ MethodDeclaration@@public, voidMethodName:ProductConfig, final String productName, final String productVersion, final String consoleSlot,  @AT@ 3198 @LENGTH@ 31
------INS Assignment@@this.consoleSlot=consoleSlot @TO@ ExpressionStatement@@Assignment:this.consoleSlot=consoleSlot @AT@ 3198 @LENGTH@ 30
---------INS FieldAccess@@this.consoleSlot @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3198 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.consoleSlot @AT@ 3198 @LENGTH@ 4
------------INS SimpleName@@consoleSlot @TO@ FieldAccess@@this.consoleSlot @AT@ 3203 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3214 @LENGTH@ 1
---------INS SimpleName@@consoleSlot @TO@ Assignment@@this.consoleSlot=consoleSlot @AT@ 3217 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("NORMAL",TestUtils.readField("dataPolicy",fb)) @TO@ MethodInvocation:assertNull(TestUtils.readField("dataPolicy",fb)) @AT@ 2280 @LENGTH@ 62
---UPD MethodInvocation@@assertEquals("NORMAL",TestUtils.readField("dataPolicy",fb)) @TO@ assertNull(TestUtils.readField("dataPolicy",fb)) @AT@ 2280 @LENGTH@ 61
------UPD SimpleName@@MethodName:assertEquals:["NORMAL", TestUtils.readField("dataPolicy",fb)] @TO@ MethodName:assertNull:[TestUtils.readField("dataPolicy",fb)] @AT@ 2280 @LENGTH@ 61
---------DEL StringLiteral@@"NORMAL" @AT@ 2293 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:print, final Object object, IOException,  @TO@ public, void, MethodName:print, final Object value, IOException,  @AT@ 11732 @LENGTH@ 231
---UPD SingleVariableDeclaration@@final Object object @TO@ final Object value @AT@ 11750 @LENGTH@ 19
------UPD SimpleName@@object @TO@ value @AT@ 11763 @LENGTH@ 6
---UPD VariableDeclarationStatement@@final String value=object == null ? EMPTY : object.toString(); @TO@ final String strValue=value == null ? EMPTY : value.toString(); @AT@ 11844 @LENGTH@ 64
------UPD VariableDeclarationFragment@@value=object == null ? EMPTY : object.toString() @TO@ strValue=value == null ? EMPTY : value.toString() @AT@ 11857 @LENGTH@ 50
---------UPD SimpleName@@value @TO@ strValue @AT@ 11857 @LENGTH@ 5
---------UPD ConditionalExpression@@object == null ? EMPTY : object.toString() @TO@ value == null ? EMPTY : value.toString() @AT@ 11865 @LENGTH@ 42
------------UPD InfixExpression@@object == null @TO@ value == null @AT@ 11865 @LENGTH@ 14
---------------UPD SimpleName@@object @TO@ value @AT@ 11865 @LENGTH@ 6
------------UPD MethodInvocation@@object.toString() @TO@ value.toString() @AT@ 11890 @LENGTH@ 17
---------------UPD SimpleName@@Name:object @TO@ Name:value @AT@ 11890 @LENGTH@ 6
---UPD ExpressionStatement@@MethodInvocation:print(object,value,0,value.length()) @TO@ MethodInvocation:print(value,strValue,0,strValue.length()) @AT@ 11917 @LENGTH@ 40
------UPD MethodInvocation@@print(object,value,0,value.length()) @TO@ print(value,strValue,0,strValue.length()) @AT@ 11917 @LENGTH@ 39
---------UPD SimpleName@@MethodName:print:[object, value, 0, value.length()] @TO@ MethodName:print:[value, strValue, 0, strValue.length()] @AT@ 11917 @LENGTH@ 39
------------UPD SimpleName@@object @TO@ value @AT@ 11923 @LENGTH@ 6
------------UPD SimpleName@@value @TO@ strValue @AT@ 11931 @LENGTH@ 5
------------UPD MethodInvocation@@value.length() @TO@ strValue.length() @AT@ 11941 @LENGTH@ 14
---------------UPD SimpleName@@Name:value @TO@ Name:strValue @AT@ 11941 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @TO@ MethodDeclaration@@public, void, MethodName:doWriteFaultResponse, Message message, HttpServletResponse response, Exchange exchange, IOException,  @AT@ 11430 @LENGTH@ 52
---INS MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @TO@ ExpressionStatement@@MethodInvocation:message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 11430 @LENGTH@ 51
------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 11430 @LENGTH@ 7
------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @TO@ MethodInvocation@@message.setHeader(Exchange.HTTP_RESPONSE_CODE,500) @AT@ 11438 @LENGTH@ 43
---------INS QualifiedName@@Exchange.HTTP_RESPONSE_CODE @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 11448 @LENGTH@ 27
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 11448 @LENGTH@ 8
------------INS SimpleName@@HTTP_RESPONSE_CODE @TO@ QualifiedName@@Exchange.HTTP_RESPONSE_CODE @AT@ 11457 @LENGTH@ 18
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_RESPONSE_CODE, 500] @AT@ 11477 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:noLongerMissingServices.put(name,controller == null) @TO@ MethodInvocation:noLongerMissingServices.put(name,controller != null) @AT@ 8212 @LENGTH@ 54
---UPD MethodInvocation@@noLongerMissingServices.put(name,controller == null) @TO@ noLongerMissingServices.put(name,controller != null) @AT@ 8212 @LENGTH@ 53
------UPD SimpleName@@MethodName:put:[name, controller == null] @TO@ MethodName:put:[name, controller != null] @AT@ 8236 @LENGTH@ 29
---------UPD InfixExpression@@controller == null @TO@ controller != null @AT@ 8246 @LENGTH@ 18
------------UPD Operator@@== @TO@ != @AT@ 8256 @LENGTH@ 2


INS FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @TO@ TypeDeclaration@@[public, final]JdkJavaType,  @AT@ 4362 @LENGTH@ 71
---INS Modifier@@public @TO@ FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @AT@ 4362 @LENGTH@ 6
---INS Modifier@@static @TO@ FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @AT@ 4369 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @AT@ 4376 @LENGTH@ 5
---INS SimpleType@@JavaType @TO@ FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @AT@ 4382 @LENGTH@ 8
---INS VariableDeclarationFragment@@TIMESTAMP=new JavaType(Timestamp.class) @TO@ FieldDeclaration@@public, static, final, JavaType, [TIMESTAMP=new JavaType(Timestamp.class)] @AT@ 4391 @LENGTH@ 41
------INS SimpleName@@TIMESTAMP @TO@ VariableDeclarationFragment@@TIMESTAMP=new JavaType(Timestamp.class) @AT@ 4391 @LENGTH@ 9
------INS ClassInstanceCreation@@JavaType[Timestamp.class] @TO@ VariableDeclarationFragment@@TIMESTAMP=new JavaType(Timestamp.class) @AT@ 4403 @LENGTH@ 29
---------INS New@@new @TO@ ClassInstanceCreation@@JavaType[Timestamp.class] @AT@ 4403 @LENGTH@ 3
---------INS SimpleType@@JavaType @TO@ ClassInstanceCreation@@JavaType[Timestamp.class] @AT@ 4407 @LENGTH@ 8
---------INS TypeLiteral@@Timestamp.class @TO@ ClassInstanceCreation@@JavaType[Timestamp.class] @AT@ 4416 @LENGTH@ 15


UPD Block@@ThenBody:{  isUpdate=true;  for (  AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {    Object incomingVal;    if (null != (incomingVal=attrMeta.get(incoming))) {      attrMeta.set(incomingVal,entity);    }  }} @TO@ ThenBody:{  isUpdate=true;  List<AttributeMetadata> attrs=new ArrayList<AttributeMetadata>();  attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values());  attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values());  for (  AttributeMetadata attrMeta : attrs) {    Object incomingVal;    if (null != (incomingVal=attrMeta.get(incoming))) {      attrMeta.set(incomingVal,entity);    }  }} @AT@ 34500 @LENGTH@ 508
---UPD EnhancedForStatement@@for (AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {  Object incomingVal;  if (null != (incomingVal=attrMeta.get(incoming))) {    attrMeta.set(incomingVal,entity);  }} @TO@ for (AttributeMetadata attrMeta : attrs) {  Object incomingVal;  if (null != (incomingVal=attrMeta.get(incoming))) {    attrMeta.set(incomingVal,entity);  }} @AT@ 34570 @LENGTH@ 432
------DEL CastExpression@@(Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34603 @LENGTH@ 244
---------DEL ParameterizedType@@Collection<AttributeMetadata> @AT@ 34604 @LENGTH@ 29
------------DEL SimpleType@@Collection @AT@ 34604 @LENGTH@ 10
------------DEL SimpleType@@AttributeMetadata @AT@ 34615 @LENGTH@ 17
---------DEL MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34634 @LENGTH@ 213
------------DEL MethodInvocation@@MethodName:embeddedAttributes:[] @AT@ 34634 @LENGTH@ 125
------------DEL MethodInvocation@@MethodName:entityMetadata:[] @AT@ 34634 @LENGTH@ 25
------------DEL SimpleName@@Name:repoMeta @AT@ 34634 @LENGTH@ 8
------------DEL SimpleName@@MethodName:values:[] @AT@ 34839 @LENGTH@ 8
------INS SimpleName@@attrs @TO@ EnhancedForStatement@@for (AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {  Object incomingVal;  if (null != (incomingVal=attrMeta.get(incoming))) {    attrMeta.set(incomingVal,entity);  }} @AT@ 34829 @LENGTH@ 5
---INS VariableDeclarationStatement@@List<AttributeMetadata> attrs=new ArrayList<AttributeMetadata>(); @TO@ Block@@ThenBody:{  isUpdate=true;  for (  AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {    Object incomingVal;    if (null != (incomingVal=attrMeta.get(incoming))) {      attrMeta.set(incomingVal,entity);    }  }} @AT@ 34570 @LENGTH@ 67
------INS ParameterizedType@@List<AttributeMetadata> @TO@ VariableDeclarationStatement@@List<AttributeMetadata> attrs=new ArrayList<AttributeMetadata>(); @AT@ 34570 @LENGTH@ 23
---------INS SimpleType@@List @TO@ ParameterizedType@@List<AttributeMetadata> @AT@ 34570 @LENGTH@ 4
---------INS SimpleType@@AttributeMetadata @TO@ ParameterizedType@@List<AttributeMetadata> @AT@ 34575 @LENGTH@ 17
------INS VariableDeclarationFragment@@attrs=new ArrayList<AttributeMetadata>() @TO@ VariableDeclarationStatement@@List<AttributeMetadata> attrs=new ArrayList<AttributeMetadata>(); @AT@ 34594 @LENGTH@ 42
---------INS SimpleName@@attrs @TO@ VariableDeclarationFragment@@attrs=new ArrayList<AttributeMetadata>() @AT@ 34594 @LENGTH@ 5
---------INS ClassInstanceCreation@@ArrayList<AttributeMetadata>[] @TO@ VariableDeclarationFragment@@attrs=new ArrayList<AttributeMetadata>() @AT@ 34602 @LENGTH@ 34
------------INS New@@new @TO@ ClassInstanceCreation@@ArrayList<AttributeMetadata>[] @AT@ 34602 @LENGTH@ 3
------------INS ParameterizedType@@ArrayList<AttributeMetadata> @TO@ ClassInstanceCreation@@ArrayList<AttributeMetadata>[] @AT@ 34606 @LENGTH@ 28
---------------INS SimpleType@@ArrayList @TO@ ParameterizedType@@ArrayList<AttributeMetadata> @AT@ 34606 @LENGTH@ 9
---------------INS SimpleType@@AttributeMetadata @TO@ ParameterizedType@@ArrayList<AttributeMetadata> @AT@ 34616 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values()) @TO@ Block@@ThenBody:{  isUpdate=true;  for (  AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {    Object incomingVal;    if (null != (incomingVal=attrMeta.get(incoming))) {      attrMeta.set(incomingVal,entity);    }  }} @AT@ 34644 @LENGTH@ 70
------INS MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values()) @TO@ ExpressionStatement@@MethodInvocation:attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values()) @AT@ 34644 @LENGTH@ 69
---------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values()) @AT@ 34644 @LENGTH@ 5
---------INS SimpleName@@MethodName:addAll:[repoMeta.entityMetadata().embeddedAttributes().values()] @TO@ MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().embeddedAttributes().values()) @AT@ 34650 @LENGTH@ 63
------------INS MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @TO@ SimpleName@@MethodName:addAll:[repoMeta.entityMetadata().embeddedAttributes().values()] @AT@ 34657 @LENGTH@ 55
---------------INS MethodInvocation@@MethodName:embeddedAttributes:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34657 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:entityMetadata:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34657 @LENGTH@ 25
---------------INS SimpleName@@Name:repoMeta @TO@ MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34657 @LENGTH@ 8
---------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().embeddedAttributes().values() @AT@ 34704 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values()) @TO@ Block@@ThenBody:{  isUpdate=true;  for (  AttributeMetadata attrMeta : (Collection<AttributeMetadata>)repoMeta.entityMetadata().embeddedAttributes().values()) {    Object incomingVal;    if (null != (incomingVal=attrMeta.get(incoming))) {      attrMeta.set(incomingVal,entity);    }  }} @AT@ 34721 @LENGTH@ 68
------INS MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values()) @TO@ ExpressionStatement@@MethodInvocation:attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values()) @AT@ 34721 @LENGTH@ 67
---------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values()) @AT@ 34721 @LENGTH@ 5
---------INS SimpleName@@MethodName:addAll:[repoMeta.entityMetadata().linkedAttributes().values()] @TO@ MethodInvocation@@attrs.addAll(repoMeta.entityMetadata().linkedAttributes().values()) @AT@ 34727 @LENGTH@ 61
------------INS MethodInvocation@@repoMeta.entityMetadata().linkedAttributes().values() @TO@ SimpleName@@MethodName:addAll:[repoMeta.entityMetadata().linkedAttributes().values()] @AT@ 34734 @LENGTH@ 53
---------------INS MethodInvocation@@MethodName:linkedAttributes:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().linkedAttributes().values() @AT@ 34734 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:entityMetadata:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().linkedAttributes().values() @AT@ 34734 @LENGTH@ 25
---------------INS SimpleName@@Name:repoMeta @TO@ MethodInvocation@@repoMeta.entityMetadata().linkedAttributes().values() @AT@ 34734 @LENGTH@ 8
---------------INS SimpleName@@MethodName:values:[] @TO@ MethodInvocation@@repoMeta.entityMetadata().linkedAttributes().values() @AT@ 34779 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:EasyMock.expect(session.getTransacted()).andReturn(false) @TO@ MethodDeclaration@@public, void, MethodName:testReceiveAndExecuteWithCallbackReturningNull, Exception,  @AT@ 2998 @LENGTH@ 58
---INS MethodInvocation@@EasyMock.expect(session.getTransacted()).andReturn(false) @TO@ ExpressionStatement@@MethodInvocation:EasyMock.expect(session.getTransacted()).andReturn(false) @AT@ 2998 @LENGTH@ 57
------INS MethodInvocation@@MethodName:expect:[session.getTransacted()] @TO@ MethodInvocation@@EasyMock.expect(session.getTransacted()).andReturn(false) @AT@ 2998 @LENGTH@ 40
---------INS MethodInvocation@@session.getTransacted() @TO@ MethodInvocation@@MethodName:expect:[session.getTransacted()] @AT@ 3014 @LENGTH@ 23
------------INS SimpleName@@Name:session @TO@ MethodInvocation@@session.getTransacted() @AT@ 3014 @LENGTH@ 7
------------INS SimpleName@@MethodName:getTransacted:[] @TO@ MethodInvocation@@session.getTransacted() @AT@ 3022 @LENGTH@ 15
------INS SimpleName@@Name:EasyMock @TO@ MethodInvocation@@EasyMock.expect(session.getTransacted()).andReturn(false) @AT@ 2998 @LENGTH@ 8
------INS SimpleName@@MethodName:andReturn:[false] @TO@ MethodInvocation@@EasyMock.expect(session.getTransacted()).andReturn(false) @AT@ 3039 @LENGTH@ 16
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:andReturn:[false] @AT@ 3049 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong customer name",response.get(0).getName(),"Dan") @TO@ MethodInvocation:assertTrue("John is missing!",response.contains(new Customer(123,"John"))) @AT@ 5478 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals("Get a wrong customer name",response.get(0).getName(),"Dan") @TO@ assertTrue("John is missing!",response.contains(new Customer(123,"John"))) @AT@ 5478 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong customer name", response.get(0).getName(), "Dan"] @TO@ MethodName:assertTrue:["John is missing!", response.contains(new Customer(123,"John"))] @AT@ 5478 @LENGTH@ 75
---------UPD StringLiteral@@"Get a wrong customer name" @TO@ "John is missing!" @AT@ 5491 @LENGTH@ 27
---------UPD MethodInvocation@@response.get(0).getName() @TO@ response.contains(new Customer(123,"John")) @AT@ 5520 @LENGTH@ 25
------------DEL MethodInvocation@@MethodName:get:[0] @AT@ 5520 @LENGTH@ 15
---------------DEL NumberLiteral@@0 @AT@ 5533 @LENGTH@ 1
------------UPD SimpleName@@MethodName:getName:[] @TO@ MethodName:contains:[new Customer(123,"John")] @AT@ 5536 @LENGTH@ 9
---------------INS ClassInstanceCreation@@Customer[123, "John"] @TO@ SimpleName@@MethodName:getName:[] @AT@ 5513 @LENGTH@ 25
------------------INS New@@new @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5513 @LENGTH@ 3
------------------INS SimpleType@@Customer @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5517 @LENGTH@ 8
------------------INS NumberLiteral@@123 @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5526 @LENGTH@ 3
------------------INS StringLiteral@@"John" @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5531 @LENGTH@ 6
---------------INS ClassInstanceCreation@@Customer[123, "John"] @TO@ SimpleName@@MethodName:getName:[] @AT@ 5513 @LENGTH@ 25
------------------INS New@@new @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5513 @LENGTH@ 3
------------------INS SimpleType@@Customer @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5517 @LENGTH@ 8
------------------INS NumberLiteral@@123 @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5526 @LENGTH@ 3
------------------INS StringLiteral@@"John" @TO@ ClassInstanceCreation@@Customer[123, "John"] @AT@ 5531 @LENGTH@ 6
---------DEL StringLiteral@@"Dan" @AT@ 5547 @LENGTH@ 5


UPD ReturnStatement@@ClassInstanceCreation:new DefaultCompositeOption(new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")}) @TO@ ClassInstanceCreation:new DefaultCompositeOption(new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq"),editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")}) @AT@ 5717 @LENGTH@ 750
---UPD ClassInstanceCreation@@DefaultCompositeOption[new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")}] @TO@ DefaultCompositeOption[new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq"),editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")}] @AT@ 5724 @LENGTH@ 742
------UPD ArrayCreation@@new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @TO@ new Option[]{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq"),editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @AT@ 5768 @LENGTH@ 697
---------UPD ArrayInitializer@@{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @TO@ {karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq"),editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @AT@ 5780 @LENGTH@ 685
------------INS MethodInvocation@@editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq") @TO@ ArrayInitializer@@{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @AT@ 6382 @LENGTH@ 80
---------------INS SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.user", "fusemq"] @TO@ MethodInvocation@@editConfigurationFilePut("etc/system.properties","activemq.jmx.user","fusemq") @AT@ 6382 @LENGTH@ 80
------------------INS StringLiteral@@"etc/system.properties" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.user", "fusemq"] @AT@ 6407 @LENGTH@ 23
------------------INS StringLiteral@@"activemq.jmx.user" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.user", "fusemq"] @AT@ 6432 @LENGTH@ 19
------------------INS StringLiteral@@"fusemq" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.user", "fusemq"] @AT@ 6453 @LENGTH@ 8
------------INS MethodInvocation@@editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq") @TO@ ArrayInitializer@@{karafDistributionConfiguration().frameworkUrl(maven().groupId(MQ_GROUP_ID).artifactId(MQ_ARTIFACT_ID).versionAsInProject().type("tar.gz")).karafVersion("2.2.2").name("Fabric MQ Distro").unpackDirectory(new File("target/paxexam/unpack/")),mavenBundle("org.fusesource.tooling.testing","pax-exam-karaf",MavenUtils.getArtifactVersion("org.fusesource.tooling.testing","pax-exam-karaf")),useOwnExamBundlesStartLevel(50),editConfigurationFilePut("etc/users.properties","fusemq","fusemq,admin"),editConfigurationFilePut("etc/config.properties","karaf.startlevel.bundle","50")} @AT@ 6480 @LENGTH@ 84
---------------INS SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.password", "fusemq"] @TO@ MethodInvocation@@editConfigurationFilePut("etc/system.properties","activemq.jmx.password","fusemq") @AT@ 6480 @LENGTH@ 84
------------------INS StringLiteral@@"etc/system.properties" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.password", "fusemq"] @AT@ 6505 @LENGTH@ 23
------------------INS StringLiteral@@"activemq.jmx.password" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.password", "fusemq"] @AT@ 6530 @LENGTH@ 23
------------------INS StringLiteral@@"fusemq" @TO@ SimpleName@@MethodName:editConfigurationFilePut:["etc/system.properties", "activemq.jmx.password", "fusemq"] @AT@ 6555 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:resultClosure=CollectionUtils.forAllDo(col.iterator(),null) @TO@ Assignment:resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @AT@ 23176 @LENGTH@ 63
---UPD Assignment@@resultClosure=CollectionUtils.forAllDo(col.iterator(),null) @TO@ resultClosure=CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @AT@ 23176 @LENGTH@ 62
------UPD MethodInvocation@@CollectionUtils.forAllDo(col.iterator(),null) @TO@ CollectionUtils.<List<? extends Number>,Closure<List<? extends Number>>>forAllDo(col.iterator(),null) @AT@ 23192 @LENGTH@ 46


UPD ForStatement@@for (int i=0; i < inAvail; i++) {  final byte[] buffer=ensureBufferSize(decodeSize,context);  byte b=in[inPos++];  if (b == PAD) {    context.eof=true;    break;  } else {    if (b >= 0 && b < DECODE_TABLE.length) {      int result=DECODE_TABLE[b];      if (result >= 0) {        context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;        context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;        if (context.modulus == 0) {          buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);          buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);        }      }    }  }} @TO@ for (int i=0; i < inAvail; i++) {  final byte[] buffer=ensureBufferSize(decodeSize,context);  final byte b=in[inPos++];  if (b == PAD) {    context.eof=true;    break;  } else {    if (b >= 0 && b < DECODE_TABLE.length) {      final int result=DECODE_TABLE[b];      if (result >= 0) {        context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;        context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;        if (context.modulus == 0) {          buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);          buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);          buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);        }      }    }  }} @AT@ 18957 @LENGTH@ 1066
---UPD VariableDeclarationStatement@@byte b=in[inPos++]; @TO@ final byte b=in[inPos++]; @AT@ 19078 @LENGTH@ 21
------INS Modifier@@final @TO@ VariableDeclarationStatement@@byte b=in[inPos++]; @AT@ 18966 @LENGTH@ 5
---UPD IfStatement@@if (b == PAD) {  context.eof=true;  break;} else {  if (b >= 0 && b < DECODE_TABLE.length) {    int result=DECODE_TABLE[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);      }    }  }} @TO@ if (b == PAD) {  context.eof=true;  break;} else {  if (b >= 0 && b < DECODE_TABLE.length) {    final int result=DECODE_TABLE[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);      }    }  }} @AT@ 19112 @LENGTH@ 901
------UPD Block@@ElseBody:{  if (b >= 0 && b < DECODE_TABLE.length) {    int result=DECODE_TABLE[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);      }    }  }} @TO@ ElseBody:{  if (b >= 0 && b < DECODE_TABLE.length) {    final int result=DECODE_TABLE[b];    if (result >= 0) {      context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;      context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;      if (context.modulus == 0) {        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);        buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);        buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);      }    }  }} @AT@ 19237 @LENGTH@ 776
---------UPD IfStatement@@if (b >= 0 && b < DECODE_TABLE.length) {  int result=DECODE_TABLE[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);    }  }} @TO@ if (b >= 0 && b < DECODE_TABLE.length) {  final int result=DECODE_TABLE[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);    }  }} @AT@ 19255 @LENGTH@ 744
------------UPD Block@@ThenBody:{  int result=DECODE_TABLE[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);    }  }} @TO@ ThenBody:{  final int result=DECODE_TABLE[b];  if (result >= 0) {    context.modulus=(context.modulus + 1) % BYTES_PER_ENCODED_BLOCK;    context.ibitWorkArea=(context.ibitWorkArea << BITS_PER_ENCODED_BYTE) + result;    if (context.modulus == 0) {      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 16) & MASK_8BITS);      buffer[context.pos++]=(byte)((context.ibitWorkArea >> 8) & MASK_8BITS);      buffer[context.pos++]=(byte)(context.ibitWorkArea & MASK_8BITS);    }  }} @AT@ 19294 @LENGTH@ 705
---------------UPD VariableDeclarationStatement@@int result=DECODE_TABLE[b]; @TO@ final int result=DECODE_TABLE[b]; @AT@ 19316 @LENGTH@ 29
------------------INS Modifier@@final @TO@ VariableDeclarationStatement@@int result=DECODE_TABLE[b]; @AT@ 19210 @LENGTH@ 5


UPD IfStatement@@if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean()) {  continue;} @TO@ if (boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false)) {  continue;} @AT@ 11756 @LENGTH@ 111
---UPD InfixExpression@@boottimeOnly && !propResource.get(BOOT_TIME).asBoolean() @TO@ boottimeOnly && !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11760 @LENGTH@ 56
------UPD PrefixExpression@@!propResource.get(BOOT_TIME).asBoolean() @TO@ !propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11776 @LENGTH@ 40
---------UPD MethodInvocation@@propResource.get(BOOT_TIME).asBoolean() @TO@ propResource.get(BOOT_TIME).asBoolean(false) @AT@ 11777 @LENGTH@ 39
------------UPD SimpleName@@MethodName:asBoolean:[] @TO@ MethodName:asBoolean:[false] @AT@ 11805 @LENGTH@ 11
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asBoolean:[] @AT@ 11815 @LENGTH@ 5

INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[public]TestPojoView,  @AT@ 1551 @LENGTH@ 416
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1551 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1558 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1566 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1573 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 1573 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 1580 @LENGTH@ 1
---INS IfStatement@@if (this == o) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1593 @LENGTH@ 51
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1597 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 1597 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 1601 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 1605 @LENGTH@ 1
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1608 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1622 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1629 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1653 @LENGTH@ 82
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1657 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1657 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 1657 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 1658 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 1662 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1666 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1670 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1670 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1680 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1684 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 1684 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 1686 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1698 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1712 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1719 @LENGTH@ 5
---INS VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1745 @LENGTH@ 37
------INS SimpleType@@TestPojoView @TO@ VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @AT@ 1745 @LENGTH@ 12
------INS VariableDeclarationFragment@@that=(TestPojoView)o @TO@ VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @AT@ 1758 @LENGTH@ 23
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(TestPojoView)o @AT@ 1758 @LENGTH@ 4
---------INS CastExpression@@(TestPojoView)o @TO@ VariableDeclarationFragment@@that=(TestPojoView)o @AT@ 1765 @LENGTH@ 16
------------INS SimpleType@@TestPojoView @TO@ CastExpression@@(TestPojoView)o @AT@ 1766 @LENGTH@ 12
------------INS SimpleName@@o @TO@ CastExpression@@(TestPojoView)o @AT@ 1780 @LENGTH@ 1
---INS IfStatement@@if (age != that.age) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1792 @LENGTH@ 58
------INS InfixExpression@@age != that.age @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1796 @LENGTH@ 15
---------INS SimpleName@@age @TO@ InfixExpression@@age != that.age @AT@ 1796 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@age != that.age @AT@ 1799 @LENGTH@ 2
---------INS QualifiedName@@that.age @TO@ InfixExpression@@age != that.age @AT@ 1803 @LENGTH@ 8
------------INS SimpleName@@that @TO@ QualifiedName@@that.age @AT@ 1803 @LENGTH@ 4
------------INS SimpleName@@age @TO@ QualifiedName@@that.age @AT@ 1808 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1813 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1827 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1834 @LENGTH@ 5
---INS IfStatement@@if (height != that.height) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1859 @LENGTH@ 64
------INS InfixExpression@@height != that.height @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1863 @LENGTH@ 21
---------INS SimpleName@@height @TO@ InfixExpression@@height != that.height @AT@ 1863 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@height != that.height @AT@ 1869 @LENGTH@ 2
---------INS QualifiedName@@that.height @TO@ InfixExpression@@height != that.height @AT@ 1873 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.height @AT@ 1873 @LENGTH@ 4
------------INS SimpleName@@height @TO@ QualifiedName@@that.height @AT@ 1878 @LENGTH@ 6
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1886 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1900 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1907 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:weight == that.weight @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1932 @LENGTH@ 29
------INS InfixExpression@@weight == that.weight @TO@ ReturnStatement@@InfixExpression:weight == that.weight @AT@ 1939 @LENGTH@ 21
---------INS SimpleName@@weight @TO@ InfixExpression@@weight == that.weight @AT@ 1939 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@weight == that.weight @AT@ 1945 @LENGTH@ 2
---------INS QualifiedName@@that.weight @TO@ InfixExpression@@weight == that.weight @AT@ 1949 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.weight @AT@ 1949 @LENGTH@ 4
------------INS SimpleName@@weight @TO@ QualifiedName@@that.weight @AT@ 1954 @LENGTH@ 6


INS ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @TO@ MethodDeclaration@@public, void, MethodName:validateProperties, Exception,  @AT@ 19674 @LENGTH@ 81
---INS Assignment@@result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @TO@ ExpressionStatement@@Assignment:result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19674 @LENGTH@ 80
------INS SimpleName@@result @TO@ Assignment@@result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19674 @LENGTH@ 6
------INS Operator@@= @TO@ Assignment@@result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19680 @LENGTH@ 1
------INS MethodInvocation@@catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @TO@ Assignment@@result=catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19683 @LENGTH@ 71
---------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19683 @LENGTH@ 7
---------INS SimpleName@@MethodName:validateEndpointProperties:["atmos://put?remotePath=/dummy.txt"] @TO@ MethodInvocation@@catalog.validateEndpointProperties("atmos://put?remotePath=/dummy.txt") @AT@ 19691 @LENGTH@ 63
------------INS StringLiteral@@"atmos://put?remotePath=/dummy.txt" @TO@ SimpleName@@MethodName:validateEndpointProperties:["atmos://put?remotePath=/dummy.txt"] @AT@ 19718 @LENGTH@ 35


UPD VariableDeclarationStatement@@WebSocket webSocket=websocketComponentServlet.doWebSocketConnect(request,PROTOCOL); @TO@ DefaultWebsocket webSocket=websocketComponentServlet.doWebSocketConnect(request,PROTOCOL); @AT@ 3399 @LENGTH@ 86
---UPD SimpleType@@WebSocket @TO@ DefaultWebsocket @AT@ 3399 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:frame.content(utf8(exchange.getIn().getBody().toString())) @TO@ MethodInvocation:frame.content(utf8(exchange.getIn().getBody(String.class))) @AT@ 5307 @LENGTH@ 59
---UPD MethodInvocation@@frame.content(utf8(exchange.getIn().getBody().toString())) @TO@ frame.content(utf8(exchange.getIn().getBody(String.class))) @AT@ 5307 @LENGTH@ 58
------UPD SimpleName@@MethodName:content:[utf8(exchange.getIn().getBody().toString())] @TO@ MethodName:content:[utf8(exchange.getIn().getBody(String.class))] @AT@ 5313 @LENGTH@ 52
---------UPD MethodInvocation@@utf8(exchange.getIn().getBody().toString()) @TO@ utf8(exchange.getIn().getBody(String.class)) @AT@ 5321 @LENGTH@ 43
------------UPD SimpleName@@MethodName:utf8:[exchange.getIn().getBody().toString()] @TO@ MethodName:utf8:[exchange.getIn().getBody(String.class)] @AT@ 5321 @LENGTH@ 43
---------------UPD MethodInvocation@@exchange.getIn().getBody().toString() @TO@ exchange.getIn().getBody(String.class) @AT@ 5326 @LENGTH@ 37
------------------DEL MethodInvocation@@MethodName:getBody:[] @AT@ 5326 @LENGTH@ 26
------------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getBody:[String.class] @AT@ 5353 @LENGTH@ 10
---------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:toString:[] @AT@ 5428 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:VerifyInboundInterceptor,  @TO@ voidMethodName:VerifyInboundInterceptor,  @AT@ 4951 @LENGTH@ 85
---DEL Modifier@@public @AT@ 4951 @LENGTH@ 6


UPD VariableDeclarationStatement@@String out=template.requestBodyAndHeaders("netty4-http:http://0.0.0.0:9001/foo?decoders=#myDecoders",data,headers,String.class); @TO@ String out=template.requestBodyAndHeaders("netty4-http:http://localhost:9001/foo?decoders=#myDecoders",data,headers,String.class); @AT@ 1997 @LENGTH@ 149
---UPD VariableDeclarationFragment@@out=template.requestBodyAndHeaders("netty4-http:http://0.0.0.0:9001/foo?decoders=#myDecoders",data,headers,String.class) @TO@ out=template.requestBodyAndHeaders("netty4-http:http://localhost:9001/foo?decoders=#myDecoders",data,headers,String.class) @AT@ 2004 @LENGTH@ 141
------UPD MethodInvocation@@template.requestBodyAndHeaders("netty4-http:http://0.0.0.0:9001/foo?decoders=#myDecoders",data,headers,String.class) @TO@ template.requestBodyAndHeaders("netty4-http:http://localhost:9001/foo?decoders=#myDecoders",data,headers,String.class) @AT@ 2010 @LENGTH@ 135
---------UPD SimpleName@@MethodName:requestBodyAndHeaders:["netty4-http:http://0.0.0.0:9001/foo?decoders=#myDecoders", data, headers, String.class] @TO@ MethodName:requestBodyAndHeaders:["netty4-http:http://localhost:9001/foo?decoders=#myDecoders", data, headers, String.class] @AT@ 2019 @LENGTH@ 126
------------UPD StringLiteral@@"netty4-http:http://0.0.0.0:9001/foo?decoders=#myDecoders" @TO@ "netty4-http:http://localhost:9001/foo?decoders=#myDecoders" @AT@ 2041 @LENGTH@ 58


UPD MethodDeclaration@@public, voidMethodName:SubmitOrderFutureTask, long id, Runnable runnable, V result,  @TO@ voidMethodName:SubmitOrderFutureTask, long id, Runnable runnable, V result,  @AT@ 2525 @LENGTH@ 141
---DEL Modifier@@public @AT@ 2525 @LENGTH@ 6


UPD FieldDeclaration@@public, static, final, String, [DYNAMIC_JOBNAME="DYNAMIC_JOBNAME_HEADER"] @TO@ public, static, final, String, [DYNAMIC_JOBNAME="CamelSpringBatchDynamicJobName"] @AT@ 1170 @LENGTH@ 70
---UPD VariableDeclarationFragment@@DYNAMIC_JOBNAME="DYNAMIC_JOBNAME_HEADER" @TO@ DYNAMIC_JOBNAME="CamelSpringBatchDynamicJobName" @AT@ 1197 @LENGTH@ 42
------UPD StringLiteral@@"DYNAMIC_JOBNAME_HEADER" @TO@ "CamelSpringBatchDynamicJobName" @AT@ 1215 @LENGTH@ 24


UPD VariableDeclarationStatement@@Enumeration<URL> classpathConfs=ClassLoader.getSystemClassLoader().getResources(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION); @TO@ Enumeration<URL> classpathConfs=classLoader.getResources(WildFlySwarmClasspathConf.CLASSPATH_LOCATION); @AT@ 867 @LENGTH@ 128
---UPD VariableDeclarationFragment@@classpathConfs=ClassLoader.getSystemClassLoader().getResources(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION) @TO@ classpathConfs=classLoader.getResources(WildFlySwarmClasspathConf.CLASSPATH_LOCATION) @AT@ 884 @LENGTH@ 110
------UPD MethodInvocation@@ClassLoader.getSystemClassLoader().getResources(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION) @TO@ classLoader.getResources(WildFlySwarmClasspathConf.CLASSPATH_LOCATION) @AT@ 901 @LENGTH@ 93
---------DEL MethodInvocation@@MethodName:getSystemClassLoader:[] @AT@ 901 @LENGTH@ 34
---------UPD SimpleName@@Name:ClassLoader @TO@ Name:classLoader @AT@ 901 @LENGTH@ 11
---------UPD SimpleName@@MethodName:getResources:[WildFlySwarmBootstrapConf.CLASSPATH_LOCATION] @TO@ MethodName:getResources:[WildFlySwarmClasspathConf.CLASSPATH_LOCATION] @AT@ 936 @LENGTH@ 58
------------UPD QualifiedName@@WildFlySwarmBootstrapConf.CLASSPATH_LOCATION @TO@ WildFlySwarmClasspathConf.CLASSPATH_LOCATION @AT@ 949 @LENGTH@ 44
---------------UPD SimpleName@@WildFlySwarmBootstrapConf @TO@ WildFlySwarmClasspathConf @AT@ 949 @LENGTH@ 25


UPD ExpressionStatement@@Assignment:springSecurityFilterChain=webApplicationContext.getBean(FilterChainProxy.class) @TO@ Assignment:springSecurityFilterChain=webApplicationContext.getBean(AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME,Filter.class) @AT@ 4899 @LENGTH@ 88
---UPD Assignment@@springSecurityFilterChain=webApplicationContext.getBean(FilterChainProxy.class) @TO@ springSecurityFilterChain=webApplicationContext.getBean(AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME,Filter.class) @AT@ 4899 @LENGTH@ 87
------UPD MethodInvocation@@webApplicationContext.getBean(FilterChainProxy.class) @TO@ webApplicationContext.getBean(AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME,Filter.class) @AT@ 4927 @LENGTH@ 59
---------UPD SimpleName@@MethodName:getBean:[FilterChainProxy.class] @TO@ MethodName:getBean:[AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME, Filter.class] @AT@ 4955 @LENGTH@ 31
------------UPD TypeLiteral@@FilterChainProxy.class @TO@ Filter.class @AT@ 4963 @LENGTH@ 22
------------INS QualifiedName@@AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME @TO@ SimpleName@@MethodName:getBean:[FilterChainProxy.class] @AT@ 4982 @LENGTH@ 61
---------------INS SimpleName@@AbstractSecurityWebApplicationInitializer @TO@ QualifiedName@@AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME @AT@ 4982 @LENGTH@ 41
---------------INS SimpleName@@DEFAULT_FILTER_NAME @TO@ QualifiedName@@AbstractSecurityWebApplicationInitializer.DEFAULT_FILTER_NAME @AT@ 5024 @LENGTH@ 19


UPD MethodDeclaration@@private, voidMethodName:EndpointMappingType, String prefix,  @TO@ voidMethodName:EndpointMappingType, String prefix,  @AT@ 1204 @LENGTH@ 80
---DEL Modifier@@private @AT@ 1204 @LENGTH@ 7


UPD ForStatement@@for (int i=0; i < this.method.getParameterCount(); i++) {  MethodParameter methodParameter=new MethodParameter(this.method,i);  if (eligibleParameter(methodParameter) && (methodParameter.getParameterAnnotations().length == 0 || methodParameter.hasParameterAnnotation(Payload.class))) {    if (genericParameterType == null) {      genericParameterType=methodParameter.getGenericParameterType();      if (genericParameterType instanceof ParameterizedType) {        ParameterizedType parameterizedType=(ParameterizedType)genericParameterType;        if (parameterizedType.getRawType().equals(Message.class)) {          genericParameterType=((ParameterizedType)genericParameterType).getActualTypeArguments()[0];        }      }    } else {      if (MessagingMessageListenerAdapter.this.logger.isDebugEnabled()) {        MessagingMessageListenerAdapter.this.logger.debug("Ambiguous parameters for target payload for method " + this.method + "; no inferred type header added");      }      return null;    }  }} @TO@ for (int i=0; i < this.method.getParameterTypes().length; i++) {  MethodParameter methodParameter=new MethodParameter(this.method,i);  if (eligibleParameter(methodParameter) && (methodParameter.getParameterAnnotations().length == 0 || methodParameter.hasParameterAnnotation(Payload.class))) {    if (genericParameterType == null) {      genericParameterType=methodParameter.getGenericParameterType();      if (genericParameterType instanceof ParameterizedType) {        ParameterizedType parameterizedType=(ParameterizedType)genericParameterType;        if (parameterizedType.getRawType().equals(Message.class)) {          genericParameterType=((ParameterizedType)genericParameterType).getActualTypeArguments()[0];        }      }    } else {      if (MessagingMessageListenerAdapter.this.logger.isDebugEnabled()) {        MessagingMessageListenerAdapter.this.logger.debug("Ambiguous parameters for target payload for method " + this.method + "; no inferred type header added");      }      return null;    }  }} @AT@ 8626 @LENGTH@ 1293
---UPD InfixExpression@@i < this.method.getParameterCount() @TO@ i < this.method.getParameterTypes().length @AT@ 8642 @LENGTH@ 35
------INS FieldAccess@@this.method.getParameterTypes().length @TO@ InfixExpression@@i < this.method.getParameterCount() @AT@ 8646 @LENGTH@ 38
---------INS MethodInvocation@@this.method.getParameterTypes() @TO@ FieldAccess@@this.method.getParameterTypes().length @AT@ 8646 @LENGTH@ 31
------------MOV FieldAccess@@this.method @TO@ MethodInvocation@@this.method.getParameterTypes() @AT@ 8646 @LENGTH@ 11
------------MOV SimpleName@@MethodName:getParameterCount:[] @TO@ MethodInvocation@@this.method.getParameterTypes() @AT@ 8658 @LENGTH@ 19
---------INS SimpleName@@length @TO@ FieldAccess@@this.method.getParameterTypes().length @AT@ 8678 @LENGTH@ 6
------DEL MethodInvocation@@this.method.getParameterCount() @AT@ 8646 @LENGTH@ 31


UPD MethodDeclaration@@public, voidMethodName:StringItem, String value, boolean followedByDigit,  @TO@ voidMethodName:StringItem, String value, boolean followedByDigit,  @AT@ 6406 @LENGTH@ 690
---DEL Modifier@@public @AT@ 6406 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:parameterNames.add(getReferencedFieldPropertyName(referencedField).getFieldName()) @TO@ MethodInvocation:parameterNames.add(new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))) @AT@ 7734 @LENGTH@ 83
---UPD MethodInvocation@@parameterNames.add(getReferencedFieldPropertyName(referencedField).getFieldName()) @TO@ String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field") @AT@ 7734 @LENGTH@ 82
---INS MethodInvocation@@parameterNames.add(new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))) @TO@ ExpressionStatement@@MethodInvocation:parameterNames.add(getReferencedFieldPropertyName(referencedField).getFieldName()) @AT@ 7734 @LENGTH@ 142
------INS SimpleName@@Name:parameterNames @TO@ MethodInvocation@@parameterNames.add(new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))) @AT@ 7734 @LENGTH@ 14
------INS SimpleName@@MethodName:add:[new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))] @TO@ MethodInvocation@@parameterNames.add(new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))) @AT@ 7749 @LENGTH@ 127
---------INS ClassInstanceCreation@@JavaSymbolName[String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field")] @TO@ SimpleName@@MethodName:add:[new JavaSymbolName(String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field"))] @AT@ 7753 @LENGTH@ 122
------------MOV MethodInvocation@@parameterNames.add(getReferencedFieldPropertyName(referencedField).getFieldName()) @TO@ ClassInstanceCreation@@JavaSymbolName[String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field")] @AT@ 7734 @LENGTH@ 82
---------------UPD SimpleName@@Name:parameterNames @TO@ Name:String @AT@ 7734 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @TO@ MethodName:format:["%s%s", getReferencedFieldPropertyName(referencedField).getFieldName(), "Field"] @AT@ 7749 @LENGTH@ 67
------------------INS StringLiteral@@"%s%s" @TO@ SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @AT@ 7786 @LENGTH@ 6
------------------INS StringLiteral@@"Field" @TO@ SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @AT@ 7866 @LENGTH@ 7
------------MOV MethodInvocation@@parameterNames.add(getReferencedFieldPropertyName(referencedField).getFieldName()) @TO@ ClassInstanceCreation@@JavaSymbolName[String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field")] @AT@ 7734 @LENGTH@ 82
---------------UPD SimpleName@@Name:parameterNames @TO@ Name:String @AT@ 7734 @LENGTH@ 14
---------------UPD SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @TO@ MethodName:format:["%s%s", getReferencedFieldPropertyName(referencedField).getFieldName(), "Field"] @AT@ 7749 @LENGTH@ 67
------------------INS StringLiteral@@"%s%s" @TO@ SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @AT@ 7786 @LENGTH@ 6
------------------INS StringLiteral@@"Field" @TO@ SimpleName@@MethodName:add:[getReferencedFieldPropertyName(referencedField).getFieldName()] @AT@ 7866 @LENGTH@ 7
------------INS New@@new @TO@ ClassInstanceCreation@@JavaSymbolName[String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field")] @AT@ 7753 @LENGTH@ 3
------------INS SimpleType@@JavaSymbolName @TO@ ClassInstanceCreation@@JavaSymbolName[String.format("%s%s",getReferencedFieldPropertyName(referencedField).getFieldName(),"Field")] @AT@ 7757 @LENGTH@ 14


UPD MethodDeclaration@@public, voidMethodName:AsyncRedeliveryTask, Exchange exchange, AsyncCallback callback, RedeliveryData data,  @TO@ voidMethodName:AsyncRedeliveryTask, Exchange exchange, AsyncCallback callback, RedeliveryData data,  @AT@ 5565 @LENGTH@ 208
---DEL Modifier@@public @AT@ 5565 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:ConsumerEventHandler, final int ordinal, final int concurrentConsumers,  @TO@ voidMethodName:ConsumerEventHandler, final int ordinal, final int concurrentConsumers,  @AT@ 7362 @LENGTH@ 185
---DEL Modifier@@public @AT@ 7362 @LENGTH@ 6


UPD TypeDeclaration@@[public]RememberMeAuthenticationProviderTests, TestCase @TO@ [public]RememberMeAuthenticationProviderTests,  @AT@ 1250 @LENGTH@ 2203
---DEL SimpleType@@TestCase @AT@ 1309 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:Element, E object,  @TO@ voidMethodName:Element, E object,  @AT@ 1445 @LENGTH@ 62
---DEL Modifier@@public @AT@ 1445 @LENGTH@ 6


UPD IfStatement@@if (exchange.getPattern().isOutCapable()) {  return exchange.getOut();} @TO@ if (exchange.getPattern().isOutCapable()) {  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  return out;} @AT@ 1080 @LENGTH@ 91
---UPD Block@@ThenBody:{  return exchange.getOut();} @TO@ ThenBody:{  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  return out;} @AT@ 1122 @LENGTH@ 49
------INS VariableDeclarationStatement@@Message out=exchange.getOut(); @TO@ Block@@ThenBody:{  return exchange.getOut();} @AT@ 1136 @LENGTH@ 32
---------INS SimpleType@@Message @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(); @AT@ 1136 @LENGTH@ 7
---------INS VariableDeclarationFragment@@out=exchange.getOut() @TO@ VariableDeclarationStatement@@Message out=exchange.getOut(); @AT@ 1144 @LENGTH@ 23
------------INS SimpleName@@out @TO@ VariableDeclarationFragment@@out=exchange.getOut() @AT@ 1144 @LENGTH@ 3
------------INS MethodInvocation@@exchange.getOut() @TO@ VariableDeclarationFragment@@out=exchange.getOut() @AT@ 1150 @LENGTH@ 17
---------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 1143 @LENGTH@ 8
---------------MOV SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 1152 @LENGTH@ 8
------DEL ReturnStatement@@MethodInvocation:exchange.getOut() @AT@ 1136 @LENGTH@ 25
---------DEL MethodInvocation@@exchange.getOut() @AT@ 1143 @LENGTH@ 17
------INS ExpressionStatement@@MethodInvocation:out.copyFrom(exchange.getIn()) @TO@ Block@@ThenBody:{  return exchange.getOut();} @AT@ 1181 @LENGTH@ 31
---------INS MethodInvocation@@out.copyFrom(exchange.getIn()) @TO@ ExpressionStatement@@MethodInvocation:out.copyFrom(exchange.getIn()) @AT@ 1181 @LENGTH@ 30
------------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.copyFrom(exchange.getIn()) @AT@ 1181 @LENGTH@ 3
------------INS SimpleName@@MethodName:copyFrom:[exchange.getIn()] @TO@ MethodInvocation@@out.copyFrom(exchange.getIn()) @AT@ 1185 @LENGTH@ 26
---------------INS MethodInvocation@@exchange.getIn() @TO@ SimpleName@@MethodName:copyFrom:[exchange.getIn()] @AT@ 1194 @LENGTH@ 16
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 1194 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 1203 @LENGTH@ 7
------INS ReturnStatement@@SimpleName:out @TO@ Block@@ThenBody:{  return exchange.getOut();} @AT@ 1225 @LENGTH@ 11
---------INS SimpleName@@out @TO@ ReturnStatement@@SimpleName:out @AT@ 1232 @LENGTH@ 3


DEL MethodDeclaration@@public, TypeLocationService, MethodName:getTypeLocationService,  @AT@ 3728 @LENGTH@ 677
---DEL Modifier@@public @AT@ 3728 @LENGTH@ 6
---DEL SimpleType@@TypeLocationService @AT@ 3735 @LENGTH@ 19
---DEL SimpleName@@MethodName:getTypeLocationService @AT@ 3755 @LENGTH@ 22
---DEL IfStatement@@if (typeLocationService == null) {  try {    ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);    for (    ServiceReference<?> ref : references) {      return (TypeLocationService)this.context.getService(ref);    }    return null;  } catch (  InvalidSyntaxException e) {    LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");    return null;  }} else {  return typeLocationService;} @AT@ 3786 @LENGTH@ 615
------DEL InfixExpression@@typeLocationService == null @AT@ 3790 @LENGTH@ 27
---------DEL SimpleName@@typeLocationService @AT@ 3790 @LENGTH@ 19
---------DEL Operator@@== @AT@ 3809 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3813 @LENGTH@ 4
------DEL Block@@ThenBody:{  try {    ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);    for (    ServiceReference<?> ref : references) {      return (TypeLocationService)this.context.getService(ref);    }    return null;  } catch (  InvalidSyntaxException e) {    LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");    return null;  }} @AT@ 3819 @LENGTH@ 535
---------DEL TryStatement@@try {  ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);  for (  ServiceReference<?> ref : references) {    return (TypeLocationService)this.context.getService(ref);  }  return null;} catch (InvalidSyntaxException e) {  LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");  return null;} @AT@ 3893 @LENGTH@ 455
------------DEL VariableDeclarationStatement@@ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null); @AT@ 3907 @LENGTH@ 127
---------------DEL ArrayType@@ServiceReference<?>[] @AT@ 3907 @LENGTH@ 21
------------------DEL ParameterizedType@@ServiceReference<?> @AT@ 3907 @LENGTH@ 19
---------------------DEL SimpleType@@ServiceReference @AT@ 3907 @LENGTH@ 16
---------------------DEL WildcardType@@? @AT@ 3924 @LENGTH@ 1
---------------DEL VariableDeclarationFragment@@references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null) @AT@ 3929 @LENGTH@ 104
------------------DEL SimpleName@@references @AT@ 3929 @LENGTH@ 10
------------------DEL MethodInvocation@@this.context.getAllServiceReferences(TypeLocationService.class.getName(),null) @AT@ 3954 @LENGTH@ 79
---------------------DEL FieldAccess@@this.context @AT@ 3954 @LENGTH@ 12
------------------------DEL ThisExpression@@this @AT@ 3954 @LENGTH@ 4
------------------------DEL SimpleName@@context @AT@ 3959 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getAllServiceReferences:[TypeLocationService.class.getName(), null] @AT@ 3967 @LENGTH@ 66
------------------------DEL MethodInvocation@@TypeLocationService.class.getName() @AT@ 3991 @LENGTH@ 35
---------------------------DEL TypeLiteral@@TypeLocationService.class @AT@ 3991 @LENGTH@ 25
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 4017 @LENGTH@ 9
------------------------DEL NullLiteral@@null @AT@ 4028 @LENGTH@ 4
------------DEL EnhancedForStatement@@for (ServiceReference<?> ref : references) {  return (TypeLocationService)this.context.getService(ref);} @AT@ 4044 @LENGTH@ 123
---------------DEL SingleVariableDeclaration@@ServiceReference<?> ref @AT@ 4049 @LENGTH@ 23
------------------DEL ParameterizedType@@ServiceReference<?> @AT@ 4049 @LENGTH@ 19
---------------------DEL SimpleType@@ServiceReference @AT@ 4049 @LENGTH@ 16
---------------------DEL WildcardType@@? @AT@ 4066 @LENGTH@ 1
------------------DEL SimpleName@@ref @AT@ 4069 @LENGTH@ 3
---------------DEL SimpleName@@references @AT@ 4075 @LENGTH@ 10
---------------DEL ReturnStatement@@CastExpression:(TypeLocationService)this.context.getService(ref) @AT@ 4099 @LENGTH@ 58
------------------DEL CastExpression@@(TypeLocationService)this.context.getService(ref) @AT@ 4106 @LENGTH@ 50
---------------------DEL SimpleType@@TypeLocationService @AT@ 4107 @LENGTH@ 19
---------------------DEL MethodInvocation@@this.context.getService(ref) @AT@ 4128 @LENGTH@ 28
------------------------DEL FieldAccess@@this.context @AT@ 4128 @LENGTH@ 12
---------------------------DEL ThisExpression@@this @AT@ 4128 @LENGTH@ 4
---------------------------DEL SimpleName@@context @AT@ 4133 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getService:[ref] @AT@ 4141 @LENGTH@ 15
---------------------------DEL SimpleName@@ref @AT@ 4152 @LENGTH@ 3
------------DEL ReturnStatement@@NullLiteral:null @AT@ 4177 @LENGTH@ 12
---------------DEL NullLiteral@@null @AT@ 4184 @LENGTH@ 4
------------DEL CatchClause@@catch (InvalidSyntaxException e) {  LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");  return null;} @AT@ 4199 @LENGTH@ 149
---------------DEL SingleVariableDeclaration@@InvalidSyntaxException e @AT@ 4206 @LENGTH@ 24
------------------DEL SimpleType@@InvalidSyntaxException @AT@ 4206 @LENGTH@ 22
------------------DEL SimpleName@@e @AT@ 4229 @LENGTH@ 1
---------------DEL ExpressionStatement@@MethodInvocation:LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.") @AT@ 4242 @LENGTH@ 77
------------------DEL MethodInvocation@@LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.") @AT@ 4242 @LENGTH@ 76
---------------------DEL SimpleName@@Name:LOGGER @AT@ 4242 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:warning:["Cannot load TypeLocationService on SecurityOperationsImpl."] @AT@ 4249 @LENGTH@ 69
------------------------DEL StringLiteral@@"Cannot load TypeLocationService on SecurityOperationsImpl." @AT@ 4257 @LENGTH@ 60
---------------DEL ReturnStatement@@NullLiteral:null @AT@ 4328 @LENGTH@ 12
------------------DEL NullLiteral@@null @AT@ 4335 @LENGTH@ 4
------DEL Block@@ElseBody:{  return typeLocationService;} @AT@ 4360 @LENGTH@ 41
---------DEL ReturnStatement@@SimpleName:typeLocationService @AT@ 4368 @LENGTH@ 27
------------DEL SimpleName@@typeLocationService @AT@ 4375 @LENGTH@ 19


DEL FieldDeclaration@@String, [tcpMode] @AT@ 3469 @LENGTH@ 15
---DEL SimpleType@@String @AT@ 3469 @LENGTH@ 6
---DEL VariableDeclarationFragment@@tcpMode @AT@ 3476 @LENGTH@ 7
------DEL SimpleName@@tcpMode @AT@ 3476 @LENGTH@ 7


UPD EnumDeclaration@@[public]UriFormat,  @TO@ UriFormat,  @AT@ 1580 @LENGTH@ 77
---DEL Modifier@@public @AT@ 1580 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:addFieldSetJpa, @CliOption(key={"","fieldName"},mandatory=true,help="The name of the field to add") final JavaSymbolName fieldName, @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType, @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to receive this field") final JavaType typeName, @CliOption(key="mappedBy",mandatory=false,help="The field name on the referenced type which owns the relationship") final JavaSymbolName mappedBy, @CliOption(key="notNull",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value cannot be null") final boolean notNull, @CliOption(key="nullRequired",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value must be null") final boolean nullRequired, @CliOption(key="sizeMin",mandatory=false,help="The minimum number of elements in the collection") final Integer sizeMin, @CliOption(key="sizeMax",mandatory=false,help="The maximum number of elements in the collection") final Integer sizeMax, @CliOption(key="cardinality",mandatory=false,unspecifiedDefaultValue="ONE_TO_MANY",specifiedDefaultValue="ONE_TO_MANY",help="The relationship cardinality at a JPA level") Cardinality cardinality, @CliOption(key="fetch",mandatory=false,help="The fetch semantics at a JPA level") final Fetch fetch, @CliOption(key="comment",mandatory=false,help="An optional comment for JavaDocs") final String comment, @CliOption(key="transient",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates to mark the field as transient") final boolean transientModifier, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo") final boolean permitReservedWords, @CliOption(key="joinTable",mandatory=true,specifiedDefaultValue=ROO_DEFAULT_JOIN_TABLE_NAME,help="Join table name. Most usually used in @ManyToMany relations. If " + "name not specified it will take default @JoinTable name value.") final String joinTable, @CliOption(key="joinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity owning the relation") final String joinColumns, @CliOption(key="referencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity owning the relation") final String referencedColumns, @CliOption(key="inverseJoinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity that does not own the relation") final String inverseJoinColumns, @CliOption(key="inverseReferencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity that does not own the relation") final String inverseReferencedColumns, @CliOption(key="cascadeType",mandatory=false,unspecifiedDefaultValue="ALL",specifiedDefaultValue="ALL",help="CascadeType. Possible values are ALL, DETACH, MERGE, PERSIST, REFRESH and REMOVE.") final Cascade cascadeType, ShellContext shellContext,  @TO@ public, void, MethodName:addFieldSetJpa, @CliOption(key={"","fieldName"},mandatory=true,help="The name of the field to add") final JavaSymbolName fieldName, @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to receive this field") final JavaType typeName, @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType, @CliOption(key="mappedBy",mandatory=false,help="The field name on the referenced type which owns the relationship") final JavaSymbolName mappedBy, @CliOption(key="notNull",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value cannot be null") final boolean notNull, @CliOption(key="nullRequired",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value must be null") final boolean nullRequired, @CliOption(key="sizeMin",mandatory=false,help="The minimum number of elements in the collection") final Integer sizeMin, @CliOption(key="sizeMax",mandatory=false,help="The maximum number of elements in the collection") final Integer sizeMax, @CliOption(key="cardinality",mandatory=false,unspecifiedDefaultValue="ONE_TO_MANY",specifiedDefaultValue="ONE_TO_MANY",help="The relationship cardinality at a JPA level") Cardinality cardinality, @CliOption(key="fetch",mandatory=false,help="The fetch semantics at a JPA level") final Fetch fetch, @CliOption(key="comment",mandatory=false,help="An optional comment for JavaDocs") final String comment, @CliOption(key="transient",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates to mark the field as transient") final boolean transientModifier, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo") final boolean permitReservedWords, @CliOption(key="joinTable",mandatory=true,specifiedDefaultValue=ROO_DEFAULT_JOIN_TABLE_NAME,help="Join table name. Most usually used in @ManyToMany relations. If " + "name not specified it will take default @JoinTable name value.") final String joinTable, @CliOption(key="joinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity owning the relation") final String joinColumns, @CliOption(key="referencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity owning the relation") final String referencedColumns, @CliOption(key="inverseJoinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity that does not own the relation") final String inverseJoinColumns, @CliOption(key="inverseReferencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity that does not own the relation") final String inverseReferencedColumns, @CliOption(key="cascadeType",mandatory=false,unspecifiedDefaultValue="ALL",specifiedDefaultValue="ALL",help="CascadeType. Possible values are ALL, DETACH, MERGE, PERSIST, REFRESH and REMOVE.") final Cascade cascadeType, ShellContext shellContext,  @AT@ 41250 @LENGTH@ 4766
---UPD SingleVariableDeclaration@@@CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType @TO@ @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to receive this field") final JavaType typeName @AT@ 41415 @LENGTH@ 137
------UPD SimpleName@@fieldType @TO@ typeName @AT@ 41543 @LENGTH@ 9
---UPD SingleVariableDeclaration@@@CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext=UPDATE_PROJECT,help="The name of the class to receive this field") final JavaType typeName @TO@ @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType @AT@ 41560 @LENGTH@ 194
------UPD SimpleName@@typeName @TO@ fieldType @AT@ 41746 @LENGTH@ 8


UPD IfStatement@@if (filters != null && !filters.isEmpty()) {  List<Filter> clonedFilters=new LinkedList<Filter>();  for (  Filter filter : filters) {    if (ModelAwareFilter.class.isAssignableFrom(filter.getClass())) {      Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());      if (clone instanceof ModelAwareFilter) {        ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);        clonedFilters.add((Filter)clone);      }    }  }  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,clonedFilters));} @TO@ if (filters != null && !filters.isEmpty()) {  for (int i=0; i < filters.size(); i++) {    ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);    scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));  }} @AT@ 9269 @LENGTH@ 719
---UPD Block@@ThenBody:{  List<Filter> clonedFilters=new LinkedList<Filter>();  for (  Filter filter : filters) {    if (ModelAwareFilter.class.isAssignableFrom(filter.getClass())) {      Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());      if (clone instanceof ModelAwareFilter) {        ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);        clonedFilters.add((Filter)clone);      }    }  }  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,clonedFilters));} @TO@ ThenBody:{  for (int i=0; i < filters.size(); i++) {    ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);    scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));  }} @AT@ 9312 @LENGTH@ 676
------INS ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @TO@ Block@@ThenBody:{  List<Filter> clonedFilters=new LinkedList<Filter>();  for (  Filter filter : filters) {    if (ModelAwareFilter.class.isAssignableFrom(filter.getClass())) {      Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());      if (clone instanceof ModelAwareFilter) {        ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);        clonedFilters.add((Filter)clone);      }    }  }  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,clonedFilters));} @AT@ 9259 @LENGTH@ 272
---------INS VariableDeclarationExpression@@int i=0 @TO@ ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @AT@ 9264 @LENGTH@ 7
------------INS PrimitiveType@@int @TO@ VariableDeclarationExpression@@int i=0 @AT@ 9264 @LENGTH@ 3
------------INS VariableDeclarationFragment@@i=0 @TO@ VariableDeclarationExpression@@int i=0 @AT@ 9268 @LENGTH@ 3
---------------INS NumberLiteral@@0 @TO@ VariableDeclarationFragment@@i=0 @AT@ 9270 @LENGTH@ 1
---------------MOV SimpleName@@clonedFilters @TO@ VariableDeclarationFragment@@i=0 @AT@ 9339 @LENGTH@ 13
---------INS InfixExpression@@i < filters.size() @TO@ ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @AT@ 9272 @LENGTH@ 16
------------INS SimpleName@@i @TO@ InfixExpression@@i < filters.size() @AT@ 9272 @LENGTH@ 1
------------INS Operator@@< @TO@ InfixExpression@@i < filters.size() @AT@ 9273 @LENGTH@ 1
------------INS MethodInvocation@@filters.size() @TO@ InfixExpression@@i < filters.size() @AT@ 9274 @LENGTH@ 14
---------------MOV SimpleName@@Name:filter @TO@ MethodInvocation@@filters.size() @AT@ 9485 @LENGTH@ 6
---------------MOV SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@filters.size() @AT@ 9492 @LENGTH@ 10
---------INS PostfixExpression@@i++ @TO@ ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @AT@ 9289 @LENGTH@ 3
------------INS SimpleName@@i @TO@ PostfixExpression@@i++ @AT@ 9289 @LENGTH@ 1
------------INS Operator@@++ @TO@ PostfixExpression@@i++ @AT@ 9291 @LENGTH@ 2
---------INS ExpressionStatement@@MethodInvocation:((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model) @TO@ ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @AT@ 9305 @LENGTH@ 80
------------MOV MethodInvocation@@((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model) @TO@ ExpressionStatement@@MethodInvocation:((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model) @AT@ 9700 @LENGTH@ 70
---------INS ExpressionStatement@@MethodInvocation:scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList())) @TO@ ForStatement@@for (int i=0; i < filters.size(); i++) {  ((ModelAwareFilter<?>)filters.get(i)).apply(endpoint.getCamelContext(),model);  scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList()));} @AT@ 9396 @LENGTH@ 124
------------MOV MethodInvocation@@scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,clonedFilters)) @TO@ ExpressionStatement@@MethodInvocation:scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,((ModelAwareFilter<?>)filters.get(i)).getFilteredList())) @AT@ 9897 @LENGTH@ 80
------DEL VariableDeclarationStatement@@List<Filter> clonedFilters=new LinkedList<Filter>(); @AT@ 9326 @LENGTH@ 54
---------DEL ParameterizedType@@List<Filter> @AT@ 9326 @LENGTH@ 12
------------DEL SimpleType@@List @AT@ 9326 @LENGTH@ 4
------------DEL SimpleType@@Filter @AT@ 9331 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@clonedFilters=new LinkedList<Filter>() @AT@ 9339 @LENGTH@ 40
------------DEL ClassInstanceCreation@@LinkedList<Filter>[] @AT@ 9355 @LENGTH@ 24
---------------DEL New@@new @AT@ 9355 @LENGTH@ 3
---------------DEL ParameterizedType@@LinkedList<Filter> @AT@ 9359 @LENGTH@ 18
------------------DEL SimpleType@@LinkedList @AT@ 9359 @LENGTH@ 10
------------------DEL SimpleType@@Filter @AT@ 9370 @LENGTH@ 6
------DEL EnhancedForStatement@@for (Filter filter : filters) {  if (ModelAwareFilter.class.isAssignableFrom(filter.getClass())) {    Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());    if (clone instanceof ModelAwareFilter) {      ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);      clonedFilters.add((Filter)clone);    }  }} @AT@ 9393 @LENGTH@ 491
---------DEL SingleVariableDeclaration@@Filter filter @AT@ 9398 @LENGTH@ 13
------------DEL SimpleType@@Filter @AT@ 9398 @LENGTH@ 6
------------DEL SimpleName@@filter @AT@ 9405 @LENGTH@ 6
---------DEL SimpleName@@filters @AT@ 9414 @LENGTH@ 7
---------DEL IfStatement@@if (ModelAwareFilter.class.isAssignableFrom(filter.getClass())) {  Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());  if (clone instanceof ModelAwareFilter) {    ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);    clonedFilters.add((Filter)clone);  }} @AT@ 9441 @LENGTH@ 429
------------DEL MethodInvocation@@ModelAwareFilter.class.isAssignableFrom(filter.getClass()) @AT@ 9445 @LENGTH@ 58
---------------DEL TypeLiteral@@ModelAwareFilter.class @AT@ 9445 @LENGTH@ 22
---------------DEL SimpleName@@MethodName:isAssignableFrom:[filter.getClass()] @AT@ 9468 @LENGTH@ 35
------------------DEL MethodInvocation@@filter.getClass() @AT@ 9485 @LENGTH@ 17
------------DEL Block@@ThenBody:{  Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass());  if (clone instanceof ModelAwareFilter) {    ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);    clonedFilters.add((Filter)clone);  }} @AT@ 9505 @LENGTH@ 365
---------------DEL VariableDeclarationStatement@@Object clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass()); @AT@ 9527 @LENGTH@ 87
------------------DEL SimpleType@@Object @AT@ 9527 @LENGTH@ 6
------------------DEL VariableDeclarationFragment@@clone=endpoint.getCamelContext().getInjector().newInstance(filter.getClass()) @AT@ 9534 @LENGTH@ 79
---------------------DEL SimpleName@@clone @AT@ 9534 @LENGTH@ 5
---------------------DEL MethodInvocation@@endpoint.getCamelContext().getInjector().newInstance(filter.getClass()) @AT@ 9542 @LENGTH@ 71
------------------------DEL MethodInvocation@@MethodName:getInjector:[] @AT@ 9542 @LENGTH@ 40
------------------------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 9542 @LENGTH@ 26
------------------------DEL SimpleName@@Name:endpoint @AT@ 9542 @LENGTH@ 8
------------------------DEL SimpleName@@MethodName:newInstance:[filter.getClass()] @AT@ 9583 @LENGTH@ 30
---------------------------DEL MethodInvocation@@filter.getClass() @AT@ 9595 @LENGTH@ 17
------------------------------DEL SimpleName@@Name:filter @AT@ 9595 @LENGTH@ 6
------------------------------DEL SimpleName@@MethodName:getClass:[] @AT@ 9602 @LENGTH@ 10
---------------DEL IfStatement@@if (clone instanceof ModelAwareFilter) {  ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);  clonedFilters.add((Filter)clone);} @AT@ 9635 @LENGTH@ 217
------------------DEL InstanceofExpression@@clone instanceof ModelAwareFilter @AT@ 9639 @LENGTH@ 33
---------------------DEL SimpleName@@clone @AT@ 9639 @LENGTH@ 5
---------------------DEL Instanceof@@instanceof @AT@ 9645 @LENGTH@ 10
---------------------DEL SimpleType@@ModelAwareFilter @AT@ 9656 @LENGTH@ 16
------------------DEL Block@@ThenBody:{  ((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model);  clonedFilters.add((Filter)clone);} @AT@ 9674 @LENGTH@ 178
---------------------DEL ExpressionStatement@@MethodInvocation:((ModelAwareFilter<?>)clone).apply(endpoint.getCamelContext(),model) @AT@ 9700 @LENGTH@ 71
---------------------DEL ExpressionStatement@@MethodInvocation:clonedFilters.add((Filter)clone) @AT@ 9796 @LENGTH@ 34
------------------------DEL MethodInvocation@@clonedFilters.add((Filter)clone) @AT@ 9796 @LENGTH@ 33
---------------------------DEL SimpleName@@Name:clonedFilters @AT@ 9796 @LENGTH@ 13
---------------------------DEL SimpleName@@MethodName:add:[(Filter)clone] @AT@ 9810 @LENGTH@ 19
------------------------------DEL CastExpression@@(Filter)clone @AT@ 9814 @LENGTH@ 14
---------------------------------DEL SimpleType@@Filter @AT@ 9815 @LENGTH@ 6
---------------------------------DEL SimpleName@@clone @AT@ 9823 @LENGTH@ 5
------DEL ExpressionStatement@@MethodInvocation:scan.setFilter(new FilterList(FilterList.Operator.MUST_PASS_ALL,clonedFilters)) @AT@ 9897 @LENGTH@ 81


INS MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @TO@ TypeDeclaration@@[@SuppressWarnings("serial"), public, final]OAuth2AccessTokenJackson2Deserializer, StdDeserializer<OAuth2AccessToken> @AT@ 3725 @LENGTH@ 404
---INS Modifier@@private @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3725 @LENGTH@ 7
---INS ParameterizedType@@Set<String> @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3733 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 3733 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 3737 @LENGTH@ 6
---INS SimpleName@@MethodName:parseScope @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3745 @LENGTH@ 10
---INS SingleVariableDeclaration@@JsonParser jp @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3756 @LENGTH@ 13
------INS SimpleType@@JsonParser @TO@ SingleVariableDeclaration@@JsonParser jp @AT@ 3756 @LENGTH@ 10
------INS SimpleName@@jp @TO@ SingleVariableDeclaration@@JsonParser jp @AT@ 3767 @LENGTH@ 2
---INS SimpleType@@JsonParseException @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3778 @LENGTH@ 18
---INS SimpleType@@IOException @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3798 @LENGTH@ 11
---INS VariableDeclarationStatement@@Set<String> scope; @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3814 @LENGTH@ 18
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> scope; @AT@ 3814 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 3814 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 3818 @LENGTH@ 6
------INS VariableDeclarationFragment@@scope @TO@ VariableDeclarationStatement@@Set<String> scope; @AT@ 3826 @LENGTH@ 5
---------INS SimpleName@@scope @TO@ VariableDeclarationFragment@@scope @AT@ 3826 @LENGTH@ 5
---INS IfStatement@@if (jp.getCurrentToken() == JsonToken.START_ARRAY) {  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} else {  String text=jp.getText();  scope=OAuth2Utils.parseParameterList(text);} @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 3835 @LENGTH@ 275
------MOV Block@@ThenBody:{  String text=jp.getText();  scope=OAuth2Utils.parseParameterList(text);} @TO@ IfStatement@@if (jp.getCurrentToken() == JsonToken.START_ARRAY) {  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} else {  String text=jp.getText();  scope=OAuth2Utils.parseParameterList(text);} @AT@ 3014 @LENGTH@ 88
------INS InfixExpression@@jp.getCurrentToken() == JsonToken.START_ARRAY @TO@ IfStatement@@if (jp.getCurrentToken() == JsonToken.START_ARRAY) {  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} else {  String text=jp.getText();  scope=OAuth2Utils.parseParameterList(text);} @AT@ 3839 @LENGTH@ 45
---------INS MethodInvocation@@jp.getCurrentToken() @TO@ InfixExpression@@jp.getCurrentToken() == JsonToken.START_ARRAY @AT@ 3839 @LENGTH@ 20
------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.getCurrentToken() @AT@ 3839 @LENGTH@ 2
------------INS SimpleName@@MethodName:getCurrentToken:[] @TO@ MethodInvocation@@jp.getCurrentToken() @AT@ 3842 @LENGTH@ 17
---------INS Operator@@== @TO@ InfixExpression@@jp.getCurrentToken() == JsonToken.START_ARRAY @AT@ 3859 @LENGTH@ 2
---------INS QualifiedName@@JsonToken.START_ARRAY @TO@ InfixExpression@@jp.getCurrentToken() == JsonToken.START_ARRAY @AT@ 3863 @LENGTH@ 21
------------INS SimpleName@@JsonToken @TO@ QualifiedName@@JsonToken.START_ARRAY @AT@ 3863 @LENGTH@ 9
------------INS SimpleName@@START_ARRAY @TO@ QualifiedName@@JsonToken.START_ARRAY @AT@ 3873 @LENGTH@ 11
------INS Block@@ThenBody:{  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} @TO@ IfStatement@@if (jp.getCurrentToken() == JsonToken.START_ARRAY) {  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} else {  String text=jp.getText();  scope=OAuth2Utils.parseParameterList(text);} @AT@ 3886 @LENGTH@ 133
---------INS ExpressionStatement@@Assignment:scope=new TreeSet<String>() @TO@ Block@@ThenBody:{  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} @AT@ 3891 @LENGTH@ 30
------------INS Assignment@@scope=new TreeSet<String>() @TO@ ExpressionStatement@@Assignment:scope=new TreeSet<String>() @AT@ 3891 @LENGTH@ 29
---------------INS SimpleName@@scope @TO@ Assignment@@scope=new TreeSet<String>() @AT@ 3891 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@scope=new TreeSet<String>() @AT@ 3896 @LENGTH@ 1
---------------INS ClassInstanceCreation@@TreeSet<String>[] @TO@ Assignment@@scope=new TreeSet<String>() @AT@ 3899 @LENGTH@ 21
------------------INS New@@new @TO@ ClassInstanceCreation@@TreeSet<String>[] @AT@ 3899 @LENGTH@ 3
------------------INS ParameterizedType@@TreeSet<String> @TO@ ClassInstanceCreation@@TreeSet<String>[] @AT@ 3903 @LENGTH@ 15
---------------------INS SimpleType@@TreeSet @TO@ ParameterizedType@@TreeSet<String> @AT@ 3903 @LENGTH@ 7
---------------------INS SimpleType@@String @TO@ ParameterizedType@@TreeSet<String> @AT@ 3911 @LENGTH@ 6
---------INS WhileStatement@@while (jp.nextToken() != JsonToken.END_ARRAY) {  scope.add(jp.getValueAsString());} @TO@ Block@@ThenBody:{  scope=new TreeSet<String>();  while (jp.nextToken() != JsonToken.END_ARRAY) {    scope.add(jp.getValueAsString());  }} @AT@ 3925 @LENGTH@ 90
------------INS InfixExpression@@jp.nextToken() != JsonToken.END_ARRAY @TO@ WhileStatement@@while (jp.nextToken() != JsonToken.END_ARRAY) {  scope.add(jp.getValueAsString());} @AT@ 3932 @LENGTH@ 37
---------------INS MethodInvocation@@jp.nextToken() @TO@ InfixExpression@@jp.nextToken() != JsonToken.END_ARRAY @AT@ 3932 @LENGTH@ 14
------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.nextToken() @AT@ 3932 @LENGTH@ 2
------------------INS SimpleName@@MethodName:nextToken:[] @TO@ MethodInvocation@@jp.nextToken() @AT@ 3935 @LENGTH@ 11
---------------INS Operator@@!= @TO@ InfixExpression@@jp.nextToken() != JsonToken.END_ARRAY @AT@ 3946 @LENGTH@ 2
---------------INS QualifiedName@@JsonToken.END_ARRAY @TO@ InfixExpression@@jp.nextToken() != JsonToken.END_ARRAY @AT@ 3950 @LENGTH@ 19
------------------INS SimpleName@@JsonToken @TO@ QualifiedName@@JsonToken.END_ARRAY @AT@ 3950 @LENGTH@ 9
------------------INS SimpleName@@END_ARRAY @TO@ QualifiedName@@JsonToken.END_ARRAY @AT@ 3960 @LENGTH@ 9
------------INS Block@@WhileBody:{  scope.add(jp.getValueAsString());} @TO@ WhileStatement@@while (jp.nextToken() != JsonToken.END_ARRAY) {  scope.add(jp.getValueAsString());} @AT@ 3971 @LENGTH@ 44
---------------INS ExpressionStatement@@MethodInvocation:scope.add(jp.getValueAsString()) @TO@ Block@@WhileBody:{  scope.add(jp.getValueAsString());} @AT@ 3977 @LENGTH@ 33
------------------INS MethodInvocation@@scope.add(jp.getValueAsString()) @TO@ ExpressionStatement@@MethodInvocation:scope.add(jp.getValueAsString()) @AT@ 3977 @LENGTH@ 32
---------------------INS SimpleName@@Name:scope @TO@ MethodInvocation@@scope.add(jp.getValueAsString()) @AT@ 3977 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:add:[jp.getValueAsString()] @TO@ MethodInvocation@@scope.add(jp.getValueAsString()) @AT@ 3983 @LENGTH@ 26
------------------------INS MethodInvocation@@jp.getValueAsString() @TO@ SimpleName@@MethodName:add:[jp.getValueAsString()] @AT@ 3987 @LENGTH@ 21
---------------------------INS SimpleName@@Name:jp @TO@ MethodInvocation@@jp.getValueAsString() @AT@ 3987 @LENGTH@ 2
---------------------------INS SimpleName@@MethodName:getValueAsString:[] @TO@ MethodInvocation@@jp.getValueAsString() @AT@ 3990 @LENGTH@ 18
---INS ReturnStatement@@SimpleName:scope @TO@ MethodDeclaration@@private, Set<String>, MethodName:parseScope, JsonParser jp, JsonParseException, IOException,  @AT@ 4113 @LENGTH@ 13
------INS SimpleName@@scope @TO@ ReturnStatement@@SimpleName:scope @AT@ 4120 @LENGTH@ 5


UPD FieldDeclaration@@protected, boolean, [ignoreDeclarationExceptions] @TO@ private, boolean, [ignoreDeclarationExceptions] @AT@ 1111 @LENGTH@ 46
---UPD Modifier@@protected @TO@ private @AT@ 1111 @LENGTH@ 9


UPD Block@@ElseBody:{  if (file.getName().endsWith(".jar.index")) {    return;  }  FileInputStream fis=new FileInputStream(file);  try {    BufferedInputStream bis=new BufferedInputStream(fis);    byte[] bytes=new byte[8192];    int read;    while ((read=bis.read(bytes)) > -1) {      digest.update(bytes,0,read);    }  }  finally {    IoUtils.safeClose(fis);  }} @TO@ ElseBody:{  if (file.getName().endsWith(".jar.index")) {    return;  }  try (FileInputStream fis=new FileInputStream(file);BufferedInputStream bis=new BufferedInputStream(fis)){    byte[] bytes=new byte[8192];    int read;    while ((read=bis.read(bytes)) > -1) {      digest.update(bytes,0,read);    }  } } @AT@ 2922 @LENGTH@ 850
---DEL VariableDeclarationStatement@@FileInputStream fis=new FileInputStream(file); @AT@ 3346 @LENGTH@ 48
------DEL SimpleType@@FileInputStream @AT@ 3346 @LENGTH@ 15
---UPD TryStatement@@try {  BufferedInputStream bis=new BufferedInputStream(fis);  byte[] bytes=new byte[8192];  int read;  while ((read=bis.read(bytes)) > -1) {    digest.update(bytes,0,read);  }}  finally {  IoUtils.safeClose(fis);} @TO@ try (FileInputStream fis=new FileInputStream(file);BufferedInputStream bis=new BufferedInputStream(fis)){  byte[] bytes=new byte[8192];  int read;  while ((read=bis.read(bytes)) > -1) {    digest.update(bytes,0,read);  }}  @AT@ 3407 @LENGTH@ 354
------INS VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(file) @TO@ TryStatement@@try {  BufferedInputStream bis=new BufferedInputStream(fis);  byte[] bytes=new byte[8192];  int read;  while ((read=bis.read(bytes)) > -1) {    digest.update(bytes,0,read);  }}  finally {  IoUtils.safeClose(fis);} @AT@ 3351 @LENGTH@ 47
---------INS SimpleType@@FileInputStream @TO@ VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(file) @AT@ 3351 @LENGTH@ 15
---------MOV VariableDeclarationFragment@@fis=new FileInputStream(file) @TO@ VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(file) @AT@ 3362 @LENGTH@ 31
------INS VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(fis) @TO@ TryStatement@@try {  BufferedInputStream bis=new BufferedInputStream(fis);  byte[] bytes=new byte[8192];  int read;  while ((read=bis.read(bytes)) > -1) {    digest.update(bytes,0,read);  }}  finally {  IoUtils.safeClose(fis);} @AT@ 3417 @LENGTH@ 54
---------INS SimpleType@@BufferedInputStream @TO@ VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(fis) @AT@ 3417 @LENGTH@ 19
---------MOV VariableDeclarationFragment@@bis=new BufferedInputStream(fis) @TO@ VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(fis) @AT@ 3450 @LENGTH@ 34
------DEL VariableDeclarationStatement@@BufferedInputStream bis=new BufferedInputStream(fis); @AT@ 3430 @LENGTH@ 55
---------DEL SimpleType@@BufferedInputStream @AT@ 3430 @LENGTH@ 19
------DEL Block@@FinallyBody:{  IoUtils.safeClose(fis);} @AT@ 3706 @LENGTH@ 55
---------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(fis) @AT@ 3724 @LENGTH@ 23
------------DEL MethodInvocation@@IoUtils.safeClose(fis) @AT@ 3724 @LENGTH@ 22
---------------DEL SimpleName@@Name:IoUtils @AT@ 3724 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:safeClose:[fis] @AT@ 3732 @LENGTH@ 14
------------------DEL SimpleName@@fis @AT@ 3742 @LENGTH@ 3


UPD ReturnStatement@@ClassInstanceCreation:new TaskStatusUpdateEvent(counters,progress,stats) @TO@ ClassInstanceCreation:new TaskStatusUpdateEvent(counters,progress,stats,true) @AT@ 14634 @LENGTH@ 60
---UPD ClassInstanceCreation@@TaskStatusUpdateEvent[counters, progress, stats] @TO@ TaskStatusUpdateEvent[counters, progress, stats, true] @AT@ 14641 @LENGTH@ 52
------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@TaskStatusUpdateEvent[counters, progress, stats] @AT@ 14862 @LENGTH@ 4


UPD VariableDeclarationStatement@@String userDn=super.userDn; @TO@ String userDn=super.getUserDn(); @AT@ 1461 @LENGTH@ 29
---UPD VariableDeclarationFragment@@userDn=super.userDn @TO@ userDn=super.getUserDn() @AT@ 1468 @LENGTH@ 21
------DEL SuperFieldAccess@@super.userDn @AT@ 1477 @LENGTH@ 12
---------DEL SimpleName@@userDn @AT@ 1483 @LENGTH@ 6
------INS SuperMethodInvocation@@super.getUserDn() @TO@ VariableDeclarationFragment@@userDn=super.userDn @AT@ 1482 @LENGTH@ 17
---------INS SimpleName@@MethodName:getUserDn:[] @TO@ SuperMethodInvocation@@super.getUserDn() @AT@ 1488 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")) @TO@ MethodInvocation:assertThat(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")).isTrue() @AT@ 6946 @LENGTH@ 110
---INS MethodInvocation@@assertThat(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")) @AT@ 6543 @LENGTH@ 118
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")).isTrue() @AT@ 6653 @LENGTH@ 8
------MOV MethodInvocation@@assertTrue(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")) @TO@ MethodInvocation@@assertThat(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")).isTrue() @AT@ 6946 @LENGTH@ 109
---------MOV MethodInvocation@@template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword") @TO@ MethodInvocation@@assertTrue(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")) @AT@ 6957 @LENGTH@ 97
---UPD MethodInvocation@@assertTrue(template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")) @TO@ MethodName:assertThat:[template.compare("uid=johnyossarian,ou=test people","userPassword","yossariansnewpassword")] @AT@ 6946 @LENGTH@ 109


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]TestPojoView,  @AT@ 1984 @LENGTH@ 156
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1984 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1991 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1995 @LENGTH@ 8
---INS VariableDeclarationStatement@@int result=age; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2016 @LENGTH@ 17
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2016 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=age @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2020 @LENGTH@ 12
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=age @AT@ 2020 @LENGTH@ 6
---------INS SimpleName@@age @TO@ VariableDeclarationFragment@@result=age @AT@ 2029 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:result=31 * result + height @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2042 @LENGTH@ 30
------INS Assignment@@result=31 * result + height @TO@ ExpressionStatement@@Assignment:result=31 * result + height @AT@ 2042 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + height @AT@ 2042 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + height @AT@ 2048 @LENGTH@ 1
---------INS InfixExpression@@31 * result + height @TO@ Assignment@@result=31 * result + height @AT@ 2051 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + height @AT@ 2051 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2051 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2053 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2056 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + height @AT@ 2062 @LENGTH@ 1
------------INS SimpleName@@height @TO@ InfixExpression@@31 * result + height @AT@ 2065 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:result=31 * result + weight @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2081 @LENGTH@ 30
------INS Assignment@@result=31 * result + weight @TO@ ExpressionStatement@@Assignment:result=31 * result + weight @AT@ 2081 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + weight @AT@ 2081 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + weight @AT@ 2087 @LENGTH@ 1
---------INS InfixExpression@@31 * result + weight @TO@ Assignment@@result=31 * result + weight @AT@ 2090 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + weight @AT@ 2090 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2090 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2092 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2095 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + weight @AT@ 2101 @LENGTH@ 1
------------INS SimpleName@@weight @TO@ InfixExpression@@31 * result + weight @AT@ 2104 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2120 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 2127 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @TO@ public, void, MethodName:setMessageExpressionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7796 @LENGTH@ 210
---UPD SimpleName@@MethodName:setMessageExpessionHandler @TO@ MethodName:setMessageExpressionHandler @AT@ 7808 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:assertEquals("&amp;&#32;a&lt;script&gt;&#34;&#39;",TextEscapeUtils.escapeEntities("& a<script>\"'")) @TO@ MethodInvocation:assertThat(TextEscapeUtils.escapeEntities("& a<script>\"'")).isEqualTo("&amp;&#32;a&lt;script&gt;&#34;&#39;") @AT@ 347 @LENGTH@ 106
---UPD MethodInvocation@@assertEquals("&amp;&#32;a&lt;script&gt;&#34;&#39;",TextEscapeUtils.escapeEntities("& a<script>\"'")) @TO@ MethodName:assertThat:[TextEscapeUtils.escapeEntities("& a<script>\"'")] @AT@ 347 @LENGTH@ 105
---INS MethodInvocation@@assertThat(TextEscapeUtils.escapeEntities("& a<script>\"'")).isEqualTo("&amp;&#32;a&lt;script&gt;&#34;&#39;") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("&amp;&#32;a&lt;script&gt;&#34;&#39;",TextEscapeUtils.escapeEntities("& a<script>\"'")) @AT@ 347 @LENGTH@ 114
------MOV MethodInvocation@@assertEquals("&amp;&#32;a&lt;script&gt;&#34;&#39;",TextEscapeUtils.escapeEntities("& a<script>\"'")) @TO@ MethodInvocation@@assertThat(TextEscapeUtils.escapeEntities("& a<script>\"'")).isEqualTo("&amp;&#32;a&lt;script&gt;&#34;&#39;") @AT@ 347 @LENGTH@ 105
---------MOV MethodInvocation@@TextEscapeUtils.escapeEntities("& a<script>\"'") @TO@ MethodInvocation@@assertEquals("&amp;&#32;a&lt;script&gt;&#34;&#39;",TextEscapeUtils.escapeEntities("& a<script>\"'")) @AT@ 403 @LENGTH@ 48
------INS SimpleName@@MethodName:isEqualTo:["&amp;&#32;a&lt;script&gt;&#34;&#39;"] @TO@ MethodInvocation@@assertThat(TextEscapeUtils.escapeEntities("& a<script>\"'")).isEqualTo("&amp;&#32;a&lt;script&gt;&#34;&#39;") @AT@ 408 @LENGTH@ 53
---------INS StringLiteral@@"&amp;&#32;a&lt;script&gt;&#34;&#39;" @TO@ SimpleName@@MethodName:isEqualTo:["&amp;&#32;a&lt;script&gt;&#34;&#39;"] @AT@ 423 @LENGTH@ 37


INS VariableDeclarationStatement@@String xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))); @TO@ MethodDeclaration@@public, voidMethodName:SolrCloudFixture, String solrHome, Exception,  @AT@ 2463 @LENGTH@ 92
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))); @AT@ 2463 @LENGTH@ 6
---INS VariableDeclarationFragment@@xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @TO@ VariableDeclarationStatement@@String xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))); @AT@ 2470 @LENGTH@ 84
------INS SimpleName@@xml @TO@ VariableDeclarationFragment@@xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @AT@ 2470 @LENGTH@ 3
------INS MethodInvocation@@IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @TO@ VariableDeclarationFragment@@xml=IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @AT@ 2476 @LENGTH@ 78
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @AT@ 2476 @LENGTH@ 8
---------INS SimpleName@@MethodName:loadText:[new FileInputStream(new File(solrHome,"solr-no-core.xml"))] @TO@ MethodInvocation@@IOHelper.loadText(new FileInputStream(new File(solrHome,"solr-no-core.xml"))) @AT@ 2485 @LENGTH@ 69
------------INS ClassInstanceCreation@@FileInputStream[new File(solrHome,"solr-no-core.xml")] @TO@ SimpleName@@MethodName:loadText:[new FileInputStream(new File(solrHome,"solr-no-core.xml"))] @AT@ 2494 @LENGTH@ 59
---------------INS New@@new @TO@ ClassInstanceCreation@@FileInputStream[new File(solrHome,"solr-no-core.xml")] @AT@ 2494 @LENGTH@ 3
---------------INS SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[new File(solrHome,"solr-no-core.xml")] @AT@ 2498 @LENGTH@ 15
---------------INS ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @TO@ ClassInstanceCreation@@FileInputStream[new File(solrHome,"solr-no-core.xml")] @AT@ 2514 @LENGTH@ 38
------------------INS New@@new @TO@ ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @AT@ 2514 @LENGTH@ 3
------------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @AT@ 2518 @LENGTH@ 4
------------------INS SimpleName@@solrHome @TO@ ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @AT@ 2523 @LENGTH@ 8
------------------INS StringLiteral@@"solr-no-core.xml" @TO@ ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @AT@ 2533 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 6522 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 6522 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 6541 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 6555 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @TO@ TypeDeclaration@@[@PrepareForTest(OAuth2AccessTokenJackson2Deserializer.class), public]OAuth2AccessTokenJackson2DeserializerTests, BaseOAuth2AccessTokenJacksonTest @AT@ 3316 @LENGTH@ 199
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3316 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3323 @LENGTH@ 4
---INS SimpleName@@MethodName:readValueWithArrayScopes @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3328 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3362 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class); @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3376 @LENGTH@ 94
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class); @AT@ 3376 @LENGTH@ 17
------INS VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @TO@ VariableDeclarationStatement@@OAuth2AccessToken actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class); @AT@ 3394 @LENGTH@ 75
---------INS SimpleName@@actual @TO@ VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @AT@ 3394 @LENGTH@ 6
---------INS MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @TO@ VariableDeclarationFragment@@actual=mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @AT@ 3403 @LENGTH@ 66
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @AT@ 3403 @LENGTH@ 6
------------INS SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ARRAYSCOPE, OAuth2AccessToken.class] @TO@ MethodInvocation@@mapper.readValue(ACCESS_TOKEN_ARRAYSCOPE,OAuth2AccessToken.class) @AT@ 3410 @LENGTH@ 59
---------------INS SimpleName@@ACCESS_TOKEN_ARRAYSCOPE @TO@ SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ARRAYSCOPE, OAuth2AccessToken.class] @AT@ 3420 @LENGTH@ 23
---------------INS TypeLiteral@@OAuth2AccessToken.class @TO@ SimpleName@@MethodName:readValue:[ACCESS_TOKEN_ARRAYSCOPE, OAuth2AccessToken.class] @AT@ 3445 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:assertTokenEquals(accessToken,actual) @TO@ MethodDeclaration@@public, void, MethodName:readValueWithArrayScopes, Exception,  @AT@ 3473 @LENGTH@ 39
------INS MethodInvocation@@assertTokenEquals(accessToken,actual) @TO@ ExpressionStatement@@MethodInvocation:assertTokenEquals(accessToken,actual) @AT@ 3473 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertTokenEquals:[accessToken, actual] @TO@ MethodInvocation@@assertTokenEquals(accessToken,actual) @AT@ 3473 @LENGTH@ 38
------------INS SimpleName@@accessToken @TO@ SimpleName@@MethodName:assertTokenEquals:[accessToken, actual] @AT@ 3491 @LENGTH@ 11
------------INS SimpleName@@actual @TO@ SimpleName@@MethodName:assertTokenEquals:[accessToken, actual] @AT@ 3504 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:FlatpackProducer, FlatpackEndpoint endpoint,  @TO@ voidMethodName:FlatpackProducer, FlatpackEndpoint endpoint,  @AT@ 1107 @LENGTH@ 117
---DEL Modifier@@public @AT@ 1107 @LENGTH@ 6


UPD TypeDeclaration@@[public]ObjectIdentityRetrievalStrategyImplTests, TestCase @TO@ [public]ObjectIdentityRetrievalStrategyImplTests,  @AT@ 526 @LENGTH@ 929
---DEL SimpleType@@TestCase @AT@ 588 @LENGTH@ 8


UPD VariableDeclarationStatement@@@SuppressWarnings("unused") UnauthorizedUserException result=(UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage); @TO@ @SuppressWarnings("unused") UnauthorizedClientException result=(UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage); @AT@ 7593 @LENGTH@ 149
---UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 7623 @LENGTH@ 25
---UPD VariableDeclarationFragment@@result=(UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage) @TO@ result=(UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage) @AT@ 7649 @LENGTH@ 92
------UPD CastExpression@@(UnauthorizedUserException)converter.read(OAuth2Exception.class,inputMessage) @TO@ (UnauthorizedClientException)converter.read(OAuth2Exception.class,inputMessage) @AT@ 7658 @LENGTH@ 83
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 7659 @LENGTH@ 25


UPD VariableDeclarationStatement@@TaskSpec taskSpec=Converters.getTaskSpecfromProto(vertexProto,0,0,null); @TO@ TaskSpec taskSpec=Converters.getTaskSpecfromProto(vertexProto,0,0,tezTaskAttemptId); @AT@ 7257 @LENGTH@ 77
---UPD VariableDeclarationFragment@@taskSpec=Converters.getTaskSpecfromProto(vertexProto,0,0,null) @TO@ taskSpec=Converters.getTaskSpecfromProto(vertexProto,0,0,tezTaskAttemptId) @AT@ 7266 @LENGTH@ 67
------UPD MethodInvocation@@Converters.getTaskSpecfromProto(vertexProto,0,0,null) @TO@ Converters.getTaskSpecfromProto(vertexProto,0,0,tezTaskAttemptId) @AT@ 7277 @LENGTH@ 56
---------UPD SimpleName@@MethodName:getTaskSpecfromProto:[vertexProto, 0, 0, null] @TO@ MethodName:getTaskSpecfromProto:[vertexProto, 0, 0, tezTaskAttemptId] @AT@ 7288 @LENGTH@ 45
------------DEL NullLiteral@@null @AT@ 7328 @LENGTH@ 4
------------INS SimpleName@@tezTaskAttemptId @TO@ SimpleName@@MethodName:getTaskSpecfromProto:[vertexProto, 0, 0, null] @AT@ 7330 @LENGTH@ 16


DEL ExpressionStatement@@Assignment:this.resourceIds=resourceIds @AT@ 2978 @LENGTH@ 31
---DEL Assignment@@this.resourceIds=resourceIds @AT@ 2978 @LENGTH@ 30
------DEL FieldAccess@@this.resourceIds @AT@ 2978 @LENGTH@ 16
---------DEL ThisExpression@@this @AT@ 2978 @LENGTH@ 4
---------DEL SimpleName@@resourceIds @AT@ 2983 @LENGTH@ 11
------DEL Operator@@= @AT@ 2994 @LENGTH@ 1
------DEL SimpleName@@resourceIds @AT@ 2997 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, String, [SHA_224="SHA_224"] @TO@ public, static, final, String, [SHA_224="SHA-224"] @AT@ 2083 @LENGTH@ 47
---UPD VariableDeclarationFragment@@SHA_224="SHA_224" @TO@ SHA_224="SHA-224" @AT@ 2110 @LENGTH@ 19
------UPD StringLiteral@@"SHA_224" @TO@ "SHA-224" @AT@ 2120 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:scope=new HashSet<String>(scopeColl) @TO@ Assignment:scope=new LinkedHashSet<String>(scopeColl) @AT@ 5866 @LENGTH@ 39
---UPD Assignment@@scope=new HashSet<String>(scopeColl) @TO@ scope=new LinkedHashSet<String>(scopeColl) @AT@ 5866 @LENGTH@ 38
------UPD ClassInstanceCreation@@HashSet<String>[scopeColl] @TO@ LinkedHashSet<String>[scopeColl] @AT@ 5874 @LENGTH@ 30
---------UPD ParameterizedType@@HashSet<String> @TO@ LinkedHashSet<String> @AT@ 5878 @LENGTH@ 15
------------UPD SimpleType@@HashSet @TO@ LinkedHashSet @AT@ 5878 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:setMessageHistoryFactory, MessageHistoryFactory messageHistoryFactory,  @TO@ void, MethodName:setMessageHistoryFactory, MessageHistoryFactory messageHistoryFactory,  @AT@ 52267 @LENGTH@ 82
---DEL Modifier@@public @AT@ 52267 @LENGTH@ 6


UPD FieldDeclaration@@private, static, final, ActiveMQConnectionFactory, [connectionFactory=new ActiveMQConnectionFactory("vm://broker?broker.persistent=false&broker.useJmx=false")] @TO@ private, final, ActiveMQConnectionFactory, [connectionFactory=new ActiveMQConnectionFactory("vm://broker?broker.persistent=false&broker.useJmx=false")] @AT@ 1436 @LENGTH@ 156
---DEL Modifier@@static @AT@ 1444 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:KafkaFetchRecords, String topicName, String id, Properties kafkaProps,  @TO@ voidMethodName:KafkaFetchRecords, String topicName, String id, Properties kafkaProps,  @AT@ 3447 @LENGTH@ 325
---DEL Modifier@@public @AT@ 3447 @LENGTH@ 6


UPD TryStatement@@try {  PrimitiveObjectInspector oi1=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  PrimitiveObjectInspector oi2=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  assertEquals(oi1,oi2);  assertEquals(Category.PRIMITIVE,oi1.getCategory());  assertEquals(javaClass,oi1.getJavaPrimitiveClass());  assertEquals(writableClass,oi1.getPrimitiveWritableClass());  if (javaObject != null) {    assertEquals(javaClass,oi1.getPrimitiveJavaObject(javaObject).getClass());    assertEquals(writableClass,oi1.getPrimitiveWritableObject(javaObject).getClass());  }  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} catch (Throwable e) {  e.printStackTrace();  throw e;} @TO@ try {  PrimitiveObjectInspector oi1=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  PrimitiveObjectInspector oi2=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  assertEquals(oi1,oi2);  assertEquals(Category.PRIMITIVE,oi1.getCategory());  assertEquals(javaClass,oi1.getJavaPrimitiveClass());  assertEquals(writableClass,oi1.getPrimitiveWritableClass());  if (javaObject != null) {    assertEquals(javaClass,oi1.getPrimitiveJavaObject(javaObject).getClass());    assertEquals(writableClass,oi1.getPrimitiveWritableObject(javaObject).getClass());  }  if (javaClass == HiveVarchar.class) {    assertEquals("varchar(65535)",oi1.getTypeName());  } else   if (javaClass == HiveChar.class) {    assertEquals("char(255)",oi1.getTypeName());  } else {    assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());  }} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 4763 @LENGTH@ 1100
---INS IfStatement@@if (javaClass == HiveVarchar.class) {  assertEquals("varchar(65535)",oi1.getTypeName());} else if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @TO@ TryStatement@@try {  PrimitiveObjectInspector oi1=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  PrimitiveObjectInspector oi2=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveJavaClass(javaClass).primitiveCategory);  assertEquals(oi1,oi2);  assertEquals(Category.PRIMITIVE,oi1.getCategory());  assertEquals(javaClass,oi1.getJavaPrimitiveClass());  assertEquals(writableClass,oi1.getPrimitiveWritableClass());  if (javaObject != null) {    assertEquals(javaClass,oi1.getPrimitiveJavaObject(javaObject).getClass());    assertEquals(writableClass,oi1.getPrimitiveWritableObject(javaObject).getClass());  }  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 5899 @LENGTH@ 344
------INS InfixExpression@@javaClass == HiveVarchar.class @TO@ IfStatement@@if (javaClass == HiveVarchar.class) {  assertEquals("varchar(65535)",oi1.getTypeName());} else if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 5903 @LENGTH@ 30
---------INS SimpleName@@javaClass @TO@ InfixExpression@@javaClass == HiveVarchar.class @AT@ 5903 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@javaClass == HiveVarchar.class @AT@ 5912 @LENGTH@ 2
---------INS TypeLiteral@@HiveVarchar.class @TO@ InfixExpression@@javaClass == HiveVarchar.class @AT@ 5916 @LENGTH@ 17
------INS Block@@ThenBody:{  assertEquals("varchar(65535)",oi1.getTypeName());} @TO@ IfStatement@@if (javaClass == HiveVarchar.class) {  assertEquals("varchar(65535)",oi1.getTypeName());} else if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 5935 @LENGTH@ 68
---------INS ExpressionStatement@@MethodInvocation:assertEquals("varchar(65535)",oi1.getTypeName()) @TO@ Block@@ThenBody:{  assertEquals("varchar(65535)",oi1.getTypeName());} @AT@ 5945 @LENGTH@ 50
------------INS MethodInvocation@@assertEquals("varchar(65535)",oi1.getTypeName()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("varchar(65535)",oi1.getTypeName()) @AT@ 5945 @LENGTH@ 49
---------------INS SimpleName@@MethodName:assertEquals:["varchar(65535)", oi1.getTypeName()] @TO@ MethodInvocation@@assertEquals("varchar(65535)",oi1.getTypeName()) @AT@ 5945 @LENGTH@ 49
------------------INS StringLiteral@@"varchar(65535)" @TO@ SimpleName@@MethodName:assertEquals:["varchar(65535)", oi1.getTypeName()] @AT@ 5958 @LENGTH@ 16
------------------INS MethodInvocation@@oi1.getTypeName() @TO@ SimpleName@@MethodName:assertEquals:["varchar(65535)", oi1.getTypeName()] @AT@ 5976 @LENGTH@ 17
---------------------INS SimpleName@@Name:oi1 @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 5976 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:getTypeName:[] @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 5980 @LENGTH@ 13
------INS Block@@ElseBody:if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @TO@ IfStatement@@if (javaClass == HiveVarchar.class) {  assertEquals("varchar(65535)",oi1.getTypeName());} else if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 6009 @LENGTH@ 234
---------INS IfStatement@@if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @TO@ Block@@ElseBody:if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 6009 @LENGTH@ 234
------------INS InfixExpression@@javaClass == HiveChar.class @TO@ IfStatement@@if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 6013 @LENGTH@ 27
---------------INS SimpleName@@javaClass @TO@ InfixExpression@@javaClass == HiveChar.class @AT@ 6013 @LENGTH@ 9
---------------INS Operator@@== @TO@ InfixExpression@@javaClass == HiveChar.class @AT@ 6022 @LENGTH@ 2
---------------INS TypeLiteral@@HiveChar.class @TO@ InfixExpression@@javaClass == HiveChar.class @AT@ 6026 @LENGTH@ 14
------------INS Block@@ThenBody:{  assertEquals("char(255)",oi1.getTypeName());} @TO@ IfStatement@@if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 6042 @LENGTH@ 63
---------------INS ExpressionStatement@@MethodInvocation:assertEquals("char(255)",oi1.getTypeName()) @TO@ Block@@ThenBody:{  assertEquals("char(255)",oi1.getTypeName());} @AT@ 6052 @LENGTH@ 45
------------------INS MethodInvocation@@assertEquals("char(255)",oi1.getTypeName()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("char(255)",oi1.getTypeName()) @AT@ 6052 @LENGTH@ 44
---------------------INS SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @TO@ MethodInvocation@@assertEquals("char(255)",oi1.getTypeName()) @AT@ 6052 @LENGTH@ 44
------------------------INS StringLiteral@@"char(255)" @TO@ SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @AT@ 6065 @LENGTH@ 11
------------------------INS MethodInvocation@@oi1.getTypeName() @TO@ SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @AT@ 6078 @LENGTH@ 17
---------------------------INS SimpleName@@Name:oi1 @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 6078 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:getTypeName:[] @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 6082 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @TO@ MethodInvocation@@assertEquals("char(255)",oi1.getTypeName()) @AT@ 6052 @LENGTH@ 44
------------------------INS StringLiteral@@"char(255)" @TO@ SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @AT@ 6065 @LENGTH@ 11
------------------------INS MethodInvocation@@oi1.getTypeName() @TO@ SimpleName@@MethodName:assertEquals:["char(255)", oi1.getTypeName()] @AT@ 6078 @LENGTH@ 17
---------------------------INS SimpleName@@Name:oi1 @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 6078 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:getTypeName:[] @TO@ MethodInvocation@@oi1.getTypeName() @AT@ 6082 @LENGTH@ 13
------------INS Block@@ElseBody:{  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @TO@ IfStatement@@if (javaClass == HiveChar.class) {  assertEquals("char(255)",oi1.getTypeName());} else {  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 6111 @LENGTH@ 132
---------------MOV ExpressionStatement@@MethodInvocation:assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName()) @TO@ Block@@ElseBody:{  assertEquals(PrimitiveObjectInspectorUtils.getTypeNameFromPrimitiveJava(javaClass),oi1.getTypeName());} @AT@ 5673 @LENGTH@ 114


UPD MethodDeclaration@@public, voidMethodName:MyFileInputStream, File file, FileNotFoundException,  @TO@ voidMethodName:MyFileInputStream, File file, FileNotFoundException,  @AT@ 3094 @LENGTH@ 103
---DEL Modifier@@public @AT@ 3094 @LENGTH@ 6


UPD IfStatement@@if (serversRegistry.get(port).isEmpty()) {  Undertow server=serversRegistry.get(port).getServer();  if (server != null) {    server.stop();  }  serversRegistry.remove(port);} else {  startServer(consumer);} @TO@ if (undertowRegistry.isEmpty()) {  Undertow server=undertowRegistry.getServer();  if (server != null) {    server.stop();  }  serversRegistry.remove(port);} else {  startServer(consumer);} @AT@ 11020 @LENGTH@ 411


UPD EnhancedForStatement@@for (Map.Entry<String,String> property : properties.entrySet()) {  String value=property.getValue();  String originalName=property.getKey();  String name=property.getKey();  name=stripOptionalPrefixFromName(rows,name);  String propertyName=getPropertyNameFromNameWithPrefix(rows,name);  if (propertyName != null) {    name=propertyName;  }  String prefix=getPropertyPrefix(rows,name);  String kind=getPropertyKind(rows,name);  boolean placeholder=value.startsWith("{{") || value.startsWith("${") || value.startsWith("$simple{");  boolean lookup=value.startsWith("#") && value.length() > 1;  boolean mulitValue=prefix != null && originalName.startsWith(prefix) && isPropertyMultiValue(rows,name);  Map<String,String> row=getRow(rows,name);  if (row == null) {    if (!lenientProperties && !"stub".equals(scheme)) {      result.addUnknown(name);      if (suggestionStrategy != null) {        String[] suggestions=suggestionStrategy.suggestEndpointOptions(getNames(rows),name);        if (suggestions != null) {          result.addUnknownSuggestions(name,suggestions);        }      }    }  } else {    String defaultValue=getPropertyDefaultValue(rows,name);    if (defaultValue != null) {      result.addDefaultValue(name,defaultValue);    }    boolean required=isPropertyRequired(rows,name);    if (required && isEmpty(value)) {      result.addRequired(name);    }    String enums=getPropertyEnum(rows,name);    if (!mulitValue && !placeholder && !lookup&& enums != null) {      String[] choices=enums.split(",");      boolean found=false;      for (      String s : choices) {        if (value.equalsIgnoreCase(s)) {          found=true;          break;        }      }      if (!found) {        result.addInvalidEnum(name,value);        result.addInvalidEnumChoices(name,choices);      }    }    if (!mulitValue && !"path".equals(kind) && isPropertyObject(rows,name)) {      if (!value.startsWith("#") || value.length() <= 1) {        result.addInvalidReference(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyBoolean(rows,name)) {      boolean bool="true".equalsIgnoreCase(value) || "false".equalsIgnoreCase(value);      if (!bool) {        result.addInvalidBoolean(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyInteger(rows,name)) {      boolean valid=validateInteger(value);      if (!valid) {        result.addInvalidInteger(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyNumber(rows,name)) {      boolean valid=false;      try {        valid=!Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();      } catch (      Exception e) {      }      if (!valid) {        result.addInvalidNumber(name,value);      }    }  }} @TO@ for (Map.Entry<String,String> property : properties.entrySet()) {  String value=property.getValue();  if (first) {    if (value != null && value.startsWith("//")) {      value=value.substring(2);    }  }  first=false;  String originalName=property.getKey();  String name=property.getKey();  name=stripOptionalPrefixFromName(rows,name);  String propertyName=getPropertyNameFromNameWithPrefix(rows,name);  if (propertyName != null) {    name=propertyName;  }  String prefix=getPropertyPrefix(rows,name);  String kind=getPropertyKind(rows,name);  boolean placeholder=value.startsWith("{{") || value.startsWith("${") || value.startsWith("$simple{");  boolean lookup=value.startsWith("#") && value.length() > 1;  boolean mulitValue=prefix != null && originalName.startsWith(prefix) && isPropertyMultiValue(rows,name);  Map<String,String> row=getRow(rows,name);  if (row == null) {    if (!lenientProperties && !"stub".equals(scheme)) {      result.addUnknown(name);      if (suggestionStrategy != null) {        String[] suggestions=suggestionStrategy.suggestEndpointOptions(getNames(rows),name);        if (suggestions != null) {          result.addUnknownSuggestions(name,suggestions);        }      }    }  } else {    String defaultValue=getPropertyDefaultValue(rows,name);    if (defaultValue != null) {      result.addDefaultValue(name,defaultValue);    }    boolean required=isPropertyRequired(rows,name);    if (required && isEmpty(value)) {      result.addRequired(name);    }    String enums=getPropertyEnum(rows,name);    if (!mulitValue && !placeholder && !lookup&& enums != null) {      String[] choices=enums.split(",");      boolean found=false;      for (      String s : choices) {        if (value.equalsIgnoreCase(s)) {          found=true;          break;        }      }      if (!found) {        result.addInvalidEnum(name,value);        result.addInvalidEnumChoices(name,choices);      }    }    if (!mulitValue && !"path".equals(kind) && isPropertyObject(rows,name)) {      if (!value.startsWith("#") || value.length() <= 1) {        result.addInvalidReference(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyBoolean(rows,name)) {      boolean bool="true".equalsIgnoreCase(value) || "false".equalsIgnoreCase(value);      if (!bool) {        result.addInvalidBoolean(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyInteger(rows,name)) {      boolean valid=validateInteger(value);      if (!valid) {        result.addInvalidInteger(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyNumber(rows,name)) {      boolean valid=false;      try {        valid=!Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();      } catch (      Exception e) {      }      if (!valid) {        result.addInvalidNumber(name,value);      }    }  }} @AT@ 28047 @LENGTH@ 5161
---INS IfStatement@@if (first) {  if (value != null && value.startsWith("//")) {    value=value.substring(2);  }} @TO@ EnhancedForStatement@@for (Map.Entry<String,String> property : properties.entrySet()) {  String value=property.getValue();  String originalName=property.getKey();  String name=property.getKey();  name=stripOptionalPrefixFromName(rows,name);  String propertyName=getPropertyNameFromNameWithPrefix(rows,name);  if (propertyName != null) {    name=propertyName;  }  String prefix=getPropertyPrefix(rows,name);  String kind=getPropertyKind(rows,name);  boolean placeholder=value.startsWith("{{") || value.startsWith("${") || value.startsWith("$simple{");  boolean lookup=value.startsWith("#") && value.length() > 1;  boolean mulitValue=prefix != null && originalName.startsWith(prefix) && isPropertyMultiValue(rows,name);  Map<String,String> row=getRow(rows,name);  if (row == null) {    if (!lenientProperties && !"stub".equals(scheme)) {      result.addUnknown(name);      if (suggestionStrategy != null) {        String[] suggestions=suggestionStrategy.suggestEndpointOptions(getNames(rows),name);        if (suggestions != null) {          result.addUnknownSuggestions(name,suggestions);        }      }    }  } else {    String defaultValue=getPropertyDefaultValue(rows,name);    if (defaultValue != null) {      result.addDefaultValue(name,defaultValue);    }    boolean required=isPropertyRequired(rows,name);    if (required && isEmpty(value)) {      result.addRequired(name);    }    String enums=getPropertyEnum(rows,name);    if (!mulitValue && !placeholder && !lookup&& enums != null) {      String[] choices=enums.split(",");      boolean found=false;      for (      String s : choices) {        if (value.equalsIgnoreCase(s)) {          found=true;          break;        }      }      if (!found) {        result.addInvalidEnum(name,value);        result.addInvalidEnumChoices(name,choices);      }    }    if (!mulitValue && !"path".equals(kind) && isPropertyObject(rows,name)) {      if (!value.startsWith("#") || value.length() <= 1) {        result.addInvalidReference(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyBoolean(rows,name)) {      boolean bool="true".equalsIgnoreCase(value) || "false".equalsIgnoreCase(value);      if (!bool) {        result.addInvalidBoolean(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyInteger(rows,name)) {      boolean valid=validateInteger(value);      if (!valid) {        result.addInvalidInteger(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyNumber(rows,name)) {      boolean valid=false;      try {        valid=!Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();      } catch (      Exception e) {      }      if (!valid) {        result.addInvalidNumber(name,value);      }    }  }} @AT@ 28204 @LENGTH@ 263
------INS SimpleName@@first @TO@ IfStatement@@if (first) {  if (value != null && value.startsWith("//")) {    value=value.substring(2);  }} @AT@ 28208 @LENGTH@ 5
------INS Block@@ThenBody:{  if (value != null && value.startsWith("//")) {    value=value.substring(2);  }} @TO@ IfStatement@@if (first) {  if (value != null && value.startsWith("//")) {    value=value.substring(2);  }} @AT@ 28215 @LENGTH@ 252
---------INS IfStatement@@if (value != null && value.startsWith("//")) {  value=value.substring(2);} @TO@ Block@@ThenBody:{  if (value != null && value.startsWith("//")) {    value=value.substring(2);  }} @AT@ 28341 @LENGTH@ 112
------------INS InfixExpression@@value != null && value.startsWith("//") @TO@ IfStatement@@if (value != null && value.startsWith("//")) {  value=value.substring(2);} @AT@ 28345 @LENGTH@ 39
---------------INS InfixExpression@@value != null @TO@ InfixExpression@@value != null && value.startsWith("//") @AT@ 28345 @LENGTH@ 13
------------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 28345 @LENGTH@ 5
------------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 28350 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 28354 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@value != null && value.startsWith("//") @AT@ 28358 @LENGTH@ 2
---------------INS MethodInvocation@@value.startsWith("//") @TO@ InfixExpression@@value != null && value.startsWith("//") @AT@ 28362 @LENGTH@ 22
------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.startsWith("//") @AT@ 28362 @LENGTH@ 5
------------------INS SimpleName@@MethodName:startsWith:["//"] @TO@ MethodInvocation@@value.startsWith("//") @AT@ 28368 @LENGTH@ 16
---------------------INS StringLiteral@@"//" @TO@ SimpleName@@MethodName:startsWith:["//"] @AT@ 28379 @LENGTH@ 4
------------INS Block@@ThenBody:{  value=value.substring(2);} @TO@ IfStatement@@if (value != null && value.startsWith("//")) {  value=value.substring(2);} @AT@ 28386 @LENGTH@ 67
---------------INS ExpressionStatement@@Assignment:value=value.substring(2) @TO@ Block@@ThenBody:{  value=value.substring(2);} @AT@ 28408 @LENGTH@ 27
------------------INS Assignment@@value=value.substring(2) @TO@ ExpressionStatement@@Assignment:value=value.substring(2) @AT@ 28408 @LENGTH@ 26
---------------------INS SimpleName@@value @TO@ Assignment@@value=value.substring(2) @AT@ 28408 @LENGTH@ 5
---------------------INS Operator@@= @TO@ Assignment@@value=value.substring(2) @AT@ 28413 @LENGTH@ 1
---------------------INS MethodInvocation@@value.substring(2) @TO@ Assignment@@value=value.substring(2) @AT@ 28416 @LENGTH@ 18
------------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.substring(2) @AT@ 28416 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:substring:[2] @TO@ MethodInvocation@@value.substring(2) @AT@ 28422 @LENGTH@ 12
---------------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:substring:[2] @AT@ 28432 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:first=false @TO@ EnhancedForStatement@@for (Map.Entry<String,String> property : properties.entrySet()) {  String value=property.getValue();  String originalName=property.getKey();  String name=property.getKey();  name=stripOptionalPrefixFromName(rows,name);  String propertyName=getPropertyNameFromNameWithPrefix(rows,name);  if (propertyName != null) {    name=propertyName;  }  String prefix=getPropertyPrefix(rows,name);  String kind=getPropertyKind(rows,name);  boolean placeholder=value.startsWith("{{") || value.startsWith("${") || value.startsWith("$simple{");  boolean lookup=value.startsWith("#") && value.length() > 1;  boolean mulitValue=prefix != null && originalName.startsWith(prefix) && isPropertyMultiValue(rows,name);  Map<String,String> row=getRow(rows,name);  if (row == null) {    if (!lenientProperties && !"stub".equals(scheme)) {      result.addUnknown(name);      if (suggestionStrategy != null) {        String[] suggestions=suggestionStrategy.suggestEndpointOptions(getNames(rows),name);        if (suggestions != null) {          result.addUnknownSuggestions(name,suggestions);        }      }    }  } else {    String defaultValue=getPropertyDefaultValue(rows,name);    if (defaultValue != null) {      result.addDefaultValue(name,defaultValue);    }    boolean required=isPropertyRequired(rows,name);    if (required && isEmpty(value)) {      result.addRequired(name);    }    String enums=getPropertyEnum(rows,name);    if (!mulitValue && !placeholder && !lookup&& enums != null) {      String[] choices=enums.split(",");      boolean found=false;      for (      String s : choices) {        if (value.equalsIgnoreCase(s)) {          found=true;          break;        }      }      if (!found) {        result.addInvalidEnum(name,value);        result.addInvalidEnumChoices(name,choices);      }    }    if (!mulitValue && !"path".equals(kind) && isPropertyObject(rows,name)) {      if (!value.startsWith("#") || value.length() <= 1) {        result.addInvalidReference(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyBoolean(rows,name)) {      boolean bool="true".equalsIgnoreCase(value) || "false".equalsIgnoreCase(value);      if (!bool) {        result.addInvalidBoolean(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyInteger(rows,name)) {      boolean valid=validateInteger(value);      if (!valid) {        result.addInvalidInteger(name,value);      }    }    if (!mulitValue && !placeholder && !lookup&& isPropertyNumber(rows,name)) {      boolean valid=false;      try {        valid=!Double.valueOf(value).isNaN() || !Float.valueOf(value).isNaN();      } catch (      Exception e) {      }      if (!valid) {        result.addInvalidNumber(name,value);      }    }  }} @AT@ 28480 @LENGTH@ 14
------INS Assignment@@first=false @TO@ ExpressionStatement@@Assignment:first=false @AT@ 28480 @LENGTH@ 13
---------INS SimpleName@@first @TO@ Assignment@@first=false @AT@ 28480 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@first=false @AT@ 28485 @LENGTH@ 1
---------INS BooleanLiteral@@false @TO@ Assignment@@first=false @AT@ 28488 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:Pair, int left, int right,  @TO@ voidMethodName:Pair, int left, int right,  @AT@ 4341 @LENGTH@ 106
---DEL Modifier@@public @AT@ 4341 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:PojoCallable, Request request, ITestPojo proxy,  @TO@ voidMethodName:PojoCallable, Request request, ITestPojo proxy,  @AT@ 4252 @LENGTH@ 121
---DEL Modifier@@public @AT@ 4252 @LENGTH@ 6


UPD TypeDeclaration@@[public]RemoteAuthenticationProviderTests, TestCase @TO@ [public]RemoteAuthenticationProviderTests,  @AT@ 1160 @LENGTH@ 3175
---DEL SimpleType@@TestCase @AT@ 1215 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:Mockito.when(operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0))).thenReturn(operation) @TO@ MethodInvocation:Mockito.when(operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0L))).thenReturn(operation) @AT@ 2750 @LENGTH@ 167
---UPD MethodInvocation@@Mockito.when(operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0))).thenReturn(operation) @TO@ Mockito.when(operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0L))).thenReturn(operation) @AT@ 2750 @LENGTH@ 166
------UPD MethodInvocation@@MethodName:when:[operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0))] @TO@ MethodName:when:[operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0L))] @AT@ 2750 @LENGTH@ 144
---------UPD MethodInvocation@@operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0)) @TO@ operationManager.newExecuteStatementOperation(same(session),eq(hql),(Map<String,String>)Mockito.any(),eq(true),eq(0L)) @AT@ 2763 @LENGTH@ 130
------------UPD SimpleName@@MethodName:newExecuteStatementOperation:[same(session), eq(hql), (Map<String,String>)Mockito.any(), eq(true), eq(0)] @TO@ MethodName:newExecuteStatementOperation:[same(session), eq(hql), (Map<String,String>)Mockito.any(), eq(true), eq(0L)] @AT@ 2780 @LENGTH@ 113
---------------UPD MethodInvocation@@eq(0) @TO@ eq(0L) @AT@ 2887 @LENGTH@ 5
------------------UPD SimpleName@@MethodName:eq:[0] @TO@ MethodName:eq:[0L] @AT@ 2887 @LENGTH@ 5
---------------------UPD NumberLiteral@@0 @TO@ 0L @AT@ 2890 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:CustomHeaderFilterStrategy,  @TO@ voidMethodName:CustomHeaderFilterStrategy,  @AT@ 2636 @LENGTH@ 190
---DEL Modifier@@public @AT@ 2636 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @TO@ TypeDeclaration@@[public]ExpressionBuilderTest, TestSupport @AT@ 4970 @LENGTH@ 498
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 4970 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 4977 @LENGTH@ 4
---INS SimpleName@@MethodName:testParseSimpleOrFallbackToConstantExpression @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 4982 @LENGTH@ 45
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 5037 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals("world",parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)) @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 5057 @LENGTH@ 121
------INS MethodInvocation@@assertEquals("world",parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("world",parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)) @AT@ 5057 @LENGTH@ 120
---------INS SimpleName@@MethodName:assertEquals:["world", parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)] @TO@ MethodInvocation@@assertEquals("world",parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)) @AT@ 5057 @LENGTH@ 120
------------INS StringLiteral@@"world" @TO@ SimpleName@@MethodName:assertEquals:["world", parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)] @AT@ 5070 @LENGTH@ 7
------------INS MethodInvocation@@parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class) @TO@ SimpleName@@MethodName:assertEquals:["world", parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class)] @AT@ 5079 @LENGTH@ 97
---------------INS MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["world", camelContext] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class) @AT@ 5079 @LENGTH@ 64
------------------INS StringLiteral@@"world" @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["world", camelContext] @AT@ 5121 @LENGTH@ 7
------------------INS SimpleName@@camelContext @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["world", camelContext] @AT@ 5130 @LENGTH@ 12
---------------INS SimpleName@@MethodName:evaluate:[exchange, String.class] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("world",camelContext).evaluate(exchange,String.class) @AT@ 5144 @LENGTH@ 32
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5153 @LENGTH@ 8
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5163 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)) @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 5187 @LENGTH@ 130
------INS MethodInvocation@@assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)) @AT@ 5187 @LENGTH@ 129
---------INS SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)] @TO@ MethodInvocation@@assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)) @AT@ 5187 @LENGTH@ 129
------------INS StringLiteral@@"Hello there!" @TO@ SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)] @AT@ 5200 @LENGTH@ 14
------------INS MethodInvocation@@parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class) @TO@ SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class)] @AT@ 5216 @LENGTH@ 99
---------------INS MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["${body}", camelContext] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class) @AT@ 5216 @LENGTH@ 66
------------------INS StringLiteral@@"${body}" @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["${body}", camelContext] @AT@ 5258 @LENGTH@ 9
------------------INS SimpleName@@camelContext @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["${body}", camelContext] @AT@ 5269 @LENGTH@ 12
---------------INS SimpleName@@MethodName:evaluate:[exchange, String.class] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("${body}",camelContext).evaluate(exchange,String.class) @AT@ 5283 @LENGTH@ 32
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5292 @LENGTH@ 8
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5302 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)) @TO@ MethodDeclaration@@public, void, MethodName:testParseSimpleOrFallbackToConstantExpression, Exception,  @AT@ 5326 @LENGTH@ 136
------INS MethodInvocation@@assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)) @AT@ 5326 @LENGTH@ 135
---------INS SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)] @TO@ MethodInvocation@@assertEquals("Hello there!",parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)) @AT@ 5326 @LENGTH@ 135
------------INS StringLiteral@@"Hello there!" @TO@ SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)] @AT@ 5339 @LENGTH@ 14
------------INS MethodInvocation@@parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class) @TO@ SimpleName@@MethodName:assertEquals:["Hello there!", parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class)] @AT@ 5355 @LENGTH@ 105
---------------INS MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["$simple{body}", camelContext] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class) @AT@ 5355 @LENGTH@ 72
------------------INS StringLiteral@@"$simple{body}" @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["$simple{body}", camelContext] @AT@ 5397 @LENGTH@ 15
------------------INS SimpleName@@camelContext @TO@ MethodInvocation@@MethodName:parseSimpleOrFallbackToConstantExpression:["$simple{body}", camelContext] @AT@ 5414 @LENGTH@ 12
---------------INS SimpleName@@MethodName:evaluate:[exchange, String.class] @TO@ MethodInvocation@@parseSimpleOrFallbackToConstantExpression("$simple{body}",camelContext).evaluate(exchange,String.class) @AT@ 5428 @LENGTH@ 32
------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5437 @LENGTH@ 8
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:evaluate:[exchange, String.class] @AT@ 5447 @LENGTH@ 12


UPD FieldDeclaration@@private, String, [url="netty4-http:http://0.0.0.0:" + getPort() + "/cheese?urlDecodeHeaders=true"] @TO@ private, String, [url="netty4-http:http://localhost:" + getPort() + "/cheese?urlDecodeHeaders=true"] @AT@ 1089 @LENGTH@ 97
---UPD VariableDeclarationFragment@@url="netty4-http:http://0.0.0.0:" + getPort() + "/cheese?urlDecodeHeaders=true" @TO@ url="netty4-http:http://localhost:" + getPort() + "/cheese?urlDecodeHeaders=true" @AT@ 1104 @LENGTH@ 81
------UPD InfixExpression@@"netty4-http:http://0.0.0.0:" + getPort() + "/cheese?urlDecodeHeaders=true" @TO@ "netty4-http:http://localhost:" + getPort() + "/cheese?urlDecodeHeaders=true" @AT@ 1110 @LENGTH@ 75
---------UPD StringLiteral@@"netty4-http:http://0.0.0.0:" @TO@ "netty4-http:http://localhost:" @AT@ 1110 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:cipher.doFinal(inBuffer,outBuffer) @TO@ MethodInvocation:cipher.doFinal(inBuffer,out) @AT@ 8981 @LENGTH@ 36
---UPD MethodInvocation@@cipher.doFinal(inBuffer,outBuffer) @TO@ cipher.doFinal(inBuffer,out) @AT@ 8981 @LENGTH@ 35
------UPD SimpleName@@MethodName:doFinal:[inBuffer, outBuffer] @TO@ MethodName:doFinal:[inBuffer, out] @AT@ 8988 @LENGTH@ 28
---------UPD SimpleName@@outBuffer @TO@ out @AT@ 9006 @LENGTH@ 9


UPD VariableDeclarationStatement@@UnauthorizedUserException result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class); @TO@ UnauthorizedClientException result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class); @AT@ 4115 @LENGTH@ 120
---UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 4115 @LENGTH@ 25
---UPD VariableDeclarationFragment@@result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 4141 @LENGTH@ 93
------UPD CastExpression@@(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ (UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 4150 @LENGTH@ 84
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 4151 @LENGTH@ 25


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(WARArchive.class,determineName()).staticContent() @TO@ MethodInvocation:archiveFromCurrentApp().staticContent() @AT@ 1911 @LENGTH@ 76
---UPD MethodInvocation@@ShrinkWrap.create(WARArchive.class,determineName()).staticContent() @TO@ archiveFromCurrentApp().staticContent() @AT@ 1918 @LENGTH@ 68
------DEL MethodInvocation@@MethodName:create:[WARArchive.class, determineName()] @AT@ 1918 @LENGTH@ 52
---------DEL TypeLiteral@@WARArchive.class @AT@ 1936 @LENGTH@ 16
------DEL SimpleName@@Name:ShrinkWrap @AT@ 1918 @LENGTH@ 10
------MOV MethodInvocation@@MethodName:determineName:[] @TO@ MethodInvocation@@ShrinkWrap.create(WARArchive.class,determineName()).staticContent() @AT@ 1954 @LENGTH@ 15


UPD ReturnStatement@@ClassInstanceCreation:new StreamSource(ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat(File.separator).concat(href))) @TO@ ClassInstanceCreation:new StreamSource(ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat("/").concat(href))) @AT@ 1478 @LENGTH@ 152
---UPD ClassInstanceCreation@@StreamSource[ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat(File.separator).concat(href))] @TO@ StreamSource[ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat("/").concat(href))] @AT@ 1485 @LENGTH@ 144
------UPD MethodInvocation@@ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat(File.separator).concat(href)) @TO@ ClassPathURIResolver.class.getClassLoader().getResourceAsStream(rulesDir.concat("/").concat(href)) @AT@ 1502 @LENGTH@ 126
---------UPD SimpleName@@MethodName:getResourceAsStream:[rulesDir.concat(File.separator).concat(href)] @TO@ MethodName:getResourceAsStream:[rulesDir.concat("/").concat(href)] @AT@ 1563 @LENGTH@ 65
------------UPD MethodInvocation@@rulesDir.concat(File.separator).concat(href) @TO@ rulesDir.concat("/").concat(href) @AT@ 1583 @LENGTH@ 44
---------------UPD MethodInvocation@@MethodName:concat:[File.separator] @TO@ MethodName:concat:["/"] @AT@ 1583 @LENGTH@ 31
------------------DEL QualifiedName@@File.separator @AT@ 1599 @LENGTH@ 14
---------------------DEL SimpleName@@File @AT@ 1599 @LENGTH@ 4
---------------------DEL SimpleName@@separator @AT@ 1604 @LENGTH@ 9
------------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:concat:[File.separator] @AT@ 1599 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertSame(e,request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)) @TO@ MethodInvocation:assertThat(request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)).isSameAs(e) @AT@ 1611 @LENGTH@ 93
---UPD MethodInvocation@@assertSame(e,request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)) @TO@ MethodName:assertThat:[request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)] @AT@ 1611 @LENGTH@ 92
---INS MethodInvocation@@assertThat(request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)).isSameAs(e) @TO@ ExpressionStatement@@MethodInvocation:assertSame(e,request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)) @AT@ 1611 @LENGTH@ 97
------MOV MethodInvocation@@assertSame(e,request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)) @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)).isSameAs(e) @AT@ 1611 @LENGTH@ 92
---------MOV MethodInvocation@@request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION) @TO@ MethodInvocation@@assertSame(e,request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)) @AT@ 1629 @LENGTH@ 73
------INS SimpleName@@MethodName:isSameAs:[e] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(WebAttributes.AUTHENTICATION_EXCEPTION)).isSameAs(e) @AT@ 1697 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SimpleName@@MethodName:isSameAs:[e] @AT@ 1706 @LENGTH@ 1


UPD MethodDeclaration@@public, boolean, MethodName:equals, HiveVarchar rhs,  @TO@ public, boolean, MethodName:equals, Object rhs,  @AT@ 1626 @LENGTH@ 143
---UPD SingleVariableDeclaration@@HiveVarchar rhs @TO@ Object rhs @AT@ 1648 @LENGTH@ 15
------UPD SimpleType@@HiveVarchar @TO@ Object @AT@ 1648 @LENGTH@ 11
---UPD ReturnStatement@@MethodInvocation:this.getValue().equals(rhs.getValue()) @TO@ MethodInvocation:this.getValue().equals(((HiveVarchar)rhs).getValue()) @AT@ 1719 @LENGTH@ 46
------UPD MethodInvocation@@this.getValue().equals(rhs.getValue()) @TO@ this.getValue().equals(((HiveVarchar)rhs).getValue()) @AT@ 1726 @LENGTH@ 38
---------UPD SimpleName@@MethodName:equals:[rhs.getValue()] @TO@ MethodName:equals:[((HiveVarchar)rhs).getValue()] @AT@ 1742 @LENGTH@ 22
------------UPD MethodInvocation@@rhs.getValue() @TO@ ((HiveVarchar)rhs).getValue() @AT@ 1749 @LENGTH@ 14
---------------INS ParenthesizedExpression@@((HiveVarchar)rhs) @TO@ MethodInvocation@@rhs.getValue() @AT@ 1744 @LENGTH@ 18
------------------INS CastExpression@@(HiveVarchar)rhs @TO@ ParenthesizedExpression@@((HiveVarchar)rhs) @AT@ 1745 @LENGTH@ 16
---------------------INS SimpleType@@HiveVarchar @TO@ CastExpression@@(HiveVarchar)rhs @AT@ 1746 @LENGTH@ 11
---------------------INS SimpleName@@rhs @TO@ CastExpression@@(HiveVarchar)rhs @AT@ 1758 @LENGTH@ 3
---------------DEL SimpleName@@Name:rhs @AT@ 1749 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), @Transactional, public]RepositoryEntityControllerIntegrationTests, AbstractControllerIntegrationTests @AT@ 10103 @LENGTH@ 676
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10103 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10110 @LENGTH@ 4
---INS SimpleName@@MethodName:deletesEntityWithCustomLookupCorrectly @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10115 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10163 @LENGTH@ 9
---INS VariableDeclarationStatement@@Address address=repository.save(new Address()); @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10178 @LENGTH@ 49
------INS SimpleType@@Address @TO@ VariableDeclarationStatement@@Address address=repository.save(new Address()); @AT@ 10178 @LENGTH@ 7
------INS VariableDeclarationFragment@@address=repository.save(new Address()) @TO@ VariableDeclarationStatement@@Address address=repository.save(new Address()); @AT@ 10186 @LENGTH@ 40
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=repository.save(new Address()) @AT@ 10186 @LENGTH@ 7
---------INS MethodInvocation@@repository.save(new Address()) @TO@ VariableDeclarationFragment@@address=repository.save(new Address()) @AT@ 10196 @LENGTH@ 30
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(new Address()) @AT@ 10196 @LENGTH@ 10
------------INS SimpleName@@MethodName:save:[new Address()] @TO@ MethodInvocation@@repository.save(new Address()) @AT@ 10207 @LENGTH@ 19
---------------INS ClassInstanceCreation@@Address[] @TO@ SimpleName@@MethodName:save:[new Address()] @AT@ 10212 @LENGTH@ 13
------------------INS New@@new @TO@ ClassInstanceCreation@@Address[] @AT@ 10212 @LENGTH@ 3
------------------INS SimpleType@@Address @TO@ ClassInstanceCreation@@Address[] @AT@ 10216 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(address.id),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10230 @LENGTH@ 63
------INS MethodInvocation@@assertThat(repository.findOne(address.id),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(address.id),is(notNullValue())) @AT@ 10230 @LENGTH@ 62
---------INS SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(notNullValue())] @TO@ MethodInvocation@@assertThat(repository.findOne(address.id),is(notNullValue())) @AT@ 10230 @LENGTH@ 62
------------INS MethodInvocation@@repository.findOne(address.id) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(notNullValue())] @AT@ 10241 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findOne(address.id) @AT@ 10241 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findOne:[address.id] @TO@ MethodInvocation@@repository.findOne(address.id) @AT@ 10252 @LENGTH@ 19
------------------INS QualifiedName@@address.id @TO@ SimpleName@@MethodName:findOne:[address.id] @AT@ 10260 @LENGTH@ 10
---------------------INS SimpleName@@address @TO@ QualifiedName@@address.id @AT@ 10260 @LENGTH@ 7
---------------------INS SimpleName@@id @TO@ QualifiedName@@address.id @AT@ 10268 @LENGTH@ 2
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(notNullValue())] @AT@ 10273 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 10273 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 10276 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 10273 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 10276 @LENGTH@ 14
---INS VariableDeclarationStatement@@RootResourceInformation resourceInformation=getResourceInformation(Address.class); @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10297 @LENGTH@ 84
------INS SimpleType@@RootResourceInformation @TO@ VariableDeclarationStatement@@RootResourceInformation resourceInformation=getResourceInformation(Address.class); @AT@ 10297 @LENGTH@ 23
------INS VariableDeclarationFragment@@resourceInformation=getResourceInformation(Address.class) @TO@ VariableDeclarationStatement@@RootResourceInformation resourceInformation=getResourceInformation(Address.class); @AT@ 10321 @LENGTH@ 59
---------INS SimpleName@@resourceInformation @TO@ VariableDeclarationFragment@@resourceInformation=getResourceInformation(Address.class) @AT@ 10321 @LENGTH@ 19
---------INS MethodInvocation@@getResourceInformation(Address.class) @TO@ VariableDeclarationFragment@@resourceInformation=getResourceInformation(Address.class) @AT@ 10343 @LENGTH@ 37
------------INS SimpleName@@MethodName:getResourceInformation:[Address.class] @TO@ MethodInvocation@@getResourceInformation(Address.class) @AT@ 10343 @LENGTH@ 37
---------------INS TypeLiteral@@Address.class @TO@ SimpleName@@MethodName:getResourceInformation:[Address.class] @AT@ 10366 @LENGTH@ 13
---INS VariableDeclarationStatement@@RepositoryInvoker invoker=spy(resourceInformation.getInvoker()); @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10384 @LENGTH@ 66
------INS SimpleType@@RepositoryInvoker @TO@ VariableDeclarationStatement@@RepositoryInvoker invoker=spy(resourceInformation.getInvoker()); @AT@ 10384 @LENGTH@ 17
------INS VariableDeclarationFragment@@invoker=spy(resourceInformation.getInvoker()) @TO@ VariableDeclarationStatement@@RepositoryInvoker invoker=spy(resourceInformation.getInvoker()); @AT@ 10402 @LENGTH@ 47
---------INS SimpleName@@invoker @TO@ VariableDeclarationFragment@@invoker=spy(resourceInformation.getInvoker()) @AT@ 10402 @LENGTH@ 7
---------INS MethodInvocation@@spy(resourceInformation.getInvoker()) @TO@ VariableDeclarationFragment@@invoker=spy(resourceInformation.getInvoker()) @AT@ 10412 @LENGTH@ 37
------------INS SimpleName@@MethodName:spy:[resourceInformation.getInvoker()] @TO@ MethodInvocation@@spy(resourceInformation.getInvoker()) @AT@ 10412 @LENGTH@ 37
---------------INS MethodInvocation@@resourceInformation.getInvoker() @TO@ SimpleName@@MethodName:spy:[resourceInformation.getInvoker()] @AT@ 10416 @LENGTH@ 32
------------------INS SimpleName@@Name:resourceInformation @TO@ MethodInvocation@@resourceInformation.getInvoker() @AT@ 10416 @LENGTH@ 19
------------------INS SimpleName@@MethodName:getInvoker:[] @TO@ MethodInvocation@@resourceInformation.getInvoker() @AT@ 10436 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:doReturn(address).when(invoker).invokeFindOne("foo") @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10453 @LENGTH@ 53
------INS MethodInvocation@@doReturn(address).when(invoker).invokeFindOne("foo") @TO@ ExpressionStatement@@MethodInvocation:doReturn(address).when(invoker).invokeFindOne("foo") @AT@ 10453 @LENGTH@ 52
---------INS MethodInvocation@@MethodName:when:[invoker] @TO@ MethodInvocation@@doReturn(address).when(invoker).invokeFindOne("foo") @AT@ 10453 @LENGTH@ 31
------------INS SimpleName@@invoker @TO@ MethodInvocation@@MethodName:when:[invoker] @AT@ 10476 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:doReturn:[address] @TO@ MethodInvocation@@doReturn(address).when(invoker).invokeFindOne("foo") @AT@ 10453 @LENGTH@ 17
------------INS SimpleName@@address @TO@ MethodInvocation@@MethodName:doReturn:[address] @AT@ 10462 @LENGTH@ 7
---------INS SimpleName@@MethodName:invokeFindOne:["foo"] @TO@ MethodInvocation@@doReturn(address).when(invoker).invokeFindOne("foo") @AT@ 10485 @LENGTH@ 20
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:invokeFindOne:["foo"] @AT@ 10499 @LENGTH@ 5
---INS VariableDeclarationStatement@@RootResourceInformation informationSpy=Mockito.spy(resourceInformation); @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10510 @LENGTH@ 74
------INS SimpleType@@RootResourceInformation @TO@ VariableDeclarationStatement@@RootResourceInformation informationSpy=Mockito.spy(resourceInformation); @AT@ 10510 @LENGTH@ 23
------INS VariableDeclarationFragment@@informationSpy=Mockito.spy(resourceInformation) @TO@ VariableDeclarationStatement@@RootResourceInformation informationSpy=Mockito.spy(resourceInformation); @AT@ 10534 @LENGTH@ 49
---------INS SimpleName@@informationSpy @TO@ VariableDeclarationFragment@@informationSpy=Mockito.spy(resourceInformation) @AT@ 10534 @LENGTH@ 14
---------INS MethodInvocation@@Mockito.spy(resourceInformation) @TO@ VariableDeclarationFragment@@informationSpy=Mockito.spy(resourceInformation) @AT@ 10551 @LENGTH@ 32
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.spy(resourceInformation) @AT@ 10551 @LENGTH@ 7
------------INS SimpleName@@MethodName:spy:[resourceInformation] @TO@ MethodInvocation@@Mockito.spy(resourceInformation) @AT@ 10559 @LENGTH@ 24
---------------INS SimpleName@@resourceInformation @TO@ SimpleName@@MethodName:spy:[resourceInformation] @AT@ 10563 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:doReturn(invoker).when(informationSpy).getInvoker() @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10587 @LENGTH@ 52
------INS MethodInvocation@@doReturn(invoker).when(informationSpy).getInvoker() @TO@ ExpressionStatement@@MethodInvocation:doReturn(invoker).when(informationSpy).getInvoker() @AT@ 10587 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:when:[informationSpy] @TO@ MethodInvocation@@doReturn(invoker).when(informationSpy).getInvoker() @AT@ 10587 @LENGTH@ 38
------------INS SimpleName@@informationSpy @TO@ MethodInvocation@@MethodName:when:[informationSpy] @AT@ 10610 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:doReturn:[invoker] @TO@ MethodInvocation@@doReturn(invoker).when(informationSpy).getInvoker() @AT@ 10587 @LENGTH@ 17
------------INS SimpleName@@invoker @TO@ MethodInvocation@@MethodName:doReturn:[invoker] @AT@ 10596 @LENGTH@ 7
---------INS SimpleName@@MethodName:getInvoker:[] @TO@ MethodInvocation@@doReturn(invoker).when(informationSpy).getInvoker() @AT@ 10626 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:controller.deleteItemResource(informationSpy,"foo",ETag.from("0")) @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10643 @LENGTH@ 69
------INS MethodInvocation@@controller.deleteItemResource(informationSpy,"foo",ETag.from("0")) @TO@ ExpressionStatement@@MethodInvocation:controller.deleteItemResource(informationSpy,"foo",ETag.from("0")) @AT@ 10643 @LENGTH@ 68
---------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.deleteItemResource(informationSpy,"foo",ETag.from("0")) @AT@ 10643 @LENGTH@ 10
---------INS SimpleName@@MethodName:deleteItemResource:[informationSpy, "foo", ETag.from("0")] @TO@ MethodInvocation@@controller.deleteItemResource(informationSpy,"foo",ETag.from("0")) @AT@ 10654 @LENGTH@ 57
------------INS SimpleName@@informationSpy @TO@ SimpleName@@MethodName:deleteItemResource:[informationSpy, "foo", ETag.from("0")] @AT@ 10673 @LENGTH@ 14
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:deleteItemResource:[informationSpy, "foo", ETag.from("0")] @AT@ 10689 @LENGTH@ 5
------------INS MethodInvocation@@ETag.from("0") @TO@ SimpleName@@MethodName:deleteItemResource:[informationSpy, "foo", ETag.from("0")] @AT@ 10696 @LENGTH@ 14
---------------INS SimpleName@@Name:ETag @TO@ MethodInvocation@@ETag.from("0") @AT@ 10696 @LENGTH@ 4
---------------INS SimpleName@@MethodName:from:["0"] @TO@ MethodInvocation@@ETag.from("0") @AT@ 10701 @LENGTH@ 9
------------------INS StringLiteral@@"0" @TO@ SimpleName@@MethodName:from:["0"] @AT@ 10706 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(address.id),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:deletesEntityWithCustomLookupCorrectly, Exception,  @AT@ 10716 @LENGTH@ 60
------INS MethodInvocation@@assertThat(repository.findOne(address.id),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findOne(address.id),is(nullValue())) @AT@ 10716 @LENGTH@ 59
---------INS SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(nullValue())] @TO@ MethodInvocation@@assertThat(repository.findOne(address.id),is(nullValue())) @AT@ 10716 @LENGTH@ 59
------------INS MethodInvocation@@repository.findOne(address.id) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(nullValue())] @AT@ 10727 @LENGTH@ 30
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findOne(address.id) @AT@ 10727 @LENGTH@ 10
---------------INS SimpleName@@MethodName:findOne:[address.id] @TO@ MethodInvocation@@repository.findOne(address.id) @AT@ 10738 @LENGTH@ 19
------------------INS QualifiedName@@address.id @TO@ SimpleName@@MethodName:findOne:[address.id] @AT@ 10746 @LENGTH@ 10
---------------------INS SimpleName@@address @TO@ QualifiedName@@address.id @AT@ 10746 @LENGTH@ 7
---------------------INS SimpleName@@id @TO@ QualifiedName@@address.id @AT@ 10754 @LENGTH@ 2
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[repository.findOne(address.id), is(nullValue())] @AT@ 10759 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 10759 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 10762 @LENGTH@ 11


UPD FieldDeclaration@@String, [mllpHost="localhost"] @TO@ final, String, [mllpHost="localhost"] @AT@ 1600 @LENGTH@ 30
---INS Modifier@@final @TO@ FieldDeclaration@@String, [mllpHost="localhost"] @AT@ 1731 @LENGTH@ 5


UPD VariableDeclarationStatement@@Map<String,String> in=new HashMap<String,String>(); @TO@ Map<String,String> in=new LinkedHashMap<String,String>(); @AT@ 1297 @LENGTH@ 55
---UPD VariableDeclarationFragment@@in=new HashMap<String,String>() @TO@ in=new LinkedHashMap<String,String>() @AT@ 1317 @LENGTH@ 34
------UPD ClassInstanceCreation@@HashMap<String,String>[] @TO@ LinkedHashMap<String,String>[] @AT@ 1322 @LENGTH@ 29
---------UPD ParameterizedType@@HashMap<String,String> @TO@ LinkedHashMap<String,String> @AT@ 1326 @LENGTH@ 23
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 1326 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:KeyedOgnlExpressionAdapter, String ognl, String toStringValue, KeyedEntityRetrievalStrategy keyedEntityRetrievalStrategy,  @TO@ voidMethodName:KeyedOgnlExpressionAdapter, String ognl, String toStringValue, KeyedEntityRetrievalStrategy keyedEntityRetrievalStrategy,  @AT@ 72308 @LENGTH@ 338
---DEL Modifier@@public @AT@ 72308 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:outBuffer=ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ Assignment:outBuffer=ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3774 @LENGTH@ 121
---UPD Assignment@@outBuffer=ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ outBuffer=ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3774 @LENGTH@ 120
------UPD MethodInvocation@@ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3786 @LENGTH@ 108
---------UPD SimpleName@@MethodName:allocateDirect:[this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()] @TO@ MethodName:allocateDirect:[this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()] @AT@ 3797 @LENGTH@ 97
------------UPD InfixExpression@@this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize() @TO@ this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3812 @LENGTH@ 81
---------------DEL InfixExpression@@2 * cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3839 @LENGTH@ 54
------------------DEL NumberLiteral@@2 @AT@ 3839 @LENGTH@ 1
------------------DEL Operator@@* @AT@ 3840 @LENGTH@ 1
---------------MOV MethodInvocation@@cipher.getTransformation().getAlgorithmBlockSize() @TO@ InfixExpression@@this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3843 @LENGTH@ 50


UPD MethodDeclaration@@public, voidMethodName:RuntimeDeployer, List<ServerConfiguration> configurations, ModelControllerClient client, SimpleContentProvider contentProvider, TempFileProvider tempFileProvider, IOException,  @TO@ public, voidMethodName:RuntimeDeployer, List<ServerConfiguration<Fraction>> configurations, ModelControllerClient client, SimpleContentProvider contentProvider, TempFileProvider tempFileProvider, IOException,  @AT@ 2132 @LENGTH@ 532
---UPD SingleVariableDeclaration@@List<ServerConfiguration> configurations @TO@ List<ServerConfiguration<Fraction>> configurations @AT@ 2155 @LENGTH@ 40
------UPD ParameterizedType@@List<ServerConfiguration> @TO@ List<ServerConfiguration<Fraction>> @AT@ 2155 @LENGTH@ 25
---------INS ParameterizedType@@ServerConfiguration<Fraction> @TO@ ParameterizedType@@List<ServerConfiguration> @AT@ 2215 @LENGTH@ 29
------------MOV SimpleType@@ServerConfiguration @TO@ ParameterizedType@@ServerConfiguration<Fraction> @AT@ 2160 @LENGTH@ 19
------------INS SimpleType@@Fraction @TO@ ParameterizedType@@ServerConfiguration<Fraction> @AT@ 2235 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:ex=new UnauthorizedUserException(errorMessage) @TO@ Assignment:ex=new UnauthorizedClientException(errorMessage) @AT@ 2647 @LENGTH@ 49
---UPD Assignment@@ex=new UnauthorizedUserException(errorMessage) @TO@ ex=new UnauthorizedClientException(errorMessage) @AT@ 2647 @LENGTH@ 48
------UPD ClassInstanceCreation@@UnauthorizedUserException[errorMessage] @TO@ UnauthorizedClientException[errorMessage] @AT@ 2652 @LENGTH@ 43
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 2656 @LENGTH@ 25


UPD IfStatement@@if ((translated.endsWith(" ") || methodTarget.getRemainingBuffer().endsWith("-")) && (!"".equals(lastOptionValue) || lastOptionKey == null)) {  suggestOptionKey(shellContext,translated,results,methodTarget,options,unspecified,lastOptionValue,alreadySpecified);  candidates.addAll(results);  return 0;} @TO@ if ((translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null)) {  suggestOptionKey(shellContext,translated,results,methodTarget,options,unspecified,lastOptionValue,alreadySpecified);  candidates.addAll(results);  return 0;} @AT@ 18941 @LENGTH@ 360
---UPD InfixExpression@@(translated.endsWith(" ") || methodTarget.getRemainingBuffer().endsWith("-")) && (!"".equals(lastOptionValue) || lastOptionKey == null) @TO@ (translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null) @AT@ 18945 @LENGTH@ 145
------UPD ParenthesizedExpression@@(translated.endsWith(" ") || methodTarget.getRemainingBuffer().endsWith("-")) @TO@ (translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) @AT@ 18945 @LENGTH@ 77
---------UPD InfixExpression@@translated.endsWith(" ") || methodTarget.getRemainingBuffer().endsWith("-") @TO@ translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --")) @AT@ 18946 @LENGTH@ 75
------------INS ParenthesizedExpression@@(methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --")) @TO@ InfixExpression@@translated.endsWith(" ") || methodTarget.getRemainingBuffer().endsWith("-") @AT@ 18974 @LENGTH@ 114
---------------INS InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --") @TO@ ParenthesizedExpression@@(methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --")) @AT@ 18975 @LENGTH@ 112
------------------MOV MethodInvocation@@methodTarget.getRemainingBuffer().endsWith("-") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 18974 @LENGTH@ 47
---------------------UPD SimpleName@@MethodName:endsWith:["-"] @TO@ MethodName:endsWith:[" -"] @AT@ 19008 @LENGTH@ 13
------------------------UPD StringLiteral@@"-" @TO@ " -" @AT@ 19017 @LENGTH@ 3
------------------INS Operator@@|| @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 19023 @LENGTH@ 2
------------------INS MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" --") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 19027 @LENGTH@ 60
---------------------INS MethodInvocation@@MethodName:getRemainingBuffer:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 19027 @LENGTH@ 44
---------------------INS SimpleName@@Name:methodTarget @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 19027 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:endsWith:[" --"] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" --") @AT@ 19072 @LENGTH@ 15
------------------------INS StringLiteral@@" --" @TO@ SimpleName@@MethodName:endsWith:[" --"] @AT@ 19081 @LENGTH@ 5
------------UPD MethodInvocation@@methodTarget.getRemainingBuffer().endsWith("-") @TO@ methodTarget.getRemainingBuffer().endsWith(" -") @AT@ 18974 @LENGTH@ 47


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint, Collection<Exchange> queue,  @TO@ voidMethodName:MyProducer, Endpoint endpoint, Collection<Exchange> queue,  @AT@ 1280 @LENGTH@ 112
---DEL Modifier@@public @AT@ 1280 @LENGTH@ 6


UPD MethodDeclaration@@private, static, T, T extends Filter, MethodName:findFilter, HttpServletRequest request, Class<T> filterClass,  @TO@ static, T, T extends Filter, MethodName:findFilter, HttpServletRequest request, Class<T> filterClass,  @AT@ 4547 @LENGTH@ 794
---DEL Modifier@@private @AT@ 4547 @LENGTH@ 7
---INS IfStatement@@if (filters == null) {  return null;} @TO@ MethodDeclaration@@private, static, T, T extends Filter, MethodName:findFilter, HttpServletRequest request, Class<T> filterClass,  @AT@ 5194 @LENGTH@ 41
------INS InfixExpression@@filters == null @TO@ IfStatement@@if (filters == null) {  return null;} @AT@ 5197 @LENGTH@ 15
---------INS SimpleName@@filters @TO@ InfixExpression@@filters == null @AT@ 5197 @LENGTH@ 7
---------INS Operator@@== @TO@ InfixExpression@@filters == null @AT@ 5204 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@filters == null @AT@ 5208 @LENGTH@ 4
------INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (filters == null) {  return null;} @AT@ 5214 @LENGTH@ 21
---------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 5219 @LENGTH@ 12
------------MOV NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5333 @LENGTH@ 4
---DEL ReturnStatement@@NullLiteral:null @AT@ 5326 @LENGTH@ 12
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@private, static, T, T extends Filter, MethodName:findFilter, HttpServletRequest request, Class<T> filterClass,  @AT@ 5362 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 5369 @LENGTH@ 4


UPD MethodDeclaration@@public, WebSocket, MethodName:doWebSocketConnect, ServletUpgradeRequest request, String protocol,  @TO@ public, DefaultWebsocket, MethodName:doWebSocketConnect, ServletUpgradeRequest request, String protocol,  @AT@ 2607 @LENGTH@ 507
---UPD SimpleType@@WebSocket @TO@ DefaultWebsocket @AT@ 2614 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:Server, int port,  @TO@ voidMethodName:Server, int port,  @AT@ 2606 @LENGTH@ 65
---DEL Modifier@@public @AT@ 2606 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:applicationEventPublisher.publishEvent(new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime)) @TO@ MethodInvocation:applicationEventPublisher.publishEvent(new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime,getListenerId(),getQueueNames())) @AT@ 52671 @LENGTH@ 125
---UPD MethodInvocation@@applicationEventPublisher.publishEvent(new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime)) @TO@ applicationEventPublisher.publishEvent(new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime,getListenerId(),getQueueNames())) @AT@ 52671 @LENGTH@ 124
------UPD SimpleName@@MethodName:publishEvent:[new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime)] @TO@ MethodName:publishEvent:[new ListenerContainerIdleEvent(SimpleMessageListenerContainer.this,idleTime,getListenerId(),getQueueNames())] @AT@ 52697 @LENGTH@ 98
---------UPD ClassInstanceCreation@@ListenerContainerIdleEvent[SimpleMessageListenerContainer.this, idleTime] @TO@ ListenerContainerIdleEvent[SimpleMessageListenerContainer.this, idleTime, getListenerId(), getQueueNames()] @AT@ 52717 @LENGTH@ 77
------------INS MethodInvocation@@MethodName:getListenerId:[] @TO@ ClassInstanceCreation@@ListenerContainerIdleEvent[SimpleMessageListenerContainer.this, idleTime] @AT@ 52795 @LENGTH@ 15
------------INS MethodInvocation@@MethodName:getQueueNames:[] @TO@ ClassInstanceCreation@@ListenerContainerIdleEvent[SimpleMessageListenerContainer.this, idleTime] @AT@ 52820 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Created endpoint: {}",endpoint.toString()) @TO@ MethodInvocation:setProperties(endpoint,parameters) @AT@ 1609 @LENGTH@ 55
---UPD MethodInvocation@@LOG.debug("Created endpoint: {}",endpoint.toString()) @TO@ setProperties(endpoint,parameters) @AT@ 1609 @LENGTH@ 54
------DEL SimpleName@@Name:LOG @AT@ 1609 @LENGTH@ 3
------UPD SimpleName@@MethodName:debug:["Created endpoint: {}", endpoint.toString()] @TO@ MethodName:setProperties:[endpoint, parameters] @AT@ 1613 @LENGTH@ 50
---------INS SimpleName@@endpoint @TO@ SimpleName@@MethodName:debug:["Created endpoint: {}", endpoint.toString()] @AT@ 1478 @LENGTH@ 8
---------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:debug:["Created endpoint: {}", endpoint.toString()] @AT@ 1488 @LENGTH@ 10
---------DEL StringLiteral@@"Created endpoint: {}" @AT@ 1619 @LENGTH@ 22
---------DEL MethodInvocation@@endpoint.toString() @AT@ 1643 @LENGTH@ 19
------------DEL SimpleName@@Name:endpoint @AT@ 1643 @LENGTH@ 8
------------DEL SimpleName@@MethodName:toString:[] @AT@ 1652 @LENGTH@ 10


UPD VariableDeclarationStatement@@String participant=exchange.getIn().getHeader(XmppConstants.TO,String.class); @TO@ String participant=endpoint.getParticipant(); @AT@ 2477 @LENGTH@ 80
---UPD VariableDeclarationFragment@@participant=exchange.getIn().getHeader(XmppConstants.TO,String.class) @TO@ participant=endpoint.getParticipant() @AT@ 2484 @LENGTH@ 72
------UPD MethodInvocation@@exchange.getIn().getHeader(XmppConstants.TO,String.class) @TO@ endpoint.getParticipant() @AT@ 2498 @LENGTH@ 58
---------DEL MethodInvocation@@MethodName:getIn:[] @AT@ 2498 @LENGTH@ 16
---------UPD SimpleName@@Name:exchange @TO@ Name:endpoint @AT@ 2498 @LENGTH@ 8
---------UPD SimpleName@@MethodName:getHeader:[XmppConstants.TO, String.class] @TO@ MethodName:getParticipant:[] @AT@ 2515 @LENGTH@ 41
------------DEL QualifiedName@@XmppConstants.TO @AT@ 2525 @LENGTH@ 16
---------------DEL SimpleName@@XmppConstants @AT@ 2525 @LENGTH@ 13
---------------DEL SimpleName@@TO @AT@ 2539 @LENGTH@ 2
------------DEL TypeLiteral@@String.class @AT@ 2543 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @TO@ MethodInvocation:assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password")).doesNotContainKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1801 @LENGTH@ 138
---UPD MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @TO@ assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password")).doesNotContainKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1801 @LENGTH@ 137
------INS MethodInvocation@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("user","password")] @TO@ MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @AT@ 1792 @LENGTH@ 65
---------INS MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("user","password") @TO@ MethodInvocation@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("user","password")] @AT@ 1803 @LENGTH@ 53
------------INS SimpleName@@MethodName:getAuthenticatedEnvForTest:["user", "password"] @TO@ MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("user","password") @AT@ 1810 @LENGTH@ 46
---------------INS StringLiteral@@"user" @TO@ SimpleName@@MethodName:getAuthenticatedEnvForTest:["user", "password"] @AT@ 1837 @LENGTH@ 6
---------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:getAuthenticatedEnvForTest:["user", "password"] @AT@ 1845 @LENGTH@ 10
------------MOV SimpleName@@Name:ctxSrc @TO@ MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("user","password") @AT@ 1812 @LENGTH@ 6
------DEL SimpleName@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)] @AT@ 1801 @LENGTH@ 137
---------DEL MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1812 @LENGTH@ 125
------------DEL MethodInvocation@@MethodName:isFalse:[] @AT@ 1812 @LENGTH@ 63
------------DEL MethodInvocation@@MethodName:getAuthenticatedEnvForTest:["user", "password"] @AT@ 1812 @LENGTH@ 53
---------------DEL StringLiteral@@"user" @AT@ 1846 @LENGTH@ 6
---------------DEL StringLiteral@@"password" @AT@ 1854 @LENGTH@ 10
------MOV SimpleName@@MethodName:containsKey:[AbstractContextSource.SUN_LDAP_POOLING_FLAG] @TO@ MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("user","password").isFalse().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @AT@ 1876 @LENGTH@ 61


INS IfStatement@@if (shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @TO@ MethodDeclaration@@private, AggregationStrategy, MethodName:createAggregationStrategy, RouteContext routeContext,  @AT@ 8773 @LENGTH@ 183
---INS InfixExpression@@shareUnitOfWork != null && shareUnitOfWork @TO@ IfStatement@@if (shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 8777 @LENGTH@ 42
------INS InfixExpression@@shareUnitOfWork != null @TO@ InfixExpression@@shareUnitOfWork != null && shareUnitOfWork @AT@ 8777 @LENGTH@ 23
---------INS SimpleName@@shareUnitOfWork @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 8777 @LENGTH@ 15
---------INS Operator@@!= @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 8792 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 8796 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@shareUnitOfWork != null && shareUnitOfWork @AT@ 8800 @LENGTH@ 2
------INS SimpleName@@shareUnitOfWork @TO@ InfixExpression@@shareUnitOfWork != null && shareUnitOfWork @AT@ 8804 @LENGTH@ 15
---INS Block@@ThenBody:{  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @TO@ IfStatement@@if (shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 8821 @LENGTH@ 135
------INS ExpressionStatement@@Assignment:strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @TO@ Block@@ThenBody:{  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 8886 @LENGTH@ 60
---------INS Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @TO@ ExpressionStatement@@Assignment:strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 8886 @LENGTH@ 59
------------INS SimpleName@@strategy @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 8886 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 8894 @LENGTH@ 1
------------INS ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 8897 @LENGTH@ 48
---------------INS New@@new @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 8897 @LENGTH@ 3
---------------INS SimpleType@@ShareUnitOfWorkAggregationStrategy @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 8901 @LENGTH@ 34
---------------INS SimpleName@@strategy @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 8936 @LENGTH@ 8


UPD VariableDeclarationStatement@@List<String> jars=content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()); @TO@ List<String> jars=content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()); @AT@ 10029 @LENGTH@ 129
---UPD VariableDeclarationFragment@@jars=content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @TO@ jars=content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @AT@ 10042 @LENGTH@ 115
------UPD MethodInvocation@@content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @TO@ content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @AT@ 10049 @LENGTH@ 108
---------UPD MethodInvocation@@MethodName:map:[(e) -> e.get()] @TO@ MethodName:map:[ArchivePath::get] @AT@ 10049 @LENGTH@ 45
------------DEL LambdaExpression@@(e) -> e.get() @AT@ 10079 @LENGTH@ 14
---------------DEL VariableDeclarationFragment@@e @AT@ 10080 @LENGTH@ 1
------------------DEL SimpleName@@e @AT@ 10080 @LENGTH@ 1
---------------DEL MethodInvocation@@e.get() @AT@ 10086 @LENGTH@ 7
------------------DEL SimpleName@@Name:e @AT@ 10086 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:get:[] @AT@ 10088 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:endpoint.setPlaceholder(parameterPlaceholderSubstitute) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 4552 @LENGTH@ 56
---INS MethodInvocation@@endpoint.setPlaceholder(parameterPlaceholderSubstitute) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setPlaceholder(parameterPlaceholderSubstitute) @AT@ 4552 @LENGTH@ 55
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setPlaceholder(parameterPlaceholderSubstitute) @AT@ 4552 @LENGTH@ 8
------INS SimpleName@@MethodName:setPlaceholder:[parameterPlaceholderSubstitute] @TO@ MethodInvocation@@endpoint.setPlaceholder(parameterPlaceholderSubstitute) @AT@ 4561 @LENGTH@ 46
---------INS SimpleName@@parameterPlaceholderSubstitute @TO@ SimpleName@@MethodName:setPlaceholder:[parameterPlaceholderSubstitute] @AT@ 4576 @LENGTH@ 30


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3969 @LENGTH@ 36
---INS MethodInvocation@@websocketComponent.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @AT@ 3969 @LENGTH@ 35
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3969 @LENGTH@ 18
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3988 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 4002 @LENGTH@ 1


UPD IfStatement@@if (transformerFactory != null) configureSaxonTransformerFactory(transformerFactory); @TO@ if (transformerFactory != null) {  configureSaxonTransformerFactory(transformerFactory);} @AT@ 40269 @LENGTH@ 97
---UPD Block@@ThenBody:configureSaxonTransformerFactory(transformerFactory); @TO@ ThenBody:{  configureSaxonTransformerFactory(transformerFactory);} @AT@ 40313 @LENGTH@ 53


UPD MethodDeclaration@@public, voidMethodName:MyConsumer, Endpoint endpoint, Processor processor,  @TO@ voidMethodName:MyConsumer, Endpoint endpoint, Processor processor,  @AT@ 5138 @LENGTH@ 109
---DEL Modifier@@public @AT@ 5138 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:consumer.stop() @TO@ MethodInvocation:ServiceHelper.stopAndShutdownService(consumer) @AT@ 3918 @LENGTH@ 16
---UPD MethodInvocation@@consumer.stop() @TO@ ServiceHelper.stopAndShutdownService(consumer) @AT@ 3918 @LENGTH@ 15
------UPD SimpleName@@Name:consumer @TO@ Name:ServiceHelper @AT@ 3918 @LENGTH@ 8
------UPD SimpleName@@MethodName:stop:[] @TO@ MethodName:stopAndShutdownService:[consumer] @AT@ 3927 @LENGTH@ 6
---------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:stop:[] @AT@ 3999 @LENGTH@ 8


INS MethodDeclaration@@private, voidMethodName:AwsExchangeUtil,  @TO@ TypeDeclaration@@[public]AwsExchangeUtil,  @AT@ 962 @LENGTH@ 33
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:AwsExchangeUtil,  @AT@ 962 @LENGTH@ 7
---INS SimpleName@@MethodName:AwsExchangeUtil @TO@ MethodDeclaration@@private, voidMethodName:AwsExchangeUtil,  @AT@ 970 @LENGTH@ 15


DEL MethodDeclaration@@void, MethodName:close, IOException,  @AT@ 1340 @LENGTH@ 27
---DEL PrimitiveType@@void @AT@ 1335 @LENGTH@ 4
---DEL SimpleName@@MethodName:close @AT@ 1340 @LENGTH@ 5
---DEL SimpleType@@IOException @AT@ 1355 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertEquals("jerry",filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())) @TO@ MethodInvocation:assertThat(filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())).isEqualTo("jerry") @AT@ 1391 @LENGTH@ 93
---UPD MethodInvocation@@assertEquals("jerry",filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())) @TO@ MethodName:assertThat:[filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())] @AT@ 1391 @LENGTH@ 92
---INS MethodInvocation@@assertThat(filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())).isEqualTo("jerry") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("jerry",filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())) @AT@ 1391 @LENGTH@ 101
------MOV MethodInvocation@@assertEquals("jerry",filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())) @TO@ MethodInvocation@@assertThat(filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())).isEqualTo("jerry") @AT@ 1391 @LENGTH@ 92
---------MOV MethodInvocation@@filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest()) @TO@ MethodInvocation@@assertEquals("jerry",filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())) @AT@ 1417 @LENGTH@ 65
------INS SimpleName@@MethodName:isEqualTo:["jerry"] @TO@ MethodInvocation@@assertThat(filter.getPreAuthenticatedPrincipal(new MockHttpServletRequest())).isEqualTo("jerry") @AT@ 1469 @LENGTH@ 23
---------INS StringLiteral@@"jerry" @TO@ SimpleName@@MethodName:isEqualTo:["jerry"] @AT@ 1484 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:logger.debug("Authentication request failed: " + failed.toString()) @TO@ MethodInvocation:logger.debug("Authentication request failed: " + failed.toString(),failed) @AT@ 15034 @LENGTH@ 68
---UPD MethodInvocation@@logger.debug("Authentication request failed: " + failed.toString()) @TO@ logger.debug("Authentication request failed: " + failed.toString(),failed) @AT@ 15034 @LENGTH@ 67
------UPD SimpleName@@MethodName:debug:["Authentication request failed: " + failed.toString()] @TO@ MethodName:debug:["Authentication request failed: " + failed.toString(), failed] @AT@ 15041 @LENGTH@ 60
---------INS SimpleName@@failed @TO@ SimpleName@@MethodName:debug:["Authentication request failed: " + failed.toString()] @AT@ 15102 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(count(query).isCloseTo(1,within('='))) @TO@ MethodInvocation:assertThat(count(query,'=')).isEqualTo(1) @AT@ 3566 @LENGTH@ 51
---UPD MethodInvocation@@assertThat(count(query).isCloseTo(1,within('='))) @TO@ assertThat(count(query,'=')).isEqualTo(1) @AT@ 3566 @LENGTH@ 50
------DEL SimpleName@@MethodName:assertThat:[count(query).isCloseTo(1,within('='))] @AT@ 3566 @LENGTH@ 50
---------DEL MethodInvocation@@count(query).isCloseTo(1,within('=')) @AT@ 3577 @LENGTH@ 38
------MOV MethodInvocation@@MethodName:count:[query] @TO@ MethodInvocation@@assertThat(count(query).isCloseTo(1,within('='))) @AT@ 3577 @LENGTH@ 12
---------INS MethodInvocation@@count(query,'=') @TO@ MethodInvocation@@MethodName:count:[query] @AT@ 3577 @LENGTH@ 17
------------INS SimpleName@@MethodName:count:[query, '='] @TO@ MethodInvocation@@count(query,'=') @AT@ 3577 @LENGTH@ 17
---------------INS SimpleName@@query @TO@ SimpleName@@MethodName:count:[query, '='] @AT@ 3583 @LENGTH@ 5
---------------INS CharacterLiteral@@'=' @TO@ SimpleName@@MethodName:count:[query, '='] @AT@ 3590 @LENGTH@ 3
---------DEL SimpleName@@query @AT@ 3583 @LENGTH@ 5
------MOV SimpleName@@MethodName:isCloseTo:[1, within('=')] @TO@ MethodInvocation@@assertThat(count(query).isCloseTo(1,within('='))) @AT@ 3590 @LENGTH@ 25
---------DEL MethodInvocation@@within('=') @AT@ 3603 @LENGTH@ 11
------------DEL SimpleName@@MethodName:within:['='] @AT@ 3603 @LENGTH@ 11
---------------DEL CharacterLiteral@@'=' @AT@ 3610 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertFalse(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))) @TO@ MethodInvocation:assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))).isFalse() @AT@ 2055 @LENGTH@ 98
---UPD MethodInvocation@@assertFalse(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))) @TO@ MethodName:assertThat:[template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))] @AT@ 2055 @LENGTH@ 97
---INS MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))).isFalse() @TO@ ExpressionStatement@@MethodInvocation:assertFalse(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))) @AT@ 2064 @LENGTH@ 106
------MOV MethodInvocation@@assertFalse(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))) @TO@ MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))).isFalse() @AT@ 2055 @LENGTH@ 97
---------DEL SimpleName@@MethodName:assertFalse:[template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))] @AT@ 2055 @LENGTH@ 97
---------MOV MethodInvocation@@template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue")) @TO@ MethodInvocation@@assertFalse(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))) @AT@ 2067 @LENGTH@ 84
------INS SimpleName@@MethodName:isFalse:[] @TO@ MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("wrongvalue"))).isFalse() @AT@ 2161 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals("N/A",filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())) @TO@ MethodInvocation:assertThat(filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())).isEqualTo("N/A") @AT@ 1487 @LENGTH@ 93
---UPD MethodInvocation@@assertEquals("N/A",filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())) @TO@ MethodName:assertThat:[filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())] @AT@ 1487 @LENGTH@ 92
---INS MethodInvocation@@assertThat(filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())).isEqualTo("N/A") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("N/A",filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())) @AT@ 1496 @LENGTH@ 101
------MOV MethodInvocation@@assertEquals("N/A",filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())) @TO@ MethodInvocation@@assertThat(filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())).isEqualTo("N/A") @AT@ 1487 @LENGTH@ 92
---------DEL SimpleName@@MethodName:assertEquals:["N/A", filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())] @AT@ 1487 @LENGTH@ 92
------------DEL StringLiteral@@"N/A" @AT@ 1500 @LENGTH@ 5
---------MOV MethodInvocation@@filter.getPreAuthenticatedCredentials(new MockHttpServletRequest()) @TO@ MethodInvocation@@assertEquals("N/A",filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())) @AT@ 1511 @LENGTH@ 67
------INS SimpleName@@MethodName:isEqualTo:["N/A"] @TO@ MethodInvocation@@assertThat(filter.getPreAuthenticatedCredentials(new MockHttpServletRequest())).isEqualTo("N/A") @AT@ 1576 @LENGTH@ 21
---------INS StringLiteral@@"N/A" @TO@ SimpleName@@MethodName:isEqualTo:["N/A"] @AT@ 1591 @LENGTH@ 5


UPD MethodDeclaration@@Set<V>, MethodName:rangeByLex, K key, RedisZSetCommands.Range range,  @TO@ Set<V>, MethodName:rangeByLex, K key, Range range,  @AT@ 1592 @LENGTH@ 49
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1610 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1610 @LENGTH@ 23


INS MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @TO@ TypeDeclaration@@[public]UndertowExternalMountsAsset, [Asset] @AT@ 1082 @LENGTH@ 434
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1082 @LENGTH@ 6
---INS SimpleName@@MethodName:UndertowExternalMountsAsset @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1089 @LENGTH@ 27
---INS SingleVariableDeclaration@@InputStream inputStream @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1117 @LENGTH@ 23
------INS SimpleType@@InputStream @TO@ SingleVariableDeclaration@@InputStream inputStream @AT@ 1117 @LENGTH@ 11
------INS SimpleName@@inputStream @TO@ SingleVariableDeclaration@@InputStream inputStream @AT@ 1129 @LENGTH@ 11
---INS VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream)); @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1152 @LENGTH@ 79
------INS SimpleType@@BufferedReader @TO@ VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream)); @AT@ 1152 @LENGTH@ 14
------INS VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(inputStream)) @TO@ VariableDeclarationStatement@@BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream)); @AT@ 1167 @LENGTH@ 63
---------INS SimpleName@@reader @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(inputStream)) @AT@ 1167 @LENGTH@ 6
---------INS ClassInstanceCreation@@BufferedReader[new InputStreamReader(inputStream)] @TO@ VariableDeclarationFragment@@reader=new BufferedReader(new InputStreamReader(inputStream)) @AT@ 1176 @LENGTH@ 54
------------INS New@@new @TO@ ClassInstanceCreation@@BufferedReader[new InputStreamReader(inputStream)] @AT@ 1176 @LENGTH@ 3
------------INS SimpleType@@BufferedReader @TO@ ClassInstanceCreation@@BufferedReader[new InputStreamReader(inputStream)] @AT@ 1180 @LENGTH@ 14
------------INS ClassInstanceCreation@@InputStreamReader[inputStream] @TO@ ClassInstanceCreation@@BufferedReader[new InputStreamReader(inputStream)] @AT@ 1195 @LENGTH@ 34
---------------INS New@@new @TO@ ClassInstanceCreation@@InputStreamReader[inputStream] @AT@ 1195 @LENGTH@ 3
---------------INS SimpleType@@InputStreamReader @TO@ ClassInstanceCreation@@InputStreamReader[inputStream] @AT@ 1199 @LENGTH@ 17
---------------INS SimpleName@@inputStream @TO@ ClassInstanceCreation@@InputStreamReader[inputStream] @AT@ 1217 @LENGTH@ 11
---INS VariableDeclarationStatement@@String line; @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1240 @LENGTH@ 12
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String line; @AT@ 1240 @LENGTH@ 6
------INS VariableDeclarationFragment@@line @TO@ VariableDeclarationStatement@@String line; @AT@ 1247 @LENGTH@ 4
---------INS SimpleName@@line @TO@ VariableDeclarationFragment@@line @AT@ 1247 @LENGTH@ 4
---INS TryStatement@@try {  while ((line=reader.readLine()) != null) {    externalMount(line);  }} catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset, InputStream inputStream,  @AT@ 1261 @LENGTH@ 249
------INS WhileStatement@@while ((line=reader.readLine()) != null) {  externalMount(line);} @TO@ TryStatement@@try {  while ((line=reader.readLine()) != null) {    externalMount(line);  }} catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @AT@ 1279 @LENGTH@ 95
---------INS InfixExpression@@(line=reader.readLine()) != null @TO@ WhileStatement@@while ((line=reader.readLine()) != null) {  externalMount(line);} @AT@ 1286 @LENGTH@ 34
------------INS ParenthesizedExpression@@(line=reader.readLine()) @TO@ InfixExpression@@(line=reader.readLine()) != null @AT@ 1286 @LENGTH@ 26
---------------INS Assignment@@line=reader.readLine() @TO@ ParenthesizedExpression@@(line=reader.readLine()) @AT@ 1287 @LENGTH@ 24
------------------INS SimpleName@@line @TO@ Assignment@@line=reader.readLine() @AT@ 1287 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@line=reader.readLine() @AT@ 1291 @LENGTH@ 1
------------------INS MethodInvocation@@reader.readLine() @TO@ Assignment@@line=reader.readLine() @AT@ 1294 @LENGTH@ 17
---------------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.readLine() @AT@ 1294 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:readLine:[] @TO@ MethodInvocation@@reader.readLine() @AT@ 1301 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@(line=reader.readLine()) != null @AT@ 1312 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@(line=reader.readLine()) != null @AT@ 1316 @LENGTH@ 4
---------INS Block@@WhileBody:{  externalMount(line);} @TO@ WhileStatement@@while ((line=reader.readLine()) != null) {  externalMount(line);} @AT@ 1322 @LENGTH@ 52
------------INS ExpressionStatement@@MethodInvocation:externalMount(line) @TO@ Block@@WhileBody:{  externalMount(line);} @AT@ 1340 @LENGTH@ 20
---------------INS MethodInvocation@@externalMount(line) @TO@ ExpressionStatement@@MethodInvocation:externalMount(line) @AT@ 1340 @LENGTH@ 19
------------------INS SimpleName@@MethodName:externalMount:[line] @TO@ MethodInvocation@@externalMount(line) @AT@ 1340 @LENGTH@ 19
---------------------INS SimpleName@@line @TO@ SimpleName@@MethodName:externalMount:[line] @AT@ 1354 @LENGTH@ 4
------INS CatchClause@@catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @TO@ TryStatement@@try {  while ((line=reader.readLine()) != null) {    externalMount(line);  }} catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @AT@ 1385 @LENGTH@ 125
---------INS SingleVariableDeclaration@@IOException ex @TO@ CatchClause@@catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @AT@ 1392 @LENGTH@ 14
------------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException ex @AT@ 1392 @LENGTH@ 11
------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@IOException ex @AT@ 1404 @LENGTH@ 2
---------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Error reading Undertow external mounts conf",ex) @TO@ CatchClause@@catch (IOException ex) {  throw new RuntimeException("Error reading Undertow external mounts conf",ex);} @AT@ 1422 @LENGTH@ 78
------------INS ClassInstanceCreation@@RuntimeException["Error reading Undertow external mounts conf", ex] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Error reading Undertow external mounts conf",ex) @AT@ 1428 @LENGTH@ 71
---------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Error reading Undertow external mounts conf", ex] @AT@ 1428 @LENGTH@ 3
---------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Error reading Undertow external mounts conf", ex] @AT@ 1432 @LENGTH@ 16
---------------INS StringLiteral@@"Error reading Undertow external mounts conf" @TO@ ClassInstanceCreation@@RuntimeException["Error reading Undertow external mounts conf", ex] @AT@ 1449 @LENGTH@ 45
---------------INS SimpleName@@ex @TO@ ClassInstanceCreation@@RuntimeException["Error reading Undertow external mounts conf", ex] @AT@ 1496 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:MetadataReaderImpl, FSDataInputStream file, CompressionCodec codec, int bufferSize, int typeCount,  @TO@ voidMethodName:MetadataReaderImpl, MetadataReaderProperties properties, IOException,  @AT@ 1662 @LENGTH@ 228
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, voidMethodName:MetadataReaderImpl, FSDataInputStream file, CompressionCodec codec, int bufferSize, int typeCount,  @AT@ 1558 @LENGTH@ 11
---DEL Modifier@@public @AT@ 1662 @LENGTH@ 6
---UPD SingleVariableDeclaration@@FSDataInputStream file @TO@ MetadataReaderProperties properties @AT@ 1688 @LENGTH@ 22
------UPD SimpleType@@FSDataInputStream @TO@ MetadataReaderProperties @AT@ 1688 @LENGTH@ 17
------UPD SimpleName@@file @TO@ properties @AT@ 1706 @LENGTH@ 4
---DEL SingleVariableDeclaration@@CompressionCodec codec @AT@ 1718 @LENGTH@ 22
------DEL SimpleType@@CompressionCodec @AT@ 1718 @LENGTH@ 16
------DEL SimpleName@@codec @AT@ 1735 @LENGTH@ 5
---DEL SingleVariableDeclaration@@int bufferSize @AT@ 1742 @LENGTH@ 14
------DEL PrimitiveType@@int @AT@ 1742 @LENGTH@ 3
------DEL SimpleName@@bufferSize @AT@ 1746 @LENGTH@ 10
---DEL SingleVariableDeclaration@@int typeCount @AT@ 1758 @LENGTH@ 13
------DEL PrimitiveType@@int @AT@ 1758 @LENGTH@ 3
------DEL SimpleName@@typeCount @AT@ 1762 @LENGTH@ 9
---UPD ExpressionStatement@@Assignment:this.file=file @TO@ Assignment:this.file=properties.getFileSystem().open(properties.getPath()) @AT@ 1779 @LENGTH@ 17
------UPD Assignment@@this.file=file @TO@ this.file=properties.getFileSystem().open(properties.getPath()) @AT@ 1779 @LENGTH@ 16
---------INS MethodInvocation@@properties.getFileSystem().open(properties.getPath()) @TO@ Assignment@@this.file=file @AT@ 1588 @LENGTH@ 53
------------INS MethodInvocation@@MethodName:getFileSystem:[] @TO@ MethodInvocation@@properties.getFileSystem().open(properties.getPath()) @AT@ 1588 @LENGTH@ 26
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getFileSystem().open(properties.getPath()) @AT@ 1588 @LENGTH@ 10
------------INS SimpleName@@MethodName:open:[properties.getPath()] @TO@ MethodInvocation@@properties.getFileSystem().open(properties.getPath()) @AT@ 1615 @LENGTH@ 26
---------------INS MethodInvocation@@properties.getPath() @TO@ SimpleName@@MethodName:open:[properties.getPath()] @AT@ 1620 @LENGTH@ 20
------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getPath() @AT@ 1620 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@properties.getPath() @AT@ 1631 @LENGTH@ 9
---------DEL SimpleName@@file @AT@ 1791 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:this.codec=codec @TO@ Assignment:this.codec=properties.getCodec() @AT@ 1801 @LENGTH@ 19
------UPD Assignment@@this.codec=codec @TO@ this.codec=properties.getCodec() @AT@ 1801 @LENGTH@ 18
---------INS MethodInvocation@@properties.getCodec() @TO@ Assignment@@this.codec=codec @AT@ 1660 @LENGTH@ 21
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getCodec() @AT@ 1660 @LENGTH@ 10
------------INS SimpleName@@MethodName:getCodec:[] @TO@ MethodInvocation@@properties.getCodec() @AT@ 1671 @LENGTH@ 10
---------DEL SimpleName@@codec @AT@ 1814 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:this.bufferSize=bufferSize @TO@ Assignment:this.bufferSize=properties.getBufferSize() @AT@ 1825 @LENGTH@ 29
------UPD Assignment@@this.bufferSize=bufferSize @TO@ this.bufferSize=properties.getBufferSize() @AT@ 1825 @LENGTH@ 28
---------INS MethodInvocation@@properties.getBufferSize() @TO@ Assignment@@this.bufferSize=bufferSize @AT@ 1705 @LENGTH@ 26
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getBufferSize() @AT@ 1705 @LENGTH@ 10
------------INS SimpleName@@MethodName:getBufferSize:[] @TO@ MethodInvocation@@properties.getBufferSize() @AT@ 1716 @LENGTH@ 15
---------DEL SimpleName@@bufferSize @AT@ 1843 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:this.typeCount=typeCount @TO@ Assignment:this.typeCount=properties.getTypeCount() @AT@ 1859 @LENGTH@ 27
------UPD Assignment@@this.typeCount=typeCount @TO@ this.typeCount=properties.getTypeCount() @AT@ 1859 @LENGTH@ 26
---------INS MethodInvocation@@properties.getTypeCount() @TO@ Assignment@@this.typeCount=typeCount @AT@ 1754 @LENGTH@ 25
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getTypeCount() @AT@ 1754 @LENGTH@ 10
------------INS SimpleName@@MethodName:getTypeCount:[] @TO@ MethodInvocation@@properties.getTypeCount() @AT@ 1765 @LENGTH@ 14
---------DEL SimpleName@@typeCount @AT@ 1876 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @TO@ MethodInvocation:assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class)).isTrue() @AT@ 2844 @LENGTH@ 108
---UPD MethodInvocation@@assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @TO@ assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class)).isTrue() @AT@ 2844 @LENGTH@ 107
------INS MethodInvocation@@MethodName:assertThat:[parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class)] @TO@ MethodInvocation@@assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @AT@ 2803 @LENGTH@ 98
---------INS MethodInvocation@@parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class) @TO@ MethodInvocation@@MethodName:assertThat:[parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class)] @AT@ 2814 @LENGTH@ 86
------------MOV MethodInvocation@@MethodName:parseExpression:["@role.attribute == 'ROLE_A'"] @TO@ MethodInvocation@@parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2855 @LENGTH@ 53
------------MOV SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2855 @LENGTH@ 6
------------MOV SimpleName@@MethodName:getValue:[ctx, Boolean.class] @TO@ MethodInvocation@@parser.parseExpression("@role.attribute == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2918 @LENGTH@ 32
------DEL SimpleName@@MethodName:assertThat:[parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)] @AT@ 2844 @LENGTH@ 107
---------DEL MethodInvocation@@parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class) @AT@ 2855 @LENGTH@ 95
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 2855 @LENGTH@ 62
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(parser.parseExpression("@role.attribute == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @AT@ 2902 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @TO@ TypeDeclaration@@[@Transactional, @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"classpath:config/namespace-autoconfig-context.xml"}), public]AbstractPersistableIntegrationTests,  @AT@ 2131 @LENGTH@ 264
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2131 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2138 @LENGTH@ 4
---INS SimpleName@@MethodName:equalsWorksForProxiedEntities @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2143 @LENGTH@ 29
---INS VariableDeclarationStatement@@CustomAbstractPersistable entity=repository.saveAndFlush(new CustomAbstractPersistable()); @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2180 @LENGTH@ 92
------INS SimpleType@@CustomAbstractPersistable @TO@ VariableDeclarationStatement@@CustomAbstractPersistable entity=repository.saveAndFlush(new CustomAbstractPersistable()); @AT@ 2180 @LENGTH@ 25
------INS VariableDeclarationFragment@@entity=repository.saveAndFlush(new CustomAbstractPersistable()) @TO@ VariableDeclarationStatement@@CustomAbstractPersistable entity=repository.saveAndFlush(new CustomAbstractPersistable()); @AT@ 2206 @LENGTH@ 65
---------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=repository.saveAndFlush(new CustomAbstractPersistable()) @AT@ 2206 @LENGTH@ 6
---------INS MethodInvocation@@repository.saveAndFlush(new CustomAbstractPersistable()) @TO@ VariableDeclarationFragment@@entity=repository.saveAndFlush(new CustomAbstractPersistable()) @AT@ 2215 @LENGTH@ 56
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.saveAndFlush(new CustomAbstractPersistable()) @AT@ 2215 @LENGTH@ 10
------------INS SimpleName@@MethodName:saveAndFlush:[new CustomAbstractPersistable()] @TO@ MethodInvocation@@repository.saveAndFlush(new CustomAbstractPersistable()) @AT@ 2226 @LENGTH@ 45
---------------INS ClassInstanceCreation@@CustomAbstractPersistable[] @TO@ SimpleName@@MethodName:saveAndFlush:[new CustomAbstractPersistable()] @AT@ 2239 @LENGTH@ 31
------------------INS New@@new @TO@ ClassInstanceCreation@@CustomAbstractPersistable[] @AT@ 2239 @LENGTH@ 3
------------------INS SimpleType@@CustomAbstractPersistable @TO@ ClassInstanceCreation@@CustomAbstractPersistable[] @AT@ 2243 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:em.clear() @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2276 @LENGTH@ 11
------INS MethodInvocation@@em.clear() @TO@ ExpressionStatement@@MethodInvocation:em.clear() @AT@ 2276 @LENGTH@ 10
---------INS SimpleName@@Name:em @TO@ MethodInvocation@@em.clear() @AT@ 2276 @LENGTH@ 2
---------INS SimpleName@@MethodName:clear:[] @TO@ MethodInvocation@@em.clear() @AT@ 2279 @LENGTH@ 7
---INS VariableDeclarationStatement@@CustomAbstractPersistable proxy=repository.getOne(entity.getId()); @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2291 @LENGTH@ 68
------INS SimpleType@@CustomAbstractPersistable @TO@ VariableDeclarationStatement@@CustomAbstractPersistable proxy=repository.getOne(entity.getId()); @AT@ 2291 @LENGTH@ 25
------INS VariableDeclarationFragment@@proxy=repository.getOne(entity.getId()) @TO@ VariableDeclarationStatement@@CustomAbstractPersistable proxy=repository.getOne(entity.getId()); @AT@ 2317 @LENGTH@ 41
---------INS SimpleName@@proxy @TO@ VariableDeclarationFragment@@proxy=repository.getOne(entity.getId()) @AT@ 2317 @LENGTH@ 5
---------INS MethodInvocation@@repository.getOne(entity.getId()) @TO@ VariableDeclarationFragment@@proxy=repository.getOne(entity.getId()) @AT@ 2325 @LENGTH@ 33
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.getOne(entity.getId()) @AT@ 2325 @LENGTH@ 10
------------INS SimpleName@@MethodName:getOne:[entity.getId()] @TO@ MethodInvocation@@repository.getOne(entity.getId()) @AT@ 2336 @LENGTH@ 22
---------------INS MethodInvocation@@entity.getId() @TO@ SimpleName@@MethodName:getOne:[entity.getId()] @AT@ 2343 @LENGTH@ 14
------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getId() @AT@ 2343 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@entity.getId() @AT@ 2350 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(proxy,is(proxy)) @TO@ MethodDeclaration@@public, void, MethodName:equalsWorksForProxiedEntities,  @AT@ 2363 @LENGTH@ 29
------INS MethodInvocation@@assertThat(proxy,is(proxy)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(proxy,is(proxy)) @AT@ 2363 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertThat:[proxy, is(proxy)] @TO@ MethodInvocation@@assertThat(proxy,is(proxy)) @AT@ 2363 @LENGTH@ 28
------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:assertThat:[proxy, is(proxy)] @AT@ 2374 @LENGTH@ 5
------------INS MethodInvocation@@is(proxy) @TO@ SimpleName@@MethodName:assertThat:[proxy, is(proxy)] @AT@ 2381 @LENGTH@ 9
---------------INS SimpleName@@MethodName:is:[proxy] @TO@ MethodInvocation@@is(proxy) @AT@ 2381 @LENGTH@ 9
------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:is:[proxy] @AT@ 2384 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @TO@ TypeDeclaration@@[@RunWith(Parameterized.class), public]DefaultSetOperationsTests,  @AT@ 6755 @LENGTH@ 505
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6755 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6762 @LENGTH@ 4
---INS SimpleName@@MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6767 @LENGTH@ 58
---INS VariableDeclarationStatement@@K sourceKey1=keyFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6833 @LENGTH@ 37
------INS SimpleType@@K @TO@ VariableDeclarationStatement@@K sourceKey1=keyFactory.instance(); @AT@ 6833 @LENGTH@ 1
------INS VariableDeclarationFragment@@sourceKey1=keyFactory.instance() @TO@ VariableDeclarationStatement@@K sourceKey1=keyFactory.instance(); @AT@ 6835 @LENGTH@ 34
---------INS SimpleName@@sourceKey1 @TO@ VariableDeclarationFragment@@sourceKey1=keyFactory.instance() @AT@ 6835 @LENGTH@ 10
---------INS MethodInvocation@@keyFactory.instance() @TO@ VariableDeclarationFragment@@sourceKey1=keyFactory.instance() @AT@ 6848 @LENGTH@ 21
------------INS SimpleName@@Name:keyFactory @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6848 @LENGTH@ 10
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6859 @LENGTH@ 10
---INS VariableDeclarationStatement@@K sourceKey2=keyFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6873 @LENGTH@ 37
------INS SimpleType@@K @TO@ VariableDeclarationStatement@@K sourceKey2=keyFactory.instance(); @AT@ 6873 @LENGTH@ 1
------INS VariableDeclarationFragment@@sourceKey2=keyFactory.instance() @TO@ VariableDeclarationStatement@@K sourceKey2=keyFactory.instance(); @AT@ 6875 @LENGTH@ 34
---------INS SimpleName@@sourceKey2 @TO@ VariableDeclarationFragment@@sourceKey2=keyFactory.instance() @AT@ 6875 @LENGTH@ 10
---------INS MethodInvocation@@keyFactory.instance() @TO@ VariableDeclarationFragment@@sourceKey2=keyFactory.instance() @AT@ 6888 @LENGTH@ 21
------------INS SimpleName@@Name:keyFactory @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6888 @LENGTH@ 10
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6899 @LENGTH@ 10
---INS VariableDeclarationStatement@@K destinationKey=keyFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6913 @LENGTH@ 41
------INS SimpleType@@K @TO@ VariableDeclarationStatement@@K destinationKey=keyFactory.instance(); @AT@ 6913 @LENGTH@ 1
------INS VariableDeclarationFragment@@destinationKey=keyFactory.instance() @TO@ VariableDeclarationStatement@@K destinationKey=keyFactory.instance(); @AT@ 6915 @LENGTH@ 38
---------INS SimpleName@@destinationKey @TO@ VariableDeclarationFragment@@destinationKey=keyFactory.instance() @AT@ 6915 @LENGTH@ 14
---------INS MethodInvocation@@keyFactory.instance() @TO@ VariableDeclarationFragment@@destinationKey=keyFactory.instance() @AT@ 6932 @LENGTH@ 21
------------INS SimpleName@@Name:keyFactory @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6932 @LENGTH@ 10
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@keyFactory.instance() @AT@ 6943 @LENGTH@ 10
---INS VariableDeclarationStatement@@V v1=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6958 @LENGTH@ 31
------INS SimpleType@@V @TO@ VariableDeclarationStatement@@V v1=valueFactory.instance(); @AT@ 6958 @LENGTH@ 1
------INS VariableDeclarationFragment@@v1=valueFactory.instance() @TO@ VariableDeclarationStatement@@V v1=valueFactory.instance(); @AT@ 6960 @LENGTH@ 28
---------INS SimpleName@@v1 @TO@ VariableDeclarationFragment@@v1=valueFactory.instance() @AT@ 6960 @LENGTH@ 2
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@v1=valueFactory.instance() @AT@ 6965 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6965 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6978 @LENGTH@ 10
---INS VariableDeclarationStatement@@V v2=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 6992 @LENGTH@ 31
------INS SimpleType@@V @TO@ VariableDeclarationStatement@@V v2=valueFactory.instance(); @AT@ 6992 @LENGTH@ 1
------INS VariableDeclarationFragment@@v2=valueFactory.instance() @TO@ VariableDeclarationStatement@@V v2=valueFactory.instance(); @AT@ 6994 @LENGTH@ 28
---------INS SimpleName@@v2 @TO@ VariableDeclarationFragment@@v2=valueFactory.instance() @AT@ 6994 @LENGTH@ 2
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@v2=valueFactory.instance() @AT@ 6999 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 6999 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 7012 @LENGTH@ 10
---INS VariableDeclarationStatement@@V v3=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 7026 @LENGTH@ 31
------INS SimpleType@@V @TO@ VariableDeclarationStatement@@V v3=valueFactory.instance(); @AT@ 7026 @LENGTH@ 1
------INS VariableDeclarationFragment@@v3=valueFactory.instance() @TO@ VariableDeclarationStatement@@V v3=valueFactory.instance(); @AT@ 7028 @LENGTH@ 28
---------INS SimpleName@@v3 @TO@ VariableDeclarationFragment@@v3=valueFactory.instance() @AT@ 7028 @LENGTH@ 2
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@v3=valueFactory.instance() @AT@ 7033 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 7033 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 7046 @LENGTH@ 10
---INS VariableDeclarationStatement@@V v4=valueFactory.instance(); @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 7060 @LENGTH@ 31
------INS SimpleType@@V @TO@ VariableDeclarationStatement@@V v4=valueFactory.instance(); @AT@ 7060 @LENGTH@ 1
------INS VariableDeclarationFragment@@v4=valueFactory.instance() @TO@ VariableDeclarationStatement@@V v4=valueFactory.instance(); @AT@ 7062 @LENGTH@ 28
---------INS SimpleName@@v4 @TO@ VariableDeclarationFragment@@v4=valueFactory.instance() @AT@ 7062 @LENGTH@ 2
---------INS MethodInvocation@@valueFactory.instance() @TO@ VariableDeclarationFragment@@v4=valueFactory.instance() @AT@ 7067 @LENGTH@ 23
------------INS SimpleName@@Name:valueFactory @TO@ MethodInvocation@@valueFactory.instance() @AT@ 7067 @LENGTH@ 12
------------INS SimpleName@@MethodName:instance:[] @TO@ MethodInvocation@@valueFactory.instance() @AT@ 7080 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:setOps.add(sourceKey1,v1,v2,v3) @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 7095 @LENGTH@ 35
------INS MethodInvocation@@setOps.add(sourceKey1,v1,v2,v3) @TO@ ExpressionStatement@@MethodInvocation:setOps.add(sourceKey1,v1,v2,v3) @AT@ 7095 @LENGTH@ 34
---------INS SimpleName@@Name:setOps @TO@ MethodInvocation@@setOps.add(sourceKey1,v1,v2,v3) @AT@ 7095 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[sourceKey1, v1, v2, v3] @TO@ MethodInvocation@@setOps.add(sourceKey1,v1,v2,v3) @AT@ 7102 @LENGTH@ 27
------------INS SimpleName@@sourceKey1 @TO@ SimpleName@@MethodName:add:[sourceKey1, v1, v2, v3] @AT@ 7106 @LENGTH@ 10
------------INS SimpleName@@v1 @TO@ SimpleName@@MethodName:add:[sourceKey1, v1, v2, v3] @AT@ 7118 @LENGTH@ 2
------------INS SimpleName@@v2 @TO@ SimpleName@@MethodName:add:[sourceKey1, v1, v2, v3] @AT@ 7122 @LENGTH@ 2
------------INS SimpleName@@v3 @TO@ SimpleName@@MethodName:add:[sourceKey1, v1, v2, v3] @AT@ 7126 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:setOps.add(sourceKey2,v2,v3,v4) @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 7133 @LENGTH@ 35
------INS MethodInvocation@@setOps.add(sourceKey2,v2,v3,v4) @TO@ ExpressionStatement@@MethodInvocation:setOps.add(sourceKey2,v2,v3,v4) @AT@ 7133 @LENGTH@ 34
---------INS SimpleName@@Name:setOps @TO@ MethodInvocation@@setOps.add(sourceKey2,v2,v3,v4) @AT@ 7133 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:[sourceKey2, v2, v3, v4] @TO@ MethodInvocation@@setOps.add(sourceKey2,v2,v3,v4) @AT@ 7140 @LENGTH@ 27
------------INS SimpleName@@sourceKey2 @TO@ SimpleName@@MethodName:add:[sourceKey2, v2, v3, v4] @AT@ 7144 @LENGTH@ 10
------------INS SimpleName@@v2 @TO@ SimpleName@@MethodName:add:[sourceKey2, v2, v3, v4] @AT@ 7156 @LENGTH@ 2
------------INS SimpleName@@v3 @TO@ SimpleName@@MethodName:add:[sourceKey2, v2, v3, v4] @AT@ 7160 @LENGTH@ 2
------------INS SimpleName@@v4 @TO@ SimpleName@@MethodName:add:[sourceKey2, v2, v3, v4] @AT@ 7164 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey),is(2L)) @TO@ MethodDeclaration@@public, void, MethodName:intersectAndStoreShouldReturnNumberOfElementsInDestination,  @AT@ 7172 @LENGTH@ 85
------INS MethodInvocation@@assertThat(setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey),is(2L)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey),is(2L)) @AT@ 7172 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertThat:[setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey), is(2L)] @TO@ MethodInvocation@@assertThat(setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey),is(2L)) @AT@ 7172 @LENGTH@ 84
------------INS MethodInvocation@@setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey) @TO@ SimpleName@@MethodName:assertThat:[setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey), is(2L)] @AT@ 7183 @LENGTH@ 64
---------------INS SimpleName@@Name:setOps @TO@ MethodInvocation@@setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey) @AT@ 7183 @LENGTH@ 6
---------------INS SimpleName@@MethodName:intersectAndStore:[sourceKey1, sourceKey2, destinationKey] @TO@ MethodInvocation@@setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey) @AT@ 7190 @LENGTH@ 57
------------------INS SimpleName@@sourceKey1 @TO@ SimpleName@@MethodName:intersectAndStore:[sourceKey1, sourceKey2, destinationKey] @AT@ 7208 @LENGTH@ 10
------------------INS SimpleName@@sourceKey2 @TO@ SimpleName@@MethodName:intersectAndStore:[sourceKey1, sourceKey2, destinationKey] @AT@ 7220 @LENGTH@ 10
------------------INS SimpleName@@destinationKey @TO@ SimpleName@@MethodName:intersectAndStore:[sourceKey1, sourceKey2, destinationKey] @AT@ 7232 @LENGTH@ 14
------------INS MethodInvocation@@is(2L) @TO@ SimpleName@@MethodName:assertThat:[setOps.intersectAndStore(sourceKey1,sourceKey2,destinationKey), is(2L)] @AT@ 7249 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[2L] @TO@ MethodInvocation@@is(2L) @AT@ 7249 @LENGTH@ 6
------------------INS NumberLiteral@@2L @TO@ SimpleName@@MethodName:is:[2L] @AT@ 7252 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPNettyEncoder, HL7MLLPConfig config,  @TO@ voidMethodName:HL7MLLPNettyEncoder, HL7MLLPConfig config,  @AT@ 1239 @LENGTH@ 86
---DEL Modifier@@public @AT@ 1239 @LENGTH@ 6


MOV ExpressionStatement@@MethodInvocation:new DirectFieldAccessor(lqcf).setPropertyValue("logger",logger) @TO@ MethodDeclaration@@public, void, MethodName:testFailOver, Exception,  @AT@ 4346 @LENGTH@ 65


UPD MethodDeclaration@@public, voidMethodName:CompletionIntervalTask, List<AtomicBoolean> triggers,  @TO@ voidMethodName:CompletionIntervalTask, List<AtomicBoolean> triggers,  @AT@ 8604 @LENGTH@ 109
---DEL Modifier@@public @AT@ 8604 @LENGTH@ 6


UPD CatchClause@@catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(500,cause.getStatusCode());  String trace=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertNotNull(trace);  assertTrue(trace.startsWith("java.lang.IllegalArgumentException: Camel cannot do this"));  assertEquals("http://localhost:" + getPort() + "/foo",cause.getUri());} @TO@ catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(500,cause.getStatusCode());  String trace=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertNotNull(trace);  assertTrue(trace.startsWith("java.lang.IllegalArgumentException: Camel cannot do this"));  assertEquals("http://localhost:" + getPort() + "/foo",cause.getUri());  cause.getHttpContent().content().release();} @AT@ 1368 @LENGTH@ 561
---INS ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @TO@ CatchClause@@catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(500,cause.getStatusCode());  String trace=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertNotNull(trace);  assertTrue(trace.startsWith("java.lang.IllegalArgumentException: Camel cannot do this"));  assertEquals("http://localhost:" + getPort() + "/foo",cause.getUri());} @AT@ 1932 @LENGTH@ 43
------INS MethodInvocation@@cause.getHttpContent().content().release() @TO@ ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @AT@ 1932 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1932 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getHttpContent:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1932 @LENGTH@ 22
---------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1932 @LENGTH@ 5
---------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1965 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:PreparedErrorHandler, RouteContext key, Processor value,  @TO@ voidMethodName:PreparedErrorHandler, RouteContext key, Processor value,  @AT@ 3794 @LENGTH@ 105
---DEL Modifier@@public @AT@ 3794 @LENGTH@ 6


UPD TypeDeclaration@@[public]AwsExchangeUtil,  @TO@ [public, final]AwsExchangeUtil,  @AT@ 931 @LENGTH@ 321
---INS Modifier@@final @TO@ TypeDeclaration@@[public]AwsExchangeUtil,  @AT@ 927 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:ConnectorRef, Connector connector, CometDServlet servlet, Server server,  @TO@ voidMethodName:ConnectorRef, Connector connector, CometDServlet servlet, Server server,  @AT@ 2815 @LENGTH@ 225
---DEL Modifier@@public @AT@ 2815 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @TO@ TypeDeclaration@@[public]RedisTokenStoreTests, TokenStoreBaseTests @AT@ 3484 @LENGTH@ 756
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3484 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3491 @LENGTH@ 4
---INS SimpleName@@MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3496 @LENGTH@ 70
---INS VariableDeclarationStatement@@OAuth2Request request=RequestTokenFactory.createOAuth2Request("clientId",false); @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3573 @LENGTH@ 83
------INS SimpleType@@OAuth2Request @TO@ VariableDeclarationStatement@@OAuth2Request request=RequestTokenFactory.createOAuth2Request("clientId",false); @AT@ 3573 @LENGTH@ 13
------INS VariableDeclarationFragment@@request=RequestTokenFactory.createOAuth2Request("clientId",false) @TO@ VariableDeclarationStatement@@OAuth2Request request=RequestTokenFactory.createOAuth2Request("clientId",false); @AT@ 3587 @LENGTH@ 68
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=RequestTokenFactory.createOAuth2Request("clientId",false) @AT@ 3587 @LENGTH@ 7
---------INS MethodInvocation@@RequestTokenFactory.createOAuth2Request("clientId",false) @TO@ VariableDeclarationFragment@@request=RequestTokenFactory.createOAuth2Request("clientId",false) @AT@ 3597 @LENGTH@ 58
------------INS SimpleName@@Name:RequestTokenFactory @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request("clientId",false) @AT@ 3597 @LENGTH@ 19
------------INS SimpleName@@MethodName:createOAuth2Request:["clientId", false] @TO@ MethodInvocation@@RequestTokenFactory.createOAuth2Request("clientId",false) @AT@ 3617 @LENGTH@ 38
---------------INS StringLiteral@@"clientId" @TO@ SimpleName@@MethodName:createOAuth2Request:["clientId", false] @AT@ 3637 @LENGTH@ 10
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:createOAuth2Request:["clientId", false] @AT@ 3649 @LENGTH@ 5
---INS VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("user","password"); @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3659 @LENGTH@ 95
------INS SimpleType@@TestingAuthenticationToken @TO@ VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("user","password"); @AT@ 3659 @LENGTH@ 26
------INS VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("user","password") @TO@ VariableDeclarationStatement@@TestingAuthenticationToken authentication=new TestingAuthenticationToken("user","password"); @AT@ 3686 @LENGTH@ 67
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("user","password") @AT@ 3686 @LENGTH@ 14
---------INS ClassInstanceCreation@@TestingAuthenticationToken["user", "password"] @TO@ VariableDeclarationFragment@@authentication=new TestingAuthenticationToken("user","password") @AT@ 3703 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@TestingAuthenticationToken["user", "password"] @AT@ 3703 @LENGTH@ 3
------------INS SimpleType@@TestingAuthenticationToken @TO@ ClassInstanceCreation@@TestingAuthenticationToken["user", "password"] @AT@ 3707 @LENGTH@ 26
------------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["user", "password"] @AT@ 3734 @LENGTH@ 6
------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@TestingAuthenticationToken["user", "password"] @AT@ 3742 @LENGTH@ 10
---INS VariableDeclarationStatement@@OAuth2AccessToken oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()); @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3758 @LENGTH@ 104
------INS SimpleType@@OAuth2AccessToken @TO@ VariableDeclarationStatement@@OAuth2AccessToken oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()); @AT@ 3758 @LENGTH@ 17
------INS VariableDeclarationFragment@@oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()) @TO@ VariableDeclarationStatement@@OAuth2AccessToken oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()); @AT@ 3776 @LENGTH@ 85
---------INS SimpleName@@oauth2AccessToken @TO@ VariableDeclarationFragment@@oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()) @AT@ 3776 @LENGTH@ 17
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken["access-token-" + UUID.randomUUID()] @TO@ VariableDeclarationFragment@@oauth2AccessToken=new DefaultOAuth2AccessToken("access-token-" + UUID.randomUUID()) @AT@ 3796 @LENGTH@ 65
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["access-token-" + UUID.randomUUID()] @AT@ 3796 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["access-token-" + UUID.randomUUID()] @AT@ 3800 @LENGTH@ 24
------------INS InfixExpression@@"access-token-" + UUID.randomUUID() @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken["access-token-" + UUID.randomUUID()] @AT@ 3825 @LENGTH@ 35
---------------INS StringLiteral@@"access-token-" @TO@ InfixExpression@@"access-token-" + UUID.randomUUID() @AT@ 3825 @LENGTH@ 15
---------------INS Operator@@+ @TO@ InfixExpression@@"access-token-" + UUID.randomUUID() @AT@ 3840 @LENGTH@ 1
---------------INS MethodInvocation@@UUID.randomUUID() @TO@ InfixExpression@@"access-token-" + UUID.randomUUID() @AT@ 3843 @LENGTH@ 17
------------------INS SimpleName@@Name:UUID @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 3843 @LENGTH@ 4
------------------INS SimpleName@@MethodName:randomUUID:[] @TO@ MethodInvocation@@UUID.randomUUID() @AT@ 3848 @LENGTH@ 12
---INS VariableDeclarationStatement@@OAuth2Authentication oauth2Authentication=new OAuth2Authentication(request,authentication); @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3865 @LENGTH@ 94
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication oauth2Authentication=new OAuth2Authentication(request,authentication); @AT@ 3865 @LENGTH@ 20
------INS VariableDeclarationFragment@@oauth2Authentication=new OAuth2Authentication(request,authentication) @TO@ VariableDeclarationStatement@@OAuth2Authentication oauth2Authentication=new OAuth2Authentication(request,authentication); @AT@ 3886 @LENGTH@ 72
---------INS SimpleName@@oauth2Authentication @TO@ VariableDeclarationFragment@@oauth2Authentication=new OAuth2Authentication(request,authentication) @AT@ 3886 @LENGTH@ 20
---------INS ClassInstanceCreation@@OAuth2Authentication[request, authentication] @TO@ VariableDeclarationFragment@@oauth2Authentication=new OAuth2Authentication(request,authentication) @AT@ 3909 @LENGTH@ 49
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[request, authentication] @AT@ 3909 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[request, authentication] @AT@ 3913 @LENGTH@ 20
------------INS SimpleName@@request @TO@ ClassInstanceCreation@@OAuth2Authentication[request, authentication] @AT@ 3934 @LENGTH@ 7
------------INS SimpleName@@authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[request, authentication] @AT@ 3943 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:tokenStore.storeAccessToken(oauth2AccessToken,oauth2Authentication) @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 3963 @LENGTH@ 69
------INS MethodInvocation@@tokenStore.storeAccessToken(oauth2AccessToken,oauth2Authentication) @TO@ ExpressionStatement@@MethodInvocation:tokenStore.storeAccessToken(oauth2AccessToken,oauth2Authentication) @AT@ 3963 @LENGTH@ 68
---------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.storeAccessToken(oauth2AccessToken,oauth2Authentication) @AT@ 3963 @LENGTH@ 10
---------INS SimpleName@@MethodName:storeAccessToken:[oauth2AccessToken, oauth2Authentication] @TO@ MethodInvocation@@tokenStore.storeAccessToken(oauth2AccessToken,oauth2Authentication) @AT@ 3974 @LENGTH@ 57
------------INS SimpleName@@oauth2AccessToken @TO@ SimpleName@@MethodName:storeAccessToken:[oauth2AccessToken, oauth2Authentication] @AT@ 3991 @LENGTH@ 17
------------INS SimpleName@@oauth2Authentication @TO@ SimpleName@@MethodName:storeAccessToken:[oauth2AccessToken, oauth2Authentication] @AT@ 4010 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:tokenStore.removeAccessToken(oauth2AccessToken) @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 4035 @LENGTH@ 48
------INS MethodInvocation@@tokenStore.removeAccessToken(oauth2AccessToken) @TO@ ExpressionStatement@@MethodInvocation:tokenStore.removeAccessToken(oauth2AccessToken) @AT@ 4035 @LENGTH@ 47
---------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.removeAccessToken(oauth2AccessToken) @AT@ 4035 @LENGTH@ 10
---------INS SimpleName@@MethodName:removeAccessToken:[oauth2AccessToken] @TO@ MethodInvocation@@tokenStore.removeAccessToken(oauth2AccessToken) @AT@ 4046 @LENGTH@ 36
------------INS SimpleName@@oauth2AccessToken @TO@ SimpleName@@MethodName:removeAccessToken:[oauth2AccessToken] @AT@ 4064 @LENGTH@ 17
---INS VariableDeclarationStatement@@Collection<OAuth2AccessToken> oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()); @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 4086 @LENGTH@ 106
------INS ParameterizedType@@Collection<OAuth2AccessToken> @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()); @AT@ 4086 @LENGTH@ 29
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 4086 @LENGTH@ 10
---------INS SimpleType@@OAuth2AccessToken @TO@ ParameterizedType@@Collection<OAuth2AccessToken> @AT@ 4097 @LENGTH@ 17
------INS VariableDeclarationFragment@@oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()) @TO@ VariableDeclarationStatement@@Collection<OAuth2AccessToken> oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()); @AT@ 4116 @LENGTH@ 75
---------INS SimpleName@@oauth2AccessTokens @TO@ VariableDeclarationFragment@@oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()) @AT@ 4116 @LENGTH@ 18
---------INS MethodInvocation@@tokenStore.findTokensByClientId(request.getClientId()) @TO@ VariableDeclarationFragment@@oauth2AccessTokens=tokenStore.findTokensByClientId(request.getClientId()) @AT@ 4137 @LENGTH@ 54
------------INS SimpleName@@Name:tokenStore @TO@ MethodInvocation@@tokenStore.findTokensByClientId(request.getClientId()) @AT@ 4137 @LENGTH@ 10
------------INS SimpleName@@MethodName:findTokensByClientId:[request.getClientId()] @TO@ MethodInvocation@@tokenStore.findTokensByClientId(request.getClientId()) @AT@ 4148 @LENGTH@ 43
---------------INS MethodInvocation@@request.getClientId() @TO@ SimpleName@@MethodName:findTokensByClientId:[request.getClientId()] @AT@ 4169 @LENGTH@ 21
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getClientId() @AT@ 4169 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getClientId:[] @TO@ MethodInvocation@@request.getClientId() @AT@ 4177 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertTrue(oauth2AccessTokens.isEmpty()) @TO@ MethodDeclaration@@public, void, MethodName:storeAccessTokenWithoutRefreshTokenRemoveAccessTokenVerifyTokenRemoved,  @AT@ 4196 @LENGTH@ 41
------INS MethodInvocation@@assertTrue(oauth2AccessTokens.isEmpty()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(oauth2AccessTokens.isEmpty()) @AT@ 4196 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertTrue:[oauth2AccessTokens.isEmpty()] @TO@ MethodInvocation@@assertTrue(oauth2AccessTokens.isEmpty()) @AT@ 4196 @LENGTH@ 40
------------INS MethodInvocation@@oauth2AccessTokens.isEmpty() @TO@ SimpleName@@MethodName:assertTrue:[oauth2AccessTokens.isEmpty()] @AT@ 4207 @LENGTH@ 28
---------------INS SimpleName@@Name:oauth2AccessTokens @TO@ MethodInvocation@@oauth2AccessTokens.isEmpty() @AT@ 4207 @LENGTH@ 18
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@oauth2AccessTokens.isEmpty() @AT@ 4226 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).isTrue().contains("ROLE_ANONYMOUS")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @AT@ 3964 @LENGTH@ 110
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).isTrue().contains("ROLE_ANONYMOUS")) @TO@ assertThat(AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")) @AT@ 3964 @LENGTH@ 109
------UPD SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(auth.getAuthorities()).isTrue().contains("ROLE_ANONYMOUS")] @TO@ MethodName:assertThat:[AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS")] @AT@ 3964 @LENGTH@ 109
---------UPD MethodInvocation@@AuthorityUtils.authorityListToSet(auth.getAuthorities()).isTrue().contains("ROLE_ANONYMOUS") @TO@ AuthorityUtils.authorityListToSet(auth.getAuthorities()).contains("ROLE_ANONYMOUS") @AT@ 3975 @LENGTH@ 97
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 3975 @LENGTH@ 65


UPD TypeDeclaration@@[public, final]ShareUnitOfWorkAggregationStrategy, [AggregationStrategy] @TO@ [public, final]ShareUnitOfWorkAggregationStrategy, [AggregationStrategy, DelegateAggregationStrategy] @AT@ 1332 @LENGTH@ 2267
---INS SimpleType@@DelegateAggregationStrategy @TO@ TypeDeclaration@@[public, final]ShareUnitOfWorkAggregationStrategy, [AggregationStrategy] @AT@ 1418 @LENGTH@ 27


UPD Block@@ElseBody:{  if (!targetDir.exists() && !targetDir.mkdirs()) {    throw PatchLogger.ROOT_LOGGER.cannotCreateDirectory(targetDir.getAbsolutePath());  }  final File moduleXml=new File(targetDir,MODULE_XML);  final ByteArrayInputStream is=new ByteArrayInputStream(PatchUtils.getAbsentModuleContent(contentItem));  try {    return copy(is,moduleXml);  }  finally {    IoUtils.safeClose(is);  }} @TO@ ElseBody:{  if (!targetDir.exists() && !targetDir.mkdirs()) {    throw PatchLogger.ROOT_LOGGER.cannotCreateDirectory(targetDir.getAbsolutePath());  }  final Path moduleXml=targetDir.toPath().resolve(MODULE_XML);  final ByteArrayInputStream is=new ByteArrayInputStream(PatchUtils.getAbsentModuleContent(contentItem));  Files.copy(is,moduleXml,StandardCopyOption.REPLACE_EXISTING);} @AT@ 3561 @LENGTH@ 673
---UPD VariableDeclarationStatement@@final File moduleXml=new File(targetDir,MODULE_XML); @TO@ final Path moduleXml=targetDir.toPath().resolve(MODULE_XML); @AT@ 3912 @LENGTH@ 55
------UPD SimpleType@@File @TO@ Path @AT@ 3918 @LENGTH@ 4
------UPD VariableDeclarationFragment@@moduleXml=new File(targetDir,MODULE_XML) @TO@ moduleXml=targetDir.toPath().resolve(MODULE_XML) @AT@ 3923 @LENGTH@ 43
---------DEL ClassInstanceCreation@@File[targetDir, MODULE_XML] @AT@ 3935 @LENGTH@ 31
------------DEL New@@new @AT@ 3935 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 3939 @LENGTH@ 4
------------DEL SimpleName@@targetDir @AT@ 3944 @LENGTH@ 9
------------DEL SimpleName@@MODULE_XML @AT@ 3955 @LENGTH@ 10
---------INS MethodInvocation@@targetDir.toPath().resolve(MODULE_XML) @TO@ VariableDeclarationFragment@@moduleXml=new File(targetDir,MODULE_XML) @AT@ 3981 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:toPath:[] @TO@ MethodInvocation@@targetDir.toPath().resolve(MODULE_XML) @AT@ 3981 @LENGTH@ 18
------------INS SimpleName@@Name:targetDir @TO@ MethodInvocation@@targetDir.toPath().resolve(MODULE_XML) @AT@ 3981 @LENGTH@ 9
------------INS SimpleName@@MethodName:resolve:[MODULE_XML] @TO@ MethodInvocation@@targetDir.toPath().resolve(MODULE_XML) @AT@ 4000 @LENGTH@ 19
---------------INS SimpleName@@MODULE_XML @TO@ SimpleName@@MethodName:resolve:[MODULE_XML] @AT@ 4008 @LENGTH@ 10
---DEL TryStatement@@try {  return copy(is,moduleXml);}  finally {  IoUtils.safeClose(is);} @AT@ 4098 @LENGTH@ 126
------DEL ReturnStatement@@MethodInvocation:copy(is,moduleXml) @AT@ 4120 @LENGTH@ 27
---------DEL MethodInvocation@@copy(is,moduleXml) @AT@ 4127 @LENGTH@ 19
------------DEL SimpleName@@MethodName:copy:[is, moduleXml] @AT@ 4127 @LENGTH@ 19
---------------DEL SimpleName@@is @AT@ 4132 @LENGTH@ 2
---------------DEL SimpleName@@moduleXml @AT@ 4136 @LENGTH@ 9
------DEL Block@@FinallyBody:{  IoUtils.safeClose(is);} @AT@ 4170 @LENGTH@ 54
---MOV ExpressionStatement@@MethodInvocation:IoUtils.safeClose(is) @TO@ Block@@ElseBody:{  if (!targetDir.exists() && !targetDir.mkdirs()) {    throw PatchLogger.ROOT_LOGGER.cannotCreateDirectory(targetDir.getAbsolutePath());  }  final File moduleXml=new File(targetDir,MODULE_XML);  final ByteArrayInputStream is=new ByteArrayInputStream(PatchUtils.getAbsentModuleContent(contentItem));  try {    return copy(is,moduleXml);  }  finally {    IoUtils.safeClose(is);  }} @AT@ 4188 @LENGTH@ 22
------UPD MethodInvocation@@IoUtils.safeClose(is) @TO@ Files.copy(is,moduleXml,StandardCopyOption.REPLACE_EXISTING) @AT@ 4188 @LENGTH@ 21
---------UPD SimpleName@@Name:IoUtils @TO@ Name:Files @AT@ 4188 @LENGTH@ 7
---------UPD SimpleName@@MethodName:safeClose:[is] @TO@ MethodName:copy:[is, moduleXml, StandardCopyOption.REPLACE_EXISTING] @AT@ 4196 @LENGTH@ 13
------------INS SimpleName@@moduleXml @TO@ SimpleName@@MethodName:safeClose:[is] @AT@ 4166 @LENGTH@ 9
------------INS QualifiedName@@StandardCopyOption.REPLACE_EXISTING @TO@ SimpleName@@MethodName:safeClose:[is] @AT@ 4177 @LENGTH@ 35
---------------INS SimpleName@@StandardCopyOption @TO@ QualifiedName@@StandardCopyOption.REPLACE_EXISTING @AT@ 4177 @LENGTH@ 18
---------------INS SimpleName@@REPLACE_EXISTING @TO@ QualifiedName@@StandardCopyOption.REPLACE_EXISTING @AT@ 4196 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3590 @LENGTH@ 36
---INS MethodInvocation@@websocketComponent.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @AT@ 3590 @LENGTH@ 35
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3590 @LENGTH@ 18
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3609 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 3623 @LENGTH@ 1


DEL MethodDeclaration@@public, TypeLocationService, MethodName:getTypeLocationService,  @AT@ 4863 @LENGTH@ 677
---DEL Modifier@@public @AT@ 4863 @LENGTH@ 6
---DEL SimpleType@@TypeLocationService @AT@ 4870 @LENGTH@ 19
---DEL SimpleName@@MethodName:getTypeLocationService @AT@ 4890 @LENGTH@ 22
---DEL IfStatement@@if (typeLocationService == null) {  try {    ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);    for (    ServiceReference<?> ref : references) {      return (TypeLocationService)this.context.getService(ref);    }    return null;  } catch (  InvalidSyntaxException e) {    LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");    return null;  }} else {  return typeLocationService;} @AT@ 4921 @LENGTH@ 615
------DEL InfixExpression@@typeLocationService == null @AT@ 4925 @LENGTH@ 27
---------DEL SimpleName@@typeLocationService @AT@ 4925 @LENGTH@ 19
---------DEL Operator@@== @AT@ 4944 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 4948 @LENGTH@ 4
------DEL Block@@ThenBody:{  try {    ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);    for (    ServiceReference<?> ref : references) {      return (TypeLocationService)this.context.getService(ref);    }    return null;  } catch (  InvalidSyntaxException e) {    LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");    return null;  }} @AT@ 4954 @LENGTH@ 535
---------DEL TryStatement@@try {  ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null);  for (  ServiceReference<?> ref : references) {    return (TypeLocationService)this.context.getService(ref);  }  return null;} catch (InvalidSyntaxException e) {  LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");  return null;} @AT@ 5028 @LENGTH@ 455
------------DEL VariableDeclarationStatement@@ServiceReference<?>[] references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null); @AT@ 5042 @LENGTH@ 127
---------------DEL ArrayType@@ServiceReference<?>[] @AT@ 5042 @LENGTH@ 21
------------------DEL ParameterizedType@@ServiceReference<?> @AT@ 5042 @LENGTH@ 19
---------------------DEL SimpleType@@ServiceReference @AT@ 5042 @LENGTH@ 16
---------------------DEL WildcardType@@? @AT@ 5059 @LENGTH@ 1
---------------DEL VariableDeclarationFragment@@references=this.context.getAllServiceReferences(TypeLocationService.class.getName(),null) @AT@ 5064 @LENGTH@ 104
------------------DEL SimpleName@@references @AT@ 5064 @LENGTH@ 10
------------------DEL MethodInvocation@@this.context.getAllServiceReferences(TypeLocationService.class.getName(),null) @AT@ 5089 @LENGTH@ 79
---------------------DEL FieldAccess@@this.context @AT@ 5089 @LENGTH@ 12
------------------------DEL ThisExpression@@this @AT@ 5089 @LENGTH@ 4
------------------------DEL SimpleName@@context @AT@ 5094 @LENGTH@ 7
---------------------DEL SimpleName@@MethodName:getAllServiceReferences:[TypeLocationService.class.getName(), null] @AT@ 5102 @LENGTH@ 66
------------------------DEL MethodInvocation@@TypeLocationService.class.getName() @AT@ 5126 @LENGTH@ 35
---------------------------DEL TypeLiteral@@TypeLocationService.class @AT@ 5126 @LENGTH@ 25
---------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 5152 @LENGTH@ 9
------------------------DEL NullLiteral@@null @AT@ 5163 @LENGTH@ 4
------------DEL EnhancedForStatement@@for (ServiceReference<?> ref : references) {  return (TypeLocationService)this.context.getService(ref);} @AT@ 5179 @LENGTH@ 123
---------------DEL SingleVariableDeclaration@@ServiceReference<?> ref @AT@ 5184 @LENGTH@ 23
------------------DEL ParameterizedType@@ServiceReference<?> @AT@ 5184 @LENGTH@ 19
---------------------DEL SimpleType@@ServiceReference @AT@ 5184 @LENGTH@ 16
---------------------DEL WildcardType@@? @AT@ 5201 @LENGTH@ 1
------------------DEL SimpleName@@ref @AT@ 5204 @LENGTH@ 3
---------------DEL SimpleName@@references @AT@ 5210 @LENGTH@ 10
---------------DEL ReturnStatement@@CastExpression:(TypeLocationService)this.context.getService(ref) @AT@ 5234 @LENGTH@ 58
------------------DEL CastExpression@@(TypeLocationService)this.context.getService(ref) @AT@ 5241 @LENGTH@ 50
---------------------DEL SimpleType@@TypeLocationService @AT@ 5242 @LENGTH@ 19
---------------------DEL MethodInvocation@@this.context.getService(ref) @AT@ 5263 @LENGTH@ 28
------------------------DEL FieldAccess@@this.context @AT@ 5263 @LENGTH@ 12
---------------------------DEL ThisExpression@@this @AT@ 5263 @LENGTH@ 4
---------------------------DEL SimpleName@@context @AT@ 5268 @LENGTH@ 7
------------------------DEL SimpleName@@MethodName:getService:[ref] @AT@ 5276 @LENGTH@ 15
---------------------------DEL SimpleName@@ref @AT@ 5287 @LENGTH@ 3
------------DEL ReturnStatement@@NullLiteral:null @AT@ 5312 @LENGTH@ 12
---------------DEL NullLiteral@@null @AT@ 5319 @LENGTH@ 4
------------DEL CatchClause@@catch (InvalidSyntaxException e) {  LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.");  return null;} @AT@ 5334 @LENGTH@ 149
---------------DEL SingleVariableDeclaration@@InvalidSyntaxException e @AT@ 5341 @LENGTH@ 24
------------------DEL SimpleType@@InvalidSyntaxException @AT@ 5341 @LENGTH@ 22
------------------DEL SimpleName@@e @AT@ 5364 @LENGTH@ 1
---------------DEL ExpressionStatement@@MethodInvocation:LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.") @AT@ 5377 @LENGTH@ 77
------------------DEL MethodInvocation@@LOGGER.warning("Cannot load TypeLocationService on SecurityOperationsImpl.") @AT@ 5377 @LENGTH@ 76
---------------------DEL SimpleName@@Name:LOGGER @AT@ 5377 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:warning:["Cannot load TypeLocationService on SecurityOperationsImpl."] @AT@ 5384 @LENGTH@ 69
------------------------DEL StringLiteral@@"Cannot load TypeLocationService on SecurityOperationsImpl." @AT@ 5392 @LENGTH@ 60
---------------DEL ReturnStatement@@NullLiteral:null @AT@ 5463 @LENGTH@ 12
------------------DEL NullLiteral@@null @AT@ 5470 @LENGTH@ 4
------DEL Block@@ElseBody:{  return typeLocationService;} @AT@ 5495 @LENGTH@ 41
---------DEL ReturnStatement@@SimpleName:typeLocationService @AT@ 5503 @LENGTH@ 27
------------DEL SimpleName@@typeLocationService @AT@ 5510 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation:assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 1125 @LENGTH@ 102
---INS MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 1041 @LENGTH@ 101
------MOV MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 1125 @LENGTH@ 101
---------MOV MethodInvocation@@request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @TO@ MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 1136 @LENGTH@ 89
------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 1131 @LENGTH@ 11
---UPD MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodName:assertThat:[request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 1125 @LENGTH@ 101


UPD ExpressionStatement@@MethodInvocation:from("jetty:http://localhost:" + port2 + "/test/hello?matchOnUriPrefix=true").removeHeaders("formMetaData").to("http://localhost:" + port1 + "?bridgeEndpoint=true&mapHttpMessageHeaders=false") @TO@ MethodInvocation:from("jetty:http://localhost:" + port2 + "/test/hello?matchOnUriPrefix=true").removeHeaders("formMetaData").to("http://localhost:" + port1 + "?bridgeEndpoint=true") @AT@ 8347 @LENGTH@ 235
---UPD MethodInvocation@@from("jetty:http://localhost:" + port2 + "/test/hello?matchOnUriPrefix=true").removeHeaders("formMetaData").to("http://localhost:" + port1 + "?bridgeEndpoint=true&mapHttpMessageHeaders=false") @TO@ from("jetty:http://localhost:" + port2 + "/test/hello?matchOnUriPrefix=true").removeHeaders("formMetaData").to("http://localhost:" + port1 + "?bridgeEndpoint=true") @AT@ 8347 @LENGTH@ 234
------UPD SimpleName@@MethodName:to:["http://localhost:" + port1 + "?bridgeEndpoint=true&mapHttpMessageHeaders=false"] @TO@ MethodName:to:["http://localhost:" + port1 + "?bridgeEndpoint=true"] @AT@ 8497 @LENGTH@ 84
---------UPD InfixExpression@@"http://localhost:" + port1 + "?bridgeEndpoint=true&mapHttpMessageHeaders=false" @TO@ "http://localhost:" + port1 + "?bridgeEndpoint=true" @AT@ 8500 @LENGTH@ 80
------------UPD StringLiteral@@"?bridgeEndpoint=true&mapHttpMessageHeaders=false" @TO@ "?bridgeEndpoint=true" @AT@ 8530 @LENGTH@ 50


UPD VariableDeclarationStatement@@Optional<Boolean> async=Optional.ofNullable(getAndRemoveParameter(parameters,"async",Boolean.class)); @TO@ Boolean async=getAndRemoveParameter(parameters,"async",Boolean.class); @AT@ 3175 @LENGTH@ 105
---INS SimpleType@@Boolean @TO@ VariableDeclarationStatement@@Optional<Boolean> async=Optional.ofNullable(getAndRemoveParameter(parameters,"async",Boolean.class)); @AT@ 3148 @LENGTH@ 7
---DEL ParameterizedType@@Optional<Boolean> @AT@ 3175 @LENGTH@ 17
------DEL SimpleType@@Optional @AT@ 3175 @LENGTH@ 8
------DEL SimpleType@@Boolean @AT@ 3184 @LENGTH@ 7
---UPD VariableDeclarationFragment@@async=Optional.ofNullable(getAndRemoveParameter(parameters,"async",Boolean.class)) @TO@ async=getAndRemoveParameter(parameters,"async",Boolean.class) @AT@ 3193 @LENGTH@ 86
------DEL MethodInvocation@@Optional.ofNullable(getAndRemoveParameter(parameters,"async",Boolean.class)) @AT@ 3201 @LENGTH@ 78
---------DEL SimpleName@@Name:Optional @AT@ 3201 @LENGTH@ 8
---------DEL SimpleName@@MethodName:ofNullable:[getAndRemoveParameter(parameters,"async",Boolean.class)] @AT@ 3210 @LENGTH@ 69
------MOV MethodInvocation@@getAndRemoveParameter(parameters,"async",Boolean.class) @TO@ VariableDeclarationFragment@@async=Optional.ofNullable(getAndRemoveParameter(parameters,"async",Boolean.class)) @AT@ 3221 @LENGTH@ 57


DEL ExpressionStatement@@MethodInvocation:System.out.println("patch =>>") @AT@ 4752 @LENGTH@ 32
---DEL MethodInvocation@@System.out.println("patch =>>") @AT@ 4752 @LENGTH@ 31
------DEL QualifiedName@@Name:System.out @AT@ 4752 @LENGTH@ 10


UPD Block@@ThenBody:{  WithSecurityContextFactory factory=createFactory(withSecurityContext,context);  Class<? extends Annotation> type=(Class<? extends Annotation>)GenericTypeResolver.resolveTypeArgument(factory.getClass(),WithSecurityContextFactory.class);  Annotation annotation=AnnotationUtils.findAnnotation(annotated,type);  try {    return factory.createSecurityContext(annotation);  } catch (  RuntimeException e) {    throw new IllegalStateException("Unable to create SecurityContext using " + annotation,e);  }} @TO@ ThenBody:{  WithSecurityContextFactory factory=createFactory(withSecurityContext,context);  Class<? extends Annotation> type=(Class<? extends Annotation>)GenericTypeResolver.resolveTypeArgument(factory.getClass(),WithSecurityContextFactory.class);  Annotation annotation=findAnnotation(annotated,type);  try {    return factory.createSecurityContext(annotation);  } catch (  RuntimeException e) {    throw new IllegalStateException("Unable to create SecurityContext using " + annotation,e);  }} @AT@ 3099 @LENGTH@ 538
---UPD VariableDeclarationStatement@@Annotation annotation=AnnotationUtils.findAnnotation(annotated,type); @TO@ Annotation findAnnotation=AnnotationUtils.findAnnotation(annotated,type); @AT@ 3352 @LENGTH@ 73
---INS VariableDeclarationStatement@@Annotation annotation=findAnnotation(annotated,type); @TO@ Block@@ThenBody:{  WithSecurityContextFactory factory=createFactory(withSecurityContext,context);  Class<? extends Annotation> type=(Class<? extends Annotation>)GenericTypeResolver.resolveTypeArgument(factory.getClass(),WithSecurityContextFactory.class);  Annotation annotation=AnnotationUtils.findAnnotation(annotated,type);  try {    return factory.createSecurityContext(annotation);  } catch (  RuntimeException e) {    throw new IllegalStateException("Unable to create SecurityContext using " + annotation,e);  }} @AT@ 3352 @LENGTH@ 56
------INS SimpleType@@Annotation @TO@ VariableDeclarationStatement@@Annotation annotation=findAnnotation(annotated,type); @AT@ 3352 @LENGTH@ 10
------INS VariableDeclarationFragment@@annotation=findAnnotation(annotated,type) @TO@ VariableDeclarationStatement@@Annotation annotation=findAnnotation(annotated,type); @AT@ 3363 @LENGTH@ 44
---------INS SimpleName@@annotation @TO@ VariableDeclarationFragment@@annotation=findAnnotation(annotated,type) @AT@ 3363 @LENGTH@ 10
---------INS MethodInvocation@@findAnnotation(annotated,type) @TO@ VariableDeclarationFragment@@annotation=findAnnotation(annotated,type) @AT@ 3376 @LENGTH@ 31
------------INS SimpleName@@MethodName:findAnnotation:[annotated, type] @TO@ MethodInvocation@@findAnnotation(annotated,type) @AT@ 3376 @LENGTH@ 31
---------------INS SimpleName@@annotated @TO@ SimpleName@@MethodName:findAnnotation:[annotated, type] @AT@ 3391 @LENGTH@ 9
---------------INS SimpleName@@type @TO@ SimpleName@@MethodName:findAnnotation:[annotated, type] @AT@ 3402 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]MatchType,  @TO@ [public]MatchType,  @AT@ 15234 @LENGTH@ 69
---DEL Modifier@@static @AT@ 15241 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration(marshal=true,extension="org.jboss.as.jpa",parserFactoryClassName="org.wildfly.swarm.jpa.jpa.ParserFactory"), public]JPAFraction, JPA<JPAFraction>[Fraction] @TO@ [@Configuration(marshal=true,extension="org.jboss.as.jpa",parserFactoryClassName="org.wildfly.swarm.jpa.ParserFactory"), public]JPAFraction, JPA<JPAFraction>[Fraction] @AT@ 967 @LENGTH@ 1637
---UPD NormalAnnotation@@@Configuration(marshal=true,extension="org.jboss.as.jpa",parserFactoryClassName="org.wildfly.swarm.jpa.jpa.ParserFactory") @TO@ @Configuration(marshal=true,extension="org.jboss.as.jpa",parserFactoryClassName="org.wildfly.swarm.jpa.ParserFactory") @AT@ 967 @LENGTH@ 156


UPD TypeDeclaration@@[public]BasePasswordEncoderTests, TestCase @TO@ [public]BasePasswordEncoderTests,  @AT@ 802 @LENGTH@ 4090
---DEL SimpleType@@TestCase @AT@ 848 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3396 @LENGTH@ 37
---INS MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @AT@ 3396 @LENGTH@ 36
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3396 @LENGTH@ 18
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3415 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 3429 @LENGTH@ 2


UPD MethodDeclaration@@private, voidMethodName:UriType, final SystemQueryOption... compatibleQueryOptions,  @TO@ voidMethodName:UriType, final SystemQueryOption... compatibleQueryOptions,  @AT@ 4200 @LENGTH@ 195
---DEL Modifier@@private @AT@ 4200 @LENGTH@ 7


UPD IfStatement@@if (contentTypeClassName.equals("org.springframework.http.MediaType")) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @TO@ if (contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType")) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @AT@ 11053 @LENGTH@ 445
---INS InfixExpression@@contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType") @TO@ IfStatement@@if (contentTypeClassName.equals("org.springframework.http.MediaType")) {  contentTypeStringValue=contentType.toString();} else if (contentType instanceof String) {  contentTypeStringValue=(String)contentType;} else {  if (logger.isWarnEnabled()) {    logger.warn("skipping header '" + AmqpHeaders.CONTENT_TYPE + "' since it is not of expected type ["+ contentTypeClassName+ "]");  }} @AT@ 11113 @LENGTH@ 138
------MOV MethodInvocation@@contentTypeClassName.equals("org.springframework.http.MediaType") @TO@ InfixExpression@@contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11057 @LENGTH@ 65
------INS Operator@@|| @TO@ InfixExpression@@contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11178 @LENGTH@ 2
------INS MethodInvocation@@contentTypeClassName.equals("org.springframework.util.MimeType") @TO@ InfixExpression@@contentTypeClassName.equals("org.springframework.http.MediaType") || contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11187 @LENGTH@ 64
---------INS SimpleName@@Name:contentTypeClassName @TO@ MethodInvocation@@contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11187 @LENGTH@ 20
---------INS SimpleName@@MethodName:equals:["org.springframework.util.MimeType"] @TO@ MethodInvocation@@contentTypeClassName.equals("org.springframework.util.MimeType") @AT@ 11208 @LENGTH@ 43
------------INS StringLiteral@@"org.springframework.util.MimeType" @TO@ SimpleName@@MethodName:equals:["org.springframework.util.MimeType"] @AT@ 11215 @LENGTH@ 35


UPD MethodDeclaration@@public, voidMethodName:Sender, ProducerTemplate template, int start, int end, int increment,  @TO@ voidMethodName:Sender, ProducerTemplate template, int start, int end, int increment,  @AT@ 4925 @LENGTH@ 260
---DEL Modifier@@public @AT@ 4925 @LENGTH@ 6


UPD Block@@ThenBody:{  configuration.addPostConstructInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT);} @TO@ ThenBody:{  final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(contextID);  elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority));} @AT@ 6571 @LENGTH@ 180
---UPD ExpressionStatement@@MethodInvocation:configuration.addPostConstructInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT) @TO@ MethodInvocation:elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority)) @AT@ 6601 @LENGTH@ 124
------UPD MethodInvocation@@configuration.addPostConstructInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT) @TO@ elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority)) @AT@ 6601 @LENGTH@ 123
---------UPD SimpleName@@Name:configuration @TO@ Name:elytronInterceptorFactories @AT@ 6601 @LENGTH@ 13
---------UPD SimpleName@@MethodName:addPostConstructInterceptor:[new ElytronInterceptorFactory(contextID), InterceptorOrder.View.SECURITY_CONTEXT] @TO@ MethodName:forEach:[(priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority)] @AT@ 6615 @LENGTH@ 109
------------DEL ClassInstanceCreation@@ElytronInterceptorFactory[contextID] @AT@ 6643 @LENGTH@ 40
---------------DEL New@@new @AT@ 6643 @LENGTH@ 3
---------------DEL SimpleType@@ElytronInterceptorFactory @AT@ 6647 @LENGTH@ 25
---------------DEL SimpleName@@contextID @AT@ 6673 @LENGTH@ 9
------------DEL QualifiedName@@InterceptorOrder.View.SECURITY_CONTEXT @AT@ 6685 @LENGTH@ 38
---------------DEL QualifiedName@@InterceptorOrder.View @AT@ 6685 @LENGTH@ 21
------------------DEL SimpleName@@InterceptorOrder @AT@ 6685 @LENGTH@ 16
------------------DEL SimpleName@@View @AT@ 6702 @LENGTH@ 4
---------------DEL SimpleName@@SECURITY_CONTEXT @AT@ 6707 @LENGTH@ 16
------------INS LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @TO@ SimpleName@@MethodName:addPostConstructInterceptor:[new ElytronInterceptorFactory(contextID), InterceptorOrder.View.SECURITY_CONTEXT] @AT@ 6794 @LENGTH@ 119
---------------INS VariableDeclarationFragment@@priority @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @AT@ 6795 @LENGTH@ 8
------------------INS SimpleName@@priority @TO@ VariableDeclarationFragment@@priority @AT@ 6795 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@elytronInterceptorFactory @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @AT@ 6805 @LENGTH@ 25
------------------INS SimpleName@@elytronInterceptorFactory @TO@ VariableDeclarationFragment@@elytronInterceptorFactory @AT@ 6805 @LENGTH@ 25
---------------INS MethodInvocation@@configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @AT@ 6835 @LENGTH@ 78
------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @AT@ 6835 @LENGTH@ 13
------------------INS SimpleName@@MethodName:addPostConstructInterceptor:[elytronInterceptorFactory, priority] @TO@ MethodInvocation@@configuration.addPostConstructInterceptor(elytronInterceptorFactory,priority) @AT@ 6849 @LENGTH@ 64
---------------------INS SimpleName@@elytronInterceptorFactory @TO@ SimpleName@@MethodName:addPostConstructInterceptor:[elytronInterceptorFactory, priority] @AT@ 6877 @LENGTH@ 25
---------------------INS SimpleName@@priority @TO@ SimpleName@@MethodName:addPostConstructInterceptor:[elytronInterceptorFactory, priority] @AT@ 6904 @LENGTH@ 8
---INS VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(contextID); @TO@ Block@@ThenBody:{  configuration.addPostConstructInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT);} @AT@ 6614 @LENGTH@ 115
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(contextID); @AT@ 6614 @LENGTH@ 5
------INS ParameterizedType@@HashMap<Integer,InterceptorFactory> @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(contextID); @AT@ 6620 @LENGTH@ 36
---------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 6620 @LENGTH@ 7
---------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 6628 @LENGTH@ 7
---------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 6637 @LENGTH@ 18
------INS VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(contextID) @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(contextID); @AT@ 6657 @LENGTH@ 71
---------INS SimpleName@@elytronInterceptorFactories @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(contextID) @AT@ 6657 @LENGTH@ 27
---------INS MethodInvocation@@getElytronInterceptorFactories(contextID) @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(contextID) @AT@ 6687 @LENGTH@ 41
------------INS SimpleName@@MethodName:getElytronInterceptorFactories:[contextID] @TO@ MethodInvocation@@getElytronInterceptorFactories(contextID) @AT@ 6687 @LENGTH@ 41
---------------INS SimpleName@@contextID @TO@ SimpleName@@MethodName:getElytronInterceptorFactories:[contextID] @AT@ 6718 @LENGTH@ 9


UPD MethodDeclaration@@PropertiesComponent, MethodName:properties,  @TO@ PropertiesComponent, MethodName:properties, CamelContext camelContext, PropertiesParser parser,  @AT@ 4338 @LENGTH@ 175
---DEL VariableDeclarationStatement@@PropertiesComponent properties=new PropertiesComponent(); @AT@ 4361 @LENGTH@ 59
---DEL ExpressionStatement@@MethodInvocation:properties.setPropertiesParser(propertiesParser()) @AT@ 4429 @LENGTH@ 51
---DEL ReturnStatement@@SimpleName:properties @AT@ 4489 @LENGTH@ 18
---INS SingleVariableDeclaration@@CamelContext camelContext @TO@ MethodDeclaration@@PropertiesComponent, MethodName:properties,  @AT@ 4604 @LENGTH@ 25
------INS SimpleType@@CamelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 4604 @LENGTH@ 12
------INS SimpleName@@camelContext @TO@ SingleVariableDeclaration@@CamelContext camelContext @AT@ 4617 @LENGTH@ 12
---INS SingleVariableDeclaration@@PropertiesParser parser @TO@ MethodDeclaration@@PropertiesComponent, MethodName:properties,  @AT@ 4631 @LENGTH@ 23
------INS SimpleType@@PropertiesParser @TO@ SingleVariableDeclaration@@PropertiesParser parser @AT@ 4631 @LENGTH@ 16
------INS SimpleName@@parser @TO@ SingleVariableDeclaration@@PropertiesParser parser @AT@ 4648 @LENGTH@ 6
---INS IfStatement@@if (camelContext.hasComponent("properties") != null) {  return camelContext.getComponent("properties",PropertiesComponent.class);} else {  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @TO@ MethodDeclaration@@PropertiesComponent, MethodName:properties,  @AT@ 4666 @LENGTH@ 356
------INS InfixExpression@@camelContext.hasComponent("properties") != null @TO@ IfStatement@@if (camelContext.hasComponent("properties") != null) {  return camelContext.getComponent("properties",PropertiesComponent.class);} else {  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4670 @LENGTH@ 47
---------INS MethodInvocation@@camelContext.hasComponent("properties") @TO@ InfixExpression@@camelContext.hasComponent("properties") != null @AT@ 4670 @LENGTH@ 39
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.hasComponent("properties") @AT@ 4670 @LENGTH@ 12
------------INS SimpleName@@MethodName:hasComponent:["properties"] @TO@ MethodInvocation@@camelContext.hasComponent("properties") @AT@ 4683 @LENGTH@ 26
---------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:hasComponent:["properties"] @AT@ 4696 @LENGTH@ 12
---------INS Operator@@!= @TO@ InfixExpression@@camelContext.hasComponent("properties") != null @AT@ 4709 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@camelContext.hasComponent("properties") != null @AT@ 4713 @LENGTH@ 4
------INS Block@@ThenBody:{  return camelContext.getComponent("properties",PropertiesComponent.class);} @TO@ IfStatement@@if (camelContext.hasComponent("properties") != null) {  return camelContext.getComponent("properties",PropertiesComponent.class);} else {  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4719 @LENGTH@ 98
---------INS ReturnStatement@@MethodInvocation:camelContext.getComponent("properties",PropertiesComponent.class) @TO@ Block@@ThenBody:{  return camelContext.getComponent("properties",PropertiesComponent.class);} @AT@ 4733 @LENGTH@ 74
------------INS MethodInvocation@@camelContext.getComponent("properties",PropertiesComponent.class) @TO@ ReturnStatement@@MethodInvocation:camelContext.getComponent("properties",PropertiesComponent.class) @AT@ 4740 @LENGTH@ 66
---------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getComponent("properties",PropertiesComponent.class) @AT@ 4740 @LENGTH@ 12
---------------INS SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @TO@ MethodInvocation@@camelContext.getComponent("properties",PropertiesComponent.class) @AT@ 4753 @LENGTH@ 53
------------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @AT@ 4766 @LENGTH@ 12
------------------INS TypeLiteral@@PropertiesComponent.class @TO@ SimpleName@@MethodName:getComponent:["properties", PropertiesComponent.class] @AT@ 4780 @LENGTH@ 25
------INS Block@@ElseBody:{  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @TO@ IfStatement@@if (camelContext.hasComponent("properties") != null) {  return camelContext.getComponent("properties",PropertiesComponent.class);} else {  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4823 @LENGTH@ 199
---------INS VariableDeclarationStatement@@PropertiesComponent pc=new PropertiesComponent(); @TO@ Block@@ElseBody:{  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4837 @LENGTH@ 51
------------MOV SimpleType@@PropertiesComponent @TO@ VariableDeclarationStatement@@PropertiesComponent pc=new PropertiesComponent(); @AT@ 4361 @LENGTH@ 19
------------MOV VariableDeclarationFragment@@properties=new PropertiesComponent() @TO@ VariableDeclarationStatement@@PropertiesComponent pc=new PropertiesComponent(); @AT@ 4381 @LENGTH@ 38
---------------UPD SimpleName@@properties @TO@ pc @AT@ 4381 @LENGTH@ 10
---------INS ExpressionStatement@@MethodInvocation:pc.setPropertiesParser(parser) @TO@ Block@@ElseBody:{  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4901 @LENGTH@ 31
------------MOV MethodInvocation@@properties.setPropertiesParser(propertiesParser()) @TO@ ExpressionStatement@@MethodInvocation:pc.setPropertiesParser(parser) @AT@ 4429 @LENGTH@ 50
---------------UPD SimpleName@@Name:properties @TO@ Name:pc @AT@ 4429 @LENGTH@ 10
---------------UPD SimpleName@@MethodName:setPropertiesParser:[propertiesParser()] @TO@ MethodName:setPropertiesParser:[parser] @AT@ 4440 @LENGTH@ 39
------------------DEL MethodInvocation@@MethodName:propertiesParser:[] @AT@ 4460 @LENGTH@ 18
------------------INS SimpleName@@parser @TO@ SimpleName@@MethodName:setPropertiesParser:[propertiesParser()] @AT@ 4924 @LENGTH@ 6
---------INS ExpressionStatement@@MethodInvocation:camelContext.addComponent("properties",pc) @TO@ Block@@ElseBody:{  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 4945 @LENGTH@ 44
------------INS MethodInvocation@@camelContext.addComponent("properties",pc) @TO@ ExpressionStatement@@MethodInvocation:camelContext.addComponent("properties",pc) @AT@ 4945 @LENGTH@ 43
---------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.addComponent("properties",pc) @AT@ 4945 @LENGTH@ 12
---------------INS SimpleName@@MethodName:addComponent:["properties", pc] @TO@ MethodInvocation@@camelContext.addComponent("properties",pc) @AT@ 4958 @LENGTH@ 30
------------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:addComponent:["properties", pc] @AT@ 4971 @LENGTH@ 12
------------------INS SimpleName@@pc @TO@ SimpleName@@MethodName:addComponent:["properties", pc] @AT@ 4985 @LENGTH@ 2
---------INS ReturnStatement@@SimpleName:pc @TO@ Block@@ElseBody:{  PropertiesComponent pc=new PropertiesComponent();  pc.setPropertiesParser(parser);  camelContext.addComponent("properties",pc);  return pc;} @AT@ 5002 @LENGTH@ 10
------------MOV SimpleName@@properties @TO@ ReturnStatement@@SimpleName:pc @AT@ 4496 @LENGTH@ 10


UPD IfStatement@@if (msg.isReadable()) {  byte[] bytes=new byte[msg.readableBytes()];  int readerIndex=msg.readerIndex();  msg.getBytes(readerIndex,bytes);  out.add(bytes);} else {  out.add((byte[])null);} @TO@ if (msg.isReadable()) {  byte[] bytes=new byte[msg.readableBytes()];  int readerIndex=msg.readerIndex();  msg.getBytes(readerIndex,bytes);  out.add(bytes);} @AT@ 2106 @LENGTH@ 385
---DEL Block@@ElseBody:{  out.add((byte[])null);} @AT@ 2437 @LENGTH@ 54
------DEL ExpressionStatement@@MethodInvocation:out.add((byte[])null) @AT@ 2455 @LENGTH@ 22
---------DEL MethodInvocation@@out.add((byte[])null) @AT@ 2455 @LENGTH@ 21
------------DEL SimpleName@@Name:out @AT@ 2455 @LENGTH@ 3
------------DEL SimpleName@@MethodName:add:[(byte[])null] @AT@ 2459 @LENGTH@ 17
---------------DEL CastExpression@@(byte[])null @AT@ 2463 @LENGTH@ 12
------------------DEL ArrayType@@byte[] @AT@ 2464 @LENGTH@ 6
---------------------DEL PrimitiveType@@byte @AT@ 2464 @LENGTH@ 4
------------------DEL NullLiteral@@null @AT@ 2471 @LENGTH@ 4


UPD TryStatement@@try {  FSDataInputStream stream=fs.open(lengths);  result=-1;  while (stream.available() > 0) {    result=stream.readLong();  }  stream.close();  return result;} catch (IOException ioe) {  return result;} @TO@ try (FSDataInputStream stream=fs.open(lengths)){  result=-1;  while (stream.available() > 0) {    result=stream.readLong();  }  return result;} catch (IOException ioe) {  return result;} @AT@ 20326 @LENGTH@ 260
---INS VariableDeclarationExpression@@FSDataInputStream stream=fs.open(lengths) @TO@ TryStatement@@try {  FSDataInputStream stream=fs.open(lengths);  result=-1;  while (stream.available() > 0) {    result=stream.readLong();  }  stream.close();  return result;} catch (IOException ioe) {  return result;} @AT@ 20331 @LENGTH@ 43
------INS SimpleType@@FSDataInputStream @TO@ VariableDeclarationExpression@@FSDataInputStream stream=fs.open(lengths) @AT@ 20331 @LENGTH@ 17
------MOV VariableDeclarationFragment@@stream=fs.open(lengths) @TO@ VariableDeclarationExpression@@FSDataInputStream stream=fs.open(lengths) @AT@ 20356 @LENGTH@ 25
---DEL VariableDeclarationStatement@@FSDataInputStream stream=fs.open(lengths); @AT@ 20338 @LENGTH@ 44
------DEL SimpleType@@FSDataInputStream @AT@ 20338 @LENGTH@ 17
---DEL ExpressionStatement@@MethodInvocation:stream.close() @AT@ 20491 @LENGTH@ 15
------DEL MethodInvocation@@stream.close() @AT@ 20491 @LENGTH@ 14
---------DEL SimpleName@@Name:stream @AT@ 20491 @LENGTH@ 6
---------DEL SimpleName@@MethodName:close:[] @AT@ 20498 @LENGTH@ 7


MOV FieldDeclaration@@String, [mllpHost="localhost"] @TO@ TypeDeclaration@@[public]MllpTcpClientProducerAcknowledgementTest, CamelTestSupport @AT@ 1573 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:DefaultMarketQuoteProvider, double defaultMarketPrice,  @TO@ voidMethodName:DefaultMarketQuoteProvider, double defaultMarketPrice,  @AT@ 18856 @LENGTH@ 130
---DEL Modifier@@public @AT@ 18856 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:component.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:testSetServletInitalparameters, Exception,  @AT@ 1855 @LENGTH@ 27
---INS MethodInvocation@@component.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:component.setMinThreads(1) @AT@ 1855 @LENGTH@ 26
------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.setMinThreads(1) @AT@ 1855 @LENGTH@ 9
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@component.setMinThreads(1) @AT@ 1865 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 1879 @LENGTH@ 1


UPD MethodDeclaration@@private, voidMethodName:OperationName, String value,  @TO@ voidMethodName:OperationName, String value,  @AT@ 2260 @LENGTH@ 71
---DEL Modifier@@private @AT@ 2260 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:ArrayPopulatingConsumer, final List<String> received,  @TO@ voidMethodName:ArrayPopulatingConsumer, final List<String> received,  @AT@ 5604 @LENGTH@ 166
---DEL Modifier@@public @AT@ 5604 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testJmsRequestReplyReplyToAndReplyToHeader, Exception,  @AT@ 1963 @LENGTH@ 16
---INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 1963 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 1963 @LENGTH@ 7
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 1971 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @TO@ voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @AT@ 3715 @LENGTH@ 148
---DEL Modifier@@public @AT@ 3715 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(context.getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_USER") @TO@ MethodInvocation:assertThat(context.getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_USER") @AT@ 3092 @LENGTH@ 112
---UPD MethodInvocation@@assertThat(context.getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_USER") @TO@ assertThat(context.getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_USER") @AT@ 3092 @LENGTH@ 111
------UPD MethodInvocation@@MethodName:onProperty:["authority"] @TO@ MethodName:extracting:["authority"] @AT@ 3092 @LENGTH@ 80


UPD TryStatement@@try {  context.getTypeConverter().convertTo(long.class,duration);} catch (TypeConversionException e) {  assertIsInstanceOf(ArithmeticException.class,e.getCause().getCause());} @TO@ try {  context.getTypeConverter().convertTo(long.class,duration);  fail("Should throw exception");} catch (TypeConversionException e) {  assertIsInstanceOf(ArithmeticException.class,e.getCause().getCause());} @AT@ 1565 @LENGTH@ 217
---INS ExpressionStatement@@MethodInvocation:fail("Should throw exception") @TO@ TryStatement@@try {  context.getTypeConverter().convertTo(long.class,duration);} catch (TypeConversionException e) {  assertIsInstanceOf(ArithmeticException.class,e.getCause().getCause());} @AT@ 1604 @LENGTH@ 31
------INS MethodInvocation@@fail("Should throw exception") @TO@ ExpressionStatement@@MethodInvocation:fail("Should throw exception") @AT@ 1604 @LENGTH@ 30
---------INS SimpleName@@MethodName:fail:["Should throw exception"] @TO@ MethodInvocation@@fail("Should throw exception") @AT@ 1604 @LENGTH@ 30
------------INS StringLiteral@@"Should throw exception" @TO@ SimpleName@@MethodName:fail:["Should throw exception"] @AT@ 1609 @LENGTH@ 24


UPD MethodDeclaration@@private, voidMethodName:Order, int direction,  @TO@ voidMethodName:Order, int direction,  @AT@ 1554 @LENGTH@ 80
---DEL Modifier@@private @AT@ 1554 @LENGTH@ 7


UPD TypeDeclaration@@[public]CasAuthenticationTokenTests, TestCase @TO@ [public]CasAuthenticationTokenTests,  @AT@ 1375 @LENGTH@ 5984
---DEL SimpleType@@TestCase @AT@ 1424 @LENGTH@ 8


MOV FieldDeclaration@@private, static, final, String, [AUTHENTICATION_RETRIES_ATTRIBUTE=SalesforceSecurityHandler.class.getName().concat(".retries")] @TO@ TypeDeclaration@@[public]SalesforceSecurityHandler, [ProtocolHandler] @AT@ 1873 @LENGTH@ 124


UPD MethodDeclaration@@public, voidMethodName:DispatcherException, Throwable cause,  @TO@ voidMethodName:DispatcherException, Throwable cause,  @AT@ 22863 @LENGTH@ 89
---DEL Modifier@@public @AT@ 22863 @LENGTH@ 6


UPD VariableDeclarationStatement@@String[] lines=contents.split("\n"); @TO@ String[] lines=contents.split("(\\r)?(\\n)"); @AT@ 1424 @LENGTH@ 38
---UPD VariableDeclarationFragment@@lines=contents.split("\n") @TO@ lines=contents.split("(\\r)?(\\n)") @AT@ 1433 @LENGTH@ 28
------UPD MethodInvocation@@contents.split("\n") @TO@ contents.split("(\\r)?(\\n)") @AT@ 1441 @LENGTH@ 20
---------UPD SimpleName@@MethodName:split:["\n"] @TO@ MethodName:split:["(\\r)?(\\n)"] @AT@ 1450 @LENGTH@ 11
------------UPD StringLiteral@@"\n" @TO@ "(\\r)?(\\n)" @AT@ 1456 @LENGTH@ 4


UPD ForStatement@@for (int i=0; i < 50; i++) {  String uri="mock://unknown" + i;  if (context.hasEndpoint(uri) != null) {    count++;    assertTrue(context.getEndpointRegistry().isDynamic(uri));  }  ;} @TO@ for (int i=0; i < 50; i++) {  String uri="mock://unknown" + i;  if (context.hasEndpoint(uri) != null) {    count++;    assertTrue(context.getEndpointRegistry().isDynamic(uri));  }} @AT@ 2409 @LENGTH@ 298


UPD TypeDeclaration@@[public]UserAttributeEditorTests, TestCase @TO@ [public]UserAttributeEditorTests,  @AT@ 982 @LENGTH@ 3444
---DEL SimpleType@@TestCase @AT@ 1028 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @TO@ voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @AT@ 9785 @LENGTH@ 148
---DEL Modifier@@public @AT@ 9785 @LENGTH@ 6


UPD VariableDeclarationStatement@@ServerConnector connector=new ServerConnector(server,new HttpConnectionFactory(http_config)); @TO@ ServerConnector connector=new ServerConnector(server,new HttpConnectionFactory(httpConfig)); @AT@ 17348 @LENGTH@ 96
---UPD VariableDeclarationFragment@@connector=new ServerConnector(server,new HttpConnectionFactory(http_config)) @TO@ connector=new ServerConnector(server,new HttpConnectionFactory(httpConfig)) @AT@ 17364 @LENGTH@ 79
------UPD ClassInstanceCreation@@ServerConnector[server, new HttpConnectionFactory(http_config)] @TO@ ServerConnector[server, new HttpConnectionFactory(httpConfig)] @AT@ 17376 @LENGTH@ 67
---------UPD ClassInstanceCreation@@HttpConnectionFactory[http_config] @TO@ HttpConnectionFactory[httpConfig] @AT@ 17404 @LENGTH@ 38
------------UPD SimpleName@@http_config @TO@ httpConfig @AT@ 17430 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:ProducerThread, final int totalMessageCount,  @TO@ voidMethodName:ProducerThread, final int totalMessageCount,  @AT@ 17663 @LENGTH@ 163
---DEL Modifier@@public @AT@ 17663 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size()) @TO@ MethodInvocation:assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY)).hasSize(1) @AT@ 1068 @LENGTH@ 101
---UPD MethodInvocation@@assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size()) @TO@ assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY)).hasSize(1) @AT@ 1068 @LENGTH@ 100
------INS MethodInvocation@@MethodName:assertThat:[authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY)] @TO@ MethodInvocation@@assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size()) @AT@ 1022 @LENGTH@ 75
---------INS MethodInvocation@@authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY) @TO@ MethodInvocation@@MethodName:assertThat:[authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY)] @AT@ 1033 @LENGTH@ 63
------------INS SimpleName@@MethodName:getAttributeValues:[SpringSecurityLdapTemplate.DN_KEY] @TO@ MethodInvocation@@authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY) @AT@ 1043 @LENGTH@ 53
---------------INS QualifiedName@@SpringSecurityLdapTemplate.DN_KEY @TO@ SimpleName@@MethodName:getAttributeValues:[SpringSecurityLdapTemplate.DN_KEY] @AT@ 1062 @LENGTH@ 33
------------------MOV SimpleName@@SpringSecurityLdapTemplate @TO@ QualifiedName@@SpringSecurityLdapTemplate.DN_KEY @AT@ 1108 @LENGTH@ 26
------------------MOV SimpleName@@DN_KEY @TO@ QualifiedName@@SpringSecurityLdapTemplate.DN_KEY @AT@ 1135 @LENGTH@ 6
------------MOV SimpleName@@Name:authority @TO@ MethodInvocation@@authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY) @AT@ 1079 @LENGTH@ 9
------DEL SimpleName@@MethodName:assertThat:[authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size()] @AT@ 1068 @LENGTH@ 100
---------DEL MethodInvocation@@authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size() @AT@ 1079 @LENGTH@ 88
------------DEL MethodInvocation@@MethodName:isEqualTo:[1] @AT@ 1079 @LENGTH@ 76
---------------DEL NumberLiteral@@1 @AT@ 1153 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getAttributeValues:[SpringSecurityLdapTemplate.DN_KEY] @AT@ 1079 @LENGTH@ 63
---------------DEL QualifiedName@@SpringSecurityLdapTemplate.DN_KEY @AT@ 1108 @LENGTH@ 33
------------DEL SimpleName@@MethodName:size:[] @AT@ 1161 @LENGTH@ 6
------INS SimpleName@@MethodName:hasSize:[1] @TO@ MethodInvocation@@assertThat(authority.getAttributeValues(SpringSecurityLdapTemplate.DN_KEY).isEqualTo(1).size()) @AT@ 1098 @LENGTH@ 10
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:hasSize:[1] @AT@ 1106 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:SessionCompletion, Session session,  @TO@ voidMethodName:SessionCompletion, Session session,  @AT@ 1305 @LENGTH@ 81
---DEL Modifier@@public @AT@ 1305 @LENGTH@ 6


UPD TypeDeclaration@@[public]SingleMethodServiceImpl, [SingleMethodService<String,String>] @TO@ [public]SingleMethodServiceImpl, SingleMethodAbstractService<String,String> @AT@ 853 @LENGTH@ 186
---UPD ParameterizedType@@SingleMethodService<String,String> @TO@ SingleMethodAbstractService<String,String> @AT@ 901 @LENGTH@ 35
------UPD SimpleType@@SingleMethodService @TO@ SingleMethodAbstractService @AT@ 901 @LENGTH@ 19


UPD VariableDeclarationStatement@@HttpConfiguration http_config=new HttpConfiguration(); @TO@ HttpConfiguration httpConfig=new HttpConfiguration(); @AT@ 17283 @LENGTH@ 56
---UPD VariableDeclarationFragment@@http_config=new HttpConfiguration() @TO@ httpConfig=new HttpConfiguration() @AT@ 17301 @LENGTH@ 37
------UPD SimpleName@@http_config @TO@ httpConfig @AT@ 17301 @LENGTH@ 11


UPD MethodDeclaration@@public, void, MethodName:addFieldListJpa, @CliOption(key={"","fieldName"},mandatory=true,help="The name of the field to add") final JavaSymbolName fieldName, @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType, @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext="update,project",help="The name of the class to receive this field") final JavaType typeName, @CliOption(key="mappedBy",mandatory=false,help="The field name on the referenced type which owns the relationship") final JavaSymbolName mappedBy, @CliOption(key="notNull",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value cannot be null") final boolean notNull, @CliOption(key="nullRequired",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value must be null") final boolean nullRequired, @CliOption(key="sizeMin",mandatory=false,help="The minimum number of elements in the collection") final Integer sizeMin, @CliOption(key="sizeMax",mandatory=false,help="The maximum number of elements in the collection") final Integer sizeMax, @CliOption(key="cardinality",mandatory=false,unspecifiedDefaultValue="ONE_TO_MANY",specifiedDefaultValue="ONE_TO_MANY",help="The relationship cardinality at a JPA level") Cardinality cardinality, @CliOption(key="fetch",mandatory=false,help="The fetch semantics at a JPA level") final Fetch fetch, @CliOption(key="comment",mandatory=false,help="An optional comment for JavaDocs") final String comment, @CliOption(key="transient",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates to mark the field as transient") final boolean transientModifier, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo") final boolean permitReservedWords, @CliOption(key="joinTable",mandatory=true,specifiedDefaultValue=ROO_DEFAULT_JOIN_TABLE_NAME,help="Join table name. Most usually used in @ManyToMany relations. If name " + "not specified it will take default @JoinTable name value.") final String joinTable, @CliOption(key="joinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity owning the relation") final String joinColumns, @CliOption(key="referencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity owning the relation") final String referencedColumns, @CliOption(key="inverseJoinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity that does not own the relation") final String inverseJoinColumns, @CliOption(key="inverseReferencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity that does not own the relation") final String inverseReferencedColumns, @CliOption(key="cascadeType",mandatory=false,unspecifiedDefaultValue="ALL",specifiedDefaultValue="ALL",help="CascadeType. Possible values are ALL, DETACH, MERGE, PERSIST, REFRESH " + "and REMOVE.") final Cascade cascadeType, ShellContext shellContext,  @TO@ public, void, MethodName:addFieldListJpa, @CliOption(key={"","fieldName"},mandatory=true,help="The name of the field to add") final JavaSymbolName fieldName, @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext="update,project",help="The name of the class to receive this field") final JavaType typeName, @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType, @CliOption(key="mappedBy",mandatory=false,help="The field name on the referenced type which owns the relationship") final JavaSymbolName mappedBy, @CliOption(key="notNull",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value cannot be null") final boolean notNull, @CliOption(key="nullRequired",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Whether this value must be null") final boolean nullRequired, @CliOption(key="sizeMin",mandatory=false,help="The minimum number of elements in the collection") final Integer sizeMin, @CliOption(key="sizeMax",mandatory=false,help="The maximum number of elements in the collection") final Integer sizeMax, @CliOption(key="cardinality",mandatory=false,unspecifiedDefaultValue="ONE_TO_MANY",specifiedDefaultValue="ONE_TO_MANY",help="The relationship cardinality at a JPA level") Cardinality cardinality, @CliOption(key="fetch",mandatory=false,help="The fetch semantics at a JPA level") final Fetch fetch, @CliOption(key="comment",mandatory=false,help="An optional comment for JavaDocs") final String comment, @CliOption(key="transient",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates to mark the field as transient") final boolean transientModifier, @CliOption(key="permitReservedWords",mandatory=false,unspecifiedDefaultValue="false",specifiedDefaultValue="true",help="Indicates whether reserved words are ignored by Roo") final boolean permitReservedWords, @CliOption(key="joinTable",mandatory=true,specifiedDefaultValue=ROO_DEFAULT_JOIN_TABLE_NAME,help="Join table name. Most usually used in @ManyToMany relations. If name " + "not specified it will take default @JoinTable name value.") final String joinTable, @CliOption(key="joinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity owning the relation") final String joinColumns, @CliOption(key="referencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity owning the relation") final String referencedColumns, @CliOption(key="inverseJoinColumns",mandatory=true,help="Comma separated list of join table's foreign key columns which " + "references the table of the entity that does not own the relation") final String inverseJoinColumns, @CliOption(key="inverseReferencedColumns",mandatory=true,help="Comma separated list of foreign key referenced columns in the table " + "of the entity that does not own the relation") final String inverseReferencedColumns, @CliOption(key="cascadeType",mandatory=false,unspecifiedDefaultValue="ALL",specifiedDefaultValue="ALL",help="CascadeType. Possible values are ALL, DETACH, MERGE, PERSIST, REFRESH " + "and REMOVE.") final Cascade cascadeType, ShellContext shellContext,  @AT@ 50723 @LENGTH@ 4757
---UPD SingleVariableDeclaration@@@CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType @TO@ @CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext="update,project",help="The name of the class to receive this field") final JavaType typeName @AT@ 50889 @LENGTH@ 137
------UPD SimpleName@@fieldType @TO@ typeName @AT@ 51017 @LENGTH@ 9
---UPD SingleVariableDeclaration@@@CliOption(key="class",mandatory=true,unspecifiedDefaultValue="*",optionContext="update,project",help="The name of the class to receive this field") final JavaType typeName @TO@ @CliOption(key="type",mandatory=true,help="The entity which will be contained within the Set") final JavaType fieldType @AT@ 51034 @LENGTH@ 196
------UPD SimpleName@@typeName @TO@ fieldType @AT@ 51222 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals("3cfa28da425eca5b894f0af2b158adf7001e000f",new String(Hex.encode(result))) @TO@ MethodInvocation:assertThat(new String(Hex.encode(result))).isEqualTo("3cfa28da425eca5b894f0af2b158adf7001e000f") @AT@ 684 @LENGTH@ 93
---INS MethodInvocation@@assertThat(new String(Hex.encode(result))).isEqualTo("3cfa28da425eca5b894f0af2b158adf7001e000f") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("3cfa28da425eca5b894f0af2b158adf7001e000f",new String(Hex.encode(result))) @AT@ 578 @LENGTH@ 96
------INS SimpleName@@MethodName:isEqualTo:["3cfa28da425eca5b894f0af2b158adf7001e000f"] @TO@ MethodInvocation@@assertThat(new String(Hex.encode(result))).isEqualTo("3cfa28da425eca5b894f0af2b158adf7001e000f") @AT@ 621 @LENGTH@ 53
---------INS StringLiteral@@"3cfa28da425eca5b894f0af2b158adf7001e000f" @TO@ SimpleName@@MethodName:isEqualTo:["3cfa28da425eca5b894f0af2b158adf7001e000f"] @AT@ 631 @LENGTH@ 42
------MOV MethodInvocation@@assertEquals("3cfa28da425eca5b894f0af2b158adf7001e000f",new String(Hex.encode(result))) @TO@ MethodInvocation@@assertThat(new String(Hex.encode(result))).isEqualTo("3cfa28da425eca5b894f0af2b158adf7001e000f") @AT@ 684 @LENGTH@ 92
---------MOV ClassInstanceCreation@@String[Hex.encode(result)] @TO@ MethodInvocation@@assertEquals("3cfa28da425eca5b894f0af2b158adf7001e000f",new String(Hex.encode(result))) @AT@ 745 @LENGTH@ 30
---UPD MethodInvocation@@assertEquals("3cfa28da425eca5b894f0af2b158adf7001e000f",new String(Hex.encode(result))) @TO@ MethodName:assertThat:[new String(Hex.encode(result))] @AT@ 684 @LENGTH@ 92


UPD ExpressionStatement@@Assignment:ex=new UnauthorizedUserException(errorMessage) @TO@ Assignment:ex=new UnauthorizedClientException(errorMessage) @AT@ 2796 @LENGTH@ 49
---UPD Assignment@@ex=new UnauthorizedUserException(errorMessage) @TO@ ex=new UnauthorizedClientException(errorMessage) @AT@ 2796 @LENGTH@ 48
------UPD ClassInstanceCreation@@UnauthorizedUserException[errorMessage] @TO@ UnauthorizedClientException[errorMessage] @AT@ 2801 @LENGTH@ 43
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 2805 @LENGTH@ 25


UPD IfStatement@@if (value instanceof String) {  String s=(String)value;  try {    newValuesAsNames.put(LdapUtils.newLdapName(s),s);  } catch (  InvalidNameException e) {    throw new IllegalArgumentException("This instance has values that are not valid distinguished names; " + "cannot handle Name values",e);  }} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @TO@ if (value instanceof String) {  String s=(String)value;  try {    newValuesAsNames.put(LdapUtils.newLdapName(s),s);  } catch (  InvalidNameException e) {    throw new IllegalArgumentException("This instance has values that are not valid distinguished names; " + "cannot handle Name values",e);  }} else if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 4739 @LENGTH@ 613
---INS Block@@ElseBody:if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @TO@ IfStatement@@if (value instanceof String) {  String s=(String)value;  try {    newValuesAsNames.put(LdapUtils.newLdapName(s),s);  } catch (  InvalidNameException e) {    throw new IllegalArgumentException("This instance has values that are not valid distinguished names; " + "cannot handle Name values",e);  }} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 5215 @LENGTH@ 298
------INS IfStatement@@if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @TO@ Block@@ElseBody:if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 5215 @LENGTH@ 298
---------MOV Block@@ElseBody:{  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @TO@ IfStatement@@if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 5180 @LENGTH@ 172
---------INS InstanceofExpression@@value instanceof LdapName @TO@ IfStatement@@if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 5219 @LENGTH@ 25
------------INS SimpleName@@value @TO@ InstanceofExpression@@value instanceof LdapName @AT@ 5219 @LENGTH@ 5
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@value instanceof LdapName @AT@ 5225 @LENGTH@ 10
------------INS SimpleType@@LdapName @TO@ InstanceofExpression@@value instanceof LdapName @AT@ 5236 @LENGTH@ 8
---------INS Block@@ThenBody:{  newValuesAsNames.put((LdapName)value,value.toString());} @TO@ IfStatement@@if (value instanceof LdapName) {  newValuesAsNames.put((LdapName)value,value.toString());} else {  throw new IllegalArgumentException("This instance has non-string attribute values; " + "cannot handle Name values");} @AT@ 5246 @LENGTH@ 89
------------INS ExpressionStatement@@MethodInvocation:newValuesAsNames.put((LdapName)value,value.toString()) @TO@ Block@@ThenBody:{  newValuesAsNames.put((LdapName)value,value.toString());} @AT@ 5264 @LENGTH@ 57
---------------INS MethodInvocation@@newValuesAsNames.put((LdapName)value,value.toString()) @TO@ ExpressionStatement@@MethodInvocation:newValuesAsNames.put((LdapName)value,value.toString()) @AT@ 5264 @LENGTH@ 56
------------------INS SimpleName@@Name:newValuesAsNames @TO@ MethodInvocation@@newValuesAsNames.put((LdapName)value,value.toString()) @AT@ 5264 @LENGTH@ 16
------------------INS SimpleName@@MethodName:put:[(LdapName)value, value.toString()] @TO@ MethodInvocation@@newValuesAsNames.put((LdapName)value,value.toString()) @AT@ 5281 @LENGTH@ 39
---------------------INS CastExpression@@(LdapName)value @TO@ SimpleName@@MethodName:put:[(LdapName)value, value.toString()] @AT@ 5285 @LENGTH@ 16
------------------------INS SimpleType@@LdapName @TO@ CastExpression@@(LdapName)value @AT@ 5286 @LENGTH@ 8
------------------------INS SimpleName@@value @TO@ CastExpression@@(LdapName)value @AT@ 5296 @LENGTH@ 5
---------------------INS MethodInvocation@@value.toString() @TO@ SimpleName@@MethodName:put:[(LdapName)value, value.toString()] @AT@ 5303 @LENGTH@ 16
------------------------INS SimpleName@@Name:value @TO@ MethodInvocation@@value.toString() @AT@ 5303 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@value.toString() @AT@ 5309 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @TO@ MethodInvocation:assertThat(getUser().getPassword()).isEqualTo(cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2272 @LENGTH@ 105
---UPD MethodInvocation@@assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @TO@ assertThat(getUser().getPassword()).isEqualTo(cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2272 @LENGTH@ 104
------INS MethodInvocation@@MethodName:assertThat:[getUser().getPassword()] @TO@ MethodInvocation@@assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2272 @LENGTH@ 35
---------INS MethodInvocation@@getUser().getPassword() @TO@ MethodInvocation@@MethodName:assertThat:[getUser().getPassword()] @AT@ 2283 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getUser:[] @TO@ MethodInvocation@@getUser().getPassword() @AT@ 2283 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPassword:[] @TO@ MethodInvocation@@getUser().getPassword() @AT@ 2293 @LENGTH@ 13
------UPD SimpleName@@MethodName:assertEquals:[getUser().getPassword(), cache.getUserFromCache(getUser().getUsername()).getPassword()] @TO@ MethodName:isEqualTo:[cache.getUserFromCache(getUser().getUsername()).getPassword()] @AT@ 2272 @LENGTH@ 104
---------DEL MethodInvocation@@getUser().getPassword() @AT@ 2285 @LENGTH@ 23
------------DEL MethodInvocation@@MethodName:getUser:[] @AT@ 2285 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getPassword:[] @AT@ 2295 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:ZipInputStreamWrapper, InputStream in,  @TO@ voidMethodName:ZipInputStreamWrapper, InputStream in,  @AT@ 1127 @LENGTH@ 73
---DEL Modifier@@public @AT@ 1127 @LENGTH@ 6


UPD TryStatement@@try {  String stageFile=System.getProperty("swarm.project.stage.file");  loadStageConfiguration(new URL(stageFile));} catch (MalformedURLException e) {  System.err.println("[WARN] Failed to parse project stage URL reference, ignoring: " + e.getMessage());} @TO@ try {  String stageFile=System.getProperty("swarm.project.stage.file");  if (stageFile != null) {    loadStageConfiguration(new URL(stageFile));  }} catch (MalformedURLException e) {  System.err.println("[WARN] Failed to parse project stage URL reference, ignoring: " + e.getMessage());} @AT@ 3954 @LENGTH@ 308
---INS IfStatement@@if (stageFile != null) {  loadStageConfiguration(new URL(stageFile));} @TO@ TryStatement@@try {  String stageFile=System.getProperty("swarm.project.stage.file");  loadStageConfiguration(new URL(stageFile));} catch (MalformedURLException e) {  System.err.println("[WARN] Failed to parse project stage URL reference, ignoring: " + e.getMessage());} @AT@ 4051 @LENGTH@ 96
------INS InfixExpression@@stageFile != null @TO@ IfStatement@@if (stageFile != null) {  loadStageConfiguration(new URL(stageFile));} @AT@ 4054 @LENGTH@ 16
---------INS SimpleName@@stageFile @TO@ InfixExpression@@stageFile != null @AT@ 4054 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@stageFile != null @AT@ 4063 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@stageFile != null @AT@ 4066 @LENGTH@ 4
------INS Block@@ThenBody:{  loadStageConfiguration(new URL(stageFile));} @TO@ IfStatement@@if (stageFile != null) {  loadStageConfiguration(new URL(stageFile));} @AT@ 4072 @LENGTH@ 75
---------MOV ExpressionStatement@@MethodInvocation:loadStageConfiguration(new URL(stageFile)) @TO@ Block@@ThenBody:{  loadStageConfiguration(new URL(stageFile));} @AT@ 4051 @LENGTH@ 43


UPD EnhancedForStatement@@for (ClassOrInterfaceTypeDetails responseTypeClassDetails : responseTypeClassesDetails) {  MemberDetails responseTypDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),responseTypeClassDetails);  if (responseTypDetails != null) {    List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();    for (    MemberHoldingTypeDetails detail : details) {      getMetadataService().get(detail.getDeclaredByMetadataId());    }    break;  }  continue;} @TO@ for (ClassOrInterfaceTypeDetails responseTypeClassDetails : responseTypeClassesDetails) {  MemberDetails responseTypDetails=getMemberDetailsScanner().getMemberDetails(getClass().getName(),responseTypeClassDetails);  if (responseTypDetails != null) {    List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();    for (    MemberHoldingTypeDetails detail : details) {      getMetadataService().evictAndGet(detail.getDeclaredByMetadataId());    }    break;  }} @AT@ 6864 @LENGTH@ 599
---UPD IfStatement@@if (responseTypDetails != null) {  List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();  for (  MemberHoldingTypeDetails detail : details) {    getMetadataService().get(detail.getDeclaredByMetadataId());  }  break;} @TO@ if (responseTypDetails != null) {  List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();  for (  MemberHoldingTypeDetails detail : details) {    getMetadataService().evictAndGet(detail.getDeclaredByMetadataId());  }  break;} @AT@ 7133 @LENGTH@ 300
------UPD Block@@ThenBody:{  List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();  for (  MemberHoldingTypeDetails detail : details) {    getMetadataService().get(detail.getDeclaredByMetadataId());  }  break;} @TO@ ThenBody:{  List<MemberHoldingTypeDetails> details=responseTypDetails.getDetails();  for (  MemberHoldingTypeDetails detail : details) {    getMetadataService().evictAndGet(detail.getDeclaredByMetadataId());  }  break;} @AT@ 7165 @LENGTH@ 268
---------UPD EnhancedForStatement@@for (MemberHoldingTypeDetails detail : details) {  getMetadataService().get(detail.getDeclaredByMetadataId());} @TO@ for (MemberHoldingTypeDetails detail : details) {  getMetadataService().evictAndGet(detail.getDeclaredByMetadataId());} @AT@ 7265 @LENGTH@ 137
------------UPD ExpressionStatement@@MethodInvocation:getMetadataService().get(detail.getDeclaredByMetadataId()) @TO@ MethodInvocation:getMetadataService().evictAndGet(detail.getDeclaredByMetadataId()) @AT@ 7329 @LENGTH@ 59
---------------UPD MethodInvocation@@getMetadataService().get(detail.getDeclaredByMetadataId()) @TO@ getMetadataService().evictAndGet(detail.getDeclaredByMetadataId()) @AT@ 7329 @LENGTH@ 58
------------------UPD SimpleName@@MethodName:get:[detail.getDeclaredByMetadataId()] @TO@ MethodName:evictAndGet:[detail.getDeclaredByMetadataId()] @AT@ 7350 @LENGTH@ 37
---DEL ContinueStatement@@ @AT@ 7444 @LENGTH@ 9


INS IfStatement@@if (async != null) {  endpoint.setAsync(async);} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 4242 @LENGTH@ 68
---INS InfixExpression@@async != null @TO@ IfStatement@@if (async != null) {  endpoint.setAsync(async);} @AT@ 4246 @LENGTH@ 13
------INS SimpleName@@async @TO@ InfixExpression@@async != null @AT@ 4246 @LENGTH@ 5
------INS Operator@@!= @TO@ InfixExpression@@async != null @AT@ 4251 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@async != null @AT@ 4255 @LENGTH@ 4
---INS Block@@ThenBody:{  endpoint.setAsync(async);} @TO@ IfStatement@@if (async != null) {  endpoint.setAsync(async);} @AT@ 4261 @LENGTH@ 49
------INS ExpressionStatement@@MethodInvocation:endpoint.setAsync(async) @TO@ Block@@ThenBody:{  endpoint.setAsync(async);} @AT@ 4275 @LENGTH@ 25
---------MOV MethodInvocation@@async.ifPresent(endpoint::setAsync) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setAsync(async) @AT@ 4300 @LENGTH@ 35


UPD Block@@ThenBody:{  return tokenProvider.refreshAccessToken(resource,refreshToken,request);} @TO@ ThenBody:{  DefaultOAuth2AccessToken refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request));  refreshedAccessToken.setRefreshToken(refreshToken);  return refreshedAccessToken;} @AT@ 6101 @LENGTH@ 84
---UPD ReturnStatement@@MethodInvocation:tokenProvider.refreshAccessToken(resource,refreshToken,request) @TO@ SimpleName:refreshedAccessToken @AT@ 6107 @LENGTH@ 73
------INS SimpleName@@refreshedAccessToken @TO@ ReturnStatement@@MethodInvocation:tokenProvider.refreshAccessToken(resource,refreshToken,request) @AT@ 6422 @LENGTH@ 20
---INS VariableDeclarationStatement@@DefaultOAuth2AccessToken refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)); @TO@ Block@@ThenBody:{  return tokenProvider.refreshAccessToken(resource,refreshToken,request);} @AT@ 6183 @LENGTH@ 151
------INS SimpleType@@DefaultOAuth2AccessToken @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)); @AT@ 6183 @LENGTH@ 24
------INS VariableDeclarationFragment@@refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)) @TO@ VariableDeclarationStatement@@DefaultOAuth2AccessToken refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)); @AT@ 6208 @LENGTH@ 125
---------INS SimpleName@@refreshedAccessToken @TO@ VariableDeclarationFragment@@refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)) @AT@ 6208 @LENGTH@ 20
---------INS ClassInstanceCreation@@DefaultOAuth2AccessToken[tokenProvider.refreshAccessToken(resource,refreshToken,request)] @TO@ VariableDeclarationFragment@@refreshedAccessToken=new DefaultOAuth2AccessToken(tokenProvider.refreshAccessToken(resource,refreshToken,request)) @AT@ 6231 @LENGTH@ 102
------------MOV MethodInvocation@@tokenProvider.refreshAccessToken(resource,refreshToken,request) @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[tokenProvider.refreshAccessToken(resource,refreshToken,request)] @AT@ 6114 @LENGTH@ 65
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[tokenProvider.refreshAccessToken(resource,refreshToken,request)] @AT@ 6231 @LENGTH@ 3
------------INS SimpleType@@DefaultOAuth2AccessToken @TO@ ClassInstanceCreation@@DefaultOAuth2AccessToken[tokenProvider.refreshAccessToken(resource,refreshToken,request)] @AT@ 6235 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:refreshedAccessToken.setRefreshToken(refreshToken) @TO@ Block@@ThenBody:{  return tokenProvider.refreshAccessToken(resource,refreshToken,request);} @AT@ 6359 @LENGTH@ 51
------INS MethodInvocation@@refreshedAccessToken.setRefreshToken(refreshToken) @TO@ ExpressionStatement@@MethodInvocation:refreshedAccessToken.setRefreshToken(refreshToken) @AT@ 6359 @LENGTH@ 50
---------INS SimpleName@@Name:refreshedAccessToken @TO@ MethodInvocation@@refreshedAccessToken.setRefreshToken(refreshToken) @AT@ 6359 @LENGTH@ 20
---------INS SimpleName@@MethodName:setRefreshToken:[refreshToken] @TO@ MethodInvocation@@refreshedAccessToken.setRefreshToken(refreshToken) @AT@ 6380 @LENGTH@ 29
------------INS SimpleName@@refreshToken @TO@ SimpleName@@MethodName:setRefreshToken:[refreshToken] @AT@ 6396 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @TO@ TypeDeclaration@@[public]DirContextAdapterTest,  @AT@ 11155 @LENGTH@ 447
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11155 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11162 @LENGTH@ 4
---INS SimpleName@@MethodName:testNewLdapNameWithString @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11167 @LENGTH@ 25
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11202 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member",LdapUtils.newLdapName("CN=test,DC=root")) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11222 @LENGTH@ 77
------INS MethodInvocation@@tested.addAttributeValue("member",LdapUtils.newLdapName("CN=test,DC=root")) @TO@ ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member",LdapUtils.newLdapName("CN=test,DC=root")) @AT@ 11222 @LENGTH@ 76
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.addAttributeValue("member",LdapUtils.newLdapName("CN=test,DC=root")) @AT@ 11222 @LENGTH@ 6
---------INS SimpleName@@MethodName:addAttributeValue:["member", LdapUtils.newLdapName("CN=test,DC=root")] @TO@ MethodInvocation@@tested.addAttributeValue("member",LdapUtils.newLdapName("CN=test,DC=root")) @AT@ 11229 @LENGTH@ 69
------------INS StringLiteral@@"member" @TO@ SimpleName@@MethodName:addAttributeValue:["member", LdapUtils.newLdapName("CN=test,DC=root")] @AT@ 11247 @LENGTH@ 8
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @TO@ SimpleName@@MethodName:addAttributeValue:["member", LdapUtils.newLdapName("CN=test,DC=root")] @AT@ 11257 @LENGTH@ 40
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @AT@ 11257 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @AT@ 11267 @LENGTH@ 30
------------------INS StringLiteral@@"CN=test,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test,DC=root"] @AT@ 11279 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11302 @LENGTH@ 79
------INS MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @TO@ ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11302 @LENGTH@ 78
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11302 @LENGTH@ 6
---------INS SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @TO@ MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11309 @LENGTH@ 71
------------INS StringLiteral@@"member2" @TO@ SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @AT@ 11327 @LENGTH@ 9
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @TO@ SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @AT@ 11338 @LENGTH@ 41
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11338 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11348 @LENGTH@ 31
------------------INS StringLiteral@@"CN=test2,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @AT@ 11360 @LENGTH@ 18
---INS VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11385 @LENGTH@ 42
------INS SimpleType@@Attributes @TO@ VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @AT@ 11385 @LENGTH@ 10
------INS VariableDeclarationFragment@@attrs=tested.getAttributes() @TO@ VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @AT@ 11396 @LENGTH@ 30
---------INS SimpleName@@attrs @TO@ VariableDeclarationFragment@@attrs=tested.getAttributes() @AT@ 11396 @LENGTH@ 5
---------INS MethodInvocation@@tested.getAttributes() @TO@ VariableDeclarationFragment@@attrs=tested.getAttributes() @AT@ 11404 @LENGTH@ 22
------------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.getAttributes() @AT@ 11404 @LENGTH@ 6
------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@tested.getAttributes() @AT@ 11411 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test,DC=root"),attrs.get("member").get()) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11430 @LENGTH@ 82
------INS MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test,DC=root"),attrs.get("member").get()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test,DC=root"),attrs.get("member").get()) @AT@ 11430 @LENGTH@ 81
---------INS SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test,DC=root"), attrs.get("member").get()] @TO@ MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test,DC=root"),attrs.get("member").get()) @AT@ 11430 @LENGTH@ 81
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test,DC=root"), attrs.get("member").get()] @AT@ 11443 @LENGTH@ 40
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @AT@ 11443 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test,DC=root") @AT@ 11453 @LENGTH@ 30
------------------INS StringLiteral@@"CN=test,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test,DC=root"] @AT@ 11465 @LENGTH@ 17
------------INS MethodInvocation@@attrs.get("member").get() @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test,DC=root"), attrs.get("member").get()] @AT@ 11485 @LENGTH@ 25
---------------INS MethodInvocation@@MethodName:get:["member"] @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11485 @LENGTH@ 19
------------------INS StringLiteral@@"member" @TO@ MethodInvocation@@MethodName:get:["member"] @AT@ 11495 @LENGTH@ 8
---------------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11485 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11505 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithString, NamingException,  @AT@ 11515 @LENGTH@ 84
------INS MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @AT@ 11515 @LENGTH@ 83
---------INS SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @TO@ MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @AT@ 11515 @LENGTH@ 83
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @AT@ 11528 @LENGTH@ 41
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11528 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11538 @LENGTH@ 31
------------------INS StringLiteral@@"CN=test2,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @AT@ 11550 @LENGTH@ 18
------------INS MethodInvocation@@attrs.get("member2").get() @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @AT@ 11571 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:get:["member2"] @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 11571 @LENGTH@ 20
------------------INS StringLiteral@@"member2" @TO@ MethodInvocation@@MethodName:get:["member2"] @AT@ 11581 @LENGTH@ 9
---------------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 11571 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 11592 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:assertEquals("12345678",profile.getId()) @TO@ MethodDeclaration@@public, void, MethodName:fetchProfile,  @AT@ 1830 @LENGTH@ 42
---INS MethodInvocation@@assertEquals("12345678",profile.getId()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("12345678",profile.getId()) @AT@ 1830 @LENGTH@ 41
------INS SimpleName@@MethodName:assertEquals:["12345678", profile.getId()] @TO@ MethodInvocation@@assertEquals("12345678",profile.getId()) @AT@ 1830 @LENGTH@ 41
---------INS StringLiteral@@"12345678" @TO@ SimpleName@@MethodName:assertEquals:["12345678", profile.getId()] @AT@ 1843 @LENGTH@ 10
---------INS MethodInvocation@@profile.getId() @TO@ SimpleName@@MethodName:assertEquals:["12345678", profile.getId()] @AT@ 1855 @LENGTH@ 15
------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getId() @AT@ 1855 @LENGTH@ 7
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@profile.getId() @AT@ 1863 @LENGTH@ 7


INS TryStatement@@try {  redisServer=new RedisServer();} catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @TO@ MethodDeclaration@@public, void, MethodName:setup, Exception,  @AT@ 1383 @LENGTH@ 134
---MOV ExpressionStatement@@Assignment:redisServer=new RedisServer() @TO@ TryStatement@@try {  redisServer=new RedisServer();} catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @AT@ 1358 @LENGTH@ 32
---INS CatchClause@@catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @TO@ TryStatement@@try {  redisServer=new RedisServer();} catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @AT@ 1429 @LENGTH@ 88
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @AT@ 1436 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 1436 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 1446 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:Assume.assumeNoException("Embedded Redis not starting",e) @TO@ CatchClause@@catch (Exception e) {  Assume.assumeNoException("Embedded Redis not starting",e);} @AT@ 1454 @LENGTH@ 59
---------INS MethodInvocation@@Assume.assumeNoException("Embedded Redis not starting",e) @TO@ ExpressionStatement@@MethodInvocation:Assume.assumeNoException("Embedded Redis not starting",e) @AT@ 1454 @LENGTH@ 58
------------INS SimpleName@@Name:Assume @TO@ MethodInvocation@@Assume.assumeNoException("Embedded Redis not starting",e) @AT@ 1454 @LENGTH@ 6
------------INS SimpleName@@MethodName:assumeNoException:["Embedded Redis not starting", e] @TO@ MethodInvocation@@Assume.assumeNoException("Embedded Redis not starting",e) @AT@ 1461 @LENGTH@ 51
---------------INS StringLiteral@@"Embedded Redis not starting" @TO@ SimpleName@@MethodName:assumeNoException:["Embedded Redis not starting", e] @AT@ 1479 @LENGTH@ 29
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:assumeNoException:["Embedded Redis not starting", e] @AT@ 1510 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:Student, int grade,  @TO@ voidMethodName:Student, int grade,  @AT@ 3551 @LENGTH@ 69
---DEL Modifier@@public @AT@ 3551 @LENGTH@ 6


MOV FieldDeclaration@@String, [mllpHost="localhost"] @TO@ TypeDeclaration@@[public]MllpTcpServerConsumerBlueprintTest, CamelBlueprintTestSupport @AT@ 1600 @LENGTH@ 30


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3343 @LENGTH@ 36
---INS MethodInvocation@@websocketComponent.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @AT@ 3343 @LENGTH@ 35
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3343 @LENGTH@ 18
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3362 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 3376 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 6622 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 6622 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 6641 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 6655 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @TO@ TypeDeclaration@@[public]DefaultRedirectResolverTests,  @AT@ 5062 @LENGTH@ 352
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5062 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5069 @LENGTH@ 4
---INS SimpleName@@MethodName:testRedirectMatchingSubdomain @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5074 @LENGTH@ 29
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5113 @LENGTH@ 9
---INS VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5127 @LENGTH@ 89
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @AT@ 5127 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 5127 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 5131 @LENGTH@ 6
------INS VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @AT@ 5139 @LENGTH@ 76
---------INS SimpleName@@redirectUris @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @AT@ 5139 @LENGTH@ 12
---------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @AT@ 5154 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 5154 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 5158 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 5158 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 5166 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 5174 @LENGTH@ 40
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @AT@ 5174 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["http://anywhere.com/foo"] @TO@ MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @AT@ 5181 @LENGTH@ 33
------------------INS StringLiteral@@"http://anywhere.com/foo" @TO@ SimpleName@@MethodName:asList:["http://anywhere.com/foo"] @AT@ 5188 @LENGTH@ 25
---INS VariableDeclarationStatement@@String requestedRedirect="http://2.anywhere.com/foo"; @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5219 @LENGTH@ 55
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String requestedRedirect="http://2.anywhere.com/foo"; @AT@ 5219 @LENGTH@ 6
------INS VariableDeclarationFragment@@requestedRedirect="http://2.anywhere.com/foo" @TO@ VariableDeclarationStatement@@String requestedRedirect="http://2.anywhere.com/foo"; @AT@ 5226 @LENGTH@ 47
---------INS SimpleName@@requestedRedirect @TO@ VariableDeclarationFragment@@requestedRedirect="http://2.anywhere.com/foo" @AT@ 5226 @LENGTH@ 17
---------INS StringLiteral@@"http://2.anywhere.com/foo" @TO@ VariableDeclarationFragment@@requestedRedirect="http://2.anywhere.com/foo" @AT@ 5246 @LENGTH@ 27
---INS ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5277 @LENGTH@ 46
------INS MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @TO@ ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @AT@ 5277 @LENGTH@ 45
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 5277 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 5284 @LENGTH@ 38
------------INS SimpleName@@redirectUris @TO@ SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @AT@ 5309 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectMatchingSubdomain, Exception,  @AT@ 5326 @LENGTH@ 85
------INS MethodInvocation@@assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @AT@ 5326 @LENGTH@ 84
---------INS SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @TO@ MethodInvocation@@assertEquals(requestedRedirect,resolver.resolveRedirect(requestedRedirect,client)) @AT@ 5326 @LENGTH@ 84
------------INS SimpleName@@requestedRedirect @TO@ SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @AT@ 5339 @LENGTH@ 17
------------INS MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @TO@ SimpleName@@MethodName:assertEquals:[requestedRedirect, resolver.resolveRedirect(requestedRedirect,client)] @AT@ 5358 @LENGTH@ 51
---------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 5358 @LENGTH@ 8
---------------INS SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @TO@ MethodInvocation@@resolver.resolveRedirect(requestedRedirect,client) @AT@ 5367 @LENGTH@ 42
------------------INS SimpleName@@requestedRedirect @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 5383 @LENGTH@ 17
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:resolveRedirect:[requestedRedirect, client] @AT@ 5402 @LENGTH@ 6


UPD VariableDeclarationStatement@@String messageJobName=jobParameters.getString(SpringBatchComponent.JOB_NAME); @TO@ String messageJobName=jobParameters.getString(SpringBatchConstants.JOB_NAME); @AT@ 1916 @LENGTH@ 79
---UPD VariableDeclarationFragment@@messageJobName=jobParameters.getString(SpringBatchComponent.JOB_NAME) @TO@ messageJobName=jobParameters.getString(SpringBatchConstants.JOB_NAME) @AT@ 1923 @LENGTH@ 71
------UPD MethodInvocation@@jobParameters.getString(SpringBatchComponent.JOB_NAME) @TO@ jobParameters.getString(SpringBatchConstants.JOB_NAME) @AT@ 1940 @LENGTH@ 54
---------UPD SimpleName@@MethodName:getString:[SpringBatchComponent.JOB_NAME] @TO@ MethodName:getString:[SpringBatchConstants.JOB_NAME] @AT@ 1954 @LENGTH@ 40
------------UPD QualifiedName@@SpringBatchComponent.JOB_NAME @TO@ SpringBatchConstants.JOB_NAME @AT@ 1964 @LENGTH@ 29
---------------UPD SimpleName@@SpringBatchComponent @TO@ SpringBatchConstants @AT@ 1964 @LENGTH@ 20


UPD IfStatement@@if (abortTxns(dbConn,batchToAbort,now - timeout) == batchToAbort.size()) {  dbConn.commit();  numTxnsAborted+=batchToAbort.size();  LOG.info("Aborted the following transactions due to timeout: " + batchToAbort.toString());} else {  dbConn.rollback();} @TO@ if (abortTxns(dbConn,batchToAbort,now - timeout) == batchToAbort.size()) {  dbConn.commit();  numTxnsAborted+=batchToAbort.size();  Collections.sort(batchToAbort);  LOG.info("Aborted the following transactions due to timeout: " + batchToAbort.toString());} else {  dbConn.rollback();} @AT@ 99803 @LENGTH@ 856
---UPD Block@@ThenBody:{  dbConn.commit();  numTxnsAborted+=batchToAbort.size();  LOG.info("Aborted the following transactions due to timeout: " + batchToAbort.toString());} @TO@ ThenBody:{  dbConn.commit();  numTxnsAborted+=batchToAbort.size();  Collections.sort(batchToAbort);  LOG.info("Aborted the following transactions due to timeout: " + batchToAbort.toString());} @AT@ 99877 @LENGTH@ 288
------INS ExpressionStatement@@MethodInvocation:Collections.sort(batchToAbort) @TO@ Block@@ThenBody:{  dbConn.commit();  numTxnsAborted+=batchToAbort.size();  LOG.info("Aborted the following transactions due to timeout: " + batchToAbort.toString());} @AT@ 100124 @LENGTH@ 31
---------INS MethodInvocation@@Collections.sort(batchToAbort) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(batchToAbort) @AT@ 100124 @LENGTH@ 30
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(batchToAbort) @AT@ 100124 @LENGTH@ 11
------------INS SimpleName@@MethodName:sort:[batchToAbort] @TO@ MethodInvocation@@Collections.sort(batchToAbort) @AT@ 100136 @LENGTH@ 18
---------------INS SimpleName@@batchToAbort @TO@ SimpleName@@MethodName:sort:[batchToAbort] @AT@ 100141 @LENGTH@ 12


UPD TypeDeclaration@@[public]SecurityContextHolderAwareRequestWrapperTests, TestCase @TO@ [public]SecurityContextHolderAwareRequestWrapperTests,  @AT@ 1288 @LENGTH@ 4597
---DEL SimpleType@@TestCase @AT@ 1355 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:from(getFtpUrl()).to("mock:result") @TO@ MethodInvocation:from(getFtpUrl()).to("log:result").to("mock:result") @AT@ 3316 @LENGTH@ 36
---UPD MethodInvocation@@from(getFtpUrl()).to("mock:result") @TO@ from(getFtpUrl()).to("log:result").to("mock:result") @AT@ 3316 @LENGTH@ 35
------INS MethodInvocation@@MethodName:to:["log:result"] @TO@ MethodInvocation@@from(getFtpUrl()).to("mock:result") @AT@ 3316 @LENGTH@ 55
---------INS StringLiteral@@"log:result" @TO@ MethodInvocation@@MethodName:to:["log:result"] @AT@ 3358 @LENGTH@ 12


UPD TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @TO@ try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  inr.close();  inr=null;  in.close();  in=null;  if (out != null) {    out.close();    out=null;  }  if (err != null) {    err.close();    err=null;  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 20051 @LENGTH@ 1830
---INS ExpressionStatement@@MethodInvocation:inr.close() @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21359 @LENGTH@ 12
------INS MethodInvocation@@inr.close() @TO@ ExpressionStatement@@MethodInvocation:inr.close() @AT@ 21359 @LENGTH@ 11
---------INS SimpleName@@Name:inr @TO@ MethodInvocation@@inr.close() @AT@ 21359 @LENGTH@ 3
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@inr.close() @AT@ 21363 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:inr=null @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21384 @LENGTH@ 11
------INS Assignment@@inr=null @TO@ ExpressionStatement@@Assignment:inr=null @AT@ 21384 @LENGTH@ 10
---------INS SimpleName@@inr @TO@ Assignment@@inr=null @AT@ 21384 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@inr=null @AT@ 21387 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@inr=null @AT@ 21390 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:in.close() @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21409 @LENGTH@ 11
------INS MethodInvocation@@in.close() @TO@ ExpressionStatement@@MethodInvocation:in.close() @AT@ 21409 @LENGTH@ 10
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.close() @AT@ 21409 @LENGTH@ 2
---------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@in.close() @AT@ 21412 @LENGTH@ 7
---INS ExpressionStatement@@Assignment:in=null @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21433 @LENGTH@ 10
------INS Assignment@@in=null @TO@ ExpressionStatement@@Assignment:in=null @AT@ 21433 @LENGTH@ 9
---------INS SimpleName@@in @TO@ Assignment@@in=null @AT@ 21433 @LENGTH@ 2
---------INS Operator@@= @TO@ Assignment@@in=null @AT@ 21435 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@in=null @AT@ 21438 @LENGTH@ 4
---INS IfStatement@@if (out != null) {  out.close();  out=null;} @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21457 @LENGTH@ 89
------INS InfixExpression@@out != null @TO@ IfStatement@@if (out != null) {  out.close();  out=null;} @AT@ 21461 @LENGTH@ 11
---------INS SimpleName@@out @TO@ InfixExpression@@out != null @AT@ 21461 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@out != null @AT@ 21464 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@out != null @AT@ 21468 @LENGTH@ 4
------INS Block@@ThenBody:{  out.close();  out=null;} @TO@ IfStatement@@if (out != null) {  out.close();  out=null;} @AT@ 21474 @LENGTH@ 72
---------INS ExpressionStatement@@MethodInvocation:out.close() @TO@ Block@@ThenBody:{  out.close();  out=null;} @AT@ 21492 @LENGTH@ 12
------------INS MethodInvocation@@out.close() @TO@ ExpressionStatement@@MethodInvocation:out.close() @AT@ 21492 @LENGTH@ 11
---------------INS SimpleName@@Name:out @TO@ MethodInvocation@@out.close() @AT@ 21492 @LENGTH@ 3
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@out.close() @AT@ 21496 @LENGTH@ 7
---------INS ExpressionStatement@@Assignment:out=null @TO@ Block@@ThenBody:{  out.close();  out=null;} @AT@ 21521 @LENGTH@ 11
------------INS Assignment@@out=null @TO@ ExpressionStatement@@Assignment:out=null @AT@ 21521 @LENGTH@ 10
---------------INS SimpleName@@out @TO@ Assignment@@out=null @AT@ 21521 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@out=null @AT@ 21524 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ Assignment@@out=null @AT@ 21527 @LENGTH@ 4
---INS IfStatement@@if (err != null) {  err.close();  err=null;} @TO@ TryStatement@@try {  final Thread monitor=ThreadMonitor.start(timeout);  proc=openProcess(cmdAttribs);  in=proc.getInputStream();  out=proc.getOutputStream();  err=proc.getErrorStream();  inr=new BufferedReader(new InputStreamReader(in,Charset.defaultCharset()));  String line=inr.readLine();  while (line != null && lines.size() < max) {    line=line.toLowerCase(Locale.ENGLISH).trim();    lines.add(line);    line=inr.readLine();  }  proc.waitFor();  ThreadMonitor.stop(monitor);  if (proc.exitValue() != 0) {    throw new IOException("Command line returned OS error code '" + proc.exitValue() + "' for command "+ Arrays.asList(cmdAttribs));  }  if (lines.isEmpty()) {    throw new IOException("Command line did not return any info " + "for command " + Arrays.asList(cmdAttribs));  }  return lines;} catch (final InterruptedException ex) {  throw new IOException("Command line threw an InterruptedException " + "for command " + Arrays.asList(cmdAttribs) + " timeout="+ timeout,ex);} finally {  IOUtils.closeQuietly(in);  IOUtils.closeQuietly(out);  IOUtils.closeQuietly(err);  IOUtils.closeQuietly(inr);  if (proc != null) {    proc.destroy();  }} @AT@ 21560 @LENGTH@ 89
------INS InfixExpression@@err != null @TO@ IfStatement@@if (err != null) {  err.close();  err=null;} @AT@ 21564 @LENGTH@ 11
---------INS SimpleName@@err @TO@ InfixExpression@@err != null @AT@ 21564 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@err != null @AT@ 21567 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@err != null @AT@ 21571 @LENGTH@ 4
------INS Block@@ThenBody:{  err.close();  err=null;} @TO@ IfStatement@@if (err != null) {  err.close();  err=null;} @AT@ 21577 @LENGTH@ 72
---------INS ExpressionStatement@@MethodInvocation:err.close() @TO@ Block@@ThenBody:{  err.close();  err=null;} @AT@ 21595 @LENGTH@ 12
------------INS MethodInvocation@@err.close() @TO@ ExpressionStatement@@MethodInvocation:err.close() @AT@ 21595 @LENGTH@ 11
---------------INS SimpleName@@Name:err @TO@ MethodInvocation@@err.close() @AT@ 21595 @LENGTH@ 3
---------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@err.close() @AT@ 21599 @LENGTH@ 7
---------INS ExpressionStatement@@Assignment:err=null @TO@ Block@@ThenBody:{  err.close();  err=null;} @AT@ 21624 @LENGTH@ 11
------------INS Assignment@@err=null @TO@ ExpressionStatement@@Assignment:err=null @AT@ 21624 @LENGTH@ 10
---------------INS SimpleName@@err @TO@ Assignment@@err=null @AT@ 21624 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@err=null @AT@ 21627 @LENGTH@ 1
---------------INS NullLiteral@@null @TO@ Assignment@@err=null @AT@ 21630 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:DeleteTarFileOnCompletion, File fileToDelete,  @TO@ voidMethodName:DeleteTarFileOnCompletion, File fileToDelete,  @AT@ 10814 @LENGTH@ 109
---DEL Modifier@@public @AT@ 10814 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:activators.add(new ConsulTopologyConnectorActivator(fraction.url())) @TO@ MethodInvocation:activators.add(new AgentActivator(fraction.url())) @AT@ 1400 @LENGTH@ 69
---UPD MethodInvocation@@activators.add(new ConsulTopologyConnectorActivator(fraction.url())) @TO@ activators.add(new AgentActivator(fraction.url())) @AT@ 1400 @LENGTH@ 68
------UPD SimpleName@@MethodName:add:[new ConsulTopologyConnectorActivator(fraction.url())] @TO@ MethodName:add:[new AgentActivator(fraction.url())] @AT@ 1411 @LENGTH@ 57
---------UPD ClassInstanceCreation@@ConsulTopologyConnectorActivator[fraction.url()] @TO@ AgentActivator[fraction.url()] @AT@ 1415 @LENGTH@ 52
------------UPD SimpleType@@ConsulTopologyConnectorActivator @TO@ AgentActivator @AT@ 1419 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication()) @TO@ MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo(authentication) @AT@ 6022 @LENGTH@ 98
---UPD MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication()) @TO@ assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo(authentication) @AT@ 6022 @LENGTH@ 97
------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication()) @AT@ 5936 @LENGTH@ 66
---------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 5947 @LENGTH@ 54
------------MOV MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6033 @LENGTH@ 34
------------MOV SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6033 @LENGTH@ 21
------------MOV SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 6099 @LENGTH@ 19
------INS SimpleName@@MethodName:isEqualTo:[authentication] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication()) @AT@ 6003 @LENGTH@ 30
---------INS SimpleName@@authentication @TO@ SimpleName@@MethodName:isEqualTo:[authentication] @AT@ 6018 @LENGTH@ 14
------DEL SimpleName@@MethodName:assertThat:[SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication()] @AT@ 6022 @LENGTH@ 97
---------DEL MethodInvocation@@SecurityContextHolder.getContext().isEqualTo(authentication).getAuthentication() @AT@ 6033 @LENGTH@ 85
------------DEL MethodInvocation@@MethodName:isEqualTo:[authentication] @AT@ 6033 @LENGTH@ 60
---------------DEL SimpleName@@authentication @AT@ 6078 @LENGTH@ 14


MOV FieldDeclaration@@private, UrlRewrite, [urlRewrite] @TO@ TypeDeclaration@@[public, abstract]HttpCommonEndpoint, DefaultEndpoint[HeaderFilterStrategyAware] @AT@ 7656 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:ProcessCall, Exchange exchange, AsyncCallback callback,  @TO@ voidMethodName:ProcessCall, Exchange exchange, AsyncCallback callback,  @AT@ 2160 @LENGTH@ 149
---DEL Modifier@@public @AT@ 2160 @LENGTH@ 6


UPD Block@@ThenBody:{  viewConfiguration.addViewInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT);} @TO@ ThenBody:{  final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID);  elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority));} @AT@ 9200 @LENGTH@ 143
---UPD ExpressionStatement@@MethodInvocation:viewConfiguration.addViewInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT) @TO@ MethodInvocation:elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority)) @AT@ 9214 @LENGTH@ 119
------UPD MethodInvocation@@viewConfiguration.addViewInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT) @TO@ elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority)) @AT@ 9214 @LENGTH@ 118
---------UPD SimpleName@@Name:viewConfiguration @TO@ Name:elytronInterceptorFactories @AT@ 9214 @LENGTH@ 17
---------UPD SimpleName@@MethodName:addViewInterceptor:[new ElytronInterceptorFactory(contextID), InterceptorOrder.View.SECURITY_CONTEXT] @TO@ MethodName:forEach:[(priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority)] @AT@ 9232 @LENGTH@ 100
------------DEL ClassInstanceCreation@@ElytronInterceptorFactory[contextID] @AT@ 9251 @LENGTH@ 40
---------------DEL New@@new @AT@ 9251 @LENGTH@ 3
---------------DEL SimpleType@@ElytronInterceptorFactory @AT@ 9255 @LENGTH@ 25
---------------DEL SimpleName@@contextID @AT@ 9281 @LENGTH@ 9
------------DEL QualifiedName@@InterceptorOrder.View.SECURITY_CONTEXT @AT@ 9293 @LENGTH@ 38
---------------DEL QualifiedName@@InterceptorOrder.View @AT@ 9293 @LENGTH@ 21
------------------DEL SimpleName@@InterceptorOrder @AT@ 9293 @LENGTH@ 16
------------------DEL SimpleName@@View @AT@ 9310 @LENGTH@ 4
---------------DEL SimpleName@@SECURITY_CONTEXT @AT@ 9315 @LENGTH@ 16
------------INS LambdaExpression@@(priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @TO@ SimpleName@@MethodName:addViewInterceptor:[new ElytronInterceptorFactory(contextID), InterceptorOrder.View.SECURITY_CONTEXT] @AT@ 9476 @LENGTH@ 114
---------------INS VariableDeclarationFragment@@priority @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @AT@ 9477 @LENGTH@ 8
------------------INS SimpleName@@priority @TO@ VariableDeclarationFragment@@priority @AT@ 9477 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@elytronInterceptorFactory @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @AT@ 9487 @LENGTH@ 25
------------------INS SimpleName@@elytronInterceptorFactory @TO@ VariableDeclarationFragment@@elytronInterceptorFactory @AT@ 9487 @LENGTH@ 25
---------------INS MethodInvocation@@viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @AT@ 9517 @LENGTH@ 73
------------------INS SimpleName@@Name:viewConfiguration @TO@ MethodInvocation@@viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @AT@ 9517 @LENGTH@ 17
------------------INS SimpleName@@MethodName:addViewInterceptor:[elytronInterceptorFactory, priority] @TO@ MethodInvocation@@viewConfiguration.addViewInterceptor(elytronInterceptorFactory,priority) @AT@ 9535 @LENGTH@ 55
---------------------INS SimpleName@@elytronInterceptorFactory @TO@ SimpleName@@MethodName:addViewInterceptor:[elytronInterceptorFactory, priority] @AT@ 9554 @LENGTH@ 25
---------------------INS SimpleName@@priority @TO@ SimpleName@@MethodName:addViewInterceptor:[elytronInterceptorFactory, priority] @AT@ 9581 @LENGTH@ 8
---INS VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID); @TO@ Block@@ThenBody:{  viewConfiguration.addViewInterceptor(new ElytronInterceptorFactory(contextID),InterceptorOrder.View.SECURITY_CONTEXT);} @AT@ 9288 @LENGTH@ 139
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID); @AT@ 9288 @LENGTH@ 5
------INS ParameterizedType@@HashMap<Integer,InterceptorFactory> @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID); @AT@ 9294 @LENGTH@ 36
---------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 9294 @LENGTH@ 7
---------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 9302 @LENGTH@ 7
---------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 9311 @LENGTH@ 18
------INS VariableDeclarationFragment@@elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID) @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID); @AT@ 9331 @LENGTH@ 95
---------INS SimpleName@@elytronInterceptorFactories @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID) @AT@ 9331 @LENGTH@ 27
---------INS MethodInvocation@@ejbComponentDescription.getElytronInterceptorFactories(contextID) @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=ejbComponentDescription.getElytronInterceptorFactories(contextID) @AT@ 9361 @LENGTH@ 65
------------INS SimpleName@@Name:ejbComponentDescription @TO@ MethodInvocation@@ejbComponentDescription.getElytronInterceptorFactories(contextID) @AT@ 9361 @LENGTH@ 23
------------INS SimpleName@@MethodName:getElytronInterceptorFactories:[contextID] @TO@ MethodInvocation@@ejbComponentDescription.getElytronInterceptorFactories(contextID) @AT@ 9385 @LENGTH@ 41
---------------INS SimpleName@@contextID @TO@ SimpleName@@MethodName:getElytronInterceptorFactories:[contextID] @AT@ 9416 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:streamWriter.writeStartElement(name.getPrefix(),name.getLocalPart(),name.getNamespaceURI()) @TO@ MethodInvocation:streamWriter.writeStartElement("prefix",name.getLocalPart(),name.getNamespaceURI()) @AT@ 4027 @LENGTH@ 94
---UPD MethodInvocation@@streamWriter.writeStartElement(name.getPrefix(),name.getLocalPart(),name.getNamespaceURI()) @TO@ streamWriter.writeStartElement("prefix",name.getLocalPart(),name.getNamespaceURI()) @AT@ 4027 @LENGTH@ 93
------UPD SimpleName@@MethodName:writeStartElement:[name.getPrefix(), name.getLocalPart(), name.getNamespaceURI()] @TO@ MethodName:writeStartElement:["prefix", name.getLocalPart(), name.getNamespaceURI()] @AT@ 4040 @LENGTH@ 80
---------DEL MethodInvocation@@name.getPrefix() @AT@ 4058 @LENGTH@ 16
------------DEL SimpleName@@Name:name @AT@ 4058 @LENGTH@ 4
------------DEL SimpleName@@MethodName:getPrefix:[] @AT@ 4063 @LENGTH@ 11
---------INS StringLiteral@@"prefix" @TO@ SimpleName@@MethodName:writeStartElement:[name.getPrefix(), name.getLocalPart(), name.getNamespaceURI()] @AT@ 4125 @LENGTH@ 8


UPD MethodDeclaration@@private, voidMethodName:DisruptorWaitStrategy, final Class<? extends WaitStrategy> waitStrategyClass,  @TO@ voidMethodName:DisruptorWaitStrategy, final Class<? extends WaitStrategy> waitStrategyClass,  @AT@ 3588 @LENGTH@ 145
---DEL Modifier@@private @AT@ 3588 @LENGTH@ 7


UPD Block@@ThenBody:{  int seconds=(int)(expiration.getTime() / 1000);  conn.expireAt(refreshKey,seconds);  conn.expireAt(refreshAuthKey,seconds);} @TO@ ThenBody:{  int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue();  conn.expire(refreshKey,seconds);  conn.expire(refreshAuthKey,seconds);} @AT@ 9980 @LENGTH@ 149
---UPD VariableDeclarationStatement@@int seconds=(int)(expiration.getTime() / 1000); @TO@ int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue(); @AT@ 9987 @LENGTH@ 50
------UPD VariableDeclarationFragment@@seconds=(int)(expiration.getTime() / 1000) @TO@ seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 9991 @LENGTH@ 45
---------DEL CastExpression@@(int)(expiration.getTime() / 1000) @AT@ 10001 @LENGTH@ 35
------------DEL PrimitiveType@@int @AT@ 10002 @LENGTH@ 3
------------DEL ParenthesizedExpression@@(expiration.getTime() / 1000) @AT@ 10007 @LENGTH@ 29
---------------DEL InfixExpression@@expiration.getTime() / 1000 @AT@ 10008 @LENGTH@ 27
---------INS MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @TO@ VariableDeclarationFragment@@seconds=(int)(expiration.getTime() / 1000) @AT@ 10054 @LENGTH@ 92
------------INS MethodInvocation@@MethodName:valueOf:[(expiration.getTime() - System.currentTimeMillis()) / 1000L] @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 10054 @LENGTH@ 73
---------------INS InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @TO@ MethodInvocation@@MethodName:valueOf:[(expiration.getTime() - System.currentTimeMillis()) / 1000L] @AT@ 10067 @LENGTH@ 59
------------------MOV Operator@@/ @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 10028 @LENGTH@ 1
------------------MOV NumberLiteral@@1000 @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 10031 @LENGTH@ 4
------------------INS ParenthesizedExpression@@(expiration.getTime() - System.currentTimeMillis()) @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 10067 @LENGTH@ 51
---------------------INS InfixExpression@@expiration.getTime() - System.currentTimeMillis() @TO@ ParenthesizedExpression@@(expiration.getTime() - System.currentTimeMillis()) @AT@ 10068 @LENGTH@ 49
------------------------MOV MethodInvocation@@expiration.getTime() @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 10008 @LENGTH@ 20
------------------------INS Operator@@- @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 10088 @LENGTH@ 1
------------------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 10091 @LENGTH@ 26
---------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 10091 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 10098 @LENGTH@ 19
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 10054 @LENGTH@ 4
------------INS SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 10136 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:conn.expireAt(refreshKey,seconds) @TO@ MethodInvocation:conn.expire(refreshKey,seconds) @AT@ 10043 @LENGTH@ 35
------UPD MethodInvocation@@conn.expireAt(refreshKey,seconds) @TO@ conn.expire(refreshKey,seconds) @AT@ 10043 @LENGTH@ 34
---------UPD SimpleName@@MethodName:expireAt:[refreshKey, seconds] @TO@ MethodName:expire:[refreshKey, seconds] @AT@ 10048 @LENGTH@ 29
---UPD ExpressionStatement@@MethodInvocation:conn.expireAt(refreshAuthKey,seconds) @TO@ MethodInvocation:conn.expire(refreshAuthKey,seconds) @AT@ 10084 @LENGTH@ 39
------UPD MethodInvocation@@conn.expireAt(refreshAuthKey,seconds) @TO@ conn.expire(refreshAuthKey,seconds) @AT@ 10084 @LENGTH@ 38
---------UPD SimpleName@@MethodName:expireAt:[refreshAuthKey, seconds] @TO@ MethodName:expire:[refreshAuthKey, seconds] @AT@ 10089 @LENGTH@ 33


UPD Block@@ThenBody:{  final MasterDomainControllerClient masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();  masterDomainControllerClient.fetchAndSyncMissingConfiguration(context,original);} @TO@ ThenBody:{  MasterDomainControllerClient masterDomainControllerClient=null;  try {    masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();  } catch (  ServiceNotFoundException e) {    if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {      return;    }    throw e;  }  masterDomainControllerClient.fetchAndSyncMissingConfiguration(context,original);} @AT@ 6233 @LENGTH@ 443
---UPD VariableDeclarationStatement@@final MasterDomainControllerClient masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue(); @TO@ MasterDomainControllerClient masterDomainControllerClient=null; @AT@ 6247 @LENGTH@ 204
------DEL Modifier@@final @AT@ 6247 @LENGTH@ 5
------UPD VariableDeclarationFragment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @TO@ masterDomainControllerClient=null @AT@ 6282 @LENGTH@ 168
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @AT@ 6407 @LENGTH@ 4
---INS TryStatement@@try {  masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();} catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @TO@ Block@@ThenBody:{  final MasterDomainControllerClient masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();  masterDomainControllerClient.fetchAndSyncMissingConfiguration(context,original);} @AT@ 6425 @LENGTH@ 488
------INS ExpressionStatement@@Assignment:masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @TO@ TryStatement@@try {  masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();} catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @AT@ 6447 @LENGTH@ 169
---------INS Assignment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @TO@ ExpressionStatement@@Assignment:masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @AT@ 6447 @LENGTH@ 168
------------MOV CastExpression@@(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @TO@ Assignment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @AT@ 6313 @LENGTH@ 137
------------INS SimpleName@@masterDomainControllerClient @TO@ Assignment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @AT@ 6447 @LENGTH@ 28
------------INS Operator@@= @TO@ Assignment@@masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue() @AT@ 6475 @LENGTH@ 1
------INS CatchClause@@catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @TO@ TryStatement@@try {  masterDomainControllerClient=(MasterDomainControllerClient)context.getServiceRegistry(false).getRequiredService(MasterDomainControllerClient.SERVICE_NAME).getValue();} catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @AT@ 6631 @LENGTH@ 282
---------INS SingleVariableDeclaration@@ServiceNotFoundException e @TO@ CatchClause@@catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @AT@ 6638 @LENGTH@ 26
------------INS SimpleType@@ServiceNotFoundException @TO@ SingleVariableDeclaration@@ServiceNotFoundException e @AT@ 6638 @LENGTH@ 24
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@ServiceNotFoundException e @AT@ 6663 @LENGTH@ 1
---------INS IfStatement@@if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {  return;} @TO@ CatchClause@@catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @AT@ 6771 @LENGTH@ 103
------------INS InfixExpression@@context.getRunningMode() == RunningMode.ADMIN_ONLY @TO@ IfStatement@@if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {  return;} @AT@ 6775 @LENGTH@ 50
---------------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.ADMIN_ONLY @AT@ 6775 @LENGTH@ 24
------------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 6775 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 6783 @LENGTH@ 16
---------------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.ADMIN_ONLY @AT@ 6799 @LENGTH@ 2
---------------INS QualifiedName@@RunningMode.ADMIN_ONLY @TO@ InfixExpression@@context.getRunningMode() == RunningMode.ADMIN_ONLY @AT@ 6803 @LENGTH@ 22
------------------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.ADMIN_ONLY @AT@ 6803 @LENGTH@ 11
------------------INS SimpleName@@ADMIN_ONLY @TO@ QualifiedName@@RunningMode.ADMIN_ONLY @AT@ 6815 @LENGTH@ 10
------------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {  return;} @AT@ 6827 @LENGTH@ 47
---------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 6849 @LENGTH@ 7
---------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (ServiceNotFoundException e) {  if (context.getRunningMode() == RunningMode.ADMIN_ONLY) {    return;  }  throw e;} @AT@ 6891 @LENGTH@ 8
------------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 6897 @LENGTH@ 1


UPD VariableDeclarationStatement@@String errorMessage=errorParams.containsKey("error_description") ? errorParams.get("error_description").toString() : null; @TO@ String errorMessage=errorParams.get("error_description") != null ? errorParams.get("error_description").toString() : null; @AT@ 2383 @LENGTH@ 129
---UPD VariableDeclarationFragment@@errorMessage=errorParams.containsKey("error_description") ? errorParams.get("error_description").toString() : null @TO@ errorMessage=errorParams.get("error_description") != null ? errorParams.get("error_description").toString() : null @AT@ 2390 @LENGTH@ 121
------UPD ConditionalExpression@@errorParams.containsKey("error_description") ? errorParams.get("error_description").toString() : null @TO@ errorParams.get("error_description") != null ? errorParams.get("error_description").toString() : null @AT@ 2405 @LENGTH@ 106
---------DEL MethodInvocation@@errorParams.containsKey("error_description") @AT@ 2405 @LENGTH@ 44
---------INS InfixExpression@@errorParams.get("error_description") != null @TO@ ConditionalExpression@@errorParams.containsKey("error_description") ? errorParams.get("error_description").toString() : null @AT@ 2405 @LENGTH@ 44
------------INS MethodInvocation@@errorParams.get("error_description") @TO@ InfixExpression@@errorParams.get("error_description") != null @AT@ 2405 @LENGTH@ 36
---------------MOV SimpleName@@Name:errorParams @TO@ MethodInvocation@@errorParams.get("error_description") @AT@ 2405 @LENGTH@ 11
---------------MOV SimpleName@@MethodName:containsKey:["error_description"] @TO@ MethodInvocation@@errorParams.get("error_description") @AT@ 2417 @LENGTH@ 32
------------INS Operator@@!= @TO@ InfixExpression@@errorParams.get("error_description") != null @AT@ 2441 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@errorParams.get("error_description") != null @AT@ 2445 @LENGTH@ 4
---------INS NullLiteral@@null @TO@ ConditionalExpression@@errorParams.containsKey("error_description") ? errorParams.get("error_description").toString() : null @AT@ 2502 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 2507 @LENGTH@ 4


UPD TypeDeclaration@@PolicyContextIdInterceptor, [Interceptor] @TO@ [public]PolicyContextIdInterceptor, [Interceptor] @AT@ 1394 @LENGTH@ 900
---INS Modifier@@public @TO@ TypeDeclaration@@PolicyContextIdInterceptor, [Interceptor] @AT@ 1388 @LENGTH@ 6


UPD ReturnStatement@@NullLiteral:null @TO@ MethodInvocation:connection.sInterStore(rawDestKey,rawKeys) @AT@ 3465 @LENGTH@ 12
---MOV MethodInvocation@@connection.sInterStore(rawDestKey,rawKeys) @TO@ ReturnStatement@@NullLiteral:null @AT@ 3416 @LENGTH@ 43
---DEL NullLiteral@@null @AT@ 3472 @LENGTH@ 4


UPD TryStatement@@try {  URL req=new URL(requestedRedirect);  URL reg=new URL(redirectUri);  if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost())) {    return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));  }} catch (MalformedURLException e) {} @TO@ try {  URL req=new URL(requestedRedirect);  URL reg=new URL(redirectUri);  int requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort();  int registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort();  if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost()) && (registeredPort == requestedPort)) {    return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));  }} catch (MalformedURLException e) {} @AT@ 4117 @LENGTH@ 328
---UPD IfStatement@@if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost())) {  return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));} @TO@ if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost()) && (registeredPort == requestedPort)) {  return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));} @AT@ 4203 @LENGTH@ 198
------UPD InfixExpression@@reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost()) @TO@ reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost()) && (registeredPort == requestedPort) @AT@ 4207 @LENGTH@ 88
---------INS ParenthesizedExpression@@(registeredPort == requestedPort) @TO@ InfixExpression@@reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost()) @AT@ 4478 @LENGTH@ 33
------------INS InfixExpression@@registeredPort == requestedPort @TO@ ParenthesizedExpression@@(registeredPort == requestedPort) @AT@ 4479 @LENGTH@ 31
---------------INS SimpleName@@registeredPort @TO@ InfixExpression@@registeredPort == requestedPort @AT@ 4479 @LENGTH@ 14
---------------INS Operator@@== @TO@ InfixExpression@@registeredPort == requestedPort @AT@ 4493 @LENGTH@ 2
---------------INS SimpleName@@requestedPort @TO@ InfixExpression@@registeredPort == requestedPort @AT@ 4497 @LENGTH@ 13
---INS VariableDeclarationStatement@@int requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort(); @TO@ TryStatement@@try {  URL req=new URL(requestedRedirect);  URL reg=new URL(redirectUri);  if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost())) {    return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));  }} catch (MalformedURLException e) {} @AT@ 4204 @LENGTH@ 79
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort(); @AT@ 4204 @LENGTH@ 3
------INS VariableDeclarationFragment@@requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @TO@ VariableDeclarationStatement@@int requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort(); @AT@ 4208 @LENGTH@ 74
---------INS SimpleName@@requestedPort @TO@ VariableDeclarationFragment@@requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @AT@ 4208 @LENGTH@ 13
---------INS ConditionalExpression@@req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @TO@ VariableDeclarationFragment@@requestedPort=req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @AT@ 4224 @LENGTH@ 58
------------INS InfixExpression@@req.getPort() != -1 @TO@ ConditionalExpression@@req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @AT@ 4224 @LENGTH@ 19
---------------INS MethodInvocation@@req.getPort() @TO@ InfixExpression@@req.getPort() != -1 @AT@ 4224 @LENGTH@ 13
------------------INS SimpleName@@Name:req @TO@ MethodInvocation@@req.getPort() @AT@ 4224 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@req.getPort() @AT@ 4228 @LENGTH@ 9
---------------INS Operator@@!= @TO@ InfixExpression@@req.getPort() != -1 @AT@ 4237 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@req.getPort() != -1 @AT@ 4241 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4241 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4242 @LENGTH@ 1
------------INS MethodInvocation@@req.getPort() @TO@ ConditionalExpression@@req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @AT@ 4246 @LENGTH@ 13
---------------INS SimpleName@@Name:req @TO@ MethodInvocation@@req.getPort() @AT@ 4246 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@req.getPort() @AT@ 4250 @LENGTH@ 9
------------INS MethodInvocation@@req.getDefaultPort() @TO@ ConditionalExpression@@req.getPort() != -1 ? req.getPort() : req.getDefaultPort() @AT@ 4262 @LENGTH@ 20
---------------INS SimpleName@@Name:req @TO@ MethodInvocation@@req.getDefaultPort() @AT@ 4262 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getDefaultPort:[] @TO@ MethodInvocation@@req.getDefaultPort() @AT@ 4266 @LENGTH@ 16
---INS VariableDeclarationStatement@@int registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort(); @TO@ TryStatement@@try {  URL req=new URL(requestedRedirect);  URL reg=new URL(redirectUri);  if (reg.getProtocol().equals(req.getProtocol()) && hostMatches(reg.getHost(),req.getHost())) {    return StringUtils.cleanPath(req.getPath()).startsWith(StringUtils.cleanPath(reg.getPath()));  }} catch (MalformedURLException e) {} @AT@ 4287 @LENGTH@ 80
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort(); @AT@ 4287 @LENGTH@ 3
------INS VariableDeclarationFragment@@registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @TO@ VariableDeclarationStatement@@int registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort(); @AT@ 4291 @LENGTH@ 75
---------INS SimpleName@@registeredPort @TO@ VariableDeclarationFragment@@registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @AT@ 4291 @LENGTH@ 14
---------INS ConditionalExpression@@reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @TO@ VariableDeclarationFragment@@registeredPort=reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @AT@ 4308 @LENGTH@ 58
------------INS InfixExpression@@reg.getPort() != -1 @TO@ ConditionalExpression@@reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @AT@ 4308 @LENGTH@ 19
---------------INS MethodInvocation@@reg.getPort() @TO@ InfixExpression@@reg.getPort() != -1 @AT@ 4308 @LENGTH@ 13
------------------INS SimpleName@@Name:reg @TO@ MethodInvocation@@reg.getPort() @AT@ 4308 @LENGTH@ 3
------------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@reg.getPort() @AT@ 4312 @LENGTH@ 9
---------------INS Operator@@!= @TO@ InfixExpression@@reg.getPort() != -1 @AT@ 4321 @LENGTH@ 2
---------------INS PrefixExpression@@-1 @TO@ InfixExpression@@reg.getPort() != -1 @AT@ 4325 @LENGTH@ 2
------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4325 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4326 @LENGTH@ 1
------------INS MethodInvocation@@reg.getPort() @TO@ ConditionalExpression@@reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @AT@ 4330 @LENGTH@ 13
---------------INS SimpleName@@Name:reg @TO@ MethodInvocation@@reg.getPort() @AT@ 4330 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@reg.getPort() @AT@ 4334 @LENGTH@ 9
------------INS MethodInvocation@@reg.getDefaultPort() @TO@ ConditionalExpression@@reg.getPort() != -1 ? reg.getPort() : reg.getDefaultPort() @AT@ 4346 @LENGTH@ 20
---------------INS SimpleName@@Name:reg @TO@ MethodInvocation@@reg.getDefaultPort() @AT@ 4346 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getDefaultPort:[] @TO@ MethodInvocation@@reg.getDefaultPort() @AT@ 4350 @LENGTH@ 16


UPD MethodDeclaration@@public, voidMethodName:ThrottlePermit, final long delayMs,  @TO@ voidMethodName:ThrottlePermit, final long delayMs,  @AT@ 13954 @LENGTH@ 86
---DEL Modifier@@public @AT@ 13954 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:AccessController.checkPermission(permission) @TO@ MethodInvocation:securityManager.checkPermission(permission) @AT@ 2438 @LENGTH@ 45
---UPD MethodInvocation@@AccessController.checkPermission(permission) @TO@ securityManager.checkPermission(permission) @AT@ 2438 @LENGTH@ 44
------UPD SimpleName@@Name:AccessController @TO@ Name:securityManager @AT@ 2438 @LENGTH@ 16


UPD MethodDeclaration@@public, voidMethodName:ConstantReader, char[] constant,  @TO@ voidMethodName:ConstantReader, char[] constant,  @AT@ 3384 @LENGTH@ 88
---DEL Modifier@@public @AT@ 3384 @LENGTH@ 6


UPD VariableDeclarationStatement@@byte[] bytes=null; @TO@ byte[] bytes; @AT@ 6518 @LENGTH@ 20
---UPD VariableDeclarationFragment@@bytes=null @TO@ bytes @AT@ 6525 @LENGTH@ 12
------DEL NullLiteral@@null @AT@ 6533 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue("Role collections do not match; result: " + result + ", expected: "+ roles,roles.containsAll(result) && result.containsAll(roles)) @TO@ MethodInvocation:assertThat(roles.containsAll(result) && result.containsAll(roles)).withFailMessage("Role collections do not match; result: " + result + ", expected: "+ roles).isTrue() @AT@ 665 @LENGTH@ 148
---INS MethodInvocation@@assertThat(roles.containsAll(result) && result.containsAll(roles)).withFailMessage("Role collections do not match; result: " + result + ", expected: "+ roles).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Role collections do not match; result: " + result + ", expected: "+ roles,roles.containsAll(result) && result.containsAll(roles)) @AT@ 610 @LENGTH@ 188
------INS MethodInvocation@@MethodName:withFailMessage:["Role collections do not match; result: " + result + ", expected: "+ roles] @TO@ MethodInvocation@@assertThat(roles.containsAll(result) && result.containsAll(roles)).withFailMessage("Role collections do not match; result: " + result + ", expected: "+ roles).isTrue() @AT@ 610 @LENGTH@ 179
---------INS InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @TO@ MethodInvocation@@MethodName:withFailMessage:["Role collections do not match; result: " + result + ", expected: "+ roles] @AT@ 705 @LENGTH@ 83
------------INS StringLiteral@@"Role collections do not match; result: " @TO@ InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @AT@ 705 @LENGTH@ 41
------------INS Operator@@+ @TO@ InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @AT@ 746 @LENGTH@ 1
------------INS SimpleName@@result @TO@ InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @AT@ 749 @LENGTH@ 6
------------INS StringLiteral@@", expected: " @TO@ InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @AT@ 766 @LENGTH@ 14
------------INS SimpleName@@roles @TO@ InfixExpression@@"Role collections do not match; result: " + result + ", expected: "+ roles @AT@ 783 @LENGTH@ 5
------MOV MethodInvocation@@assertTrue("Role collections do not match; result: " + result + ", expected: "+ roles,roles.containsAll(result) && result.containsAll(roles)) @TO@ MethodInvocation@@assertThat(roles.containsAll(result) && result.containsAll(roles)).withFailMessage("Role collections do not match; result: " + result + ", expected: "+ roles).isTrue() @AT@ 665 @LENGTH@ 147
---------MOV InfixExpression@@roles.containsAll(result) && result.containsAll(roles) @TO@ MethodInvocation@@assertTrue("Role collections do not match; result: " + result + ", expected: "+ roles,roles.containsAll(result) && result.containsAll(roles)) @AT@ 757 @LENGTH@ 54
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(roles.containsAll(result) && result.containsAll(roles)).withFailMessage("Role collections do not match; result: " + result + ", expected: "+ roles).isTrue() @AT@ 790 @LENGTH@ 8
---UPD MethodInvocation@@assertTrue("Role collections do not match; result: " + result + ", expected: "+ roles,roles.containsAll(result) && result.containsAll(roles)) @TO@ MethodName:assertThat:[roles.containsAll(result) && result.containsAll(roles)] @AT@ 665 @LENGTH@ 147


UPD MethodDeclaration@@public, voidMethodName:ElectoralMonitorRoute, ZooKeeperEndpoint zep,  @TO@ voidMethodName:ElectoralMonitorRoute, ZooKeeperEndpoint zep,  @AT@ 7899 @LENGTH@ 271
---DEL Modifier@@public @AT@ 7899 @LENGTH@ 6


UPD Block@@ThenBody:{  queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.getLeft(),tokenInfo.getRight());  QueryInfo old=queryInfoMap.putIfAbsent(queryIdentifier,queryInfo);  if (old != null) {    queryInfo=old;  } else {    isExistingQueryInfo=false;  }} @TO@ ThenBody:{  String tokenUser=tokenInfo.getLeft(), tokenAppId=tokenInfo.getRight();  if (UserGroupInformation.isSecurityEnabled()) {    Preconditions.checkNotNull(tokenUser);  }  queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenUser,tokenAppId);  QueryInfo old=queryInfoMap.putIfAbsent(queryIdentifier,queryInfo);  if (old != null) {    queryInfo=old;  } else {    isExistingQueryInfo=false;  }} @AT@ 6255 @LENGTH@ 434
---UPD ExpressionStatement@@Assignment:queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.getLeft(),tokenInfo.getRight()) @TO@ Assignment:queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenUser,tokenAppId) @AT@ 6265 @LENGTH@ 218
------UPD Assignment@@queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.getLeft(),tokenInfo.getRight()) @TO@ queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenUser,tokenAppId) @AT@ 6265 @LENGTH@ 217
---------UPD ClassInstanceCreation@@QueryInfo[queryIdentifier, appIdString, dagName, dagIdentifier, user, getSourceCompletionMap(queryIdentifier), localDirsBase, localFs, tokenInfo.getLeft(), tokenInfo.getRight()] @TO@ QueryInfo[queryIdentifier, appIdString, dagName, dagIdentifier, user, getSourceCompletionMap(queryIdentifier), localDirsBase, localFs, tokenUser, tokenAppId] @AT@ 6277 @LENGTH@ 205
------------DEL MethodInvocation@@tokenInfo.getLeft() @AT@ 6440 @LENGTH@ 19
---------------DEL SimpleName@@Name:tokenInfo @AT@ 6440 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getLeft:[] @AT@ 6450 @LENGTH@ 9
------------DEL MethodInvocation@@tokenInfo.getRight() @AT@ 6461 @LENGTH@ 20
---------------DEL SimpleName@@Name:tokenInfo @AT@ 6461 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:getRight:[] @AT@ 6471 @LENGTH@ 10
------------INS SimpleName@@tokenUser @TO@ ClassInstanceCreation@@QueryInfo[queryIdentifier, appIdString, dagName, dagIdentifier, user, getSourceCompletionMap(queryIdentifier), localDirsBase, localFs, tokenInfo.getLeft(), tokenInfo.getRight()] @AT@ 6726 @LENGTH@ 9
------------INS SimpleName@@tokenAppId @TO@ ClassInstanceCreation@@QueryInfo[queryIdentifier, appIdString, dagName, dagIdentifier, user, getSourceCompletionMap(queryIdentifier), localDirsBase, localFs, tokenInfo.getLeft(), tokenInfo.getRight()] @AT@ 6737 @LENGTH@ 10
---INS VariableDeclarationStatement@@String tokenUser=tokenInfo.getLeft(), tokenAppId=tokenInfo.getRight(); @TO@ Block@@ThenBody:{  queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.getLeft(),tokenInfo.getRight());  QueryInfo old=queryInfoMap.putIfAbsent(queryIdentifier,queryInfo);  if (old != null) {    queryInfo=old;  } else {    isExistingQueryInfo=false;  }} @AT@ 6366 @LENGTH@ 74
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String tokenUser=tokenInfo.getLeft(), tokenAppId=tokenInfo.getRight(); @AT@ 6366 @LENGTH@ 6
------INS VariableDeclarationFragment@@tokenUser=tokenInfo.getLeft() @TO@ VariableDeclarationStatement@@String tokenUser=tokenInfo.getLeft(), tokenAppId=tokenInfo.getRight(); @AT@ 6373 @LENGTH@ 31
---------INS SimpleName@@tokenUser @TO@ VariableDeclarationFragment@@tokenUser=tokenInfo.getLeft() @AT@ 6373 @LENGTH@ 9
---------INS MethodInvocation@@tokenInfo.getLeft() @TO@ VariableDeclarationFragment@@tokenUser=tokenInfo.getLeft() @AT@ 6385 @LENGTH@ 19
------------INS SimpleName@@Name:tokenInfo @TO@ MethodInvocation@@tokenInfo.getLeft() @AT@ 6385 @LENGTH@ 9
------------INS SimpleName@@MethodName:getLeft:[] @TO@ MethodInvocation@@tokenInfo.getLeft() @AT@ 6395 @LENGTH@ 9
------INS VariableDeclarationFragment@@tokenAppId=tokenInfo.getRight() @TO@ VariableDeclarationStatement@@String tokenUser=tokenInfo.getLeft(), tokenAppId=tokenInfo.getRight(); @AT@ 6406 @LENGTH@ 33
---------INS SimpleName@@tokenAppId @TO@ VariableDeclarationFragment@@tokenAppId=tokenInfo.getRight() @AT@ 6406 @LENGTH@ 10
---------INS MethodInvocation@@tokenInfo.getRight() @TO@ VariableDeclarationFragment@@tokenAppId=tokenInfo.getRight() @AT@ 6419 @LENGTH@ 20
------------INS SimpleName@@Name:tokenInfo @TO@ MethodInvocation@@tokenInfo.getRight() @AT@ 6419 @LENGTH@ 9
------------INS SimpleName@@MethodName:getRight:[] @TO@ MethodInvocation@@tokenInfo.getRight() @AT@ 6429 @LENGTH@ 10
---INS IfStatement@@if (UserGroupInformation.isSecurityEnabled()) {  Preconditions.checkNotNull(tokenUser);} @TO@ Block@@ThenBody:{  queryInfo=new QueryInfo(queryIdentifier,appIdString,dagName,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.getLeft(),tokenInfo.getRight());  QueryInfo old=queryInfoMap.putIfAbsent(queryIdentifier,queryInfo);  if (old != null) {    queryInfo=old;  } else {    isExistingQueryInfo=false;  }} @AT@ 6449 @LENGTH@ 106
------INS MethodInvocation@@UserGroupInformation.isSecurityEnabled() @TO@ IfStatement@@if (UserGroupInformation.isSecurityEnabled()) {  Preconditions.checkNotNull(tokenUser);} @AT@ 6453 @LENGTH@ 40
---------INS SimpleName@@Name:UserGroupInformation @TO@ MethodInvocation@@UserGroupInformation.isSecurityEnabled() @AT@ 6453 @LENGTH@ 20
---------INS SimpleName@@MethodName:isSecurityEnabled:[] @TO@ MethodInvocation@@UserGroupInformation.isSecurityEnabled() @AT@ 6474 @LENGTH@ 19
------INS Block@@ThenBody:{  Preconditions.checkNotNull(tokenUser);} @TO@ IfStatement@@if (UserGroupInformation.isSecurityEnabled()) {  Preconditions.checkNotNull(tokenUser);} @AT@ 6495 @LENGTH@ 60
---------INS ExpressionStatement@@MethodInvocation:Preconditions.checkNotNull(tokenUser) @TO@ Block@@ThenBody:{  Preconditions.checkNotNull(tokenUser);} @AT@ 6507 @LENGTH@ 38
------------INS MethodInvocation@@Preconditions.checkNotNull(tokenUser) @TO@ ExpressionStatement@@MethodInvocation:Preconditions.checkNotNull(tokenUser) @AT@ 6507 @LENGTH@ 37
---------------INS SimpleName@@Name:Preconditions @TO@ MethodInvocation@@Preconditions.checkNotNull(tokenUser) @AT@ 6507 @LENGTH@ 13
---------------INS SimpleName@@MethodName:checkNotNull:[tokenUser] @TO@ MethodInvocation@@Preconditions.checkNotNull(tokenUser) @AT@ 6521 @LENGTH@ 23
------------------INS SimpleName@@tokenUser @TO@ SimpleName@@MethodName:checkNotNull:[tokenUser] @AT@ 6534 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new UnauthorizedUserException(errorMessage) @TO@ ClassInstanceCreation:new UnauthorizedClientException(errorMessage) @AT@ 3238 @LENGTH@ 51
---UPD ClassInstanceCreation@@UnauthorizedUserException[errorMessage] @TO@ UnauthorizedClientException[errorMessage] @AT@ 3245 @LENGTH@ 43
------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 3249 @LENGTH@ 25


UPD MethodDeclaration@@public, voidMethodName:ConnectorRef, Server server, Connector connector, CamelServlet servlet,  @TO@ voidMethodName:ConnectorRef, Server server, Connector connector, CamelServlet servlet,  @AT@ 6001 @LENGTH@ 224
---DEL Modifier@@public @AT@ 6001 @LENGTH@ 6


DEL IfStatement@@if (enableWebSecurityAttrs == null) {  Class<?> currentClass=ClassUtils.resolveClassName(importMetadata.getClassName(),beanClassLoader);  for (Class<?> classToInspect=currentClass; classToInspect != null; classToInspect=classToInspect.getSuperclass()) {    EnableWebSecurity enableWebSecurityAnnotation=AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class);    if (enableWebSecurityAnnotation == null) {      continue;    }    enableWebSecurityAttrMap=AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation);    enableWebSecurityAttrs=AnnotationAttributes.fromMap(enableWebSecurityAttrMap);  }} @AT@ 8144 @LENGTH@ 713
---DEL InfixExpression@@enableWebSecurityAttrs == null @AT@ 8148 @LENGTH@ 30
------DEL SimpleName@@enableWebSecurityAttrs @AT@ 8148 @LENGTH@ 22
------DEL Operator@@== @AT@ 8170 @LENGTH@ 2
------DEL NullLiteral@@null @AT@ 8174 @LENGTH@ 4
---DEL Block@@ThenBody:{  Class<?> currentClass=ClassUtils.resolveClassName(importMetadata.getClassName(),beanClassLoader);  for (Class<?> classToInspect=currentClass; classToInspect != null; classToInspect=classToInspect.getSuperclass()) {    EnableWebSecurity enableWebSecurityAnnotation=AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class);    if (enableWebSecurityAnnotation == null) {      continue;    }    enableWebSecurityAttrMap=AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation);    enableWebSecurityAttrs=AnnotationAttributes.fromMap(enableWebSecurityAttrMap);  }} @AT@ 8180 @LENGTH@ 677
------DEL VariableDeclarationStatement@@Class<?> currentClass=ClassUtils.resolveClassName(importMetadata.getClassName(),beanClassLoader); @AT@ 8213 @LENGTH@ 106
---------DEL ParameterizedType@@Class<?> @AT@ 8213 @LENGTH@ 8
------------DEL SimpleType@@Class @AT@ 8213 @LENGTH@ 5
------------DEL WildcardType@@? @AT@ 8219 @LENGTH@ 1
---------DEL VariableDeclarationFragment@@currentClass=ClassUtils.resolveClassName(importMetadata.getClassName(),beanClassLoader) @AT@ 8222 @LENGTH@ 96
------------DEL SimpleName@@currentClass @AT@ 8222 @LENGTH@ 12
------------DEL MethodInvocation@@ClassUtils.resolveClassName(importMetadata.getClassName(),beanClassLoader) @AT@ 8237 @LENGTH@ 81
---------------DEL SimpleName@@Name:ClassUtils @AT@ 8237 @LENGTH@ 10
---------------DEL SimpleName@@MethodName:resolveClassName:[importMetadata.getClassName(), beanClassLoader] @AT@ 8248 @LENGTH@ 70
------------------DEL MethodInvocation@@importMetadata.getClassName() @AT@ 8271 @LENGTH@ 29
---------------------DEL SimpleName@@Name:importMetadata @AT@ 8271 @LENGTH@ 14
---------------------DEL SimpleName@@MethodName:getClassName:[] @AT@ 8286 @LENGTH@ 14
------------------DEL SimpleName@@beanClassLoader @AT@ 8302 @LENGTH@ 15
------DEL ForStatement@@for (Class<?> classToInspect=currentClass; classToInspect != null; classToInspect=classToInspect.getSuperclass()) {  EnableWebSecurity enableWebSecurityAnnotation=AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class);  if (enableWebSecurityAnnotation == null) {    continue;  }  enableWebSecurityAttrMap=AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation);  enableWebSecurityAttrs=AnnotationAttributes.fromMap(enableWebSecurityAttrMap);} @AT@ 8323 @LENGTH@ 530
---------DEL VariableDeclarationExpression@@Class<?> classToInspect=currentClass @AT@ 8328 @LENGTH@ 38
------------DEL ParameterizedType@@Class<?> @AT@ 8328 @LENGTH@ 8
---------------DEL SimpleType@@Class @AT@ 8328 @LENGTH@ 5
---------------DEL WildcardType@@? @AT@ 8334 @LENGTH@ 1
------------DEL VariableDeclarationFragment@@classToInspect=currentClass @AT@ 8337 @LENGTH@ 29
---------------DEL SimpleName@@classToInspect @AT@ 8337 @LENGTH@ 14
---------------DEL SimpleName@@currentClass @AT@ 8354 @LENGTH@ 12
---------DEL InfixExpression@@classToInspect != null @AT@ 8368 @LENGTH@ 22
------------DEL SimpleName@@classToInspect @AT@ 8368 @LENGTH@ 14
------------DEL Operator@@!= @AT@ 8382 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 8386 @LENGTH@ 4
---------DEL Assignment@@classToInspect=classToInspect.getSuperclass() @AT@ 8392 @LENGTH@ 53
------------DEL SimpleName@@classToInspect @AT@ 8392 @LENGTH@ 14
------------DEL Operator@@= @AT@ 8406 @LENGTH@ 1
------------DEL MethodInvocation@@classToInspect.getSuperclass() @AT@ 8409 @LENGTH@ 36
---------------DEL SimpleName@@Name:classToInspect @AT@ 8409 @LENGTH@ 14
---------------DEL SimpleName@@MethodName:getSuperclass:[] @AT@ 8430 @LENGTH@ 15
---------DEL VariableDeclarationStatement@@EnableWebSecurity enableWebSecurityAnnotation=AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class); @AT@ 8453 @LENGTH@ 127
------------DEL SimpleType@@EnableWebSecurity @AT@ 8453 @LENGTH@ 17
------------DEL VariableDeclarationFragment@@enableWebSecurityAnnotation=AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class) @AT@ 8471 @LENGTH@ 108
---------------DEL SimpleName@@enableWebSecurityAnnotation @AT@ 8471 @LENGTH@ 27
---------------DEL MethodInvocation@@AnnotationUtils.findAnnotation(classToInspect,EnableWebSecurity.class) @AT@ 8501 @LENGTH@ 78
------------------DEL SimpleName@@Name:AnnotationUtils @AT@ 8501 @LENGTH@ 15
------------------DEL SimpleName@@MethodName:findAnnotation:[classToInspect, EnableWebSecurity.class] @AT@ 8524 @LENGTH@ 55
---------------------DEL SimpleName@@classToInspect @AT@ 8539 @LENGTH@ 14
---------------------DEL TypeLiteral@@EnableWebSecurity.class @AT@ 8555 @LENGTH@ 23
---------DEL IfStatement@@if (enableWebSecurityAnnotation == null) {  continue;} @AT@ 8585 @LENGTH@ 63
------------DEL InfixExpression@@enableWebSecurityAnnotation == null @AT@ 8589 @LENGTH@ 35
---------------DEL SimpleName@@enableWebSecurityAnnotation @AT@ 8589 @LENGTH@ 27
---------------DEL Operator@@== @AT@ 8616 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 8620 @LENGTH@ 4
------------DEL Block@@ThenBody:{  continue;} @AT@ 8626 @LENGTH@ 22
---------------DEL ContinueStatement@@ @AT@ 8633 @LENGTH@ 9
---------DEL ExpressionStatement@@Assignment:enableWebSecurityAttrMap=AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation) @AT@ 8653 @LENGTH@ 103
------------DEL Assignment@@enableWebSecurityAttrMap=AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation) @AT@ 8653 @LENGTH@ 102
---------------DEL SimpleName@@enableWebSecurityAttrMap @AT@ 8653 @LENGTH@ 24
---------------DEL Operator@@= @AT@ 8677 @LENGTH@ 1
---------------DEL MethodInvocation@@AnnotationUtils.getAnnotationAttributes(enableWebSecurityAnnotation) @AT@ 8680 @LENGTH@ 75
------------------DEL SimpleName@@Name:AnnotationUtils @AT@ 8680 @LENGTH@ 15
------------------DEL SimpleName@@MethodName:getAnnotationAttributes:[enableWebSecurityAnnotation] @AT@ 8703 @LENGTH@ 52
---------------------DEL SimpleName@@enableWebSecurityAnnotation @AT@ 8727 @LENGTH@ 27
---------DEL ExpressionStatement@@Assignment:enableWebSecurityAttrs=AnnotationAttributes.fromMap(enableWebSecurityAttrMap) @AT@ 8761 @LENGTH@ 87
------------DEL Assignment@@enableWebSecurityAttrs=AnnotationAttributes.fromMap(enableWebSecurityAttrMap) @AT@ 8761 @LENGTH@ 86
---------------DEL SimpleName@@enableWebSecurityAttrs @AT@ 8761 @LENGTH@ 22
---------------DEL Operator@@= @AT@ 8783 @LENGTH@ 1
---------------DEL MethodInvocation@@AnnotationAttributes.fromMap(enableWebSecurityAttrMap) @AT@ 8786 @LENGTH@ 61
------------------DEL SimpleName@@Name:AnnotationAttributes @AT@ 8786 @LENGTH@ 20
------------------DEL SimpleName@@MethodName:fromMap:[enableWebSecurityAttrMap] @AT@ 8814 @LENGTH@ 33
---------------------DEL SimpleName@@enableWebSecurityAttrMap @AT@ 8822 @LENGTH@ 24


UPD MethodDeclaration@@public, voidMethodName:CustomXsltUriResolver, ClassResolver resolver, String location,  @TO@ voidMethodName:CustomXsltUriResolver, ClassResolver resolver, String location,  @AT@ 5343 @LENGTH@ 120
---DEL Modifier@@public @AT@ 5343 @LENGTH@ 6


DEL VariableDeclarationStatement@@FileInputStream fis=null; @AT@ 5859 @LENGTH@ 27
---DEL SimpleType@@FileInputStream @AT@ 5859 @LENGTH@ 15
---DEL VariableDeclarationFragment@@fis=null @AT@ 5875 @LENGTH@ 10
------DEL SimpleName@@fis @AT@ 5875 @LENGTH@ 3
------DEL NullLiteral@@null @AT@ 5881 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:OAuthHelperListener, IAuthSecureStorage authSecureStorage, OAuthRefreshListener configListener,  @TO@ voidMethodName:OAuthHelperListener, IAuthSecureStorage authSecureStorage, OAuthRefreshListener configListener,  @AT@ 1391 @LENGTH@ 377
---DEL Modifier@@public @AT@ 1391 @LENGTH@ 6


UPD VariableDeclarationStatement@@Iterator<String> iter=template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,Iterator.class); @TO@ List results=template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,List.class); @AT@ 4693 @LENGTH@ 162
---INS SimpleType@@List @TO@ VariableDeclarationStatement@@Iterator<String> iter=template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,Iterator.class); @AT@ 4576 @LENGTH@ 4
---DEL ParameterizedType@@Iterator<String> @AT@ 4693 @LENGTH@ 16
------DEL SimpleType@@Iterator @AT@ 4693 @LENGTH@ 8
------DEL SimpleType@@String @AT@ 4702 @LENGTH@ 6
---UPD VariableDeclarationFragment@@iter=template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,Iterator.class) @TO@ results=template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,List.class) @AT@ 4710 @LENGTH@ 144
------UPD SimpleName@@iter @TO@ results @AT@ 4710 @LENGTH@ 4
------UPD MethodInvocation@@template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,Iterator.class) @TO@ template.requestBodyAndHeader("ignite:cache:testcache1?operation=QUERY",keys,IgniteConstants.IGNITE_CACHE_QUERY,query,List.class) @AT@ 4717 @LENGTH@ 137
---------UPD SimpleName@@MethodName:requestBodyAndHeader:["ignite:cache:testcache1?operation=QUERY", keys, IgniteConstants.IGNITE_CACHE_QUERY, query, Iterator.class] @TO@ MethodName:requestBodyAndHeader:["ignite:cache:testcache1?operation=QUERY", keys, IgniteConstants.IGNITE_CACHE_QUERY, query, List.class] @AT@ 4726 @LENGTH@ 128
------------UPD TypeLiteral@@Iterator.class @TO@ List.class @AT@ 4839 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertEquals("The output is not correct.","<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />",value) @TO@ MethodInvocation:assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />") @AT@ 708 @LENGTH@ 131
---UPD MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />",value) @TO@ assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />") @AT@ 708 @LENGTH@ 130
------INS MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />",value) @AT@ 708 @LENGTH@ 68
---------INS StringLiteral@@"The output is not correct." @TO@ MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @AT@ 747 @LENGTH@ 28
------INS MethodInvocation@@MethodName:assertThat:[value] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />",value) @AT@ 708 @LENGTH@ 22
---------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:assertThat:[value] @AT@ 724 @LENGTH@ 5
------DEL SimpleName@@MethodName:assertEquals:["The output is not correct.", "<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />", value] @AT@ 708 @LENGTH@ 130
---------DEL StringLiteral@@"The output is not correct." @AT@ 721 @LENGTH@ 28
---------DEL SimpleName@@value @AT@ 832 @LENGTH@ 5
------INS SimpleName@@MethodName:isEqualTo:["<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />"] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />",value) @AT@ 777 @LENGTH@ 82
---------MOV StringLiteral@@"<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />" @TO@ SimpleName@@MethodName:isEqualTo:["<input type=\"hidden\" name=\"_csrf\" value=\"abc123def456ghi789\" />"] @AT@ 755 @LENGTH@ 71


UPD MethodDeclaration@@public, voidMethodName:RabbitConsumer, TemporaryQueueReplyManager consumer, Channel channel,  @TO@ voidMethodName:RabbitConsumer, TemporaryQueueReplyManager consumer, Channel channel,  @AT@ 4762 @LENGTH@ 189
---DEL Modifier@@public @AT@ 4762 @LENGTH@ 6


UPD Block@@ElseBody:if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ ElseBody:if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7581 @LENGTH@ 636
---UPD IfStatement@@if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7581 @LENGTH@ 636
------UPD Block@@ElseBody:if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ ElseBody:if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---UPD IfStatement@@if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isDelimiter(ch)) {  token.type=TOKEN;  break;} else if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7581 @LENGTH@ 636
------UPD Block@@ElseBody:if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ ElseBody:if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13
---------UPD IfStatement@@if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @TO@ if (isEscape(ch)) {  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} else {  token.content.append((char)ch);  ch=reader.read();} @AT@ 7682 @LENGTH@ 535
------------UPD Block@@ThenBody:{  final int unescaped=readEscape();  if (unescaped == Constants.END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @TO@ ThenBody:{  final int unescaped=readEscape();  if (unescaped == END_OF_STREAM) {    token.content.append((char)ch).append((char)reader.getLastChar());  } else {    token.content.append((char)unescaped);  }  ch=reader.read();} @AT@ 7700 @LENGTH@ 399
---------------UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)ch).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 7770 @LENGTH@ 267
------------------UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 7774 @LENGTH@ 36
---------------------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 23
------------------------DEL SimpleName@@Constants @AT@ 7787 @LENGTH@ 9
------------------------DEL SimpleName@@END_OF_STREAM @AT@ 7797 @LENGTH@ 13
---------------------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 7787 @LENGTH@ 13


UPD VariableDeclarationStatement@@Map keepAlive=new HashMap<>(); @TO@ Map<Object,Object> keepAlive=new HashMap<>(); @AT@ 1376 @LENGTH@ 32
---INS ParameterizedType@@Map<Object,Object> @TO@ VariableDeclarationStatement@@Map keepAlive=new HashMap<>(); @AT@ 1376 @LENGTH@ 18
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<Object,Object> @AT@ 1376 @LENGTH@ 3
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 1380 @LENGTH@ 6
------INS SimpleType@@Object @TO@ ParameterizedType@@Map<Object,Object> @AT@ 1387 @LENGTH@ 6
---DEL SimpleType@@Map @AT@ 1376 @LENGTH@ 3


UPD Block@@ThenBody:{  builder.addMethod(getAuditorProviderMethod());  builder.addAnnotation(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build());  builder.addAnnotation(new AnnotationMetadataBuilder(CONFIGURATION).build());  itdTypeDetails=builder.build();} @TO@ ThenBody:{  ensureGovernorHasMethod(getAuditorProviderMethod());  ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING));  ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(CONFIGURATION));  itdTypeDetails=builder.build();} @AT@ 3589 @LENGTH@ 440
---UPD ExpressionStatement@@MethodInvocation:builder.addMethod(getAuditorProviderMethod()) @TO@ MethodInvocation:ensureGovernorHasMethod(getAuditorProviderMethod()) @AT@ 3643 @LENGTH@ 46
------UPD MethodInvocation@@builder.addMethod(getAuditorProviderMethod()) @TO@ ensureGovernorHasMethod(getAuditorProviderMethod()) @AT@ 3643 @LENGTH@ 45
---------DEL SimpleName@@Name:builder @AT@ 3643 @LENGTH@ 7
---------UPD SimpleName@@MethodName:addMethod:[getAuditorProviderMethod()] @TO@ MethodName:ensureGovernorHasMethod:[getAuditorProviderMethod()] @AT@ 3651 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:builder.addAnnotation(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build()) @TO@ MethodInvocation:ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING)) @AT@ 3729 @LENGTH@ 82
------UPD MethodInvocation@@builder.addAnnotation(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build()) @TO@ ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING)) @AT@ 3729 @LENGTH@ 81
---------DEL SimpleName@@Name:builder @AT@ 3729 @LENGTH@ 7
---------UPD SimpleName@@MethodName:addAnnotation:[new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build()] @TO@ MethodName:ensureGovernorIsAnnotated:[new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING)] @AT@ 3737 @LENGTH@ 73
------------DEL MethodInvocation@@new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build() @AT@ 3751 @LENGTH@ 58
---------------DEL ClassInstanceCreation@@AnnotationMetadataBuilder[ENABLE_JPA_AUDITING] @AT@ 3751 @LENGTH@ 50
---------------DEL SimpleName@@MethodName:build:[] @AT@ 3802 @LENGTH@ 7
------------INS ClassInstanceCreation@@AnnotationMetadataBuilder[ENABLE_JPA_AUDITING] @TO@ SimpleName@@MethodName:addAnnotation:[new AnnotationMetadataBuilder(ENABLE_JPA_AUDITING).build()] @AT@ 3761 @LENGTH@ 50
---------------MOV New@@new @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[ENABLE_JPA_AUDITING] @AT@ 3751 @LENGTH@ 3
---------------MOV SimpleType@@AnnotationMetadataBuilder @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[ENABLE_JPA_AUDITING] @AT@ 3755 @LENGTH@ 25
---------------MOV SimpleName@@ENABLE_JPA_AUDITING @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[ENABLE_JPA_AUDITING] @AT@ 3781 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:builder.addAnnotation(new AnnotationMetadataBuilder(CONFIGURATION).build()) @TO@ MethodInvocation:ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(CONFIGURATION)) @AT@ 3847 @LENGTH@ 76
------UPD MethodInvocation@@builder.addAnnotation(new AnnotationMetadataBuilder(CONFIGURATION).build()) @TO@ ensureGovernorIsAnnotated(new AnnotationMetadataBuilder(CONFIGURATION)) @AT@ 3847 @LENGTH@ 75
---------DEL SimpleName@@Name:builder @AT@ 3847 @LENGTH@ 7
---------UPD SimpleName@@MethodName:addAnnotation:[new AnnotationMetadataBuilder(CONFIGURATION).build()] @TO@ MethodName:ensureGovernorIsAnnotated:[new AnnotationMetadataBuilder(CONFIGURATION)] @AT@ 3855 @LENGTH@ 67
------------DEL MethodInvocation@@new AnnotationMetadataBuilder(CONFIGURATION).build() @AT@ 3869 @LENGTH@ 52
---------------DEL ClassInstanceCreation@@AnnotationMetadataBuilder[CONFIGURATION] @AT@ 3869 @LENGTH@ 44
---------------DEL SimpleName@@MethodName:build:[] @AT@ 3914 @LENGTH@ 7
------------INS ClassInstanceCreation@@AnnotationMetadataBuilder[CONFIGURATION] @TO@ SimpleName@@MethodName:addAnnotation:[new AnnotationMetadataBuilder(CONFIGURATION).build()] @AT@ 3875 @LENGTH@ 44
---------------MOV New@@new @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[CONFIGURATION] @AT@ 3869 @LENGTH@ 3
---------------MOV SimpleType@@AnnotationMetadataBuilder @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[CONFIGURATION] @AT@ 3873 @LENGTH@ 25
---------------MOV SimpleName@@CONFIGURATION @TO@ ClassInstanceCreation@@AnnotationMetadataBuilder[CONFIGURATION] @AT@ 3899 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:Chained, List<CacheEntryEventFilter> filteredEvents,  @TO@ voidMethodName:Chained, List<CacheEntryEventFilter> filteredEvents,  @AT@ 2005 @LENGTH@ 406
---DEL Modifier@@public @AT@ 2005 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:Worker, final HttpServerConnection conn,  @TO@ voidMethodName:Worker, final HttpServerConnection conn,  @AT@ 12812 @LENGTH@ 88
---DEL Modifier@@public @AT@ 12812 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:verify(Config.channel2,never()).queueBind(eq("foo"),eq("bar"),eq("foo"),any(Map.class)) @TO@ MethodInvocation:verify(Config.channel2,never()).queueBind(eq("foo"),eq("bar"),eq("foo"),anyMap()) @AT@ 12828 @LENGTH@ 92
---UPD MethodInvocation@@verify(Config.channel2,never()).queueBind(eq("foo"),eq("bar"),eq("foo"),any(Map.class)) @TO@ verify(Config.channel2,never()).queueBind(eq("foo"),eq("bar"),eq("foo"),anyMap()) @AT@ 12828 @LENGTH@ 91
------UPD SimpleName@@MethodName:queueBind:[eq("foo"), eq("bar"), eq("foo"), any(Map.class)] @TO@ MethodName:queueBind:[eq("foo"), eq("bar"), eq("foo"), anyMap()] @AT@ 12861 @LENGTH@ 58
---------UPD MethodInvocation@@any(Map.class) @TO@ MethodName:anyMap:[] @AT@ 12904 @LENGTH@ 14
------------DEL SimpleName@@MethodName:any:[Map.class] @AT@ 12904 @LENGTH@ 14
---------------DEL TypeLiteral@@Map.class @AT@ 12908 @LENGTH@ 9


DEL ExpressionStatement@@MethodInvocation:ServiceHelper.stopService(producer) @AT@ 4509 @LENGTH@ 36
---DEL MethodInvocation@@ServiceHelper.stopService(producer) @AT@ 4509 @LENGTH@ 35
------DEL SimpleName@@Name:ServiceHelper @AT@ 4509 @LENGTH@ 13
------DEL SimpleName@@MethodName:stopService:[producer] @AT@ 4523 @LENGTH@ 21
---------DEL SimpleName@@producer @AT@ 4535 @LENGTH@ 8


UPD ReturnStatement@@MethodInvocation:requested.endsWith(registered) @TO@ InfixExpression:registered.equals(requested) || requested.endsWith("." + registered) @AT@ 4772 @LENGTH@ 38
---INS InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @TO@ ReturnStatement@@MethodInvocation:requested.endsWith(registered) @AT@ 4779 @LENGTH@ 68
------INS MethodInvocation@@registered.equals(requested) @TO@ InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @AT@ 4779 @LENGTH@ 28
---------INS SimpleName@@Name:registered @TO@ MethodInvocation@@registered.equals(requested) @AT@ 4779 @LENGTH@ 10
---------INS SimpleName@@MethodName:equals:[requested] @TO@ MethodInvocation@@registered.equals(requested) @AT@ 4790 @LENGTH@ 17
------------INS SimpleName@@requested @TO@ SimpleName@@MethodName:equals:[requested] @AT@ 4797 @LENGTH@ 9
------INS Operator@@|| @TO@ InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @AT@ 4807 @LENGTH@ 2
------INS MethodInvocation@@requested.endsWith("." + registered) @TO@ InfixExpression@@registered.equals(requested) || requested.endsWith("." + registered) @AT@ 4811 @LENGTH@ 36
---------MOV SimpleName@@Name:requested @TO@ MethodInvocation@@requested.endsWith("." + registered) @AT@ 4779 @LENGTH@ 9
---------MOV SimpleName@@MethodName:endsWith:[registered] @TO@ MethodInvocation@@requested.endsWith("." + registered) @AT@ 4789 @LENGTH@ 20
------------DEL SimpleName@@registered @AT@ 4798 @LENGTH@ 10
------------INS InfixExpression@@"." + registered @TO@ SimpleName@@MethodName:endsWith:[registered] @AT@ 4830 @LENGTH@ 16
---------------INS StringLiteral@@"." @TO@ InfixExpression@@"." + registered @AT@ 4830 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"." + registered @AT@ 4833 @LENGTH@ 1
---------------INS SimpleName@@registered @TO@ InfixExpression@@"." + registered @AT@ 4836 @LENGTH@ 10
---DEL MethodInvocation@@requested.endsWith(registered) @AT@ 4779 @LENGTH@ 30


UPD FieldDeclaration@@public, static, final, String, [SHA3_224="SHA3_224"] @TO@ public, static, final, String, [SHA3_224="SHA3-224"] @AT@ 2703 @LENGTH@ 49
---UPD VariableDeclarationFragment@@SHA3_224="SHA3_224" @TO@ SHA3_224="SHA3-224" @AT@ 2730 @LENGTH@ 21
------UPD StringLiteral@@"SHA3_224" @TO@ "SHA3-224" @AT@ 2741 @LENGTH@ 10


UPD MethodInvocation@@MethodName:collect:[() -> new StringJoiner(",","@(",")"), (joiner,method) -> {
  try {
    joiner.add(method.getName()).add("=").add(method.invoke(annotation).toString());
  }
 catch (  NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {
    throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);
  }
}
, StringJoiner::merge] @TO@ MethodName:collect:[() -> new StringJoiner(",","@" + annotation.annotationType().getCanonicalName() + "(",")"), (joiner,method) -> {
  try {
    joiner.add(method.getName() + "=" + method.invoke(annotation).toString());
  }
 catch (  NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {
    throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);
  }
}
, StringJoiner::merge] @AT@ 7710 @LENGTH@ 817
---UPD LambdaExpression@@() -> new StringJoiner(",","@(",")") @TO@ () -> new StringJoiner(",","@" + annotation.annotationType().getCanonicalName() + "(",")") @AT@ 7798 @LENGTH@ 38
------UPD ClassInstanceCreation@@StringJoiner[",", "@(", ")"] @TO@ StringJoiner[",", "@" + annotation.annotationType().getCanonicalName() + "(", ")"] @AT@ 7804 @LENGTH@ 32
---------INS InfixExpression@@"@" + annotation.annotationType().getCanonicalName() + "(" @TO@ ClassInstanceCreation@@StringJoiner[",", "@(", ")"] @AT@ 7826 @LENGTH@ 58
------------INS StringLiteral@@"@" @TO@ InfixExpression@@"@" + annotation.annotationType().getCanonicalName() + "(" @AT@ 7826 @LENGTH@ 3
------------INS Operator@@+ @TO@ InfixExpression@@"@" + annotation.annotationType().getCanonicalName() + "(" @AT@ 7829 @LENGTH@ 1
------------INS MethodInvocation@@annotation.annotationType().getCanonicalName() @TO@ InfixExpression@@"@" + annotation.annotationType().getCanonicalName() + "(" @AT@ 7832 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:annotationType:[] @TO@ MethodInvocation@@annotation.annotationType().getCanonicalName() @AT@ 7832 @LENGTH@ 27
---------------INS SimpleName@@Name:annotation @TO@ MethodInvocation@@annotation.annotationType().getCanonicalName() @AT@ 7832 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getCanonicalName:[] @TO@ MethodInvocation@@annotation.annotationType().getCanonicalName() @AT@ 7860 @LENGTH@ 18
------------INS StringLiteral@@"(" @TO@ InfixExpression@@"@" + annotation.annotationType().getCanonicalName() + "(" @AT@ 7881 @LENGTH@ 3
---------DEL StringLiteral@@"@(" @AT@ 7826 @LENGTH@ 4
---UPD LambdaExpression@@(joiner,method) -> {
  try {
    joiner.add(method.getName()).add("=").add(method.invoke(annotation).toString());
  }
 catch (  NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {
    throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);
  }
}
 @TO@ (joiner,method) -> {
  try {
    joiner.add(method.getName() + "=" + method.invoke(annotation).toString());
  }
 catch (  NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {
    throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);
  }
}
 @AT@ 7854 @LENGTH@ 635
------UPD TryStatement@@try {  joiner.add(method.getName()).add("=").add(method.invoke(annotation).toString());} catch (NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {  throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);} @TO@ try {  joiner.add(method.getName() + "=" + method.invoke(annotation).toString());} catch (NullPointerException|IllegalArgumentException|IllegalAccessException|InvocationTargetException cause) {  throw new RuntimeException("Error while accessing member [" + method.getName() + "]"+ " of annotation ["+ annotation.annotationType().getName()+ "]",cause);} @AT@ 7896 @LENGTH@ 575
---------UPD ExpressionStatement@@MethodInvocation:joiner.add(method.getName()).add("=").add(method.invoke(annotation).toString()) @TO@ MethodInvocation:joiner.add(method.getName() + "=" + method.invoke(annotation).toString()) @AT@ 7926 @LENGTH@ 138
------------UPD MethodInvocation@@joiner.add(method.getName()).add("=").add(method.invoke(annotation).toString()) @TO@ joiner.add(method.getName() + "=" + method.invoke(annotation).toString()) @AT@ 7926 @LENGTH@ 137
---------------DEL MethodInvocation@@MethodName:add:["="] @AT@ 7926 @LENGTH@ 66
------------------DEL StringLiteral@@"=" @AT@ 7988 @LENGTH@ 3
---------------DEL MethodInvocation@@MethodName:add:[method.getName()] @AT@ 7926 @LENGTH@ 57
------------------DEL MethodInvocation@@method.getName() @AT@ 7966 @LENGTH@ 16
---------------------DEL SimpleName@@Name:method @AT@ 7966 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:getName:[] @AT@ 7973 @LENGTH@ 9
---------------UPD SimpleName@@MethodName:add:[method.invoke(annotation).toString()] @TO@ MethodName:add:[method.getName() + "=" + method.invoke(annotation).toString()] @AT@ 8022 @LENGTH@ 41
------------------INS InfixExpression@@method.getName() + "=" + method.invoke(annotation).toString() @TO@ SimpleName@@MethodName:add:[method.invoke(annotation).toString()] @AT@ 7991 @LENGTH@ 61
---------------------INS MethodInvocation@@method.getName() @TO@ InfixExpression@@method.getName() + "=" + method.invoke(annotation).toString() @AT@ 7991 @LENGTH@ 16
------------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getName() @AT@ 7991 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@method.getName() @AT@ 7998 @LENGTH@ 9
---------------------INS Operator@@+ @TO@ InfixExpression@@method.getName() + "=" + method.invoke(annotation).toString() @AT@ 8007 @LENGTH@ 1
---------------------INS StringLiteral@@"=" @TO@ InfixExpression@@method.getName() + "=" + method.invoke(annotation).toString() @AT@ 8010 @LENGTH@ 3
---------------------MOV MethodInvocation@@method.invoke(annotation).toString() @TO@ InfixExpression@@method.getName() + "=" + method.invoke(annotation).toString() @AT@ 8026 @LENGTH@ 36


INS MethodDeclaration@@public, void, MethodName:eraseCredentials,  @TO@ TypeDeclaration@@[public]OAuth2Authentication, AbstractAuthenticationToken @AT@ 2391 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 2391 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 2398 @LENGTH@ 4
---INS SimpleName@@MethodName:eraseCredentials @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 2403 @LENGTH@ 16
---INS ExpressionStatement@@SuperMethodInvocation:super.eraseCredentials() @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 2426 @LENGTH@ 25
------INS SuperMethodInvocation@@super.eraseCredentials() @TO@ ExpressionStatement@@SuperMethodInvocation:super.eraseCredentials() @AT@ 2426 @LENGTH@ 24
---------INS SimpleName@@MethodName:eraseCredentials:[] @TO@ SuperMethodInvocation@@super.eraseCredentials() @AT@ 2432 @LENGTH@ 16
---INS IfStatement@@if (this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass())) {  CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials();} @TO@ MethodDeclaration@@public, void, MethodName:eraseCredentials,  @AT@ 2454 @LENGTH@ 205
------INS InfixExpression@@this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @TO@ IfStatement@@if (this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass())) {  CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials();} @AT@ 2458 @LENGTH@ 114
---------INS InfixExpression@@this.userAuthentication != null @TO@ InfixExpression@@this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @AT@ 2458 @LENGTH@ 31
------------INS FieldAccess@@this.userAuthentication @TO@ InfixExpression@@this.userAuthentication != null @AT@ 2458 @LENGTH@ 23
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.userAuthentication @AT@ 2458 @LENGTH@ 4
---------------INS SimpleName@@userAuthentication @TO@ FieldAccess@@this.userAuthentication @AT@ 2463 @LENGTH@ 18
------------INS Operator@@!= @TO@ InfixExpression@@this.userAuthentication != null @AT@ 2481 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@this.userAuthentication != null @AT@ 2485 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @AT@ 2489 @LENGTH@ 2
---------INS MethodInvocation@@CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @TO@ InfixExpression@@this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @AT@ 2493 @LENGTH@ 79
------------INS TypeLiteral@@CredentialsContainer.class @TO@ MethodInvocation@@CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @AT@ 2493 @LENGTH@ 26
------------INS SimpleName@@MethodName:isAssignableFrom:[this.userAuthentication.getClass()] @TO@ MethodInvocation@@CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass()) @AT@ 2520 @LENGTH@ 52
---------------INS MethodInvocation@@this.userAuthentication.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[this.userAuthentication.getClass()] @AT@ 2537 @LENGTH@ 34
------------------INS FieldAccess@@this.userAuthentication @TO@ MethodInvocation@@this.userAuthentication.getClass() @AT@ 2537 @LENGTH@ 23
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.userAuthentication @AT@ 2537 @LENGTH@ 4
---------------------INS SimpleName@@userAuthentication @TO@ FieldAccess@@this.userAuthentication @AT@ 2542 @LENGTH@ 18
------------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@this.userAuthentication.getClass() @AT@ 2561 @LENGTH@ 10
------INS Block@@ThenBody:{  CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials();} @TO@ IfStatement@@if (this.userAuthentication != null && CredentialsContainer.class.isAssignableFrom(this.userAuthentication.getClass())) {  CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials();} @AT@ 2574 @LENGTH@ 85
---------INS ExpressionStatement@@MethodInvocation:CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @TO@ Block@@ThenBody:{  CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials();} @AT@ 2579 @LENGTH@ 76
------------INS MethodInvocation@@CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @TO@ ExpressionStatement@@MethodInvocation:CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @AT@ 2579 @LENGTH@ 75
---------------INS MethodInvocation@@MethodName:cast:[this.userAuthentication] @TO@ MethodInvocation@@CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @AT@ 2579 @LENGTH@ 56
------------------INS FieldAccess@@this.userAuthentication @TO@ MethodInvocation@@MethodName:cast:[this.userAuthentication] @AT@ 2611 @LENGTH@ 23
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.userAuthentication @AT@ 2611 @LENGTH@ 4
---------------------INS SimpleName@@userAuthentication @TO@ FieldAccess@@this.userAuthentication @AT@ 2616 @LENGTH@ 18
---------------INS TypeLiteral@@CredentialsContainer.class @TO@ MethodInvocation@@CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @AT@ 2579 @LENGTH@ 26
---------------INS SimpleName@@MethodName:eraseCredentials:[] @TO@ MethodInvocation@@CredentialsContainer.class.cast(this.userAuthentication).eraseCredentials() @AT@ 2636 @LENGTH@ 18


MOV ExpressionStatement@@MethodInvocation:Collections.sort(interfaces,new NicPreferNameComparator()) @TO@ MethodDeclaration@@private, List<NetworkInterface>, MethodName:sortInterfaces, List<NetworkInterface> interfaces,  @AT@ 7054 @LENGTH@ 60


UPD IfStatement@@if (deletedLocks > 0) {  LOG.info("Deleted " + deletedLocks + " ext locks from HIVE_LOCKS due to timeout (vs. "+ extLockIDs.size()+ " found. List: "+ extLockIDs+ ") maxHeartbeatTime="+ maxHeartbeatTime);} @TO@ if (deletedLocks > 0) {  Collections.sort(extLockIDs);  LOG.info("Deleted " + deletedLocks + " ext locks from HIVE_LOCKS due to timeout (vs. "+ extLockIDs.size()+ " found. List: "+ extLockIDs+ ") maxHeartbeatTime="+ maxHeartbeatTime);} @AT@ 95346 @LENGTH@ 234
---UPD Block@@ThenBody:{  LOG.info("Deleted " + deletedLocks + " ext locks from HIVE_LOCKS due to timeout (vs. "+ extLockIDs.size()+ " found. List: "+ extLockIDs+ ") maxHeartbeatTime="+ maxHeartbeatTime);} @TO@ ThenBody:{  Collections.sort(extLockIDs);  LOG.info("Deleted " + deletedLocks + " ext locks from HIVE_LOCKS due to timeout (vs. "+ extLockIDs.size()+ " found. List: "+ extLockIDs+ ") maxHeartbeatTime="+ maxHeartbeatTime);} @AT@ 95367 @LENGTH@ 213
------INS ExpressionStatement@@MethodInvocation:Collections.sort(extLockIDs) @TO@ Block@@ThenBody:{  LOG.info("Deleted " + deletedLocks + " ext locks from HIVE_LOCKS due to timeout (vs. "+ extLockIDs.size()+ " found. List: "+ extLockIDs+ ") maxHeartbeatTime="+ maxHeartbeatTime);} @AT@ 95377 @LENGTH@ 29
---------INS MethodInvocation@@Collections.sort(extLockIDs) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(extLockIDs) @AT@ 95377 @LENGTH@ 28
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(extLockIDs) @AT@ 95377 @LENGTH@ 11
------------INS SimpleName@@MethodName:sort:[extLockIDs] @TO@ MethodInvocation@@Collections.sort(extLockIDs) @AT@ 95389 @LENGTH@ 16
---------------INS SimpleName@@extLockIDs @TO@ SimpleName@@MethodName:sort:[extLockIDs] @AT@ 95394 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:CertChainXAdESSignatureProperties,  @TO@ voidMethodName:CertChainXAdESSignatureProperties,  @AT@ 46406 @LENGTH@ 92
---DEL Modifier@@public @AT@ 46406 @LENGTH@ 6


UPD TryStatement@@try {  final OutputStream os=new FileOutputStream(file);  try {    PatchXml.marshal(os,rollbackPatch);  }  finally {    IoUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new IOException(e);} @TO@ try {  try (final OutputStream os=new FileOutputStream(file)){    PatchXml.marshal(os,rollbackPatch);  } } catch (XMLStreamException e) {  throw new IOException(e);} @AT@ 37244 @LENGTH@ 306
---INS TryStatement@@try (final OutputStream os=new FileOutputStream(file)){  PatchXml.marshal(os,rollbackPatch);}  @TO@ TryStatement@@try {  final OutputStream os=new FileOutputStream(file);  try {    PatchXml.marshal(os,rollbackPatch);  }  finally {    IoUtils.safeClose(os);  }} catch (XMLStreamException e) {  throw new IOException(e);} @AT@ 37262 @LENGTH@ 124
------INS VariableDeclarationExpression@@final OutputStream os=new FileOutputStream(file) @TO@ TryStatement@@try (final OutputStream os=new FileOutputStream(file)){  PatchXml.marshal(os,rollbackPatch);}  @AT@ 37267 @LENGTH@ 50
---------INS Modifier@@final @TO@ VariableDeclarationExpression@@final OutputStream os=new FileOutputStream(file) @AT@ 37267 @LENGTH@ 5
---------INS SimpleType@@OutputStream @TO@ VariableDeclarationExpression@@final OutputStream os=new FileOutputStream(file) @AT@ 37273 @LENGTH@ 12
---------MOV VariableDeclarationFragment@@os=new FileOutputStream(file) @TO@ VariableDeclarationExpression@@final OutputStream os=new FileOutputStream(file) @AT@ 37281 @LENGTH@ 31
------MOV ExpressionStatement@@MethodInvocation:PatchXml.marshal(os,rollbackPatch) @TO@ TryStatement@@try (final OutputStream os=new FileOutputStream(file)){  PatchXml.marshal(os,rollbackPatch);}  @AT@ 37348 @LENGTH@ 36
---DEL VariableDeclarationStatement@@final OutputStream os=new FileOutputStream(file); @AT@ 37262 @LENGTH@ 51
------DEL Modifier@@final @AT@ 37262 @LENGTH@ 5
------DEL SimpleType@@OutputStream @AT@ 37268 @LENGTH@ 12
---DEL TryStatement@@try {  PatchXml.marshal(os,rollbackPatch);}  finally {  IoUtils.safeClose(os);} @AT@ 37326 @LENGTH@ 135
------DEL Block@@FinallyBody:{  IoUtils.safeClose(os);} @AT@ 37407 @LENGTH@ 54
---------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(os) @AT@ 37425 @LENGTH@ 22
------------DEL MethodInvocation@@IoUtils.safeClose(os) @AT@ 37425 @LENGTH@ 21
---------------DEL SimpleName@@Name:IoUtils @AT@ 37425 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:safeClose:[os] @AT@ 37433 @LENGTH@ 13
------------------DEL SimpleName@@os @AT@ 37443 @LENGTH@ 2


UPD ReturnStatement@@ConditionalExpression:filter != null ? filter.accept(camelContext) : true @TO@ InfixExpression:filter == null || filter.accept(camelContext) @AT@ 1677 @LENGTH@ 59
---INS InfixExpression@@filter == null || filter.accept(camelContext) @TO@ ReturnStatement@@ConditionalExpression:filter != null ? filter.accept(camelContext) : true @AT@ 1676 @LENGTH@ 45
------INS InfixExpression@@filter == null @TO@ InfixExpression@@filter == null || filter.accept(camelContext) @AT@ 1676 @LENGTH@ 14
---------MOV SimpleName@@filter @TO@ InfixExpression@@filter == null @AT@ 1684 @LENGTH@ 6
---------MOV Operator@@!= @TO@ InfixExpression@@filter == null @AT@ 1690 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@filter == null @AT@ 1694 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@filter == null || filter.accept(camelContext) @AT@ 1690 @LENGTH@ 2
------MOV MethodInvocation@@filter.accept(camelContext) @TO@ InfixExpression@@filter == null || filter.accept(camelContext) @AT@ 1701 @LENGTH@ 27
---DEL ConditionalExpression@@filter != null ? filter.accept(camelContext) : true @AT@ 1684 @LENGTH@ 51
------DEL InfixExpression@@filter != null @AT@ 1684 @LENGTH@ 14
------DEL BooleanLiteral@@true @AT@ 1731 @LENGTH@ 4


UPD TypeDeclaration@@[public]LogoutHandlerTests, TestCase @TO@ [public]LogoutHandlerTests,  @AT@ 490 @LENGTH@ 1145
---DEL SimpleType@@TestCase @AT@ 530 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:name=new JavaType(newName.getFullyQualifiedTypeName(),newName.getEnclosingType(),newName.getArray(),newName.getDataType(),newName.getArgName(),newName.getParameters()) @TO@ Assignment:name=new JavaType(newName.getFullyQualifiedTypeName(),newName.getEnclosingType(),newName.getArray(),newName.getDataType(),newName.getArgName(),newName.getParameters(),name.getModule()) @AT@ 6510 @LENGTH@ 207
---UPD Assignment@@name=new JavaType(newName.getFullyQualifiedTypeName(),newName.getEnclosingType(),newName.getArray(),newName.getDataType(),newName.getArgName(),newName.getParameters()) @TO@ name=new JavaType(newName.getFullyQualifiedTypeName(),newName.getEnclosingType(),newName.getArray(),newName.getDataType(),newName.getArgName(),newName.getParameters(),name.getModule()) @AT@ 6510 @LENGTH@ 206
------UPD ClassInstanceCreation@@JavaType[newName.getFullyQualifiedTypeName(), newName.getEnclosingType(), newName.getArray(), newName.getDataType(), newName.getArgName(), newName.getParameters()] @TO@ JavaType[newName.getFullyQualifiedTypeName(), newName.getEnclosingType(), newName.getArray(), newName.getDataType(), newName.getArgName(), newName.getParameters(), name.getModule()] @AT@ 6525 @LENGTH@ 191
---------INS MethodInvocation@@name.getModule() @TO@ ClassInstanceCreation@@JavaType[newName.getFullyQualifiedTypeName(), newName.getEnclosingType(), newName.getArray(), newName.getDataType(), newName.getArgName(), newName.getParameters()] @AT@ 6717 @LENGTH@ 16
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.getModule() @AT@ 6717 @LENGTH@ 4
------------INS SimpleName@@MethodName:getModule:[] @TO@ MethodInvocation@@name.getModule() @AT@ 6722 @LENGTH@ 11


UPD TypeDeclaration@@[public]TestingAuthenticationProviderTests, TestCase @TO@ [public]TestingAuthenticationProviderTests,  @AT@ 1134 @LENGTH@ 991
---DEL SimpleType@@TestCase @AT@ 1190 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:prepareArchive, Archive a,  @TO@ public, void, MethodName:prepareArchive, Archive<?> a,  @AT@ 1468 @LENGTH@ 119
---UPD SingleVariableDeclaration@@Archive a @TO@ Archive<?> a @AT@ 1495 @LENGTH@ 9
------DEL SimpleType@@Archive @AT@ 1495 @LENGTH@ 7
------INS ParameterizedType@@Archive<?> @TO@ SingleVariableDeclaration@@Archive a @AT@ 1495 @LENGTH@ 10
---------INS SimpleType@@Archive @TO@ ParameterizedType@@Archive<?> @AT@ 1495 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Archive<?> @AT@ 1503 @LENGTH@ 1


UPD TypeDeclaration@@[@UriEndpoint(scheme="language",title="Language",syntax="language:languageName",producerOnly=true,label="core,script"), public]LanguageEndpoint, ResourceEndpoint @TO@ [@UriEndpoint(scheme="language",title="Language",syntax="language:languageName:resourceUri",producerOnly=true,label="core,script"), public]LanguageEndpoint, ResourceEndpoint @AT@ 2223 @LENGTH@ 5377
---UPD NormalAnnotation@@@UriEndpoint(scheme="language",title="Language",syntax="language:languageName",producerOnly=true,label="core,script") @TO@ @UriEndpoint(scheme="language",title="Language",syntax="language:languageName:resourceUri",producerOnly=true,label="core,script") @AT@ 2223 @LENGTH@ 131


UPD MethodDeclaration@@Set<V>, MethodName:rangeByLex, RedisZSetCommands.Range range,  @TO@ Set<V>, MethodName:rangeByLex, Range range,  @AT@ 1695 @LENGTH@ 42
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1706 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1706 @LENGTH@ 23


UPD MethodDeclaration@@public, voidMethodName:DeleteZipFileOnCompletion, File fileToDelete,  @TO@ voidMethodName:DeleteZipFileOnCompletion, File fileToDelete,  @AT@ 9054 @LENGTH@ 109
---DEL Modifier@@public @AT@ 9054 @LENGTH@ 6


UPD TryStatement@@try {  StompFrame frame=subscribeConnection.receive();  latch.countDown();} catch (Exception e) {  e.printStackTrace();  break;} @TO@ try {  StompFrame frame=subscribeConnection.receive();  frame.contentAsString().startsWith("test message ");  latch.countDown();} catch (Exception e) {  e.printStackTrace();  break;} @AT@ 2288 @LENGTH@ 264
---INS ExpressionStatement@@MethodInvocation:frame.contentAsString().startsWith("test message ") @TO@ TryStatement@@try {  StompFrame frame=subscribeConnection.receive();  latch.countDown();} catch (Exception e) {  e.printStackTrace();  break;} @AT@ 2392 @LENGTH@ 52
------INS MethodInvocation@@frame.contentAsString().startsWith("test message ") @TO@ ExpressionStatement@@MethodInvocation:frame.contentAsString().startsWith("test message ") @AT@ 2392 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:contentAsString:[] @TO@ MethodInvocation@@frame.contentAsString().startsWith("test message ") @AT@ 2392 @LENGTH@ 23
---------INS SimpleName@@Name:frame @TO@ MethodInvocation@@frame.contentAsString().startsWith("test message ") @AT@ 2392 @LENGTH@ 5
---------INS SimpleName@@MethodName:startsWith:["test message "] @TO@ MethodInvocation@@frame.contentAsString().startsWith("test message ") @AT@ 2416 @LENGTH@ 27
------------INS StringLiteral@@"test message " @TO@ SimpleName@@MethodName:startsWith:["test message "] @AT@ 2427 @LENGTH@ 15


UPD MethodDeclaration@@public, WebSocket, MethodName:newInstance, HttpServletRequest request, String protocol, NodeSynchronization sync, WebsocketConsumer consumer,  @TO@ public, DefaultWebsocket, MethodName:newInstance, ServletUpgradeRequest request, String protocol, NodeSynchronization sync, WebsocketConsumer consumer,  @AT@ 1113 @LENGTH@ 188
---UPD SimpleType@@WebSocket @TO@ DefaultWebsocket @AT@ 1120 @LENGTH@ 9
---UPD SingleVariableDeclaration@@HttpServletRequest request @TO@ ServletUpgradeRequest request @AT@ 1142 @LENGTH@ 26
------UPD SimpleType@@HttpServletRequest @TO@ ServletUpgradeRequest @AT@ 1142 @LENGTH@ 18


UPD EnumDeclaration@@[public, static]MatchType,  @TO@ [public]MatchType,  @AT@ 20082 @LENGTH@ 69
---DEL Modifier@@static @AT@ 20089 @LENGTH@ 6


UPD TryStatement@@try {  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);  stmt=dbConn.createStatement();  String s="select txn_id from TXNS where " + "txn_id not in (select tc_txnid from TXN_COMPONENTS) and " + "txn_state = '" + TXN_ABORTED + "'";  LOG.debug("Going to execute query <" + s + ">");  rs=stmt.executeQuery(s);  List<Long> txnids=new ArrayList<>();  while (rs.next())   txnids.add(rs.getLong(1));  close(rs);  if (txnids.size() <= 0) {    return;  }  List<String> queries=new ArrayList<String>();  StringBuilder prefix=new StringBuilder();  StringBuilder suffix=new StringBuilder();  prefix.append("delete from TXNS where ");  suffix.append("");  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,txnids,"txn_id",false,false);  for (  String query : queries) {    LOG.debug("Going to execute update <" + query + ">");    int rc=stmt.executeUpdate(query);    LOG.info("Removed " + rc + "  empty Aborted transactions from TXNS");  }  LOG.info("Aborted transactions removed from TXNS: " + txnids);  LOG.debug("Going to commit");  dbConn.commit();} catch (SQLException e) {  LOG.error("Unable to delete from txns table " + e.getMessage());  LOG.debug("Going to rollback");  rollbackDBConn(dbConn);  checkRetryable(dbConn,e,"cleanEmptyAbortedTxns");  throw new MetaException("Unable to connect to transaction database " + StringUtils.stringifyException(e));} finally {  close(rs,stmt,dbConn);} @TO@ try {  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);  stmt=dbConn.createStatement();  String s="select txn_id from TXNS where " + "txn_id not in (select tc_txnid from TXN_COMPONENTS) and " + "txn_state = '" + TXN_ABORTED + "'";  LOG.debug("Going to execute query <" + s + ">");  rs=stmt.executeQuery(s);  List<Long> txnids=new ArrayList<>();  while (rs.next())   txnids.add(rs.getLong(1));  close(rs);  if (txnids.size() <= 0) {    return;  }  Collections.sort(txnids);  List<String> queries=new ArrayList<String>();  StringBuilder prefix=new StringBuilder();  StringBuilder suffix=new StringBuilder();  prefix.append("delete from TXNS where ");  suffix.append("");  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,txnids,"txn_id",false,false);  for (  String query : queries) {    LOG.debug("Going to execute update <" + query + ">");    int rc=stmt.executeUpdate(query);    LOG.info("Removed " + rc + "  empty Aborted transactions from TXNS");  }  LOG.info("Aborted transactions removed from TXNS: " + txnids);  LOG.debug("Going to commit");  dbConn.commit();} catch (SQLException e) {  LOG.error("Unable to delete from txns table " + e.getMessage());  LOG.debug("Going to rollback");  rollbackDBConn(dbConn);  checkRetryable(dbConn,e,"cleanEmptyAbortedTxns");  throw new MetaException("Unable to connect to transaction database " + StringUtils.stringifyException(e));} finally {  close(rs,stmt,dbConn);} @AT@ 18329 @LENGTH@ 1828
---INS ExpressionStatement@@MethodInvocation:Collections.sort(txnids) @TO@ TryStatement@@try {  dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);  stmt=dbConn.createStatement();  String s="select txn_id from TXNS where " + "txn_id not in (select tc_txnid from TXN_COMPONENTS) and " + "txn_state = '" + TXN_ABORTED + "'";  LOG.debug("Going to execute query <" + s + ">");  rs=stmt.executeQuery(s);  List<Long> txnids=new ArrayList<>();  while (rs.next())   txnids.add(rs.getLong(1));  close(rs);  if (txnids.size() <= 0) {    return;  }  List<String> queries=new ArrayList<String>();  StringBuilder prefix=new StringBuilder();  StringBuilder suffix=new StringBuilder();  prefix.append("delete from TXNS where ");  suffix.append("");  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,txnids,"txn_id",false,false);  for (  String query : queries) {    LOG.debug("Going to execute update <" + query + ">");    int rc=stmt.executeUpdate(query);    LOG.info("Removed " + rc + "  empty Aborted transactions from TXNS");  }  LOG.info("Aborted transactions removed from TXNS: " + txnids);  LOG.debug("Going to commit");  dbConn.commit();} catch (SQLException e) {  LOG.error("Unable to delete from txns table " + e.getMessage());  LOG.debug("Going to rollback");  rollbackDBConn(dbConn);  checkRetryable(dbConn,e,"cleanEmptyAbortedTxns");  throw new MetaException("Unable to connect to transaction database " + StringUtils.stringifyException(e));} finally {  close(rs,stmt,dbConn);} @AT@ 19055 @LENGTH@ 25
------INS MethodInvocation@@Collections.sort(txnids) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(txnids) @AT@ 19055 @LENGTH@ 24
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(txnids) @AT@ 19055 @LENGTH@ 11
---------INS SimpleName@@MethodName:sort:[txnids] @TO@ MethodInvocation@@Collections.sort(txnids) @AT@ 19067 @LENGTH@ 12
------------INS SimpleName@@txnids @TO@ SimpleName@@MethodName:sort:[txnids] @AT@ 19072 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:init,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), public]QueryIntegrationTest, MultiDriverTestClass @AT@ 2069 @LENGTH@ 51
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 2069 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 2076 @LENGTH@ 4
---INS SimpleName@@MethodName:init @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 2081 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:clearDatabase() @TO@ MethodDeclaration@@public, void, MethodName:init,  @AT@ 2098 @LENGTH@ 16
------INS MethodInvocation@@MethodName:clearDatabase:[] @TO@ ExpressionStatement@@MethodInvocation:clearDatabase() @AT@ 2098 @LENGTH@ 15


UPD Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ElytronInterceptorFactory(policyContextID),InterceptorOrder.View.SECURITY_CONTEXT);} @TO@ ThenBody:{  final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID);  elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority));} @AT@ 15598 @LENGTH@ 176
---UPD ExpressionStatement@@MethodInvocation:configuration.addTimeoutViewInterceptor(new ElytronInterceptorFactory(policyContextID),InterceptorOrder.View.SECURITY_CONTEXT) @TO@ MethodInvocation:interceptorFactories.put(InterceptorOrder.View.SECURITY_CONTEXT,SecurityDomainInterceptorFactory.INSTANCE) @AT@ 15624 @LENGTH@ 128
---INS VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID); @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ElytronInterceptorFactory(policyContextID),InterceptorOrder.View.SECURITY_CONTEXT);} @AT@ 15905 @LENGTH@ 121
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID); @AT@ 15905 @LENGTH@ 5
------INS ParameterizedType@@HashMap<Integer,InterceptorFactory> @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID); @AT@ 15911 @LENGTH@ 36
---------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 15911 @LENGTH@ 7
---------INS SimpleType@@Integer @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 15919 @LENGTH@ 7
---------INS SimpleType@@InterceptorFactory @TO@ ParameterizedType@@HashMap<Integer,InterceptorFactory> @AT@ 15928 @LENGTH@ 18
------INS VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID) @TO@ VariableDeclarationStatement@@final HashMap<Integer,InterceptorFactory> elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID); @AT@ 15948 @LENGTH@ 77
---------INS SimpleName@@elytronInterceptorFactories @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID) @AT@ 15948 @LENGTH@ 27
---------INS MethodInvocation@@getElytronInterceptorFactories(policyContextID) @TO@ VariableDeclarationFragment@@elytronInterceptorFactories=getElytronInterceptorFactories(policyContextID) @AT@ 15978 @LENGTH@ 47
------------INS SimpleName@@MethodName:getElytronInterceptorFactories:[policyContextID] @TO@ MethodInvocation@@getElytronInterceptorFactories(policyContextID) @AT@ 15978 @LENGTH@ 47
---------------INS SimpleName@@policyContextID @TO@ SimpleName@@MethodName:getElytronInterceptorFactories:[policyContextID] @AT@ 16009 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)) @TO@ Block@@ThenBody:{  configuration.addTimeoutViewInterceptor(new ElytronInterceptorFactory(policyContextID),InterceptorOrder.View.SECURITY_CONTEXT);} @AT@ 16051 @LENGTH@ 155
------INS MethodInvocation@@elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)) @TO@ ExpressionStatement@@MethodInvocation:elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)) @AT@ 16051 @LENGTH@ 154
---------INS SimpleName@@Name:elytronInterceptorFactories @TO@ MethodInvocation@@elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)) @AT@ 16051 @LENGTH@ 27
---------INS SimpleName@@MethodName:forEach:[(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)] @TO@ MethodInvocation@@elytronInterceptorFactories.forEach((priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)) @AT@ 16079 @LENGTH@ 126
------------INS LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @TO@ SimpleName@@MethodName:forEach:[(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority)] @AT@ 16087 @LENGTH@ 117
---------------INS VariableDeclarationFragment@@priority @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @AT@ 16088 @LENGTH@ 8
------------------INS SimpleName@@priority @TO@ VariableDeclarationFragment@@priority @AT@ 16088 @LENGTH@ 8
---------------INS VariableDeclarationFragment@@elytronInterceptorFactory @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @AT@ 16098 @LENGTH@ 25
------------------INS SimpleName@@elytronInterceptorFactory @TO@ VariableDeclarationFragment@@elytronInterceptorFactory @AT@ 16098 @LENGTH@ 25
---------------INS MethodInvocation@@configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @TO@ LambdaExpression@@(priority,elytronInterceptorFactory) -> configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @AT@ 16128 @LENGTH@ 76
------------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @AT@ 16128 @LENGTH@ 13
------------------INS SimpleName@@MethodName:addTimeoutViewInterceptor:[elytronInterceptorFactory, priority] @TO@ MethodInvocation@@configuration.addTimeoutViewInterceptor(elytronInterceptorFactory,priority) @AT@ 16142 @LENGTH@ 62
---------------------INS SimpleName@@elytronInterceptorFactory @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[elytronInterceptorFactory, priority] @AT@ 16168 @LENGTH@ 25
---------------------INS SimpleName@@priority @TO@ SimpleName@@MethodName:addTimeoutViewInterceptor:[elytronInterceptorFactory, priority] @AT@ 16195 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication()) @TO@ MethodInvocation:assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo(beforeAuth) @AT@ 3468 @LENGTH@ 96
---UPD MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication()) @TO@ assertThat(SecurityContextHolder.getContext().getAuthentication()).isEqualTo(beforeAuth) @AT@ 3468 @LENGTH@ 95
------DEL SimpleName@@MethodName:assertThat:[SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication()] @AT@ 3468 @LENGTH@ 95
---------DEL MethodInvocation@@SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication() @AT@ 3479 @LENGTH@ 83
------------DEL MethodInvocation@@MethodName:isEqualTo:[beforeAuth] @AT@ 3479 @LENGTH@ 56
---------------DEL SimpleName@@beforeAuth @AT@ 3524 @LENGTH@ 10
------INS MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication()) @AT@ 3505 @LENGTH@ 66
---------INS MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[SecurityContextHolder.getContext().getAuthentication()] @AT@ 3516 @LENGTH@ 54
------------MOV MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3479 @LENGTH@ 34
------------MOV SimpleName@@Name:SecurityContextHolder @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3479 @LENGTH@ 21
------------MOV SimpleName@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@SecurityContextHolder.getContext().getAuthentication() @AT@ 3543 @LENGTH@ 19
------INS SimpleName@@MethodName:isEqualTo:[beforeAuth] @TO@ MethodInvocation@@assertThat(SecurityContextHolder.getContext().isEqualTo(beforeAuth).getAuthentication()) @AT@ 3572 @LENGTH@ 21
---------INS SimpleName@@beforeAuth @TO@ SimpleName@@MethodName:isEqualTo:[beforeAuth] @AT@ 3582 @LENGTH@ 10


UPD SwitchStatement@@switch (taskDisplay.taskState) {case INITIALIZED:case QUEUED:  assertNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case RUNNING:assertNotNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case FINISHED:assertNotNull(taskDisplay.getBeginTime());assertNotNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());break;case UNKNOWN:default :fail("unknown task status: " + taskDisplay);} @TO@ switch (taskDisplay.taskState) {case INITIALIZED:case QUEUED:  assertNull(taskDisplay.getExternalHandle());assertNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case RUNNING:if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {assertNotNull(taskDisplay.getExternalHandle());}assertNotNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case FINISHED:if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {assertNotNull(taskDisplay.getExternalHandle());}assertNotNull(taskDisplay.getBeginTime());assertNotNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());break;case UNKNOWN:default :fail("unknown task status: " + taskDisplay);} @AT@ 26501 @LENGTH@ 944
---INS ExpressionStatement@@MethodInvocation:assertNull(taskDisplay.getExternalHandle()) @TO@ SwitchStatement@@switch (taskDisplay.taskState) {case INITIALIZED:case QUEUED:  assertNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case RUNNING:assertNotNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case FINISHED:assertNotNull(taskDisplay.getBeginTime());assertNotNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());break;case UNKNOWN:default :fail("unknown task status: " + taskDisplay);} @AT@ 26644 @LENGTH@ 44
------INS MethodInvocation@@assertNull(taskDisplay.getExternalHandle()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(taskDisplay.getExternalHandle()) @AT@ 26644 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertNull:[taskDisplay.getExternalHandle()] @TO@ MethodInvocation@@assertNull(taskDisplay.getExternalHandle()) @AT@ 26644 @LENGTH@ 43
------------INS MethodInvocation@@taskDisplay.getExternalHandle() @TO@ SimpleName@@MethodName:assertNull:[taskDisplay.getExternalHandle()] @AT@ 26655 @LENGTH@ 31
---------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 26655 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getExternalHandle:[] @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 26667 @LENGTH@ 19
---INS IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @TO@ SwitchStatement@@switch (taskDisplay.taskState) {case INITIALIZED:case QUEUED:  assertNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case RUNNING:assertNotNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case FINISHED:assertNotNull(taskDisplay.getBeginTime());assertNotNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());break;case UNKNOWN:default :fail("unknown task status: " + taskDisplay);} @AT@ 26989 @LENGTH@ 178
------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @TO@ IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 26993 @LENGTH@ 99
---------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 26993 @LENGTH@ 45
------------INS MethodInvocation@@taskDisplay.getTaskType() @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 26993 @LENGTH@ 25
---------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 26993 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTaskType:[] @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27005 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 27018 @LENGTH@ 2
------------INS QualifiedName@@StageType.MAPRED @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 27022 @LENGTH@ 16
---------------INS SimpleName@@StageType @TO@ QualifiedName@@StageType.MAPRED @AT@ 27022 @LENGTH@ 9
---------------INS SimpleName@@MAPRED @TO@ QualifiedName@@StageType.MAPRED @AT@ 27032 @LENGTH@ 6
---------INS Operator@@|| @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27038 @LENGTH@ 2
---------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27042 @LENGTH@ 50
------------INS MethodInvocation@@taskDisplay.getTaskType() @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27042 @LENGTH@ 25
---------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27042 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTaskType:[] @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27054 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27067 @LENGTH@ 2
------------INS QualifiedName@@StageType.MAPREDLOCAL @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27071 @LENGTH@ 21
---------------INS SimpleName@@StageType @TO@ QualifiedName@@StageType.MAPREDLOCAL @AT@ 27071 @LENGTH@ 9
---------------INS SimpleName@@MAPREDLOCAL @TO@ QualifiedName@@StageType.MAPREDLOCAL @AT@ 27081 @LENGTH@ 11
------INS Block@@ThenBody:{  assertNotNull(taskDisplay.getExternalHandle());} @TO@ IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 27094 @LENGTH@ 73
---------INS ExpressionStatement@@MethodInvocation:assertNotNull(taskDisplay.getExternalHandle()) @TO@ Block@@ThenBody:{  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 27108 @LENGTH@ 47
------------INS MethodInvocation@@assertNotNull(taskDisplay.getExternalHandle()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(taskDisplay.getExternalHandle()) @AT@ 27108 @LENGTH@ 46
---------------INS SimpleName@@MethodName:assertNotNull:[taskDisplay.getExternalHandle()] @TO@ MethodInvocation@@assertNotNull(taskDisplay.getExternalHandle()) @AT@ 27108 @LENGTH@ 46
------------------INS MethodInvocation@@taskDisplay.getExternalHandle() @TO@ SimpleName@@MethodName:assertNotNull:[taskDisplay.getExternalHandle()] @AT@ 27122 @LENGTH@ 31
---------------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 27122 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getExternalHandle:[] @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 27134 @LENGTH@ 19
---INS IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @TO@ SwitchStatement@@switch (taskDisplay.taskState) {case INITIALIZED:case QUEUED:  assertNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case RUNNING:assertNotNull(taskDisplay.getBeginTime());assertNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());assertNull(taskDisplay.getErrorMsg());assertNull(taskDisplay.getReturnValue());break;case FINISHED:assertNotNull(taskDisplay.getBeginTime());assertNotNull(taskDisplay.getEndTime());assertNotNull(taskDisplay.getElapsedTime());break;case UNKNOWN:default :fail("unknown task status: " + taskDisplay);} @AT@ 27475 @LENGTH@ 178
------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @TO@ IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 27479 @LENGTH@ 99
---------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27479 @LENGTH@ 45
------------INS MethodInvocation@@taskDisplay.getTaskType() @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 27479 @LENGTH@ 25
---------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27479 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTaskType:[] @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27491 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 27504 @LENGTH@ 2
------------INS QualifiedName@@StageType.MAPRED @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED @AT@ 27508 @LENGTH@ 16
---------------INS SimpleName@@StageType @TO@ QualifiedName@@StageType.MAPRED @AT@ 27508 @LENGTH@ 9
---------------INS SimpleName@@MAPRED @TO@ QualifiedName@@StageType.MAPRED @AT@ 27518 @LENGTH@ 6
---------INS Operator@@|| @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27524 @LENGTH@ 2
---------INS InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27528 @LENGTH@ 50
------------INS MethodInvocation@@taskDisplay.getTaskType() @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27528 @LENGTH@ 25
---------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27528 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTaskType:[] @TO@ MethodInvocation@@taskDisplay.getTaskType() @AT@ 27540 @LENGTH@ 13
------------INS Operator@@== @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27553 @LENGTH@ 2
------------INS QualifiedName@@StageType.MAPREDLOCAL @TO@ InfixExpression@@taskDisplay.getTaskType() == StageType.MAPREDLOCAL @AT@ 27557 @LENGTH@ 21
---------------INS SimpleName@@StageType @TO@ QualifiedName@@StageType.MAPREDLOCAL @AT@ 27557 @LENGTH@ 9
---------------INS SimpleName@@MAPREDLOCAL @TO@ QualifiedName@@StageType.MAPREDLOCAL @AT@ 27567 @LENGTH@ 11
------INS Block@@ThenBody:{  assertNotNull(taskDisplay.getExternalHandle());} @TO@ IfStatement@@if (taskDisplay.getTaskType() == StageType.MAPRED || taskDisplay.getTaskType() == StageType.MAPREDLOCAL) {  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 27580 @LENGTH@ 73
---------INS ExpressionStatement@@MethodInvocation:assertNotNull(taskDisplay.getExternalHandle()) @TO@ Block@@ThenBody:{  assertNotNull(taskDisplay.getExternalHandle());} @AT@ 27594 @LENGTH@ 47
------------INS MethodInvocation@@assertNotNull(taskDisplay.getExternalHandle()) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(taskDisplay.getExternalHandle()) @AT@ 27594 @LENGTH@ 46
---------------INS SimpleName@@MethodName:assertNotNull:[taskDisplay.getExternalHandle()] @TO@ MethodInvocation@@assertNotNull(taskDisplay.getExternalHandle()) @AT@ 27594 @LENGTH@ 46
------------------INS MethodInvocation@@taskDisplay.getExternalHandle() @TO@ SimpleName@@MethodName:assertNotNull:[taskDisplay.getExternalHandle()] @AT@ 27608 @LENGTH@ 31
---------------------INS SimpleName@@Name:taskDisplay @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 27608 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:getExternalHandle:[] @TO@ MethodInvocation@@taskDisplay.getExternalHandle() @AT@ 27620 @LENGTH@ 19


UPD VariableDeclarationStatement@@FilterChainProxy springSecurityFilterChain=null; @TO@ Filter springSecurityFilterChain=null; @AT@ 4837 @LENGTH@ 50
---UPD SimpleType@@FilterChainProxy @TO@ Filter @AT@ 4837 @LENGTH@ 16


UPD IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : resourceModel.get(attribute.getName()).asList()) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @TO@ if (resourceModel.hasDefined(attribute.getName())) {  List<ModelNode> elements=resourceModel.get(attribute.getName()).asList();  if (elements.isEmpty()) {    writer.writeEmptyElement(attribute.getXmlName());  } else {    writer.writeStartElement(attribute.getXmlName());    for (    ModelNode element : elements) {      writer.writeStartElement(objectType.getXmlName());      for (      AttributeDefinition valueType : valueTypes) {        valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);      }      writer.writeEndElement();    }    writer.writeEndElement();  }} @AT@ 7855 @LENGTH@ 597
---UPD Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : resourceModel.get(attribute.getName()).asList()) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @TO@ ElseBody:{  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : elements) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @AT@ 7906 @LENGTH@ 546
---INS Block@@ThenBody:{  List<ModelNode> elements=resourceModel.get(attribute.getName()).asList();  if (elements.isEmpty()) {    writer.writeEmptyElement(attribute.getXmlName());  } else {    writer.writeStartElement(attribute.getXmlName());    for (    ModelNode element : elements) {      writer.writeStartElement(objectType.getXmlName());      for (      AttributeDefinition valueType : valueTypes) {        valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);      }      writer.writeEndElement();    }    writer.writeEndElement();  }} @TO@ IfStatement@@if (resourceModel.hasDefined(attribute.getName())) {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : resourceModel.get(attribute.getName()).asList()) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @AT@ 7930 @LENGTH@ 791
------INS VariableDeclarationStatement@@List<ModelNode> elements=resourceModel.get(attribute.getName()).asList(); @TO@ Block@@ThenBody:{  List<ModelNode> elements=resourceModel.get(attribute.getName()).asList();  if (elements.isEmpty()) {    writer.writeEmptyElement(attribute.getXmlName());  } else {    writer.writeStartElement(attribute.getXmlName());    for (    ModelNode element : elements) {      writer.writeStartElement(objectType.getXmlName());      for (      AttributeDefinition valueType : valueTypes) {        valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);      }      writer.writeEndElement();    }    writer.writeEndElement();  }} @AT@ 7948 @LENGTH@ 75
---------INS ParameterizedType@@List<ModelNode> @TO@ VariableDeclarationStatement@@List<ModelNode> elements=resourceModel.get(attribute.getName()).asList(); @AT@ 7948 @LENGTH@ 15
------------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 7948 @LENGTH@ 4
------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 7953 @LENGTH@ 9
---------INS VariableDeclarationFragment@@elements=resourceModel.get(attribute.getName()).asList() @TO@ VariableDeclarationStatement@@List<ModelNode> elements=resourceModel.get(attribute.getName()).asList(); @AT@ 7964 @LENGTH@ 58
------------INS SimpleName@@elements @TO@ VariableDeclarationFragment@@elements=resourceModel.get(attribute.getName()).asList() @AT@ 7964 @LENGTH@ 8
------------MOV MethodInvocation@@resourceModel.get(attribute.getName()).asList() @TO@ VariableDeclarationFragment@@elements=resourceModel.get(attribute.getName()).asList() @AT@ 8014 @LENGTH@ 47
------INS IfStatement@@if (elements.isEmpty()) {  writer.writeEmptyElement(attribute.getXmlName());} else {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : elements) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @TO@ Block@@ThenBody:{  List<ModelNode> elements=resourceModel.get(attribute.getName()).asList();  if (elements.isEmpty()) {    writer.writeEmptyElement(attribute.getXmlName());  } else {    writer.writeStartElement(attribute.getXmlName());    for (    ModelNode element : elements) {      writer.writeStartElement(objectType.getXmlName());      for (      AttributeDefinition valueType : valueTypes) {        valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);      }      writer.writeEndElement();    }    writer.writeEndElement();  }} @AT@ 8040 @LENGTH@ 667
---------MOV Block@@ThenBody:{  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : resourceModel.get(attribute.getName()).asList()) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @TO@ IfStatement@@if (elements.isEmpty()) {  writer.writeEmptyElement(attribute.getXmlName());} else {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : elements) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @AT@ 7906 @LENGTH@ 546
------------UPD EnhancedForStatement@@for (ModelNode element : resourceModel.get(attribute.getName()).asList()) {  writer.writeStartElement(objectType.getXmlName());  for (  AttributeDefinition valueType : valueTypes) {    valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);  }  writer.writeEndElement();} @TO@ for (ModelNode element : elements) {  writer.writeStartElement(objectType.getXmlName());  for (  AttributeDefinition valueType : valueTypes) {    valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);  }  writer.writeEndElement();} @AT@ 7990 @LENGTH@ 406
---------------INS SimpleName@@elements @TO@ EnhancedForStatement@@for (ModelNode element : resourceModel.get(attribute.getName()).asList()) {  writer.writeStartElement(objectType.getXmlName());  for (  AttributeDefinition valueType : valueTypes) {    valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);  }  writer.writeEndElement();} @AT@ 8276 @LENGTH@ 8
---------INS MethodInvocation@@elements.isEmpty() @TO@ IfStatement@@if (elements.isEmpty()) {  writer.writeEmptyElement(attribute.getXmlName());} else {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : elements) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @AT@ 8044 @LENGTH@ 18
------------INS SimpleName@@Name:elements @TO@ MethodInvocation@@elements.isEmpty() @AT@ 8044 @LENGTH@ 8
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@elements.isEmpty() @AT@ 8053 @LENGTH@ 9
---------INS Block@@ThenBody:{  writer.writeEmptyElement(attribute.getXmlName());} @TO@ IfStatement@@if (elements.isEmpty()) {  writer.writeEmptyElement(attribute.getXmlName());} else {  writer.writeStartElement(attribute.getXmlName());  for (  ModelNode element : elements) {    writer.writeStartElement(objectType.getXmlName());    for (    AttributeDefinition valueType : valueTypes) {      valueType.getAttributeMarshaller().marshall(valueType,element,false,writer);    }    writer.writeEndElement();  }  writer.writeEndElement();} @AT@ 8064 @LENGTH@ 89
------------INS ExpressionStatement@@MethodInvocation:writer.writeEmptyElement(attribute.getXmlName()) @TO@ Block@@ThenBody:{  writer.writeEmptyElement(attribute.getXmlName());} @AT@ 8086 @LENGTH@ 49
---------------INS MethodInvocation@@writer.writeEmptyElement(attribute.getXmlName()) @TO@ ExpressionStatement@@MethodInvocation:writer.writeEmptyElement(attribute.getXmlName()) @AT@ 8086 @LENGTH@ 48
------------------INS SimpleName@@Name:writer @TO@ MethodInvocation@@writer.writeEmptyElement(attribute.getXmlName()) @AT@ 8086 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeEmptyElement:[attribute.getXmlName()] @TO@ MethodInvocation@@writer.writeEmptyElement(attribute.getXmlName()) @AT@ 8093 @LENGTH@ 41
---------------------INS MethodInvocation@@attribute.getXmlName() @TO@ SimpleName@@MethodName:writeEmptyElement:[attribute.getXmlName()] @AT@ 8111 @LENGTH@ 22
------------------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 8111 @LENGTH@ 9
------------------------INS SimpleName@@MethodName:getXmlName:[] @TO@ MethodInvocation@@attribute.getXmlName() @AT@ 8121 @LENGTH@ 12


INS MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @TO@ TypeDeclaration@@[public]FractionListTest,  @AT@ 2269 @LENGTH@ 533
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2269 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2276 @LENGTH@ 4
---INS SimpleName@@MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2281 @LENGTH@ 57
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2348 @LENGTH@ 9
---INS VariableDeclarationStatement@@Collection<FractionDescriptor> descriptors=FractionList.get().getFractionDescriptors(); @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2368 @LENGTH@ 89
------INS ParameterizedType@@Collection<FractionDescriptor> @TO@ VariableDeclarationStatement@@Collection<FractionDescriptor> descriptors=FractionList.get().getFractionDescriptors(); @AT@ 2368 @LENGTH@ 30
---------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<FractionDescriptor> @AT@ 2368 @LENGTH@ 10
---------INS SimpleType@@FractionDescriptor @TO@ ParameterizedType@@Collection<FractionDescriptor> @AT@ 2379 @LENGTH@ 18
------INS VariableDeclarationFragment@@descriptors=FractionList.get().getFractionDescriptors() @TO@ VariableDeclarationStatement@@Collection<FractionDescriptor> descriptors=FractionList.get().getFractionDescriptors(); @AT@ 2399 @LENGTH@ 57
---------INS SimpleName@@descriptors @TO@ VariableDeclarationFragment@@descriptors=FractionList.get().getFractionDescriptors() @AT@ 2399 @LENGTH@ 11
---------INS MethodInvocation@@FractionList.get().getFractionDescriptors() @TO@ VariableDeclarationFragment@@descriptors=FractionList.get().getFractionDescriptors() @AT@ 2413 @LENGTH@ 43
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@FractionList.get().getFractionDescriptors() @AT@ 2413 @LENGTH@ 18
------------INS SimpleName@@Name:FractionList @TO@ MethodInvocation@@FractionList.get().getFractionDescriptors() @AT@ 2413 @LENGTH@ 12
------------INS SimpleName@@MethodName:getFractionDescriptors:[] @TO@ MethodInvocation@@FractionList.get().getFractionDescriptors() @AT@ 2432 @LENGTH@ 24
---INS ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("groupId").isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2466 @LENGTH@ 58
------INS MethodInvocation@@assertThat(descriptors).onProperty("groupId").isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("groupId").isNotNull() @AT@ 2466 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:onProperty:["groupId"] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("groupId").isNotNull() @AT@ 2466 @LENGTH@ 45
------------INS StringLiteral@@"groupId" @TO@ MethodInvocation@@MethodName:onProperty:["groupId"] @AT@ 2501 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:assertThat:[descriptors] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("groupId").isNotNull() @AT@ 2466 @LENGTH@ 23
------------INS SimpleName@@descriptors @TO@ MethodInvocation@@MethodName:assertThat:[descriptors] @AT@ 2477 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("groupId").isNotNull() @AT@ 2512 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("artifactId").isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2533 @LENGTH@ 61
------INS MethodInvocation@@assertThat(descriptors).onProperty("artifactId").isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("artifactId").isNotNull() @AT@ 2533 @LENGTH@ 60
---------INS MethodInvocation@@MethodName:onProperty:["artifactId"] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("artifactId").isNotNull() @AT@ 2533 @LENGTH@ 48
------------INS StringLiteral@@"artifactId" @TO@ MethodInvocation@@MethodName:onProperty:["artifactId"] @AT@ 2568 @LENGTH@ 12
---------INS MethodInvocation@@MethodName:assertThat:[descriptors] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("artifactId").isNotNull() @AT@ 2533 @LENGTH@ 23
------------INS SimpleName@@descriptors @TO@ MethodInvocation@@MethodName:assertThat:[descriptors] @AT@ 2544 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("artifactId").isNotNull() @AT@ 2582 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("version").isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2603 @LENGTH@ 58
------INS MethodInvocation@@assertThat(descriptors).onProperty("version").isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("version").isNotNull() @AT@ 2603 @LENGTH@ 57
---------INS MethodInvocation@@MethodName:onProperty:["version"] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("version").isNotNull() @AT@ 2603 @LENGTH@ 45
------------INS StringLiteral@@"version" @TO@ MethodInvocation@@MethodName:onProperty:["version"] @AT@ 2638 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:assertThat:[descriptors] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("version").isNotNull() @AT@ 2603 @LENGTH@ 23
------------INS SimpleName@@descriptors @TO@ MethodInvocation@@MethodName:assertThat:[descriptors] @AT@ 2614 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("version").isNotNull() @AT@ 2649 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("name").isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2670 @LENGTH@ 55
------INS MethodInvocation@@assertThat(descriptors).onProperty("name").isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("name").isNotNull() @AT@ 2670 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:onProperty:["name"] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("name").isNotNull() @AT@ 2670 @LENGTH@ 42
------------INS StringLiteral@@"name" @TO@ MethodInvocation@@MethodName:onProperty:["name"] @AT@ 2705 @LENGTH@ 6
---------INS MethodInvocation@@MethodName:assertThat:[descriptors] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("name").isNotNull() @AT@ 2670 @LENGTH@ 23
------------INS SimpleName@@descriptors @TO@ MethodInvocation@@MethodName:assertThat:[descriptors] @AT@ 2681 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("name").isNotNull() @AT@ 2713 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("description").isNotNull() @TO@ MethodDeclaration@@public, void, MethodName:testGroupIdAndArtifactIdAndNameAndDescriptionAreNeverNull, Exception,  @AT@ 2734 @LENGTH@ 62
------INS MethodInvocation@@assertThat(descriptors).onProperty("description").isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(descriptors).onProperty("description").isNotNull() @AT@ 2734 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:onProperty:["description"] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("description").isNotNull() @AT@ 2734 @LENGTH@ 49
------------INS StringLiteral@@"description" @TO@ MethodInvocation@@MethodName:onProperty:["description"] @AT@ 2769 @LENGTH@ 13
---------INS MethodInvocation@@MethodName:assertThat:[descriptors] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("description").isNotNull() @AT@ 2734 @LENGTH@ 23
------------INS SimpleName@@descriptors @TO@ MethodInvocation@@MethodName:assertThat:[descriptors] @AT@ 2745 @LENGTH@ 11
---------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(descriptors).onProperty("description").isNotNull() @AT@ 2784 @LENGTH@ 11


UPD FieldDeclaration@@private, final, String, [CUSTOM_DOMAIN_NAME="custom"] @TO@ private, static, final, String, [CUSTOM_DOMAIN_NAME="custom"] @AT@ 1134 @LENGTH@ 49
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, String, [CUSTOM_DOMAIN_NAME="custom"] @AT@ 1144 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody("received [" + exchange.getIn().getBody() + "] as an order id = "+ exchange.getIn().getHeader("id")) @TO@ MethodInvocation:exchange.getOut().setBody("received [" + exchange.getIn().getBody(String.class) + "] as an order id = "+ exchange.getIn().getHeader("id")) @AT@ 1570 @LENGTH@ 201
---UPD MethodInvocation@@exchange.getOut().setBody("received [" + exchange.getIn().getBody() + "] as an order id = "+ exchange.getIn().getHeader("id")) @TO@ exchange.getOut().setBody("received [" + exchange.getIn().getBody(String.class) + "] as an order id = "+ exchange.getIn().getHeader("id")) @AT@ 1570 @LENGTH@ 200
------UPD SimpleName@@MethodName:setBody:["received [" + exchange.getIn().getBody() + "] as an order id = "+ exchange.getIn().getHeader("id")] @TO@ MethodName:setBody:["received [" + exchange.getIn().getBody(String.class) + "] as an order id = "+ exchange.getIn().getHeader("id")] @AT@ 1588 @LENGTH@ 182
---------UPD InfixExpression@@"received [" + exchange.getIn().getBody() + "] as an order id = "+ exchange.getIn().getHeader("id") @TO@ "received [" + exchange.getIn().getBody(String.class) + "] as an order id = "+ exchange.getIn().getHeader("id") @AT@ 1621 @LENGTH@ 148
------------UPD MethodInvocation@@exchange.getIn().getBody() @TO@ exchange.getIn().getBody(String.class) @AT@ 1636 @LENGTH@ 26
---------------UPD SimpleName@@MethodName:getBody:[] @TO@ MethodName:getBody:[String.class] @AT@ 1653 @LENGTH@ 9
------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[] @AT@ 1661 @LENGTH@ 12


UPD SynchronizedStatement@@synchronized (DIGEST) {  DIGEST.reset();  BufferedInputStream bis=new BufferedInputStream(is);  DigestOutputStream dos=new DigestOutputStream(os,DIGEST);  IoUtils.copyStream(bis,dos);  sha1Bytes=DIGEST.digest();} @TO@ synchronized (DIGEST) {  DIGEST.reset();  try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){    IoUtils.copyStream(bis,dos);  }   sha1Bytes=DIGEST.digest();} @AT@ 3920 @LENGTH@ 284
---UPD Block@@SyncBody:{  DIGEST.reset();  BufferedInputStream bis=new BufferedInputStream(is);  DigestOutputStream dos=new DigestOutputStream(os,DIGEST);  IoUtils.copyStream(bis,dos);  sha1Bytes=DIGEST.digest();} @TO@ SyncBody:{  DIGEST.reset();  try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){    IoUtils.copyStream(bis,dos);  }   sha1Bytes=DIGEST.digest();} @AT@ 3942 @LENGTH@ 262
------INS TryStatement@@try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){  IoUtils.copyStream(bis,dos);}  @TO@ Block@@SyncBody:{  DIGEST.reset();  BufferedInputStream bis=new BufferedInputStream(is);  DigestOutputStream dos=new DigestOutputStream(os,DIGEST);  IoUtils.copyStream(bis,dos);  sha1Bytes=DIGEST.digest();} @AT@ 3909 @LENGTH@ 199
---------INS VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(is) @TO@ TryStatement@@try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){  IoUtils.copyStream(bis,dos);}  @AT@ 3914 @LENGTH@ 53
------------INS SimpleType@@BufferedInputStream @TO@ VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(is) @AT@ 3914 @LENGTH@ 19
------------MOV VariableDeclarationFragment@@bis=new BufferedInputStream(is) @TO@ VariableDeclarationExpression@@BufferedInputStream bis=new BufferedInputStream(is) @AT@ 4004 @LENGTH@ 33
---------INS VariableDeclarationExpression@@DigestOutputStream dos=new DigestOutputStream(os,DIGEST) @TO@ TryStatement@@try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){  IoUtils.copyStream(bis,dos);}  @AT@ 3986 @LENGTH@ 59
------------INS SimpleType@@DigestOutputStream @TO@ VariableDeclarationExpression@@DigestOutputStream dos=new DigestOutputStream(os,DIGEST) @AT@ 3986 @LENGTH@ 18
------------MOV VariableDeclarationFragment@@dos=new DigestOutputStream(os,DIGEST) @TO@ VariableDeclarationExpression@@DigestOutputStream dos=new DigestOutputStream(os,DIGEST) @AT@ 4070 @LENGTH@ 40
---------MOV ExpressionStatement@@MethodInvocation:IoUtils.copyStream(bis,dos) @TO@ TryStatement@@try (BufferedInputStream bis=new BufferedInputStream(is);DigestOutputStream dos=new DigestOutputStream(os,DIGEST)){  IoUtils.copyStream(bis,dos);}  @AT@ 4124 @LENGTH@ 29
------DEL VariableDeclarationStatement@@BufferedInputStream bis=new BufferedInputStream(is); @AT@ 3984 @LENGTH@ 54
---------DEL SimpleType@@BufferedInputStream @AT@ 3984 @LENGTH@ 19
------DEL VariableDeclarationStatement@@DigestOutputStream dos=new DigestOutputStream(os,DIGEST); @AT@ 4051 @LENGTH@ 60
---------DEL SimpleType@@DigestOutputStream @AT@ 4051 @LENGTH@ 18


UPD VariableDeclarationStatement@@QueryInfo queryInfo=new QueryInfo(queryIdentifier,"fake_app_id_string","fake_dag_name",1,"fakeUser",new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(),new String[0],null,null,null); @TO@ QueryInfo queryInfo=new QueryInfo(queryIdentifier,"fake_app_id_string","fake_dag_name",1,"fakeUser",new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(),new String[0],null,"fakeUser",null); @AT@ 3673 @LENGTH@ 248
---UPD VariableDeclarationFragment@@queryInfo=new QueryInfo(queryIdentifier,"fake_app_id_string","fake_dag_name",1,"fakeUser",new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(),new String[0],null,null,null) @TO@ queryInfo=new QueryInfo(queryIdentifier,"fake_app_id_string","fake_dag_name",1,"fakeUser",new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(),new String[0],null,"fakeUser",null) @AT@ 3683 @LENGTH@ 237
------UPD ClassInstanceCreation@@QueryInfo[queryIdentifier, "fake_app_id_string", "fake_dag_name", 1, "fakeUser", new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(), new String[0], null, null, null] @TO@ QueryInfo[queryIdentifier, "fake_app_id_string", "fake_dag_name", 1, "fakeUser", new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(), new String[0], null, "fakeUser", null] @AT@ 3703 @LENGTH@ 217
---------INS StringLiteral@@"fakeUser" @TO@ ClassInstanceCreation@@QueryInfo[queryIdentifier, "fake_app_id_string", "fake_dag_name", 1, "fakeUser", new ConcurrentHashMap<String,LlapDaemonProtocolProtos.SourceStateProto>(), new String[0], null, null, null] @AT@ 3909 @LENGTH@ 10
---------DEL NullLiteral@@null @AT@ 3915 @LENGTH@ 4


INS MethodDeclaration@@public, int, MethodName:getOrder,  @TO@ TypeDeclaration@@[public]AuditingEventListener, [ApplicationListener<BeforeConvertEvent<Object>>] @AT@ 2304 @LENGTH@ 40
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2304 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2311 @LENGTH@ 3
---INS SimpleName@@MethodName:getOrder @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2315 @LENGTH@ 8
---INS ReturnStatement@@NumberLiteral:100 @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 2330 @LENGTH@ 11
------INS NumberLiteral@@100 @TO@ ReturnStatement@@NumberLiteral:100 @AT@ 2337 @LENGTH@ 3


UPD TypeDeclaration@@[@Deprecated]CamelMultipartFilter, CamelFilterWrapper @TO@ [@Deprecated, public]CamelMultipartFilter, CamelFilterWrapper @AT@ 951 @LENGTH@ 159
---INS Modifier@@public @TO@ TypeDeclaration@@[@Deprecated]CamelMultipartFilter, CamelFilterWrapper @AT@ 964 @LENGTH@ 6


UPD VariableDeclarationStatement@@final QName name=new QName("http://springframework.org","root","prefix"); @TO@ final QName name=new QName("http://springframework.org","root",""); @AT@ 3749 @LENGTH@ 77
---UPD VariableDeclarationFragment@@name=new QName("http://springframework.org","root","prefix") @TO@ name=new QName("http://springframework.org","root","") @AT@ 3761 @LENGTH@ 64
------UPD ClassInstanceCreation@@QName["http://springframework.org", "root", "prefix"] @TO@ QName["http://springframework.org", "root", ""] @AT@ 3768 @LENGTH@ 57
---------UPD StringLiteral@@"prefix" @TO@ "" @AT@ 3816 @LENGTH@ 8


INS IfStatement@@if (strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS)) {  throw new IllegalArgumentException("Bad strength");} @TO@ MethodDeclaration@@public, voidMethodName:BCryptPasswordEncoder, int strength, SecureRandom random,  @AT@ 1936 @LENGTH@ 154
---INS InfixExpression@@strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @TO@ IfStatement@@if (strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS)) {  throw new IllegalArgumentException("Bad strength");} @AT@ 1940 @LENGTH@ 88
------INS InfixExpression@@strength != -1 @TO@ InfixExpression@@strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @AT@ 1940 @LENGTH@ 14
---------INS SimpleName@@strength @TO@ InfixExpression@@strength != -1 @AT@ 1940 @LENGTH@ 8
---------INS Operator@@!= @TO@ InfixExpression@@strength != -1 @AT@ 1948 @LENGTH@ 2
---------INS PrefixExpression@@-1 @TO@ InfixExpression@@strength != -1 @AT@ 1952 @LENGTH@ 2
------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1952 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1953 @LENGTH@ 1
------INS Operator@@&& @TO@ InfixExpression@@strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @AT@ 1954 @LENGTH@ 2
------INS ParenthesizedExpression@@(strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @TO@ InfixExpression@@strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @AT@ 1958 @LENGTH@ 70
---------INS InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS @TO@ ParenthesizedExpression@@(strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS) @AT@ 1959 @LENGTH@ 68
------------INS InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS @AT@ 1959 @LENGTH@ 32
---------------INS SimpleName@@strength @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS @AT@ 1959 @LENGTH@ 8
---------------INS Operator@@< @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS @AT@ 1967 @LENGTH@ 1
---------------INS QualifiedName@@BCrypt.MIN_LOG_ROUNDS @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS @AT@ 1970 @LENGTH@ 21
------------------INS SimpleName@@BCrypt @TO@ QualifiedName@@BCrypt.MIN_LOG_ROUNDS @AT@ 1970 @LENGTH@ 6
------------------INS SimpleName@@MIN_LOG_ROUNDS @TO@ QualifiedName@@BCrypt.MIN_LOG_ROUNDS @AT@ 1977 @LENGTH@ 14
------------INS Operator@@|| @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS @AT@ 1991 @LENGTH@ 2
------------INS InfixExpression@@strength > BCrypt.MAX_LOG_ROUNDS @TO@ InfixExpression@@strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS @AT@ 1995 @LENGTH@ 32
---------------INS SimpleName@@strength @TO@ InfixExpression@@strength > BCrypt.MAX_LOG_ROUNDS @AT@ 1995 @LENGTH@ 8
---------------INS Operator@@> @TO@ InfixExpression@@strength > BCrypt.MAX_LOG_ROUNDS @AT@ 2003 @LENGTH@ 1
---------------INS QualifiedName@@BCrypt.MAX_LOG_ROUNDS @TO@ InfixExpression@@strength > BCrypt.MAX_LOG_ROUNDS @AT@ 2006 @LENGTH@ 21
------------------INS SimpleName@@BCrypt @TO@ QualifiedName@@BCrypt.MAX_LOG_ROUNDS @AT@ 2006 @LENGTH@ 6
------------------INS SimpleName@@MAX_LOG_ROUNDS @TO@ QualifiedName@@BCrypt.MAX_LOG_ROUNDS @AT@ 2013 @LENGTH@ 14
---INS Block@@ThenBody:{  throw new IllegalArgumentException("Bad strength");} @TO@ IfStatement@@if (strength != -1 && (strength < BCrypt.MIN_LOG_ROUNDS || strength > BCrypt.MAX_LOG_ROUNDS)) {  throw new IllegalArgumentException("Bad strength");} @AT@ 2030 @LENGTH@ 60
------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Bad strength") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Bad strength");} @AT@ 2035 @LENGTH@ 51
---------INS ClassInstanceCreation@@IllegalArgumentException["Bad strength"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Bad strength") @AT@ 2041 @LENGTH@ 44
------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Bad strength"] @AT@ 2041 @LENGTH@ 3
------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Bad strength"] @AT@ 2045 @LENGTH@ 24
------------INS StringLiteral@@"Bad strength" @TO@ ClassInstanceCreation@@IllegalArgumentException["Bad strength"] @AT@ 2070 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @TO@ MethodInvocation:assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class)).isTrue() @AT@ 2727 @LENGTH@ 114
---UPD MethodInvocation@@assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @TO@ assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class)).isTrue() @AT@ 2727 @LENGTH@ 113
------INS MethodInvocation@@MethodName:assertThat:[parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class)] @TO@ MethodInvocation@@assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @AT@ 2686 @LENGTH@ 104
---------INS MethodInvocation@@parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class) @TO@ MethodInvocation@@MethodName:assertThat:[parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class)] @AT@ 2697 @LENGTH@ 92
------------MOV MethodInvocation@@MethodName:parseExpression:["@role.getAttribute() == 'ROLE_A'"] @TO@ MethodInvocation@@parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2738 @LENGTH@ 58
------------MOV SimpleName@@Name:parser @TO@ MethodInvocation@@parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2738 @LENGTH@ 6
------------MOV SimpleName@@MethodName:getValue:[ctx, Boolean.class] @TO@ MethodInvocation@@parser.parseExpression("@role.getAttribute() == 'ROLE_A'").getValue(ctx,Boolean.class) @AT@ 2806 @LENGTH@ 33
------DEL SimpleName@@MethodName:assertThat:[parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)] @AT@ 2727 @LENGTH@ 113
---------DEL MethodInvocation@@parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class) @AT@ 2738 @LENGTH@ 101
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 2738 @LENGTH@ 67
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(parser.parseExpression("@role.getAttribute() == 'ROLE_A'").isTrue().getValue(ctx,Boolean.class)) @AT@ 2791 @LENGTH@ 8


DEL MethodDeclaration@@byte[], MethodName:process, CipherOutputStream cipherOutputStream, ByteArrayOutputStream byteArrayOutputStream, byte[] bytes,  @AT@ 2108 @LENGTH@ 624
---DEL ArrayType@@byte[] @AT@ 2101 @LENGTH@ 6
------DEL PrimitiveType@@byte @AT@ 2101 @LENGTH@ 4
---DEL SimpleName@@MethodName:process @AT@ 2108 @LENGTH@ 7
---DEL SingleVariableDeclaration@@CipherOutputStream cipherOutputStream @AT@ 2116 @LENGTH@ 37
------DEL SimpleType@@CipherOutputStream @AT@ 2116 @LENGTH@ 18
------DEL SimpleName@@cipherOutputStream @AT@ 2135 @LENGTH@ 18
---DEL SingleVariableDeclaration@@ByteArrayOutputStream byteArrayOutputStream @AT@ 2158 @LENGTH@ 43
------DEL SimpleType@@ByteArrayOutputStream @AT@ 2158 @LENGTH@ 21
------DEL SimpleName@@byteArrayOutputStream @AT@ 2180 @LENGTH@ 21
---DEL SingleVariableDeclaration@@byte[] bytes @AT@ 2203 @LENGTH@ 12
------DEL ArrayType@@byte[] @AT@ 2203 @LENGTH@ 6
---------DEL PrimitiveType@@byte @AT@ 2203 @LENGTH@ 4
------DEL SimpleName@@bytes @AT@ 2210 @LENGTH@ 5
---DEL TryStatement@@try {  cipherOutputStream.write(bytes);  cipherOutputStream.close();  return byteArrayOutputStream.toByteArray();} catch (Throwable e) {  try {    cipherOutputStream.close();  } catch (  Throwable e1) {  }  throw new IllegalStateException("unable to encrypt/decrypt",e);} @AT@ 2221 @LENGTH@ 508
------DEL ExpressionStatement@@MethodInvocation:cipherOutputStream.write(bytes) @AT@ 2230 @LENGTH@ 32
---------DEL MethodInvocation@@cipherOutputStream.write(bytes) @AT@ 2230 @LENGTH@ 31
------------DEL SimpleName@@Name:cipherOutputStream @AT@ 2230 @LENGTH@ 18
------------DEL SimpleName@@MethodName:write:[bytes] @AT@ 2249 @LENGTH@ 12
---------------DEL SimpleName@@bytes @AT@ 2255 @LENGTH@ 5
------DEL ExpressionStatement@@MethodInvocation:cipherOutputStream.close() @AT@ 2442 @LENGTH@ 27
---------DEL MethodInvocation@@cipherOutputStream.close() @AT@ 2442 @LENGTH@ 26
------------DEL SimpleName@@Name:cipherOutputStream @AT@ 2442 @LENGTH@ 18
------------DEL SimpleName@@MethodName:close:[] @AT@ 2461 @LENGTH@ 7
------DEL ReturnStatement@@MethodInvocation:byteArrayOutputStream.toByteArray() @AT@ 2473 @LENGTH@ 43
---------DEL MethodInvocation@@byteArrayOutputStream.toByteArray() @AT@ 2480 @LENGTH@ 35
------------DEL SimpleName@@Name:byteArrayOutputStream @AT@ 2480 @LENGTH@ 21
------------DEL SimpleName@@MethodName:toByteArray:[] @AT@ 2502 @LENGTH@ 13
------DEL CatchClause@@catch (Throwable e) {  try {    cipherOutputStream.close();  } catch (  Throwable e1) {  }  throw new IllegalStateException("unable to encrypt/decrypt",e);} @AT@ 2523 @LENGTH@ 206
---------DEL SingleVariableDeclaration@@Throwable e @AT@ 2530 @LENGTH@ 11
------------DEL SimpleType@@Throwable @AT@ 2530 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 2540 @LENGTH@ 1
---------DEL TryStatement@@try {  cipherOutputStream.close();} catch (Throwable e1) {} @AT@ 2548 @LENGTH@ 109
------------DEL ExpressionStatement@@MethodInvocation:cipherOutputStream.close() @AT@ 2594 @LENGTH@ 27
---------------DEL MethodInvocation@@cipherOutputStream.close() @AT@ 2594 @LENGTH@ 26
------------------DEL SimpleName@@Name:cipherOutputStream @AT@ 2594 @LENGTH@ 18
------------------DEL SimpleName@@MethodName:close:[] @AT@ 2613 @LENGTH@ 7
------------DEL CatchClause@@catch (Throwable e1) {} @AT@ 2630 @LENGTH@ 27
---------------DEL SingleVariableDeclaration@@Throwable e1 @AT@ 2637 @LENGTH@ 12
------------------DEL SimpleType@@Throwable @AT@ 2637 @LENGTH@ 9
------------------DEL SimpleName@@e1 @AT@ 2647 @LENGTH@ 2
---------DEL ThrowStatement@@ClassInstanceCreation:new IllegalStateException("unable to encrypt/decrypt",e) @AT@ 2661 @LENGTH@ 64
------------DEL ClassInstanceCreation@@IllegalStateException["unable to encrypt/decrypt", e] @AT@ 2667 @LENGTH@ 57
---------------DEL New@@new @AT@ 2667 @LENGTH@ 3
---------------DEL SimpleType@@IllegalStateException @AT@ 2671 @LENGTH@ 21
---------------DEL StringLiteral@@"unable to encrypt/decrypt" @AT@ 2693 @LENGTH@ 27
---------------DEL SimpleName@@e @AT@ 2722 @LENGTH@ 1


INS VariableDeclarationStatement@@final int originalLength=ctx.getInput().length(); @TO@ MethodDeclaration@@public, void, MethodName:handle, ParsingContext ctx, CommandFormatException,  @AT@ 2694 @LENGTH@ 51
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final int originalLength=ctx.getInput().length(); @AT@ 2694 @LENGTH@ 5
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@final int originalLength=ctx.getInput().length(); @AT@ 2700 @LENGTH@ 3
---INS VariableDeclarationFragment@@originalLength=ctx.getInput().length() @TO@ VariableDeclarationStatement@@final int originalLength=ctx.getInput().length(); @AT@ 2704 @LENGTH@ 40
------INS SimpleName@@originalLength @TO@ VariableDeclarationFragment@@originalLength=ctx.getInput().length() @AT@ 2704 @LENGTH@ 14
------INS MethodInvocation@@ctx.getInput().length() @TO@ VariableDeclarationFragment@@originalLength=ctx.getInput().length() @AT@ 2721 @LENGTH@ 23
---------INS MethodInvocation@@MethodName:getInput:[] @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2721 @LENGTH@ 14
---------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2721 @LENGTH@ 3
---------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2736 @LENGTH@ 8


UPD VariableDeclarationStatement@@RelDataType relType=cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length()); @TO@ RelDataType relType=cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale()); @AT@ 20240 @LENGTH@ 136
---UPD VariableDeclarationFragment@@relType=cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length()) @TO@ relType=cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale()) @AT@ 20252 @LENGTH@ 123
------UPD MethodInvocation@@cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length()) @TO@ cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale()) @AT@ 20262 @LENGTH@ 113
---------UPD SimpleName@@MethodName:createSqlType:[SqlTypeName.DECIMAL, bd.scale(), unscaled.toString().length()] @TO@ MethodName:createSqlType:[SqlTypeName.DECIMAL, unscaled.toString().length(), bd.scale()] @AT@ 20287 @LENGTH@ 88
------------UPD MethodInvocation@@bd.scale() @TO@ unscaled.toString().length() @AT@ 20334 @LENGTH@ 10
---------------UPD SimpleName@@Name:bd @TO@ Name:unscaled @AT@ 20334 @LENGTH@ 2
---------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@bd.scale() @AT@ 20334 @LENGTH@ 19
---------------UPD SimpleName@@MethodName:scale:[] @TO@ MethodName:length:[] @AT@ 20337 @LENGTH@ 7
------------UPD MethodInvocation@@unscaled.toString().length() @TO@ bd.scale() @AT@ 20346 @LENGTH@ 28
---------------DEL MethodInvocation@@MethodName:toString:[] @AT@ 20346 @LENGTH@ 19
---------------UPD SimpleName@@Name:unscaled @TO@ Name:bd @AT@ 20346 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:length:[] @TO@ MethodName:scale:[] @AT@ 20366 @LENGTH@ 8


UPD FieldDeclaration@@public, static, final, String, [COMPONENT=extractName(CamelCxfTest.class)] @TO@ public, static, final, String, [COMPONENT=extractName(CamelCmisTest.class)] @AT@ 1102 @LENGTH@ 71
---UPD VariableDeclarationFragment@@COMPONENT=extractName(CamelCxfTest.class) @TO@ COMPONENT=extractName(CamelCmisTest.class) @AT@ 1129 @LENGTH@ 43
------UPD MethodInvocation@@extractName(CamelCxfTest.class) @TO@ extractName(CamelCmisTest.class) @AT@ 1141 @LENGTH@ 31
---------UPD SimpleName@@MethodName:extractName:[CamelCxfTest.class] @TO@ MethodName:extractName:[CamelCmisTest.class] @AT@ 1141 @LENGTH@ 31
------------UPD TypeLiteral@@CamelCxfTest.class @TO@ CamelCmisTest.class @AT@ 1153 @LENGTH@ 18


UPD TypeDeclaration@@[public]NullUserCacheTests, TestCase @TO@ [public]NullUserCacheTests,  @AT@ 982 @LENGTH@ 558
---DEL SimpleType@@TestCase @AT@ 1022 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:request.content().release() @TO@ MethodDeclaration@@public, static, String, MethodName:myTransformer, FullHttpRequest request,  @AT@ 2037 @LENGTH@ 28
---INS MethodInvocation@@request.content().release() @TO@ ExpressionStatement@@MethodInvocation:request.content().release() @AT@ 2037 @LENGTH@ 27
------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@request.content().release() @AT@ 2037 @LENGTH@ 17
------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.content().release() @AT@ 2037 @LENGTH@ 7
------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@request.content().release() @AT@ 2055 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:SecurityListener, int maxLength,  @TO@ voidMethodName:SecurityListener, int maxLength,  @AT@ 4025 @LENGTH@ 80
---DEL Modifier@@public @AT@ 4025 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:mock.setResultMinimumWaitTime(1000) @AT@ 2114 @LENGTH@ 36
---DEL MethodInvocation@@mock.setResultMinimumWaitTime(1000) @AT@ 2114 @LENGTH@ 35
------DEL SimpleName@@Name:mock @AT@ 2114 @LENGTH@ 4
------DEL SimpleName@@MethodName:setResultMinimumWaitTime:[1000] @AT@ 2119 @LENGTH@ 30
---------DEL NumberLiteral@@1000 @AT@ 2144 @LENGTH@ 4


INS VariableDeclarationStatement@@boolean first=true; @TO@ MethodDeclaration@@public, EndpointValidationResult, MethodName:validateEndpointProperties, String uri, boolean ignoreLenientProperties,  @AT@ 28047 @LENGTH@ 21
---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean first=true; @AT@ 28047 @LENGTH@ 7
---INS VariableDeclarationFragment@@first=true @TO@ VariableDeclarationStatement@@boolean first=true; @AT@ 28055 @LENGTH@ 12
------INS SimpleName@@first @TO@ VariableDeclarationFragment@@first=true @AT@ 28055 @LENGTH@ 5
------INS BooleanLiteral@@true @TO@ VariableDeclarationFragment@@first=true @AT@ 28063 @LENGTH@ 4


INS MethodDeclaration@@FilterList, MethodName:getFilteredList,  @TO@ TypeDeclaration@@[public]ModelAwareFilter,  @AT@ 1271 @LENGTH@ 18
---INS SimpleType@@FilterList @TO@ MethodDeclaration@@FilterList, MethodName:getFilteredList,  @AT@ 1260 @LENGTH@ 10
---INS SimpleName@@MethodName:getFilteredList @TO@ MethodDeclaration@@FilterList, MethodName:getFilteredList,  @AT@ 1271 @LENGTH@ 15


INS FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @TO@ TypeDeclaration@@[public]EjbDependencyDeploymentUnitProcessor, [DeploymentUnitProcessor] @AT@ 2754 @LENGTH@ 97
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @AT@ 2754 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @AT@ 2762 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @AT@ 2769 @LENGTH@ 5
---INS SimpleType@@ModuleIdentifier @TO@ FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @AT@ 2775 @LENGTH@ 16
---INS VariableDeclarationFragment@@JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api") @TO@ FieldDeclaration@@private, static, final, ModuleIdentifier, [JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api")] @AT@ 2792 @LENGTH@ 58
------INS SimpleName@@JAX_RPC_API @TO@ VariableDeclarationFragment@@JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api") @AT@ 2792 @LENGTH@ 11
------INS MethodInvocation@@ModuleIdentifier.create("javax.xml.rpc.api") @TO@ VariableDeclarationFragment@@JAX_RPC_API=ModuleIdentifier.create("javax.xml.rpc.api") @AT@ 2806 @LENGTH@ 44
---------INS SimpleName@@Name:ModuleIdentifier @TO@ MethodInvocation@@ModuleIdentifier.create("javax.xml.rpc.api") @AT@ 2806 @LENGTH@ 16
---------INS SimpleName@@MethodName:create:["javax.xml.rpc.api"] @TO@ MethodInvocation@@ModuleIdentifier.create("javax.xml.rpc.api") @AT@ 2823 @LENGTH@ 27
------------INS StringLiteral@@"javax.xml.rpc.api" @TO@ SimpleName@@MethodName:create:["javax.xml.rpc.api"] @AT@ 2830 @LENGTH@ 19


UPD MethodDeclaration@@public, voidMethodName:DefaultZookeeperConnectionStrategy, ZooKeeperEndpoint endpoint,  @TO@ voidMethodName:DefaultZookeeperConnectionStrategy, ZooKeeperEndpoint endpoint,  @AT@ 1824 @LENGTH@ 279
---DEL Modifier@@public @AT@ 1824 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication()) @TO@ MethodInvocation:assertThat(null != SecurityContextHolder.getContext().getAuthentication()).isEqualTo(grantAccess) @AT@ 13084 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication()) @TO@ assertThat(null != SecurityContextHolder.getContext().getAuthentication()).isEqualTo(grantAccess) @AT@ 13084 @LENGTH@ 102
------INS MethodInvocation@@MethodName:assertThat:[null != SecurityContextHolder.getContext().getAuthentication()] @TO@ MethodInvocation@@assertThat(null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication()) @AT@ 12998 @LENGTH@ 74
---------INS InfixExpression@@null != SecurityContextHolder.getContext().getAuthentication() @TO@ MethodInvocation@@MethodName:assertThat:[null != SecurityContextHolder.getContext().getAuthentication()] @AT@ 13009 @LENGTH@ 62
------------MOV NullLiteral@@null @TO@ InfixExpression@@null != SecurityContextHolder.getContext().getAuthentication() @AT@ 13095 @LENGTH@ 4
------------MOV Operator@@!= @TO@ InfixExpression@@null != SecurityContextHolder.getContext().getAuthentication() @AT@ 13099 @LENGTH@ 2
------------MOV MethodInvocation@@SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication() @TO@ InfixExpression@@null != SecurityContextHolder.getContext().getAuthentication() @AT@ 13103 @LENGTH@ 82
------INS SimpleName@@MethodName:isEqualTo:[grantAccess] @TO@ MethodInvocation@@assertThat(null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication()) @AT@ 13073 @LENGTH@ 27
---------INS SimpleName@@grantAccess @TO@ SimpleName@@MethodName:isEqualTo:[grantAccess] @AT@ 13088 @LENGTH@ 11
------DEL SimpleName@@MethodName:assertThat:[null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication()] @AT@ 13084 @LENGTH@ 102
---------DEL InfixExpression@@null != SecurityContextHolder.getContext().isEqualTo(grantAccess).getAuthentication() @AT@ 13095 @LENGTH@ 90


UPD VariableDeclarationStatement@@final ServiceController<DeploymentUnit> deploymentUnitController=serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.contentsInjector).setInitialMode(ServiceController.Mode.ACTIVE).install(); @TO@ final ServiceController<DeploymentUnit> deploymentUnitController=serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.getContentsInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install(); @AT@ 9466 @LENGTH@ 705
---UPD VariableDeclarationFragment@@deploymentUnitController=serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.contentsInjector).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ deploymentUnitController=serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.getContentsInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 9506 @LENGTH@ 664
------UPD MethodInvocation@@serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.contentsInjector).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ serviceTarget.addService(deploymentUnitServiceName,service).addDependency(Services.JBOSS_DEPLOYMENT_CHAINS,DeployerChains.class,service.getDeployerChainsInjector()).addDependency(DeploymentMountProvider.SERVICE_NAME,DeploymentMountProvider.class,service.getServerDeploymentRepositoryInjector()).addDependency(PathManagerService.SERVICE_NAME,PathManager.class,service.getPathManagerInjector()).addDependency(contentsServiceName,VirtualFile.class,service.getContentsInjector()).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 9533 @LENGTH@ 637
---------UPD MethodInvocation@@MethodName:addDependency:[contentsServiceName, VirtualFile.class, service.contentsInjector] @TO@ MethodName:addDependency:[contentsServiceName, VirtualFile.class, service.getContentsInjector()] @AT@ 9533 @LENGTH@ 547
------------INS MethodInvocation@@service.getContentsInjector() @TO@ MethodInvocation@@MethodName:addDependency:[contentsServiceName, VirtualFile.class, service.contentsInjector] @AT@ 10055 @LENGTH@ 29
---------------INS SimpleName@@Name:service @TO@ MethodInvocation@@service.getContentsInjector() @AT@ 10055 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getContentsInjector:[] @TO@ MethodInvocation@@service.getContentsInjector() @AT@ 10063 @LENGTH@ 21
------------DEL QualifiedName@@service.contentsInjector @AT@ 10055 @LENGTH@ 24
---------------DEL SimpleName@@service @AT@ 10055 @LENGTH@ 7
---------------DEL SimpleName@@contentsInjector @AT@ 10063 @LENGTH@ 16


UPD Block@@ThenBody:{  serversRegistry.get(port).unregisterConsumer(consumer);} @TO@ ThenBody:{  UndertowRegistry undertowRegistry=serversRegistry.get(port);  undertowRegistry.unregisterConsumer(consumer);  if (undertowRegistry.isEmpty()) {    Undertow server=undertowRegistry.getServer();    if (server != null) {      server.stop();    }    serversRegistry.remove(port);  } else {    startServer(consumer);  }} @AT@ 10932 @LENGTH@ 79
---INS VariableDeclarationStatement@@UndertowRegistry undertowRegistry=serversRegistry.get(port); @TO@ Block@@ThenBody:{  serversRegistry.get(port).unregisterConsumer(consumer);} @AT@ 10880 @LENGTH@ 62
------INS SimpleType@@UndertowRegistry @TO@ VariableDeclarationStatement@@UndertowRegistry undertowRegistry=serversRegistry.get(port); @AT@ 10880 @LENGTH@ 16
------INS VariableDeclarationFragment@@undertowRegistry=serversRegistry.get(port) @TO@ VariableDeclarationStatement@@UndertowRegistry undertowRegistry=serversRegistry.get(port); @AT@ 10897 @LENGTH@ 44
---------INS SimpleName@@undertowRegistry @TO@ VariableDeclarationFragment@@undertowRegistry=serversRegistry.get(port) @AT@ 10897 @LENGTH@ 16
---------INS MethodInvocation@@serversRegistry.get(port) @TO@ VariableDeclarationFragment@@undertowRegistry=serversRegistry.get(port) @AT@ 10916 @LENGTH@ 25
------------INS SimpleName@@Name:serversRegistry @TO@ MethodInvocation@@serversRegistry.get(port) @AT@ 10916 @LENGTH@ 15
------------INS SimpleName@@MethodName:get:[port] @TO@ MethodInvocation@@serversRegistry.get(port) @AT@ 10932 @LENGTH@ 9
---------------INS SimpleName@@port @TO@ SimpleName@@MethodName:get:[port] @AT@ 10936 @LENGTH@ 4
---UPD ExpressionStatement@@MethodInvocation:serversRegistry.get(port).unregisterConsumer(consumer) @TO@ MethodInvocation:undertowRegistry.unregisterConsumer(consumer) @AT@ 10946 @LENGTH@ 55
------UPD MethodInvocation@@serversRegistry.get(port).unregisterConsumer(consumer) @TO@ undertowRegistry.unregisterConsumer(consumer) @AT@ 10946 @LENGTH@ 54
---------DEL MethodInvocation@@MethodName:get:[port] @AT@ 10946 @LENGTH@ 25
------------DEL SimpleName@@port @AT@ 10966 @LENGTH@ 4
---------UPD SimpleName@@Name:serversRegistry @TO@ Name:undertowRegistry @AT@ 10946 @LENGTH@ 15
---MOV IfStatement@@if (serversRegistry.get(port).isEmpty()) {  Undertow server=serversRegistry.get(port).getServer();  if (server != null) {    server.stop();  }  serversRegistry.remove(port);} else {  startServer(consumer);} @TO@ Block@@ThenBody:{  serversRegistry.get(port).unregisterConsumer(consumer);} @AT@ 11020 @LENGTH@ 411
------UPD MethodInvocation@@serversRegistry.get(port).isEmpty() @TO@ undertowRegistry.isEmpty() @AT@ 11024 @LENGTH@ 35
---------DEL MethodInvocation@@MethodName:get:[port] @AT@ 11024 @LENGTH@ 25
------------DEL SimpleName@@port @AT@ 11044 @LENGTH@ 4
---------UPD SimpleName@@Name:serversRegistry @TO@ Name:undertowRegistry @AT@ 11024 @LENGTH@ 15
------UPD Block@@ThenBody:{  Undertow server=serversRegistry.get(port).getServer();  if (server != null) {    server.stop();  }  serversRegistry.remove(port);} @TO@ ThenBody:{  Undertow server=undertowRegistry.getServer();  if (server != null) {    server.stop();  }  serversRegistry.remove(port);} @AT@ 11061 @LENGTH@ 266
---------UPD VariableDeclarationStatement@@Undertow server=serversRegistry.get(port).getServer(); @TO@ Undertow server=undertowRegistry.getServer(); @AT@ 11140 @LENGTH@ 56
------------UPD VariableDeclarationFragment@@server=serversRegistry.get(port).getServer() @TO@ server=undertowRegistry.getServer() @AT@ 11149 @LENGTH@ 46
---------------UPD MethodInvocation@@serversRegistry.get(port).getServer() @TO@ undertowRegistry.getServer() @AT@ 11158 @LENGTH@ 37
------------------DEL MethodInvocation@@MethodName:get:[port] @AT@ 11158 @LENGTH@ 25
---------------------DEL SimpleName@@port @AT@ 11178 @LENGTH@ 4
------------------UPD SimpleName@@Name:serversRegistry @TO@ Name:undertowRegistry @AT@ 11158 @LENGTH@ 15


UPD MethodDeclaration@@private, voidMethodName:NotifyForFieldsEnum, String value,  @TO@ voidMethodName:NotifyForFieldsEnum, String value,  @AT@ 1240 @LENGTH@ 77
---DEL Modifier@@private @AT@ 1240 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3446 @LENGTH@ 37
---INS MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @AT@ 3446 @LENGTH@ 36
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3446 @LENGTH@ 18
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3465 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 3479 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3915 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3915 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3934 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3948 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertThat(cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse())) @TO@ MethodInvocation:assertThat(cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse())).isNull() @AT@ 2090 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse())) @TO@ assertThat(cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse())).isNull() @AT@ 2090 @LENGTH@ 102
------INS MethodInvocation@@MethodName:assertThat:[cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse())] @TO@ MethodInvocation@@assertThat(cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse())) @AT@ 2007 @LENGTH@ 93
---------INS MethodInvocation@@cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse()) @TO@ MethodInvocation@@MethodName:assertThat:[cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse())] @AT@ 2018 @LENGTH@ 81
------------MOV SimpleName@@Name:cache @TO@ MethodInvocation@@cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse()) @AT@ 2101 @LENGTH@ 5
------------MOV SimpleName@@MethodName:getRequest:[new MockHttpServletRequest().isNull(), new MockHttpServletResponse()] @TO@ MethodInvocation@@cache.getRequest(new MockHttpServletRequest(),new MockHttpServletResponse()) @AT@ 2107 @LENGTH@ 84
---------------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ SimpleName@@MethodName:getRequest:[new MockHttpServletRequest().isNull(), new MockHttpServletResponse()] @AT@ 2035 @LENGTH@ 28
------------------MOV New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2118 @LENGTH@ 3
------------------MOV SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2122 @LENGTH@ 22
---------------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ SimpleName@@MethodName:getRequest:[new MockHttpServletRequest().isNull(), new MockHttpServletResponse()] @AT@ 2035 @LENGTH@ 28
------------------MOV New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2118 @LENGTH@ 3
------------------MOV SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 2122 @LENGTH@ 22
------DEL SimpleName@@MethodName:assertThat:[cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse())] @AT@ 2090 @LENGTH@ 102
---------DEL MethodInvocation@@cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse()) @AT@ 2101 @LENGTH@ 90
------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(cache.getRequest(new MockHttpServletRequest().isNull(),new MockHttpServletResponse())) @AT@ 2101 @LENGTH@ 8


UPD TypeDeclaration@@[public]CustomAbstractPersistableRepository, [CrudRepository<CustomAbstractPersistable,UUID>] @TO@ [public]CustomAbstractPersistableRepository, [JpaRepository<CustomAbstractPersistable,UUID>] @AT@ 869 @LENGTH@ 111
---UPD ParameterizedType@@CrudRepository<CustomAbstractPersistable,UUID> @TO@ JpaRepository<CustomAbstractPersistable,UUID> @AT@ 930 @LENGTH@ 47
------UPD SimpleType@@CrudRepository @TO@ JpaRepository @AT@ 930 @LENGTH@ 14


UPD MethodDeclaration@@public, voidMethodName:Pair, int left, int right,  @TO@ voidMethodName:Pair, int left, int right,  @AT@ 4406 @LENGTH@ 106
---DEL Modifier@@public @AT@ 4406 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyEndpoint, final String uri, final String remaining,  @TO@ voidMethodName:MyEndpoint, final String uri, final String remaining,  @AT@ 1643 @LENGTH@ 139
---DEL Modifier@@public @AT@ 1643 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:getProjectOperations().isFeatureInstalled(FeatureNames.SECURITY) && getProjectOperations().isFeatureInstalled(FeatureNames.JPA) @TO@ InfixExpression:getProjectOperations().isFeatureInstalled(FeatureNames.SECURITY) && getProjectOperations().isFeatureInstalled(FeatureNames.JPA) && !getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 2990 @LENGTH@ 143
---UPD InfixExpression@@getProjectOperations().isFeatureInstalled(FeatureNames.SECURITY) && getProjectOperations().isFeatureInstalled(FeatureNames.JPA) @TO@ getProjectOperations().isFeatureInstalled(FeatureNames.SECURITY) && getProjectOperations().isFeatureInstalled(FeatureNames.JPA) && !getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 2997 @LENGTH@ 135
------INS PrefixExpression@@!getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @TO@ InfixExpression@@getProjectOperations().isFeatureInstalled(FeatureNames.SECURITY) && getProjectOperations().isFeatureInstalled(FeatureNames.JPA) @AT@ 3144 @LENGTH@ 62
---------INS Operator@@! @TO@ PrefixExpression@@!getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 3144 @LENGTH@ 1
---------INS MethodInvocation@@getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @TO@ PrefixExpression@@!getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 3145 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:getProjectOperations:[] @TO@ MethodInvocation@@getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 3145 @LENGTH@ 22
------------INS SimpleName@@MethodName:isFeatureInstalled:[AUDIT_FEATURE_NAME] @TO@ MethodInvocation@@getProjectOperations().isFeatureInstalled(AUDIT_FEATURE_NAME) @AT@ 3168 @LENGTH@ 38
---------------INS SimpleName@@AUDIT_FEATURE_NAME @TO@ SimpleName@@MethodName:isFeatureInstalled:[AUDIT_FEATURE_NAME] @AT@ 3187 @LENGTH@ 18


UPD TypeDeclaration@@[public]RunAsManagerImplTests, TestCase @TO@ [public]RunAsManagerImplTests,  @AT@ 1132 @LENGTH@ 3848
---DEL SimpleType@@TestCase @AT@ 1175 @LENGTH@ 8


DEL MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 3076 @LENGTH@ 99
---DEL Modifier@@protected @AT@ 3076 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 3086 @LENGTH@ 4
---DEL SimpleName@@MethodName:doStop @AT@ 3091 @LENGTH@ 6
---DEL SimpleType@@Exception @AT@ 3107 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.doStop() @AT@ 3127 @LENGTH@ 15
------DEL SuperMethodInvocation@@super.doStop() @AT@ 3127 @LENGTH@ 14
---------DEL SimpleName@@MethodName:doStop:[] @AT@ 3133 @LENGTH@ 6
---DEL ExpressionStatement@@MethodInvocation:handlers.clear() @AT@ 3152 @LENGTH@ 17
------DEL MethodInvocation@@handlers.clear() @AT@ 3152 @LENGTH@ 16
---------DEL SimpleName@@Name:handlers @AT@ 3152 @LENGTH@ 8
---------DEL SimpleName@@MethodName:clear:[] @AT@ 3161 @LENGTH@ 7


UPD TypeDeclaration@@[public]MetadataReader,  @TO@ [public]MetadataReader, [Closeable] @AT@ 940 @LENGTH@ 429
---INS SimpleType@@Closeable @TO@ TypeDeclaration@@[public]MetadataReader,  @AT@ 1006 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @TO@ MethodDeclaration@@public, void, MethodName:validateProperties, Exception,  @AT@ 19764 @LENGTH@ 31
---INS MethodInvocation@@assertTrue(result.isSuccess()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(result.isSuccess()) @AT@ 19764 @LENGTH@ 30
------INS SimpleName@@MethodName:assertTrue:[result.isSuccess()] @TO@ MethodInvocation@@assertTrue(result.isSuccess()) @AT@ 19764 @LENGTH@ 30
---------INS MethodInvocation@@result.isSuccess() @TO@ SimpleName@@MethodName:assertTrue:[result.isSuccess()] @AT@ 19775 @LENGTH@ 18
------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isSuccess() @AT@ 19775 @LENGTH@ 6
------------INS SimpleName@@MethodName:isSuccess:[] @TO@ MethodInvocation@@result.isSuccess() @AT@ 19782 @LENGTH@ 11


UPD IfStatement@@if (authentication.getDetails() instanceof OAuth2AuthenticationDetails) {  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @TO@ if (authentication.getDetails() instanceof OAuth2AuthenticationDetails) {  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  if (!details.equals(auth.getDetails())) {    details.setDecodedDetails(auth.getDetails());  }} @AT@ 4060 @LENGTH@ 313
---UPD Block@@ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @TO@ ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  if (!details.equals(auth.getDetails())) {    details.setDecodedDetails(auth.getDetails());  }} @AT@ 4132 @LENGTH@ 241
------INS IfStatement@@if (!details.equals(auth.getDetails())) {  details.setDecodedDetails(auth.getDetails());} @TO@ Block@@ThenBody:{  OAuth2AuthenticationDetails details=(OAuth2AuthenticationDetails)authentication.getDetails();  details.setDecodedDetails(auth.getDetails());} @AT@ 4288 @LENGTH@ 177
---------INS PrefixExpression@@!details.equals(auth.getDetails()) @TO@ IfStatement@@if (!details.equals(auth.getDetails())) {  details.setDecodedDetails(auth.getDetails());} @AT@ 4292 @LENGTH@ 34
------------INS Operator@@! @TO@ PrefixExpression@@!details.equals(auth.getDetails()) @AT@ 4292 @LENGTH@ 1
------------INS MethodInvocation@@details.equals(auth.getDetails()) @TO@ PrefixExpression@@!details.equals(auth.getDetails()) @AT@ 4293 @LENGTH@ 33
---------------INS SimpleName@@Name:details @TO@ MethodInvocation@@details.equals(auth.getDetails()) @AT@ 4293 @LENGTH@ 7
---------------INS SimpleName@@MethodName:equals:[auth.getDetails()] @TO@ MethodInvocation@@details.equals(auth.getDetails()) @AT@ 4301 @LENGTH@ 25
------------------INS MethodInvocation@@auth.getDetails() @TO@ SimpleName@@MethodName:equals:[auth.getDetails()] @AT@ 4308 @LENGTH@ 17
---------------------INS SimpleName@@Name:auth @TO@ MethodInvocation@@auth.getDetails() @AT@ 4308 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getDetails:[] @TO@ MethodInvocation@@auth.getDetails() @AT@ 4313 @LENGTH@ 12
---------INS Block@@ThenBody:{  details.setDecodedDetails(auth.getDetails());} @TO@ IfStatement@@if (!details.equals(auth.getDetails())) {  details.setDecodedDetails(auth.getDetails());} @AT@ 4328 @LENGTH@ 137
------------MOV ExpressionStatement@@MethodInvocation:details.setDecodedDetails(auth.getDetails()) @TO@ Block@@ThenBody:{  details.setDecodedDetails(auth.getDetails());} @AT@ 4324 @LENGTH@ 45


UPD MethodDeclaration@@public, voidMethodName:AbstractStatusConsumer, TwitterEndpoint endpoint,  @TO@ voidMethodName:AbstractStatusConsumer, TwitterEndpoint endpoint,  @AT@ 1297 @LENGTH@ 88
---DEL Modifier@@public @AT@ 1297 @LENGTH@ 6


INS IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @TO@ MethodDeclaration@@protected, void, MethodName:doDone, Exchange original, Exchange subExchange, final Iterable<ProcessorExchangePair> pairs, AsyncCallback callback, boolean doneSync, boolean forceExhaust,  @AT@ 41447 @LENGTH@ 143
---INS InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @TO@ IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 41451 @LENGTH@ 47
------INS SimpleName@@strategy @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 41451 @LENGTH@ 8
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 41460 @LENGTH@ 10
------INS SimpleType@@DelegateAggregationStrategy @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 41471 @LENGTH@ 27
---INS Block@@ThenBody:{  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @TO@ IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 41500 @LENGTH@ 90
------INS ExpressionStatement@@Assignment:strategy=((DelegateAggregationStrategy)strategy).getDelegate() @TO@ Block@@ThenBody:{  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 41514 @LENGTH@ 66
---------INS Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @TO@ ExpressionStatement@@Assignment:strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41514 @LENGTH@ 65
------------INS SimpleName@@strategy @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41514 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41522 @LENGTH@ 1
------------INS MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41525 @LENGTH@ 54
---------------INS ParenthesizedExpression@@((DelegateAggregationStrategy)strategy) @TO@ MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41525 @LENGTH@ 40
------------------INS CastExpression@@(DelegateAggregationStrategy)strategy @TO@ ParenthesizedExpression@@((DelegateAggregationStrategy)strategy) @AT@ 41526 @LENGTH@ 38
---------------------INS SimpleType@@DelegateAggregationStrategy @TO@ CastExpression@@(DelegateAggregationStrategy)strategy @AT@ 41527 @LENGTH@ 27
---------------------INS SimpleName@@strategy @TO@ CastExpression@@(DelegateAggregationStrategy)strategy @AT@ 41556 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getDelegate:[] @TO@ MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 41566 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertEquals(SolrServerException.class,exchange.getException().getClass()) @TO@ MethodInvocation:assertTrue(exchange.isFailed()) @AT@ 1428 @LENGTH@ 76
---UPD MethodInvocation@@assertEquals(SolrServerException.class,exchange.getException().getClass()) @TO@ assertTrue(exchange.isFailed()) @AT@ 1428 @LENGTH@ 75
------UPD SimpleName@@MethodName:assertEquals:[SolrServerException.class, exchange.getException().getClass()] @TO@ MethodName:assertTrue:[exchange.isFailed()] @AT@ 1428 @LENGTH@ 75
---------DEL TypeLiteral@@SolrServerException.class @AT@ 1441 @LENGTH@ 25
---------UPD MethodInvocation@@exchange.getException().getClass() @TO@ exchange.isFailed() @AT@ 1468 @LENGTH@ 34
------------DEL MethodInvocation@@MethodName:getException:[] @AT@ 1468 @LENGTH@ 23
------------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:isFailed:[] @AT@ 1492 @LENGTH@ 10


UPD IfStatement@@if (this.target != null && !this.target.isOpen()) {  if (this.channelList.contains(proxy)) {    this.channelList.remove(proxy);  }  this.target=null;  return;} @TO@ if (this.target != null && !this.target.isOpen()) {  if (this.target instanceof PublisherCallbackChannel) {    this.target.close();  }  if (this.channelList.contains(proxy)) {    this.channelList.remove(proxy);  }  this.target=null;  return;} @AT@ 27312 @LENGTH@ 191
---UPD Block@@ThenBody:{  if (this.channelList.contains(proxy)) {    this.channelList.remove(proxy);  }  this.target=null;  return;} @TO@ ThenBody:{  if (this.target instanceof PublisherCallbackChannel) {    this.target.close();  }  if (this.channelList.contains(proxy)) {    this.channelList.remove(proxy);  }  this.target=null;  return;} @AT@ 27362 @LENGTH@ 141
------INS IfStatement@@if (this.target instanceof PublisherCallbackChannel) {  this.target.close();} @TO@ Block@@ThenBody:{  if (this.channelList.contains(proxy)) {    this.channelList.remove(proxy);  }  this.target=null;  return;} @AT@ 27370 @LENGTH@ 117
---------INS InstanceofExpression@@this.target instanceof PublisherCallbackChannel @TO@ IfStatement@@if (this.target instanceof PublisherCallbackChannel) {  this.target.close();} @AT@ 27374 @LENGTH@ 47
------------INS FieldAccess@@this.target @TO@ InstanceofExpression@@this.target instanceof PublisherCallbackChannel @AT@ 27374 @LENGTH@ 11
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 27374 @LENGTH@ 4
---------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 27379 @LENGTH@ 6
------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@this.target instanceof PublisherCallbackChannel @AT@ 27386 @LENGTH@ 10
------------INS SimpleType@@PublisherCallbackChannel @TO@ InstanceofExpression@@this.target instanceof PublisherCallbackChannel @AT@ 27397 @LENGTH@ 24
---------INS Block@@ThenBody:{  this.target.close();} @TO@ IfStatement@@if (this.target instanceof PublisherCallbackChannel) {  this.target.close();} @AT@ 27423 @LENGTH@ 64
------------INS ExpressionStatement@@MethodInvocation:this.target.close() @TO@ Block@@ThenBody:{  this.target.close();} @AT@ 27432 @LENGTH@ 20
---------------INS MethodInvocation@@this.target.close() @TO@ ExpressionStatement@@MethodInvocation:this.target.close() @AT@ 27432 @LENGTH@ 19
------------------INS FieldAccess@@this.target @TO@ MethodInvocation@@this.target.close() @AT@ 27432 @LENGTH@ 11
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.target @AT@ 27432 @LENGTH@ 4
---------------------INS SimpleName@@target @TO@ FieldAccess@@this.target @AT@ 27437 @LENGTH@ 6
------------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@this.target.close() @AT@ 27444 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:Assume.assumeFalse(System.getProperty("os.name").contains("windows")) @TO@ MethodInvocation:Assume.assumeFalse(System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows")) @AT@ 1348 @LENGTH@ 70
---UPD MethodInvocation@@Assume.assumeFalse(System.getProperty("os.name").contains("windows")) @TO@ Assume.assumeFalse(System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows")) @AT@ 1348 @LENGTH@ 69
------UPD SimpleName@@MethodName:assumeFalse:[System.getProperty("os.name").contains("windows")] @TO@ MethodName:assumeFalse:[System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows")] @AT@ 1355 @LENGTH@ 62
---------UPD MethodInvocation@@System.getProperty("os.name").contains("windows") @TO@ System.getProperty("os.name").toLowerCase(Locale.ENGLISH).contains("windows") @AT@ 1367 @LENGTH@ 49
------------INS MethodInvocation@@MethodName:toLowerCase:[Locale.ENGLISH] @TO@ MethodInvocation@@System.getProperty("os.name").contains("windows") @AT@ 1392 @LENGTH@ 57
---------------INS QualifiedName@@Locale.ENGLISH @TO@ MethodInvocation@@MethodName:toLowerCase:[Locale.ENGLISH] @AT@ 1434 @LENGTH@ 14
------------------INS SimpleName@@Locale @TO@ QualifiedName@@Locale.ENGLISH @AT@ 1434 @LENGTH@ 6
------------------INS SimpleName@@ENGLISH @TO@ QualifiedName@@Locale.ENGLISH @AT@ 1441 @LENGTH@ 7


UPD VariableDeclarationStatement@@Map<String,Object> map=new HashMap<String,Object>(); @TO@ Map<String,Object> map=new HashMap<>(); @AT@ 1250 @LENGTH@ 54
---UPD VariableDeclarationFragment@@map=new HashMap<String,Object>() @TO@ map=new HashMap<>() @AT@ 1269 @LENGTH@ 34
------UPD ClassInstanceCreation@@HashMap<String,Object>[] @TO@ HashMap<>[] @AT@ 1275 @LENGTH@ 28
---------UPD ParameterizedType@@HashMap<String,Object> @TO@ HashMap<> @AT@ 1279 @LENGTH@ 22
------------DEL SimpleType@@String @AT@ 1287 @LENGTH@ 6
------------DEL SimpleType@@Object @AT@ 1294 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("unchecked"), public]AbstractAccessDecisionManagerTests, TestCase @TO@ [@SuppressWarnings("unchecked"), public]AbstractAccessDecisionManagerTests,  @AT@ 1368 @LENGTH@ 3692
---DEL SimpleType@@TestCase @AT@ 1455 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.JOB_NAME + " could not be found",exchange)) @TO@ MethodInvocation:exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found",exchange)) @AT@ 2240 @LENGTH@ 212
---UPD MethodInvocation@@exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.JOB_NAME + " could not be found",exchange)) @TO@ exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found",exchange)) @AT@ 2240 @LENGTH@ 211
------UPD SimpleName@@MethodName:setException:[new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.JOB_NAME + " could not be found",exchange)] @TO@ MethodName:setException:[new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found",exchange)] @AT@ 2249 @LENGTH@ 202
---------UPD ClassInstanceCreation@@CamelExchangeException["jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.JOB_NAME + " could not be found", exchange] @TO@ CamelExchangeException["jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found", exchange] @AT@ 2262 @LENGTH@ 188
------------UPD InfixExpression@@"jobName was not specified in the endpoint construction " + " and header " + SpringBatchComponent.JOB_NAME + " could not be found" @TO@ "jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found" @AT@ 2289 @LENGTH@ 150
---------------UPD QualifiedName@@SpringBatchComponent.JOB_NAME @TO@ SpringBatchConstants.JOB_NAME @AT@ 2386 @LENGTH@ 29
------------------UPD SimpleName@@SpringBatchComponent @TO@ SpringBatchConstants @AT@ 2386 @LENGTH@ 20


INS IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 25500 @LENGTH@ 151
---INS InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @TO@ IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 25504 @LENGTH@ 47
------INS SimpleName@@strategy @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 25504 @LENGTH@ 8
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 25513 @LENGTH@ 10
------INS SimpleType@@DelegateAggregationStrategy @TO@ InstanceofExpression@@strategy instanceof DelegateAggregationStrategy @AT@ 25524 @LENGTH@ 27
---INS Block@@ThenBody:{  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @TO@ IfStatement@@if (strategy instanceof DelegateAggregationStrategy) {  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 25553 @LENGTH@ 98
------INS ExpressionStatement@@Assignment:strategy=((DelegateAggregationStrategy)strategy).getDelegate() @TO@ Block@@ThenBody:{  strategy=((DelegateAggregationStrategy)strategy).getDelegate();} @AT@ 25571 @LENGTH@ 66
---------INS Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @TO@ ExpressionStatement@@Assignment:strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25571 @LENGTH@ 65
------------INS SimpleName@@strategy @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25571 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25579 @LENGTH@ 1
------------INS MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @TO@ Assignment@@strategy=((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25582 @LENGTH@ 54
---------------INS ParenthesizedExpression@@((DelegateAggregationStrategy)strategy) @TO@ MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25582 @LENGTH@ 40
------------------INS CastExpression@@(DelegateAggregationStrategy)strategy @TO@ ParenthesizedExpression@@((DelegateAggregationStrategy)strategy) @AT@ 25583 @LENGTH@ 38
---------------------INS SimpleType@@DelegateAggregationStrategy @TO@ CastExpression@@(DelegateAggregationStrategy)strategy @AT@ 25584 @LENGTH@ 27
---------------------INS SimpleName@@strategy @TO@ CastExpression@@(DelegateAggregationStrategy)strategy @AT@ 25613 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getDelegate:[] @TO@ MethodInvocation@@((DelegateAggregationStrategy)strategy).getDelegate() @AT@ 25623 @LENGTH@ 13


UPD IfStatement@@if (zookeeper != null) {  zookeeper.close();} @TO@ if (zookeeper != null) {  zookeeper.close();  zookeeper=null;} @AT@ 3125 @LENGTH@ 73
---UPD Block@@ThenBody:{  zookeeper.close();} @TO@ ThenBody:{  zookeeper.close();  zookeeper=null;} @AT@ 3148 @LENGTH@ 50
------INS ExpressionStatement@@Assignment:zookeeper=null @TO@ Block@@ThenBody:{  zookeeper.close();} @AT@ 3201 @LENGTH@ 17
---------INS Assignment@@zookeeper=null @TO@ ExpressionStatement@@Assignment:zookeeper=null @AT@ 3201 @LENGTH@ 16
------------INS SimpleName@@zookeeper @TO@ Assignment@@zookeeper=null @AT@ 3201 @LENGTH@ 9
------------INS Operator@@= @TO@ Assignment@@zookeeper=null @AT@ 3210 @LENGTH@ 1
------------INS NullLiteral@@null @TO@ Assignment@@zookeeper=null @AT@ 3213 @LENGTH@ 4


UPD Block@@ThenBody:{  UseOriginalAggregationStrategy original=new UseOriginalAggregationStrategy(exchange,true);  setAggregationStrategyOnExchange(exchange,original);} @TO@ ThenBody:{  AggregationStrategy original=new UseOriginalAggregationStrategy(exchange,true);  if (isShareUnitOfWork()) {    original=new ShareUnitOfWorkAggregationStrategy(original);  }  setAggregationStrategyOnExchange(exchange,original);} @AT@ 4622 @LENGTH@ 183
---UPD VariableDeclarationStatement@@UseOriginalAggregationStrategy original=new UseOriginalAggregationStrategy(exchange,true); @TO@ AggregationStrategy original=new UseOriginalAggregationStrategy(exchange,true); @AT@ 4636 @LENGTH@ 93
------UPD SimpleType@@UseOriginalAggregationStrategy @TO@ AggregationStrategy @AT@ 4636 @LENGTH@ 30
---INS IfStatement@@if (isShareUnitOfWork()) {  original=new ShareUnitOfWorkAggregationStrategy(original);} @TO@ Block@@ThenBody:{  UseOriginalAggregationStrategy original=new UseOriginalAggregationStrategy(exchange,true);  setAggregationStrategyOnExchange(exchange,original);} @AT@ 4811 @LENGTH@ 117
------INS MethodInvocation@@MethodName:isShareUnitOfWork:[] @TO@ IfStatement@@if (isShareUnitOfWork()) {  original=new ShareUnitOfWorkAggregationStrategy(original);} @AT@ 4815 @LENGTH@ 19
------INS Block@@ThenBody:{  original=new ShareUnitOfWorkAggregationStrategy(original);} @TO@ IfStatement@@if (isShareUnitOfWork()) {  original=new ShareUnitOfWorkAggregationStrategy(original);} @AT@ 4836 @LENGTH@ 92
---------INS ExpressionStatement@@Assignment:original=new ShareUnitOfWorkAggregationStrategy(original) @TO@ Block@@ThenBody:{  original=new ShareUnitOfWorkAggregationStrategy(original);} @AT@ 4854 @LENGTH@ 60
------------INS Assignment@@original=new ShareUnitOfWorkAggregationStrategy(original) @TO@ ExpressionStatement@@Assignment:original=new ShareUnitOfWorkAggregationStrategy(original) @AT@ 4854 @LENGTH@ 59
---------------INS SimpleName@@original @TO@ Assignment@@original=new ShareUnitOfWorkAggregationStrategy(original) @AT@ 4854 @LENGTH@ 8
---------------INS Operator@@= @TO@ Assignment@@original=new ShareUnitOfWorkAggregationStrategy(original) @AT@ 4862 @LENGTH@ 1
---------------INS ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[original] @TO@ Assignment@@original=new ShareUnitOfWorkAggregationStrategy(original) @AT@ 4865 @LENGTH@ 48
------------------INS New@@new @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[original] @AT@ 4865 @LENGTH@ 3
------------------INS SimpleType@@ShareUnitOfWorkAggregationStrategy @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[original] @AT@ 4869 @LENGTH@ 34
------------------INS SimpleName@@original @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[original] @AT@ 4904 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:LOG.debug("Shutting down connection to ZooKeeper: {}",configuration) @TO@ MethodDeclaration@@public, void, MethodName:shutdown,  @AT@ 2238 @LENGTH@ 70
---INS MethodInvocation@@LOG.debug("Shutting down connection to ZooKeeper: {}",configuration) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Shutting down connection to ZooKeeper: {}",configuration) @AT@ 2238 @LENGTH@ 69
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Shutting down connection to ZooKeeper: {}",configuration) @AT@ 2238 @LENGTH@ 3
------INS SimpleName@@MethodName:debug:["Shutting down connection to ZooKeeper: {}", configuration] @TO@ MethodInvocation@@LOG.debug("Shutting down connection to ZooKeeper: {}",configuration) @AT@ 2242 @LENGTH@ 65
---------INS StringLiteral@@"Shutting down connection to ZooKeeper: {}" @TO@ SimpleName@@MethodName:debug:["Shutting down connection to ZooKeeper: {}", configuration] @AT@ 2248 @LENGTH@ 43
---------INS SimpleName@@configuration @TO@ SimpleName@@MethodName:debug:["Shutting down connection to ZooKeeper: {}", configuration] @AT@ 2293 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:request.get(Util.ADDRESS).setEmptyList() @TO@ MethodDeclaration@@protected, ModelNode, MethodName:buildDeploymentReplace, final File f, String name, String runtimeName, boolean disabled, OperationFormatException,  @AT@ 30959 @LENGTH@ 41
---INS MethodInvocation@@request.get(Util.ADDRESS).setEmptyList() @TO@ ExpressionStatement@@MethodInvocation:request.get(Util.ADDRESS).setEmptyList() @AT@ 30959 @LENGTH@ 40
------INS MethodInvocation@@MethodName:get:[Util.ADDRESS] @TO@ MethodInvocation@@request.get(Util.ADDRESS).setEmptyList() @AT@ 30959 @LENGTH@ 25
---------INS QualifiedName@@Util.ADDRESS @TO@ MethodInvocation@@MethodName:get:[Util.ADDRESS] @AT@ 30971 @LENGTH@ 12
------------INS SimpleName@@Util @TO@ QualifiedName@@Util.ADDRESS @AT@ 30971 @LENGTH@ 4
------------INS SimpleName@@ADDRESS @TO@ QualifiedName@@Util.ADDRESS @AT@ 30976 @LENGTH@ 7
------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(Util.ADDRESS).setEmptyList() @AT@ 30959 @LENGTH@ 7
------INS SimpleName@@MethodName:setEmptyList:[] @TO@ MethodInvocation@@request.get(Util.ADDRESS).setEmptyList() @AT@ 30985 @LENGTH@ 14


MOV ExpressionStatement@@MethodInvocation:new DirectFieldAccessor(errorHandler).setPropertyValue("logger",logger) @TO@ MethodDeclaration@@public, void, MethodName:testDebatchByContainerBadMessageRejected, Exception,  @AT@ 13496 @LENGTH@ 73


UPD TypeDeclaration@@[public]SavedCookieTests, TestCase @TO@ [public]SavedCookieTests,  @AT@ 222 @LENGTH@ 1930
---DEL SimpleType@@TestCase @AT@ 260 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 6469 @LENGTH@ 36
---INS MethodInvocation@@websocketComponent.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @AT@ 6469 @LENGTH@ 35
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 6469 @LENGTH@ 18
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 6488 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 6502 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:AnnotatedRddCallbackProxy, Object objectWithCallback,  @TO@ voidMethodName:AnnotatedRddCallbackProxy, Object objectWithCallback,  @AT@ 1951 @LENGTH@ 107
---DEL Modifier@@public @AT@ 1951 @LENGTH@ 6


UPD MethodDeclaration@@private, voidMethodName:SmppCommandType, String commandName,  @TO@ voidMethodName:SmppCommandType, String commandName,  @AT@ 2368 @LENGTH@ 91
---DEL Modifier@@private @AT@ 2368 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:MyComponent, Class<? extends Endpoint> endpointClass,  @TO@ voidMethodName:MyComponent, Class<? extends Endpoint> endpointClass,  @AT@ 1309 @LENGTH@ 105
---DEL Modifier@@public @AT@ 1309 @LENGTH@ 6


UPD Block@@ThenBody:{  http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(new ClientDetailsUserDetailsService(clientDetailsService())).passwordEncoder(passwordEncoder());} @TO@ ThenBody:{  ClientDetailsUserDetailsService clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService());  clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder());  http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(clientDetailsUserDetailsService).passwordEncoder(passwordEncoder());} @AT@ 4966 @LENGTH@ 193
---UPD ExpressionStatement@@MethodInvocation:http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(new ClientDetailsUserDetailsService(clientDetailsService())).passwordEncoder(passwordEncoder()) @TO@ MethodInvocation:http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(clientDetailsUserDetailsService).passwordEncoder(passwordEncoder()) @AT@ 4971 @LENGTH@ 184
------UPD MethodInvocation@@http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(new ClientDetailsUserDetailsService(clientDetailsService())).passwordEncoder(passwordEncoder()) @TO@ http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(clientDetailsUserDetailsService).passwordEncoder(passwordEncoder()) @AT@ 4971 @LENGTH@ 183
---------UPD MethodInvocation@@MethodName:userDetailsService:[new ClientDetailsUserDetailsService(clientDetailsService())] @TO@ MethodName:userDetailsService:[clientDetailsUserDetailsService] @AT@ 4971 @LENGTH@ 142
------------DEL ClassInstanceCreation@@ClientDetailsUserDetailsService[clientDetailsService()] @AT@ 5053 @LENGTH@ 59
---------------DEL New@@new @AT@ 5053 @LENGTH@ 3
---------------DEL SimpleType@@ClientDetailsUserDetailsService @AT@ 5057 @LENGTH@ 31
---------------DEL MethodInvocation@@MethodName:clientDetailsService:[] @AT@ 5089 @LENGTH@ 22
------------INS SimpleName@@clientDetailsUserDetailsService @TO@ MethodInvocation@@MethodName:userDetailsService:[new ClientDetailsUserDetailsService(clientDetailsService())] @AT@ 5257 @LENGTH@ 31
---INS VariableDeclarationStatement@@ClientDetailsUserDetailsService clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()); @TO@ Block@@ThenBody:{  http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(new ClientDetailsUserDetailsService(clientDetailsService())).passwordEncoder(passwordEncoder());} @AT@ 4971 @LENGTH@ 126
------INS SimpleType@@ClientDetailsUserDetailsService @TO@ VariableDeclarationStatement@@ClientDetailsUserDetailsService clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()); @AT@ 4971 @LENGTH@ 31
------INS VariableDeclarationFragment@@clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()) @TO@ VariableDeclarationStatement@@ClientDetailsUserDetailsService clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()); @AT@ 5003 @LENGTH@ 93
---------INS SimpleName@@clientDetailsUserDetailsService @TO@ VariableDeclarationFragment@@clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()) @AT@ 5003 @LENGTH@ 31
---------INS ClassInstanceCreation@@ClientDetailsUserDetailsService[clientDetailsService()] @TO@ VariableDeclarationFragment@@clientDetailsUserDetailsService=new ClientDetailsUserDetailsService(clientDetailsService()) @AT@ 5037 @LENGTH@ 59
------------INS New@@new @TO@ ClassInstanceCreation@@ClientDetailsUserDetailsService[clientDetailsService()] @AT@ 5037 @LENGTH@ 3
------------INS SimpleType@@ClientDetailsUserDetailsService @TO@ ClassInstanceCreation@@ClientDetailsUserDetailsService[clientDetailsService()] @AT@ 5041 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:clientDetailsService:[] @TO@ ClassInstanceCreation@@ClientDetailsUserDetailsService[clientDetailsService()] @AT@ 5073 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder()) @TO@ Block@@ThenBody:{  http.getSharedObject(AuthenticationManagerBuilder.class).userDetailsService(new ClientDetailsUserDetailsService(clientDetailsService())).passwordEncoder(passwordEncoder());} @AT@ 5101 @LENGTH@ 70
------INS MethodInvocation@@clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder()) @TO@ ExpressionStatement@@MethodInvocation:clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder()) @AT@ 5101 @LENGTH@ 69
---------INS SimpleName@@Name:clientDetailsUserDetailsService @TO@ MethodInvocation@@clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder()) @AT@ 5101 @LENGTH@ 31
---------INS SimpleName@@MethodName:setPasswordEncoder:[passwordEncoder()] @TO@ MethodInvocation@@clientDetailsUserDetailsService.setPasswordEncoder(passwordEncoder()) @AT@ 5133 @LENGTH@ 37
------------INS MethodInvocation@@MethodName:passwordEncoder:[] @TO@ SimpleName@@MethodName:setPasswordEncoder:[passwordEncoder()] @AT@ 5152 @LENGTH@ 17


UPD TypeDeclaration@@[public]Http403ForbiddenEntryPointTests, TestCase @TO@ [public]Http403ForbiddenEntryPointTests,  @AT@ 517 @LENGTH@ 653
---DEL SimpleType@@TestCase @AT@ 570 @LENGTH@ 8


UPD MethodDeclaration@@Set<V>, MethodName:rangeByLex, K key, RedisZSetCommands.Range range, RedisZSetCommands.Limit limit,  @TO@ Set<V>, MethodName:rangeByLex, K key, Range range, Limit limit,  @AT@ 1651 @LENGTH@ 80
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1669 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1669 @LENGTH@ 23
---UPD SingleVariableDeclaration@@RedisZSetCommands.Limit limit @TO@ Limit limit @AT@ 1700 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Limit @TO@ Limit @AT@ 1700 @LENGTH@ 23


UPD MethodDeclaration@@public, voidMethodName:CustomHeaderFilterStrategy,  @TO@ voidMethodName:CustomHeaderFilterStrategy,  @AT@ 2639 @LENGTH@ 190
---DEL Modifier@@public @AT@ 2639 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyServer, int port,  @TO@ voidMethodName:MyServer, int port,  @AT@ 3582 @LENGTH@ 67
---DEL Modifier@@public @AT@ 3582 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:headers.put(Exchange.CONTENT_TYPE,MediaType.APPLICATION_XML) @TO@ MethodDeclaration@@public, void, MethodName:testBasicAuth, IOException,  @AT@ 1627 @LENGTH@ 62
---INS MethodInvocation@@headers.put(Exchange.CONTENT_TYPE,MediaType.APPLICATION_XML) @TO@ ExpressionStatement@@MethodInvocation:headers.put(Exchange.CONTENT_TYPE,MediaType.APPLICATION_XML) @AT@ 1627 @LENGTH@ 61
------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.put(Exchange.CONTENT_TYPE,MediaType.APPLICATION_XML) @AT@ 1627 @LENGTH@ 7
------INS SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, MediaType.APPLICATION_XML] @TO@ MethodInvocation@@headers.put(Exchange.CONTENT_TYPE,MediaType.APPLICATION_XML) @AT@ 1635 @LENGTH@ 53
---------INS QualifiedName@@Exchange.CONTENT_TYPE @TO@ SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, MediaType.APPLICATION_XML] @AT@ 1639 @LENGTH@ 21
------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 1639 @LENGTH@ 8
------------INS SimpleName@@CONTENT_TYPE @TO@ QualifiedName@@Exchange.CONTENT_TYPE @AT@ 1648 @LENGTH@ 12
---------INS QualifiedName@@MediaType.APPLICATION_XML @TO@ SimpleName@@MethodName:put:[Exchange.CONTENT_TYPE, MediaType.APPLICATION_XML] @AT@ 1662 @LENGTH@ 25
------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_XML @AT@ 1662 @LENGTH@ 9
------------INS SimpleName@@APPLICATION_XML @TO@ QualifiedName@@MediaType.APPLICATION_XML @AT@ 1672 @LENGTH@ 15


UPD FieldDeclaration@@String, [EVENT_TYPE="CamelEhcacheEventValue"] @TO@ String, [EVENT_TYPE="CamelEhcacheEventType"] @AT@ 1216 @LENGTH@ 45
---UPD VariableDeclarationFragment@@EVENT_TYPE="CamelEhcacheEventValue" @TO@ EVENT_TYPE="CamelEhcacheEventType" @AT@ 1223 @LENGTH@ 37
------UPD StringLiteral@@"CamelEhcacheEventValue" @TO@ "CamelEhcacheEventType" @AT@ 1236 @LENGTH@ 24


INS MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @TO@ TypeDeclaration@@[public]ModelAwareSkipFilter, SkipFilter[ModelAwareFilter<SkipFilter>] @AT@ 1874 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1874 @LENGTH@ 6
---INS SimpleType@@FilterList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1881 @LENGTH@ 10
---INS SimpleName@@MethodName:getFilteredList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1892 @LENGTH@ 15
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1914 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1921 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:this.sessionAuthenticationStrategy=sessionAuthenticationStrategy @TO@ Assignment:this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 9385 @LENGTH@ 67
---UPD Assignment@@this.sessionAuthenticationStrategy=sessionAuthenticationStrategy @TO@ this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 9385 @LENGTH@ 66
------UPD FieldAccess@@this.sessionAuthenticationStrategy @TO@ this.sessionFixationAuthenticationStrategy @AT@ 9385 @LENGTH@ 34
---------UPD SimpleName@@sessionAuthenticationStrategy @TO@ sessionFixationAuthenticationStrategy @AT@ 9390 @LENGTH@ 29


UPD TypeDeclaration@@[public]PlaintextPasswordEncoderTests, TestCase @TO@ [public]PlaintextPasswordEncoderTests,  @AT@ 922 @LENGTH@ 1534
---DEL SimpleType@@TestCase @AT@ 973 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:exchange.setProperty(Exchange.ROLLBACK_ONLY,rollbackOnlyLast) @TO@ MethodInvocation:exchange.setProperty(Exchange.ROLLBACK_ONLY_LAST,rollbackOnlyLast) @AT@ 6644 @LENGTH@ 63
---UPD MethodInvocation@@exchange.setProperty(Exchange.ROLLBACK_ONLY,rollbackOnlyLast) @TO@ exchange.setProperty(Exchange.ROLLBACK_ONLY_LAST,rollbackOnlyLast) @AT@ 6644 @LENGTH@ 62
------UPD SimpleName@@MethodName:setProperty:[Exchange.ROLLBACK_ONLY, rollbackOnlyLast] @TO@ MethodName:setProperty:[Exchange.ROLLBACK_ONLY_LAST, rollbackOnlyLast] @AT@ 6653 @LENGTH@ 53
---------UPD QualifiedName@@Exchange.ROLLBACK_ONLY @TO@ Exchange.ROLLBACK_ONLY_LAST @AT@ 6665 @LENGTH@ 22
------------UPD SimpleName@@ROLLBACK_ONLY @TO@ ROLLBACK_ONLY_LAST @AT@ 6674 @LENGTH@ 13


DEL MethodDeclaration@@public, voidMethodName:MetadataReaderImpl, FileSystem fileSystem, Path path, CompressionCodec codec, int bufferSize, int typeCount, IOException,  @AT@ 1450 @LENGTH@ 208
---DEL Modifier@@public @AT@ 1450 @LENGTH@ 6
---DEL SimpleName@@MethodName:MetadataReaderImpl @AT@ 1457 @LENGTH@ 18
---DEL SingleVariableDeclaration@@FileSystem fileSystem @AT@ 1476 @LENGTH@ 21
------DEL SimpleType@@FileSystem @AT@ 1476 @LENGTH@ 10
------DEL SimpleName@@fileSystem @AT@ 1487 @LENGTH@ 10
---DEL SingleVariableDeclaration@@Path path @AT@ 1499 @LENGTH@ 9
------DEL SimpleType@@Path @AT@ 1499 @LENGTH@ 4
------DEL SimpleName@@path @AT@ 1504 @LENGTH@ 4
---DEL SingleVariableDeclaration@@CompressionCodec codec @AT@ 1516 @LENGTH@ 22
------DEL SimpleType@@CompressionCodec @AT@ 1516 @LENGTH@ 16
------DEL SimpleName@@codec @AT@ 1533 @LENGTH@ 5
---DEL SingleVariableDeclaration@@int bufferSize @AT@ 1540 @LENGTH@ 14
------DEL PrimitiveType@@int @AT@ 1540 @LENGTH@ 3
------DEL SimpleName@@bufferSize @AT@ 1544 @LENGTH@ 10
---DEL SingleVariableDeclaration@@int typeCount @AT@ 1556 @LENGTH@ 13
------DEL PrimitiveType@@int @AT@ 1556 @LENGTH@ 3
------DEL SimpleName@@typeCount @AT@ 1560 @LENGTH@ 9
---DEL SimpleType@@IOException @AT@ 1578 @LENGTH@ 11
---DEL ConstructorInvocation@@this(fileSystem.open(path),codec,bufferSize,typeCount); @AT@ 1596 @LENGTH@ 58
------DEL MethodInvocation@@fileSystem.open(path) @AT@ 1601 @LENGTH@ 21
---------DEL SimpleName@@Name:fileSystem @AT@ 1601 @LENGTH@ 10
---------DEL SimpleName@@MethodName:open:[path] @AT@ 1612 @LENGTH@ 10
------------DEL SimpleName@@path @AT@ 1617 @LENGTH@ 4
------DEL SimpleName@@codec @AT@ 1624 @LENGTH@ 5
------DEL SimpleName@@bufferSize @AT@ 1631 @LENGTH@ 10
------DEL SimpleName@@typeCount @AT@ 1643 @LENGTH@ 9


UPD MethodDeclaration@@protected, String, MethodName:getUserDn,  @TO@ public, String, MethodName:getUserDn,  @AT@ 16502 @LENGTH@ 50
---UPD Modifier@@protected @TO@ public @AT@ 16502 @LENGTH@ 9
---UPD ReturnStatement@@SimpleName:userDn @TO@ FieldAccess:this.userDn @AT@ 16535 @LENGTH@ 14
------INS FieldAccess@@this.userDn @TO@ ReturnStatement@@SimpleName:userDn @AT@ 16539 @LENGTH@ 11
---------INS ThisExpression@@this @TO@ FieldAccess@@this.userDn @AT@ 16539 @LENGTH@ 4
---------INS SimpleName@@userDn @TO@ FieldAccess@@this.userDn @AT@ 16544 @LENGTH@ 6
------DEL SimpleName@@userDn @AT@ 16542 @LENGTH@ 6


UPD MethodDeclaration@@Set<E>, MethodName:rangeByLex, RedisZSetCommands.Range range,  @TO@ Set<E>, MethodName:rangeByLex, Range range,  @AT@ 1796 @LENGTH@ 42
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1807 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1807 @LENGTH@ 23


MOV ExpressionStatement@@MethodInvocation:new DirectFieldAccessor(container).setPropertyValue("logger",logger) @TO@ MethodDeclaration@@public, void, MethodName:testErrorHandlerThrowsARADRE, Exception,  @AT@ 5088 @LENGTH@ 70


DEL MethodDeclaration@@protected, void, MethodName:init, AuthenticationManagerBuilder builder,  @AT@ 3792 @LENGTH@ 182
---DEL Modifier@@protected @AT@ 3792 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 3802 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 3807 @LENGTH@ 4
---DEL SingleVariableDeclaration@@AuthenticationManagerBuilder builder @AT@ 3812 @LENGTH@ 36
------DEL SimpleType@@AuthenticationManagerBuilder @AT@ 3812 @LENGTH@ 28
------DEL SimpleName@@builder @AT@ 3841 @LENGTH@ 7
---DEL IfStatement@@if (!builder.isConfigured()) {  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @AT@ 3854 @LENGTH@ 117
------DEL PrefixExpression@@!builder.isConfigured() @AT@ 3858 @LENGTH@ 23
---------DEL Operator@@! @AT@ 3858 @LENGTH@ 1
---------DEL MethodInvocation@@builder.isConfigured() @AT@ 3859 @LENGTH@ 22
------------DEL SimpleName@@Name:builder @AT@ 3859 @LENGTH@ 7
------------DEL SimpleName@@MethodName:isConfigured:[] @AT@ 3867 @LENGTH@ 14
------DEL Block@@ThenBody:{  builder.authenticationProvider(new AnonymousAuthenticationProvider("default"));} @AT@ 3883 @LENGTH@ 88
---------DEL ExpressionStatement@@MethodInvocation:builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @AT@ 3888 @LENGTH@ 79
------------DEL MethodInvocation@@builder.authenticationProvider(new AnonymousAuthenticationProvider("default")) @AT@ 3888 @LENGTH@ 78
---------------DEL SimpleName@@Name:builder @AT@ 3888 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:authenticationProvider:[new AnonymousAuthenticationProvider("default")] @AT@ 3896 @LENGTH@ 70
------------------DEL ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 3919 @LENGTH@ 46
---------------------DEL New@@new @AT@ 3919 @LENGTH@ 3
---------------------DEL SimpleType@@AnonymousAuthenticationProvider @AT@ 3923 @LENGTH@ 31
---------------------DEL StringLiteral@@"default" @AT@ 3955 @LENGTH@ 9


UPD MethodDeclaration@@public, Set<E>, MethodName:rangeByLex, RedisZSetCommands.Range range,  @TO@ public, Set<E>, MethodName:rangeByLex, Range range,  @AT@ 3970 @LENGTH@ 101
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 3995 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 3995 @LENGTH@ 23


UPD ReturnStatement@@MethodInvocation:archiveFromCurrentApp() @TO@ MethodInvocation:archiveFromCurrentApp().staticContent() @AT@ 1911 @LENGTH@ 31
---INS MethodInvocation@@archiveFromCurrentApp().staticContent() @TO@ ReturnStatement@@MethodInvocation:archiveFromCurrentApp() @AT@ 1918 @LENGTH@ 39
------INS MethodInvocation@@MethodName:archiveFromCurrentApp:[] @TO@ MethodInvocation@@archiveFromCurrentApp().staticContent() @AT@ 1918 @LENGTH@ 23
------INS SimpleName@@MethodName:staticContent:[] @TO@ MethodInvocation@@archiveFromCurrentApp().staticContent() @AT@ 1942 @LENGTH@ 15
---DEL MethodInvocation@@MethodName:archiveFromCurrentApp:[] @AT@ 1918 @LENGTH@ 23


UPD ExpressionStatement@@MethodInvocation:from("direct:start").recipientList().constant("netty4-http:http://0.0.0.0:{{port}}") @TO@ MethodInvocation:from("direct:start").recipientList().constant("netty4-http:http://localhost:{{port}}") @AT@ 2164 @LENGTH@ 106
---UPD MethodInvocation@@from("direct:start").recipientList().constant("netty4-http:http://0.0.0.0:{{port}}") @TO@ from("direct:start").recipientList().constant("netty4-http:http://localhost:{{port}}") @AT@ 2164 @LENGTH@ 105
------UPD SimpleName@@MethodName:constant:["netty4-http:http://0.0.0.0:{{port}}"] @TO@ MethodName:constant:["netty4-http:http://localhost:{{port}}"] @AT@ 2222 @LENGTH@ 47
---------UPD StringLiteral@@"netty4-http:http://0.0.0.0:{{port}}" @TO@ "netty4-http:http://localhost:{{port}}" @AT@ 2231 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:IdempotentConsumerCallback, Exchange exchange, Synchronization onCompletion, AsyncCallback callback, boolean completionEager,  @TO@ voidMethodName:IdempotentConsumerCallback, Exchange exchange, Synchronization onCompletion, AsyncCallback callback, boolean completionEager,  @AT@ 9712 @LENGTH@ 317
---DEL Modifier@@public @AT@ 9712 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:IntrospectionSupport.getProperties(configuration,params,null) @TO@ MethodInvocation:IntrospectionSupport.getProperties(configuration,params,null,false) @AT@ 4949 @LENGTH@ 64
---UPD MethodInvocation@@IntrospectionSupport.getProperties(configuration,params,null) @TO@ IntrospectionSupport.getProperties(configuration,params,null,false) @AT@ 4949 @LENGTH@ 63
------UPD SimpleName@@MethodName:getProperties:[configuration, params, null] @TO@ MethodName:getProperties:[configuration, params, null, false] @AT@ 4970 @LENGTH@ 42
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getProperties:[configuration, params, null] @AT@ 5051 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @TO@ TypeDeclaration@@[public]OAuth2ExceptionJackson2DeserializerTests,  @AT@ 6990 @LENGTH@ 349
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 6990 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 6997 @LENGTH@ 4
---INS SimpleName@@MethodName:readValueWithNullErrorDescription @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 7002 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 7045 @LENGTH@ 9
---INS VariableDeclarationStatement@@OAuth2Exception ex=new OAuth2Exception(null); @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 7059 @LENGTH@ 47
------INS SimpleType@@OAuth2Exception @TO@ VariableDeclarationStatement@@OAuth2Exception ex=new OAuth2Exception(null); @AT@ 7059 @LENGTH@ 15
------INS VariableDeclarationFragment@@ex=new OAuth2Exception(null) @TO@ VariableDeclarationStatement@@OAuth2Exception ex=new OAuth2Exception(null); @AT@ 7075 @LENGTH@ 30
---------INS SimpleName@@ex @TO@ VariableDeclarationFragment@@ex=new OAuth2Exception(null) @AT@ 7075 @LENGTH@ 2
---------INS ClassInstanceCreation@@OAuth2Exception[null] @TO@ VariableDeclarationFragment@@ex=new OAuth2Exception(null) @AT@ 7080 @LENGTH@ 25
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Exception[null] @AT@ 7080 @LENGTH@ 3
------------INS SimpleType@@OAuth2Exception @TO@ ClassInstanceCreation@@OAuth2Exception[null] @AT@ 7084 @LENGTH@ 15
------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@OAuth2Exception[null] @AT@ 7100 @LENGTH@ 4
---INS VariableDeclarationStatement@@OAuth2Exception result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class); @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 7109 @LENGTH@ 96
------INS SimpleType@@OAuth2Exception @TO@ VariableDeclarationStatement@@OAuth2Exception result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class); @AT@ 7109 @LENGTH@ 15
------INS VariableDeclarationFragment@@result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @TO@ VariableDeclarationStatement@@OAuth2Exception result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class); @AT@ 7125 @LENGTH@ 79
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @AT@ 7125 @LENGTH@ 6
---------INS MethodInvocation@@mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @TO@ VariableDeclarationFragment@@result=mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @AT@ 7134 @LENGTH@ 70
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @AT@ 7134 @LENGTH@ 6
------------INS SimpleName@@MethodName:readValue:[mapper.writeValueAsString(ex), OAuth2Exception.class] @TO@ MethodInvocation@@mapper.readValue(mapper.writeValueAsString(ex),OAuth2Exception.class) @AT@ 7141 @LENGTH@ 63
---------------INS MethodInvocation@@mapper.writeValueAsString(ex) @TO@ SimpleName@@MethodName:readValue:[mapper.writeValueAsString(ex), OAuth2Exception.class] @AT@ 7151 @LENGTH@ 29
------------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsString(ex) @AT@ 7151 @LENGTH@ 6
------------------INS SimpleName@@MethodName:writeValueAsString:[ex] @TO@ MethodInvocation@@mapper.writeValueAsString(ex) @AT@ 7158 @LENGTH@ 22
---------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:writeValueAsString:[ex] @AT@ 7177 @LENGTH@ 2
---------------INS TypeLiteral@@OAuth2Exception.class @TO@ SimpleName@@MethodName:readValue:[mapper.writeValueAsString(ex), OAuth2Exception.class] @AT@ 7182 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertEquals(ex.getOAuth2ErrorCode(),result.getMessage()) @TO@ MethodDeclaration@@public, void, MethodName:readValueWithNullErrorDescription, Exception,  @AT@ 7277 @LENGTH@ 59
------INS MethodInvocation@@assertEquals(ex.getOAuth2ErrorCode(),result.getMessage()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(ex.getOAuth2ErrorCode(),result.getMessage()) @AT@ 7277 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertEquals:[ex.getOAuth2ErrorCode(), result.getMessage()] @TO@ MethodInvocation@@assertEquals(ex.getOAuth2ErrorCode(),result.getMessage()) @AT@ 7277 @LENGTH@ 58
------------INS MethodInvocation@@ex.getOAuth2ErrorCode() @TO@ SimpleName@@MethodName:assertEquals:[ex.getOAuth2ErrorCode(), result.getMessage()] @AT@ 7290 @LENGTH@ 23
---------------INS SimpleName@@Name:ex @TO@ MethodInvocation@@ex.getOAuth2ErrorCode() @AT@ 7290 @LENGTH@ 2
---------------INS SimpleName@@MethodName:getOAuth2ErrorCode:[] @TO@ MethodInvocation@@ex.getOAuth2ErrorCode() @AT@ 7293 @LENGTH@ 20
------------INS MethodInvocation@@result.getMessage() @TO@ SimpleName@@MethodName:assertEquals:[ex.getOAuth2ErrorCode(), result.getMessage()] @AT@ 7315 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getMessage() @AT@ 7315 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@result.getMessage() @AT@ 7322 @LENGTH@ 12


INS TryStatement@@try {  this.consul=builder.build();} catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @TO@ MethodDeclaration@@public, void, MethodName:start, StartContext startContext, StartException,  @AT@ 1179 @LENGTH@ 167
---MOV ExpressionStatement@@Assignment:this.consul=builder.build() @TO@ TryStatement@@try {  this.consul=builder.build();} catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @AT@ 1179 @LENGTH@ 30
---INS CatchClause@@catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @TO@ TryStatement@@try {  this.consul=builder.build();} catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @AT@ 1238 @LENGTH@ 108
------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @AT@ 1245 @LENGTH@ 11
---------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 1245 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 1255 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new StartException("Failed to connect consul at " + url,e) @TO@ CatchClause@@catch (Exception e) {  throw new StartException("Failed to connect consul at " + url,e);} @AT@ 1272 @LENGTH@ 64
---------INS ClassInstanceCreation@@StartException["Failed to connect consul at " + url, e] @TO@ ThrowStatement@@ClassInstanceCreation:new StartException("Failed to connect consul at " + url,e) @AT@ 1278 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@StartException["Failed to connect consul at " + url, e] @AT@ 1278 @LENGTH@ 3
------------INS SimpleType@@StartException @TO@ ClassInstanceCreation@@StartException["Failed to connect consul at " + url, e] @AT@ 1282 @LENGTH@ 14
------------INS InfixExpression@@"Failed to connect consul at " + url @TO@ ClassInstanceCreation@@StartException["Failed to connect consul at " + url, e] @AT@ 1297 @LENGTH@ 34
---------------INS StringLiteral@@"Failed to connect consul at " @TO@ InfixExpression@@"Failed to connect consul at " + url @AT@ 1297 @LENGTH@ 30
---------------INS Operator@@+ @TO@ InfixExpression@@"Failed to connect consul at " + url @AT@ 1327 @LENGTH@ 1
---------------INS SimpleName@@url @TO@ InfixExpression@@"Failed to connect consul at " + url @AT@ 1328 @LENGTH@ 3
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@StartException["Failed to connect consul at " + url, e] @AT@ 1333 @LENGTH@ 1


UPD TypeDeclaration@@[public]InfinispanUtil,  @TO@ [public, final]InfinispanUtil,  @AT@ 1179 @LENGTH@ 1198
---INS Modifier@@final @TO@ TypeDeclaration@@[public]InfinispanUtil,  @AT@ 1183 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(query,is(query(where("username").regex(".*thew.*").not()))) @TO@ MethodInvocation:assertThat(query.getQueryObject(),is(query(where("username").not().regex(".*thew.*")).getQueryObject())) @AT@ 15714 @LENGTH@ 72
---UPD MethodInvocation@@assertThat(query,is(query(where("username").regex(".*thew.*").not()))) @TO@ assertThat(query.getQueryObject(),is(query(where("username").not().regex(".*thew.*")).getQueryObject())) @AT@ 15714 @LENGTH@ 71
------UPD SimpleName@@MethodName:assertThat:[query, is(query(where("username").regex(".*thew.*").not()))] @TO@ MethodName:assertThat:[query.getQueryObject(), is(query(where("username").not().regex(".*thew.*")).getQueryObject())] @AT@ 15714 @LENGTH@ 71
---------DEL SimpleName@@query @AT@ 15725 @LENGTH@ 5
---------UPD MethodInvocation@@is(query(where("username").regex(".*thew.*").not())) @TO@ is(query(where("username").not().regex(".*thew.*")).getQueryObject()) @AT@ 15732 @LENGTH@ 52
------------UPD SimpleName@@MethodName:is:[query(where("username").regex(".*thew.*").not())] @TO@ MethodName:is:[query(where("username").not().regex(".*thew.*")).getQueryObject()] @AT@ 15732 @LENGTH@ 52
---------------UPD MethodInvocation@@query(where("username").regex(".*thew.*").not()) @TO@ query(where("username").not().regex(".*thew.*")).getQueryObject() @AT@ 15735 @LENGTH@ 48
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------INS MethodInvocation@@MethodName:query:[where("username").not().regex(".*thew.*")] @TO@ MethodInvocation@@query(where("username").regex(".*thew.*").not()) @AT@ 15776 @LENGTH@ 48
---------------------INS MethodInvocation@@where("username").not().regex(".*thew.*") @TO@ MethodInvocation@@MethodName:query:[where("username").not().regex(".*thew.*")] @AT@ 15782 @LENGTH@ 41
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query(where("username").regex(".*thew.*").not()) @AT@ 15825 @LENGTH@ 16
------------UPD SimpleName@@MethodName:is:[query(where("username").regex(".*thew.*").not())] @TO@ MethodName:is:[query(where("username").not().regex(".*thew.*")).getQueryObject()] @AT@ 15732 @LENGTH@ 52
---------------UPD MethodInvocation@@query(where("username").regex(".*thew.*").not()) @TO@ query(where("username").not().regex(".*thew.*")).getQueryObject() @AT@ 15735 @LENGTH@ 48
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------DEL SimpleName@@MethodName:query:[where("username").regex(".*thew.*").not()] @AT@ 15735 @LENGTH@ 48
---------------------DEL MethodInvocation@@where("username").regex(".*thew.*").not() @AT@ 15741 @LENGTH@ 41
------------------INS MethodInvocation@@MethodName:query:[where("username").not().regex(".*thew.*")] @TO@ MethodInvocation@@query(where("username").regex(".*thew.*").not()) @AT@ 15776 @LENGTH@ 48
---------------------INS MethodInvocation@@where("username").not().regex(".*thew.*") @TO@ MethodInvocation@@MethodName:query:[where("username").not().regex(".*thew.*")] @AT@ 15782 @LENGTH@ 41
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:regex:[".*thew.*"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 35
---------------------------DEL StringLiteral@@".*thew.*" @AT@ 15765 @LENGTH@ 10
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV MethodInvocation@@MethodName:where:["username"] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15741 @LENGTH@ 17
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------------MOV SimpleName@@MethodName:not:[] @TO@ MethodInvocation@@where("username").not().regex(".*thew.*") @AT@ 15777 @LENGTH@ 5
---------------------------INS StringLiteral@@".*thew.*" @TO@ SimpleName@@MethodName:not:[] @AT@ 15812 @LENGTH@ 10
------------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query(where("username").regex(".*thew.*").not()) @AT@ 15825 @LENGTH@ 16
---------INS MethodInvocation@@query.getQueryObject() @TO@ SimpleName@@MethodName:assertThat:[query, is(query(where("username").regex(".*thew.*").not()))] @AT@ 15749 @LENGTH@ 22
------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.getQueryObject() @AT@ 15749 @LENGTH@ 5
------------INS SimpleName@@MethodName:getQueryObject:[] @TO@ MethodInvocation@@query.getQueryObject() @AT@ 15755 @LENGTH@ 16


MOV FieldDeclaration@@private, final, ServiceActivatorAsset, [asset] @TO@ TypeDeclaration@@[public, final]ServiceActivatorArchiveImpl, AssignableBase<ArchiveBase<?>>[ServiceActivatorArchive] @AT@ 1220 @LENGTH@ 42


UPD IfStatement@@if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT) || conf.isWebUiQueryInfoCacheEnabled()) {  String explainOutput=getExplainOutput(sem,plan,tree);  if (explainOutput != null) {    if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT)) {      LOG.info("EXPLAIN output for queryid " + queryId + " : "+ explainOutput);    }    if (conf.isWebUiQueryInfoCacheEnabled()) {      queryDisplay.setExplainPlan(explainOutput);    }  }} @TO@ if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT)) {  String explainOutput=getExplainOutput(sem,plan,tree);  if (explainOutput != null) {    if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT)) {      LOG.info("EXPLAIN output for queryid " + queryId + " : "+ explainOutput);    }    if (conf.isWebUiQueryInfoCacheEnabled()) {      queryDisplay.setExplainPlan(explainOutput);    }  }} @AT@ 18700 @LENGTH@ 528
---DEL InfixExpression@@conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT) || conf.isWebUiQueryInfoCacheEnabled() @AT@ 18704 @LENGTH@ 99
------DEL Operator@@|| @AT@ 18753 @LENGTH@ 2
------DEL MethodInvocation@@conf.isWebUiQueryInfoCacheEnabled() @AT@ 18768 @LENGTH@ 35
---------DEL SimpleName@@Name:conf @AT@ 18768 @LENGTH@ 4
---------DEL SimpleName@@MethodName:isWebUiQueryInfoCacheEnabled:[] @AT@ 18773 @LENGTH@ 30
---MOV MethodInvocation@@conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT) @TO@ IfStatement@@if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT) || conf.isWebUiQueryInfoCacheEnabled()) {  String explainOutput=getExplainOutput(sem,plan,tree);  if (explainOutput != null) {    if (conf.getBoolVar(ConfVars.HIVE_LOG_EXPLAIN_OUTPUT)) {      LOG.info("EXPLAIN output for queryid " + queryId + " : "+ explainOutput);    }    if (conf.isWebUiQueryInfoCacheEnabled()) {      queryDisplay.setExplainPlan(explainOutput);    }  }} @AT@ 18704 @LENGTH@ 49


UPD CatchClause@@catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(209,cause.getStatusCode());  String body=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertEquals("Not allowed",body);} @TO@ catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(209,cause.getStatusCode());  String body=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertEquals("Not allowed",body);  cause.getHttpContent().content().release();} @AT@ 1374 @LENGTH@ 387
---INS ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @TO@ CatchClause@@catch (CamelExecutionException e) {  NettyHttpOperationFailedException cause=assertIsInstanceOf(NettyHttpOperationFailedException.class,e.getCause());  assertEquals(209,cause.getStatusCode());  String body=context.getTypeConverter().convertTo(String.class,cause.getHttpContent().content());  assertEquals("Not allowed",body);} @AT@ 1764 @LENGTH@ 43
------INS MethodInvocation@@cause.getHttpContent().content().release() @TO@ ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @AT@ 1764 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1764 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:getHttpContent:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1764 @LENGTH@ 22
---------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1764 @LENGTH@ 5
---------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 1797 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:qtp.setName("CamelJettyWebSocketServer(" + "test" + ")") @TO@ MethodInvocation:qtp.setName("CamelJettyWebSocketServer") @AT@ 14835 @LENGTH@ 57
---UPD MethodInvocation@@qtp.setName("CamelJettyWebSocketServer(" + "test" + ")") @TO@ qtp.setName("CamelJettyWebSocketServer") @AT@ 14835 @LENGTH@ 56
------UPD SimpleName@@MethodName:setName:["CamelJettyWebSocketServer(" + "test" + ")"] @TO@ MethodName:setName:["CamelJettyWebSocketServer"] @AT@ 14839 @LENGTH@ 52
---------DEL InfixExpression@@"CamelJettyWebSocketServer(" + "test" + ")" @AT@ 14847 @LENGTH@ 43
------------DEL StringLiteral@@"CamelJettyWebSocketServer(" @AT@ 14847 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 14875 @LENGTH@ 1
------------DEL StringLiteral@@"test" @AT@ 14878 @LENGTH@ 6
------------DEL StringLiteral@@")" @AT@ 14887 @LENGTH@ 3
---------INS StringLiteral@@"CamelJettyWebSocketServer" @TO@ SimpleName@@MethodName:setName:["CamelJettyWebSocketServer(" + "test" + ")"] @AT@ 14847 @LENGTH@ 27


UPD MethodDeclaration@@public, voidMethodName:BatchConsumptionTask, AtomicBoolean timeoutInterval,  @TO@ voidMethodName:BatchConsumptionTask, AtomicBoolean timeoutInterval,  @AT@ 12207 @LENGTH@ 130
---DEL Modifier@@public @AT@ 12207 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @TO@ voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @AT@ 7075 @LENGTH@ 148
---DEL Modifier@@public @AT@ 7075 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:DeploymentScannerLogger.ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @TO@ MethodInvocation:ROOT_LOGGER.info(ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())) @AT@ 2934 @LENGTH@ 106
---UPD MethodInvocation@@DeploymentScannerLogger.ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @TO@ ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @AT@ 2934 @LENGTH@ 105
---INS MethodInvocation@@ROOT_LOGGER.info(ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())) @TO@ ExpressionStatement@@MethodInvocation:DeploymentScannerLogger.ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @AT@ 3033 @LENGTH@ 99
------INS SimpleName@@Name:ROOT_LOGGER @TO@ MethodInvocation@@ROOT_LOGGER.info(ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())) @AT@ 3033 @LENGTH@ 11
------INS SimpleName@@MethodName:info:[ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())] @TO@ MethodInvocation@@ROOT_LOGGER.info(ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())) @AT@ 3045 @LENGTH@ 87
---------MOV MethodInvocation@@DeploymentScannerLogger.ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @TO@ SimpleName@@MethodName:info:[ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber())] @AT@ 2934 @LENGTH@ 105
------------DEL QualifiedName@@Name:DeploymentScannerLogger.ROOT_LOGGER @AT@ 2934 @LENGTH@ 35
------------INS SimpleName@@Name:ROOT_LOGGER @TO@ MethodInvocation@@DeploymentScannerLogger.ROOT_LOGGER.invalidXmlFileFound(fileName,e.getLineNumber(),e.getColumnNumber()) @AT@ 3050 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:MyObject, String name, byte[] content,  @TO@ voidMethodName:MyObject, String name, byte[] content,  @AT@ 2828 @LENGTH@ 110
---DEL Modifier@@public @AT@ 2828 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:header(SpringBatchComponent.JOB_NAME).append("thisJobDoesNotExsistAtAll" + Date.from(Instant.now())) @TO@ MethodInvocation:header(SpringBatchConstants.JOB_NAME).append("thisJobDoesNotExsistAtAll" + Date.from(Instant.now())) @AT@ 3881 @LENGTH@ 101
---UPD MethodInvocation@@header(SpringBatchComponent.JOB_NAME).append("thisJobDoesNotExsistAtAll" + Date.from(Instant.now())) @TO@ header(SpringBatchConstants.JOB_NAME).append("thisJobDoesNotExsistAtAll" + Date.from(Instant.now())) @AT@ 3881 @LENGTH@ 100
------UPD MethodInvocation@@MethodName:header:[SpringBatchComponent.JOB_NAME] @TO@ MethodName:header:[SpringBatchConstants.JOB_NAME] @AT@ 3881 @LENGTH@ 37
---------UPD QualifiedName@@SpringBatchComponent.JOB_NAME @TO@ SpringBatchConstants.JOB_NAME @AT@ 3888 @LENGTH@ 29
------------UPD SimpleName@@SpringBatchComponent @TO@ SpringBatchConstants @AT@ 3888 @LENGTH@ 20


INS MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @TO@ TypeDeclaration@@[public]FractionListTest,  @AT@ 2817 @LENGTH@ 285
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2817 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2824 @LENGTH@ 4
---INS SimpleName@@MethodName:testNameAndDescription @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2829 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2861 @LENGTH@ 9
---INS VariableDeclarationStatement@@FractionDescriptor cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi"); @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2881 @LENGTH@ 94
------INS SimpleType@@FractionDescriptor @TO@ VariableDeclarationStatement@@FractionDescriptor cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi"); @AT@ 2881 @LENGTH@ 18
------INS VariableDeclarationFragment@@cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @TO@ VariableDeclarationStatement@@FractionDescriptor cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi"); @AT@ 2900 @LENGTH@ 74
---------INS SimpleName@@cdi @TO@ VariableDeclarationFragment@@cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @AT@ 2900 @LENGTH@ 3
---------INS MethodInvocation@@FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @TO@ VariableDeclarationFragment@@cdi=FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @AT@ 2906 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:get:[] @TO@ MethodInvocation@@FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @AT@ 2906 @LENGTH@ 18
------------INS SimpleName@@Name:FractionList @TO@ MethodInvocation@@FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @AT@ 2906 @LENGTH@ 12
------------INS SimpleName@@MethodName:getFractionDescriptor:["org.wildfly.swarm", "cdi"] @TO@ MethodInvocation@@FractionList.get().getFractionDescriptor("org.wildfly.swarm","cdi") @AT@ 2925 @LENGTH@ 49
---------------INS StringLiteral@@"org.wildfly.swarm" @TO@ SimpleName@@MethodName:getFractionDescriptor:["org.wildfly.swarm", "cdi"] @AT@ 2947 @LENGTH@ 19
---------------INS StringLiteral@@"cdi" @TO@ SimpleName@@MethodName:getFractionDescriptor:["org.wildfly.swarm", "cdi"] @AT@ 2968 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cdi.getName()).isEqualTo("CDI") @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 2984 @LENGTH@ 43
------INS MethodInvocation@@assertThat(cdi.getName()).isEqualTo("CDI") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cdi.getName()).isEqualTo("CDI") @AT@ 2984 @LENGTH@ 42
---------INS MethodInvocation@@MethodName:assertThat:[cdi.getName()] @TO@ MethodInvocation@@assertThat(cdi.getName()).isEqualTo("CDI") @AT@ 2984 @LENGTH@ 25
------------INS MethodInvocation@@cdi.getName() @TO@ MethodInvocation@@MethodName:assertThat:[cdi.getName()] @AT@ 2995 @LENGTH@ 13
---------------INS SimpleName@@Name:cdi @TO@ MethodInvocation@@cdi.getName() @AT@ 2995 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@cdi.getName() @AT@ 2999 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["CDI"] @TO@ MethodInvocation@@assertThat(cdi.getName()).isEqualTo("CDI") @AT@ 3010 @LENGTH@ 16
------------INS StringLiteral@@"CDI" @TO@ SimpleName@@MethodName:isEqualTo:["CDI"] @AT@ 3020 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertThat(cdi.getDescription()).isEqualTo("CDI with Weld") @TO@ MethodDeclaration@@public, void, MethodName:testNameAndDescription, Exception,  @AT@ 3036 @LENGTH@ 60
------INS MethodInvocation@@assertThat(cdi.getDescription()).isEqualTo("CDI with Weld") @TO@ ExpressionStatement@@MethodInvocation:assertThat(cdi.getDescription()).isEqualTo("CDI with Weld") @AT@ 3036 @LENGTH@ 59
---------INS MethodInvocation@@MethodName:assertThat:[cdi.getDescription()] @TO@ MethodInvocation@@assertThat(cdi.getDescription()).isEqualTo("CDI with Weld") @AT@ 3036 @LENGTH@ 32
------------INS MethodInvocation@@cdi.getDescription() @TO@ MethodInvocation@@MethodName:assertThat:[cdi.getDescription()] @AT@ 3047 @LENGTH@ 20
---------------INS SimpleName@@Name:cdi @TO@ MethodInvocation@@cdi.getDescription() @AT@ 3047 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getDescription:[] @TO@ MethodInvocation@@cdi.getDescription() @AT@ 3051 @LENGTH@ 16
---------INS SimpleName@@MethodName:isEqualTo:["CDI with Weld"] @TO@ MethodInvocation@@assertThat(cdi.getDescription()).isEqualTo("CDI with Weld") @AT@ 3069 @LENGTH@ 26
------------INS StringLiteral@@"CDI with Weld" @TO@ SimpleName@@MethodName:isEqualTo:["CDI with Weld"] @AT@ 3079 @LENGTH@ 15


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPNettyDecoder, HL7MLLPConfig config,  @TO@ voidMethodName:HL7MLLPNettyDecoder, HL7MLLPConfig config,  @AT@ 1797 @LENGTH@ 263
---DEL Modifier@@public @AT@ 1797 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyUnitOfWork, Exchange exchange,  @TO@ voidMethodName:MyUnitOfWork, Exchange exchange,  @AT@ 2426 @LENGTH@ 79
---DEL Modifier@@public @AT@ 2426 @LENGTH@ 6


UPD VariableDeclarationStatement@@final List<ModuleDependencyType<DependenciesType<?>>> modules=dependencies.getAllModule(); @TO@ List<ModuleDependencyType<DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>>>> modules=dependencies.getAllModule(); @AT@ 2081 @LENGTH@ 92
---DEL Modifier@@final @AT@ 2081 @LENGTH@ 5
---UPD ParameterizedType@@List<ModuleDependencyType<DependenciesType<?>>> @TO@ List<ModuleDependencyType<DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>>>> @AT@ 2087 @LENGTH@ 47
------UPD ParameterizedType@@ModuleDependencyType<DependenciesType<?>> @TO@ ModuleDependencyType<DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>>> @AT@ 2092 @LENGTH@ 41
---------UPD ParameterizedType@@DependenciesType<?> @TO@ DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>> @AT@ 2113 @LENGTH@ 19
------------DEL WildcardType@@? @AT@ 2130 @LENGTH@ 1
------------INS ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @TO@ ParameterizedType@@DependenciesType<?> @AT@ 2211 @LENGTH@ 50
---------------INS SimpleType@@DeploymentType @TO@ ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @AT@ 2211 @LENGTH@ 14
---------------INS SimpleType@@JBossDeploymentStructureDescriptor @TO@ ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @AT@ 2226 @LENGTH@ 34


INS MethodDeclaration@@public, void, MethodName:tearDown,  @TO@ TypeDeclaration@@[public]NettyConverterTest, CamelTestSupport @AT@ 1549 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:tearDown,  @AT@ 1549 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:tearDown,  @AT@ 1556 @LENGTH@ 4
---INS SimpleName@@MethodName:tearDown @TO@ MethodDeclaration@@public, void, MethodName:tearDown,  @AT@ 1561 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:buf.release() @TO@ MethodDeclaration@@public, void, MethodName:tearDown,  @AT@ 1582 @LENGTH@ 14
------INS MethodInvocation@@buf.release() @TO@ ExpressionStatement@@MethodInvocation:buf.release() @AT@ 1582 @LENGTH@ 13
---------INS SimpleName@@Name:buf @TO@ MethodInvocation@@buf.release() @AT@ 1582 @LENGTH@ 3
---------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@buf.release() @AT@ 1586 @LENGTH@ 9


UPD ReturnStatement@@ConditionalExpression:keySerializer != null ? SerializationUtils.deserialize(rawKeys,keySerializer) : rawKeys @TO@ ConditionalExpression:keySerializer != null ? SerializationUtils.deserialize(rawKeys,keySerializer) : (Set<K>)rawKeys @AT@ 24379 @LENGTH@ 96
---UPD ConditionalExpression@@keySerializer != null ? SerializationUtils.deserialize(rawKeys,keySerializer) : rawKeys @TO@ keySerializer != null ? SerializationUtils.deserialize(rawKeys,keySerializer) : (Set<K>)rawKeys @AT@ 24386 @LENGTH@ 88
------INS CastExpression@@(Set<K>)rawKeys @TO@ ConditionalExpression@@keySerializer != null ? SerializationUtils.deserialize(rawKeys,keySerializer) : rawKeys @AT@ 24467 @LENGTH@ 16
---------INS ParameterizedType@@Set<K> @TO@ CastExpression@@(Set<K>)rawKeys @AT@ 24468 @LENGTH@ 6
------------INS SimpleType@@Set @TO@ ParameterizedType@@Set<K> @AT@ 24468 @LENGTH@ 3
------------INS SimpleType@@K @TO@ ParameterizedType@@Set<K> @AT@ 24472 @LENGTH@ 1
---------INS SimpleName@@rawKeys @TO@ CastExpression@@(Set<K>)rawKeys @AT@ 24476 @LENGTH@ 7
------DEL SimpleName@@rawKeys @AT@ 24467 @LENGTH@ 7


UPD TypeDeclaration@@[public]Md4PasswordEncoderTests, TestCase @TO@ [public]Md4PasswordEncoderTests,  @AT@ 805 @LENGTH@ 2023
---DEL SimpleType@@TestCase @AT@ 850 @LENGTH@ 8


UPD TypeDeclaration@@[public]JBossDeploymentStructureContainer, [Archive<T>] @TO@ [@SuppressWarnings("unchecked"), public]JBossDeploymentStructureContainer, [Archive<T>] @AT@ 819 @LENGTH@ 1294
---INS SingleMemberAnnotation@@@SuppressWarnings("unchecked") @TO@ TypeDeclaration@@[public]JBossDeploymentStructureContainer, [Archive<T>] @AT@ 819 @LENGTH@ 30


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPConfigAwareChannelHandlerFactory,  @TO@ voidMethodName:HL7MLLPConfigAwareChannelHandlerFactory,  @AT@ 1158 @LENGTH@ 91
---DEL Modifier@@public @AT@ 1158 @LENGTH@ 6


UPD TypeDeclaration@@[public]SecureChannelProcessorTests, TestCase @TO@ [public]SecureChannelProcessorTests,  @AT@ 1180 @LENGTH@ 3851
---DEL SimpleType@@TestCase @AT@ 1229 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 6522 @LENGTH@ 37
---INS MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @AT@ 6522 @LENGTH@ 36
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 6522 @LENGTH@ 18
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 6541 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 6555 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:ParsingContext, Properties properties, String prefixToken, String suffixToken, String propertyPrefix, String propertySuffix, boolean fallbackToUnaugmentedProperty,  @TO@ voidMethodName:ParsingContext, Properties properties, String prefixToken, String suffixToken, String propertyPrefix, String propertySuffix, boolean fallbackToUnaugmentedProperty,  @AT@ 3058 @LENGTH@ 521
---DEL Modifier@@public @AT@ 3058 @LENGTH@ 6


UPD EnhancedForStatement@@for (String key : query.keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=(Set<Class<?>>)query.get(key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} @TO@ for (String key : query.keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=(Set<Class<?>>)query.get(key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  try {    Field field=createPropertyField(entity,key,mappingContext);    Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));    result.put(entry.getKey(),entry.getValue());  } catch (  InvalidPersistentPropertyPath invalidPathException) {    if (!(query.get(key) instanceof DBObject)) {      throw invalidPathException;    }    result.put(key,query.get(key));  }} @AT@ 4054 @LENGTH@ 681
---INS TryStatement@@try {  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @TO@ EnhancedForStatement@@for (String key : query.keySet()) {  if (Query.isRestrictedTypeKey(key)) {    @SuppressWarnings("unchecked") Set<Class<?>> restrictedTypes=(Set<Class<?>>)query.get(key);    this.converter.getTypeMapper().writeTypeRestrictions(result,restrictedTypes);    continue;  }  if (isKeyword(key)) {    result.putAll(getMappedKeyword(new Keyword(query,key),entity));    continue;  }  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} @AT@ 4616 @LENGTH@ 458
------MOV VariableDeclarationStatement@@Field field=createPropertyField(entity,key,mappingContext); @TO@ TryStatement@@try {  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4537 @LENGTH@ 63
------MOV VariableDeclarationStatement@@Entry<String,Object> entry=getMappedObjectForField(field,query.get(key)); @TO@ TryStatement@@try {  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4604 @LENGTH@ 77
------MOV ExpressionStatement@@MethodInvocation:result.put(entry.getKey(),entry.getValue()) @TO@ TryStatement@@try {  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4686 @LENGTH@ 45
------INS CatchClause@@catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @TO@ TryStatement@@try {  Field field=createPropertyField(entity,key,mappingContext);  Entry<String,Object> entry=getMappedObjectForField(field,query.get(key));  result.put(entry.getKey(),entry.getValue());} catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4828 @LENGTH@ 246
---------INS SingleVariableDeclaration@@InvalidPersistentPropertyPath invalidPathException @TO@ CatchClause@@catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4835 @LENGTH@ 50
------------INS SimpleType@@InvalidPersistentPropertyPath @TO@ SingleVariableDeclaration@@InvalidPersistentPropertyPath invalidPathException @AT@ 4835 @LENGTH@ 29
------------INS SimpleName@@invalidPathException @TO@ SingleVariableDeclaration@@InvalidPersistentPropertyPath invalidPathException @AT@ 4865 @LENGTH@ 20
---------INS IfStatement@@if (!(query.get(key) instanceof DBObject)) {  throw invalidPathException;} @TO@ CatchClause@@catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 4948 @LENGTH@ 83
------------INS PrefixExpression@@!(query.get(key) instanceof DBObject) @TO@ IfStatement@@if (!(query.get(key) instanceof DBObject)) {  throw invalidPathException;} @AT@ 4952 @LENGTH@ 37
---------------INS Operator@@! @TO@ PrefixExpression@@!(query.get(key) instanceof DBObject) @AT@ 4952 @LENGTH@ 1
---------------INS ParenthesizedExpression@@(query.get(key) instanceof DBObject) @TO@ PrefixExpression@@!(query.get(key) instanceof DBObject) @AT@ 4953 @LENGTH@ 36
------------------INS InstanceofExpression@@query.get(key) instanceof DBObject @TO@ ParenthesizedExpression@@(query.get(key) instanceof DBObject) @AT@ 4954 @LENGTH@ 34
---------------------INS MethodInvocation@@query.get(key) @TO@ InstanceofExpression@@query.get(key) instanceof DBObject @AT@ 4954 @LENGTH@ 14
------------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.get(key) @AT@ 4954 @LENGTH@ 5
------------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@query.get(key) @AT@ 4960 @LENGTH@ 8
---------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 4964 @LENGTH@ 3
---------------------INS Instanceof@@instanceof @TO@ InstanceofExpression@@query.get(key) instanceof DBObject @AT@ 4969 @LENGTH@ 10
---------------------INS SimpleType@@DBObject @TO@ InstanceofExpression@@query.get(key) instanceof DBObject @AT@ 4980 @LENGTH@ 8
------------INS Block@@ThenBody:{  throw invalidPathException;} @TO@ IfStatement@@if (!(query.get(key) instanceof DBObject)) {  throw invalidPathException;} @AT@ 4991 @LENGTH@ 40
---------------INS ThrowStatement@@SimpleName:invalidPathException @TO@ Block@@ThenBody:{  throw invalidPathException;} @AT@ 4998 @LENGTH@ 27
------------------INS SimpleName@@invalidPathException @TO@ ThrowStatement@@SimpleName:invalidPathException @AT@ 5004 @LENGTH@ 20
---------INS ExpressionStatement@@MethodInvocation:result.put(key,query.get(key)) @TO@ CatchClause@@catch (InvalidPersistentPropertyPath invalidPathException) {  if (!(query.get(key) instanceof DBObject)) {    throw invalidPathException;  }  result.put(key,query.get(key));} @AT@ 5037 @LENGTH@ 32
------------INS MethodInvocation@@result.put(key,query.get(key)) @TO@ ExpressionStatement@@MethodInvocation:result.put(key,query.get(key)) @AT@ 5037 @LENGTH@ 31
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.put(key,query.get(key)) @AT@ 5037 @LENGTH@ 6
---------------INS SimpleName@@MethodName:put:[key, query.get(key)] @TO@ MethodInvocation@@result.put(key,query.get(key)) @AT@ 5044 @LENGTH@ 24
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, query.get(key)] @AT@ 5048 @LENGTH@ 3
------------------INS MethodInvocation@@query.get(key) @TO@ SimpleName@@MethodName:put:[key, query.get(key)] @AT@ 5053 @LENGTH@ 14
---------------------INS SimpleName@@Name:query @TO@ MethodInvocation@@query.get(key) @AT@ 5053 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:get:[key] @TO@ MethodInvocation@@query.get(key) @AT@ 5059 @LENGTH@ 8
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:get:[key] @AT@ 5063 @LENGTH@ 3


UPD IfStatement@@if (!inhibitDefaultDatasource) {  final DatasourcesFraction datasources=new DatasourcesFraction().jdbcDriver("h2",(d) -> {    d.driverClassName("org.h2.Driver");    d.xaDatasourceClass("org.h2.jdbcx.JdbcDataSource");    d.driverModuleName("com.h2database.h2");  }).dataSource("ExampleDS",(ds) -> {    ds.driverName("h2");    ds.connectionUrl("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE");    ds.userName("sa");    ds.password("sa");  });  initContext.fraction(datasources);  System.err.println("setting default Datasource to ExampleDS");  defaultDatasource("jboss/datasources/ExampleDS");} @TO@ if (!inhibitDefaultDatasource) {  final DatasourcesFraction datasources=new DatasourcesFraction().jdbcDriver("h2",(d) -> {    d.driverClassName("org.h2.Driver");    d.xaDatasourceClass("org.h2.jdbcx.JdbcDataSource");    d.driverModuleName("com.h2database.h2");  }).dataSource("ExampleDS",(ds) -> {    ds.driverName("h2");    ds.connectionUrl("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE");    ds.userName("sa");    ds.password("sa");  });  initContext.fraction(datasources);  defaultDatasource("jboss/datasources/ExampleDS");} @AT@ 1652 @LENGTH@ 889
---UPD Block@@ThenBody:{  final DatasourcesFraction datasources=new DatasourcesFraction().jdbcDriver("h2",(d) -> {    d.driverClassName("org.h2.Driver");    d.xaDatasourceClass("org.h2.jdbcx.JdbcDataSource");    d.driverModuleName("com.h2database.h2");  }).dataSource("ExampleDS",(ds) -> {    ds.driverName("h2");    ds.connectionUrl("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE");    ds.userName("sa");    ds.password("sa");  });  initContext.fraction(datasources);  System.err.println("setting default Datasource to ExampleDS");  defaultDatasource("jboss/datasources/ExampleDS");} @TO@ ThenBody:{  final DatasourcesFraction datasources=new DatasourcesFraction().jdbcDriver("h2",(d) -> {    d.driverClassName("org.h2.Driver");    d.xaDatasourceClass("org.h2.jdbcx.JdbcDataSource");    d.driverModuleName("com.h2database.h2");  }).dataSource("ExampleDS",(ds) -> {    ds.driverName("h2");    ds.connectionUrl("jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE");    ds.userName("sa");    ds.password("sa");  });  initContext.fraction(datasources);  defaultDatasource("jboss/datasources/ExampleDS");} @AT@ 1683 @LENGTH@ 858
------DEL ExpressionStatement@@MethodInvocation:System.err.println("setting default Datasource to ExampleDS") @AT@ 2407 @LENGTH@ 62
---------DEL MethodInvocation@@System.err.println("setting default Datasource to ExampleDS") @AT@ 2407 @LENGTH@ 61
------------DEL QualifiedName@@Name:System.err @AT@ 2407 @LENGTH@ 10
------------DEL SimpleName@@MethodName:println:["setting default Datasource to ExampleDS"] @AT@ 2418 @LENGTH@ 50
---------------DEL StringLiteral@@"setting default Datasource to ExampleDS" @AT@ 2426 @LENGTH@ 41


UPD MethodDeclaration@@public, Set<V>, MethodName:rangeByLex, RedisZSetCommands.Range range,  @TO@ public, Set<V>, MethodName:rangeByLex, Range range,  @AT@ 2978 @LENGTH@ 102
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 3003 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 3003 @LENGTH@ 23
---UPD ReturnStatement@@MethodInvocation:ops.rangeByLex(getKey(),range) @TO@ MethodInvocation:rangeByLex(range,null) @AT@ 3038 @LENGTH@ 39
------UPD MethodInvocation@@ops.rangeByLex(getKey(),range) @TO@ rangeByLex(range,null) @AT@ 3045 @LENGTH@ 31
---------DEL SimpleName@@Name:ops @AT@ 3045 @LENGTH@ 3
---------UPD SimpleName@@MethodName:rangeByLex:[getKey(), range] @TO@ MethodName:rangeByLex:[range, null] @AT@ 3049 @LENGTH@ 27
------------DEL MethodInvocation@@MethodName:getKey:[] @AT@ 3060 @LENGTH@ 8
------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:rangeByLex:[getKey(), range] @AT@ 3295 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:dec=Cipher.getInstance(props,transformation) @TO@ Assignment:dec=CipherFactory.getInstance(props,transformation) @AT@ 3237 @LENGTH@ 48
---UPD Assignment@@dec=Cipher.getInstance(props,transformation) @TO@ dec=CipherFactory.getInstance(props,transformation) @AT@ 3237 @LENGTH@ 47
------UPD MethodInvocation@@Cipher.getInstance(props,transformation) @TO@ CipherFactory.getInstance(props,transformation) @AT@ 3243 @LENGTH@ 41
---------UPD SimpleName@@Name:Cipher @TO@ Name:CipherFactory @AT@ 3243 @LENGTH@ 6


UPD MethodDeclaration@@private, voidMethodName:SessionAcknowledgementType, int intValue,  @TO@ voidMethodName:SessionAcknowledgementType, int intValue,  @AT@ 1202 @LENGTH@ 90
---DEL Modifier@@private @AT@ 1202 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue("Should have returned a RunAsUserToken",result instanceof RunAsUserToken) @TO@ MethodInvocation:assertThat(result instanceof RunAsUserToken).withFailMessage("Should have returned a RunAsUserToken").isTrue() @AT@ 2354 @LENGTH@ 90
---UPD MethodInvocation@@assertTrue("Should have returned a RunAsUserToken",result instanceof RunAsUserToken) @TO@ assertThat(result instanceof RunAsUserToken).withFailMessage("Should have returned a RunAsUserToken").isTrue() @AT@ 2354 @LENGTH@ 89
------DEL SimpleName@@MethodName:assertTrue:["Should have returned a RunAsUserToken", result instanceof RunAsUserToken] @AT@ 2354 @LENGTH@ 89
---------DEL StringLiteral@@"Should have returned a RunAsUserToken" @AT@ 2365 @LENGTH@ 39
---------DEL InstanceofExpression@@result instanceof RunAsUserToken @AT@ 2410 @LENGTH@ 32
------INS MethodInvocation@@MethodName:withFailMessage:["Should have returned a RunAsUserToken"] @TO@ MethodInvocation@@assertTrue("Should have returned a RunAsUserToken",result instanceof RunAsUserToken) @AT@ 2398 @LENGTH@ 106
---------INS StringLiteral@@"Should have returned a RunAsUserToken" @TO@ MethodInvocation@@MethodName:withFailMessage:["Should have returned a RunAsUserToken"] @AT@ 2464 @LENGTH@ 39
------INS MethodInvocation@@MethodName:assertThat:[result instanceof RunAsUserToken] @TO@ MethodInvocation@@assertTrue("Should have returned a RunAsUserToken",result instanceof RunAsUserToken) @AT@ 2398 @LENGTH@ 44
---------INS InstanceofExpression@@result instanceof RunAsUserToken @TO@ MethodInvocation@@MethodName:assertThat:[result instanceof RunAsUserToken] @AT@ 2409 @LENGTH@ 32
------------MOV SimpleName@@result @TO@ InstanceofExpression@@result instanceof RunAsUserToken @AT@ 2410 @LENGTH@ 6
------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@result instanceof RunAsUserToken @AT@ 2417 @LENGTH@ 10
------------MOV SimpleType@@RunAsUserToken @TO@ InstanceofExpression@@result instanceof RunAsUserToken @AT@ 2428 @LENGTH@ 14
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertTrue("Should have returned a RunAsUserToken",result instanceof RunAsUserToken) @AT@ 2505 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:relBuilder.convert(sort.getRowType(),false) @TO@ MethodDeclaration@@public, void, MethodName:onMatch, RelOptRuleCall call,  @AT@ 6439 @LENGTH@ 45
---INS MethodInvocation@@relBuilder.convert(sort.getRowType(),false) @TO@ ExpressionStatement@@MethodInvocation:relBuilder.convert(sort.getRowType(),false) @AT@ 6439 @LENGTH@ 44
------INS SimpleName@@Name:relBuilder @TO@ MethodInvocation@@relBuilder.convert(sort.getRowType(),false) @AT@ 6439 @LENGTH@ 10
------INS SimpleName@@MethodName:convert:[sort.getRowType(), false] @TO@ MethodInvocation@@relBuilder.convert(sort.getRowType(),false) @AT@ 6450 @LENGTH@ 33
---------INS MethodInvocation@@sort.getRowType() @TO@ SimpleName@@MethodName:convert:[sort.getRowType(), false] @AT@ 6458 @LENGTH@ 17
------------INS SimpleName@@Name:sort @TO@ MethodInvocation@@sort.getRowType() @AT@ 6458 @LENGTH@ 4
------------INS SimpleName@@MethodName:getRowType:[] @TO@ MethodInvocation@@sort.getRowType() @AT@ 6463 @LENGTH@ 12
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:convert:[sort.getRowType(), false] @AT@ 6477 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(result.get(RESULT,PROBLEM).asString().contains("not found")) @TO@ MethodInvocation:assertTrue(result.get(RESULT,PROBLEM).asString().contains("WFLYCTL0335")) @AT@ 18809 @LENGTH@ 73
---UPD MethodInvocation@@assertTrue(result.get(RESULT,PROBLEM).asString().contains("not found")) @TO@ assertTrue(result.get(RESULT,PROBLEM).asString().contains("WFLYCTL0335")) @AT@ 18809 @LENGTH@ 72
------UPD SimpleName@@MethodName:assertTrue:[result.get(RESULT,PROBLEM).asString().contains("not found")] @TO@ MethodName:assertTrue:[result.get(RESULT,PROBLEM).asString().contains("WFLYCTL0335")] @AT@ 18809 @LENGTH@ 72
---------UPD MethodInvocation@@result.get(RESULT,PROBLEM).asString().contains("not found") @TO@ result.get(RESULT,PROBLEM).asString().contains("WFLYCTL0335") @AT@ 18820 @LENGTH@ 60
------------UPD SimpleName@@MethodName:contains:["not found"] @TO@ MethodName:contains:["WFLYCTL0335"] @AT@ 18859 @LENGTH@ 21
---------------UPD StringLiteral@@"not found" @TO@ "WFLYCTL0335" @AT@ 18868 @LENGTH@ 11


INS IfStatement@@if (msg != null) {  if (isMessageACommand(msg)) {    LOG.debug("Sending command: {}",msg);    connection.send(msg);  } else   if (targetChannel != null) {    LOG.debug("Sending to: {} message: {}",targetChannel,msg);    connection.doPrivmsg(targetChannel,msg);  } else {    for (    IrcChannel channel : endpoint.getConfiguration().getChannels()) {      LOG.debug("Sending to: {} message: {}",channel,msg);      connection.doPrivmsg(channel.getName(),msg);    }  }} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2201 @LENGTH@ 627
---INS InfixExpression@@msg != null @TO@ IfStatement@@if (msg != null) {  if (isMessageACommand(msg)) {    LOG.debug("Sending command: {}",msg);    connection.send(msg);  } else   if (targetChannel != null) {    LOG.debug("Sending to: {} message: {}",targetChannel,msg);    connection.doPrivmsg(targetChannel,msg);  } else {    for (    IrcChannel channel : endpoint.getConfiguration().getChannels()) {      LOG.debug("Sending to: {} message: {}",channel,msg);      connection.doPrivmsg(channel.getName(),msg);    }  }} @AT@ 2205 @LENGTH@ 11
------INS SimpleName@@msg @TO@ InfixExpression@@msg != null @AT@ 2205 @LENGTH@ 3
------INS Operator@@!= @TO@ InfixExpression@@msg != null @AT@ 2208 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@msg != null @AT@ 2212 @LENGTH@ 4
---INS Block@@ThenBody:{  if (isMessageACommand(msg)) {    LOG.debug("Sending command: {}",msg);    connection.send(msg);  } else   if (targetChannel != null) {    LOG.debug("Sending to: {} message: {}",targetChannel,msg);    connection.doPrivmsg(targetChannel,msg);  } else {    for (    IrcChannel channel : endpoint.getConfiguration().getChannels()) {      LOG.debug("Sending to: {} message: {}",channel,msg);      connection.doPrivmsg(channel.getName(),msg);    }  }} @TO@ IfStatement@@if (msg != null) {  if (isMessageACommand(msg)) {    LOG.debug("Sending command: {}",msg);    connection.send(msg);  } else   if (targetChannel != null) {    LOG.debug("Sending to: {} message: {}",targetChannel,msg);    connection.doPrivmsg(targetChannel,msg);  } else {    for (    IrcChannel channel : endpoint.getConfiguration().getChannels()) {      LOG.debug("Sending to: {} message: {}",channel,msg);      connection.doPrivmsg(channel.getName(),msg);    }  }} @AT@ 2218 @LENGTH@ 610
------MOV IfStatement@@if (isMessageACommand(msg)) {  LOG.debug("Sending command: {}",msg);  connection.send(msg);} else if (targetChannel != null) {  LOG.debug("Sending to: {} message: {}",targetChannel,msg);  connection.doPrivmsg(targetChannel,msg);} else {  for (  IrcChannel channel : endpoint.getConfiguration().getChannels()) {    LOG.debug("Sending to: {} message: {}",channel,msg);    connection.doPrivmsg(channel.getName(),msg);  }} @TO@ Block@@ThenBody:{  if (isMessageACommand(msg)) {    LOG.debug("Sending command: {}",msg);    connection.send(msg);  } else   if (targetChannel != null) {    LOG.debug("Sending to: {} message: {}",targetChannel,msg);    connection.doPrivmsg(targetChannel,msg);  } else {    for (    IrcChannel channel : endpoint.getConfiguration().getChannels()) {      LOG.debug("Sending to: {} message: {}",channel,msg);      connection.doPrivmsg(channel.getName(),msg);    }  }} @AT@ 2201 @LENGTH@ 542


UPD ExpressionStatement@@MethodInvocation:from("netty4-http:http://0.0.0.0:{{port}}/foo").to("mock:input1").to("netty4-http:http://0.0.0.0:" + port2 + "/bar") @TO@ MethodInvocation:from("netty4-http:http://0.0.0.0:{{port}}/foo").to("mock:input1").to("netty4-http:http://localhost:" + port2 + "/bar") @AT@ 1656 @LENGTH@ 159
---UPD MethodInvocation@@from("netty4-http:http://0.0.0.0:{{port}}/foo").to("mock:input1").to("netty4-http:http://0.0.0.0:" + port2 + "/bar") @TO@ from("netty4-http:http://0.0.0.0:{{port}}/foo").to("mock:input1").to("netty4-http:http://localhost:" + port2 + "/bar") @AT@ 1656 @LENGTH@ 158
------UPD SimpleName@@MethodName:to:["netty4-http:http://0.0.0.0:" + port2 + "/bar"] @TO@ MethodName:to:["netty4-http:http://localhost:" + port2 + "/bar"] @AT@ 1764 @LENGTH@ 50
---------UPD InfixExpression@@"netty4-http:http://0.0.0.0:" + port2 + "/bar" @TO@ "netty4-http:http://localhost:" + port2 + "/bar" @AT@ 1767 @LENGTH@ 46
------------UPD StringLiteral@@"netty4-http:http://0.0.0.0:" @TO@ "netty4-http:http://localhost:" @AT@ 1767 @LENGTH@ 29


UPD MethodDeclaration@@public, voidMethodName:ListEnumeration, List<E> list,  @TO@ voidMethodName:ListEnumeration, List<E> list,  @AT@ 1856 @LENGTH@ 78
---DEL Modifier@@public @AT@ 1856 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:WeakThreadLocal, ServiceNowProducerProcessor.Supplier supplier,  @TO@ voidMethodName:WeakThreadLocal, ServiceNowProducerProcessor.Supplier supplier,  @AT@ 3609 @LENGTH@ 165
---DEL Modifier@@public @AT@ 3609 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:JMSEmbeddedBroker, String url,  @TO@ voidMethodName:JMSEmbeddedBroker, String url,  @AT@ 1816 @LENGTH@ 77
---DEL Modifier@@public @AT@ 1816 @LENGTH@ 6


UPD MethodDeclaration@@void, MethodName:invalidXmlFileFound, String name, int lineNumber, int columnNumber,  @TO@ String, MethodName:invalidXmlFileFound, String name, int lineNumber, int columnNumber,  @AT@ 17690 @LENGTH@ 67
---INS SimpleType@@String @TO@ MethodDeclaration@@void, MethodName:invalidXmlFileFound, String name, int lineNumber, int columnNumber,  @AT@ 17682 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 17685 @LENGTH@ 4


UPD EnhancedForStatement@@for (String a : arr) {  if (a.startsWith("{") && a.endsWith("}")) {    String key=a.substring(1,a.length() - 1);    boolean found=false;    for (    RestOperationParamDefinition param : verb.getParams()) {      ObjectHelper.notEmpty(param.getName(),"parameter name");      if (param.getName().equalsIgnoreCase(key)) {        param.type(RestParamType.path);        found=true;        break;      }    }    if (!found) {      param(verb).name(key).type(RestParamType.path).endParam();    }  }} @TO@ for (String a : arr) {  try {    a=camelContext.resolvePropertyPlaceholders(a);  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }  if (a.startsWith("{") && a.endsWith("}")) {    String key=a.substring(1,a.length() - 1);    boolean found=false;    for (    RestOperationParamDefinition param : verb.getParams()) {      String name=param.getName();      ObjectHelper.notEmpty(name,"parameter name");      try {        name=camelContext.resolvePropertyPlaceholders(name);      } catch (      Exception e) {        throw ObjectHelper.wrapRuntimeCamelException(e);      }      if (name.equalsIgnoreCase(key)) {        param.type(RestParamType.path);        found=true;        break;      }    }    if (!found) {      param(verb).name(key).type(RestParamType.path).endParam();    }  }} @AT@ 26255 @LENGTH@ 864
---UPD IfStatement@@if (a.startsWith("{") && a.endsWith("}")) {  String key=a.substring(1,a.length() - 1);  boolean found=false;  for (  RestOperationParamDefinition param : verb.getParams()) {    ObjectHelper.notEmpty(param.getName(),"parameter name");    if (param.getName().equalsIgnoreCase(key)) {      param.type(RestParamType.path);      found=true;      break;    }  }  if (!found) {    param(verb).name(key).type(RestParamType.path).endParam();  }} @TO@ if (a.startsWith("{") && a.endsWith("}")) {  String key=a.substring(1,a.length() - 1);  boolean found=false;  for (  RestOperationParamDefinition param : verb.getParams()) {    String name=param.getName();    ObjectHelper.notEmpty(name,"parameter name");    try {      name=camelContext.resolvePropertyPlaceholders(name);    } catch (    Exception e) {      throw ObjectHelper.wrapRuntimeCamelException(e);    }    if (name.equalsIgnoreCase(key)) {      param.type(RestParamType.path);      found=true;      break;    }  }  if (!found) {    param(verb).name(key).type(RestParamType.path).endParam();  }} @AT@ 26294 @LENGTH@ 811
------UPD Block@@ThenBody:{  String key=a.substring(1,a.length() - 1);  boolean found=false;  for (  RestOperationParamDefinition param : verb.getParams()) {    ObjectHelper.notEmpty(param.getName(),"parameter name");    if (param.getName().equalsIgnoreCase(key)) {      param.type(RestParamType.path);      found=true;      break;    }  }  if (!found) {    param(verb).name(key).type(RestParamType.path).endParam();  }} @TO@ ThenBody:{  String key=a.substring(1,a.length() - 1);  boolean found=false;  for (  RestOperationParamDefinition param : verb.getParams()) {    String name=param.getName();    ObjectHelper.notEmpty(name,"parameter name");    try {      name=camelContext.resolvePropertyPlaceholders(name);    } catch (    Exception e) {      throw ObjectHelper.wrapRuntimeCamelException(e);    }    if (name.equalsIgnoreCase(key)) {      param.type(RestParamType.path);      found=true;      break;    }  }  if (!found) {    param(verb).name(key).type(RestParamType.path).endParam();  }} @AT@ 26336 @LENGTH@ 769
---------UPD EnhancedForStatement@@for (RestOperationParamDefinition param : verb.getParams()) {  ObjectHelper.notEmpty(param.getName(),"parameter name");  if (param.getName().equalsIgnoreCase(key)) {    param.type(RestParamType.path);    found=true;    break;  }} @TO@ for (RestOperationParamDefinition param : verb.getParams()) {  String name=param.getName();  ObjectHelper.notEmpty(name,"parameter name");  try {    name=camelContext.resolvePropertyPlaceholders(name);  } catch (  Exception e) {    throw ObjectHelper.wrapRuntimeCamelException(e);  }  if (name.equalsIgnoreCase(key)) {    param.type(RestParamType.path);    found=true;    break;  }} @AT@ 26506 @LENGTH@ 442
------------UPD ExpressionStatement@@MethodInvocation:ObjectHelper.notEmpty(param.getName(),"parameter name") @TO@ MethodInvocation:ObjectHelper.notEmpty(name,"parameter name") @AT@ 26637 @LENGTH@ 57
---------------UPD MethodInvocation@@ObjectHelper.notEmpty(param.getName(),"parameter name") @TO@ ObjectHelper.notEmpty(name,"parameter name") @AT@ 26637 @LENGTH@ 56
------------------UPD SimpleName@@MethodName:notEmpty:[param.getName(), "parameter name"] @TO@ MethodName:notEmpty:[name, "parameter name"] @AT@ 26650 @LENGTH@ 43
---------------------DEL MethodInvocation@@param.getName() @AT@ 26659 @LENGTH@ 15
------------------------DEL SimpleName@@Name:param @AT@ 26659 @LENGTH@ 5
------------------------DEL SimpleName@@MethodName:getName:[] @AT@ 26665 @LENGTH@ 9
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:notEmpty:[param.getName(), "parameter name"] @AT@ 27012 @LENGTH@ 4
------------UPD IfStatement@@if (param.getName().equalsIgnoreCase(key)) {  param.type(RestParamType.path);  found=true;  break;} @TO@ if (name.equalsIgnoreCase(key)) {  param.type(RestParamType.path);  found=true;  break;} @AT@ 26719 @LENGTH@ 207
---------------UPD MethodInvocation@@param.getName().equalsIgnoreCase(key) @TO@ name.equalsIgnoreCase(key) @AT@ 26723 @LENGTH@ 37
------------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 26723 @LENGTH@ 15
------------------UPD SimpleName@@Name:param @TO@ Name:name @AT@ 26723 @LENGTH@ 5
------------INS VariableDeclarationStatement@@String name=param.getName(); @TO@ EnhancedForStatement@@for (RestOperationParamDefinition param : verb.getParams()) {  ObjectHelper.notEmpty(param.getName(),"parameter name");  if (param.getName().equalsIgnoreCase(key)) {    param.type(RestParamType.path);    found=true;    break;  }} @AT@ 26935 @LENGTH@ 30
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=param.getName(); @AT@ 26935 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@name=param.getName() @TO@ VariableDeclarationStatement@@String name=param.getName(); @AT@ 26942 @LENGTH@ 22
------------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=param.getName() @AT@ 26942 @LENGTH@ 4
------------------INS MethodInvocation@@param.getName() @TO@ VariableDeclarationFragment@@name=param.getName() @AT@ 26949 @LENGTH@ 15
---------------------INS SimpleName@@Name:param @TO@ MethodInvocation@@param.getName() @AT@ 26949 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@param.getName() @AT@ 26955 @LENGTH@ 9
------------INS TryStatement@@try {  name=camelContext.resolvePropertyPlaceholders(name);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ EnhancedForStatement@@for (RestOperationParamDefinition param : verb.getParams()) {  ObjectHelper.notEmpty(param.getName(),"parameter name");  if (param.getName().equalsIgnoreCase(key)) {    param.type(RestParamType.path);    found=true;    break;  }} @AT@ 27132 @LENGTH@ 239
---------------INS ExpressionStatement@@Assignment:name=camelContext.resolvePropertyPlaceholders(name) @TO@ TryStatement@@try {  name=camelContext.resolvePropertyPlaceholders(name);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 27166 @LENGTH@ 54
------------------INS Assignment@@name=camelContext.resolvePropertyPlaceholders(name) @TO@ ExpressionStatement@@Assignment:name=camelContext.resolvePropertyPlaceholders(name) @AT@ 27166 @LENGTH@ 53
---------------------INS SimpleName@@name @TO@ Assignment@@name=camelContext.resolvePropertyPlaceholders(name) @AT@ 27166 @LENGTH@ 4
---------------------INS Operator@@= @TO@ Assignment@@name=camelContext.resolvePropertyPlaceholders(name) @AT@ 27170 @LENGTH@ 1
---------------------INS MethodInvocation@@camelContext.resolvePropertyPlaceholders(name) @TO@ Assignment@@name=camelContext.resolvePropertyPlaceholders(name) @AT@ 27173 @LENGTH@ 46
------------------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(name) @AT@ 27173 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[name] @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(name) @AT@ 27186 @LENGTH@ 33
---------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[name] @AT@ 27214 @LENGTH@ 4
---------------INS CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ TryStatement@@try {  name=camelContext.resolvePropertyPlaceholders(name);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 27247 @LENGTH@ 124
------------------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 27254 @LENGTH@ 11
---------------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 27254 @LENGTH@ 9
---------------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 27264 @LENGTH@ 1
------------------INS ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 27297 @LENGTH@ 48
---------------------INS MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @TO@ ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @AT@ 27303 @LENGTH@ 41
------------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 27303 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:wrapRuntimeCamelException:[e] @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 27316 @LENGTH@ 28
---------------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:wrapRuntimeCamelException:[e] @AT@ 27342 @LENGTH@ 1
---INS TryStatement@@try {  a=camelContext.resolvePropertyPlaceholders(a);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ EnhancedForStatement@@for (String a : arr) {  if (a.startsWith("{") && a.endsWith("}")) {    String key=a.substring(1,a.length() - 1);    boolean found=false;    for (    RestOperationParamDefinition param : verb.getParams()) {      ObjectHelper.notEmpty(param.getName(),"parameter name");      if (param.getName().equalsIgnoreCase(key)) {        param.type(RestParamType.path);        found=true;        break;      }    }    if (!found) {      param(verb).name(key).type(RestParamType.path).endParam();    }  }} @AT@ 26374 @LENGTH@ 201
------INS ExpressionStatement@@Assignment:a=camelContext.resolvePropertyPlaceholders(a) @TO@ TryStatement@@try {  a=camelContext.resolvePropertyPlaceholders(a);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 26400 @LENGTH@ 48
---------INS Assignment@@a=camelContext.resolvePropertyPlaceholders(a) @TO@ ExpressionStatement@@Assignment:a=camelContext.resolvePropertyPlaceholders(a) @AT@ 26400 @LENGTH@ 47
------------INS SimpleName@@a @TO@ Assignment@@a=camelContext.resolvePropertyPlaceholders(a) @AT@ 26400 @LENGTH@ 1
------------INS Operator@@= @TO@ Assignment@@a=camelContext.resolvePropertyPlaceholders(a) @AT@ 26401 @LENGTH@ 1
------------INS MethodInvocation@@camelContext.resolvePropertyPlaceholders(a) @TO@ Assignment@@a=camelContext.resolvePropertyPlaceholders(a) @AT@ 26404 @LENGTH@ 43
---------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(a) @AT@ 26404 @LENGTH@ 12
---------------INS SimpleName@@MethodName:resolvePropertyPlaceholders:[a] @TO@ MethodInvocation@@camelContext.resolvePropertyPlaceholders(a) @AT@ 26417 @LENGTH@ 30
------------------INS SimpleName@@a @TO@ SimpleName@@MethodName:resolvePropertyPlaceholders:[a] @AT@ 26445 @LENGTH@ 1
------INS CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @TO@ TryStatement@@try {  a=camelContext.resolvePropertyPlaceholders(a);} catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 26467 @LENGTH@ 108
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 26474 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 26474 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 26484 @LENGTH@ 1
---------INS ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @TO@ CatchClause@@catch (Exception e) {  throw ObjectHelper.wrapRuntimeCamelException(e);} @AT@ 26509 @LENGTH@ 48
------------INS MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @TO@ ThrowStatement@@MethodInvocation:ObjectHelper.wrapRuntimeCamelException(e) @AT@ 26515 @LENGTH@ 41
---------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 26515 @LENGTH@ 12
---------------INS SimpleName@@MethodName:wrapRuntimeCamelException:[e] @TO@ MethodInvocation@@ObjectHelper.wrapRuntimeCamelException(e) @AT@ 26528 @LENGTH@ 28
------------------INS SimpleName@@e @TO@ SimpleName@@MethodName:wrapRuntimeCamelException:[e] @AT@ 26554 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:request.content().release() @TO@ MethodDeclaration@@public, static, HttpResponse, MethodName:myTransformer, FullHttpRequest request,  @AT@ 2655 @LENGTH@ 28
---INS MethodInvocation@@request.content().release() @TO@ ExpressionStatement@@MethodInvocation:request.content().release() @AT@ 2655 @LENGTH@ 27
------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@request.content().release() @AT@ 2655 @LENGTH@ 17
------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.content().release() @AT@ 2655 @LENGTH@ 7
------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@request.content().release() @AT@ 2673 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testFile, Exception,  @AT@ 1879 @LENGTH@ 16
---INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 1879 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 1879 @LENGTH@ 7
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 1887 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:component.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:testSetServletInitalparameters, Exception,  @AT@ 1891 @LENGTH@ 28
---INS MethodInvocation@@component.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:component.setMaxThreads(11) @AT@ 1891 @LENGTH@ 27
------INS SimpleName@@Name:component @TO@ MethodInvocation@@component.setMaxThreads(11) @AT@ 1891 @LENGTH@ 9
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@component.setMaxThreads(11) @AT@ 1901 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 1915 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:ProcessCall, Exchange exchange, AsyncCallback callback,  @TO@ voidMethodName:ProcessCall, Exchange exchange, AsyncCallback callback,  @AT@ 3701 @LENGTH@ 149
---DEL Modifier@@public @AT@ 3701 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyFailOverProcessor, ProducerTemplate template, String... uris,  @TO@ voidMethodName:MyFailOverProcessor, ProducerTemplate template, String... uris,  @AT@ 2537 @LENGTH@ 164
---DEL Modifier@@public @AT@ 2537 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:ByteBufferInputStream, ByteBuffer buffer,  @TO@ voidMethodName:ByteBufferInputStream, ByteBuffer buffer,  @AT@ 4485 @LENGTH@ 93
---DEL Modifier@@public @AT@ 4485 @LENGTH@ 6


UPD IfStatement@@if (exchange.getPattern().isOutCapable()) {  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  return out;} @TO@ if (exchange.getPattern().isOutCapable()) {  return exchange.getOut();} @AT@ 1080 @LENGTH@ 166
---UPD Block@@ThenBody:{  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  return out;} @TO@ ThenBody:{  return exchange.getOut();} @AT@ 1122 @LENGTH@ 124
------DEL VariableDeclarationStatement@@Message out=exchange.getOut(); @AT@ 1136 @LENGTH@ 32
---------DEL SimpleType@@Message @AT@ 1136 @LENGTH@ 7
---------DEL VariableDeclarationFragment@@out=exchange.getOut() @AT@ 1144 @LENGTH@ 23
------------DEL SimpleName@@out @AT@ 1144 @LENGTH@ 3
------------DEL MethodInvocation@@exchange.getOut() @AT@ 1150 @LENGTH@ 17
------INS ReturnStatement@@MethodInvocation:exchange.getOut() @TO@ Block@@ThenBody:{  Message out=exchange.getOut();  out.copyFrom(exchange.getIn());  return out;} @AT@ 1136 @LENGTH@ 25
---------INS MethodInvocation@@exchange.getOut() @TO@ ReturnStatement@@MethodInvocation:exchange.getOut() @AT@ 1143 @LENGTH@ 17
------------MOV SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut() @AT@ 1150 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut() @AT@ 1159 @LENGTH@ 8
------DEL ExpressionStatement@@MethodInvocation:out.copyFrom(exchange.getIn()) @AT@ 1181 @LENGTH@ 31
---------DEL MethodInvocation@@out.copyFrom(exchange.getIn()) @AT@ 1181 @LENGTH@ 30
------------DEL SimpleName@@Name:out @AT@ 1181 @LENGTH@ 3
------------DEL SimpleName@@MethodName:copyFrom:[exchange.getIn()] @AT@ 1185 @LENGTH@ 26
---------------DEL MethodInvocation@@exchange.getIn() @AT@ 1194 @LENGTH@ 16
------------------DEL SimpleName@@Name:exchange @AT@ 1194 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getIn:[] @AT@ 1203 @LENGTH@ 7
------DEL ReturnStatement@@SimpleName:out @AT@ 1225 @LENGTH@ 11
---------DEL SimpleName@@out @AT@ 1232 @LENGTH@ 3


UPD EnhancedForStatement@@for (Field field : FacebookEndpointConfiguration.class.getDeclaredFields()) {  Class<?> expectedType=field.getType();  final Class<?> actualType=FacebookMethodsTypeHelper.getType(field.getName());  if (actualType.isPrimitive()) {    expectedType=(Class<?>)expectedType.getField("TYPE").get(null);  } else   if (List.class.isAssignableFrom(expectedType) && actualType.isArray()) {    expectedType=actualType;  }  assertEquals("Missing property " + field.getName(),expectedType,actualType);} @TO@ for (Field field : FacebookEndpointConfiguration.class.getDeclaredFields()) {  Class<?> expectedType=field.getType();  if ("readingOptions".equals(field.getName())) {    continue;  }  final Class<?> actualType=FacebookMethodsTypeHelper.getType(field.getName());  if (actualType.isPrimitive()) {    expectedType=(Class<?>)expectedType.getField("TYPE").get(null);  } else   if (List.class.isAssignableFrom(expectedType) && actualType.isArray()) {    expectedType=actualType;  }  assertEquals("Missing property " + field.getName(),expectedType,actualType);} @AT@ 4821 @LENGTH@ 724
---INS IfStatement@@if ("readingOptions".equals(field.getName())) {  continue;} @TO@ EnhancedForStatement@@for (Field field : FacebookEndpointConfiguration.class.getDeclaredFields()) {  Class<?> expectedType=field.getType();  final Class<?> actualType=FacebookMethodsTypeHelper.getType(field.getName());  if (actualType.isPrimitive()) {    expectedType=(Class<?>)expectedType.getField("TYPE").get(null);  } else   if (List.class.isAssignableFrom(expectedType) && actualType.isArray()) {    expectedType=actualType;  }  assertEquals("Missing property " + field.getName(),expectedType,actualType);} @AT@ 4999 @LENGTH@ 87
------INS MethodInvocation@@"readingOptions".equals(field.getName()) @TO@ IfStatement@@if ("readingOptions".equals(field.getName())) {  continue;} @AT@ 5003 @LENGTH@ 40
---------INS StringLiteral@@"readingOptions" @TO@ MethodInvocation@@"readingOptions".equals(field.getName()) @AT@ 5003 @LENGTH@ 16
---------INS SimpleName@@MethodName:equals:[field.getName()] @TO@ MethodInvocation@@"readingOptions".equals(field.getName()) @AT@ 5020 @LENGTH@ 23
------------INS MethodInvocation@@field.getName() @TO@ SimpleName@@MethodName:equals:[field.getName()] @AT@ 5027 @LENGTH@ 15
---------------INS SimpleName@@Name:field @TO@ MethodInvocation@@field.getName() @AT@ 5027 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@field.getName() @AT@ 5033 @LENGTH@ 9
------INS Block@@ThenBody:{  continue;} @TO@ IfStatement@@if ("readingOptions".equals(field.getName())) {  continue;} @AT@ 5045 @LENGTH@ 41
---------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  continue;} @AT@ 5063 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @TO@ TypeDeclaration@@[public]OAuth2RequestTests,  @AT@ 1733 @LENGTH@ 533
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 1733 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 1740 @LENGTH@ 4
---INS SimpleName@@MethodName:testResourceIdsConstructorAssignment @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 1745 @LENGTH@ 36
---INS VariableDeclarationStatement@@Set<String> resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")); @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 1788 @LENGTH@ 93
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")); @AT@ 1788 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 1788 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 1792 @LENGTH@ 6
------INS VariableDeclarationFragment@@resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")) @TO@ VariableDeclarationStatement@@Set<String> resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")); @AT@ 1800 @LENGTH@ 80
---------INS SimpleName@@resourceIds @TO@ VariableDeclarationFragment@@resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")) @AT@ 1800 @LENGTH@ 11
---------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("resourceId-1","resourceId-2")] @TO@ VariableDeclarationFragment@@resourceIds=new HashSet<String>(Arrays.asList("resourceId-1","resourceId-2")) @AT@ 1814 @LENGTH@ 66
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("resourceId-1","resourceId-2")] @AT@ 1814 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("resourceId-1","resourceId-2")] @AT@ 1818 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 1818 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 1826 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList("resourceId-1","resourceId-2") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("resourceId-1","resourceId-2")] @AT@ 1834 @LENGTH@ 45
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("resourceId-1","resourceId-2") @AT@ 1834 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["resourceId-1", "resourceId-2"] @TO@ MethodInvocation@@Arrays.asList("resourceId-1","resourceId-2") @AT@ 1841 @LENGTH@ 38
------------------INS StringLiteral@@"resourceId-1" @TO@ SimpleName@@MethodName:asList:["resourceId-1", "resourceId-2"] @AT@ 1848 @LENGTH@ 14
------------------INS StringLiteral@@"resourceId-2" @TO@ SimpleName@@MethodName:asList:["resourceId-1", "resourceId-2"] @AT@ 1864 @LENGTH@ 14
---INS VariableDeclarationStatement@@OAuth2Request request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()); @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 1884 @LENGTH@ 295
------INS SimpleType@@OAuth2Request @TO@ VariableDeclarationStatement@@OAuth2Request request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()); @AT@ 1884 @LENGTH@ 13
------INS VariableDeclarationFragment@@request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()) @TO@ VariableDeclarationStatement@@OAuth2Request request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()); @AT@ 1898 @LENGTH@ 280
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()) @AT@ 1898 @LENGTH@ 7
---------INS ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @TO@ VariableDeclarationFragment@@request=new OAuth2Request(Collections.<String,String>emptyMap(),"clientId",Collections.<GrantedAuthority>emptyList(),false,Collections.<String>emptySet(),resourceIds,"redirectUri",Collections.<String>emptySet(),Collections.<String,Serializable>emptyMap()) @AT@ 1908 @LENGTH@ 270
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 1908 @LENGTH@ 3
------------INS SimpleType@@OAuth2Request @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 1912 @LENGTH@ 13
------------INS MethodInvocation@@Collections.<String,String>emptyMap() @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 1931 @LENGTH@ 38
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String,String>emptyMap() @AT@ 1931 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.<String,String>emptyMap() @AT@ 1959 @LENGTH@ 10
------------INS StringLiteral@@"clientId" @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 1971 @LENGTH@ 10
------------INS MethodInvocation@@Collections.<GrantedAuthority>emptyList() @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 1983 @LENGTH@ 41
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<GrantedAuthority>emptyList() @AT@ 1983 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.<GrantedAuthority>emptyList() @AT@ 2013 @LENGTH@ 11
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2030 @LENGTH@ 5
------------INS MethodInvocation@@Collections.<String>emptySet() @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2037 @LENGTH@ 30
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 2037 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 2057 @LENGTH@ 10
------------INS SimpleName@@resourceIds @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2069 @LENGTH@ 11
------------INS StringLiteral@@"redirectUri" @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2082 @LENGTH@ 13
------------INS MethodInvocation@@Collections.<String>emptySet() @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2097 @LENGTH@ 30
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 2097 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptySet:[] @TO@ MethodInvocation@@Collections.<String>emptySet() @AT@ 2117 @LENGTH@ 10
------------INS MethodInvocation@@Collections.<String,Serializable>emptyMap() @TO@ ClassInstanceCreation@@OAuth2Request[Collections.<String,String>emptyMap(), "clientId", Collections.<GrantedAuthority>emptyList(), false, Collections.<String>emptySet(), resourceIds, "redirectUri", Collections.<String>emptySet(), Collections.<String,Serializable>emptyMap()] @AT@ 2133 @LENGTH@ 44
---------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.<String,Serializable>emptyMap() @AT@ 2133 @LENGTH@ 11
---------------INS SimpleName@@MethodName:emptyMap:[] @TO@ MethodInvocation@@Collections.<String,Serializable>emptyMap() @AT@ 2167 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertNotSame("resourceIds are the same",resourceIds,request.getResourceIds()) @TO@ MethodDeclaration@@public, void, MethodName:testResourceIdsConstructorAssignment,  @AT@ 2182 @LENGTH@ 81
------INS MethodInvocation@@assertNotSame("resourceIds are the same",resourceIds,request.getResourceIds()) @TO@ ExpressionStatement@@MethodInvocation:assertNotSame("resourceIds are the same",resourceIds,request.getResourceIds()) @AT@ 2182 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertNotSame:["resourceIds are the same", resourceIds, request.getResourceIds()] @TO@ MethodInvocation@@assertNotSame("resourceIds are the same",resourceIds,request.getResourceIds()) @AT@ 2182 @LENGTH@ 80
------------INS StringLiteral@@"resourceIds are the same" @TO@ SimpleName@@MethodName:assertNotSame:["resourceIds are the same", resourceIds, request.getResourceIds()] @AT@ 2196 @LENGTH@ 26
------------INS SimpleName@@resourceIds @TO@ SimpleName@@MethodName:assertNotSame:["resourceIds are the same", resourceIds, request.getResourceIds()] @AT@ 2224 @LENGTH@ 11
------------INS MethodInvocation@@request.getResourceIds() @TO@ SimpleName@@MethodName:assertNotSame:["resourceIds are the same", resourceIds, request.getResourceIds()] @AT@ 2237 @LENGTH@ 24
---------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.getResourceIds() @AT@ 2237 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getResourceIds:[] @TO@ MethodInvocation@@request.getResourceIds() @AT@ 2245 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3446 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3446 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3465 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3479 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate^level=INFO%showAll=true&mulltiline=true").to(ENDPOINT_MOCK) @TO@ MethodInvocation:from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true").to(ENDPOINT_MOCK) @AT@ 2938 @LENGTH@ 518
---UPD MethodInvocation@@from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate^level=INFO%showAll=true&mulltiline=true").to(ENDPOINT_MOCK) @TO@ from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true").to(ENDPOINT_MOCK) @AT@ 2938 @LENGTH@ 517
------UPD MethodInvocation@@MethodName:to:["log:org.apache.camel.component.ehcache.processor.aggregate^level=INFO%showAll=true&mulltiline=true"] @TO@ MethodName:to:["log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true"] @AT@ 2938 @LENGTH@ 474
---------UPD StringLiteral@@"log:org.apache.camel.component.ehcache.processor.aggregate^level=INFO%showAll=true&mulltiline=true" @TO@ "log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true" @AT@ 3311 @LENGTH@ 100


UPD FieldDeclaration@@private, ZooKeeperConfiguration, [configuration] @TO@ private, final, ZooKeeperConfiguration, [configuration] @AT@ 2614 @LENGTH@ 45
---INS Modifier@@final @TO@ FieldDeclaration@@private, ZooKeeperConfiguration, [configuration] @AT@ 2622 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("Hello",rc) @TO@ MethodInvocation:assertEquals("Hello Camel",rc) @AT@ 1461 @LENGTH@ 26
---UPD MethodInvocation@@assertEquals("Hello",rc) @TO@ assertEquals("Hello Camel",rc) @AT@ 1461 @LENGTH@ 25
------UPD SimpleName@@MethodName:assertEquals:["Hello", rc] @TO@ MethodName:assertEquals:["Hello Camel", rc] @AT@ 1461 @LENGTH@ 25
---------UPD StringLiteral@@"Hello" @TO@ "Hello Camel" @AT@ 1474 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @TO@ TypeDeclaration@@[public]RabbitAdminIntegrationTests,  @AT@ 11603 @LENGTH@ 343
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11603 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11610 @LENGTH@ 4
---INS SimpleName@@MethodName:testQueueDeclareBad @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11615 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:this.rabbitAdmin.setIgnoreDeclarationExceptions(true) @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11641 @LENGTH@ 54
------INS MethodInvocation@@this.rabbitAdmin.setIgnoreDeclarationExceptions(true) @TO@ ExpressionStatement@@MethodInvocation:this.rabbitAdmin.setIgnoreDeclarationExceptions(true) @AT@ 11641 @LENGTH@ 53
---------INS FieldAccess@@this.rabbitAdmin @TO@ MethodInvocation@@this.rabbitAdmin.setIgnoreDeclarationExceptions(true) @AT@ 11641 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11641 @LENGTH@ 4
------------INS SimpleName@@rabbitAdmin @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11646 @LENGTH@ 11
---------INS SimpleName@@MethodName:setIgnoreDeclarationExceptions:[true] @TO@ MethodInvocation@@this.rabbitAdmin.setIgnoreDeclarationExceptions(true) @AT@ 11658 @LENGTH@ 36
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setIgnoreDeclarationExceptions:[true] @AT@ 11689 @LENGTH@ 4
---INS VariableDeclarationStatement@@Queue queue=new AnonymousQueue(); @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11698 @LENGTH@ 35
------INS SimpleType@@Queue @TO@ VariableDeclarationStatement@@Queue queue=new AnonymousQueue(); @AT@ 11698 @LENGTH@ 5
------INS VariableDeclarationFragment@@queue=new AnonymousQueue() @TO@ VariableDeclarationStatement@@Queue queue=new AnonymousQueue(); @AT@ 11704 @LENGTH@ 28
---------INS SimpleName@@queue @TO@ VariableDeclarationFragment@@queue=new AnonymousQueue() @AT@ 11704 @LENGTH@ 5
---------INS ClassInstanceCreation@@AnonymousQueue[] @TO@ VariableDeclarationFragment@@queue=new AnonymousQueue() @AT@ 11712 @LENGTH@ 20
------------INS New@@new @TO@ ClassInstanceCreation@@AnonymousQueue[] @AT@ 11712 @LENGTH@ 3
------------INS SimpleType@@AnonymousQueue @TO@ ClassInstanceCreation@@AnonymousQueue[] @AT@ 11716 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertEquals(queue.getName(),this.rabbitAdmin.declareQueue(queue)) @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11736 @LENGTH@ 68
------INS MethodInvocation@@assertEquals(queue.getName(),this.rabbitAdmin.declareQueue(queue)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(queue.getName(),this.rabbitAdmin.declareQueue(queue)) @AT@ 11736 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertEquals:[queue.getName(), this.rabbitAdmin.declareQueue(queue)] @TO@ MethodInvocation@@assertEquals(queue.getName(),this.rabbitAdmin.declareQueue(queue)) @AT@ 11736 @LENGTH@ 67
------------INS MethodInvocation@@queue.getName() @TO@ SimpleName@@MethodName:assertEquals:[queue.getName(), this.rabbitAdmin.declareQueue(queue)] @AT@ 11749 @LENGTH@ 15
---------------INS SimpleName@@Name:queue @TO@ MethodInvocation@@queue.getName() @AT@ 11749 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@queue.getName() @AT@ 11755 @LENGTH@ 9
------------INS MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @TO@ SimpleName@@MethodName:assertEquals:[queue.getName(), this.rabbitAdmin.declareQueue(queue)] @AT@ 11766 @LENGTH@ 36
---------------INS FieldAccess@@this.rabbitAdmin @TO@ MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @AT@ 11766 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11766 @LENGTH@ 4
------------------INS SimpleName@@rabbitAdmin @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11771 @LENGTH@ 11
---------------INS SimpleName@@MethodName:declareQueue:[queue] @TO@ MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @AT@ 11783 @LENGTH@ 19
------------------INS SimpleName@@queue @TO@ SimpleName@@MethodName:declareQueue:[queue] @AT@ 11796 @LENGTH@ 5
---INS ExpressionStatement@@Assignment:queue=new Queue(queue.getName()) @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11807 @LENGTH@ 35
------INS Assignment@@queue=new Queue(queue.getName()) @TO@ ExpressionStatement@@Assignment:queue=new Queue(queue.getName()) @AT@ 11807 @LENGTH@ 34
---------INS SimpleName@@queue @TO@ Assignment@@queue=new Queue(queue.getName()) @AT@ 11807 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@queue=new Queue(queue.getName()) @AT@ 11812 @LENGTH@ 1
---------INS ClassInstanceCreation@@Queue[queue.getName()] @TO@ Assignment@@queue=new Queue(queue.getName()) @AT@ 11815 @LENGTH@ 26
------------INS New@@new @TO@ ClassInstanceCreation@@Queue[queue.getName()] @AT@ 11815 @LENGTH@ 3
------------INS SimpleType@@Queue @TO@ ClassInstanceCreation@@Queue[queue.getName()] @AT@ 11819 @LENGTH@ 5
------------INS MethodInvocation@@queue.getName() @TO@ ClassInstanceCreation@@Queue[queue.getName()] @AT@ 11825 @LENGTH@ 15
---------------INS SimpleName@@Name:queue @TO@ MethodInvocation@@queue.getName() @AT@ 11825 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@queue.getName() @AT@ 11831 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertNull(this.rabbitAdmin.declareQueue(queue)) @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11845 @LENGTH@ 49
------INS MethodInvocation@@assertNull(this.rabbitAdmin.declareQueue(queue)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(this.rabbitAdmin.declareQueue(queue)) @AT@ 11845 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertNull:[this.rabbitAdmin.declareQueue(queue)] @TO@ MethodInvocation@@assertNull(this.rabbitAdmin.declareQueue(queue)) @AT@ 11845 @LENGTH@ 48
------------INS MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @TO@ SimpleName@@MethodName:assertNull:[this.rabbitAdmin.declareQueue(queue)] @AT@ 11856 @LENGTH@ 36
---------------INS FieldAccess@@this.rabbitAdmin @TO@ MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @AT@ 11856 @LENGTH@ 16
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11856 @LENGTH@ 4
------------------INS SimpleName@@rabbitAdmin @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11861 @LENGTH@ 11
---------------INS SimpleName@@MethodName:declareQueue:[queue] @TO@ MethodInvocation@@this.rabbitAdmin.declareQueue(queue) @AT@ 11873 @LENGTH@ 19
------------------INS SimpleName@@queue @TO@ SimpleName@@MethodName:declareQueue:[queue] @AT@ 11886 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:this.rabbitAdmin.deleteQueue(queue.getName()) @TO@ MethodDeclaration@@public, void, MethodName:testQueueDeclareBad,  @AT@ 11897 @LENGTH@ 46
------INS MethodInvocation@@this.rabbitAdmin.deleteQueue(queue.getName()) @TO@ ExpressionStatement@@MethodInvocation:this.rabbitAdmin.deleteQueue(queue.getName()) @AT@ 11897 @LENGTH@ 45
---------INS FieldAccess@@this.rabbitAdmin @TO@ MethodInvocation@@this.rabbitAdmin.deleteQueue(queue.getName()) @AT@ 11897 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11897 @LENGTH@ 4
------------INS SimpleName@@rabbitAdmin @TO@ FieldAccess@@this.rabbitAdmin @AT@ 11902 @LENGTH@ 11
---------INS SimpleName@@MethodName:deleteQueue:[queue.getName()] @TO@ MethodInvocation@@this.rabbitAdmin.deleteQueue(queue.getName()) @AT@ 11914 @LENGTH@ 28
------------INS MethodInvocation@@queue.getName() @TO@ SimpleName@@MethodName:deleteQueue:[queue.getName()] @AT@ 11926 @LENGTH@ 15
---------------INS SimpleName@@Name:queue @TO@ MethodInvocation@@queue.getName() @AT@ 11926 @LENGTH@ 5
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@queue.getName() @AT@ 11932 @LENGTH@ 9


UPD IfStatement@@if (config.getPort() == -1) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @TO@ if (config.getPort() == -1 || config.getPort() == 0) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @AT@ 6222 @LENGTH@ 232
---INS InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @TO@ IfStatement@@if (config.getPort() == -1) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @AT@ 6226 @LENGTH@ 47
------MOV InfixExpression@@config.getPort() == -1 @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6226 @LENGTH@ 22
------INS Operator@@|| @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6248 @LENGTH@ 2
------INS InfixExpression@@config.getPort() == 0 @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6252 @LENGTH@ 21
---------INS MethodInvocation@@config.getPort() @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6252 @LENGTH@ 16
------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getPort() @AT@ 6252 @LENGTH@ 6
------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@config.getPort() @AT@ 6259 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6268 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6272 @LENGTH@ 1


UPD VariableDeclarationStatement@@Object lookupKey=null; @TO@ Object lookupKey; @AT@ 27573 @LENGTH@ 24
---UPD VariableDeclarationFragment@@lookupKey=null @TO@ lookupKey @AT@ 27580 @LENGTH@ 16
------DEL NullLiteral@@null @AT@ 27592 @LENGTH@ 4


UPD VariableDeclarationStatement@@Set<ClassOrInterfaceTypeDetails> dtosInProject=getTypeLocationService().findClassesOrInterfaceDetailsWithAnnotation(RooJavaType.ROO_JPA_ENTITY); @TO@ Set<ClassOrInterfaceTypeDetails> entities=getTypeLocationService().findClassesOrInterfaceDetailsWithAnnotation(RooJavaType.ROO_JPA_ENTITY); @AT@ 5502 @LENGTH@ 167
---UPD VariableDeclarationFragment@@dtosInProject=getTypeLocationService().findClassesOrInterfaceDetailsWithAnnotation(RooJavaType.ROO_JPA_ENTITY) @TO@ entities=getTypeLocationService().findClassesOrInterfaceDetailsWithAnnotation(RooJavaType.ROO_JPA_ENTITY) @AT@ 5535 @LENGTH@ 133
------UPD SimpleName@@dtosInProject @TO@ entities @AT@ 5535 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_USER","ROLE_CUSTOM") @TO@ MethodInvocation:assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_USER","ROLE_CUSTOM") @AT@ 2455 @LENGTH@ 171
---UPD MethodInvocation@@assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_USER","ROLE_CUSTOM") @TO@ assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_USER","ROLE_CUSTOM") @AT@ 2455 @LENGTH@ 170
------UPD MethodInvocation@@MethodName:onProperty:["authority"] @TO@ MethodName:extracting:["authority"] @AT@ 2455 @LENGTH@ 124


UPD MethodDeclaration@@public, voidMethodName:LeakySieveEndpoint, String uri,  @TO@ voidMethodName:LeakySieveEndpoint, String uri,  @AT@ 2373 @LENGTH@ 77
---DEL Modifier@@public @AT@ 2373 @LENGTH@ 6


UPD MethodDeclaration@@public, void, MethodName:testLoadRouteFromXml, Exception,  @TO@ public, void, MethodName:testLoadRestFromXml, Exception,  @AT@ 1691 @LENGTH@ 1337
---UPD SimpleName@@MethodName:testLoadRouteFromXml @TO@ MethodName:testLoadRestFromXml @AT@ 1703 @LENGTH@ 20


UPD MethodDeclaration@@private, voidMethodName:DropboxUploadMode, final String text,  @TO@ voidMethodName:DropboxUploadMode, final String text,  @AT@ 959 @LENGTH@ 78
---DEL Modifier@@private @AT@ 959 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:RabbitConsumer, RabbitMQConsumer consumer,  @TO@ voidMethodName:RabbitConsumer, RabbitMQConsumer consumer,  @AT@ 1934 @LENGTH@ 399
---DEL Modifier@@public @AT@ 1934 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertTrue("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @TO@ MethodInvocation:assertThat(expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)).withFailMessage("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 4212 @LENGTH@ 185
---UPD MethodInvocation@@assertTrue("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @TO@ MethodName:assertThat:[expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)] @AT@ 4212 @LENGTH@ 184
---INS MethodInvocation@@assertThat(expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)).withFailMessage("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @AT@ 4298 @LENGTH@ 209
------MOV MethodInvocation@@assertTrue("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @TO@ MethodInvocation@@assertThat(expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)).withFailMessage("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 4212 @LENGTH@ 184
---------DEL SimpleName@@MethodName:assertTrue:["Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl, expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)] @AT@ 4212 @LENGTH@ 184
------------DEL InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4223 @LENGTH@ 90
---------------DEL StringLiteral@@"Role collections do not match; result: " @AT@ 4223 @LENGTH@ 41
---------------DEL Operator@@+ @AT@ 4264 @LENGTH@ 1
---------------DEL SimpleName@@resultColl @AT@ 4267 @LENGTH@ 10
---------------DEL StringLiteral@@", expected: " @AT@ 4284 @LENGTH@ 14
---------------DEL SimpleName@@expectedColl @AT@ 4301 @LENGTH@ 12
---------MOV InfixExpression@@expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl) @TO@ MethodInvocation@@assertTrue("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @AT@ 4315 @LENGTH@ 80
------INS MethodInvocation@@MethodName:withFailMessage:["Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl] @TO@ MethodInvocation@@assertThat(expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)).withFailMessage("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 4298 @LENGTH@ 200
---------INS InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @TO@ MethodInvocation@@MethodName:withFailMessage:["Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl] @AT@ 4407 @LENGTH@ 90
------------INS StringLiteral@@"Role collections do not match; result: " @TO@ InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4407 @LENGTH@ 41
------------INS Operator@@+ @TO@ InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4448 @LENGTH@ 1
------------INS SimpleName@@resultColl @TO@ InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4451 @LENGTH@ 10
------------INS StringLiteral@@", expected: " @TO@ InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4468 @LENGTH@ 14
------------INS SimpleName@@expectedColl @TO@ InfixExpression@@"Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 4485 @LENGTH@ 12
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)).withFailMessage("Role collections do not match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 4499 @LENGTH@ 8


DEL MethodDeclaration@@public, voidMethodName:SecurityContextImplTests, String arg0,  @AT@ 1227 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1227 @LENGTH@ 6
---DEL SimpleName@@MethodName:SecurityContextImplTests @AT@ 1234 @LENGTH@ 24
---DEL SingleVariableDeclaration@@String arg0 @AT@ 1259 @LENGTH@ 11
------DEL SimpleType@@String @AT@ 1259 @LENGTH@ 6
------DEL SimpleName@@arg0 @AT@ 1266 @LENGTH@ 4
---DEL SuperConstructorInvocation@@super(arg0);
 @AT@ 1276 @LENGTH@ 12
------DEL SimpleName@@arg0 @AT@ 1282 @LENGTH@ 4


UPD FieldDeclaration@@private, final, String, [CUSTOM_DOMAIN_NAME="custom"] @TO@ private, static, final, String, [CUSTOM_DOMAIN_NAME="custom"] @AT@ 1146 @LENGTH@ 49
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, String, [CUSTOM_DOMAIN_NAME="custom"] @AT@ 1156 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:logger.warn("Execution of JMS message listener failed, and no ErrorHandler has been set.",ex) @TO@ MethodInvocation:logger.warn("Execution of message listener failed, and no ErrorHandler has been set.",ex) @AT@ 9497 @LENGTH@ 95
---UPD MethodInvocation@@logger.warn("Execution of JMS message listener failed, and no ErrorHandler has been set.",ex) @TO@ logger.warn("Execution of message listener failed, and no ErrorHandler has been set.",ex) @AT@ 9497 @LENGTH@ 94
------UPD SimpleName@@MethodName:warn:["Execution of JMS message listener failed, and no ErrorHandler has been set.", ex] @TO@ MethodName:warn:["Execution of message listener failed, and no ErrorHandler has been set.", ex] @AT@ 9504 @LENGTH@ 87
---------UPD StringLiteral@@"Execution of JMS message listener failed, and no ErrorHandler has been set." @TO@ "Execution of message listener failed, and no ErrorHandler has been set." @AT@ 9509 @LENGTH@ 77


UPD TryStatement@@try {  is.mark(0);  String out=new Scanner(is).useDelimiter("\\A").next();  is.reset();  return out;} catch (Exception e) {  return "";} @TO@ try (final InputStream is=getResource(fileName)){  assertNotNull(is);  is.mark(0);  String out=new Scanner(is).useDelimiter("\\A").next();  is.reset();  return out;} catch (Exception e) {  return "";} @AT@ 5384 @LENGTH@ 211
---INS VariableDeclarationExpression@@final InputStream is=getResource(fileName) @TO@ TryStatement@@try {  is.mark(0);  String out=new Scanner(is).useDelimiter("\\A").next();  is.reset();  return out;} catch (Exception e) {  return "";} @AT@ 5308 @LENGTH@ 44
------INS Modifier@@final @TO@ VariableDeclarationExpression@@final InputStream is=getResource(fileName) @AT@ 5308 @LENGTH@ 5
------INS SimpleType@@InputStream @TO@ VariableDeclarationExpression@@final InputStream is=getResource(fileName) @AT@ 5314 @LENGTH@ 11
------MOV VariableDeclarationFragment@@is=getResource(fileName) @TO@ VariableDeclarationExpression@@final InputStream is=getResource(fileName) @AT@ 5321 @LENGTH@ 26
---MOV ExpressionStatement@@MethodInvocation:assertNotNull(is) @TO@ TryStatement@@try {  is.mark(0);  String out=new Scanner(is).useDelimiter("\\A").next();  is.reset();  return out;} catch (Exception e) {  return "";} @AT@ 5357 @LENGTH@ 18


INS TryStatement@@try (Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z")){  String content=scanner.next();  assertTrue(string + " not found in " + f+ " with content="+ content,content.contains(string));}  @TO@ MethodDeclaration@@private, static, void, MethodName:assertFileContains, File f, String string, Exception,  @AT@ 9114 @LENGTH@ 234
---INS VariableDeclarationExpression@@Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @TO@ TryStatement@@try (Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z")){  String content=scanner.next();  assertTrue(string + " not found in " + f+ " with content="+ content,content.contains(string));}  @AT@ 9119 @LENGTH@ 61
------INS SimpleType@@Scanner @TO@ VariableDeclarationExpression@@Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @AT@ 9119 @LENGTH@ 7
------INS VariableDeclarationFragment@@scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @TO@ VariableDeclarationExpression@@Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @AT@ 9127 @LENGTH@ 53
---------MOV SimpleName@@content @TO@ VariableDeclarationFragment@@scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @AT@ 9122 @LENGTH@ 7
---------MOV MethodInvocation@@new Scanner(f,"UTF-8").useDelimiter("\\Z").next() @TO@ VariableDeclarationFragment@@scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z") @AT@ 9132 @LENGTH@ 50
------------INS SimpleName@@MethodName:useDelimiter:["\\Z"] @TO@ MethodInvocation@@new Scanner(f,"UTF-8").useDelimiter("\\Z").next() @AT@ 9161 @LENGTH@ 19
---------------INS StringLiteral@@"\\Z" @TO@ SimpleName@@MethodName:useDelimiter:["\\Z"] @AT@ 9174 @LENGTH@ 5
---MOV ExpressionStatement@@MethodInvocation:assertTrue(string + " not found in " + f+ " with content="+ content,content.contains(string)) @TO@ TryStatement@@try (Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z")){  String content=scanner.next();  assertTrue(string + " not found in " + f+ " with content="+ content,content.contains(string));}  @AT@ 9192 @LENGTH@ 97
---INS VariableDeclarationStatement@@String content=scanner.next(); @TO@ TryStatement@@try (Scanner scanner=new Scanner(f,"UTF-8").useDelimiter("\\Z")){  String content=scanner.next();  assertTrue(string + " not found in " + f+ " with content="+ content,content.contains(string));}  @AT@ 9196 @LENGTH@ 32
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String content=scanner.next(); @AT@ 9196 @LENGTH@ 6
------INS VariableDeclarationFragment@@content=scanner.next() @TO@ VariableDeclarationStatement@@String content=scanner.next(); @AT@ 9203 @LENGTH@ 24
---------INS SimpleName@@content @TO@ VariableDeclarationFragment@@content=scanner.next() @AT@ 9203 @LENGTH@ 7
---------INS MethodInvocation@@scanner.next() @TO@ VariableDeclarationFragment@@content=scanner.next() @AT@ 9213 @LENGTH@ 14
------------INS SimpleName@@Name:scanner @TO@ MethodInvocation@@scanner.next() @AT@ 9213 @LENGTH@ 7
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@scanner.next() @AT@ 9221 @LENGTH@ 6


UPD IfStatement@@if (unescaped == Constants.END_OF_STREAM) {  token.content.append((char)c).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @TO@ if (unescaped == END_OF_STREAM) {  token.content.append((char)c).append((char)reader.getLastChar());} else {  token.content.append((char)unescaped);} @AT@ 9656 @LENGTH@ 266
---UPD InfixExpression@@unescaped == Constants.END_OF_STREAM @TO@ unescaped == END_OF_STREAM @AT@ 9660 @LENGTH@ 36
------INS SimpleName@@END_OF_STREAM @TO@ InfixExpression@@unescaped == Constants.END_OF_STREAM @AT@ 9663 @LENGTH@ 13
------DEL QualifiedName@@Constants.END_OF_STREAM @AT@ 9673 @LENGTH@ 23
---------DEL SimpleName@@Constants @AT@ 9673 @LENGTH@ 9
---------DEL SimpleName@@END_OF_STREAM @AT@ 9683 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingRedisConverterUnitTests,  @AT@ 47424 @LENGTH@ 360
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47424 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47431 @LENGTH@ 4
---INS SimpleName@@MethodName:readHandlesArraysOfPrimitivesProperly @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47436 @LENGTH@ 37
---INS VariableDeclarationStatement@@WithArrays source=new WithArrays(); @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47481 @LENGTH@ 37
------INS SimpleType@@WithArrays @TO@ VariableDeclarationStatement@@WithArrays source=new WithArrays(); @AT@ 47481 @LENGTH@ 10
------INS VariableDeclarationFragment@@source=new WithArrays() @TO@ VariableDeclarationStatement@@WithArrays source=new WithArrays(); @AT@ 47492 @LENGTH@ 25
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new WithArrays() @AT@ 47492 @LENGTH@ 6
---------INS ClassInstanceCreation@@WithArrays[] @TO@ VariableDeclarationFragment@@source=new WithArrays() @AT@ 47501 @LENGTH@ 16
------------INS New@@new @TO@ ClassInstanceCreation@@WithArrays[] @AT@ 47501 @LENGTH@ 3
------------INS SimpleType@@WithArrays @TO@ ClassInstanceCreation@@WithArrays[] @AT@ 47505 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:source.arrayOfPrimitives=new int[]{1,2,3} @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47521 @LENGTH@ 49
------INS Assignment@@source.arrayOfPrimitives=new int[]{1,2,3} @TO@ ExpressionStatement@@Assignment:source.arrayOfPrimitives=new int[]{1,2,3} @AT@ 47521 @LENGTH@ 48
---------INS QualifiedName@@source.arrayOfPrimitives @TO@ Assignment@@source.arrayOfPrimitives=new int[]{1,2,3} @AT@ 47521 @LENGTH@ 24
------------INS SimpleName@@source @TO@ QualifiedName@@source.arrayOfPrimitives @AT@ 47521 @LENGTH@ 6
------------INS SimpleName@@arrayOfPrimitives @TO@ QualifiedName@@source.arrayOfPrimitives @AT@ 47528 @LENGTH@ 17
---------INS Operator@@= @TO@ Assignment@@source.arrayOfPrimitives=new int[]{1,2,3} @AT@ 47545 @LENGTH@ 1
---------INS ArrayCreation@@new int[]{1,2,3} @TO@ Assignment@@source.arrayOfPrimitives=new int[]{1,2,3} @AT@ 47548 @LENGTH@ 21
------------INS ArrayType@@int[] @TO@ ArrayCreation@@new int[]{1,2,3} @AT@ 47552 @LENGTH@ 5
---------------INS PrimitiveType@@int @TO@ ArrayType@@int[] @AT@ 47552 @LENGTH@ 3
------------INS ArrayInitializer@@{1,2,3} @TO@ ArrayCreation@@new int[]{1,2,3} @AT@ 47558 @LENGTH@ 11
---------------INS NumberLiteral@@1 @TO@ ArrayInitializer@@{1,2,3} @AT@ 47560 @LENGTH@ 1
---------------INS NumberLiteral@@2 @TO@ ArrayInitializer@@{1,2,3} @AT@ 47563 @LENGTH@ 1
---------------INS NumberLiteral@@3 @TO@ ArrayInitializer@@{1,2,3} @AT@ 47566 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(write(source).getBucket(),isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")) @TO@ MethodDeclaration@@public, void, MethodName:readHandlesArraysOfPrimitivesProperly,  @AT@ 47573 @LENGTH@ 208
------INS MethodInvocation@@assertThat(write(source).getBucket(),isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(write(source).getBucket(),isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")) @AT@ 47573 @LENGTH@ 207
---------INS SimpleName@@MethodName:assertThat:[write(source).getBucket(), isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")] @TO@ MethodInvocation@@assertThat(write(source).getBucket(),isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")) @AT@ 47573 @LENGTH@ 207
------------INS MethodInvocation@@write(source).getBucket() @TO@ SimpleName@@MethodName:assertThat:[write(source).getBucket(), isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")] @AT@ 47584 @LENGTH@ 25
---------------INS MethodInvocation@@MethodName:write:[source] @TO@ MethodInvocation@@write(source).getBucket() @AT@ 47584 @LENGTH@ 13
------------------INS SimpleName@@source @TO@ MethodInvocation@@MethodName:write:[source] @AT@ 47590 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBucket:[] @TO@ MethodInvocation@@write(source).getBucket() @AT@ 47598 @LENGTH@ 11
------------INS MethodInvocation@@isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3") @TO@ SimpleName@@MethodName:assertThat:[write(source).getBucket(), isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3")] @AT@ 47611 @LENGTH@ 168
---------------INS MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[1]", "2"] @TO@ MethodInvocation@@isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3") @AT@ 47611 @LENGTH@ 117
------------------INS StringLiteral@@"arrayOfPrimitives.[1]" @TO@ MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[1]", "2"] @AT@ 47699 @LENGTH@ 23
------------------INS StringLiteral@@"2" @TO@ MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[1]", "2"] @AT@ 47724 @LENGTH@ 3
---------------INS MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[0]", "1"] @TO@ MethodInvocation@@isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3") @AT@ 47611 @LENGTH@ 61
------------------INS StringLiteral@@"arrayOfPrimitives.[0]" @TO@ MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[0]", "1"] @AT@ 47643 @LENGTH@ 23
------------------INS StringLiteral@@"1" @TO@ MethodInvocation@@MethodName:containingUtf8String:["arrayOfPrimitives.[0]", "1"] @AT@ 47668 @LENGTH@ 3
---------------INS MethodInvocation@@MethodName:isBucket:[] @TO@ MethodInvocation@@isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3") @AT@ 47611 @LENGTH@ 10
---------------INS SimpleName@@MethodName:containingUtf8String:["arrayOfPrimitives.[2]", "3"] @TO@ MethodInvocation@@isBucket().containingUtf8String("arrayOfPrimitives.[0]","1").containingUtf8String("arrayOfPrimitives.[1]","2").containingUtf8String("arrayOfPrimitives.[2]","3") @AT@ 47729 @LENGTH@ 50
------------------INS StringLiteral@@"arrayOfPrimitives.[2]" @TO@ SimpleName@@MethodName:containingUtf8String:["arrayOfPrimitives.[2]", "3"] @AT@ 47750 @LENGTH@ 23
------------------INS StringLiteral@@"3" @TO@ SimpleName@@MethodName:containingUtf8String:["arrayOfPrimitives.[2]", "3"] @AT@ 47775 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertEquals("The output is not correct.","<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />",value) @TO@ MethodInvocation:assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />") @AT@ 1140 @LENGTH@ 138
---UPD MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />",value) @TO@ assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />") @AT@ 1140 @LENGTH@ 137
------DEL SimpleName@@MethodName:assertEquals:["The output is not correct.", "<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />", value] @AT@ 1140 @LENGTH@ 137
---------DEL StringLiteral@@"The output is not correct." @AT@ 1158 @LENGTH@ 28
---------DEL SimpleName@@value @AT@ 1271 @LENGTH@ 5
------INS MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />",value) @AT@ 1161 @LENGTH@ 63
---------INS StringLiteral@@"The output is not correct." @TO@ MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @AT@ 1195 @LENGTH@ 28
------INS MethodInvocation@@MethodName:assertThat:[value] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />",value) @AT@ 1161 @LENGTH@ 17
---------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:assertThat:[value] @AT@ 1172 @LENGTH@ 5
------INS SimpleName@@MethodName:isEqualTo:["<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />"] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />",value) @AT@ 1225 @LENGTH@ 84
---------MOV StringLiteral@@"<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />" @TO@ SimpleName@@MethodName:isEqualTo:["<input type=\"hidden\" name=\"csrfParameter\" value=\"fooBarBazQux\" />"] @AT@ 1192 @LENGTH@ 73


UPD ExpressionStatement@@MethodInvocation:assertTrue(result.toString(),result.get(FAILURE_DESCRIPTION).asString().contains("not found")) @TO@ MethodInvocation:assertTrue(result.toString(),result.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0335")) @AT@ 19550 @LENGTH@ 96
---UPD MethodInvocation@@assertTrue(result.toString(),result.get(FAILURE_DESCRIPTION).asString().contains("not found")) @TO@ assertTrue(result.toString(),result.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0335")) @AT@ 19550 @LENGTH@ 95
------UPD SimpleName@@MethodName:assertTrue:[result.toString(), result.get(FAILURE_DESCRIPTION).asString().contains("not found")] @TO@ MethodName:assertTrue:[result.toString(), result.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0335")] @AT@ 19550 @LENGTH@ 95
---------UPD MethodInvocation@@result.get(FAILURE_DESCRIPTION).asString().contains("not found") @TO@ result.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0335") @AT@ 19580 @LENGTH@ 64
------------UPD SimpleName@@MethodName:contains:["not found"] @TO@ MethodName:contains:["WFLYCTL0335"] @AT@ 19623 @LENGTH@ 21
---------------UPD StringLiteral@@"not found" @TO@ "WFLYCTL0335" @AT@ 19632 @LENGTH@ 11


UPD VariableDeclarationStatement@@HashMap<String,TestPojo> map=new HashMap<String,TestPojo>(); @TO@ HashMap<String,TestPojo> map=new LinkedHashMap<String,TestPojo>(); @AT@ 3602 @LENGTH@ 64
---UPD VariableDeclarationFragment@@map=new HashMap<String,TestPojo>() @TO@ map=new LinkedHashMap<String,TestPojo>() @AT@ 3628 @LENGTH@ 37
------UPD ClassInstanceCreation@@HashMap<String,TestPojo>[] @TO@ LinkedHashMap<String,TestPojo>[] @AT@ 3634 @LENGTH@ 31
---------UPD ParameterizedType@@HashMap<String,TestPojo> @TO@ LinkedHashMap<String,TestPojo> @AT@ 3638 @LENGTH@ 25
------------UPD SimpleType@@HashMap @TO@ LinkedHashMap @AT@ 3638 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:JMSEmbeddedBroker, String url,  @TO@ voidMethodName:JMSEmbeddedBroker, String url,  @AT@ 1780 @LENGTH@ 77
---DEL Modifier@@public @AT@ 1780 @LENGTH@ 6


DEL MethodDeclaration@@public, final, void, MethodName:setUp, Exception,  @AT@ 1756 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1756 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1763 @LENGTH@ 5
---DEL PrimitiveType@@void @AT@ 1769 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1774 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1789 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1803 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1803 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1809 @LENGTH@ 5


DEL VariableDeclarationStatement@@String content=new Scanner(f,"UTF-8").useDelimiter("\\Z").next(); @AT@ 9115 @LENGTH@ 68
---DEL SimpleType@@String @AT@ 9115 @LENGTH@ 6
---DEL VariableDeclarationFragment@@content=new Scanner(f,"UTF-8").useDelimiter("\\Z").next() @AT@ 9122 @LENGTH@ 60


UPD FieldDeclaration@@private, final, List<ServerConfiguration>, [configurations] @TO@ private, final, List<ServerConfiguration<Fraction>>, [configurations] @AT@ 1949 @LENGTH@ 55
---UPD ParameterizedType@@List<ServerConfiguration> @TO@ List<ServerConfiguration<Fraction>> @AT@ 1963 @LENGTH@ 25
------INS ParameterizedType@@ServerConfiguration<Fraction> @TO@ ParameterizedType@@List<ServerConfiguration> @AT@ 2013 @LENGTH@ 29
---------MOV SimpleType@@ServerConfiguration @TO@ ParameterizedType@@ServerConfiguration<Fraction> @AT@ 1968 @LENGTH@ 19
---------INS SimpleType@@Fraction @TO@ ParameterizedType@@ServerConfiguration<Fraction> @AT@ 2033 @LENGTH@ 8


UPD VariableDeclarationStatement@@int index=1; @TO@ String[] tmp; @AT@ 5721 @LENGTH@ 14
---INS ArrayType@@String[] @TO@ VariableDeclarationStatement@@int index=1; @AT@ 5721 @LENGTH@ 8
------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5721 @LENGTH@ 6
---DEL PrimitiveType@@int @AT@ 5721 @LENGTH@ 3
---UPD VariableDeclarationFragment@@index=1 @TO@ tmp @AT@ 5725 @LENGTH@ 9
------UPD SimpleName@@index @TO@ tmp @AT@ 5725 @LENGTH@ 5
------DEL NumberLiteral@@1 @AT@ 5733 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertThat(registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)) @TO@ MethodInvocation:assertThat(registry.getSessionInformation(session.getId()).getLastRequest().after(lastRequest)).isTrue() @AT@ 4750 @LENGTH@ 110
---UPD MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)) @TO@ MethodName:assertThat:[registry.getSessionInformation(session.getId()).getLastRequest().after(lastRequest)] @AT@ 4750 @LENGTH@ 109
---INS MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().after(lastRequest)).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertThat(registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)) @AT@ 4753 @LENGTH@ 104
------MOV MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)) @TO@ MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().after(lastRequest)).isTrue() @AT@ 4750 @LENGTH@ 109
---------DEL SimpleName@@MethodName:assertThat:[registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)] @AT@ 4750 @LENGTH@ 109
---------MOV MethodInvocation@@registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest) @TO@ MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().isTrue().after(lastRequest)) @AT@ 4761 @LENGTH@ 97
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 4761 @LENGTH@ 73
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(registry.getSessionInformation(session.getId()).getLastRequest().after(lastRequest)).isTrue() @AT@ 4849 @LENGTH@ 8


INS IfStatement@@if (StringUtils.isEmpty(returnTypeParamsString)) {  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} else {  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @TO@ MethodDeclaration@@private, MethodMetadata, MethodName:getFinderMethod, FinderMethod finderMethod,  @AT@ 35016 @LENGTH@ 615
---INS MethodInvocation@@StringUtils.isEmpty(returnTypeParamsString) @TO@ IfStatement@@if (StringUtils.isEmpty(returnTypeParamsString)) {  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} else {  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @AT@ 35020 @LENGTH@ 43
------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.isEmpty(returnTypeParamsString) @AT@ 35020 @LENGTH@ 11
------INS SimpleName@@MethodName:isEmpty:[returnTypeParamsString] @TO@ MethodInvocation@@StringUtils.isEmpty(returnTypeParamsString) @AT@ 35032 @LENGTH@ 31
---------INS SimpleName@@returnTypeParamsString @TO@ SimpleName@@MethodName:isEmpty:[returnTypeParamsString] @AT@ 35040 @LENGTH@ 22
---INS Block@@ThenBody:{  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @TO@ IfStatement@@if (StringUtils.isEmpty(returnTypeParamsString)) {  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} else {  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @AT@ 35065 @LENGTH@ 262
------INS ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @TO@ Block@@ThenBody:{  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @AT@ 35073 @LENGTH@ 248
---------INS MethodInvocation@@bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @TO@ ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @AT@ 35073 @LENGTH@ 247
------------INS SimpleName@@Name:bodyBuilder @TO@ MethodInvocation@@bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @AT@ 35073 @LENGTH@ 11
------------INS SimpleName@@MethodName:appendFormalLine:[String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)] @TO@ MethodInvocation@@bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @AT@ 35085 @LENGTH@ 235
---------------INS MethodInvocation@@String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString) @TO@ SimpleName@@MethodName:appendFormalLine:[String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)] @AT@ 35102 @LENGTH@ 217
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString) @AT@ 35102 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @TO@ MethodInvocation@@String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString) @AT@ 35109 @LENGTH@ 210
---------------------INS StringLiteral@@"%s %s = %s.%s(%s);" @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35116 @LENGTH@ 20
---------------------INS MethodInvocation@@addTypeToImport(returnType).getSimpleTypeName() @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35138 @LENGTH@ 58
------------------------INS MethodInvocation@@MethodName:addTypeToImport:[returnType] @TO@ MethodInvocation@@addTypeToImport(returnType).getSimpleTypeName() @AT@ 35138 @LENGTH@ 27
---------------------------INS SimpleName@@returnType @TO@ MethodInvocation@@MethodName:addTypeToImport:[returnType] @AT@ 35154 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:getSimpleTypeName:[] @TO@ MethodInvocation@@addTypeToImport(returnType).getSimpleTypeName() @AT@ 35177 @LENGTH@ 19
---------------------INS MethodInvocation@@StringUtils.uncapitalize(this.entityPlural) @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35198 @LENGTH@ 43
------------------------INS SimpleName@@Name:StringUtils @TO@ MethodInvocation@@StringUtils.uncapitalize(this.entityPlural) @AT@ 35198 @LENGTH@ 11
------------------------INS SimpleName@@MethodName:uncapitalize:[this.entityPlural] @TO@ MethodInvocation@@StringUtils.uncapitalize(this.entityPlural) @AT@ 35210 @LENGTH@ 31
---------------------------INS FieldAccess@@this.entityPlural @TO@ SimpleName@@MethodName:uncapitalize:[this.entityPlural] @AT@ 35223 @LENGTH@ 17
------------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.entityPlural @AT@ 35223 @LENGTH@ 4
------------------------------INS SimpleName@@entityPlural @TO@ FieldAccess@@this.entityPlural @AT@ 35228 @LENGTH@ 12
---------------------INS MethodInvocation@@getServiceField().getFieldName() @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35243 @LENGTH@ 43
------------------------INS MethodInvocation@@MethodName:getServiceField:[] @TO@ MethodInvocation@@getServiceField().getFieldName() @AT@ 35243 @LENGTH@ 17
------------------------INS SimpleName@@MethodName:getFieldName:[] @TO@ MethodInvocation@@getServiceField().getFieldName() @AT@ 35272 @LENGTH@ 14
---------------------INS SimpleName@@methodName @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35288 @LENGTH@ 10
---------------------INS SimpleName@@finderParamsString @TO@ SimpleName@@MethodName:format:["%s %s = %s.%s(%s);", addTypeToImport(returnType).getSimpleTypeName(), StringUtils.uncapitalize(this.entityPlural), getServiceField().getFieldName(), methodName, finderParamsString] @AT@ 35300 @LENGTH@ 18
---INS Block@@ElseBody:{  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @TO@ IfStatement@@if (StringUtils.isEmpty(returnTypeParamsString)) {  bodyBuilder.appendFormalLine(String.format("%s %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} else {  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @AT@ 35333 @LENGTH@ 298
------MOV ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString)) @TO@ Block@@ElseBody:{  bodyBuilder.appendFormalLine(String.format("%s<%s> %s = %s.%s(%s);",addTypeToImport(returnType).getSimpleTypeName(),returnTypeParamsString,StringUtils.uncapitalize(this.entityPlural),getServiceField().getFieldName(),methodName,finderParamsString));} @AT@ 35016 @LENGTH@ 278


UPD FieldDeclaration@@Version, [LUCENE_VERSION=Version.LUCENE_5_4_1] @TO@ Version, [LUCENE_VERSION=Version.LUCENE_5_5_0] @AT@ 927 @LENGTH@ 46
---UPD VariableDeclarationFragment@@LUCENE_VERSION=Version.LUCENE_5_4_1 @TO@ LUCENE_VERSION=Version.LUCENE_5_5_0 @AT@ 935 @LENGTH@ 37
------UPD QualifiedName@@Version.LUCENE_5_4_1 @TO@ Version.LUCENE_5_5_0 @AT@ 952 @LENGTH@ 20
---------UPD SimpleName@@LUCENE_5_4_1 @TO@ LUCENE_5_5_0 @AT@ 960 @LENGTH@ 12


UPD FieldDeclaration@@boolean, [optionsEnabled] @TO@ private, boolean, [optionsEnabled] @AT@ 3545 @LENGTH@ 23
---INS Modifier@@private @TO@ FieldDeclaration@@boolean, [optionsEnabled] @AT@ 3545 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:Named, Collection<EventType> filteredEventNames,  @TO@ voidMethodName:Named, Collection<EventType> filteredEventNames,  @AT@ 1279 @LENGTH@ 234
---DEL Modifier@@public @AT@ 1279 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertTrue("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas,gas.containsAll(resultColl) && resultColl.containsAll(gas)) @TO@ MethodInvocation:assertThat(gas.containsAll(resultColl) && resultColl.containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas).isTrue() @AT@ 2182 @LENGTH@ 170
---INS MethodInvocation@@assertThat(gas.containsAll(resultColl) && resultColl.containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas,gas.containsAll(resultColl) && resultColl.containsAll(gas)) @AT@ 2135 @LENGTH@ 201
------INS MethodInvocation@@MethodName:withFailMessage:["GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas] @TO@ MethodInvocation@@assertThat(gas.containsAll(resultColl) && resultColl.containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas).isTrue() @AT@ 2135 @LENGTH@ 192
---------INS InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @TO@ MethodInvocation@@MethodName:withFailMessage:["GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas] @AT@ 2231 @LENGTH@ 95
------------INS StringLiteral@@"GrantedAuthority collections do not match; result: " @TO@ InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @AT@ 2231 @LENGTH@ 53
------------INS Operator@@+ @TO@ InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @AT@ 2284 @LENGTH@ 1
------------INS SimpleName@@resultColl @TO@ InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @AT@ 2287 @LENGTH@ 10
------------INS StringLiteral@@", expected: " @TO@ InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @AT@ 2306 @LENGTH@ 14
------------INS SimpleName@@gas @TO@ InfixExpression@@"GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas @AT@ 2323 @LENGTH@ 3
------MOV MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas,gas.containsAll(resultColl) && resultColl.containsAll(gas)) @TO@ MethodInvocation@@assertThat(gas.containsAll(resultColl) && resultColl.containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas).isTrue() @AT@ 2182 @LENGTH@ 169
---------MOV InfixExpression@@gas.containsAll(resultColl) && resultColl.containsAll(gas) @TO@ MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas,gas.containsAll(resultColl) && resultColl.containsAll(gas)) @AT@ 2292 @LENGTH@ 58
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(gas.containsAll(resultColl) && resultColl.containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas).isTrue() @AT@ 2328 @LENGTH@ 8
---UPD MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + resultColl + ", expected: "+ gas,gas.containsAll(resultColl) && resultColl.containsAll(gas)) @TO@ MethodName:assertThat:[gas.containsAll(resultColl) && resultColl.containsAll(gas)] @AT@ 2182 @LENGTH@ 169


DEL ExpressionStatement@@MethodInvocation:connection.sInterStore(rawDestKey,rawKeys) @AT@ 3416 @LENGTH@ 44


INS ExpressionStatement@@MethodInvocation:exception.getHttpContent().content().release() @TO@ MethodDeclaration@@public, void, MethodName:testHttpFault, Exception,  @AT@ 1822 @LENGTH@ 47
---INS MethodInvocation@@exception.getHttpContent().content().release() @TO@ ExpressionStatement@@MethodInvocation:exception.getHttpContent().content().release() @AT@ 1822 @LENGTH@ 46
------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@exception.getHttpContent().content().release() @AT@ 1822 @LENGTH@ 36
------INS MethodInvocation@@MethodName:getHttpContent:[] @TO@ MethodInvocation@@exception.getHttpContent().content().release() @AT@ 1822 @LENGTH@ 26
------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.getHttpContent().content().release() @AT@ 1822 @LENGTH@ 9
------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@exception.getHttpContent().content().release() @AT@ 1859 @LENGTH@ 9


UPD IfStatement@@if (h instanceof FileHistory) {  ((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray()));} else {  consoleReader.getHistory().add(hist.toString());} @TO@ if (!(h instanceof FileHistory)) {  consoleReader.getHistory().add(hist.toString());} @AT@ 34708 @LENGTH@ 237
---INS PrefixExpression@@!(h instanceof FileHistory) @TO@ IfStatement@@if (h instanceof FileHistory) {  ((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray()));} else {  consoleReader.getHistory().add(hist.toString());} @AT@ 34712 @LENGTH@ 27
------INS Operator@@! @TO@ PrefixExpression@@!(h instanceof FileHistory) @AT@ 34712 @LENGTH@ 1
------INS ParenthesizedExpression@@(h instanceof FileHistory) @TO@ PrefixExpression@@!(h instanceof FileHistory) @AT@ 34713 @LENGTH@ 26
---------INS InstanceofExpression@@h instanceof FileHistory @TO@ ParenthesizedExpression@@(h instanceof FileHistory) @AT@ 34714 @LENGTH@ 24
------------MOV SimpleName@@h @TO@ InstanceofExpression@@h instanceof FileHistory @AT@ 34712 @LENGTH@ 1
------------MOV Instanceof@@instanceof @TO@ InstanceofExpression@@h instanceof FileHistory @AT@ 34714 @LENGTH@ 10
------------MOV SimpleType@@FileHistory @TO@ InstanceofExpression@@h instanceof FileHistory @AT@ 34725 @LENGTH@ 11
---DEL InstanceofExpression@@h instanceof FileHistory @AT@ 34712 @LENGTH@ 24
---DEL Block@@ThenBody:{  ((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray()));} @AT@ 34738 @LENGTH@ 131
------DEL ExpressionStatement@@MethodInvocation:((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray())) @AT@ 34750 @LENGTH@ 109
---------DEL MethodInvocation@@((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray())) @AT@ 34750 @LENGTH@ 108
------------DEL ParenthesizedExpression@@((FileHistory)consoleReader.getHistory()) @AT@ 34750 @LENGTH@ 42
---------------DEL CastExpression@@(FileHistory)consoleReader.getHistory() @AT@ 34751 @LENGTH@ 40
------------------DEL SimpleType@@FileHistory @AT@ 34752 @LENGTH@ 11
------------------DEL MethodInvocation@@consoleReader.getHistory() @AT@ 34765 @LENGTH@ 26
---------------------DEL SimpleName@@Name:consoleReader @AT@ 34765 @LENGTH@ 13
---------------------DEL SimpleName@@MethodName:getHistory:[] @AT@ 34779 @LENGTH@ 12
------------DEL SimpleName@@MethodName:load:[new ByteArrayInputStream(hist.toByteArray())] @AT@ 34793 @LENGTH@ 65
---------------DEL ClassInstanceCreation@@ByteArrayInputStream[hist.toByteArray()] @AT@ 34798 @LENGTH@ 59
------------------DEL New@@new @AT@ 34798 @LENGTH@ 3
------------------DEL SimpleType@@ByteArrayInputStream @AT@ 34802 @LENGTH@ 20
------------------DEL MethodInvocation@@hist.toByteArray() @AT@ 34823 @LENGTH@ 33
---------------------DEL SimpleName@@Name:hist @AT@ 34823 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:toByteArray:[] @AT@ 34843 @LENGTH@ 13
---UPD Block@@ElseBody:{  consoleReader.getHistory().add(hist.toString());} @TO@ ThenBody:{  consoleReader.getHistory().add(hist.toString());} @AT@ 34875 @LENGTH@ 70


UPD ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation:assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 922 @LENGTH@ 99
---UPD MethodInvocation@@assertThat(request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodName:assertThat:[request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 922 @LENGTH@ 98
---INS MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 922 @LENGTH@ 98
------MOV MethodInvocation@@assertThat(request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 922 @LENGTH@ 98
---------DEL SimpleName@@MethodName:assertThat:[request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 922 @LENGTH@ 98
---------MOV MethodInvocation@@request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @TO@ MethodInvocation@@assertThat(request.getSession().isNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 933 @LENGTH@ 86
------------DEL MethodInvocation@@MethodName:isNull:[] @AT@ 933 @LENGTH@ 29
------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNull() @AT@ 1012 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @TO@ MethodDeclaration@@public, RequestPostProcessor, MethodName:beforeMockMvcCreated, ConfigurableMockMvcBuilder<?> builder, WebApplicationContext context,  @AT@ 2633 @LENGTH@ 115
---INS MethodInvocation@@context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @TO@ ExpressionStatement@@MethodInvocation:context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @AT@ 2633 @LENGTH@ 114
------INS MethodInvocation@@MethodName:getServletContext:[] @TO@ MethodInvocation@@context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @AT@ 2633 @LENGTH@ 27
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @AT@ 2633 @LENGTH@ 7
------INS SimpleName@@MethodName:setAttribute:[BeanIds.SPRING_SECURITY_FILTER_CHAIN, this.springSecurityFilterChain] @TO@ MethodInvocation@@context.getServletContext().setAttribute(BeanIds.SPRING_SECURITY_FILTER_CHAIN,this.springSecurityFilterChain) @AT@ 2661 @LENGTH@ 86
---------INS QualifiedName@@BeanIds.SPRING_SECURITY_FILTER_CHAIN @TO@ SimpleName@@MethodName:setAttribute:[BeanIds.SPRING_SECURITY_FILTER_CHAIN, this.springSecurityFilterChain] @AT@ 2674 @LENGTH@ 36
------------INS SimpleName@@BeanIds @TO@ QualifiedName@@BeanIds.SPRING_SECURITY_FILTER_CHAIN @AT@ 2674 @LENGTH@ 7
------------INS SimpleName@@SPRING_SECURITY_FILTER_CHAIN @TO@ QualifiedName@@BeanIds.SPRING_SECURITY_FILTER_CHAIN @AT@ 2682 @LENGTH@ 28
---------INS FieldAccess@@this.springSecurityFilterChain @TO@ SimpleName@@MethodName:setAttribute:[BeanIds.SPRING_SECURITY_FILTER_CHAIN, this.springSecurityFilterChain] @AT@ 2716 @LENGTH@ 30
------------INS ThisExpression@@this @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 2716 @LENGTH@ 4
------------INS SimpleName@@springSecurityFilterChain @TO@ FieldAccess@@this.springSecurityFilterChain @AT@ 2721 @LENGTH@ 25


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]TestPojoView,  @AT@ 1987 @LENGTH@ 156
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1987 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1994 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1998 @LENGTH@ 8
---INS VariableDeclarationStatement@@int result=age; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2019 @LENGTH@ 17
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2019 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=age @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2023 @LENGTH@ 12
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=age @AT@ 2023 @LENGTH@ 6
---------INS SimpleName@@age @TO@ VariableDeclarationFragment@@result=age @AT@ 2032 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:result=31 * result + height @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2045 @LENGTH@ 30
------INS Assignment@@result=31 * result + height @TO@ ExpressionStatement@@Assignment:result=31 * result + height @AT@ 2045 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + height @AT@ 2045 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + height @AT@ 2051 @LENGTH@ 1
---------INS InfixExpression@@31 * result + height @TO@ Assignment@@result=31 * result + height @AT@ 2054 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + height @AT@ 2054 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2054 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2056 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2059 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + height @AT@ 2065 @LENGTH@ 1
------------INS SimpleName@@height @TO@ InfixExpression@@31 * result + height @AT@ 2068 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:result=31 * result + weight @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2084 @LENGTH@ 30
------INS Assignment@@result=31 * result + weight @TO@ ExpressionStatement@@Assignment:result=31 * result + weight @AT@ 2084 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + weight @AT@ 2084 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + weight @AT@ 2090 @LENGTH@ 1
---------INS InfixExpression@@31 * result + weight @TO@ Assignment@@result=31 * result + weight @AT@ 2093 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + weight @AT@ 2093 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2093 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2095 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2098 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + weight @AT@ 2104 @LENGTH@ 1
------------INS SimpleName@@weight @TO@ InfixExpression@@31 * result + weight @AT@ 2107 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2123 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 2130 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:Student, int grade,  @TO@ voidMethodName:Student, int grade,  @AT@ 3208 @LENGTH@ 69
---DEL Modifier@@public @AT@ 3208 @LENGTH@ 6


INS FieldDeclaration@@private, Date, [backdatedTime] @TO@ TypeDeclaration@@[public]Album, FacebookObject @AT@ 842 @LENGTH@ 27
---INS Modifier@@private @TO@ FieldDeclaration@@private, Date, [backdatedTime] @AT@ 842 @LENGTH@ 7
---INS SimpleType@@Date @TO@ FieldDeclaration@@private, Date, [backdatedTime] @AT@ 850 @LENGTH@ 4
---INS VariableDeclarationFragment@@backdatedTime @TO@ FieldDeclaration@@private, Date, [backdatedTime] @AT@ 855 @LENGTH@ 13
------INS SimpleName@@backdatedTime @TO@ VariableDeclarationFragment@@backdatedTime @AT@ 855 @LENGTH@ 13


UPD VariableDeclarationStatement@@String pass=super.password; @TO@ String pass=super.getPassword(); @AT@ 1428 @LENGTH@ 29
---UPD VariableDeclarationFragment@@pass=super.password @TO@ pass=super.getPassword() @AT@ 1435 @LENGTH@ 21
------INS SuperMethodInvocation@@super.getPassword() @TO@ VariableDeclarationFragment@@pass=super.password @AT@ 1442 @LENGTH@ 19
---------INS SimpleName@@MethodName:getPassword:[] @TO@ SuperMethodInvocation@@super.getPassword() @AT@ 1448 @LENGTH@ 11
------DEL SuperFieldAccess@@super.password @AT@ 1442 @LENGTH@ 14
---------DEL SimpleName@@password @AT@ 1448 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:LineBuilder,  @TO@ voidMethodName:LineBuilder,  @AT@ 5579 @LENGTH@ 24
---DEL Modifier@@public @AT@ 5579 @LENGTH@ 6


INS MethodDeclaration@@List<User>, MethodName:findByRolesNameContaining, String name,  @TO@ TypeDeclaration@@[public]UserRepository, [JpaRepository<User,Integer>, JpaSpecificationExecutor<User>, UserRepositoryCustom] @AT@ 15882 @LENGTH@ 39
---INS ParameterizedType@@List<User> @TO@ MethodDeclaration@@List<User>, MethodName:findByRolesNameContaining, String name,  @AT@ 15871 @LENGTH@ 10
------INS SimpleType@@List @TO@ ParameterizedType@@List<User> @AT@ 15871 @LENGTH@ 4
------INS SimpleType@@User @TO@ ParameterizedType@@List<User> @AT@ 15876 @LENGTH@ 4
---INS SimpleName@@MethodName:findByRolesNameContaining @TO@ MethodDeclaration@@List<User>, MethodName:findByRolesNameContaining, String name,  @AT@ 15882 @LENGTH@ 25
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@List<User>, MethodName:findByRolesNameContaining, String name,  @AT@ 15908 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 15908 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 15915 @LENGTH@ 4


INS MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset,  @TO@ TypeDeclaration@@[public]UndertowExternalMountsAsset, [Asset] @AT@ 1031 @LENGTH@ 45
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset,  @AT@ 1031 @LENGTH@ 6
---INS SimpleName@@MethodName:UndertowExternalMountsAsset @TO@ MethodDeclaration@@public, voidMethodName:UndertowExternalMountsAsset,  @AT@ 1038 @LENGTH@ 27


UPD MethodDeclaration@@public, voidMethodName:ClosingClientRunnable, Socket socket,  @TO@ voidMethodName:ClosingClientRunnable, Socket socket,  @AT@ 7471 @LENGTH@ 89
---DEL Modifier@@public @AT@ 7471 @LENGTH@ 6


INS IfStatement@@if (fieldsObject != null) {  return fieldsObject;} else {  return super.getFieldsObject();} @TO@ MethodDeclaration@@public, DBObject, MethodName:getFieldsObject,  @AT@ 2092 @LENGTH@ 100
---INS InfixExpression@@fieldsObject != null @TO@ IfStatement@@if (fieldsObject != null) {  return fieldsObject;} else {  return super.getFieldsObject();} @AT@ 2095 @LENGTH@ 20
------INS SimpleName@@fieldsObject @TO@ InfixExpression@@fieldsObject != null @AT@ 2095 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@fieldsObject != null @AT@ 2107 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@fieldsObject != null @AT@ 2111 @LENGTH@ 4
---INS Block@@ThenBody:{  return fieldsObject;} @TO@ IfStatement@@if (fieldsObject != null) {  return fieldsObject;} else {  return super.getFieldsObject();} @AT@ 2117 @LENGTH@ 29
------INS ReturnStatement@@SimpleName:fieldsObject @TO@ Block@@ThenBody:{  return fieldsObject;} @AT@ 2122 @LENGTH@ 20
---------MOV SimpleName@@fieldsObject @TO@ ReturnStatement@@SimpleName:fieldsObject @AT@ 2074 @LENGTH@ 12
---INS Block@@ElseBody:{  return super.getFieldsObject();} @TO@ IfStatement@@if (fieldsObject != null) {  return fieldsObject;} else {  return super.getFieldsObject();} @AT@ 2152 @LENGTH@ 40
------INS ReturnStatement@@SuperMethodInvocation:super.getFieldsObject() @TO@ Block@@ElseBody:{  return super.getFieldsObject();} @AT@ 2157 @LENGTH@ 31
---------INS SuperMethodInvocation@@super.getFieldsObject() @TO@ ReturnStatement@@SuperMethodInvocation:super.getFieldsObject() @AT@ 2164 @LENGTH@ 23
------------INS SimpleName@@MethodName:getFieldsObject:[] @TO@ SuperMethodInvocation@@super.getFieldsObject() @AT@ 2170 @LENGTH@ 15


UPD MethodDeclaration@@public, voidMethodName:Server, int port,  @TO@ voidMethodName:Server, int port,  @AT@ 2538 @LENGTH@ 65
---DEL Modifier@@public @AT@ 2538 @LENGTH@ 6


INS TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.containsBean(id);}  @TO@ MethodDeclaration@@public, boolean, MethodName:contains, K id,  @AT@ 5734 @LENGTH@ 121
---MOV ReturnStatement@@MethodInvocation:this.manager.containsBean(id) @TO@ TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.containsBean(id);}  @AT@ 5650 @LENGTH@ 37
---INS VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @TO@ TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.containsBean(id);}  @AT@ 5739 @LENGTH@ 53
------INS SimpleType@@Batch @TO@ VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @AT@ 5739 @LENGTH@ 5
------INS VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @TO@ VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @AT@ 5745 @LENGTH@ 47
---------INS SimpleName@@batch @TO@ VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @AT@ 5745 @LENGTH@ 5
---------INS MethodInvocation@@this.manager.getBatcher().createBatch() @TO@ VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @AT@ 5753 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getBatcher:[] @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 5753 @LENGTH@ 25
------------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 5753 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 5753 @LENGTH@ 4
---------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 5758 @LENGTH@ 7
------------INS SimpleName@@MethodName:createBatch:[] @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 5779 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Assert.fail("Expected an IllegalArgumentException to be thrown.") @TO@ MethodInvocation:fail("Expected an IllegalArgumentException to be thrown.") @AT@ 2668 @LENGTH@ 66
---UPD MethodInvocation@@Assert.fail("Expected an IllegalArgumentException to be thrown.") @TO@ fail("Expected an IllegalArgumentException to be thrown.") @AT@ 2668 @LENGTH@ 65
------DEL SimpleName@@Name:Assert @AT@ 2668 @LENGTH@ 6


UPD MethodDeclaration@@protected, RoutesBuilder, MethodName:createRouteBuilder, Exception,  @TO@ protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 1400 @LENGTH@ 449
---UPD SimpleType@@RoutesBuilder @TO@ RouteBuilder @AT@ 1410 @LENGTH@ 13


INS IfStatement@@if (!BeanIds.AUTHENTICATION_MANAGER.equals(id)) {  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @TO@ MethodDeclaration@@public, BeanDefinition, MethodName:parse, Element element, ParserContext pc,  @AT@ 5877 @LENGTH@ 238
---INS PrefixExpression@@!BeanIds.AUTHENTICATION_MANAGER.equals(id) @TO@ IfStatement@@if (!BeanIds.AUTHENTICATION_MANAGER.equals(id)) {  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @AT@ 5881 @LENGTH@ 42
------INS Operator@@! @TO@ PrefixExpression@@!BeanIds.AUTHENTICATION_MANAGER.equals(id) @AT@ 5881 @LENGTH@ 1
------INS MethodInvocation@@BeanIds.AUTHENTICATION_MANAGER.equals(id) @TO@ PrefixExpression@@!BeanIds.AUTHENTICATION_MANAGER.equals(id) @AT@ 5882 @LENGTH@ 41
---------INS QualifiedName@@Name:BeanIds.AUTHENTICATION_MANAGER @TO@ MethodInvocation@@BeanIds.AUTHENTICATION_MANAGER.equals(id) @AT@ 5882 @LENGTH@ 30
---------INS SimpleName@@MethodName:equals:[id] @TO@ MethodInvocation@@BeanIds.AUTHENTICATION_MANAGER.equals(id) @AT@ 5913 @LENGTH@ 10
------------INS SimpleName@@id @TO@ SimpleName@@MethodName:equals:[id] @AT@ 5920 @LENGTH@ 2
---INS Block@@ThenBody:{  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @TO@ IfStatement@@if (!BeanIds.AUTHENTICATION_MANAGER.equals(id)) {  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @AT@ 5925 @LENGTH@ 190
------INS ExpressionStatement@@MethodInvocation:pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @TO@ Block@@ThenBody:{  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @AT@ 5930 @LENGTH@ 67
---------INS MethodInvocation@@pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @TO@ ExpressionStatement@@MethodInvocation:pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @AT@ 5930 @LENGTH@ 66
------------INS MethodInvocation@@MethodName:getRegistry:[] @TO@ MethodInvocation@@pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @AT@ 5930 @LENGTH@ 16
------------INS SimpleName@@Name:pc @TO@ MethodInvocation@@pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @AT@ 5930 @LENGTH@ 2
------------INS SimpleName@@MethodName:registerAlias:[id, BeanIds.AUTHENTICATION_MANAGER] @TO@ MethodInvocation@@pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER) @AT@ 5947 @LENGTH@ 49
---------------INS SimpleName@@id @TO@ SimpleName@@MethodName:registerAlias:[id, BeanIds.AUTHENTICATION_MANAGER] @AT@ 5961 @LENGTH@ 2
---------------INS QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @TO@ SimpleName@@MethodName:registerAlias:[id, BeanIds.AUTHENTICATION_MANAGER] @AT@ 5965 @LENGTH@ 30
------------------INS SimpleName@@BeanIds @TO@ QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @AT@ 5965 @LENGTH@ 7
------------------INS SimpleName@@AUTHENTICATION_MANAGER @TO@ QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @AT@ 5973 @LENGTH@ 22
------INS ExpressionStatement@@MethodInvocation:pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @TO@ Block@@ThenBody:{  pc.getRegistry().registerAlias(id,BeanIds.AUTHENTICATION_MANAGER);  pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element));} @AT@ 6001 @LENGTH@ 110
---------INS MethodInvocation@@pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @TO@ ExpressionStatement@@MethodInvocation:pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @AT@ 6001 @LENGTH@ 109
------------INS MethodInvocation@@MethodName:getReaderContext:[] @TO@ MethodInvocation@@pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @AT@ 6001 @LENGTH@ 21
------------INS SimpleName@@Name:pc @TO@ MethodInvocation@@pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @AT@ 6001 @LENGTH@ 2
------------INS SimpleName@@MethodName:fireAliasRegistered:[id, BeanIds.AUTHENTICATION_MANAGER, pc.extractSource(element)] @TO@ MethodInvocation@@pc.getReaderContext().fireAliasRegistered(id,BeanIds.AUTHENTICATION_MANAGER,pc.extractSource(element)) @AT@ 6023 @LENGTH@ 87
---------------INS SimpleName@@id @TO@ SimpleName@@MethodName:fireAliasRegistered:[id, BeanIds.AUTHENTICATION_MANAGER, pc.extractSource(element)] @AT@ 6043 @LENGTH@ 2
---------------INS QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @TO@ SimpleName@@MethodName:fireAliasRegistered:[id, BeanIds.AUTHENTICATION_MANAGER, pc.extractSource(element)] @AT@ 6047 @LENGTH@ 30
------------------INS SimpleName@@BeanIds @TO@ QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @AT@ 6047 @LENGTH@ 7
------------------INS SimpleName@@AUTHENTICATION_MANAGER @TO@ QualifiedName@@BeanIds.AUTHENTICATION_MANAGER @AT@ 6055 @LENGTH@ 22
---------------INS MethodInvocation@@pc.extractSource(element) @TO@ SimpleName@@MethodName:fireAliasRegistered:[id, BeanIds.AUTHENTICATION_MANAGER, pc.extractSource(element)] @AT@ 6084 @LENGTH@ 25
------------------INS SimpleName@@Name:pc @TO@ MethodInvocation@@pc.extractSource(element) @AT@ 6084 @LENGTH@ 2
------------------INS SimpleName@@MethodName:extractSource:[element] @TO@ MethodInvocation@@pc.extractSource(element) @AT@ 6087 @LENGTH@ 22
---------------------INS SimpleName@@element @TO@ SimpleName@@MethodName:extractSource:[element] @AT@ 6101 @LENGTH@ 7


UPD ReturnStatement@@ConditionalExpression:ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @TO@ ConditionalExpression:result == null || ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @AT@ 4940 @LENGTH@ 122
---UPD ConditionalExpression@@ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @TO@ result == null || ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @AT@ 4947 @LENGTH@ 114
------INS InfixExpression@@result == null || ClassUtils.isAssignable(returnType,result.getClass()) @TO@ ConditionalExpression@@ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @AT@ 4947 @LENGTH@ 72
---------MOV MethodInvocation@@ClassUtils.isAssignable(returnType,result.getClass()) @TO@ InfixExpression@@result == null || ClassUtils.isAssignable(returnType,result.getClass()) @AT@ 4947 @LENGTH@ 54
---------INS InfixExpression@@result == null @TO@ InfixExpression@@result == null || ClassUtils.isAssignable(returnType,result.getClass()) @AT@ 4947 @LENGTH@ 14
------------INS SimpleName@@result @TO@ InfixExpression@@result == null @AT@ 4947 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@result == null @AT@ 4953 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@result == null @AT@ 4957 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@result == null || ClassUtils.isAssignable(returnType,result.getClass()) @AT@ 4961 @LENGTH@ 2
------DEL SimpleName@@result @AT@ 5004 @LENGTH@ 6
------INS SimpleName@@result @TO@ ConditionalExpression@@ClassUtils.isAssignable(returnType,result.getClass()) ? result : factory.createProjection(returnType,result) @AT@ 5022 @LENGTH@ 6


MOV FieldDeclaration@@private, HttpServer, [localServer] @TO@ TypeDeclaration@@[public]HttpProducerConnectioCloseTest, BaseHttpTest @AT@ 1547 @LENGTH@ 31


UPD Block@@ThenBody:{  String value=defaultValue;  if (value != null) {    options.put(key,value);    defaultValueAdded=true;  }} @TO@ ThenBody:{  String value=null;  boolean last=i == word.size() - 1;  if (last) {    value=it.hasNext() ? it.next() : null;    if (value != null) {      options.put(key,value);    } else {      value=defaultValue;    }  }  if (value != null) {    options.put(key,value);    defaultValueAdded=true;  }} @AT@ 41529 @LENGTH@ 230
---UPD VariableDeclarationStatement@@String value=defaultValue; @TO@ String value=null; @AT@ 41551 @LENGTH@ 28
------UPD VariableDeclarationFragment@@value=defaultValue @TO@ value=null @AT@ 41558 @LENGTH@ 20
---------DEL SimpleName@@defaultValue @AT@ 41566 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@value=defaultValue @AT@ 41566 @LENGTH@ 4
---INS VariableDeclarationStatement@@boolean last=i == word.size() - 1; @TO@ Block@@ThenBody:{  String value=defaultValue;  if (value != null) {    options.put(key,value);    defaultValueAdded=true;  }} @AT@ 41593 @LENGTH@ 36
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean last=i == word.size() - 1; @AT@ 41593 @LENGTH@ 7
------INS VariableDeclarationFragment@@last=i == word.size() - 1 @TO@ VariableDeclarationStatement@@boolean last=i == word.size() - 1; @AT@ 41601 @LENGTH@ 27
---------INS SimpleName@@last @TO@ VariableDeclarationFragment@@last=i == word.size() - 1 @AT@ 41601 @LENGTH@ 4
---------INS InfixExpression@@i == word.size() - 1 @TO@ VariableDeclarationFragment@@last=i == word.size() - 1 @AT@ 41608 @LENGTH@ 20
------------INS SimpleName@@i @TO@ InfixExpression@@i == word.size() - 1 @AT@ 41608 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@i == word.size() - 1 @AT@ 41609 @LENGTH@ 2
------------INS InfixExpression@@word.size() - 1 @TO@ InfixExpression@@i == word.size() - 1 @AT@ 41613 @LENGTH@ 15
---------------INS MethodInvocation@@word.size() @TO@ InfixExpression@@word.size() - 1 @AT@ 41613 @LENGTH@ 11
------------------INS SimpleName@@Name:word @TO@ MethodInvocation@@word.size() @AT@ 41613 @LENGTH@ 4
------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@word.size() @AT@ 41618 @LENGTH@ 6
---------------INS Operator@@- @TO@ InfixExpression@@word.size() - 1 @AT@ 41624 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ InfixExpression@@word.size() - 1 @AT@ 41627 @LENGTH@ 1
---INS IfStatement@@if (last) {  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @TO@ Block@@ThenBody:{  String value=defaultValue;  if (value != null) {    options.put(key,value);    defaultValueAdded=true;  }} @AT@ 41650 @LENGTH@ 395
------INS SimpleName@@last @TO@ IfStatement@@if (last) {  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @AT@ 41654 @LENGTH@ 4
------INS Block@@ThenBody:{  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @TO@ IfStatement@@if (last) {  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @AT@ 41660 @LENGTH@ 385
---------INS ExpressionStatement@@Assignment:value=it.hasNext() ? it.next() : null @TO@ Block@@ThenBody:{  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @AT@ 41776 @LENGTH@ 40
------------INS Assignment@@value=it.hasNext() ? it.next() : null @TO@ ExpressionStatement@@Assignment:value=it.hasNext() ? it.next() : null @AT@ 41776 @LENGTH@ 39
---------------INS SimpleName@@value @TO@ Assignment@@value=it.hasNext() ? it.next() : null @AT@ 41776 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@value=it.hasNext() ? it.next() : null @AT@ 41781 @LENGTH@ 1
---------------INS ConditionalExpression@@it.hasNext() ? it.next() : null @TO@ Assignment@@value=it.hasNext() ? it.next() : null @AT@ 41784 @LENGTH@ 31
------------------INS MethodInvocation@@it.hasNext() @TO@ ConditionalExpression@@it.hasNext() ? it.next() : null @AT@ 41784 @LENGTH@ 12
---------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.hasNext() @AT@ 41784 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:hasNext:[] @TO@ MethodInvocation@@it.hasNext() @AT@ 41787 @LENGTH@ 9
------------------INS MethodInvocation@@it.next() @TO@ ConditionalExpression@@it.hasNext() ? it.next() : null @AT@ 41799 @LENGTH@ 9
---------------------INS SimpleName@@Name:it @TO@ MethodInvocation@@it.next() @AT@ 41799 @LENGTH@ 2
---------------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@it.next() @AT@ 41802 @LENGTH@ 6
------------------INS NullLiteral@@null @TO@ ConditionalExpression@@it.hasNext() ? it.next() : null @AT@ 41811 @LENGTH@ 4
---------INS IfStatement@@if (value != null) {  options.put(key,value);} else {  value=defaultValue;} @TO@ Block@@ThenBody:{  value=it.hasNext() ? it.next() : null;  if (value != null) {    options.put(key,value);  } else {    value=defaultValue;  }} @AT@ 41841 @LENGTH@ 182
------------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  options.put(key,value);} else {  value=defaultValue;} @AT@ 41845 @LENGTH@ 13
---------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 41845 @LENGTH@ 5
---------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 41850 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 41854 @LENGTH@ 4
------------INS Block@@ThenBody:{  options.put(key,value);} @TO@ IfStatement@@if (value != null) {  options.put(key,value);} else {  value=defaultValue;} @AT@ 41860 @LENGTH@ 80
---------------INS ExpressionStatement@@MethodInvocation:options.put(key,value) @TO@ Block@@ThenBody:{  options.put(key,value);} @AT@ 41890 @LENGTH@ 24
------------------INS MethodInvocation@@options.put(key,value) @TO@ ExpressionStatement@@MethodInvocation:options.put(key,value) @AT@ 41890 @LENGTH@ 23
---------------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.put(key,value) @AT@ 41890 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:put:[key, value] @TO@ MethodInvocation@@options.put(key,value) @AT@ 41898 @LENGTH@ 15
------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 41902 @LENGTH@ 3
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 41907 @LENGTH@ 5
------------INS Block@@ElseBody:{  value=defaultValue;} @TO@ IfStatement@@if (value != null) {  options.put(key,value);} else {  value=defaultValue;} @AT@ 41946 @LENGTH@ 77
---------------INS ExpressionStatement@@Assignment:value=defaultValue @TO@ Block@@ElseBody:{  value=defaultValue;} @AT@ 41976 @LENGTH@ 21
------------------INS Assignment@@value=defaultValue @TO@ ExpressionStatement@@Assignment:value=defaultValue @AT@ 41976 @LENGTH@ 20
---------------------INS SimpleName@@value @TO@ Assignment@@value=defaultValue @AT@ 41976 @LENGTH@ 5
---------------------INS Operator@@= @TO@ Assignment@@value=defaultValue @AT@ 41981 @LENGTH@ 1
---------------------INS SimpleName@@defaultValue @TO@ Assignment@@value=defaultValue @AT@ 41984 @LENGTH@ 12


UPD VariableDeclarationStatement@@WebSocket webSocket=websocketComponentServlet.doWebSocketConnect(request,PROTOCOL); @TO@ DefaultWebsocket webSocket=websocketComponentServlet.doWebSocketConnect(request,PROTOCOL); @AT@ 2765 @LENGTH@ 86
---UPD SimpleType@@WebSocket @TO@ DefaultWebsocket @AT@ 2765 @LENGTH@ 9


UPD TryStatement@@try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }  Enumeration<String> names=(Enumeration<String>)props.propertyNames();  while (names.hasMoreElements()) {    String name=names.nextElement();    String value=props.getProperty(name);    if (System.getProperty(name) == null) {      System.setProperty(name,value);    }  }}  @TO@ try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }  Set<String> names=props.stringPropertyNames();  for (  String name : names) {    String value=props.getProperty(name);    if (System.getProperty(name) == null) {      System.setProperty(name,value);    }  }}  @AT@ 3332 @LENGTH@ 886
---UPD VariableDeclarationStatement@@Enumeration<String> names=(Enumeration<String>)props.propertyNames(); @TO@ Set<String> names=props.stringPropertyNames(); @AT@ 3746 @LENGTH@ 72
------UPD ParameterizedType@@Enumeration<String> @TO@ Set<String> @AT@ 3746 @LENGTH@ 19
---------UPD SimpleType@@Enumeration @TO@ Set @AT@ 3746 @LENGTH@ 11
------UPD VariableDeclarationFragment@@names=(Enumeration<String>)props.propertyNames() @TO@ names=props.stringPropertyNames() @AT@ 3766 @LENGTH@ 51
---------DEL CastExpression@@(Enumeration<String>)props.propertyNames() @AT@ 3774 @LENGTH@ 43
------------DEL ParameterizedType@@Enumeration<String> @AT@ 3775 @LENGTH@ 19
---------------DEL SimpleType@@Enumeration @AT@ 3775 @LENGTH@ 11
---------------DEL SimpleType@@String @AT@ 3787 @LENGTH@ 6
------------DEL MethodInvocation@@props.propertyNames() @AT@ 3796 @LENGTH@ 21
---------INS MethodInvocation@@props.stringPropertyNames() @TO@ VariableDeclarationFragment@@names=(Enumeration<String>)props.propertyNames() @AT@ 3788 @LENGTH@ 27
------------MOV SimpleName@@Name:props @TO@ MethodInvocation@@props.stringPropertyNames() @AT@ 3796 @LENGTH@ 5
------------MOV SimpleName@@MethodName:propertyNames:[] @TO@ MethodInvocation@@props.stringPropertyNames() @AT@ 3802 @LENGTH@ 15
---INS EnhancedForStatement@@for (String name : names) {  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @TO@ TryStatement@@try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }  Enumeration<String> names=(Enumeration<String>)props.propertyNames();  while (names.hasMoreElements()) {    String name=names.nextElement();    String value=props.getProperty(name);    if (System.getProperty(name) == null) {      System.setProperty(name,value);    }  }}  @AT@ 3841 @LENGTH@ 285
------INS SingleVariableDeclaration@@String name @TO@ EnhancedForStatement@@for (String name : names) {  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 3847 @LENGTH@ 11
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 3847 @LENGTH@ 6
---------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 3854 @LENGTH@ 4
------INS SimpleName@@names @TO@ EnhancedForStatement@@for (String name : names) {  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 3860 @LENGTH@ 5
------MOV VariableDeclarationStatement@@String value=props.getProperty(name); @TO@ EnhancedForStatement@@for (String name : names) {  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 3968 @LENGTH@ 39
------MOV IfStatement@@if (System.getProperty(name) == null) {  System.setProperty(name,value);} @TO@ EnhancedForStatement@@for (String name : names) {  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 4036 @LENGTH@ 134
---DEL WhileStatement@@while (names.hasMoreElements()) {  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 3843 @LENGTH@ 353
------DEL MethodInvocation@@names.hasMoreElements() @AT@ 3850 @LENGTH@ 23
---------DEL SimpleName@@Name:names @AT@ 3850 @LENGTH@ 5
---------DEL SimpleName@@MethodName:hasMoreElements:[] @AT@ 3856 @LENGTH@ 17
------DEL Block@@WhileBody:{  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 3875 @LENGTH@ 321
---------DEL VariableDeclarationStatement@@String name=names.nextElement(); @AT@ 3905 @LENGTH@ 34
------------DEL SimpleType@@String @AT@ 3905 @LENGTH@ 6
------------DEL VariableDeclarationFragment@@name=names.nextElement() @AT@ 3912 @LENGTH@ 26
---------------DEL SimpleName@@name @AT@ 3912 @LENGTH@ 4
---------------DEL MethodInvocation@@names.nextElement() @AT@ 3919 @LENGTH@ 19
------------------DEL SimpleName@@Name:names @AT@ 3919 @LENGTH@ 5
------------------DEL SimpleName@@MethodName:nextElement:[] @AT@ 3925 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:Task, JavaSpaceEndpoint endpoint, Processor processor, JavaSpace javaSpace, TransactionHelper transactionHelper, long transactionTimeout, int verb, String templateId, Exception,  @TO@ voidMethodName:Task, JavaSpaceEndpoint endpoint, Processor processor, JavaSpace javaSpace, TransactionHelper transactionHelper, long transactionTimeout, int verb, String templateId, Exception,  @AT@ 4466 @LENGTH@ 725
---DEL Modifier@@public @AT@ 4466 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:Thread.sleep(2000) @AT@ 1563 @LENGTH@ 19
---DEL MethodInvocation@@Thread.sleep(2000) @AT@ 1563 @LENGTH@ 18
------DEL SimpleName@@Name:Thread @AT@ 1563 @LENGTH@ 6
------DEL SimpleName@@MethodName:sleep:[2000] @AT@ 1570 @LENGTH@ 11
---------DEL NumberLiteral@@2000 @AT@ 1576 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("eb753fb0c370582b4ee01b30f304b9fc",pe.encodePassword("password","salt")) @TO@ MethodInvocation:assertThat(pe.encodePassword("password","salt")).isEqualTo("eb753fb0c370582b4ee01b30f304b9fc") @AT@ 2604 @LENGTH@ 92
---UPD MethodInvocation@@assertEquals("eb753fb0c370582b4ee01b30f304b9fc",pe.encodePassword("password","salt")) @TO@ MethodName:assertThat:[pe.encodePassword("password","salt")] @AT@ 2604 @LENGTH@ 91
---INS MethodInvocation@@assertThat(pe.encodePassword("password","salt")).isEqualTo("eb753fb0c370582b4ee01b30f304b9fc") @TO@ ExpressionStatement@@MethodInvocation:assertEquals("eb753fb0c370582b4ee01b30f304b9fc",pe.encodePassword("password","salt")) @AT@ 2604 @LENGTH@ 95
------MOV MethodInvocation@@assertEquals("eb753fb0c370582b4ee01b30f304b9fc",pe.encodePassword("password","salt")) @TO@ MethodInvocation@@assertThat(pe.encodePassword("password","salt")).isEqualTo("eb753fb0c370582b4ee01b30f304b9fc") @AT@ 2604 @LENGTH@ 91
---------MOV MethodInvocation@@pe.encodePassword("password","salt") @TO@ MethodInvocation@@assertEquals("eb753fb0c370582b4ee01b30f304b9fc",pe.encodePassword("password","salt")) @AT@ 2657 @LENGTH@ 37
------INS SimpleName@@MethodName:isEqualTo:["eb753fb0c370582b4ee01b30f304b9fc"] @TO@ MethodInvocation@@assertThat(pe.encodePassword("password","salt")).isEqualTo("eb753fb0c370582b4ee01b30f304b9fc") @AT@ 2654 @LENGTH@ 45
---------INS StringLiteral@@"eb753fb0c370582b4ee01b30f304b9fc" @TO@ SimpleName@@MethodName:isEqualTo:["eb753fb0c370582b4ee01b30f304b9fc"] @AT@ 2664 @LENGTH@ 34


UPD IfStatement@@if (types.length == 0) {  typeInfos.add(new TypeInfo(null,null));  return typeInfos;} @TO@ if (types.length == 0) {  return typeInfos;} @AT@ 4089 @LENGTH@ 117
---UPD Block@@ThenBody:{  typeInfos.add(new TypeInfo(null,null));  return typeInfos;} @TO@ ThenBody:{  return typeInfos;} @AT@ 4112 @LENGTH@ 94
------DEL ExpressionStatement@@MethodInvocation:typeInfos.add(new TypeInfo(null,null)) @AT@ 4126 @LENGTH@ 40
---------DEL MethodInvocation@@typeInfos.add(new TypeInfo(null,null)) @AT@ 4126 @LENGTH@ 39
------------DEL SimpleName@@Name:typeInfos @AT@ 4126 @LENGTH@ 9
------------DEL SimpleName@@MethodName:add:[new TypeInfo(null,null)] @AT@ 4136 @LENGTH@ 29
---------------DEL ClassInstanceCreation@@TypeInfo[null, null] @AT@ 4140 @LENGTH@ 24
------------------DEL New@@new @AT@ 4140 @LENGTH@ 3
------------------DEL SimpleType@@TypeInfo @AT@ 4144 @LENGTH@ 8
------------------DEL NullLiteral@@null @AT@ 4153 @LENGTH@ 4
------------------DEL NullLiteral@@null @AT@ 4159 @LENGTH@ 4


UPD VariableDeclarationStatement@@OAuth2Exception oauthException=new UnauthorizedUserException(DETAILS); @TO@ OAuth2Exception oauthException=new UnauthorizedClientException(DETAILS); @AT@ 4012 @LENGTH@ 72
---UPD VariableDeclarationFragment@@oauthException=new UnauthorizedUserException(DETAILS) @TO@ oauthException=new UnauthorizedClientException(DETAILS) @AT@ 4028 @LENGTH@ 55
------UPD ClassInstanceCreation@@UnauthorizedUserException[DETAILS] @TO@ UnauthorizedClientException[DETAILS] @AT@ 4045 @LENGTH@ 38
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 4049 @LENGTH@ 25


UPD MethodDeclaration@@public, Set<V>, MethodName:rangeByLex, RedisZSetCommands.Range range, RedisZSetCommands.Limit limit,  @TO@ public, Set<V>, MethodName:rangeByLex, Range range, Limit limit,  @AT@ 3094 @LENGTH@ 140
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 3119 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 3119 @LENGTH@ 23
---UPD SingleVariableDeclaration@@RedisZSetCommands.Limit limit @TO@ Limit limit @AT@ 3150 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Limit @TO@ Limit @AT@ 3150 @LENGTH@ 23


UPD IfStatement@@if (!disableOnCommitted) {  onResponseCommitted();  disableOnResponseCommitted();} else if (logger.isDebugEnabled()) {  logger.debug("Skip invoking on");} @TO@ if (!disableOnCommitted) {  onResponseCommitted();  disableOnResponseCommitted();} @AT@ 6306 @LENGTH@ 163
---DEL Block@@ElseBody:if (logger.isDebugEnabled()) {  logger.debug("Skip invoking on");} @AT@ 6400 @LENGTH@ 69
------DEL IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Skip invoking on");} @AT@ 6400 @LENGTH@ 69
---------DEL MethodInvocation@@logger.isDebugEnabled() @AT@ 6403 @LENGTH@ 23
------------DEL SimpleName@@Name:logger @AT@ 6403 @LENGTH@ 6
------------DEL SimpleName@@MethodName:isDebugEnabled:[] @AT@ 6410 @LENGTH@ 16
---------DEL Block@@ThenBody:{  logger.debug("Skip invoking on");} @AT@ 6427 @LENGTH@ 42
------------DEL ExpressionStatement@@MethodInvocation:logger.debug("Skip invoking on") @AT@ 6432 @LENGTH@ 33
---------------DEL MethodInvocation@@logger.debug("Skip invoking on") @AT@ 6432 @LENGTH@ 32
------------------DEL SimpleName@@Name:logger @AT@ 6432 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:debug:["Skip invoking on"] @AT@ 6439 @LENGTH@ 25
---------------------DEL StringLiteral@@"Skip invoking on" @AT@ 6445 @LENGTH@ 18


INS MethodDeclaration@@public, AggregationStrategy, MethodName:getDelegate,  @TO@ TypeDeclaration@@[public, final]ShareUnitOfWorkAggregationStrategy, [AggregationStrategy] @AT@ 1621 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, AggregationStrategy, MethodName:getDelegate,  @AT@ 1621 @LENGTH@ 6
---INS SimpleType@@AggregationStrategy @TO@ MethodDeclaration@@public, AggregationStrategy, MethodName:getDelegate,  @AT@ 1628 @LENGTH@ 19
---INS SimpleName@@MethodName:getDelegate @TO@ MethodDeclaration@@public, AggregationStrategy, MethodName:getDelegate,  @AT@ 1648 @LENGTH@ 11
---INS ReturnStatement@@SimpleName:strategy @TO@ MethodDeclaration@@public, AggregationStrategy, MethodName:getDelegate,  @AT@ 1672 @LENGTH@ 16
------INS SimpleName@@strategy @TO@ ReturnStatement@@SimpleName:strategy @AT@ 1679 @LENGTH@ 8


UPD EnumDeclaration@@[public]Direction,  @TO@ Direction,  @AT@ 1106 @LENGTH@ 45
---DEL Modifier@@public @AT@ 1106 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @TO@ voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @AT@ 4139 @LENGTH@ 177
---DEL Modifier@@public @AT@ 4139 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Extending message visibilty (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint.") @TO@ ClassInstanceCreation:new IllegalArgumentException("Extending message visibility (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint.") @AT@ 2162 @LENGTH@ 146
---UPD ClassInstanceCreation@@IllegalArgumentException["Extending message visibilty (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint."] @TO@ IllegalArgumentException["Extending message visibility (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint."] @AT@ 2168 @LENGTH@ 139
------UPD StringLiteral@@"Extending message visibilty (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint." @TO@ "Extending message visibility (extendMessageVisibility) requires visibilityTimeout to be set on the Endpoint." @AT@ 2197 @LENGTH@ 109


UPD ExpressionStatement@@MethodInvocation:http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @TO@ MethodInvocation:http.authenticationProvider(new AnonymousAuthenticationProvider("default")).exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @AT@ 4675 @LENGTH@ 297
---UPD MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @TO@ http.authenticationProvider(new AnonymousAuthenticationProvider("default")).exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @AT@ 4675 @LENGTH@ 296
------INS MethodInvocation@@MethodName:authenticationProvider:[new AnonymousAuthenticationProvider("default")] @TO@ MethodInvocation@@http.exceptionHandling().accessDeniedHandler(resources.getAccessDeniedHandler()).and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and().csrf().disable() @AT@ 4370 @LENGTH@ 75
---------INS ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @TO@ MethodInvocation@@MethodName:authenticationProvider:[new AnonymousAuthenticationProvider("default")] @AT@ 4398 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4398 @LENGTH@ 3
------------INS SimpleType@@AnonymousAuthenticationProvider @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4402 @LENGTH@ 31
------------INS StringLiteral@@"default" @TO@ ClassInstanceCreation@@AnonymousAuthenticationProvider["default"] @AT@ 4434 @LENGTH@ 9


UPD TryStatement@@try (final ModelControllerClient client=createClient()){  if (addUser != null && addUser.hasUsers()) {    log.info("Adding users: " + addUser);    addUser.addUsers(commandBuilder.getWildFlyHome(),commandBuilder.getJavaHome());  }  server=Server.create(commandBuilder,env,client);  log.info("Server is starting up. Press CTRL + C to stop the server.");  server.start(startupTimeout);  server.checkServerState();  if (server.isRunning()) {    log.info(String.format("Deploying application '%s'%n",deploymentFile.getName()));    final Deployment deployment=new StandaloneDeploymentBuilder(client).setContent(deploymentFile).setName(name).setRuntimeName(runtimeName).setType(getType()).build();switch (executeDeployment(client,deployment,jbossHome)) {case REQUIRES_RESTART:{        client.execute(ServerOperations.createOperation(ServerOperations.RELOAD));        break;      }case SUCCESS:    break;}} else {throw new DeploymentFailureException("Cannot deploy to a server that is not running.");}while (server.isRunning()) {TimeUnit.SECONDS.sleep(1L);}} catch (Exception e) {throw new MojoExecutionException("The server failed to start",e);} finally {if (server != null) server.stop();} @TO@ try (final ModelControllerClient client=createClient()){  if (addUser != null && addUser.hasUsers()) {    log.info("Adding users: " + addUser);    addUser.addUsers(commandBuilder.getWildFlyHome(),commandBuilder.getJavaHome());  }  server=Server.create(commandBuilder,env,client);  log.info("Server is starting up. Press CTRL + C to stop the server.");  server.start(startupTimeout);  if (server.isRunning()) {    log.info(String.format("Deploying application '%s'%n",deploymentFile.getName()));    final Deployment deployment=new StandaloneDeploymentBuilder(client).setContent(deploymentFile).setName(name).setRuntimeName(runtimeName).setType(getType()).build();switch (executeDeployment(client,deployment,jbossHome)) {case REQUIRES_RESTART:{        client.execute(ServerOperations.createOperation(ServerOperations.RELOAD));        break;      }case SUCCESS:    break;}} else {throw new DeploymentFailureException("Cannot deploy to a server that is not running.");}while (server.isRunning()) {TimeUnit.SECONDS.sleep(1L);}} catch (Exception e) {throw new MojoExecutionException("The server failed to start",e);} finally {if (server != null) server.stop();} @AT@ 8445 @LENGTH@ 1840
---DEL ExpressionStatement@@MethodInvocation:server.checkServerState() @AT@ 9032 @LENGTH@ 26
------DEL MethodInvocation@@server.checkServerState() @AT@ 9032 @LENGTH@ 25
---------DEL SimpleName@@Name:server @AT@ 9032 @LENGTH@ 6
---------DEL SimpleName@@MethodName:checkServerState:[] @AT@ 9039 @LENGTH@ 18


UPD MethodDeclaration@@public, voidMethodName:ConnectorRef, Server server, ServerConnector connector, WebsocketComponentServlet servlet, MemoryWebsocketStore memoryStore,  @TO@ voidMethodName:ConnectorRef, Server server, ServerConnector connector, WebsocketComponentServlet servlet, MemoryWebsocketStore memoryStore,  @AT@ 3818 @LENGTH@ 321
---DEL Modifier@@public @AT@ 3818 @LENGTH@ 6


DEL MethodDeclaration@@protected, void, MethodName:doStop, Exception,  @AT@ 4759 @LENGTH@ 225
---DEL Modifier@@protected @AT@ 4759 @LENGTH@ 9
---DEL PrimitiveType@@void @AT@ 4769 @LENGTH@ 4
---DEL SimpleName@@MethodName:doStop @AT@ 4774 @LENGTH@ 6
---DEL SimpleType@@Exception @AT@ 4790 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.doStop() @AT@ 4810 @LENGTH@ 15
------DEL SuperMethodInvocation@@super.doStop() @AT@ 4810 @LENGTH@ 14
---------DEL SimpleName@@MethodName:doStop:[] @AT@ 4816 @LENGTH@ 6
---DEL IfStatement@@if (log.isTraceEnabled()) {  log.trace(String.format("Shutting down zookeeper producer of '%s'",configuration.getPath()));} @AT@ 4834 @LENGTH@ 144
------DEL MethodInvocation@@log.isTraceEnabled() @AT@ 4838 @LENGTH@ 20
---------DEL SimpleName@@Name:log @AT@ 4838 @LENGTH@ 3
---------DEL SimpleName@@MethodName:isTraceEnabled:[] @AT@ 4842 @LENGTH@ 16
------DEL Block@@ThenBody:{  log.trace(String.format("Shutting down zookeeper producer of '%s'",configuration.getPath()));} @AT@ 4860 @LENGTH@ 118
---------DEL ExpressionStatement@@MethodInvocation:log.trace(String.format("Shutting down zookeeper producer of '%s'",configuration.getPath())) @AT@ 4874 @LENGTH@ 94
------------DEL MethodInvocation@@log.trace(String.format("Shutting down zookeeper producer of '%s'",configuration.getPath())) @AT@ 4874 @LENGTH@ 93
---------------DEL SimpleName@@Name:log @AT@ 4874 @LENGTH@ 3
---------------DEL SimpleName@@MethodName:trace:[String.format("Shutting down zookeeper producer of '%s'",configuration.getPath())] @AT@ 4878 @LENGTH@ 89
------------------DEL MethodInvocation@@String.format("Shutting down zookeeper producer of '%s'",configuration.getPath()) @AT@ 4884 @LENGTH@ 82
---------------------DEL SimpleName@@Name:String @AT@ 4884 @LENGTH@ 6
---------------------DEL SimpleName@@MethodName:format:["Shutting down zookeeper producer of '%s'", configuration.getPath()] @AT@ 4891 @LENGTH@ 75
------------------------DEL StringLiteral@@"Shutting down zookeeper producer of '%s'" @AT@ 4898 @LENGTH@ 42
------------------------DEL MethodInvocation@@configuration.getPath() @AT@ 4942 @LENGTH@ 23
---------------------------DEL SimpleName@@Name:configuration @AT@ 4942 @LENGTH@ 13
---------------------------DEL SimpleName@@MethodName:getPath:[] @AT@ 4956 @LENGTH@ 9


UPD TypeDeclaration@@[public]InsecureChannelProcessorTests, TestCase @TO@ [public]InsecureChannelProcessorTests,  @AT@ 1184 @LENGTH@ 3780
---DEL SimpleType@@TestCase @AT@ 1235 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint,  @TO@ voidMethodName:MyProducer, Endpoint endpoint,  @AT@ 6143 @LENGTH@ 77
---DEL Modifier@@public @AT@ 6143 @LENGTH@ 6


UPD MethodDeclaration@@private, static, String, MethodName:createTypeCollectionId, Collection<? extends Type> types,  @TO@ private, static, String, MethodName:createTypeCollectionId, Collection<Type> types,  @AT@ 5595 @LENGTH@ 266
---UPD SingleVariableDeclaration@@Collection<? extends Type> types @TO@ Collection<Type> types @AT@ 5640 @LENGTH@ 32
------UPD ParameterizedType@@Collection<? extends Type> @TO@ Collection<Type> @AT@ 5640 @LENGTH@ 26
---------DEL WildcardType@@? @AT@ 5651 @LENGTH@ 14
---------INS SimpleType@@Type @TO@ ParameterizedType@@Collection<? extends Type> @AT@ 5651 @LENGTH@ 4


INS FieldDeclaration@@int[], [arrayOfPrimitives] @TO@ TypeDeclaration@@[public, static]WithArrays,  @AT@ 3602 @LENGTH@ 24
---INS ArrayType@@int[] @TO@ FieldDeclaration@@int[], [arrayOfPrimitives] @AT@ 3602 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ ArrayType@@int[] @AT@ 3602 @LENGTH@ 3
---INS VariableDeclarationFragment@@arrayOfPrimitives @TO@ FieldDeclaration@@int[], [arrayOfPrimitives] @AT@ 3608 @LENGTH@ 17
------INS SimpleName@@arrayOfPrimitives @TO@ VariableDeclarationFragment@@arrayOfPrimitives @AT@ 3608 @LENGTH@ 17


UPD MethodDeclaration@@private, voidMethodName:NotifyForOperationsEnum, String value,  @TO@ voidMethodName:NotifyForOperationsEnum, String value,  @AT@ 1245 @LENGTH@ 81
---DEL Modifier@@private @AT@ 1245 @LENGTH@ 7


UPD VariableDeclarationStatement@@String[] lines=written.split("\n"); @TO@ String[] lines=written.split("(\\r)?(\\n)"); @AT@ 3115 @LENGTH@ 39
---UPD VariableDeclarationFragment@@lines=written.split("\n") @TO@ lines=written.split("(\\r)?(\\n)") @AT@ 3124 @LENGTH@ 29
------UPD MethodInvocation@@written.split("\n") @TO@ written.split("(\\r)?(\\n)") @AT@ 3132 @LENGTH@ 21
---------UPD SimpleName@@MethodName:split:["\n"] @TO@ MethodName:split:["(\\r)?(\\n)"] @AT@ 3140 @LENGTH@ 13
------------UPD StringLiteral@@"\n" @TO@ "(\\r)?(\\n)" @AT@ 3147 @LENGTH@ 4


UPD TypeDeclaration@@[public, static]Output,  @TO@ Output,  @AT@ 3862 @LENGTH@ 1688
---DEL Modifier@@public @AT@ 3862 @LENGTH@ 6
---DEL Modifier@@static @AT@ 3869 @LENGTH@ 6


UPD VariableDeclarationStatement@@final List<ModuleDependencyType> modules=dependencies.getAllModule(); @TO@ final List<ModuleDependencyType<DependenciesType<?>>> modules=dependencies.getAllModule(); @AT@ 2046 @LENGTH@ 71
---UPD ParameterizedType@@List<ModuleDependencyType> @TO@ List<ModuleDependencyType<DependenciesType<?>>> @AT@ 2052 @LENGTH@ 26
------INS ParameterizedType@@ModuleDependencyType<DependenciesType<?>> @TO@ ParameterizedType@@List<ModuleDependencyType> @AT@ 2092 @LENGTH@ 41
---------MOV SimpleType@@ModuleDependencyType @TO@ ParameterizedType@@ModuleDependencyType<DependenciesType<?>> @AT@ 2057 @LENGTH@ 20
---------INS ParameterizedType@@DependenciesType<?> @TO@ ParameterizedType@@ModuleDependencyType<DependenciesType<?>> @AT@ 2113 @LENGTH@ 19
------------INS SimpleType@@DependenciesType @TO@ ParameterizedType@@DependenciesType<?> @AT@ 2113 @LENGTH@ 16
------------INS WildcardType@@? @TO@ ParameterizedType@@DependenciesType<?> @AT@ 2130 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:consumer.start() @TO@ MethodInvocation:ServiceHelper.startService(consumer) @AT@ 4197 @LENGTH@ 17
---UPD MethodInvocation@@consumer.start() @TO@ ServiceHelper.startService(consumer) @AT@ 4197 @LENGTH@ 16
------UPD SimpleName@@Name:consumer @TO@ Name:ServiceHelper @AT@ 4197 @LENGTH@ 8
------UPD SimpleName@@MethodName:start:[] @TO@ MethodName:startService:[consumer] @AT@ 4206 @LENGTH@ 7
---------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:start:[] @AT@ 4299 @LENGTH@ 8


MOV FieldDeclaration@@public, static, final, int, [CHIMERA_CRYPTO_STREAM_BUFFER_SIZE_DEFAULT=8192] @TO@ TypeDeclaration@@[public]ConfigurationKeys,  @AT@ 3050 @LENGTH@ 73


UPD MethodDeclaration@@private, Object, MethodName:deserialize, ByteArrayInputStream inputStream, Deserializer<Object> deserializer, IOException,  @TO@ private, Object, MethodName:deserialize, ByteArrayInputStream inputStream, IOException,  @AT@ 5705 @LENGTH@ 667
---DEL SingleVariableDeclaration@@Deserializer<Object> deserializer @AT@ 5766 @LENGTH@ 33
------DEL ParameterizedType@@Deserializer<Object> @AT@ 5766 @LENGTH@ 20
---------DEL SimpleType@@Deserializer @AT@ 5766 @LENGTH@ 12
---------DEL SimpleType@@Object @AT@ 5779 @LENGTH@ 6
------DEL SimpleName@@deserializer @AT@ 5787 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:MockConnectionSettings, Service service, Socket socket,  @TO@ voidMethodName:MockConnectionSettings, Service service, Socket socket,  @AT@ 1865 @LENGTH@ 228
---DEL Modifier@@public @AT@ 1865 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3643 @LENGTH@ 37
---INS MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @AT@ 3643 @LENGTH@ 36
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3643 @LENGTH@ 18
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3662 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 3676 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertEquals(this.queue.getName(),this.listener.event.getQueues()[0]) @TO@ MethodInvocation:assertEquals(this.queue.getName(),this.listener.event.getQueueNames()[0]) @AT@ 3067 @LENGTH@ 71
---UPD MethodInvocation@@assertEquals(this.queue.getName(),this.listener.event.getQueues()[0]) @TO@ assertEquals(this.queue.getName(),this.listener.event.getQueueNames()[0]) @AT@ 3067 @LENGTH@ 70
------UPD SimpleName@@MethodName:assertEquals:[this.queue.getName(), this.listener.event.getQueues()[0]] @TO@ MethodName:assertEquals:[this.queue.getName(), this.listener.event.getQueueNames()[0]] @AT@ 3067 @LENGTH@ 70
---------UPD ArrayAccess@@this.listener.event.getQueues()[0] @TO@ this.listener.event.getQueueNames()[0] @AT@ 3102 @LENGTH@ 34
------------UPD MethodInvocation@@this.listener.event.getQueues() @TO@ this.listener.event.getQueueNames() @AT@ 3102 @LENGTH@ 31
---------------UPD SimpleName@@MethodName:getQueues:[] @TO@ MethodName:getQueueNames:[] @AT@ 3122 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertFalse(json.contains("{bar}")) @TO@ MethodDeclaration@@public, void, MethodName:testReaderRead, Exception,  @AT@ 4597 @LENGTH@ 36
---INS MethodInvocation@@assertFalse(json.contains("{bar}")) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(json.contains("{bar}")) @AT@ 4597 @LENGTH@ 35
------INS SimpleName@@MethodName:assertFalse:[json.contains("{bar}")] @TO@ MethodInvocation@@assertFalse(json.contains("{bar}")) @AT@ 4597 @LENGTH@ 35
---------INS MethodInvocation@@json.contains("{bar}") @TO@ SimpleName@@MethodName:assertFalse:[json.contains("{bar}")] @AT@ 4609 @LENGTH@ 22
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("{bar}") @AT@ 4609 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["{bar}"] @TO@ MethodInvocation@@json.contains("{bar}") @AT@ 4614 @LENGTH@ 17
---------------INS StringLiteral@@"{bar}" @TO@ SimpleName@@MethodName:contains:["{bar}"] @AT@ 4623 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @TO@ voidMethodName:TestShiroSecurityTokenInjector, ShiroSecurityToken shiroSecurityToken, byte[] bytes,  @AT@ 5162 @LENGTH@ 148
---DEL Modifier@@public @AT@ 5162 @LENGTH@ 6


UPD Block@@ThenBody:{  CxfPayload<?> payload=(CxfPayload<?>)value;  if (payload.getBodySources().size() == 1) {    if (type.isAssignableFrom(Document.class)) {      Source s=payload.getBodySources().get(0);      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      return type.cast(d);    }    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    TypeConverter tc=registry.lookup(type,Source.class);    if (tc != null) {      XMLStreamReader r=null;      if (payload.getNsMap() != null) {        if (s instanceof StaxSource) {          r=((StaxSource)s).getXMLStreamReader();        } else         if (s instanceof StAXSource) {          r=((StAXSource)s).getXMLStreamReader();        }        if (r != null) {          s=new StAXSource(new DelegatingXMLStreamReader(r,payload.getNsMap()));        }      }      T t=tc.convertTo(type,s);      return t;    }  }  TypeConverter tc=registry.lookup(type,NodeList.class);  if (tc != null) {    Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));    if (result == null) {      return (T)Void.TYPE;    } else {      return (T)result;    }  }  tc=registry.lookup(type,Node.class);  if (tc != null) {    NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);    if (nodeList.getLength() > 0) {      return tc.convertTo(type,nodeList.item(0));    } else {      return (T)Void.TYPE;    }  }} @TO@ ThenBody:{  CxfPayload<?> payload=(CxfPayload<?>)value;  int size=payload.getBodySources().size();  if (size == 1) {    if (type.isAssignableFrom(Document.class)) {      Source s=payload.getBodySources().get(0);      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      return type.cast(d);    }    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    TypeConverter tc=registry.lookup(type,Source.class);    if (tc != null) {      XMLStreamReader r=null;      if (payload.getNsMap() != null) {        if (s instanceof StaxSource) {          r=((StaxSource)s).getXMLStreamReader();        } else         if (s instanceof StAXSource) {          r=((StAXSource)s).getXMLStreamReader();        }        if (r != null) {          s=new StAXSource(new DelegatingXMLStreamReader(r,payload.getNsMap()));        }      }      T t=tc.convertTo(type,s);      return t;    }  }  TypeConverter tc=registry.lookup(type,NodeList.class);  if (tc != null) {    Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));    if (result == null) {      return (T)Void.TYPE;    } else {      return (T)result;    }  }  tc=registry.lookup(type,Node.class);  if (tc != null) {    NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);    if (nodeList.getLength() > 0) {      return tc.convertTo(type,nodeList.item(0));    } else {      return (T)Void.TYPE;    }  } else {    if (size == 0) {      return (T)Void.TYPE;    }  }} @AT@ 7208 @LENGTH@ 2674
---INS VariableDeclarationStatement@@int size=payload.getBodySources().size(); @TO@ Block@@ThenBody:{  CxfPayload<?> payload=(CxfPayload<?>)value;  if (payload.getBodySources().size() == 1) {    if (type.isAssignableFrom(Document.class)) {      Source s=payload.getBodySources().get(0);      Document d;      try {        d=StaxUtils.read(s);      } catch (      XMLStreamException e) {        throw new RuntimeException(e);      }      return type.cast(d);    }    Source s=payload.getBodySources().get(0);    if (type.isInstance(s)) {      return type.cast(s);    }    TypeConverter tc=registry.lookup(type,Source.class);    if (tc != null) {      XMLStreamReader r=null;      if (payload.getNsMap() != null) {        if (s instanceof StaxSource) {          r=((StaxSource)s).getXMLStreamReader();        } else         if (s instanceof StAXSource) {          r=((StAXSource)s).getXMLStreamReader();        }        if (r != null) {          s=new StAXSource(new DelegatingXMLStreamReader(r,payload.getNsMap()));        }      }      T t=tc.convertTo(type,s);      return t;    }  }  TypeConverter tc=registry.lookup(type,NodeList.class);  if (tc != null) {    Object result=tc.convertTo(type,cxfPayloadToNodeList((CxfPayload<?>)value,exchange));    if (result == null) {      return (T)Void.TYPE;    } else {      return (T)result;    }  }  tc=registry.lookup(type,Node.class);  if (tc != null) {    NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);    if (nodeList.getLength() > 0) {      return tc.convertTo(type,nodeList.item(0));    } else {      return (T)Void.TYPE;    }  }} @AT@ 7237 @LENGTH@ 43
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int size=payload.getBodySources().size(); @AT@ 7237 @LENGTH@ 3
------INS VariableDeclarationFragment@@size=payload.getBodySources().size() @TO@ VariableDeclarationStatement@@int size=payload.getBodySources().size(); @AT@ 7241 @LENGTH@ 38
---------INS SimpleName@@size @TO@ VariableDeclarationFragment@@size=payload.getBodySources().size() @AT@ 7241 @LENGTH@ 4
---------INS MethodInvocation@@payload.getBodySources().size() @TO@ VariableDeclarationFragment@@size=payload.getBodySources().size() @AT@ 7248 @LENGTH@ 31
------------INS MethodInvocation@@MethodName:getBodySources:[] @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 7248 @LENGTH@ 24
------------INS SimpleName@@Name:payload @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 7248 @LENGTH@ 7
------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@payload.getBodySources().size() @AT@ 7273 @LENGTH@ 6
---UPD IfStatement@@if (payload.getBodySources().size() == 1) {  if (type.isAssignableFrom(Document.class)) {    Source s=payload.getBodySources().get(0);    Document d;    try {      d=StaxUtils.read(s);    } catch (    XMLStreamException e) {      throw new RuntimeException(e);    }    return type.cast(d);  }  Source s=payload.getBodySources().get(0);  if (type.isInstance(s)) {    return type.cast(s);  }  TypeConverter tc=registry.lookup(type,Source.class);  if (tc != null) {    XMLStreamReader r=null;    if (payload.getNsMap() != null) {      if (s instanceof StaxSource) {        r=((StaxSource)s).getXMLStreamReader();      } else       if (s instanceof StAXSource) {        r=((StAXSource)s).getXMLStreamReader();      }      if (r != null) {        s=new StAXSource(new DelegatingXMLStreamReader(r,payload.getNsMap()));      }    }    T t=tc.convertTo(type,s);    return t;  }} @TO@ if (size == 1) {  if (type.isAssignableFrom(Document.class)) {    Source s=payload.getBodySources().get(0);    Document d;    try {      d=StaxUtils.read(s);    } catch (    XMLStreamException e) {      throw new RuntimeException(e);    }    return type.cast(d);  }  Source s=payload.getBodySources().get(0);  if (type.isInstance(s)) {    return type.cast(s);  }  TypeConverter tc=registry.lookup(type,Source.class);  if (tc != null) {    XMLStreamReader r=null;    if (payload.getNsMap() != null) {      if (s instanceof StaxSource) {        r=((StaxSource)s).getXMLStreamReader();      } else       if (s instanceof StAXSource) {        r=((StAXSource)s).getXMLStreamReader();      }      if (r != null) {        s=new StAXSource(new DelegatingXMLStreamReader(r,payload.getNsMap()));      }    }    T t=tc.convertTo(type,s);    return t;  }} @AT@ 7294 @LENGTH@ 1541
------UPD InfixExpression@@payload.getBodySources().size() == 1 @TO@ size == 1 @AT@ 7298 @LENGTH@ 36
---------INS SimpleName@@size @TO@ InfixExpression@@payload.getBodySources().size() == 1 @AT@ 7297 @LENGTH@ 4
---------DEL MethodInvocation@@payload.getBodySources().size() @AT@ 7298 @LENGTH@ 31
------------DEL MethodInvocation@@MethodName:getBodySources:[] @AT@ 7298 @LENGTH@ 24
------------DEL SimpleName@@Name:payload @AT@ 7298 @LENGTH@ 7
------------DEL SimpleName@@MethodName:size:[] @AT@ 7323 @LENGTH@ 6
---UPD IfStatement@@if (tc != null) {  NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);  if (nodeList.getLength() > 0) {    return tc.convertTo(type,nodeList.item(0));  } else {    return (T)Void.TYPE;  }} @TO@ if (tc != null) {  NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);  if (nodeList.getLength() > 0) {    return tc.convertTo(type,nodeList.item(0));  } else {    return (T)Void.TYPE;  }} else {  if (size == 0) {    return (T)Void.TYPE;  }} @AT@ 9497 @LENGTH@ 375
------INS Block@@ElseBody:{  if (size == 0) {    return (T)Void.TYPE;  }} @TO@ IfStatement@@if (tc != null) {  NodeList nodeList=cxfPayloadToNodeList((CxfPayload<?>)value,exchange);  if (nodeList.getLength() > 0) {    return tc.convertTo(type,nodeList.item(0));  } else {    return (T)Void.TYPE;  }} @AT@ 9816 @LENGTH@ 163
---------INS IfStatement@@if (size == 0) {  return (T)Void.TYPE;} @TO@ Block@@ElseBody:{  if (size == 0) {    return (T)Void.TYPE;  }} @AT@ 9834 @LENGTH@ 131
------------INS InfixExpression@@size == 0 @TO@ IfStatement@@if (size == 0) {  return (T)Void.TYPE;} @AT@ 9838 @LENGTH@ 9
---------------INS SimpleName@@size @TO@ InfixExpression@@size == 0 @AT@ 9838 @LENGTH@ 4
---------------INS Operator@@== @TO@ InfixExpression@@size == 0 @AT@ 9842 @LENGTH@ 2
---------------INS NumberLiteral@@0 @TO@ InfixExpression@@size == 0 @AT@ 9846 @LENGTH@ 1
------------INS Block@@ThenBody:{  return (T)Void.TYPE;} @TO@ IfStatement@@if (size == 0) {  return (T)Void.TYPE;} @AT@ 9849 @LENGTH@ 116
---------------INS ReturnStatement@@CastExpression:(T)Void.TYPE @TO@ Block@@ThenBody:{  return (T)Void.TYPE;} @AT@ 9926 @LENGTH@ 21
------------------INS CastExpression@@(T)Void.TYPE @TO@ ReturnStatement@@CastExpression:(T)Void.TYPE @AT@ 9933 @LENGTH@ 13
---------------------INS SimpleType@@T @TO@ CastExpression@@(T)Void.TYPE @AT@ 9934 @LENGTH@ 1
---------------------INS QualifiedName@@Void.TYPE @TO@ CastExpression@@(T)Void.TYPE @AT@ 9937 @LENGTH@ 9
------------------------INS SimpleName@@Void @TO@ QualifiedName@@Void.TYPE @AT@ 9937 @LENGTH@ 4
------------------------INS SimpleName@@TYPE @TO@ QualifiedName@@Void.TYPE @AT@ 9942 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:HeaderChecker, String phase,  @TO@ voidMethodName:HeaderChecker, String phase,  @AT@ 3259 @LENGTH@ 72
---DEL Modifier@@public @AT@ 3259 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:LimitResultSetConversionStrategy, int rowMax,  @TO@ voidMethodName:LimitResultSetConversionStrategy, int rowMax,  @AT@ 2274 @LENGTH@ 97
---DEL Modifier@@public @AT@ 2274 @LENGTH@ 6


UPD MethodDeclaration@@public, MessageHistoryFactory, MethodName:getMessageHistoryFactory,  @TO@ MessageHistoryFactory, MethodName:getMessageHistoryFactory,  @AT@ 52055 @LENGTH@ 56
---DEL Modifier@@public @AT@ 52055 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange,  @AT@ 3705 @LENGTH@ 43
---INS MethodInvocation@@cause.getHttpContent().content().release() @TO@ ExpressionStatement@@MethodInvocation:cause.getHttpContent().content().release() @AT@ 3705 @LENGTH@ 42
------INS MethodInvocation@@MethodName:content:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 3705 @LENGTH@ 32
------INS MethodInvocation@@MethodName:getHttpContent:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 3705 @LENGTH@ 22
------INS SimpleName@@Name:cause @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 3705 @LENGTH@ 5
------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@cause.getHttpContent().content().release() @AT@ 3738 @LENGTH@ 9


UPD EnumDeclaration@@[private, static]ParserState,  @TO@ [private]ParserState,  @AT@ 7880 @LENGTH@ 76
---DEL Modifier@@static @AT@ 7888 @LENGTH@ 6


UPD IfStatement@@if (data != null) {  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());    exchange.getOut().setHeader(getEndpoint().getOutputHeader(),data);  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);} @TO@ if (data != null) {  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());    exchange.getOut().setHeader(getEndpoint().getOutputHeader(),data);  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);} else {  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0);} @AT@ 4485 @LENGTH@ 818
---INS Block@@ElseBody:{  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0);} @TO@ IfStatement@@if (data != null) {  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());    exchange.getOut().setHeader(getEndpoint().getOutputHeader(),data);  } else {    exchange.getOut().setBody(data);  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,1);} @AT@ 5309 @LENGTH@ 487
------INS IfStatement@@if (getEndpoint().isNoop()) {  exchange.getOut().setBody(exchange.getIn().getBody());} else if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ Block@@ElseBody:{  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0);} @AT@ 5343 @LENGTH@ 331
---------INS MethodInvocation@@getEndpoint().isNoop() @TO@ IfStatement@@if (getEndpoint().isNoop()) {  exchange.getOut().setBody(exchange.getIn().getBody());} else if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5347 @LENGTH@ 22
------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().isNoop() @AT@ 5347 @LENGTH@ 13
------------INS SimpleName@@MethodName:isNoop:[] @TO@ MethodInvocation@@getEndpoint().isNoop() @AT@ 5361 @LENGTH@ 8
---------INS Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ IfStatement@@if (getEndpoint().isNoop()) {  exchange.getOut().setBody(exchange.getIn().getBody());} else if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5371 @LENGTH@ 126
------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5409 @LENGTH@ 54
---------------INS MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5409 @LENGTH@ 53
------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5409 @LENGTH@ 17
------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5409 @LENGTH@ 8
------------------INS SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5427 @LENGTH@ 35
---------------------INS MethodInvocation@@exchange.getIn().getBody() @TO@ SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @AT@ 5435 @LENGTH@ 26
------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5435 @LENGTH@ 16
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5435 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5452 @LENGTH@ 9
---------INS Block@@ElseBody:if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ IfStatement@@if (getEndpoint().isNoop()) {  exchange.getOut().setBody(exchange.getIn().getBody());} else if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5503 @LENGTH@ 171
------------INS IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ Block@@ElseBody:if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5503 @LENGTH@ 171
---------------INS InfixExpression@@getEndpoint().getOutputHeader() != null @TO@ IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5507 @LENGTH@ 39
------------------INS MethodInvocation@@getEndpoint().getOutputHeader() @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5507 @LENGTH@ 31
---------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getOutputHeader() @AT@ 5507 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getOutputHeader:[] @TO@ MethodInvocation@@getEndpoint().getOutputHeader() @AT@ 5521 @LENGTH@ 17
------------------INS Operator@@!= @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5538 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5542 @LENGTH@ 4
---------------INS Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5548 @LENGTH@ 126
------------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5586 @LENGTH@ 54
---------------------INS MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 53
------------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 17
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5604 @LENGTH@ 35
---------------------------INS MethodInvocation@@exchange.getIn().getBody() @TO@ SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @AT@ 5612 @LENGTH@ 26
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5612 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5612 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5629 @LENGTH@ 9
------------INS IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ Block@@ElseBody:if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5503 @LENGTH@ 171
---------------INS InfixExpression@@getEndpoint().getOutputHeader() != null @TO@ IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5507 @LENGTH@ 39
------------------INS MethodInvocation@@getEndpoint().getOutputHeader() @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5507 @LENGTH@ 31
---------------------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().getOutputHeader() @AT@ 5507 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:getOutputHeader:[] @TO@ MethodInvocation@@getEndpoint().getOutputHeader() @AT@ 5521 @LENGTH@ 17
------------------INS Operator@@!= @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5538 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@getEndpoint().getOutputHeader() != null @AT@ 5542 @LENGTH@ 4
---------------INS Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @TO@ IfStatement@@if (getEndpoint().getOutputHeader() != null) {  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5548 @LENGTH@ 126
------------------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ Block@@ThenBody:{  exchange.getOut().setBody(exchange.getIn().getBody());} @AT@ 5586 @LENGTH@ 54
---------------------INS MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 53
------------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 17
------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5586 @LENGTH@ 8
------------------------INS SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @TO@ MethodInvocation@@exchange.getOut().setBody(exchange.getIn().getBody()) @AT@ 5604 @LENGTH@ 35
---------------------------INS MethodInvocation@@exchange.getIn().getBody() @TO@ SimpleName@@MethodName:setBody:[exchange.getIn().getBody()] @AT@ 5612 @LENGTH@ 26
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5612 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5612 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@exchange.getIn().getBody() @AT@ 5629 @LENGTH@ 9
------INS ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @TO@ Block@@ElseBody:{  if (getEndpoint().isNoop()) {    exchange.getOut().setBody(exchange.getIn().getBody());  } else   if (getEndpoint().getOutputHeader() != null) {    exchange.getOut().setBody(exchange.getIn().getBody());  }  exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0);} @AT@ 5707 @LENGTH@ 59
---------INS MethodInvocation@@exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @AT@ 5707 @LENGTH@ 58
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @AT@ 5707 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @AT@ 5707 @LENGTH@ 8
------------INS SimpleName@@MethodName:setHeader:[SqlConstants.SQL_ROW_COUNT, 0] @TO@ MethodInvocation@@exchange.getOut().setHeader(SqlConstants.SQL_ROW_COUNT,0) @AT@ 5725 @LENGTH@ 40
---------------INS QualifiedName@@SqlConstants.SQL_ROW_COUNT @TO@ SimpleName@@MethodName:setHeader:[SqlConstants.SQL_ROW_COUNT, 0] @AT@ 5735 @LENGTH@ 26
------------------INS SimpleName@@SqlConstants @TO@ QualifiedName@@SqlConstants.SQL_ROW_COUNT @AT@ 5735 @LENGTH@ 12
------------------INS SimpleName@@SQL_ROW_COUNT @TO@ QualifiedName@@SqlConstants.SQL_ROW_COUNT @AT@ 5748 @LENGTH@ 13
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:setHeader:[SqlConstants.SQL_ROW_COUNT, 0] @AT@ 5763 @LENGTH@ 1


UPD EnumDeclaration@@[public, static]EventType,  @TO@ [public]EventType,  @AT@ 2183 @LENGTH@ 141
---DEL Modifier@@static @AT@ 2190 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyHttpProducer, HttpEndpoint endpoint, String name, String queryString,  @TO@ voidMethodName:MyHttpProducer, HttpEndpoint endpoint, String name, String queryString,  @AT@ 6823 @LENGTH@ 192
---DEL Modifier@@public @AT@ 6823 @LENGTH@ 6


UPD TryStatement@@try {  consumer.start();  while (true) {    Exchange exchange=consumer.receive(timeout);    if (exchange == null) {      break;    } else {      processor.process(exchange);    }  }}  finally {  try {    consumer.stop();  } catch (  Exception e) {    LOG.warn("Failed to stop PollingConsumer: " + e,e);  }} @TO@ try {  ServiceHelper.startService(consumer);  while (true) {    Exchange exchange=consumer.receive(timeout);    if (exchange == null) {      break;    } else {      processor.process(exchange);    }  }}  finally {  try {    ServiceHelper.stopAndShutdownService(consumer);  } catch (  Exception e) {    LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e);  }} @AT@ 2586 @LENGTH@ 499
---UPD ExpressionStatement@@MethodInvocation:consumer.start() @TO@ MethodInvocation:ServiceHelper.startService(consumer) @AT@ 2604 @LENGTH@ 17
------UPD MethodInvocation@@consumer.start() @TO@ ServiceHelper.startService(consumer) @AT@ 2604 @LENGTH@ 16
---------UPD SimpleName@@Name:consumer @TO@ Name:ServiceHelper @AT@ 2604 @LENGTH@ 8
---------UPD SimpleName@@MethodName:start:[] @TO@ MethodName:startService:[consumer] @AT@ 2613 @LENGTH@ 7
------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:start:[] @AT@ 2630 @LENGTH@ 8
---UPD Block@@FinallyBody:{  try {    consumer.stop();  } catch (  Exception e) {    LOG.warn("Failed to stop PollingConsumer: " + e,e);  }} @TO@ FinallyBody:{  try {    ServiceHelper.stopAndShutdownService(consumer);  } catch (  Exception e) {    LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e);  }} @AT@ 2904 @LENGTH@ 181
------UPD TryStatement@@try {  consumer.stop();} catch (Exception e) {  LOG.warn("Failed to stop PollingConsumer: " + e,e);} @TO@ try {  ServiceHelper.stopAndShutdownService(consumer);} catch (Exception e) {  LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e);} @AT@ 2918 @LENGTH@ 157
---------UPD ExpressionStatement@@MethodInvocation:consumer.stop() @TO@ MethodInvocation:ServiceHelper.stopAndShutdownService(consumer) @AT@ 2940 @LENGTH@ 16
------------UPD MethodInvocation@@consumer.stop() @TO@ ServiceHelper.stopAndShutdownService(consumer) @AT@ 2940 @LENGTH@ 15
---------------UPD SimpleName@@Name:consumer @TO@ Name:ServiceHelper @AT@ 2940 @LENGTH@ 8
---------------UPD SimpleName@@MethodName:stop:[] @TO@ MethodName:stopAndShutdownService:[consumer] @AT@ 2949 @LENGTH@ 6
------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:stop:[] @AT@ 2996 @LENGTH@ 8
---------UPD CatchClause@@catch (Exception e) {  LOG.warn("Failed to stop PollingConsumer: " + e,e);} @TO@ catch (Exception e) {  LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e);} @AT@ 2971 @LENGTH@ 104
------------UPD ExpressionStatement@@MethodInvocation:LOG.warn("Failed to stop PollingConsumer: " + e,e) @TO@ MethodInvocation:LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e) @AT@ 3009 @LENGTH@ 52
---------------UPD MethodInvocation@@LOG.warn("Failed to stop PollingConsumer: " + e,e) @TO@ LOG.warn("Failed to stop PollingConsumer: " + consumer + ". This example is ignored.",e) @AT@ 3009 @LENGTH@ 51
------------------UPD SimpleName@@MethodName:warn:["Failed to stop PollingConsumer: " + e, e] @TO@ MethodName:warn:["Failed to stop PollingConsumer: " + consumer + ". This example is ignored.", e] @AT@ 3013 @LENGTH@ 47
---------------------UPD InfixExpression@@"Failed to stop PollingConsumer: " + e @TO@ "Failed to stop PollingConsumer: " + consumer + ". This example is ignored." @AT@ 3018 @LENGTH@ 38
------------------------UPD SimpleName@@e @TO@ consumer @AT@ 3055 @LENGTH@ 1
------------------------INS StringLiteral@@". This example is ignored." @TO@ InfixExpression@@"Failed to stop PollingConsumer: " + e @AT@ 3116 @LENGTH@ 28


UPD ExpressionStatement@@MethodInvocation:fail() @TO@ MethodInvocation:fail("IOException should have been thrown") @AT@ 2298 @LENGTH@ 7
---UPD MethodInvocation@@MethodName:fail:[] @TO@ fail("IOException should have been thrown") @AT@ 2298 @LENGTH@ 6
------INS SimpleName@@MethodName:fail:["IOException should have been thrown"] @TO@ MethodInvocation@@MethodName:fail:[] @AT@ 2298 @LENGTH@ 43
---------INS StringLiteral@@"IOException should have been thrown" @TO@ SimpleName@@MethodName:fail:["IOException should have been thrown"] @AT@ 2303 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:IntegerItem, String str,  @TO@ voidMethodName:IntegerItem, String str,  @AT@ 4298 @LENGTH@ 96
---DEL Modifier@@public @AT@ 4298 @LENGTH@ 6


UPD TryStatement@@try {  fis=new FileInputStream(productConf);  props.load(fis);} catch (IOException e) {  throw new PatchingException(PatchLogger.ROOT_LOGGER.failedToLoadInfo(productConf.getAbsolutePath()),e);} finally {  if (fis != null) {    IoUtils.safeClose(fis);  }} @TO@ try (FileInputStream fis=new FileInputStream(productConf)){  props.load(fis);} catch (IOException e) {  throw new PatchingException(PatchLogger.ROOT_LOGGER.failedToLoadInfo(productConf.getAbsolutePath()),e);} @AT@ 5895 @LENGTH@ 350
---INS VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(productConf) @TO@ TryStatement@@try {  fis=new FileInputStream(productConf);  props.load(fis);} catch (IOException e) {  throw new PatchingException(PatchLogger.ROOT_LOGGER.failedToLoadInfo(productConf.getAbsolutePath()),e);} finally {  if (fis != null) {    IoUtils.safeClose(fis);  }} @AT@ 5827 @LENGTH@ 54
------INS SimpleType@@FileInputStream @TO@ VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(productConf) @AT@ 5827 @LENGTH@ 15
------INS VariableDeclarationFragment@@fis=new FileInputStream(productConf) @TO@ VariableDeclarationExpression@@FileInputStream fis=new FileInputStream(productConf) @AT@ 5843 @LENGTH@ 38
---------INS SimpleName@@fis @TO@ VariableDeclarationFragment@@fis=new FileInputStream(productConf) @AT@ 5843 @LENGTH@ 3
---------INS ClassInstanceCreation@@FileInputStream[productConf] @TO@ VariableDeclarationFragment@@fis=new FileInputStream(productConf) @AT@ 5849 @LENGTH@ 32
------------MOV New@@new @TO@ ClassInstanceCreation@@FileInputStream[productConf] @AT@ 5919 @LENGTH@ 3
------------MOV SimpleType@@FileInputStream @TO@ ClassInstanceCreation@@FileInputStream[productConf] @AT@ 5923 @LENGTH@ 15
------------MOV SimpleName@@productConf @TO@ ClassInstanceCreation@@FileInputStream[productConf] @AT@ 5939 @LENGTH@ 11
---DEL ExpressionStatement@@Assignment:fis=new FileInputStream(productConf) @AT@ 5913 @LENGTH@ 39
------DEL Assignment@@fis=new FileInputStream(productConf) @AT@ 5913 @LENGTH@ 38
---------DEL SimpleName@@fis @AT@ 5913 @LENGTH@ 3
---------DEL Operator@@= @AT@ 5916 @LENGTH@ 1
---------DEL ClassInstanceCreation@@FileInputStream[productConf] @AT@ 5919 @LENGTH@ 32
---DEL Block@@FinallyBody:{  if (fis != null) {    IoUtils.safeClose(fis);  }} @AT@ 6150 @LENGTH@ 95
------DEL IfStatement@@if (fis != null) {  IoUtils.safeClose(fis);} @AT@ 6164 @LENGTH@ 71
---------DEL InfixExpression@@fis != null @AT@ 6167 @LENGTH@ 11
------------DEL SimpleName@@fis @AT@ 6167 @LENGTH@ 3
------------DEL Operator@@!= @AT@ 6170 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 6174 @LENGTH@ 4
---------DEL Block@@ThenBody:{  IoUtils.safeClose(fis);} @AT@ 6180 @LENGTH@ 55
------------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(fis) @AT@ 6198 @LENGTH@ 23
---------------DEL MethodInvocation@@IoUtils.safeClose(fis) @AT@ 6198 @LENGTH@ 22
------------------DEL SimpleName@@Name:IoUtils @AT@ 6198 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:safeClose:[fis] @AT@ 6206 @LENGTH@ 14
---------------------DEL SimpleName@@fis @AT@ 6216 @LENGTH@ 3


MOV FieldDeclaration@@private, List<String>, [notValidConnectionKeys=new ArrayList<>()] @TO@ TypeDeclaration@@[public]WebsocketProducer, DefaultProducer @AT@ 1459 @LENGTH@ 64


UPD Block@@ThenBody:{  LOG.debug("No TransactionTemplate configured on TransactionErrorHandlerBuilder. Will try find it in the registry.");  Map<String,TransactedPolicy> mapPolicy=routeContext.lookupByType(TransactedPolicy.class);  if (mapPolicy != null && mapPolicy.size() == 1) {    TransactedPolicy policy=mapPolicy.values().iterator().next();    if (policy != null && policy instanceof SpringTransactionPolicy) {      transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();    }  }  if (transactionTemplate == null) {    TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);    if (policy != null && policy instanceof SpringTransactionPolicy) {      transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();    }  }  if (transactionTemplate == null) {    Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);    if (mapTemplate != null && mapTemplate.size() == 1) {      transactionTemplate=mapTemplate.values().iterator().next();    }    if (mapTemplate == null || mapTemplate.isEmpty()) {      LOG.trace("No TransactionTemplate found in registry.");    } else {      LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());    }  }  if (transactionTemplate == null) {    Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);    if (mapManager != null && mapManager.size() == 1) {      transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());    }    if (mapManager == null || mapManager.isEmpty()) {      LOG.trace("No PlatformTransactionManager found in registry.");    } else {      LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());    }  }  if (transactionTemplate != null) {    LOG.debug("Found TransactionTemplate in registry to use: " + transactionTemplate);  }} @TO@ ThenBody:{  LOG.debug("No TransactionTemplate configured on TransactionErrorHandlerBuilder. Will try find it in the registry.");  Map<String,TransactedPolicy> mapPolicy=routeContext.lookupByType(TransactedPolicy.class);  if (mapPolicy != null && mapPolicy.size() == 1) {    TransactedPolicy policy=mapPolicy.values().iterator().next();    if (policy != null && policy instanceof SpringTransactionPolicy) {      transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();    }  }  if (transactionTemplate == null) {    TransactedPolicy policy=routeContext.lookup(PROPAGATION_REQUIRED,TransactedPolicy.class);    if (policy != null && policy instanceof SpringTransactionPolicy) {      transactionTemplate=((SpringTransactionPolicy)policy).getTransactionTemplate();    }  }  if (transactionTemplate == null) {    Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);    if (mapTemplate == null || mapTemplate.isEmpty()) {      LOG.trace("No TransactionTemplate found in registry.");    } else     if (mapTemplate.size() == 1) {      transactionTemplate=mapTemplate.values().iterator().next();    } else {      LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());    }  }  if (transactionTemplate == null) {    Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);    if (mapManager == null || mapManager.isEmpty()) {      LOG.trace("No PlatformTransactionManager found in registry.");    } else     if (mapManager.size() == 1) {      transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());    } else {      LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());    }  }  if (transactionTemplate != null) {    LOG.debug("Found TransactionTemplate in registry to use: " + transactionTemplate);  }} @AT@ 2276 @LENGTH@ 2850
---UPD IfStatement@@if (transactionTemplate == null) {  Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);  if (mapTemplate != null && mapTemplate.size() == 1) {    transactionTemplate=mapTemplate.values().iterator().next();  }  if (mapTemplate == null || mapTemplate.isEmpty()) {    LOG.trace("No TransactionTemplate found in registry.");  } else {    LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());  }} @TO@ if (transactionTemplate == null) {  Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);  if (mapTemplate == null || mapTemplate.isEmpty()) {    LOG.trace("No TransactionTemplate found in registry.");  } else   if (mapTemplate.size() == 1) {    transactionTemplate=mapTemplate.values().iterator().next();  } else {    LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());  }} @AT@ 3341 @LENGTH@ 765
------UPD Block@@ThenBody:{  Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);  if (mapTemplate != null && mapTemplate.size() == 1) {    transactionTemplate=mapTemplate.values().iterator().next();  }  if (mapTemplate == null || mapTemplate.isEmpty()) {    LOG.trace("No TransactionTemplate found in registry.");  } else {    LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());  }} @TO@ ThenBody:{  Map<String,TransactionTemplate> mapTemplate=routeContext.lookupByType(TransactionTemplate.class);  if (mapTemplate == null || mapTemplate.isEmpty()) {    LOG.trace("No TransactionTemplate found in registry.");  } else   if (mapTemplate.size() == 1) {    transactionTemplate=mapTemplate.values().iterator().next();  } else {    LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());  }} @AT@ 3374 @LENGTH@ 732
---------UPD IfStatement@@if (mapTemplate != null && mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} @TO@ if (mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} else {  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @AT@ 3509 @LENGTH@ 153
---------UPD IfStatement@@if (mapTemplate == null || mapTemplate.isEmpty()) {  LOG.trace("No TransactionTemplate found in registry.");} else {  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @TO@ if (mapTemplate == null || mapTemplate.isEmpty()) {  LOG.trace("No TransactionTemplate found in registry.");} else if (mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} else {  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @AT@ 3679 @LENGTH@ 413
------------UPD Block@@ElseBody:{  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @TO@ ElseBody:if (mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} else {  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @AT@ 3830 @LENGTH@ 262
---------------MOV IfStatement@@if (mapTemplate != null && mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} @TO@ Block@@ElseBody:{  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @AT@ 3509 @LENGTH@ 153
------------------DEL InfixExpression@@mapTemplate != null && mapTemplate.size() == 1 @AT@ 3513 @LENGTH@ 46
---------------------DEL InfixExpression@@mapTemplate != null @AT@ 3513 @LENGTH@ 19
------------------------DEL SimpleName@@mapTemplate @AT@ 3513 @LENGTH@ 11
------------------------DEL NullLiteral@@null @AT@ 3528 @LENGTH@ 4
---------------------DEL Operator@@&& @AT@ 3532 @LENGTH@ 2
------------------MOV InfixExpression@@mapTemplate.size() == 1 @TO@ IfStatement@@if (mapTemplate != null && mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} @AT@ 3536 @LENGTH@ 23
------------------INS Block@@ElseBody:{  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @TO@ IfStatement@@if (mapTemplate != null && mapTemplate.size() == 1) {  transactionTemplate=mapTemplate.values().iterator().next();} @AT@ 3795 @LENGTH@ 262
---------------------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size()) @TO@ Block@@ElseBody:{  LOG.debug("Found {} TransactionTemplate in registry. Cannot determine which one to use. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapTemplate.size());} @AT@ 3852 @LENGTH@ 222
---UPD IfStatement@@if (transactionTemplate == null) {  Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);  if (mapManager != null && mapManager.size() == 1) {    transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());  }  if (mapManager == null || mapManager.isEmpty()) {    LOG.trace("No PlatformTransactionManager found in registry.");  } else {    LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());  }} @TO@ if (transactionTemplate == null) {  Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);  if (mapManager == null || mapManager.isEmpty()) {    LOG.trace("No PlatformTransactionManager found in registry.");  } else   if (mapManager.size() == 1) {    transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());  } else {    LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());  }} @AT@ 4120 @LENGTH@ 835
------UPD Block@@ThenBody:{  Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);  if (mapManager != null && mapManager.size() == 1) {    transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());  }  if (mapManager == null || mapManager.isEmpty()) {    LOG.trace("No PlatformTransactionManager found in registry.");  } else {    LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());  }} @TO@ ThenBody:{  Map<String,PlatformTransactionManager> mapManager=routeContext.lookupByType(PlatformTransactionManager.class);  if (mapManager == null || mapManager.isEmpty()) {    LOG.trace("No PlatformTransactionManager found in registry.");  } else   if (mapManager.size() == 1) {    transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());  } else {    LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());  }} @AT@ 4153 @LENGTH@ 802
---------UPD IfStatement@@if (mapManager != null && mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} @TO@ if (mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} else {  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @AT@ 4301 @LENGTH@ 175
---------UPD IfStatement@@if (mapManager == null || mapManager.isEmpty()) {  LOG.trace("No PlatformTransactionManager found in registry.");} else {  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @TO@ if (mapManager == null || mapManager.isEmpty()) {  LOG.trace("No PlatformTransactionManager found in registry.");} else if (mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} else {  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @AT@ 4493 @LENGTH@ 448
------------UPD Block@@ElseBody:{  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @TO@ ElseBody:if (mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} else {  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @AT@ 4649 @LENGTH@ 292
---------------MOV IfStatement@@if (mapManager != null && mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} @TO@ Block@@ElseBody:{  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @AT@ 4301 @LENGTH@ 175
------------------DEL InfixExpression@@mapManager != null && mapManager.size() == 1 @AT@ 4305 @LENGTH@ 44
---------------------DEL InfixExpression@@mapManager != null @AT@ 4305 @LENGTH@ 18
------------------------DEL SimpleName@@mapManager @AT@ 4305 @LENGTH@ 10
------------------------DEL NullLiteral@@null @AT@ 4319 @LENGTH@ 4
---------------------DEL Operator@@&& @AT@ 4323 @LENGTH@ 2
------------------MOV InfixExpression@@mapManager.size() == 1 @TO@ IfStatement@@if (mapManager != null && mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} @AT@ 4327 @LENGTH@ 22
------------------INS Block@@ElseBody:{  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @TO@ IfStatement@@if (mapManager != null && mapManager.size() == 1) {  transactionTemplate=new TransactionTemplate(mapManager.values().iterator().next());} @AT@ 4580 @LENGTH@ 292
---------------------MOV ExpressionStatement@@MethodInvocation:LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size()) @TO@ Block@@ElseBody:{  LOG.debug("Found {} PlatformTransactionManager in registry. Cannot determine which one to use for TransactionTemplate. " + "Please configure a TransactionTemplate on the TransactionErrorHandlerBuilder",mapManager.size());} @AT@ 4671 @LENGTH@ 252


UPD ExpressionStatement@@MethodInvocation:component.setMaxThreads(11) @TO@ MethodInvocation:component.setMaxThreads(20) @AT@ 1891 @LENGTH@ 28
---UPD MethodInvocation@@component.setMaxThreads(11) @TO@ component.setMaxThreads(20) @AT@ 1891 @LENGTH@ 27
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 1901 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 1915 @LENGTH@ 2


UPD TypeDeclaration@@[public]AnonymousAuthenticationTokenTests, TestCase @TO@ [public]AnonymousAuthenticationTokenTests,  @AT@ 1177 @LENGTH@ 3409
---DEL SimpleType@@TestCase @AT@ 1232 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertEquals(null,provider.authenticate(new TestingAuthenticationToken("user","password"))) @TO@ MethodInvocation:assertThat(provider.authenticate(new TestingAuthenticationToken("user","password"))).isNull() @AT@ 4189 @LENGTH@ 98
---UPD MethodInvocation@@assertEquals(null,provider.authenticate(new TestingAuthenticationToken("user","password"))) @TO@ MethodName:assertThat:[provider.authenticate(new TestingAuthenticationToken("user","password"))] @AT@ 4189 @LENGTH@ 97
---INS MethodInvocation@@assertThat(provider.authenticate(new TestingAuthenticationToken("user","password"))).isNull() @TO@ ExpressionStatement@@MethodInvocation:assertEquals(null,provider.authenticate(new TestingAuthenticationToken("user","password"))) @AT@ 4189 @LENGTH@ 94
------MOV MethodInvocation@@assertEquals(null,provider.authenticate(new TestingAuthenticationToken("user","password"))) @TO@ MethodInvocation@@assertThat(provider.authenticate(new TestingAuthenticationToken("user","password"))).isNull() @AT@ 4189 @LENGTH@ 97
---------DEL SimpleName@@MethodName:assertEquals:[null, provider.authenticate(new TestingAuthenticationToken("user","password"))] @AT@ 4189 @LENGTH@ 97
------------DEL NullLiteral@@null @AT@ 4202 @LENGTH@ 4
---------MOV MethodInvocation@@provider.authenticate(new TestingAuthenticationToken("user","password")) @TO@ MethodInvocation@@assertEquals(null,provider.authenticate(new TestingAuthenticationToken("user","password"))) @AT@ 4212 @LENGTH@ 73
------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@assertThat(provider.authenticate(new TestingAuthenticationToken("user","password"))).isNull() @AT@ 4275 @LENGTH@ 8


DEL MethodDeclaration@@public, final, void, MethodName:setUp, Exception,  @AT@ 1147 @LENGTH@ 64
---DEL Modifier@@public @AT@ 1147 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1154 @LENGTH@ 5
---DEL PrimitiveType@@void @AT@ 1160 @LENGTH@ 4
---DEL SimpleName@@MethodName:setUp @AT@ 1165 @LENGTH@ 5
---DEL SimpleType@@Exception @AT@ 1180 @LENGTH@ 9
---DEL ExpressionStatement@@SuperMethodInvocation:super.setUp() @AT@ 1194 @LENGTH@ 14
------DEL SuperMethodInvocation@@super.setUp() @AT@ 1194 @LENGTH@ 13
---------DEL SimpleName@@MethodName:setUp:[] @AT@ 1200 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).isTrue().contains("ROLE_X")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @AT@ 2450 @LENGTH@ 102
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).isTrue().contains("ROLE_X")) @TO@ assertThat(AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")) @AT@ 2450 @LENGTH@ 101
------UPD SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(user.getAuthorities()).isTrue().contains("ROLE_X")] @TO@ MethodName:assertThat:[AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X")] @AT@ 2450 @LENGTH@ 101
---------UPD MethodInvocation@@AuthorityUtils.authorityListToSet(user.getAuthorities()).isTrue().contains("ROLE_X") @TO@ AuthorityUtils.authorityListToSet(user.getAuthorities()).contains("ROLE_X") @AT@ 2461 @LENGTH@ 89
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 2461 @LENGTH@ 65


MOV ExpressionStatement@@MethodInvocation:new DirectFieldAccessor(connectionFactoryWithConfirmsEnabled).setPropertyValue("logger",logger) @TO@ MethodDeclaration@@public, void, MethodName:testNackForBadExchange, Exception,  @AT@ 28814 @LENGTH@ 97


INS ExpressionStatement@@MethodInvocation:Assert.notNull(typeInformation,"TypeInformation must not be null!") @TO@ MethodDeclaration@@protected, E, MethodName:addPersistentEntity, TypeInformation<?> typeInformation,  @AT@ 10282 @LENGTH@ 69
---INS MethodInvocation@@Assert.notNull(typeInformation,"TypeInformation must not be null!") @TO@ ExpressionStatement@@MethodInvocation:Assert.notNull(typeInformation,"TypeInformation must not be null!") @AT@ 10282 @LENGTH@ 68
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.notNull(typeInformation,"TypeInformation must not be null!") @AT@ 10282 @LENGTH@ 6
------INS SimpleName@@MethodName:notNull:[typeInformation, "TypeInformation must not be null!"] @TO@ MethodInvocation@@Assert.notNull(typeInformation,"TypeInformation must not be null!") @AT@ 10289 @LENGTH@ 61
---------INS SimpleName@@typeInformation @TO@ SimpleName@@MethodName:notNull:[typeInformation, "TypeInformation must not be null!"] @AT@ 10297 @LENGTH@ 15
---------INS StringLiteral@@"TypeInformation must not be null!" @TO@ SimpleName@@MethodName:notNull:[typeInformation, "TypeInformation must not be null!"] @AT@ 10314 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />",value) @TO@ MethodInvocation:assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />") @AT@ 1237 @LENGTH@ 240
---UPD MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />",value) @TO@ assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />") @AT@ 1237 @LENGTH@ 239
------DEL SimpleName@@MethodName:assertEquals:["The output is not correct.", "<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />", value] @AT@ 1237 @LENGTH@ 239
---------DEL StringLiteral@@"The output is not correct." @AT@ 1250 @LENGTH@ 28
---------DEL SimpleName@@value @AT@ 1470 @LENGTH@ 5
------INS MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />",value) @AT@ 1253 @LENGTH@ 63
---------INS StringLiteral@@"The output is not correct." @TO@ MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @AT@ 1287 @LENGTH@ 28
------INS MethodInvocation@@MethodName:assertThat:[value] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />",value) @AT@ 1253 @LENGTH@ 17
---------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:assertThat:[value] @AT@ 1264 @LENGTH@ 5
------INS SimpleName@@MethodName:isEqualTo:["<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />"] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />",value) @AT@ 1317 @LENGTH@ 191
---------MOV InfixExpression@@"<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />" @TO@ SimpleName@@MethodName:isEqualTo:["<meta name=\"_csrf_parameter\" content=\"csrfParameter\" />" + "<meta name=\"_csrf_header\" content=\"csrfHeader\" />" + "<meta name=\"_csrf\" content=\"fooBarBazQux\" />"] @AT@ 1284 @LENGTH@ 184


UPD Block@@ElseBody:if (propertyValue.getClass().isArray()) {  iterable=Arrays.asList((Object[])propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @TO@ ElseBody:if (propertyValue.getClass().isArray()) {  iterable=CollectionUtils.arrayToList(propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @AT@ 5029 @LENGTH@ 238
---UPD IfStatement@@if (propertyValue.getClass().isArray()) {  iterable=Arrays.asList((Object[])propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @TO@ if (propertyValue.getClass().isArray()) {  iterable=CollectionUtils.arrayToList(propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @AT@ 5029 @LENGTH@ 238
------UPD Block@@ThenBody:{  iterable=Arrays.asList((Object[])propertyValue);} @TO@ ThenBody:{  iterable=CollectionUtils.arrayToList(propertyValue);} @AT@ 5069 @LENGTH@ 68
---------UPD ExpressionStatement@@Assignment:iterable=Arrays.asList((Object[])propertyValue) @TO@ Assignment:iterable=CollectionUtils.arrayToList(propertyValue) @AT@ 5078 @LENGTH@ 51
------------UPD Assignment@@iterable=Arrays.asList((Object[])propertyValue) @TO@ iterable=CollectionUtils.arrayToList(propertyValue) @AT@ 5078 @LENGTH@ 50
---------------UPD MethodInvocation@@Arrays.asList((Object[])propertyValue) @TO@ CollectionUtils.arrayToList(propertyValue) @AT@ 5089 @LENGTH@ 39
------------------UPD SimpleName@@Name:Arrays @TO@ Name:CollectionUtils @AT@ 5089 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asList:[(Object[])propertyValue] @TO@ MethodName:arrayToList:[propertyValue] @AT@ 5096 @LENGTH@ 32
---------------------DEL CastExpression@@(Object[])propertyValue @AT@ 5103 @LENGTH@ 24
------------------------DEL ArrayType@@Object[] @AT@ 5104 @LENGTH@ 8
---------------------------DEL SimpleType@@Object @AT@ 5104 @LENGTH@ 6
------------------------DEL SimpleName@@propertyValue @AT@ 5114 @LENGTH@ 13
---------------------INS SimpleName@@propertyValue @TO@ SimpleName@@MethodName:asList:[(Object[])propertyValue] @AT@ 5118 @LENGTH@ 13
---UPD IfStatement@@if (propertyValue.getClass().isArray()) {  iterable=Arrays.asList((Object[])propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @TO@ if (propertyValue.getClass().isArray()) {  iterable=CollectionUtils.arrayToList(propertyValue);} else {  throw new RuntimeException("Don't know how to handle " + propertyValue.getClass() + " type of collection");} @AT@ 5029 @LENGTH@ 238
------UPD Block@@ThenBody:{  iterable=Arrays.asList((Object[])propertyValue);} @TO@ ThenBody:{  iterable=CollectionUtils.arrayToList(propertyValue);} @AT@ 5069 @LENGTH@ 68
---------UPD ExpressionStatement@@Assignment:iterable=Arrays.asList((Object[])propertyValue) @TO@ Assignment:iterable=CollectionUtils.arrayToList(propertyValue) @AT@ 5078 @LENGTH@ 51
------------UPD Assignment@@iterable=Arrays.asList((Object[])propertyValue) @TO@ iterable=CollectionUtils.arrayToList(propertyValue) @AT@ 5078 @LENGTH@ 50
---------------UPD MethodInvocation@@Arrays.asList((Object[])propertyValue) @TO@ CollectionUtils.arrayToList(propertyValue) @AT@ 5089 @LENGTH@ 39
------------------UPD SimpleName@@Name:Arrays @TO@ Name:CollectionUtils @AT@ 5089 @LENGTH@ 6
------------------UPD SimpleName@@MethodName:asList:[(Object[])propertyValue] @TO@ MethodName:arrayToList:[propertyValue] @AT@ 5096 @LENGTH@ 32
---------------------DEL CastExpression@@(Object[])propertyValue @AT@ 5103 @LENGTH@ 24
------------------------DEL ArrayType@@Object[] @AT@ 5104 @LENGTH@ 8
---------------------------DEL SimpleType@@Object @AT@ 5104 @LENGTH@ 6
------------------------DEL SimpleName@@propertyValue @AT@ 5114 @LENGTH@ 13
---------------------INS SimpleName@@propertyValue @TO@ SimpleName@@MethodName:asList:[(Object[])propertyValue] @AT@ 5118 @LENGTH@ 13


UPD MethodDeclaration@@Set<E>, MethodName:rangeByLex, RedisZSetCommands.Range range, RedisZSetCommands.Limit limit,  @TO@ Set<E>, MethodName:rangeByLex, Range range, Limit limit,  @AT@ 1848 @LENGTH@ 73
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1859 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1859 @LENGTH@ 23
---UPD SingleVariableDeclaration@@RedisZSetCommands.Limit limit @TO@ Limit limit @AT@ 1890 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Limit @TO@ Limit @AT@ 1890 @LENGTH@ 23


INS MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 12824 @LENGTH@ 600
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12824 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12831 @LENGTH@ 4
---INS SimpleName@@MethodName:testAsEndpointUriWithplaceholder @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12836 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12878 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12898 @LENGTH@ 56
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 12898 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 12898 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 12902 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 12910 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 12918 @LENGTH@ 35
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 12918 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 12924 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 12924 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 12928 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 12928 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 12936 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 12944 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("query","{{insert}}") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 12963 @LENGTH@ 31
------INS MethodInvocation@@map.put("query","{{insert}}") @TO@ ExpressionStatement@@MethodInvocation:map.put("query","{{insert}}") @AT@ 12963 @LENGTH@ 30
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("query","{{insert}}") @AT@ 12963 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["query", "{{insert}}"] @TO@ MethodInvocation@@map.put("query","{{insert}}") @AT@ 12967 @LENGTH@ 26
------------INS StringLiteral@@"query" @TO@ SimpleName@@MethodName:put:["query", "{{insert}}"] @AT@ 12971 @LENGTH@ 7
------------INS StringLiteral@@"{{insert}}" @TO@ SimpleName@@MethodName:put:["query", "{{insert}}"] @AT@ 12980 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}",catalog.asEndpointUri("sql",map,false)) @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 13003 @LENGTH@ 73
------INS MethodInvocation@@assertEquals("sql:{{insert}}",catalog.asEndpointUri("sql",map,false)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}",catalog.asEndpointUri("sql",map,false)) @AT@ 13003 @LENGTH@ 72
---------INS SimpleName@@MethodName:assertEquals:["sql:{{insert}}", catalog.asEndpointUri("sql",map,false)] @TO@ MethodInvocation@@assertEquals("sql:{{insert}}",catalog.asEndpointUri("sql",map,false)) @AT@ 13003 @LENGTH@ 72
------------INS StringLiteral@@"sql:{{insert}}" @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}", catalog.asEndpointUri("sql",map,false)] @AT@ 13016 @LENGTH@ 16
------------INS MethodInvocation@@catalog.asEndpointUri("sql",map,false) @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}", catalog.asEndpointUri("sql",map,false)] @AT@ 13034 @LENGTH@ 40
---------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13034 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asEndpointUri:["sql", map, false] @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13042 @LENGTH@ 32
------------------INS StringLiteral@@"sql" @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13056 @LENGTH@ 5
------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13063 @LENGTH@ 3
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13068 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:map.put("useMessageBodyForSql","true") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 13086 @LENGTH@ 40
------INS MethodInvocation@@map.put("useMessageBodyForSql","true") @TO@ ExpressionStatement@@MethodInvocation:map.put("useMessageBodyForSql","true") @AT@ 13086 @LENGTH@ 39
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("useMessageBodyForSql","true") @AT@ 13086 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["useMessageBodyForSql", "true"] @TO@ MethodInvocation@@map.put("useMessageBodyForSql","true") @AT@ 13090 @LENGTH@ 35
------------INS StringLiteral@@"useMessageBodyForSql" @TO@ SimpleName@@MethodName:put:["useMessageBodyForSql", "true"] @AT@ 13094 @LENGTH@ 22
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:put:["useMessageBodyForSql", "true"] @AT@ 13118 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}?useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 13135 @LENGTH@ 99
------INS MethodInvocation@@assertEquals("sql:{{insert}}?useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}?useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @AT@ 13135 @LENGTH@ 98
---------INS SimpleName@@MethodName:assertEquals:["sql:{{insert}}?useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @TO@ MethodInvocation@@assertEquals("sql:{{insert}}?useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @AT@ 13135 @LENGTH@ 98
------------INS StringLiteral@@"sql:{{insert}}?useMessageBodyForSql=true" @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}?useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @AT@ 13148 @LENGTH@ 42
------------INS MethodInvocation@@catalog.asEndpointUri("sql",map,false) @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}?useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @AT@ 13192 @LENGTH@ 40
---------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13192 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asEndpointUri:["sql", map, false] @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13200 @LENGTH@ 32
------------------INS StringLiteral@@"sql" @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13214 @LENGTH@ 5
------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13221 @LENGTH@ 3
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13226 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:map.put("parametersCount","{{count}}") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 13244 @LENGTH@ 40
------INS MethodInvocation@@map.put("parametersCount","{{count}}") @TO@ ExpressionStatement@@MethodInvocation:map.put("parametersCount","{{count}}") @AT@ 13244 @LENGTH@ 39
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("parametersCount","{{count}}") @AT@ 13244 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["parametersCount", "{{count}}"] @TO@ MethodInvocation@@map.put("parametersCount","{{count}}") @AT@ 13248 @LENGTH@ 35
------------INS StringLiteral@@"parametersCount" @TO@ SimpleName@@MethodName:put:["parametersCount", "{{count}}"] @AT@ 13252 @LENGTH@ 17
------------INS StringLiteral@@"{{count}}" @TO@ SimpleName@@MethodName:put:["parametersCount", "{{count}}"] @AT@ 13271 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriWithplaceholder, Exception,  @AT@ 13293 @LENGTH@ 125
------INS MethodInvocation@@assertEquals("sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @AT@ 13293 @LENGTH@ 124
---------INS SimpleName@@MethodName:assertEquals:["sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @TO@ MethodInvocation@@assertEquals("sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true",catalog.asEndpointUri("sql",map,false)) @AT@ 13293 @LENGTH@ 124
------------INS StringLiteral@@"sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true" @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @AT@ 13306 @LENGTH@ 68
------------INS MethodInvocation@@catalog.asEndpointUri("sql",map,false) @TO@ SimpleName@@MethodName:assertEquals:["sql:{{insert}}?parametersCount={{count}}&useMessageBodyForSql=true", catalog.asEndpointUri("sql",map,false)] @AT@ 13376 @LENGTH@ 40
---------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13376 @LENGTH@ 7
---------------INS SimpleName@@MethodName:asEndpointUri:["sql", map, false] @TO@ MethodInvocation@@catalog.asEndpointUri("sql",map,false) @AT@ 13384 @LENGTH@ 32
------------------INS StringLiteral@@"sql" @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13398 @LENGTH@ 5
------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13405 @LENGTH@ 3
------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:asEndpointUri:["sql", map, false] @AT@ 13410 @LENGTH@ 5


UPD FieldDeclaration@@final, Expression, [sendTo] @TO@ private, final, Expression, [sendTo] @AT@ 17354 @LENGTH@ 24
---INS Modifier@@private @TO@ FieldDeclaration@@final, Expression, [sendTo] @AT@ 17362 @LENGTH@ 7


UPD TypeDeclaration@@[@SuppressWarnings("unchecked"), public]JBossDeploymentStructureContainer, [Archive<T>] @TO@ [public]JBossDeploymentStructureContainer, [Archive<T>] @AT@ 819 @LENGTH@ 1325
---DEL SingleMemberAnnotation@@@SuppressWarnings("unchecked") @AT@ 819 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:assertThat(anonymous.getAuthorities()).containsOnly(expectedAnonymous.getAuthorities().toArray()) @TO@ MethodInvocation:assertThat(anonymous.getAuthorities()).containsOnlyElementsOf(expectedAnonymous.getAuthorities()) @AT@ 8214 @LENGTH@ 103
---UPD MethodInvocation@@assertThat(anonymous.getAuthorities()).containsOnly(expectedAnonymous.getAuthorities().toArray()) @TO@ assertThat(anonymous.getAuthorities()).containsOnlyElementsOf(expectedAnonymous.getAuthorities()) @AT@ 8214 @LENGTH@ 102
------UPD SimpleName@@MethodName:containsOnly:[expectedAnonymous.getAuthorities().toArray()] @TO@ MethodName:containsOnlyElementsOf:[expectedAnonymous.getAuthorities()] @AT@ 8253 @LENGTH@ 63
---------UPD MethodInvocation@@expectedAnonymous.getAuthorities().toArray() @TO@ expectedAnonymous.getAuthorities() @AT@ 8271 @LENGTH@ 44
------------DEL MethodInvocation@@MethodName:getAuthorities:[] @AT@ 8271 @LENGTH@ 34
------------UPD SimpleName@@MethodName:toArray:[] @TO@ MethodName:getAuthorities:[] @AT@ 8306 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities())).contains("ROLE_NEW") @AT@ 15520 @LENGTH@ 97
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW")) @TO@ assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities())).contains("ROLE_NEW") @AT@ 15520 @LENGTH@ 96
------INS MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities())] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW")) @AT@ 15515 @LENGTH@ 70
---------INS MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @TO@ MethodInvocation@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities())] @AT@ 15526 @LENGTH@ 58
------------MOV SimpleName@@Name:AuthorityUtils @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @AT@ 15531 @LENGTH@ 14
------------INS SimpleName@@MethodName:authorityListToSet:[result.getAuthorities()] @TO@ MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()) @AT@ 15541 @LENGTH@ 43
---------------INS MethodInvocation@@result.getAuthorities() @TO@ SimpleName@@MethodName:authorityListToSet:[result.getAuthorities()] @AT@ 15560 @LENGTH@ 23
------------------MOV SimpleName@@Name:result @TO@ MethodInvocation@@result.getAuthorities() @AT@ 15565 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getAuthorities:[] @TO@ MethodInvocation@@result.getAuthorities() @AT@ 15572 @LENGTH@ 16
------DEL SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW")] @AT@ 15520 @LENGTH@ 96
---------DEL MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW") @AT@ 15531 @LENGTH@ 84
------------DEL MethodInvocation@@MethodName:authorityListToSet:[result.getAuthorities()] @AT@ 15531 @LENGTH@ 58
---------------DEL MethodInvocation@@result.getAuthorities() @AT@ 15565 @LENGTH@ 23
------MOV SimpleName@@MethodName:contains:["ROLE_NEW"] @TO@ MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("ROLE_NEW")) @AT@ 15590 @LENGTH@ 25


UPD MethodDeclaration@@public, voidMethodName:PrintDocument, InputStream stream, DocFlavor docFlavor,  @TO@ voidMethodName:PrintDocument, InputStream stream, DocFlavor docFlavor,  @AT@ 1256 @LENGTH@ 135
---DEL Modifier@@public @AT@ 1256 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Mockito.when(kp.send(Mockito.any())).thenThrow(new ApiException()) @TO@ MethodInvocation:Mockito.when(kp.send(Mockito.any(ProducerRecord.class))).thenThrow(new ApiException()) @AT@ 3490 @LENGTH@ 67
---UPD MethodInvocation@@Mockito.when(kp.send(Mockito.any())).thenThrow(new ApiException()) @TO@ Mockito.when(kp.send(Mockito.any(ProducerRecord.class))).thenThrow(new ApiException()) @AT@ 3490 @LENGTH@ 66
------UPD MethodInvocation@@MethodName:when:[kp.send(Mockito.any())] @TO@ MethodName:when:[kp.send(Mockito.any(ProducerRecord.class))] @AT@ 3490 @LENGTH@ 36
---------UPD MethodInvocation@@kp.send(Mockito.any()) @TO@ kp.send(Mockito.any(ProducerRecord.class)) @AT@ 3503 @LENGTH@ 22
------------UPD SimpleName@@MethodName:send:[Mockito.any()] @TO@ MethodName:send:[Mockito.any(ProducerRecord.class)] @AT@ 3506 @LENGTH@ 19
---------------UPD MethodInvocation@@Mockito.any() @TO@ Mockito.any(ProducerRecord.class) @AT@ 3511 @LENGTH@ 13
------------------UPD SimpleName@@MethodName:any:[] @TO@ MethodName:any:[ProducerRecord.class] @AT@ 3519 @LENGTH@ 5
---------------------INS TypeLiteral@@ProducerRecord.class @TO@ SimpleName@@MethodName:any:[] @AT@ 3523 @LENGTH@ 20


UPD FieldDeclaration@@public, static, final, String, [CHIMERA_CRYPTO_CIPHER_SUITE_DEFAULT="AES/CTR/NoPadding"] @TO@ public, static, final, String, [CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_DEFAULT="AES/CTR/NoPadding"] @AT@ 1210 @LENGTH@ 92
---UPD VariableDeclarationFragment@@CHIMERA_CRYPTO_CIPHER_SUITE_DEFAULT="AES/CTR/NoPadding" @TO@ CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_DEFAULT="AES/CTR/NoPadding" @AT@ 1237 @LENGTH@ 64
------UPD SimpleName@@CHIMERA_CRYPTO_CIPHER_SUITE_DEFAULT @TO@ CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_DEFAULT @AT@ 1237 @LENGTH@ 35


INS IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @TO@ MethodDeclaration@@public, void, MethodName:parseURI, URI uri, Map<String,Object> parameters, NettyComponent component, String... supportedProtocols, Exception,  @AT@ 7879 @LENGTH@ 72
---INS InfixExpression@@uri.getPort() != -1 @TO@ IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @AT@ 7883 @LENGTH@ 19
------INS MethodInvocation@@uri.getPort() @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7883 @LENGTH@ 13
---------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getPort() @AT@ 7883 @LENGTH@ 3
---------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@uri.getPort() @AT@ 7887 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7896 @LENGTH@ 2
------INS PrefixExpression@@-1 @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7900 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7900 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7901 @LENGTH@ 1
---INS Block@@ThenBody:{  setPort(uri.getPort());} @TO@ IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @AT@ 7904 @LENGTH@ 47
------MOV ExpressionStatement@@MethodInvocation:setPort(uri.getPort()) @TO@ Block@@ThenBody:{  setPort(uri.getPort());} @AT@ 7879 @LENGTH@ 23


INS FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @TO@ TypeDeclaration@@[@RunWith(PowerMockRunner.class), @PrepareForTest({System.class}), abstract]BaseOAuth2AccessTokenJacksonTest,  @AT@ 2067 @LENGTH@ 204
---INS Modifier@@protected @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @AT@ 2067 @LENGTH@ 9
---INS Modifier@@static @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @AT@ 2077 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @AT@ 2084 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @AT@ 2090 @LENGTH@ 6
---INS VariableDeclarationFragment@@ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}" @TO@ FieldDeclaration@@protected, static, final, String, [ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}"] @AT@ 2097 @LENGTH@ 173
------INS SimpleName@@ACCESS_TOKEN_ARRAYSCOPE @TO@ VariableDeclarationFragment@@ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}" @AT@ 2097 @LENGTH@ 23
------INS StringLiteral@@"{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}" @TO@ VariableDeclarationFragment@@ACCESS_TOKEN_ARRAYSCOPE="{\"access_token\":\"token-value\",\"token_type\":\"bearer\",\"refresh_token\":\"refresh-value\",\"expires_in\":10,\"scope\":[\"read\",\"write\"]}" @AT@ 2123 @LENGTH@ 147


UPD MethodDeclaration@@public, voidMethodName:TerserExpression, String expression,  @TO@ voidMethodName:TerserExpression, String expression,  @AT@ 1185 @LENGTH@ 77
---DEL Modifier@@public @AT@ 1185 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint, Exception,  @TO@ voidMethodName:MyProducer, Endpoint endpoint, Exception,  @AT@ 1558 @LENGTH@ 115
---DEL Modifier@@public @AT@ 1558 @LENGTH@ 6


UPD Block@@WhileBody:{  String line=scanner.nextLine().trim();  if (ObjectHelper.isEmpty(line)) {    continue;  }  count++;  model=factory.factory();  String[] tokens=line.split(separator,-1);  List<String> result=Arrays.asList(tokens);  result=unquoteTokens(result,separator,quote);  if (result.size() == 0 || result.isEmpty()) {    throw new java.lang.IllegalArgumentException("No records have been defined in the CSV");  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Size of the record splitted : {}",result.size());    }    if (factory.getAutospanLine()) {      result=autospanLine(result,factory.getMaxpos(),separator);    }    factory.bind(result,model,count);    factory.link(model);    models.add(model);    LOG.debug("Graph of objects created: {}",model);  }} @TO@ WhileBody:{  String line=scanner.nextLine().trim();  if (ObjectHelper.isEmpty(line)) {    continue;  }  count++;  model=factory.factory();  String[] tokens=line.split(separator,factory.getAutospanLine() ? factory.getMaxpos() : -1);  List<String> result=Arrays.asList(tokens);  result=unquoteTokens(result,separator,quote);  if (result.size() == 0 || result.isEmpty()) {    throw new java.lang.IllegalArgumentException("No records have been defined in the CSV");  } else {    if (LOG.isDebugEnabled()) {      LOG.debug("Size of the record splitted : {}",result.size());    }    factory.bind(result,model,count);    factory.link(model);    models.add(model);    LOG.debug("Graph of objects created: {}",model);  }} @AT@ 5768 @LENGTH@ 1691
---UPD VariableDeclarationStatement@@String[] tokens=line.split(separator,-1); @TO@ String[] tokens=line.split(separator,factory.getAutospanLine() ? factory.getMaxpos() : -1); @AT@ 6314 @LENGTH@ 44
------UPD VariableDeclarationFragment@@tokens=line.split(separator,-1) @TO@ tokens=line.split(separator,factory.getAutospanLine() ? factory.getMaxpos() : -1) @AT@ 6323 @LENGTH@ 34
---------UPD MethodInvocation@@line.split(separator,-1) @TO@ line.split(separator,factory.getAutospanLine() ? factory.getMaxpos() : -1) @AT@ 6332 @LENGTH@ 25
------------UPD SimpleName@@MethodName:split:[separator, -1] @TO@ MethodName:split:[separator, factory.getAutospanLine() ? factory.getMaxpos() : -1] @AT@ 6337 @LENGTH@ 20
---------------INS ConditionalExpression@@factory.getAutospanLine() ? factory.getMaxpos() : -1 @TO@ SimpleName@@MethodName:split:[separator, -1] @AT@ 6354 @LENGTH@ 52
------------------INS MethodInvocation@@factory.getAutospanLine() @TO@ ConditionalExpression@@factory.getAutospanLine() ? factory.getMaxpos() : -1 @AT@ 6354 @LENGTH@ 25
---------------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getAutospanLine() @AT@ 6354 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getAutospanLine:[] @TO@ MethodInvocation@@factory.getAutospanLine() @AT@ 6362 @LENGTH@ 17
------------------INS MethodInvocation@@factory.getMaxpos() @TO@ ConditionalExpression@@factory.getAutospanLine() ? factory.getMaxpos() : -1 @AT@ 6382 @LENGTH@ 19
---------------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.getMaxpos() @AT@ 6382 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:getMaxpos:[] @TO@ MethodInvocation@@factory.getMaxpos() @AT@ 6390 @LENGTH@ 11
------------------INS PrefixExpression@@-1 @TO@ ConditionalExpression@@factory.getAutospanLine() ? factory.getMaxpos() : -1 @AT@ 6404 @LENGTH@ 2
---------------------MOV Operator@@- @TO@ PrefixExpression@@-1 @AT@ 6354 @LENGTH@ 1
---------------------MOV NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 6355 @LENGTH@ 1
---------------DEL PrefixExpression@@-1 @AT@ 6354 @LENGTH@ 2
---UPD IfStatement@@if (result.size() == 0 || result.isEmpty()) {  throw new java.lang.IllegalArgumentException("No records have been defined in the CSV");} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Size of the record splitted : {}",result.size());  }  if (factory.getAutospanLine()) {    result=autospanLine(result,factory.getMaxpos(),separator);  }  factory.bind(result,model,count);  factory.link(model);  models.add(model);  LOG.debug("Graph of objects created: {}",model);} @TO@ if (result.size() == 0 || result.isEmpty()) {  throw new java.lang.IllegalArgumentException("No records have been defined in the CSV");} else {  if (LOG.isDebugEnabled()) {    LOG.debug("Size of the record splitted : {}",result.size());  }  factory.bind(result,model,count);  factory.link(model);  models.add(model);  LOG.debug("Graph of objects created: {}",model);} @AT@ 6553 @LENGTH@ 892
------UPD Block@@ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Size of the record splitted : {}",result.size());  }  if (factory.getAutospanLine()) {    result=autospanLine(result,factory.getMaxpos(),separator);  }  factory.bind(result,model,count);  factory.link(model);  models.add(model);  LOG.debug("Graph of objects created: {}",model);} @TO@ ElseBody:{  if (LOG.isDebugEnabled()) {    LOG.debug("Size of the record splitted : {}",result.size());  }  factory.bind(result,model,count);  factory.link(model);  models.add(model);  LOG.debug("Graph of objects created: {}",model);} @AT@ 6731 @LENGTH@ 714
---------DEL IfStatement@@if (factory.getAutospanLine()) {  result=autospanLine(result,factory.getMaxpos(),separator);} @AT@ 6910 @LENGTH@ 141
------------DEL MethodInvocation@@factory.getAutospanLine() @AT@ 6914 @LENGTH@ 25
---------------DEL SimpleName@@Name:factory @AT@ 6914 @LENGTH@ 7
---------------DEL SimpleName@@MethodName:getAutospanLine:[] @AT@ 6922 @LENGTH@ 17
------------DEL Block@@ThenBody:{  result=autospanLine(result,factory.getMaxpos(),separator);} @AT@ 6941 @LENGTH@ 110
---------------DEL ExpressionStatement@@Assignment:result=autospanLine(result,factory.getMaxpos(),separator) @AT@ 6967 @LENGTH@ 62
------------------DEL Assignment@@result=autospanLine(result,factory.getMaxpos(),separator) @AT@ 6967 @LENGTH@ 61
---------------------DEL SimpleName@@result @AT@ 6967 @LENGTH@ 6
---------------------DEL Operator@@= @AT@ 6973 @LENGTH@ 1
---------------------DEL MethodInvocation@@autospanLine(result,factory.getMaxpos(),separator) @AT@ 6976 @LENGTH@ 52
------------------------DEL SimpleName@@MethodName:autospanLine:[result, factory.getMaxpos(), separator] @AT@ 6976 @LENGTH@ 52
---------------------------DEL SimpleName@@result @AT@ 6989 @LENGTH@ 6
---------------------------DEL MethodInvocation@@factory.getMaxpos() @AT@ 6997 @LENGTH@ 19
------------------------------DEL SimpleName@@Name:factory @AT@ 6997 @LENGTH@ 7
------------------------------DEL SimpleName@@MethodName:getMaxpos:[] @AT@ 7005 @LENGTH@ 11
---------------------------DEL SimpleName@@separator @AT@ 7018 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertTrue(response.toString(),response.get(FAILURE_DESCRIPTION).asString().contains(ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation())) @TO@ MethodInvocation:assertTrue(response.toString(),response.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0344")) @AT@ 4886 @LENGTH@ 145
---UPD MethodInvocation@@assertTrue(response.toString(),response.get(FAILURE_DESCRIPTION).asString().contains(ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation())) @TO@ assertTrue(response.toString(),response.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0344")) @AT@ 4886 @LENGTH@ 144
------UPD SimpleName@@MethodName:assertTrue:[response.toString(), response.get(FAILURE_DESCRIPTION).asString().contains(ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation())] @TO@ MethodName:assertTrue:[response.toString(), response.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0344")] @AT@ 4886 @LENGTH@ 144
---------UPD MethodInvocation@@response.get(FAILURE_DESCRIPTION).asString().contains(ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation()) @TO@ response.get(FAILURE_DESCRIPTION).asString().contains("WFLYCTL0344") @AT@ 4918 @LENGTH@ 111
------------UPD SimpleName@@MethodName:contains:[ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation()] @TO@ MethodName:contains:["WFLYCTL0344"] @AT@ 4963 @LENGTH@ 66
---------------INS StringLiteral@@"WFLYCTL0344" @TO@ SimpleName@@MethodName:contains:[ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation()] @AT@ 4915 @LENGTH@ 13
---------------INS StringLiteral@@"WFLYCTL0344" @TO@ SimpleName@@MethodName:contains:[ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation()] @AT@ 4915 @LENGTH@ 13
---------------DEL MethodInvocation@@ControllerLogger.ROOT_LOGGER.timeoutExecutingOperation() @AT@ 4972 @LENGTH@ 56
------------------DEL QualifiedName@@Name:ControllerLogger.ROOT_LOGGER @AT@ 4972 @LENGTH@ 28
------------------DEL SimpleName@@MethodName:timeoutExecutingOperation:[] @AT@ 5001 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:bodyBuilder.appendFormalLine("return new " + "AuthenticationAuditorAware();") @TO@ MethodInvocation:bodyBuilder.appendFormalLine(String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver))) @AT@ 5136 @LENGTH@ 78
---UPD MethodInvocation@@bodyBuilder.appendFormalLine("return new " + "AuthenticationAuditorAware();") @TO@ bodyBuilder.appendFormalLine(String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver))) @AT@ 5136 @LENGTH@ 77
------UPD SimpleName@@MethodName:appendFormalLine:["return new " + "AuthenticationAuditorAware();"] @TO@ MethodName:appendFormalLine:[String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver))] @AT@ 5148 @LENGTH@ 65
---------INS MethodInvocation@@String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)) @TO@ SimpleName@@MethodName:appendFormalLine:["return new " + "AuthenticationAuditorAware();"] @AT@ 5165 @LENGTH@ 123
------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)) @AT@ 5165 @LENGTH@ 6
------------INS SimpleName@@MethodName:format:["return new %s();", authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)] @TO@ MethodInvocation@@String.format("return new %s();",authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)) @AT@ 5172 @LENGTH@ 116
---------------INS StringLiteral@@"return new %s();" @TO@ SimpleName@@MethodName:format:["return new %s();", authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)] @AT@ 5179 @LENGTH@ 18
---------------INS MethodInvocation@@authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver) @TO@ SimpleName@@MethodName:format:["return new %s();", authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver)] @AT@ 5207 @LENGTH@ 80
------------------INS SimpleName@@Name:authenticationAuditorAware @TO@ MethodInvocation@@authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver) @AT@ 5207 @LENGTH@ 26
------------------INS SimpleName@@MethodName:getNameIncludingTypeParameters:[false, importResolver] @TO@ MethodInvocation@@authenticationAuditorAware.getNameIncludingTypeParameters(false,importResolver) @AT@ 5234 @LENGTH@ 53
---------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:getNameIncludingTypeParameters:[false, importResolver] @AT@ 5265 @LENGTH@ 5
---------------------INS SimpleName@@importResolver @TO@ SimpleName@@MethodName:getNameIncludingTypeParameters:[false, importResolver] @AT@ 5272 @LENGTH@ 14
---------DEL InfixExpression@@"return new " + "AuthenticationAuditorAware();" @AT@ 5165 @LENGTH@ 47
------------DEL StringLiteral@@"return new " @AT@ 5165 @LENGTH@ 13
------------DEL Operator@@+ @AT@ 5178 @LENGTH@ 1
------------DEL StringLiteral@@"AuthenticationAuditorAware();" @AT@ 5181 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:setOrder(Ordered.LOWEST_PRECEDENCE - 1) @TO@ MethodInvocation:setOrder(Ordered.LOWEST_PRECEDENCE - 2) @AT@ 4088 @LENGTH@ 40
---UPD MethodInvocation@@setOrder(Ordered.LOWEST_PRECEDENCE - 1) @TO@ setOrder(Ordered.LOWEST_PRECEDENCE - 2) @AT@ 4088 @LENGTH@ 39
------UPD SimpleName@@MethodName:setOrder:[Ordered.LOWEST_PRECEDENCE - 1] @TO@ MethodName:setOrder:[Ordered.LOWEST_PRECEDENCE - 2] @AT@ 4088 @LENGTH@ 39
---------UPD InfixExpression@@Ordered.LOWEST_PRECEDENCE - 1 @TO@ Ordered.LOWEST_PRECEDENCE - 2 @AT@ 4097 @LENGTH@ 29
------------UPD NumberLiteral@@1 @TO@ 2 @AT@ 4125 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:IronMqMessage, String body, Map<String,Object> headers,  @TO@ voidMethodName:IronMqMessage, String body, Map<String,Object> headers,  @AT@ 1221 @LENGTH@ 161
---DEL Modifier@@public @AT@ 1221 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[public]TestPojoView,  @AT@ 1548 @LENGTH@ 416
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1548 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1555 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1563 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1570 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 1570 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 1577 @LENGTH@ 1
---INS IfStatement@@if (this == o) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1590 @LENGTH@ 51
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1594 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 1594 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 1598 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 1602 @LENGTH@ 1
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1605 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1619 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1626 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1650 @LENGTH@ 82
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1654 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1654 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 1654 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 1655 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 1659 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1663 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1667 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1667 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1677 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1681 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 1681 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 1683 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1695 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1709 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1716 @LENGTH@ 5
---INS VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1742 @LENGTH@ 37
------INS SimpleType@@TestPojoView @TO@ VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @AT@ 1742 @LENGTH@ 12
------INS VariableDeclarationFragment@@that=(TestPojoView)o @TO@ VariableDeclarationStatement@@TestPojoView that=(TestPojoView)o; @AT@ 1755 @LENGTH@ 23
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(TestPojoView)o @AT@ 1755 @LENGTH@ 4
---------INS CastExpression@@(TestPojoView)o @TO@ VariableDeclarationFragment@@that=(TestPojoView)o @AT@ 1762 @LENGTH@ 16
------------INS SimpleType@@TestPojoView @TO@ CastExpression@@(TestPojoView)o @AT@ 1763 @LENGTH@ 12
------------INS SimpleName@@o @TO@ CastExpression@@(TestPojoView)o @AT@ 1777 @LENGTH@ 1
---INS IfStatement@@if (age != that.age) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1789 @LENGTH@ 58
------INS InfixExpression@@age != that.age @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1793 @LENGTH@ 15
---------INS SimpleName@@age @TO@ InfixExpression@@age != that.age @AT@ 1793 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@age != that.age @AT@ 1796 @LENGTH@ 2
---------INS QualifiedName@@that.age @TO@ InfixExpression@@age != that.age @AT@ 1800 @LENGTH@ 8
------------INS SimpleName@@that @TO@ QualifiedName@@that.age @AT@ 1800 @LENGTH@ 4
------------INS SimpleName@@age @TO@ QualifiedName@@that.age @AT@ 1805 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1810 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1824 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1831 @LENGTH@ 5
---INS IfStatement@@if (height != that.height) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1856 @LENGTH@ 64
------INS InfixExpression@@height != that.height @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1860 @LENGTH@ 21
---------INS SimpleName@@height @TO@ InfixExpression@@height != that.height @AT@ 1860 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@height != that.height @AT@ 1866 @LENGTH@ 2
---------INS QualifiedName@@that.height @TO@ InfixExpression@@height != that.height @AT@ 1870 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.height @AT@ 1870 @LENGTH@ 4
------------INS SimpleName@@height @TO@ QualifiedName@@that.height @AT@ 1875 @LENGTH@ 6
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1883 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1897 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1904 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:weight == that.weight @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1929 @LENGTH@ 29
------INS InfixExpression@@weight == that.weight @TO@ ReturnStatement@@InfixExpression:weight == that.weight @AT@ 1936 @LENGTH@ 21
---------INS SimpleName@@weight @TO@ InfixExpression@@weight == that.weight @AT@ 1936 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@weight == that.weight @AT@ 1942 @LENGTH@ 2
---------INS QualifiedName@@that.weight @TO@ InfixExpression@@weight == that.weight @AT@ 1946 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.weight @AT@ 1946 @LENGTH@ 4
------------INS SimpleName@@weight @TO@ QualifiedName@@that.weight @AT@ 1951 @LENGTH@ 6


UPD MethodDeclaration@@public, Set<E>, MethodName:rangeByLex, RedisZSetCommands.Range range, RedisZSetCommands.Limit limit,  @TO@ public, Set<E>, MethodName:rangeByLex, Range range, Limit limit,  @AT@ 4085 @LENGTH@ 139
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 4110 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 4110 @LENGTH@ 23
---UPD SingleVariableDeclaration@@RedisZSetCommands.Limit limit @TO@ Limit limit @AT@ 4141 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Limit @TO@ Limit @AT@ 4141 @LENGTH@ 23


UPD ExpressionStatement@@SuperMethodInvocation:super.setDependsOnGovernorBeingAClass(false) @TO@ SuperMethodInvocation:super.setDependsOnGovernorBeingAClass(true) @AT@ 1564 @LENGTH@ 45
---UPD SuperMethodInvocation@@super.setDependsOnGovernorBeingAClass(false) @TO@ super.setDependsOnGovernorBeingAClass(true) @AT@ 1564 @LENGTH@ 44
------UPD SimpleName@@MethodName:setDependsOnGovernorBeingAClass:[false] @TO@ MethodName:setDependsOnGovernorBeingAClass:[true] @AT@ 1570 @LENGTH@ 31
------UPD BooleanLiteral@@false @TO@ true @AT@ 1602 @LENGTH@ 5


UPD TypeDeclaration@@[public]PositionedCryptoOutputStream, CounterCryptoOutputStream @TO@ [public]PositionedCryptoOutputStream, CTRCryptoOutputStream @AT@ 1513 @LENGTH@ 1402
---UPD SimpleType@@CounterCryptoOutputStream @TO@ CTRCryptoOutputStream @AT@ 1563 @LENGTH@ 25


INS MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @TO@ TypeDeclaration@@[public]BasicQueryUnitTests,  @AT@ 4318 @LENGTH@ 396
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4318 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4325 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesFieldsIncludeCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4330 @LENGTH@ 29
---INS VariableDeclarationStatement@@String qry="{ \"name\" : \"Thomas\"}"; @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4369 @LENGTH@ 40
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String qry="{ \"name\" : \"Thomas\"}"; @AT@ 4369 @LENGTH@ 6
------INS VariableDeclarationFragment@@qry="{ \"name\" : \"Thomas\"}" @TO@ VariableDeclarationStatement@@String qry="{ \"name\" : \"Thomas\"}"; @AT@ 4376 @LENGTH@ 32
---------INS SimpleName@@qry @TO@ VariableDeclarationFragment@@qry="{ \"name\" : \"Thomas\"}" @AT@ 4376 @LENGTH@ 3
---------INS StringLiteral@@"{ \"name\" : \"Thomas\"}" @TO@ VariableDeclarationFragment@@qry="{ \"name\" : \"Thomas\"}" @AT@ 4382 @LENGTH@ 26
---INS VariableDeclarationStatement@@BasicQuery query1=new BasicQuery(qry); @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4415 @LENGTH@ 40
------INS SimpleType@@BasicQuery @TO@ VariableDeclarationStatement@@BasicQuery query1=new BasicQuery(qry); @AT@ 4415 @LENGTH@ 10
------INS VariableDeclarationFragment@@query1=new BasicQuery(qry) @TO@ VariableDeclarationStatement@@BasicQuery query1=new BasicQuery(qry); @AT@ 4426 @LENGTH@ 28
---------INS SimpleName@@query1 @TO@ VariableDeclarationFragment@@query1=new BasicQuery(qry) @AT@ 4426 @LENGTH@ 6
---------INS ClassInstanceCreation@@BasicQuery[qry] @TO@ VariableDeclarationFragment@@query1=new BasicQuery(qry) @AT@ 4435 @LENGTH@ 19
------------INS New@@new @TO@ ClassInstanceCreation@@BasicQuery[qry] @AT@ 4435 @LENGTH@ 3
------------INS SimpleType@@BasicQuery @TO@ ClassInstanceCreation@@BasicQuery[qry] @AT@ 4439 @LENGTH@ 10
------------INS SimpleName@@qry @TO@ ClassInstanceCreation@@BasicQuery[qry] @AT@ 4450 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:query1.fields().include("name") @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4458 @LENGTH@ 32
------INS MethodInvocation@@query1.fields().include("name") @TO@ ExpressionStatement@@MethodInvocation:query1.fields().include("name") @AT@ 4458 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:fields:[] @TO@ MethodInvocation@@query1.fields().include("name") @AT@ 4458 @LENGTH@ 15
---------INS SimpleName@@Name:query1 @TO@ MethodInvocation@@query1.fields().include("name") @AT@ 4458 @LENGTH@ 6
---------INS SimpleName@@MethodName:include:["name"] @TO@ MethodInvocation@@query1.fields().include("name") @AT@ 4474 @LENGTH@ 15
------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:include:["name"] @AT@ 4482 @LENGTH@ 6
---INS VariableDeclarationStatement@@DBObject fieldsObject=query1.getFieldsObject(); @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4496 @LENGTH@ 49
------INS SimpleType@@DBObject @TO@ VariableDeclarationStatement@@DBObject fieldsObject=query1.getFieldsObject(); @AT@ 4496 @LENGTH@ 8
------INS VariableDeclarationFragment@@fieldsObject=query1.getFieldsObject() @TO@ VariableDeclarationStatement@@DBObject fieldsObject=query1.getFieldsObject(); @AT@ 4505 @LENGTH@ 39
---------INS SimpleName@@fieldsObject @TO@ VariableDeclarationFragment@@fieldsObject=query1.getFieldsObject() @AT@ 4505 @LENGTH@ 12
---------INS MethodInvocation@@query1.getFieldsObject() @TO@ VariableDeclarationFragment@@fieldsObject=query1.getFieldsObject() @AT@ 4520 @LENGTH@ 24
------------INS SimpleName@@Name:query1 @TO@ MethodInvocation@@query1.getFieldsObject() @AT@ 4520 @LENGTH@ 6
------------INS SimpleName@@MethodName:getFieldsObject:[] @TO@ MethodInvocation@@query1.getFieldsObject() @AT@ 4527 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:fieldsObject.containsField("name") @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4548 @LENGTH@ 35
------INS MethodInvocation@@fieldsObject.containsField("name") @TO@ ExpressionStatement@@MethodInvocation:fieldsObject.containsField("name") @AT@ 4548 @LENGTH@ 34
---------INS SimpleName@@Name:fieldsObject @TO@ MethodInvocation@@fieldsObject.containsField("name") @AT@ 4548 @LENGTH@ 12
---------INS SimpleName@@MethodName:containsField:["name"] @TO@ MethodInvocation@@fieldsObject.containsField("name") @AT@ 4561 @LENGTH@ 21
------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:containsField:["name"] @AT@ 4575 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(query1.getFieldsObject(),notNullValue()) @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4586 @LENGTH@ 53
------INS MethodInvocation@@assertThat(query1.getFieldsObject(),notNullValue()) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query1.getFieldsObject(),notNullValue()) @AT@ 4586 @LENGTH@ 52
---------INS SimpleName@@MethodName:assertThat:[query1.getFieldsObject(), notNullValue()] @TO@ MethodInvocation@@assertThat(query1.getFieldsObject(),notNullValue()) @AT@ 4586 @LENGTH@ 52
------------INS MethodInvocation@@query1.getFieldsObject() @TO@ SimpleName@@MethodName:assertThat:[query1.getFieldsObject(), notNullValue()] @AT@ 4597 @LENGTH@ 24
---------------INS SimpleName@@Name:query1 @TO@ MethodInvocation@@query1.getFieldsObject() @AT@ 4597 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getFieldsObject:[] @TO@ MethodInvocation@@query1.getFieldsObject() @AT@ 4604 @LENGTH@ 17
------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:assertThat:[query1.getFieldsObject(), notNullValue()] @AT@ 4623 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(query1.getFieldsObject().containsField("name"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:handlesFieldsIncludeCorrectly,  @AT@ 4642 @LENGTH@ 69
------INS MethodInvocation@@assertThat(query1.getFieldsObject().containsField("name"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(query1.getFieldsObject().containsField("name"),is(true)) @AT@ 4642 @LENGTH@ 68
---------INS SimpleName@@MethodName:assertThat:[query1.getFieldsObject().containsField("name"), is(true)] @TO@ MethodInvocation@@assertThat(query1.getFieldsObject().containsField("name"),is(true)) @AT@ 4642 @LENGTH@ 68
------------INS MethodInvocation@@query1.getFieldsObject().containsField("name") @TO@ SimpleName@@MethodName:assertThat:[query1.getFieldsObject().containsField("name"), is(true)] @AT@ 4653 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:getFieldsObject:[] @TO@ MethodInvocation@@query1.getFieldsObject().containsField("name") @AT@ 4653 @LENGTH@ 24
---------------INS SimpleName@@Name:query1 @TO@ MethodInvocation@@query1.getFieldsObject().containsField("name") @AT@ 4653 @LENGTH@ 6
---------------INS SimpleName@@MethodName:containsField:["name"] @TO@ MethodInvocation@@query1.getFieldsObject().containsField("name") @AT@ 4678 @LENGTH@ 21
------------------INS StringLiteral@@"name" @TO@ SimpleName@@MethodName:containsField:["name"] @AT@ 4692 @LENGTH@ 6
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[query1.getFieldsObject().containsField("name"), is(true)] @AT@ 4701 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 4701 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 4704 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @TO@ MethodInvocation:assertThat(new String(result)).isNotEqualTo(new String(encryptor.encrypt("text".getBytes()))) @AT@ 1316 @LENGTH@ 103
---DEL MethodInvocation@@assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @AT@ 1316 @LENGTH@ 102
------DEL SimpleName@@MethodName:assertThat:[new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))] @AT@ 1316 @LENGTH@ 102
---MOV MethodInvocation@@new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @AT@ 1327 @LENGTH@ 90
------INS MethodInvocation@@MethodName:assertThat:[new String(result)] @TO@ MethodInvocation@@new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes()))) @AT@ 1180 @LENGTH@ 30
---------MOV ClassInstanceCreation@@String[result] @TO@ MethodInvocation@@MethodName:assertThat:[new String(result)] @AT@ 1327 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:isFalse:[] @AT@ 1327 @LENGTH@ 28
------UPD SimpleName@@MethodName:equals:[new String(encryptor.encrypt("text".getBytes()))] @TO@ MethodName:isNotEqualTo:[new String(encryptor.encrypt("text".getBytes()))] @AT@ 1356 @LENGTH@ 61


UPD MethodDeclaration@@public, voidMethodName:ProductionContext, ZooKeeper connection, Exchange exchange,  @TO@ voidMethodName:ProductionContext, ZooKeeper connection, Exchange exchange,  @AT@ 6562 @LENGTH@ 385
---DEL Modifier@@public @AT@ 6562 @LENGTH@ 6


UPD CatchClause@@catch (Throwable e) {} @TO@ catch (Throwable e) {  dumpExceptionToErrorFile("camel-apt-error.log","Error processing @UriEndpoint",e);} @AT@ 3644 @LENGTH@ 53
---INS ExpressionStatement@@MethodInvocation:dumpExceptionToErrorFile("camel-apt-error.log","Error processing @UriEndpoint",e) @TO@ CatchClause@@catch (Throwable e) {} @AT@ 3678 @LENGTH@ 84
------INS MethodInvocation@@dumpExceptionToErrorFile("camel-apt-error.log","Error processing @UriEndpoint",e) @TO@ ExpressionStatement@@MethodInvocation:dumpExceptionToErrorFile("camel-apt-error.log","Error processing @UriEndpoint",e) @AT@ 3678 @LENGTH@ 83
---------INS SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing @UriEndpoint", e] @TO@ MethodInvocation@@dumpExceptionToErrorFile("camel-apt-error.log","Error processing @UriEndpoint",e) @AT@ 3678 @LENGTH@ 83
------------INS StringLiteral@@"camel-apt-error.log" @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing @UriEndpoint", e] @AT@ 3703 @LENGTH@ 21
------------INS StringLiteral@@"Error processing @UriEndpoint" @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing @UriEndpoint", e] @AT@ 3726 @LENGTH@ 31
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing @UriEndpoint", e] @AT@ 3759 @LENGTH@ 1


UPD IfStatement@@if (!showAllRemaining) {  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }      break;    }  }} else {  for (  final CliOption include : unspecified) {    if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }    }  }  if (hasShellContextParameter(methodTarget.getMethod())) {    for (    String parameter : globalParameters) {      if (!options.containsKey(parameter)) {        if (!"".equals(parameter)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));          }        }      }    }  }} @TO@ if (!showAllRemaining) {  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }      break;    }  }} else {  for (  final CliOption include : unspecified) {    if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }    }  }  if (hasShellContextParameter(methodTarget.getMethod())) {    for (    String parameter : globalParameters) {      if (!options.containsKey(parameter)) {        if (!"".equals(parameter)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));          }        }      }    }  }} @AT@ 48323 @LENGTH@ 4511
---UPD Block@@ThenBody:{  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }      break;    }  }} @TO@ ThenBody:{  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }      break;    }  }} @AT@ 48346 @LENGTH@ 1505
------UPD EnhancedForStatement@@for (final CliOption include : unspecified) {  if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {    for (    final String value : include.key()) {      if (!"".equals(value)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(value).concat(" ")));        }      }    }    break;  }} @TO@ for (final CliOption include : unspecified) {  if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {    for (    final String value : include.key()) {      if (!"".equals(value)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(value).concat(" ")));        }      }    }    break;  }} @AT@ 48360 @LENGTH@ 1481
---------UPD IfStatement@@if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }  break;} @TO@ if (isMandatoryParam(methodTarget.getKey(),include,shellContext) && isVisibleParam(methodTarget.getKey(),include,shellContext)) {  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }  break;} @AT@ 48422 @LENGTH@ 1405
------------UPD Block@@ThenBody:{  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }  break;} @TO@ ThenBody:{  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }  break;} @AT@ 48634 @LENGTH@ 1193
---------------UPD EnhancedForStatement@@for (final String value : include.key()) {  if (!"".equals(value)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(value).concat(" ")));    }  }} @TO@ for (final String value : include.key()) {  if (!"".equals(value)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(value).concat(" ")));    }  }} @AT@ 48718 @LENGTH@ 1064
------------------UPD IfStatement@@if (!"".equals(value)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @TO@ if (!"".equals(value)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @AT@ 48785 @LENGTH@ 975
---------------------UPD Block@@ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @TO@ ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @AT@ 48808 @LENGTH@ 952
------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 48923 @LENGTH@ 811
---------------------------UPD Block@@ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 49206 @LENGTH@ 528
------------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 49206 @LENGTH@ 528
---------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @TO@ IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 49210 @LENGTH@ 136
------------------------------------MOV MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" -") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 49210 @LENGTH@ 85
------------------------------------INS Operator@@|| @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 49295 @LENGTH@ 2
------------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 49299 @LENGTH@ 47
---------------------------------------INS MethodInvocation@@methodTarget.getRemainingBuffer().length() @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 49299 @LENGTH@ 42
------------------------------------------INS MethodInvocation@@MethodName:getRemainingBuffer:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 49299 @LENGTH@ 33
------------------------------------------INS SimpleName@@Name:methodTarget @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 49299 @LENGTH@ 12
------------------------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 49333 @LENGTH@ 8
---------------------------------------INS Operator@@== @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 49341 @LENGTH@ 2
---------------------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 49345 @LENGTH@ 1
---UPD Block@@ElseBody:{  for (  final CliOption include : unspecified) {    if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }    }  }  if (hasShellContextParameter(methodTarget.getMethod())) {    for (    String parameter : globalParameters) {      if (!options.containsKey(parameter)) {        if (!"".equals(parameter)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));          }        }      }    }  }} @TO@ ElseBody:{  for (  final CliOption include : unspecified) {    if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {      for (      final String value : include.key()) {        if (!"".equals(value)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(value).concat(" ")));          }        }      }    }  }  if (hasShellContextParameter(methodTarget.getMethod())) {    for (    String parameter : globalParameters) {      if (!options.containsKey(parameter)) {        if (!"".equals(parameter)) {          if (methodTarget.getRemainingBuffer().endsWith("--")) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));          } else           if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {            results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));          } else {            results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));          }        }      }    }  }} @AT@ 49865 @LENGTH@ 2969
------UPD EnhancedForStatement@@for (final CliOption include : unspecified) {  if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {    for (    final String value : include.key()) {      if (!"".equals(value)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(value).concat(" ")));        }      }    }  }} @TO@ for (final CliOption include : unspecified) {  if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {    for (    final String value : include.key()) {      if (!"".equals(value)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(value).concat(" ")));        }      }    }  }} @AT@ 49931 @LENGTH@ 1312
---------UPD IfStatement@@if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }} @TO@ if (isVisibleParam(methodTarget.getKey(),include,shellContext)) {  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }} @AT@ 49994 @LENGTH@ 1235
------------UPD Block@@ThenBody:{  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }} @TO@ ThenBody:{  for (  final String value : include.key()) {    if (!"".equals(value)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(value).concat(" ")));      }    }  }} @AT@ 50084 @LENGTH@ 1145
---------------UPD EnhancedForStatement@@for (final String value : include.key()) {  if (!"".equals(value)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(value).concat(" ")));    }  }} @TO@ for (final String value : include.key()) {  if (!"".equals(value)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(value).concat(" ")));    }  }} @AT@ 50158 @LENGTH@ 1053
------------------UPD IfStatement@@if (!"".equals(value)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @TO@ if (!"".equals(value)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @AT@ 50225 @LENGTH@ 964
---------------------UPD Block@@ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @TO@ ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(value).concat(" ")));  }} @AT@ 50248 @LENGTH@ 941
------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(value).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 50352 @LENGTH@ 811
---------------------------UPD Block@@ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 50635 @LENGTH@ 528
------------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 50635 @LENGTH@ 528
---------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @TO@ IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(value).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(value).concat(" ")));} @AT@ 50690 @LENGTH@ 136
------------------------------------MOV MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" -") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 50639 @LENGTH@ 85
------------------------------------MOV MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" -") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 50639 @LENGTH@ 85
------------------------------------INS Operator@@|| @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 50775 @LENGTH@ 2
------------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 50779 @LENGTH@ 47
---------------------------------------INS MethodInvocation@@methodTarget.getRemainingBuffer().length() @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 50779 @LENGTH@ 42
------------------------------------------INS MethodInvocation@@MethodName:getRemainingBuffer:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 50779 @LENGTH@ 33
------------------------------------------INS SimpleName@@Name:methodTarget @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 50779 @LENGTH@ 12
------------------------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 50813 @LENGTH@ 8
---------------------------------------INS Operator@@== @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 50821 @LENGTH@ 2
---------------------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 50825 @LENGTH@ 1
------UPD IfStatement@@if (hasShellContextParameter(methodTarget.getMethod())) {  for (  String parameter : globalParameters) {    if (!options.containsKey(parameter)) {      if (!"".equals(parameter)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));        }      }    }  }} @TO@ if (hasShellContextParameter(methodTarget.getMethod())) {  for (  String parameter : globalParameters) {    if (!options.containsKey(parameter)) {      if (!"".equals(parameter)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));        }      }    }  }} @AT@ 51523 @LENGTH@ 1301
---------UPD Block@@ThenBody:{  for (  String parameter : globalParameters) {    if (!options.containsKey(parameter)) {      if (!"".equals(parameter)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));        }      }    }  }} @TO@ ThenBody:{  for (  String parameter : globalParameters) {    if (!options.containsKey(parameter)) {      if (!"".equals(parameter)) {        if (methodTarget.getRemainingBuffer().endsWith("--")) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));        } else         if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {          results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));        } else {          results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));        }      }    }  }} @AT@ 51579 @LENGTH@ 1245
------------UPD EnhancedForStatement@@for (String parameter : globalParameters) {  if (!options.containsKey(parameter)) {    if (!"".equals(parameter)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));      }    }  }} @TO@ for (String parameter : globalParameters) {  if (!options.containsKey(parameter)) {    if (!"".equals(parameter)) {      if (methodTarget.getRemainingBuffer().endsWith("--")) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));      } else       if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {        results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));      } else {        results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));      }    }  }} @AT@ 51597 @LENGTH@ 1213
---------------UPD IfStatement@@if (!options.containsKey(parameter)) {  if (!"".equals(parameter)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));    }  }} @TO@ if (!options.containsKey(parameter)) {  if (!"".equals(parameter)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));    }  }} @AT@ 51735 @LENGTH@ 1057
------------------UPD Block@@ThenBody:{  if (!"".equals(parameter)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));    }  }} @TO@ ThenBody:{  if (!"".equals(parameter)) {    if (methodTarget.getRemainingBuffer().endsWith("--")) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));    } else     if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {      results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));    } else {      results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));    }  }} @AT@ 51772 @LENGTH@ 1020
---------------------UPD IfStatement@@if (!"".equals(parameter)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));  }} @TO@ if (!"".equals(parameter)) {  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));  }} @AT@ 51798 @LENGTH@ 972
------------------------UPD Block@@ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));  }} @TO@ ThenBody:{  if (methodTarget.getRemainingBuffer().endsWith("--")) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));  } else   if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {    results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));  } else {    results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));  }} @AT@ 51825 @LENGTH@ 945
---------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith("--")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat(parameter).concat(" ")));} else if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @AT@ 51929 @LENGTH@ 815
------------------------------UPD Block@@ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @TO@ ElseBody:if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @AT@ 52216 @LENGTH@ 528
---------------------------------UPD IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @TO@ if (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @AT@ 52216 @LENGTH@ 528
------------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @TO@ IfStatement@@if (methodTarget.getRemainingBuffer().endsWith(" -")) {  results.add(new Completion(StringUtils.stripEnd(translated,null).concat("-").concat(parameter).concat(" ")));} else {  results.add(new Completion(translated.concat("--").concat(parameter).concat(" ")));} @AT@ 52322 @LENGTH@ 136
---------------------------------------MOV MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" -") @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 52220 @LENGTH@ 85
---------------------------------------INS Operator@@|| @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 52407 @LENGTH@ 2
---------------------------------------INS InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().length() == 1 @AT@ 52411 @LENGTH@ 47
------------------------------------------INS MethodInvocation@@methodTarget.getRemainingBuffer().length() @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 52411 @LENGTH@ 42
---------------------------------------------INS MethodInvocation@@MethodName:getRemainingBuffer:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 52411 @LENGTH@ 33
---------------------------------------------INS SimpleName@@Name:methodTarget @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 52411 @LENGTH@ 12
---------------------------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@methodTarget.getRemainingBuffer().length() @AT@ 52445 @LENGTH@ 8
------------------------------------------INS Operator@@== @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 52453 @LENGTH@ 2
------------------------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@methodTarget.getRemainingBuffer().length() == 1 @AT@ 52457 @LENGTH@ 1


UPD VariableDeclarationStatement@@final DependenciesType dependencies=this.descriptor.getOrCreateDeployment().getOrCreateDependencies(); @TO@ DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>> dependencies=this.descriptor.getOrCreateDeployment().getOrCreateDependencies(); @AT@ 1934 @LENGTH@ 138
---DEL Modifier@@final @AT@ 1934 @LENGTH@ 5
---DEL SimpleType@@DependenciesType @AT@ 1940 @LENGTH@ 16
---INS ParameterizedType@@DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>> @TO@ VariableDeclarationStatement@@final DependenciesType dependencies=this.descriptor.getOrCreateDeployment().getOrCreateDependencies(); @AT@ 1975 @LENGTH@ 68
------INS SimpleType@@DependenciesType @TO@ ParameterizedType@@DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>> @AT@ 1975 @LENGTH@ 16
------INS ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @TO@ ParameterizedType@@DependenciesType<DeploymentType<JBossDeploymentStructureDescriptor>> @AT@ 1992 @LENGTH@ 50
---------INS SimpleType@@DeploymentType @TO@ ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @AT@ 1992 @LENGTH@ 14
---------INS SimpleType@@JBossDeploymentStructureDescriptor @TO@ ParameterizedType@@DeploymentType<JBossDeploymentStructureDescriptor> @AT@ 2007 @LENGTH@ 34


INS MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(classes={RepositoryTestsConfig.class,PersistentEntitySerializationTests.TestConfig.class}), @Transactional, public]PersistentEntitySerializationTests,  @AT@ 10847 @LENGTH@ 469
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10847 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10854 @LENGTH@ 4
---INS SimpleName@@MethodName:rendersProjectionWithinSimpleResourceCorrectly @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10859 @LENGTH@ 46
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10915 @LENGTH@ 9
---INS VariableDeclarationStatement@@Person person=new Person("Dave","Matthews"); @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10930 @LENGTH@ 47
------INS SimpleType@@Person @TO@ VariableDeclarationStatement@@Person person=new Person("Dave","Matthews"); @AT@ 10930 @LENGTH@ 6
------INS VariableDeclarationFragment@@person=new Person("Dave","Matthews") @TO@ VariableDeclarationStatement@@Person person=new Person("Dave","Matthews"); @AT@ 10937 @LENGTH@ 39
---------INS SimpleName@@person @TO@ VariableDeclarationFragment@@person=new Person("Dave","Matthews") @AT@ 10937 @LENGTH@ 6
---------INS ClassInstanceCreation@@Person["Dave", "Matthews"] @TO@ VariableDeclarationFragment@@person=new Person("Dave","Matthews") @AT@ 10946 @LENGTH@ 30
------------INS New@@new @TO@ ClassInstanceCreation@@Person["Dave", "Matthews"] @AT@ 10946 @LENGTH@ 3
------------INS SimpleType@@Person @TO@ ClassInstanceCreation@@Person["Dave", "Matthews"] @AT@ 10950 @LENGTH@ 6
------------INS StringLiteral@@"Dave" @TO@ ClassInstanceCreation@@Person["Dave", "Matthews"] @AT@ 10957 @LENGTH@ 6
------------INS StringLiteral@@"Matthews" @TO@ ClassInstanceCreation@@Person["Dave", "Matthews"] @AT@ 10965 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:person.setId(1L) @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 10980 @LENGTH@ 17
------INS MethodInvocation@@person.setId(1L) @TO@ ExpressionStatement@@MethodInvocation:person.setId(1L) @AT@ 10980 @LENGTH@ 16
---------INS SimpleName@@Name:person @TO@ MethodInvocation@@person.setId(1L) @AT@ 10980 @LENGTH@ 6
---------INS SimpleName@@MethodName:setId:[1L] @TO@ MethodInvocation@@person.setId(1L) @AT@ 10987 @LENGTH@ 9
------------INS NumberLiteral@@1L @TO@ SimpleName@@MethodName:setId:[1L] @AT@ 10993 @LENGTH@ 2
---INS VariableDeclarationStatement@@ProjectionFactory factory=new SpelAwareProxyProjectionFactory(); @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 11001 @LENGTH@ 66
------INS SimpleType@@ProjectionFactory @TO@ VariableDeclarationStatement@@ProjectionFactory factory=new SpelAwareProxyProjectionFactory(); @AT@ 11001 @LENGTH@ 17
------INS VariableDeclarationFragment@@factory=new SpelAwareProxyProjectionFactory() @TO@ VariableDeclarationStatement@@ProjectionFactory factory=new SpelAwareProxyProjectionFactory(); @AT@ 11019 @LENGTH@ 47
---------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=new SpelAwareProxyProjectionFactory() @AT@ 11019 @LENGTH@ 7
---------INS ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @TO@ VariableDeclarationFragment@@factory=new SpelAwareProxyProjectionFactory() @AT@ 11029 @LENGTH@ 37
------------INS New@@new @TO@ ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @AT@ 11029 @LENGTH@ 3
------------INS SimpleType@@SpelAwareProxyProjectionFactory @TO@ ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @AT@ 11033 @LENGTH@ 31
---INS VariableDeclarationStatement@@PersonSummary projection=factory.createProjection(PersonSummary.class,person); @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 11070 @LENGTH@ 81
------INS SimpleType@@PersonSummary @TO@ VariableDeclarationStatement@@PersonSummary projection=factory.createProjection(PersonSummary.class,person); @AT@ 11070 @LENGTH@ 13
------INS VariableDeclarationFragment@@projection=factory.createProjection(PersonSummary.class,person) @TO@ VariableDeclarationStatement@@PersonSummary projection=factory.createProjection(PersonSummary.class,person); @AT@ 11084 @LENGTH@ 66
---------INS SimpleName@@projection @TO@ VariableDeclarationFragment@@projection=factory.createProjection(PersonSummary.class,person) @AT@ 11084 @LENGTH@ 10
---------INS MethodInvocation@@factory.createProjection(PersonSummary.class,person) @TO@ VariableDeclarationFragment@@projection=factory.createProjection(PersonSummary.class,person) @AT@ 11097 @LENGTH@ 53
------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.createProjection(PersonSummary.class,person) @AT@ 11097 @LENGTH@ 7
------------INS SimpleName@@MethodName:createProjection:[PersonSummary.class, person] @TO@ MethodInvocation@@factory.createProjection(PersonSummary.class,person) @AT@ 11105 @LENGTH@ 45
---------------INS TypeLiteral@@PersonSummary.class @TO@ SimpleName@@MethodName:createProjection:[PersonSummary.class, person] @AT@ 11122 @LENGTH@ 19
---------------INS SimpleName@@person @TO@ SimpleName@@MethodName:createProjection:[PersonSummary.class, person] @AT@ 11143 @LENGTH@ 6
---INS VariableDeclarationStatement@@String result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)); @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 11155 @LENGTH@ 83
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)); @AT@ 11155 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @TO@ VariableDeclarationStatement@@String result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)); @AT@ 11162 @LENGTH@ 75
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @AT@ 11162 @LENGTH@ 6
---------INS MethodInvocation@@mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @TO@ VariableDeclarationFragment@@result=mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @AT@ 11171 @LENGTH@ 66
------------INS SimpleName@@Name:mapper @TO@ MethodInvocation@@mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @AT@ 11171 @LENGTH@ 6
------------INS SimpleName@@MethodName:writeValueAsString:[new Resource<PersonSummary>(projection)] @TO@ MethodInvocation@@mapper.writeValueAsString(new Resource<PersonSummary>(projection)) @AT@ 11178 @LENGTH@ 59
---------------INS ClassInstanceCreation@@Resource<PersonSummary>[projection] @TO@ SimpleName@@MethodName:writeValueAsString:[new Resource<PersonSummary>(projection)] @AT@ 11197 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@Resource<PersonSummary>[projection] @AT@ 11197 @LENGTH@ 3
------------------INS ParameterizedType@@Resource<PersonSummary> @TO@ ClassInstanceCreation@@Resource<PersonSummary>[projection] @AT@ 11201 @LENGTH@ 23
---------------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<PersonSummary> @AT@ 11201 @LENGTH@ 8
---------------------INS SimpleType@@PersonSummary @TO@ ParameterizedType@@Resource<PersonSummary> @AT@ 11210 @LENGTH@ 13
------------------INS SimpleName@@projection @TO@ ClassInstanceCreation@@Resource<PersonSummary>[projection] @AT@ 11225 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(JsonPath.read(result,"$._links.self"),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:rendersProjectionWithinSimpleResourceCorrectly, Exception,  @AT@ 11242 @LENGTH@ 71
------INS MethodInvocation@@assertThat(JsonPath.read(result,"$._links.self"),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(JsonPath.read(result,"$._links.self"),is(notNullValue())) @AT@ 11242 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertThat:[JsonPath.read(result,"$._links.self"), is(notNullValue())] @TO@ MethodInvocation@@assertThat(JsonPath.read(result,"$._links.self"),is(notNullValue())) @AT@ 11242 @LENGTH@ 70
------------INS MethodInvocation@@JsonPath.read(result,"$._links.self") @TO@ SimpleName@@MethodName:assertThat:[JsonPath.read(result,"$._links.self"), is(notNullValue())] @AT@ 11253 @LENGTH@ 38
---------------INS SimpleName@@Name:JsonPath @TO@ MethodInvocation@@JsonPath.read(result,"$._links.self") @AT@ 11253 @LENGTH@ 8
---------------INS SimpleName@@MethodName:read:[result, "$._links.self"] @TO@ MethodInvocation@@JsonPath.read(result,"$._links.self") @AT@ 11262 @LENGTH@ 29
------------------INS SimpleName@@result @TO@ SimpleName@@MethodName:read:[result, "$._links.self"] @AT@ 11267 @LENGTH@ 6
------------------INS StringLiteral@@"$._links.self" @TO@ SimpleName@@MethodName:read:[result, "$._links.self"] @AT@ 11275 @LENGTH@ 15
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[JsonPath.read(result,"$._links.self"), is(notNullValue())] @AT@ 11293 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 11293 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 11296 @LENGTH@ 14


UPD MethodDeclaration@@public, voidMethodName:MultipartHeaderFilterStrategy,  @TO@ voidMethodName:MultipartHeaderFilterStrategy,  @AT@ 1745 @LENGTH@ 76
---DEL Modifier@@public @AT@ 1745 @LENGTH@ 6


INS MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @TO@ TypeDeclaration@@[public]MetricsTestUtils,  @AT@ 2350 @LENGTH@ 284
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2350 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2357 @LENGTH@ 6
---INS ArrayType@@byte[] @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2364 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 2364 @LENGTH@ 4
---INS SimpleName@@MethodName:getFileData @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2371 @LENGTH@ 11
---INS SingleVariableDeclaration@@String path @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2383 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String path @AT@ 2383 @LENGTH@ 6
------INS SimpleName@@path @TO@ SingleVariableDeclaration@@String path @AT@ 2390 @LENGTH@ 4
---INS SingleVariableDeclaration@@int timeoutInterval @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2396 @LENGTH@ 19
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int timeoutInterval @AT@ 2396 @LENGTH@ 3
------INS SimpleName@@timeoutInterval @TO@ SingleVariableDeclaration@@int timeoutInterval @AT@ 2400 @LENGTH@ 15
---INS SingleVariableDeclaration@@int tries @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2417 @LENGTH@ 9
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@int tries @AT@ 2417 @LENGTH@ 3
------INS SimpleName@@tries @TO@ SingleVariableDeclaration@@int tries @AT@ 2421 @LENGTH@ 5
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2435 @LENGTH@ 9
---INS VariableDeclarationStatement@@File file=new File(path); @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2451 @LENGTH@ 27
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File file=new File(path); @AT@ 2451 @LENGTH@ 4
------INS VariableDeclarationFragment@@file=new File(path) @TO@ VariableDeclarationStatement@@File file=new File(path); @AT@ 2456 @LENGTH@ 21
---------INS SimpleName@@file @TO@ VariableDeclarationFragment@@file=new File(path) @AT@ 2456 @LENGTH@ 4
---------INS ClassInstanceCreation@@File[path] @TO@ VariableDeclarationFragment@@file=new File(path) @AT@ 2463 @LENGTH@ 14
------------INS New@@new @TO@ ClassInstanceCreation@@File[path] @AT@ 2463 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[path] @AT@ 2467 @LENGTH@ 4
------------INS SimpleName@@path @TO@ ClassInstanceCreation@@File[path] @AT@ 2472 @LENGTH@ 4
---INS DoStatement@@do {  Thread.sleep(timeoutInterval);  tries--;} while (tries > 0 && !file.exists()); @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2483 @LENGTH@ 99
------INS ExpressionStatement@@MethodInvocation:Thread.sleep(timeoutInterval) @TO@ DoStatement@@do {  Thread.sleep(timeoutInterval);  tries--;} while (tries > 0 && !file.exists()); @AT@ 2494 @LENGTH@ 30
---------INS MethodInvocation@@Thread.sleep(timeoutInterval) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(timeoutInterval) @AT@ 2494 @LENGTH@ 29
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(timeoutInterval) @AT@ 2494 @LENGTH@ 6
------------INS SimpleName@@MethodName:sleep:[timeoutInterval] @TO@ MethodInvocation@@Thread.sleep(timeoutInterval) @AT@ 2501 @LENGTH@ 22
---------------INS SimpleName@@timeoutInterval @TO@ SimpleName@@MethodName:sleep:[timeoutInterval] @AT@ 2507 @LENGTH@ 15
------INS ExpressionStatement@@PostfixExpression:tries-- @TO@ DoStatement@@do {  Thread.sleep(timeoutInterval);  tries--;} while (tries > 0 && !file.exists()); @AT@ 2531 @LENGTH@ 8
---------INS PostfixExpression@@tries-- @TO@ ExpressionStatement@@PostfixExpression:tries-- @AT@ 2531 @LENGTH@ 7
------------INS SimpleName@@tries @TO@ PostfixExpression@@tries-- @AT@ 2531 @LENGTH@ 5
------------INS Operator@@-- @TO@ PostfixExpression@@tries-- @AT@ 2537 @LENGTH@ 2
------INS InfixExpression@@tries > 0 && !file.exists() @TO@ DoStatement@@do {  Thread.sleep(timeoutInterval);  tries--;} while (tries > 0 && !file.exists()); @AT@ 2553 @LENGTH@ 27
---------INS InfixExpression@@tries > 0 @TO@ InfixExpression@@tries > 0 && !file.exists() @AT@ 2553 @LENGTH@ 9
------------INS SimpleName@@tries @TO@ InfixExpression@@tries > 0 @AT@ 2553 @LENGTH@ 5
------------INS Operator@@> @TO@ InfixExpression@@tries > 0 @AT@ 2558 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@tries > 0 @AT@ 2561 @LENGTH@ 1
---------INS Operator@@&& @TO@ InfixExpression@@tries > 0 && !file.exists() @AT@ 2562 @LENGTH@ 2
---------INS PrefixExpression@@!file.exists() @TO@ InfixExpression@@tries > 0 && !file.exists() @AT@ 2566 @LENGTH@ 14
------------INS Operator@@! @TO@ PrefixExpression@@!file.exists() @AT@ 2566 @LENGTH@ 1
------------INS MethodInvocation@@file.exists() @TO@ PrefixExpression@@!file.exists() @AT@ 2567 @LENGTH@ 13
---------------INS SimpleName@@Name:file @TO@ MethodInvocation@@file.exists() @AT@ 2567 @LENGTH@ 4
---------------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@file.exists() @AT@ 2572 @LENGTH@ 8
---INS ReturnStatement@@MethodInvocation:Files.readAllBytes(Paths.get(path)) @TO@ MethodDeclaration@@public, static, byte[], MethodName:getFileData, String path, int timeoutInterval, int tries, Exception,  @AT@ 2587 @LENGTH@ 43
------INS MethodInvocation@@Files.readAllBytes(Paths.get(path)) @TO@ ReturnStatement@@MethodInvocation:Files.readAllBytes(Paths.get(path)) @AT@ 2594 @LENGTH@ 35
---------INS SimpleName@@Name:Files @TO@ MethodInvocation@@Files.readAllBytes(Paths.get(path)) @AT@ 2594 @LENGTH@ 5
---------INS SimpleName@@MethodName:readAllBytes:[Paths.get(path)] @TO@ MethodInvocation@@Files.readAllBytes(Paths.get(path)) @AT@ 2600 @LENGTH@ 29
------------INS MethodInvocation@@Paths.get(path) @TO@ SimpleName@@MethodName:readAllBytes:[Paths.get(path)] @AT@ 2613 @LENGTH@ 15
---------------INS SimpleName@@Name:Paths @TO@ MethodInvocation@@Paths.get(path) @AT@ 2613 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[path] @TO@ MethodInvocation@@Paths.get(path) @AT@ 2619 @LENGTH@ 9
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:get:[path] @AT@ 2623 @LENGTH@ 4


INS IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @TO@ MethodDeclaration@@public, void, MethodName:parseURI, URI uri, Map<String,Object> parameters, NettyComponent component, String... supportedProtocols, Exception,  @AT@ 7663 @LENGTH@ 72
---INS InfixExpression@@uri.getPort() != -1 @TO@ IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @AT@ 7667 @LENGTH@ 19
------INS MethodInvocation@@uri.getPort() @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7667 @LENGTH@ 13
---------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.getPort() @AT@ 7667 @LENGTH@ 3
---------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@uri.getPort() @AT@ 7671 @LENGTH@ 9
------INS Operator@@!= @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7680 @LENGTH@ 2
------INS PrefixExpression@@-1 @TO@ InfixExpression@@uri.getPort() != -1 @AT@ 7684 @LENGTH@ 2
---------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7684 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7685 @LENGTH@ 1
---INS Block@@ThenBody:{  setPort(uri.getPort());} @TO@ IfStatement@@if (uri.getPort() != -1) {  setPort(uri.getPort());} @AT@ 7688 @LENGTH@ 47
------MOV ExpressionStatement@@MethodInvocation:setPort(uri.getPort()) @TO@ Block@@ThenBody:{  setPort(uri.getPort());} @AT@ 7663 @LENGTH@ 23


UPD EnhancedForStatement@@for (QueueBinding binding : rabbitListener.bindings()) {  org.springframework.amqp.rabbit.annotation.Queue bindingQueue=binding.value();  String queueName=(String)resolveExpression(bindingQueue.value());  boolean exclusive=false;  boolean autoDelete=false;  if (!StringUtils.hasText(queueName)) {    queueName=UUID.randomUUID().toString();    if (!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive())) {      exclusive=true;    }    if (!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete())) {      autoDelete=true;    }  } else {    exclusive=resolveExpressionAsBoolean(bindingQueue.exclusive());    autoDelete=resolveExpressionAsBoolean(bindingQueue.autoDelete());  }  Queue queue=new Queue(queueName,resolveExpressionAsBoolean(bindingQueue.durable()),exclusive,autoDelete);  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(queueName + ++this.increment,queue);  queues.add(queueName);  Exchange exchange=null;  org.springframework.amqp.rabbit.annotation.Exchange bindingExchange=binding.exchange();  String exchangeName=(String)resolveExpression(bindingExchange.value());  String exchangeType=bindingExchange.type();  Binding actualBinding=null;  Object key=resolveExpression(binding.key());  if (!(key instanceof String)) {    throw new BeanInitializationException("key must resolved to a String, not: " + key.getClass().toString());  }  String resolvedKey=(String)key;  if (exchangeType.equals(ExchangeTypes.DIRECT)) {    exchange=new DirectExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,resolvedKey,null);  } else   if (exchangeType.equals(ExchangeTypes.FANOUT)) {    exchange=new FanoutExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,"",null);  } else   if (exchangeType.equals(ExchangeTypes.TOPIC)) {    exchange=new TopicExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,resolvedKey,null);  } else {    throw new BeanInitializationException("Unexpected exchange type: " + exchangeType);  }  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(exchangeName + ++this.increment,exchange);  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(exchangeName + ++this.increment,actualBinding);} @TO@ for (QueueBinding binding : rabbitListener.bindings()) {  org.springframework.amqp.rabbit.annotation.Queue bindingQueue=binding.value();  String queueName=(String)resolveExpression(bindingQueue.value());  boolean exclusive=false;  boolean autoDelete=false;  if (!StringUtils.hasText(queueName)) {    queueName=UUID.randomUUID().toString();    if (!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive())) {      exclusive=true;    }    if (!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete())) {      autoDelete=true;    }  } else {    exclusive=resolveExpressionAsBoolean(bindingQueue.exclusive());    autoDelete=resolveExpressionAsBoolean(bindingQueue.autoDelete());  }  Queue queue=new Queue(queueName,resolveExpressionAsBoolean(bindingQueue.durable()),exclusive,autoDelete);  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(queueName + ++this.increment,queue);  queues.add(queueName);  Exchange exchange;  org.springframework.amqp.rabbit.annotation.Exchange bindingExchange=binding.exchange();  String exchangeName=(String)resolveExpression(bindingExchange.value());  String exchangeType=bindingExchange.type();  Binding actualBinding;  Object key=resolveExpression(binding.key());  if (!(key instanceof String)) {    throw new BeanInitializationException("key must resolved to a String, not: " + key.getClass().toString());  }  String resolvedKey=(String)key;  if (exchangeType.equals(ExchangeTypes.DIRECT)) {    exchange=new DirectExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,resolvedKey,null);  } else   if (exchangeType.equals(ExchangeTypes.FANOUT)) {    exchange=new FanoutExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,"",null);  } else   if (exchangeType.equals(ExchangeTypes.TOPIC)) {    exchange=new TopicExchange(exchangeName,resolveExpressionAsBoolean(bindingExchange.durable()),resolveExpressionAsBoolean(bindingExchange.autoDelete()));    actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,resolvedKey,null);  } else {    throw new BeanInitializationException("Unexpected exchange type: " + exchangeType);  }  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(exchangeName + ++this.increment,exchange);  ((ConfigurableBeanFactory)this.beanFactory).registerSingleton(exchangeName + ++this.increment,actualBinding);} @AT@ 18835 @LENGTH@ 3048
---UPD VariableDeclarationStatement@@Exchange exchange=null; @TO@ Exchange exchange; @AT@ 20008 @LENGTH@ 25
------UPD VariableDeclarationFragment@@exchange=null @TO@ exchange @AT@ 20017 @LENGTH@ 15
---------DEL NullLiteral@@null @AT@ 20028 @LENGTH@ 4
---UPD VariableDeclarationStatement@@Binding actualBinding=null; @TO@ Binding actualBinding; @AT@ 20261 @LENGTH@ 29
------UPD VariableDeclarationFragment@@actualBinding=null @TO@ actualBinding @AT@ 20269 @LENGTH@ 20
---------DEL NullLiteral@@null @AT@ 20285 @LENGTH@ 4


UPD CatchClause@@catch (Throwable e) {} @TO@ catch (Throwable e) {  dumpExceptionToErrorFile("camel-apt-error.log","Error processing EIP model",e);} @AT@ 4688 @LENGTH@ 53
---INS ExpressionStatement@@MethodInvocation:dumpExceptionToErrorFile("camel-apt-error.log","Error processing EIP model",e) @TO@ CatchClause@@catch (Throwable e) {} @AT@ 4722 @LENGTH@ 81
------INS MethodInvocation@@dumpExceptionToErrorFile("camel-apt-error.log","Error processing EIP model",e) @TO@ ExpressionStatement@@MethodInvocation:dumpExceptionToErrorFile("camel-apt-error.log","Error processing EIP model",e) @AT@ 4722 @LENGTH@ 80
---------INS SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing EIP model", e] @TO@ MethodInvocation@@dumpExceptionToErrorFile("camel-apt-error.log","Error processing EIP model",e) @AT@ 4722 @LENGTH@ 80
------------INS StringLiteral@@"camel-apt-error.log" @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing EIP model", e] @AT@ 4747 @LENGTH@ 21
------------INS StringLiteral@@"Error processing EIP model" @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing EIP model", e] @AT@ 4770 @LENGTH@ 28
------------INS SimpleName@@e @TO@ SimpleName@@MethodName:dumpExceptionToErrorFile:["camel-apt-error.log", "Error processing EIP model", e] @AT@ 4800 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3701 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3701 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3720 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3734 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:SocksSSLSocketFactory, SSLContext sslContext, HttpHost proxyHost,  @TO@ voidMethodName:SocksSSLSocketFactory, SSLContext sslContext, HttpHost proxyHost,  @AT@ 12293 @LENGTH@ 209
---DEL Modifier@@public @AT@ 12293 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertNull(HiveBaseChar.enforceMaxLength(null,0)) @TO@ MethodDeclaration@@public, void, MethodName:testStringLength, Exception,  @AT@ 2863 @LENGTH@ 51
---INS MethodInvocation@@assertNull(HiveBaseChar.enforceMaxLength(null,0)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(HiveBaseChar.enforceMaxLength(null,0)) @AT@ 2863 @LENGTH@ 50
------INS SimpleName@@MethodName:assertNull:[HiveBaseChar.enforceMaxLength(null,0)] @TO@ MethodInvocation@@assertNull(HiveBaseChar.enforceMaxLength(null,0)) @AT@ 2863 @LENGTH@ 50
---------INS MethodInvocation@@HiveBaseChar.enforceMaxLength(null,0) @TO@ SimpleName@@MethodName:assertNull:[HiveBaseChar.enforceMaxLength(null,0)] @AT@ 2874 @LENGTH@ 38
------------INS SimpleName@@Name:HiveBaseChar @TO@ MethodInvocation@@HiveBaseChar.enforceMaxLength(null,0) @AT@ 2874 @LENGTH@ 12
------------INS SimpleName@@MethodName:enforceMaxLength:[null, 0] @TO@ MethodInvocation@@HiveBaseChar.enforceMaxLength(null,0) @AT@ 2887 @LENGTH@ 25
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:enforceMaxLength:[null, 0] @AT@ 2904 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:enforceMaxLength:[null, 0] @AT@ 2910 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:this.name.equals(((TestPojo)obj).getName()) @TO@ MethodInvocation:this.name.equals(((TestJAXBPojo)obj).getName()) @AT@ 1268 @LENGTH@ 52
---UPD MethodInvocation@@this.name.equals(((TestPojo)obj).getName()) @TO@ this.name.equals(((TestJAXBPojo)obj).getName()) @AT@ 1275 @LENGTH@ 44
------UPD SimpleName@@MethodName:equals:[((TestPojo)obj).getName()] @TO@ MethodName:equals:[((TestJAXBPojo)obj).getName()] @AT@ 1285 @LENGTH@ 34
---------UPD MethodInvocation@@((TestPojo)obj).getName() @TO@ ((TestJAXBPojo)obj).getName() @AT@ 1292 @LENGTH@ 26
------------UPD ParenthesizedExpression@@((TestPojo)obj) @TO@ ((TestJAXBPojo)obj) @AT@ 1292 @LENGTH@ 16
---------------UPD CastExpression@@(TestPojo)obj @TO@ (TestJAXBPojo)obj @AT@ 1293 @LENGTH@ 14
------------------UPD SimpleType@@TestPojo @TO@ TestJAXBPojo @AT@ 1294 @LENGTH@ 8


UPD MethodDeclaration@@public, void, MethodName:prepareArchive, Archive a,  @TO@ public, void, MethodName:prepareArchive, Archive<?> a,  @AT@ 837 @LENGTH@ 1743
---UPD SingleVariableDeclaration@@Archive a @TO@ Archive<?> a @AT@ 864 @LENGTH@ 9
------DEL SimpleType@@Archive @AT@ 864 @LENGTH@ 7
------INS ParameterizedType@@Archive<?> @TO@ SingleVariableDeclaration@@Archive a @AT@ 864 @LENGTH@ 10
---------INS SimpleType@@Archive @TO@ ParameterizedType@@Archive<?> @AT@ 864 @LENGTH@ 7
---------INS WildcardType@@? @TO@ ParameterizedType@@Archive<?> @AT@ 872 @LENGTH@ 1


UPD VariableDeclarationStatement@@Connection connection=null; @TO@ Connection connection; @AT@ 8148 @LENGTH@ 29
---UPD VariableDeclarationFragment@@connection=null @TO@ connection @AT@ 8159 @LENGTH@ 17
------DEL NullLiteral@@null @AT@ 8172 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:this.template.setReceiveTimeout(10000) @TO@ MethodDeclaration@@public, void, MethodName:testSymmetricalReceiveAndReply, InterruptedException, UnsupportedEncodingException,  @AT@ 42811 @LENGTH@ 39
---INS MethodInvocation@@this.template.setReceiveTimeout(10000) @TO@ ExpressionStatement@@MethodInvocation:this.template.setReceiveTimeout(10000) @AT@ 42811 @LENGTH@ 38
------INS FieldAccess@@this.template @TO@ MethodInvocation@@this.template.setReceiveTimeout(10000) @AT@ 42811 @LENGTH@ 13
---------INS ThisExpression@@this @TO@ FieldAccess@@this.template @AT@ 42811 @LENGTH@ 4
---------INS SimpleName@@template @TO@ FieldAccess@@this.template @AT@ 42816 @LENGTH@ 8
------INS SimpleName@@MethodName:setReceiveTimeout:[10000] @TO@ MethodInvocation@@this.template.setReceiveTimeout(10000) @AT@ 42825 @LENGTH@ 24
---------INS NumberLiteral@@10000 @TO@ SimpleName@@MethodName:setReceiveTimeout:[10000] @AT@ 42843 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:PreparedErrorHandler, RouteContext key, Processor value,  @TO@ voidMethodName:PreparedErrorHandler, RouteContext key, Processor value,  @AT@ 5069 @LENGTH@ 105
---DEL Modifier@@public @AT@ 5069 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:badHighCustomStrength,  @TO@ TypeDeclaration@@[public]BCryptPasswordEncoderTests,  @AT@ 2004 @LENGTH@ 73
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:badHighCustomStrength,  @AT@ 2004 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:badHighCustomStrength,  @AT@ 2011 @LENGTH@ 4
---INS SimpleName@@MethodName:badHighCustomStrength @TO@ MethodDeclaration@@public, void, MethodName:badHighCustomStrength,  @AT@ 2016 @LENGTH@ 21
---INS ExpressionStatement@@ClassInstanceCreation:new BCryptPasswordEncoder(32) @TO@ MethodDeclaration@@public, void, MethodName:badHighCustomStrength,  @AT@ 2044 @LENGTH@ 30
------INS ClassInstanceCreation@@BCryptPasswordEncoder[32] @TO@ ExpressionStatement@@ClassInstanceCreation:new BCryptPasswordEncoder(32) @AT@ 2044 @LENGTH@ 29
---------INS New@@new @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[32] @AT@ 2044 @LENGTH@ 3
---------INS SimpleType@@BCryptPasswordEncoder @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[32] @AT@ 2048 @LENGTH@ 21
---------INS NumberLiteral@@32 @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[32] @AT@ 2070 @LENGTH@ 2


UPD IfStatement@@if (currentTxnIndex >= txnIds.size()) throw new InvalidTrasactionState("No more transactions available in" + " current batch for end point : " + endPt); @TO@ if (currentTxnIndex + 1 >= txnIds.size()) throw new InvalidTrasactionState("No more transactions available in" + " current batch for end point : " + endPt); @AT@ 25462 @LENGTH@ 178
---UPD InfixExpression@@currentTxnIndex >= txnIds.size() @TO@ currentTxnIndex + 1 >= txnIds.size() @AT@ 25467 @LENGTH@ 32
------INS InfixExpression@@currentTxnIndex + 1 @TO@ InfixExpression@@currentTxnIndex >= txnIds.size() @AT@ 25467 @LENGTH@ 19
---------MOV SimpleName@@currentTxnIndex @TO@ InfixExpression@@currentTxnIndex + 1 @AT@ 25467 @LENGTH@ 15
---------INS Operator@@+ @TO@ InfixExpression@@currentTxnIndex + 1 @AT@ 25482 @LENGTH@ 1
---------INS NumberLiteral@@1 @TO@ InfixExpression@@currentTxnIndex + 1 @AT@ 25485 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertThat(invocationData.getArguments()[0],equalTo("foo")) @TO@ MethodInvocation:assertThat((String)invocationData.getArguments()[0],equalTo("foo")) @AT@ 3197 @LENGTH@ 61
---UPD MethodInvocation@@assertThat(invocationData.getArguments()[0],equalTo("foo")) @TO@ assertThat((String)invocationData.getArguments()[0],equalTo("foo")) @AT@ 3197 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertThat:[invocationData.getArguments()[0], equalTo("foo")] @TO@ MethodName:assertThat:[(String)invocationData.getArguments()[0], equalTo("foo")] @AT@ 3197 @LENGTH@ 60
---------INS CastExpression@@(String)invocationData.getArguments()[0] @TO@ SimpleName@@MethodName:assertThat:[invocationData.getArguments()[0], equalTo("foo")] @AT@ 3208 @LENGTH@ 41
------------MOV ArrayAccess@@invocationData.getArguments()[0] @TO@ CastExpression@@(String)invocationData.getArguments()[0] @AT@ 3208 @LENGTH@ 32
------------INS SimpleType@@String @TO@ CastExpression@@(String)invocationData.getArguments()[0] @AT@ 3209 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:tearDown, Exception,  @TO@ public, void, MethodName:tearDown, Exception,  @AT@ 1368 @LENGTH@ 87
---UPD Modifier@@protected @TO@ public @AT@ 1368 @LENGTH@ 9


UPD FieldDeclaration@@private, int, [port] @TO@ private, int, [dummy] @AT@ 1521 @LENGTH@ 17
---UPD VariableDeclarationFragment@@port @TO@ dummy @AT@ 1533 @LENGTH@ 4
------UPD SimpleName@@port @TO@ dummy @AT@ 1533 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.assertThat(t2).isEqualTo(t1) @TO@ MethodInvocation:assertThat(t2).isEqualTo(t1) @AT@ 579 @LENGTH@ 36
---UPD MethodInvocation@@Assert.assertThat(t2).isEqualTo(t1) @TO@ assertThat(t2).isEqualTo(t1) @AT@ 579 @LENGTH@ 35
------DEL SimpleName@@Name:Assert @AT@ 579 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:from("direct:simple").to("sql:select * from projects where license = # order by id?dataSource=dataSource").to("mock:result") @TO@ MethodInvocation:from("direct:simple").to("sql:select * from projects where license = # order by id?dataSource=#dataSource").to("mock:result") @AT@ 2820 @LENGTH@ 167
---UPD MethodInvocation@@from("direct:simple").to("sql:select * from projects where license = # order by id?dataSource=dataSource").to("mock:result") @TO@ from("direct:simple").to("sql:select * from projects where license = # order by id?dataSource=#dataSource").to("mock:result") @AT@ 2820 @LENGTH@ 166
------UPD MethodInvocation@@MethodName:to:["sql:select * from projects where license = # order by id?dataSource=dataSource"] @TO@ MethodName:to:["sql:select * from projects where license = # order by id?dataSource=#dataSource"] @AT@ 2820 @LENGTH@ 127
---------UPD StringLiteral@@"sql:select * from projects where license = # order by id?dataSource=dataSource" @TO@ "sql:select * from projects where license = # order by id?dataSource=#dataSource" @AT@ 2866 @LENGTH@ 80


UPD IfStatement@@if (endpoint.getUrlRewrite() != null) {  String baseUrl;  relativeUrl=endpoint.getHttpUri().toASCIIString();  if (url.startsWith(relativeUrl)) {    baseUrl=url.substring(0,relativeUrl.length());    relativeUrl=url.substring(relativeUrl.length());  } else {    baseUrl=null;    relativeUrl=url;  }  if (ObjectHelper.isEmpty(relativeUrl)) {    relativeUrl=null;  }  String newUrl;  if (endpoint.getUrlRewrite() instanceof HttpServletUrlRewrite) {    HttpServletRequest request=exchange.getIn().getBody(HttpServletRequest.class);    if (request == null) {      HttpMessage msg=exchange.getIn(HttpMessage.class);      if (msg != null) {        request=msg.getRequest();      }    }    if (request == null) {      throw new IllegalArgumentException("UrlRewrite " + endpoint.getUrlRewrite() + " requires the message body to be a"+ "HttpServletRequest instance, but was: "+ ObjectHelper.className(exchange.getIn().getBody()));    }    String contextPath=exchange.getIn().getHeader("CamelServletContextPath",String.class);    request=new UrlRewriteHttpServletRequestAdapter(request,contextPath);    newUrl=((HttpServletUrlRewrite)endpoint.getUrlRewrite()).rewrite(url,relativeUrl,producer,request);  } else {    newUrl=endpoint.getUrlRewrite().rewrite(url,relativeUrl,producer);  }  if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {    if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {      answer=newUrl;    } else     if (baseUrl != null) {      if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {        answer=baseUrl + newUrl.substring(1);      } else {        answer=baseUrl + newUrl;      }    } else {      answer=newUrl;    }    if (LOG.isDebugEnabled()) {      LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});    }  }} @TO@ if (endpoint.getUrlRewrite() != null) {  String baseUrl;  relativeUrl=endpoint.getHttpUri().toASCIIString();  if (relativeUrl.contains("?")) {    relativeUrl=ObjectHelper.before(relativeUrl,"?");  }  if (url.startsWith(relativeUrl)) {    baseUrl=url.substring(0,relativeUrl.length());    relativeUrl=url.substring(relativeUrl.length());  } else {    baseUrl=null;    relativeUrl=url;  }  if (ObjectHelper.isEmpty(relativeUrl)) {    relativeUrl=null;  }  String newUrl;  if (endpoint.getUrlRewrite() instanceof HttpServletUrlRewrite) {    HttpServletRequest request=exchange.getIn().getBody(HttpServletRequest.class);    if (request == null) {      HttpMessage msg=exchange.getIn(HttpMessage.class);      if (msg != null) {        request=msg.getRequest();      }    }    if (request == null) {      throw new IllegalArgumentException("UrlRewrite " + endpoint.getUrlRewrite() + " requires the message body to be a"+ "HttpServletRequest instance, but was: "+ ObjectHelper.className(exchange.getIn().getBody()));    }    String contextPath=exchange.getIn().getHeader("CamelServletContextPath",String.class);    request=new UrlRewriteHttpServletRequestAdapter(request,contextPath);    newUrl=((HttpServletUrlRewrite)endpoint.getUrlRewrite()).rewrite(url,relativeUrl,producer,request);  } else {    newUrl=endpoint.getUrlRewrite().rewrite(url,relativeUrl,producer);  }  if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {    if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {      answer=newUrl;    } else     if (baseUrl != null) {      if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {        answer=baseUrl + newUrl.substring(1);      } else {        answer=baseUrl + newUrl;      }    } else {      answer=newUrl;    }    if (LOG.isDebugEnabled()) {      LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});    }  }} @AT@ 15696 @LENGTH@ 3282
---UPD Block@@ThenBody:{  String baseUrl;  relativeUrl=endpoint.getHttpUri().toASCIIString();  if (url.startsWith(relativeUrl)) {    baseUrl=url.substring(0,relativeUrl.length());    relativeUrl=url.substring(relativeUrl.length());  } else {    baseUrl=null;    relativeUrl=url;  }  if (ObjectHelper.isEmpty(relativeUrl)) {    relativeUrl=null;  }  String newUrl;  if (endpoint.getUrlRewrite() instanceof HttpServletUrlRewrite) {    HttpServletRequest request=exchange.getIn().getBody(HttpServletRequest.class);    if (request == null) {      HttpMessage msg=exchange.getIn(HttpMessage.class);      if (msg != null) {        request=msg.getRequest();      }    }    if (request == null) {      throw new IllegalArgumentException("UrlRewrite " + endpoint.getUrlRewrite() + " requires the message body to be a"+ "HttpServletRequest instance, but was: "+ ObjectHelper.className(exchange.getIn().getBody()));    }    String contextPath=exchange.getIn().getHeader("CamelServletContextPath",String.class);    request=new UrlRewriteHttpServletRequestAdapter(request,contextPath);    newUrl=((HttpServletUrlRewrite)endpoint.getUrlRewrite()).rewrite(url,relativeUrl,producer,request);  } else {    newUrl=endpoint.getUrlRewrite().rewrite(url,relativeUrl,producer);  }  if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {    if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {      answer=newUrl;    } else     if (baseUrl != null) {      if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {        answer=baseUrl + newUrl.substring(1);      } else {        answer=baseUrl + newUrl;      }    } else {      answer=newUrl;    }    if (LOG.isDebugEnabled()) {      LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});    }  }} @TO@ ThenBody:{  String baseUrl;  relativeUrl=endpoint.getHttpUri().toASCIIString();  if (relativeUrl.contains("?")) {    relativeUrl=ObjectHelper.before(relativeUrl,"?");  }  if (url.startsWith(relativeUrl)) {    baseUrl=url.substring(0,relativeUrl.length());    relativeUrl=url.substring(relativeUrl.length());  } else {    baseUrl=null;    relativeUrl=url;  }  if (ObjectHelper.isEmpty(relativeUrl)) {    relativeUrl=null;  }  String newUrl;  if (endpoint.getUrlRewrite() instanceof HttpServletUrlRewrite) {    HttpServletRequest request=exchange.getIn().getBody(HttpServletRequest.class);    if (request == null) {      HttpMessage msg=exchange.getIn(HttpMessage.class);      if (msg != null) {        request=msg.getRequest();      }    }    if (request == null) {      throw new IllegalArgumentException("UrlRewrite " + endpoint.getUrlRewrite() + " requires the message body to be a"+ "HttpServletRequest instance, but was: "+ ObjectHelper.className(exchange.getIn().getBody()));    }    String contextPath=exchange.getIn().getHeader("CamelServletContextPath",String.class);    request=new UrlRewriteHttpServletRequestAdapter(request,contextPath);    newUrl=((HttpServletUrlRewrite)endpoint.getUrlRewrite()).rewrite(url,relativeUrl,producer,request);  } else {    newUrl=endpoint.getUrlRewrite().rewrite(url,relativeUrl,producer);  }  if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {    if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {      answer=newUrl;    } else     if (baseUrl != null) {      if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {        answer=baseUrl + newUrl.substring(1);      } else {        answer=baseUrl + newUrl;      }    } else {      answer=newUrl;    }    if (LOG.isDebugEnabled()) {      LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});    }  }} @AT@ 15734 @LENGTH@ 3244
------INS IfStatement@@if (relativeUrl.contains("?")) {  relativeUrl=ObjectHelper.before(relativeUrl,"?");} @TO@ Block@@ThenBody:{  String baseUrl;  relativeUrl=endpoint.getHttpUri().toASCIIString();  if (url.startsWith(relativeUrl)) {    baseUrl=url.substring(0,relativeUrl.length());    relativeUrl=url.substring(relativeUrl.length());  } else {    baseUrl=null;    relativeUrl=url;  }  if (ObjectHelper.isEmpty(relativeUrl)) {    relativeUrl=null;  }  String newUrl;  if (endpoint.getUrlRewrite() instanceof HttpServletUrlRewrite) {    HttpServletRequest request=exchange.getIn().getBody(HttpServletRequest.class);    if (request == null) {      HttpMessage msg=exchange.getIn(HttpMessage.class);      if (msg != null) {        request=msg.getRequest();      }    }    if (request == null) {      throw new IllegalArgumentException("UrlRewrite " + endpoint.getUrlRewrite() + " requires the message body to be a"+ "HttpServletRequest instance, but was: "+ ObjectHelper.className(exchange.getIn().getBody()));    }    String contextPath=exchange.getIn().getHeader("CamelServletContextPath",String.class);    request=new UrlRewriteHttpServletRequestAdapter(request,contextPath);    newUrl=((HttpServletUrlRewrite)endpoint.getUrlRewrite()).rewrite(url,relativeUrl,producer,request);  } else {    newUrl=endpoint.getUrlRewrite().rewrite(url,relativeUrl,producer);  }  if (ObjectHelper.isNotEmpty(newUrl) && !newUrl.equals(url)) {    if (newUrl.startsWith("http:") || newUrl.startsWith("https:")) {      answer=newUrl;    } else     if (baseUrl != null) {      if (baseUrl.endsWith("/") && newUrl.startsWith("/")) {        answer=baseUrl + newUrl.substring(1);      } else {        answer=baseUrl + newUrl;      }    } else {      answer=newUrl;    }    if (LOG.isDebugEnabled()) {      LOG.debug("Using url rewrite to rewrite from url {} to {} -> {}",new Object[]{relativeUrl != null ? relativeUrl : url,newUrl,answer});    }  }} @AT@ 15956 @LENGTH@ 115
---------INS MethodInvocation@@relativeUrl.contains("?") @TO@ IfStatement@@if (relativeUrl.contains("?")) {  relativeUrl=ObjectHelper.before(relativeUrl,"?");} @AT@ 15960 @LENGTH@ 25
------------INS SimpleName@@Name:relativeUrl @TO@ MethodInvocation@@relativeUrl.contains("?") @AT@ 15960 @LENGTH@ 11
------------INS SimpleName@@MethodName:contains:["?"] @TO@ MethodInvocation@@relativeUrl.contains("?") @AT@ 15972 @LENGTH@ 13
---------------INS StringLiteral@@"?" @TO@ SimpleName@@MethodName:contains:["?"] @AT@ 15981 @LENGTH@ 3
---------INS Block@@ThenBody:{  relativeUrl=ObjectHelper.before(relativeUrl,"?");} @TO@ IfStatement@@if (relativeUrl.contains("?")) {  relativeUrl=ObjectHelper.before(relativeUrl,"?");} @AT@ 15987 @LENGTH@ 84
------------INS ExpressionStatement@@Assignment:relativeUrl=ObjectHelper.before(relativeUrl,"?") @TO@ Block@@ThenBody:{  relativeUrl=ObjectHelper.before(relativeUrl,"?");} @AT@ 16005 @LENGTH@ 52
---------------INS Assignment@@relativeUrl=ObjectHelper.before(relativeUrl,"?") @TO@ ExpressionStatement@@Assignment:relativeUrl=ObjectHelper.before(relativeUrl,"?") @AT@ 16005 @LENGTH@ 51
------------------INS SimpleName@@relativeUrl @TO@ Assignment@@relativeUrl=ObjectHelper.before(relativeUrl,"?") @AT@ 16005 @LENGTH@ 11
------------------INS Operator@@= @TO@ Assignment@@relativeUrl=ObjectHelper.before(relativeUrl,"?") @AT@ 16016 @LENGTH@ 1
------------------INS MethodInvocation@@ObjectHelper.before(relativeUrl,"?") @TO@ Assignment@@relativeUrl=ObjectHelper.before(relativeUrl,"?") @AT@ 16019 @LENGTH@ 37
---------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.before(relativeUrl,"?") @AT@ 16019 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:before:[relativeUrl, "?"] @TO@ MethodInvocation@@ObjectHelper.before(relativeUrl,"?") @AT@ 16032 @LENGTH@ 24
------------------------INS SimpleName@@relativeUrl @TO@ SimpleName@@MethodName:before:[relativeUrl, "?"] @AT@ 16039 @LENGTH@ 11
------------------------INS StringLiteral@@"?" @TO@ SimpleName@@MethodName:before:[relativeUrl, "?"] @AT@ 16052 @LENGTH@ 3


UPD IfStatement@@if ((translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null)) {  suggestOptionKey(shellContext,translated,results,methodTarget,options,unspecified,lastOptionValue,alreadySpecified);  candidates.addAll(results);  return 0;} @TO@ if ((translated.endsWith(" ") || (translated.endsWith(" -") || translated.endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null)) {  suggestOptionKey(shellContext,translated,results,methodTarget,options,unspecified,lastOptionValue,alreadySpecified);  candidates.addAll(results);  return 0;} @AT@ 18941 @LENGTH@ 427
---UPD InfixExpression@@(translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null) @TO@ (translated.endsWith(" ") || (translated.endsWith(" -") || translated.endsWith(" --"))) && (!"".equals(lastOptionValue) || lastOptionKey == null) @AT@ 18945 @LENGTH@ 212
------UPD ParenthesizedExpression@@(translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --"))) @TO@ (translated.endsWith(" ") || (translated.endsWith(" -") || translated.endsWith(" --"))) @AT@ 18945 @LENGTH@ 144
---------UPD InfixExpression@@translated.endsWith(" ") || (methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --")) @TO@ translated.endsWith(" ") || (translated.endsWith(" -") || translated.endsWith(" --")) @AT@ 18946 @LENGTH@ 142
------------UPD ParenthesizedExpression@@(methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --")) @TO@ (translated.endsWith(" -") || translated.endsWith(" --")) @AT@ 18974 @LENGTH@ 114
---------------UPD InfixExpression@@methodTarget.getRemainingBuffer().endsWith(" -") || methodTarget.getRemainingBuffer().endsWith(" --") @TO@ translated.endsWith(" -") || translated.endsWith(" --") @AT@ 18975 @LENGTH@ 112
------------------UPD MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" -") @TO@ translated.endsWith(" -") @AT@ 18975 @LENGTH@ 48
---------------------DEL MethodInvocation@@MethodName:getRemainingBuffer:[] @AT@ 18975 @LENGTH@ 33
---------------------UPD SimpleName@@Name:methodTarget @TO@ Name:translated @AT@ 18975 @LENGTH@ 12
------------------UPD MethodInvocation@@methodTarget.getRemainingBuffer().endsWith(" --") @TO@ translated.endsWith(" --") @AT@ 19027 @LENGTH@ 60
---------------------DEL MethodInvocation@@MethodName:getRemainingBuffer:[] @AT@ 19027 @LENGTH@ 44
---------------------UPD SimpleName@@Name:methodTarget @TO@ Name:translated @AT@ 19027 @LENGTH@ 12


UPD IfStatement@@if (approval.getStatus() == ApprovalStatus.APPROVED) {  approvedScopes.add(approval.getScope());} @TO@ if (approval.getStatus() == ApprovalStatus.APPROVED) {  validUserApprovedScopes.add(approval.getScope());  approvedScopes.add(approval.getScope());} @AT@ 5097 @LENGTH@ 106
---UPD Block@@ThenBody:{  approvedScopes.add(approval.getScope());} @TO@ ThenBody:{  validUserApprovedScopes.add(approval.getScope());  approvedScopes.add(approval.getScope());} @AT@ 5150 @LENGTH@ 53
------MOV ExpressionStatement@@MethodInvocation:validUserApprovedScopes.add(approval.getScope()) @TO@ Block@@ThenBody:{  approvedScopes.add(approval.getScope());} @AT@ 5043 @LENGTH@ 49


UPD IfStatement@@if (type.isInstance(source) || !type.isProjecting()) {  return (T)source;} @TO@ if (source == null || type.isInstance(source) || !type.isProjecting()) {  return (T)source;} @AT@ 3809 @LENGTH@ 80
---UPD InfixExpression@@type.isInstance(source) || !type.isProjecting() @TO@ source == null || type.isInstance(source) || !type.isProjecting() @AT@ 3813 @LENGTH@ 47
------INS InfixExpression@@source == null || type.isInstance(source) @TO@ InfixExpression@@type.isInstance(source) || !type.isProjecting() @AT@ 3818 @LENGTH@ 41
---------MOV MethodInvocation@@type.isInstance(source) @TO@ InfixExpression@@source == null || type.isInstance(source) @AT@ 3813 @LENGTH@ 23
---------INS InfixExpression@@source == null @TO@ InfixExpression@@source == null || type.isInstance(source) @AT@ 3818 @LENGTH@ 14
------------INS SimpleName@@source @TO@ InfixExpression@@source == null @AT@ 3818 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@source == null @AT@ 3824 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@source == null @AT@ 3828 @LENGTH@ 4
---------MOV Operator@@|| @TO@ InfixExpression@@source == null || type.isInstance(source) @AT@ 3836 @LENGTH@ 2
------INS Operator@@|| @TO@ InfixExpression@@type.isInstance(source) || !type.isProjecting() @AT@ 3859 @LENGTH@ 2


MOV FieldDeclaration@@private, String, [okStatusCodeRange="200-299"] @TO@ TypeDeclaration@@[public, abstract]HttpCommonEndpoint, DefaultEndpoint[HeaderFilterStrategyAware] @AT@ 7321 @LENGTH@ 45


UPD MethodDeclaration@@public, voidMethodName:DelegatingClientCallback, ResponseCallback callback,  @TO@ voidMethodName:DelegatingClientCallback, ResponseCallback callback,  @AT@ 17331 @LENGTH@ 108
---DEL Modifier@@public @AT@ 17331 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPNettyEncoder,  @TO@ voidMethodName:HL7MLLPNettyEncoder,  @AT@ 1162 @LENGTH@ 71
---DEL Modifier@@public @AT@ 1162 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:fail() @TO@ MethodInvocation:fail("BadCredentialsException should had been thrown") @AT@ 12149 @LENGTH@ 7
---UPD MethodInvocation@@MethodName:fail:[] @TO@ fail("BadCredentialsException should had been thrown") @AT@ 12149 @LENGTH@ 6
------INS SimpleName@@MethodName:fail:["BadCredentialsException should had been thrown"] @TO@ MethodInvocation@@MethodName:fail:[] @AT@ 12048 @LENGTH@ 54
---------INS StringLiteral@@"BadCredentialsException should had been thrown" @TO@ SimpleName@@MethodName:fail:["BadCredentialsException should had been thrown"] @AT@ 12053 @LENGTH@ 48


UPD ExpressionStatement@@MethodInvocation:tokenStore.storeRefreshToken(refreshToken,authentication) @TO@ MethodInvocation:tokenStore.storeRefreshToken(accessToken.getRefreshToken(),authentication) @AT@ 7772 @LENGTH@ 59
---UPD MethodInvocation@@tokenStore.storeRefreshToken(refreshToken,authentication) @TO@ tokenStore.storeRefreshToken(accessToken.getRefreshToken(),authentication) @AT@ 7772 @LENGTH@ 58
------UPD SimpleName@@MethodName:storeRefreshToken:[refreshToken, authentication] @TO@ MethodName:storeRefreshToken:[accessToken.getRefreshToken(), authentication] @AT@ 7783 @LENGTH@ 47
---------INS MethodInvocation@@accessToken.getRefreshToken() @TO@ SimpleName@@MethodName:storeRefreshToken:[refreshToken, authentication] @AT@ 7801 @LENGTH@ 29
------------INS SimpleName@@Name:accessToken @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 7801 @LENGTH@ 11
------------INS SimpleName@@MethodName:getRefreshToken:[] @TO@ MethodInvocation@@accessToken.getRefreshToken() @AT@ 7813 @LENGTH@ 17
---------DEL SimpleName@@refreshToken @AT@ 7801 @LENGTH@ 12


UPD TryStatement@@try {  conn.openPipeline();  conn.del(refreshKey);  conn.del(refresh2AccessKey);  conn.del(access2RefreshKey);  conn.closePipeline();}  finally {  conn.close();} @TO@ try {  conn.openPipeline();  conn.del(refreshKey);  conn.del(refreshAuthKey);  conn.del(refresh2AccessKey);  conn.del(access2RefreshKey);  conn.closePipeline();}  finally {  conn.close();} @AT@ 11339 @LENGTH@ 178
---INS ExpressionStatement@@MethodInvocation:conn.del(refreshAuthKey) @TO@ TryStatement@@try {  conn.openPipeline();  conn.del(refreshKey);  conn.del(refresh2AccessKey);  conn.del(access2RefreshKey);  conn.closePipeline();}  finally {  conn.close();} @AT@ 11464 @LENGTH@ 25
------INS MethodInvocation@@conn.del(refreshAuthKey) @TO@ ExpressionStatement@@MethodInvocation:conn.del(refreshAuthKey) @AT@ 11464 @LENGTH@ 24
---------INS SimpleName@@Name:conn @TO@ MethodInvocation@@conn.del(refreshAuthKey) @AT@ 11464 @LENGTH@ 4
---------INS SimpleName@@MethodName:del:[refreshAuthKey] @TO@ MethodInvocation@@conn.del(refreshAuthKey) @AT@ 11469 @LENGTH@ 19
------------INS SimpleName@@refreshAuthKey @TO@ SimpleName@@MethodName:del:[refreshAuthKey] @AT@ 11473 @LENGTH@ 14


UPD IfStatement@@if (property.isCollection()) {  Expression<Collection<Object>> propertyExpression=traversePath(root,property);  Expression<Object> parameterExpression=provider.next(part).getExpression();  return type.equals(NOT_CONTAINING) ? builder.isNotMember(parameterExpression,propertyExpression) : builder.isMember(parameterExpression,propertyExpression);} @TO@ if (property.getLeafProperty().isCollection()) {  Expression<Collection<Object>> propertyExpression=traversePath(root,property);  Expression<Object> parameterExpression=provider.next(part).getExpression();  return type.equals(NOT_CONTAINING) ? builder.isNotMember(parameterExpression,propertyExpression) : builder.isMember(parameterExpression,propertyExpression);} @AT@ 8326 @LENGTH@ 467
---UPD MethodInvocation@@property.isCollection() @TO@ property.getLeafProperty().isCollection() @AT@ 8330 @LENGTH@ 23
------INS MethodInvocation@@MethodName:getLeafProperty:[] @TO@ MethodInvocation@@property.isCollection() @AT@ 8330 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @TO@ TypeDeclaration@@[@Order(Ordered.HIGHEST_PRECEDENCE + 100), public, abstract]AbstractSecurityWebSocketMessageBrokerConfigurer, AbstractWebSocketMessageBrokerConfigurer[SmartInitializingSingleton] @AT@ 7779 @LENGTH@ 163
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7779 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7786 @LENGTH@ 4
---INS SimpleName@@MethodName:setMessageExpessionHandler @TO@ MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7791 @LENGTH@ 26
---INS SingleVariableDeclaration@@List<SecurityExpressionHandler<Message<Object>>> expressionHandlers @TO@ MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7818 @LENGTH@ 67
------INS ParameterizedType@@List<SecurityExpressionHandler<Message<Object>>> @TO@ SingleVariableDeclaration@@List<SecurityExpressionHandler<Message<Object>>> expressionHandlers @AT@ 7818 @LENGTH@ 48
---------INS SimpleType@@List @TO@ ParameterizedType@@List<SecurityExpressionHandler<Message<Object>>> @AT@ 7818 @LENGTH@ 4
---------INS ParameterizedType@@SecurityExpressionHandler<Message<Object>> @TO@ ParameterizedType@@List<SecurityExpressionHandler<Message<Object>>> @AT@ 7823 @LENGTH@ 42
------------INS SimpleType@@SecurityExpressionHandler @TO@ ParameterizedType@@SecurityExpressionHandler<Message<Object>> @AT@ 7823 @LENGTH@ 25
------------INS ParameterizedType@@Message<Object> @TO@ ParameterizedType@@SecurityExpressionHandler<Message<Object>> @AT@ 7849 @LENGTH@ 15
---------------INS SimpleType@@Message @TO@ ParameterizedType@@Message<Object> @AT@ 7849 @LENGTH@ 7
---------------INS SimpleType@@Object @TO@ ParameterizedType@@Message<Object> @AT@ 7857 @LENGTH@ 6
------INS SimpleName@@expressionHandlers @TO@ SingleVariableDeclaration@@List<SecurityExpressionHandler<Message<Object>>> expressionHandlers @AT@ 7867 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:setMessageExpressionHandler(expressionHandlers) @TO@ MethodDeclaration@@public, void, MethodName:setMessageExpessionHandler, List<SecurityExpressionHandler<Message<Object>>> expressionHandlers,  @AT@ 7891 @LENGTH@ 48
------INS MethodInvocation@@setMessageExpressionHandler(expressionHandlers) @TO@ ExpressionStatement@@MethodInvocation:setMessageExpressionHandler(expressionHandlers) @AT@ 7891 @LENGTH@ 47
---------INS SimpleName@@MethodName:setMessageExpressionHandler:[expressionHandlers] @TO@ MethodInvocation@@setMessageExpressionHandler(expressionHandlers) @AT@ 7891 @LENGTH@ 47
------------INS SimpleName@@expressionHandlers @TO@ SimpleName@@MethodName:setMessageExpressionHandler:[expressionHandlers] @AT@ 7919 @LENGTH@ 18


UPD MethodDeclaration@@private, voidMethodName:MetricsType, String name,  @TO@ voidMethodName:MetricsType, String name,  @AT@ 1329 @LENGTH@ 66
---DEL Modifier@@private @AT@ 1329 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:RemoveComputerChange, CloudComputer removingComputer,  @TO@ voidMethodName:RemoveComputerChange, CloudComputer removingComputer,  @AT@ 3386 @LENGTH@ 125
---DEL Modifier@@public @AT@ 3386 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MessageCorrelationRule, Exchange exchange, SessionID sessionID, MessagePredicate messageCriteria,  @TO@ voidMethodName:MessageCorrelationRule, Exchange exchange, SessionID sessionID, MessagePredicate messageCriteria,  @AT@ 3165 @LENGTH@ 205
---DEL Modifier@@public @AT@ 3165 @LENGTH@ 6


UPD MethodDeclaration@@WebSocket, MethodName:newInstance, HttpServletRequest request, String protocol, NodeSynchronization sync, WebsocketConsumer consumer,  @TO@ DefaultWebsocket, MethodName:newInstance, ServletUpgradeRequest request, String protocol, NodeSynchronization sync, WebsocketConsumer consumer,  @AT@ 1037 @LENGTH@ 111
---UPD SimpleType@@WebSocket @TO@ DefaultWebsocket @AT@ 1027 @LENGTH@ 9
---UPD SingleVariableDeclaration@@HttpServletRequest request @TO@ ServletUpgradeRequest request @AT@ 1049 @LENGTH@ 26
------UPD SimpleType@@HttpServletRequest @TO@ ServletUpgradeRequest @AT@ 1049 @LENGTH@ 18


UPD Block@@WhileBody:{  line=line.trim();  if (line.isEmpty()) {    continue;  }  String[] sides=line.split("=");  String lhs=sides[0].trim();  FractionDescriptor desc=this.descriptors.get(lhs);  if (desc == null) {    String[] gavParts=lhs.split(":");    desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc);  }  if (sides.length > 1) {    String rhs=sides[1].trim();    String[] deps=rhs.split(",");    for (    String dep : deps) {      dep=dep.trim();      if (dep.isEmpty()) {        continue;      }      FractionDescriptor depDesc=this.descriptors.get(dep);      if (depDesc == null) {        String[] gavParts=dep.split(":");        depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);        this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);      }      desc.addDependency(depDesc);    }  }} @TO@ WhileBody:{  line=line.trim();  if (line.isEmpty()) {    continue;  }  String[] sides=line.split("=");  String lhs=sides[0].trim();  String lhsKey=toKey(lhs);  FractionDescriptor desc=this.descriptors.get(lhsKey);  if (desc == null) {    String[] gavParts=lhs.split(":");    desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(lhsKey,desc);  }  if (sides.length > 1) {    String rhs=sides[1].trim();    String[] deps=rhs.split(",");    for (    String dep : deps) {      dep=dep.trim();      if (dep.isEmpty()) {        continue;      }      String depKey=toKey(dep);      FractionDescriptor depDesc=this.descriptors.get(depKey);      if (depDesc == null) {        String[] gavParts=dep.split(":");        depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);        this.descriptors.put(depKey,depDesc);      }      desc.addDependency(depDesc);    }  }} @AT@ 2951 @LENGTH@ 1431
---INS VariableDeclarationStatement@@String lhsKey=toKey(lhs); @TO@ Block@@WhileBody:{  line=line.trim();  if (line.isEmpty()) {    continue;  }  String[] sides=line.split("=");  String lhs=sides[0].trim();  FractionDescriptor desc=this.descriptors.get(lhs);  if (desc == null) {    String[] gavParts=lhs.split(":");    desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc);  }  if (sides.length > 1) {    String rhs=sides[1].trim();    String[] deps=rhs.split(",");    for (    String dep : deps) {      dep=dep.trim();      if (dep.isEmpty()) {        continue;      }      FractionDescriptor depDesc=this.descriptors.get(dep);      if (depDesc == null) {        String[] gavParts=dep.split(":");        depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);        this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);      }      desc.addDependency(depDesc);    }  }} @AT@ 3189 @LENGTH@ 27
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String lhsKey=toKey(lhs); @AT@ 3189 @LENGTH@ 6
------INS VariableDeclarationFragment@@lhsKey=toKey(lhs) @TO@ VariableDeclarationStatement@@String lhsKey=toKey(lhs); @AT@ 3196 @LENGTH@ 19
---------INS SimpleName@@lhsKey @TO@ VariableDeclarationFragment@@lhsKey=toKey(lhs) @AT@ 3196 @LENGTH@ 6
---------INS MethodInvocation@@toKey(lhs) @TO@ VariableDeclarationFragment@@lhsKey=toKey(lhs) @AT@ 3205 @LENGTH@ 10
------------INS SimpleName@@MethodName:toKey:[lhs] @TO@ MethodInvocation@@toKey(lhs) @AT@ 3205 @LENGTH@ 10
---------------INS SimpleName@@lhs @TO@ SimpleName@@MethodName:toKey:[lhs] @AT@ 3211 @LENGTH@ 3
---UPD VariableDeclarationStatement@@FractionDescriptor desc=this.descriptors.get(lhs); @TO@ FractionDescriptor desc=this.descriptors.get(lhsKey); @AT@ 3190 @LENGTH@ 52
------UPD VariableDeclarationFragment@@desc=this.descriptors.get(lhs) @TO@ desc=this.descriptors.get(lhsKey) @AT@ 3209 @LENGTH@ 32
---------UPD MethodInvocation@@this.descriptors.get(lhs) @TO@ this.descriptors.get(lhsKey) @AT@ 3216 @LENGTH@ 25
------------UPD SimpleName@@MethodName:get:[lhs] @TO@ MethodName:get:[lhsKey] @AT@ 3233 @LENGTH@ 8
---------------UPD SimpleName@@lhs @TO@ lhsKey @AT@ 3237 @LENGTH@ 3
---UPD IfStatement@@if (desc == null) {  String[] gavParts=lhs.split(":");  desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc);} @TO@ if (desc == null) {  String[] gavParts=lhs.split(":");  desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(lhsKey,desc);} @AT@ 3259 @LENGTH@ 264
------UPD Block@@ThenBody:{  String[] gavParts=lhs.split(":");  desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc);} @TO@ ThenBody:{  String[] gavParts=lhs.split(":");  desc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(lhsKey,desc);} @AT@ 3277 @LENGTH@ 246
---------UPD ExpressionStatement@@MethodInvocation:this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc) @TO@ MethodInvocation:this.descriptors.put(lhsKey,desc) @AT@ 3445 @LENGTH@ 60
------------UPD MethodInvocation@@this.descriptors.put(gavParts[0] + ":" + gavParts[1],desc) @TO@ this.descriptors.put(lhsKey,desc) @AT@ 3445 @LENGTH@ 59
---------------UPD SimpleName@@MethodName:put:[gavParts[0] + ":" + gavParts[1], desc] @TO@ MethodName:put:[lhsKey, desc] @AT@ 3462 @LENGTH@ 42
------------------DEL InfixExpression@@gavParts[0] + ":" + gavParts[1] @AT@ 3466 @LENGTH@ 31
---------------------DEL ArrayAccess@@gavParts[0] @AT@ 3466 @LENGTH@ 11
------------------------DEL SimpleName@@gavParts @AT@ 3466 @LENGTH@ 8
------------------------DEL NumberLiteral@@0 @AT@ 3475 @LENGTH@ 1
---------------------DEL Operator@@+ @AT@ 3477 @LENGTH@ 1
---------------------DEL StringLiteral@@":" @AT@ 3480 @LENGTH@ 3
---------------------DEL ArrayAccess@@gavParts[1] @AT@ 3486 @LENGTH@ 11
------------------------DEL SimpleName@@gavParts @AT@ 3486 @LENGTH@ 8
------------------------DEL NumberLiteral@@1 @AT@ 3495 @LENGTH@ 1
------------------INS SimpleName@@lhsKey @TO@ SimpleName@@MethodName:put:[gavParts[0] + ":" + gavParts[1], desc] @AT@ 3512 @LENGTH@ 6
---UPD IfStatement@@if (sides.length > 1) {  String rhs=sides[1].trim();  String[] deps=rhs.split(",");  for (  String dep : deps) {    dep=dep.trim();    if (dep.isEmpty()) {      continue;    }    FractionDescriptor depDesc=this.descriptors.get(dep);    if (depDesc == null) {      String[] gavParts=dep.split(":");      depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);      this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);    }    desc.addDependency(depDesc);  }} @TO@ if (sides.length > 1) {  String rhs=sides[1].trim();  String[] deps=rhs.split(",");  for (  String dep : deps) {    dep=dep.trim();    if (dep.isEmpty()) {      continue;    }    String depKey=toKey(dep);    FractionDescriptor depDesc=this.descriptors.get(depKey);    if (depDesc == null) {      String[] gavParts=dep.split(":");      depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);      this.descriptors.put(depKey,depDesc);    }    desc.addDependency(depDesc);  }} @AT@ 3541 @LENGTH@ 827
------UPD Block@@ThenBody:{  String rhs=sides[1].trim();  String[] deps=rhs.split(",");  for (  String dep : deps) {    dep=dep.trim();    if (dep.isEmpty()) {      continue;    }    FractionDescriptor depDesc=this.descriptors.get(dep);    if (depDesc == null) {      String[] gavParts=dep.split(":");      depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);      this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);    }    desc.addDependency(depDesc);  }} @TO@ ThenBody:{  String rhs=sides[1].trim();  String[] deps=rhs.split(",");  for (  String dep : deps) {    dep=dep.trim();    if (dep.isEmpty()) {      continue;    }    String depKey=toKey(dep);    FractionDescriptor depDesc=this.descriptors.get(depKey);    if (depDesc == null) {      String[] gavParts=dep.split(":");      depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);      this.descriptors.put(depKey,depDesc);    }    desc.addDependency(depDesc);  }} @AT@ 3563 @LENGTH@ 805
---------UPD EnhancedForStatement@@for (String dep : deps) {  dep=dep.trim();  if (dep.isEmpty()) {    continue;  }  FractionDescriptor depDesc=this.descriptors.get(dep);  if (depDesc == null) {    String[] gavParts=dep.split(":");    depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);  }  desc.addDependency(depDesc);} @TO@ for (String dep : deps) {  dep=dep.trim();  if (dep.isEmpty()) {    continue;  }  String depKey=toKey(dep);  FractionDescriptor depDesc=this.descriptors.get(depKey);  if (depDesc == null) {    String[] gavParts=dep.split(":");    depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(depKey,depDesc);  }  desc.addDependency(depDesc);} @AT@ 3688 @LENGTH@ 662
------------UPD VariableDeclarationStatement@@FractionDescriptor depDesc=this.descriptors.get(dep); @TO@ FractionDescriptor depDesc=this.descriptors.get(depKey); @AT@ 3890 @LENGTH@ 55
---------------UPD VariableDeclarationFragment@@depDesc=this.descriptors.get(dep) @TO@ depDesc=this.descriptors.get(depKey) @AT@ 3909 @LENGTH@ 35
------------------UPD MethodInvocation@@this.descriptors.get(dep) @TO@ this.descriptors.get(depKey) @AT@ 3919 @LENGTH@ 25
---------------------UPD SimpleName@@MethodName:get:[dep] @TO@ MethodName:get:[depKey] @AT@ 3936 @LENGTH@ 8
------------------------UPD SimpleName@@dep @TO@ depKey @AT@ 3940 @LENGTH@ 3
------------INS VariableDeclarationStatement@@String depKey=toKey(dep); @TO@ EnhancedForStatement@@for (String dep : deps) {  dep=dep.trim();  if (dep.isEmpty()) {    continue;  }  FractionDescriptor depDesc=this.descriptors.get(dep);  if (depDesc == null) {    String[] gavParts=dep.split(":");    depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);    this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);  }  desc.addDependency(depDesc);} @AT@ 3910 @LENGTH@ 27
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String depKey=toKey(dep); @AT@ 3910 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@depKey=toKey(dep) @TO@ VariableDeclarationStatement@@String depKey=toKey(dep); @AT@ 3917 @LENGTH@ 19
------------------INS SimpleName@@depKey @TO@ VariableDeclarationFragment@@depKey=toKey(dep) @AT@ 3917 @LENGTH@ 6
------------------INS MethodInvocation@@toKey(dep) @TO@ VariableDeclarationFragment@@depKey=toKey(dep) @AT@ 3926 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:toKey:[dep] @TO@ MethodInvocation@@toKey(dep) @AT@ 3926 @LENGTH@ 10
------------------------INS SimpleName@@dep @TO@ SimpleName@@MethodName:toKey:[dep] @AT@ 3932 @LENGTH@ 3
------------UPD IfStatement@@if (depDesc == null) {  String[] gavParts=dep.split(":");  depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);} @TO@ if (depDesc == null) {  String[] gavParts=dep.split(":");  depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(depKey,depDesc);} @AT@ 3970 @LENGTH@ 305
---------------UPD Block@@ThenBody:{  String[] gavParts=dep.split(":");  depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc);} @TO@ ThenBody:{  String[] gavParts=dep.split(":");  depDesc=new FractionDescriptor(gavParts[0],gavParts[1],gavParts[2]);  this.descriptors.put(depKey,depDesc);} @AT@ 3991 @LENGTH@ 284
------------------UPD ExpressionStatement@@MethodInvocation:this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc) @TO@ MethodInvocation:this.descriptors.put(depKey,depDesc) @AT@ 4186 @LENGTH@ 63
---------------------UPD MethodInvocation@@this.descriptors.put(gavParts[0] + ":" + gavParts[1],depDesc) @TO@ this.descriptors.put(depKey,depDesc) @AT@ 4186 @LENGTH@ 62
------------------------UPD SimpleName@@MethodName:put:[gavParts[0] + ":" + gavParts[1], depDesc] @TO@ MethodName:put:[depKey, depDesc] @AT@ 4203 @LENGTH@ 45
---------------------------DEL InfixExpression@@gavParts[0] + ":" + gavParts[1] @AT@ 4207 @LENGTH@ 31
------------------------------DEL ArrayAccess@@gavParts[0] @AT@ 4207 @LENGTH@ 11
---------------------------------DEL SimpleName@@gavParts @AT@ 4207 @LENGTH@ 8
---------------------------------DEL NumberLiteral@@0 @AT@ 4216 @LENGTH@ 1
------------------------------DEL Operator@@+ @AT@ 4218 @LENGTH@ 1
------------------------------DEL StringLiteral@@":" @AT@ 4221 @LENGTH@ 3
------------------------------DEL ArrayAccess@@gavParts[1] @AT@ 4227 @LENGTH@ 11
---------------------------------DEL SimpleName@@gavParts @AT@ 4227 @LENGTH@ 8
---------------------------------DEL NumberLiteral@@1 @AT@ 4236 @LENGTH@ 1
---------------------------INS SimpleName@@depKey @TO@ SimpleName@@MethodName:put:[gavParts[0] + ":" + gavParts[1], depDesc] @AT@ 4282 @LENGTH@ 6


UPD VariableDeclarationStatement@@UnauthorizedUserException result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class); @TO@ UnauthorizedClientException result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class); @AT@ 4100 @LENGTH@ 120
---UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 4100 @LENGTH@ 25
---UPD VariableDeclarationFragment@@result=(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ result=(UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 4126 @LENGTH@ 93
------UPD CastExpression@@(UnauthorizedUserException)mapper.readValue(accessToken,OAuth2Exception.class) @TO@ (UnauthorizedClientException)mapper.readValue(accessToken,OAuth2Exception.class) @AT@ 4135 @LENGTH@ 84
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 4136 @LENGTH@ 25


UPD IfStatement@@if (abortAllRemaining) {  int minOpenTxnIndex=Math.max(currentTxnIndex + (state == TxnState.ABORTED || state == TxnState.COMMITTED ? 1 : 0),0);  for (currentTxnIndex=minOpenTxnIndex; currentTxnIndex < txnIds.size(); currentTxnIndex++) {    msClient.rollbackTxn(txnIds.get(currentTxnIndex));  }} else {  if (getCurrentTxnId() > 0) {    msClient.rollbackTxn(getCurrentTxnId());  }} @TO@ if (abortAllRemaining) {  int minOpenTxnIndex=Math.max(currentTxnIndex + (state == TxnState.ABORTED || state == TxnState.COMMITTED ? 1 : 0),0);  for (currentTxnIndex=minOpenTxnIndex; currentTxnIndex < txnIds.size(); currentTxnIndex++) {    msClient.rollbackTxn(txnIds.get(currentTxnIndex));  }  currentTxnIndex--;} else {  if (getCurrentTxnId() > 0) {    msClient.rollbackTxn(getCurrentTxnId());  }} @AT@ 33426 @LENGTH@ 763
---UPD Block@@ThenBody:{  int minOpenTxnIndex=Math.max(currentTxnIndex + (state == TxnState.ABORTED || state == TxnState.COMMITTED ? 1 : 0),0);  for (currentTxnIndex=minOpenTxnIndex; currentTxnIndex < txnIds.size(); currentTxnIndex++) {    msClient.rollbackTxn(txnIds.get(currentTxnIndex));  }} @TO@ ThenBody:{  int minOpenTxnIndex=Math.max(currentTxnIndex + (state == TxnState.ABORTED || state == TxnState.COMMITTED ? 1 : 0),0);  for (currentTxnIndex=minOpenTxnIndex; currentTxnIndex < txnIds.size(); currentTxnIndex++) {    msClient.rollbackTxn(txnIds.get(currentTxnIndex));  }  currentTxnIndex--;} @AT@ 33448 @LENGTH@ 612
------INS ExpressionStatement@@PostfixExpression:currentTxnIndex-- @TO@ Block@@ThenBody:{  int minOpenTxnIndex=Math.max(currentTxnIndex + (state == TxnState.ABORTED || state == TxnState.COMMITTED ? 1 : 0),0);  for (currentTxnIndex=minOpenTxnIndex; currentTxnIndex < txnIds.size(); currentTxnIndex++) {    msClient.rollbackTxn(txnIds.get(currentTxnIndex));  }} @AT@ 34065 @LENGTH@ 18
---------INS PostfixExpression@@currentTxnIndex-- @TO@ ExpressionStatement@@PostfixExpression:currentTxnIndex-- @AT@ 34065 @LENGTH@ 17
------------INS SimpleName@@currentTxnIndex @TO@ PostfixExpression@@currentTxnIndex-- @AT@ 34065 @LENGTH@ 15
------------INS Operator@@-- @TO@ PostfixExpression@@currentTxnIndex-- @AT@ 34081 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:BridgePropertyPlaceholderResolver, Properties properties,  @TO@ voidMethodName:BridgePropertyPlaceholderResolver, Properties properties,  @AT@ 9761 @LENGTH@ 117
---DEL Modifier@@public @AT@ 9761 @LENGTH@ 6


UPD IfStatement@@if (reflectInConf) {  final File layerConf=env.getInstalledImage().getLayersConf();  Properties props=new Properties();  StringBuilder str=new StringBuilder();  for (int i=0; i < layers.length; i++) {    if (i > 0) {      str.append(',');    }    str.append(layers[i]);  }  props.put(Constants.LAYERS,str.toString());  final FileOutputStream os=new FileOutputStream(layerConf);  try {    props.store(os,"");  }  finally {    IoUtils.safeClose(os);  }} @TO@ if (reflectInConf) {  final File layerConf=env.getInstalledImage().getLayersConf();  Properties props=new Properties();  StringBuilder str=new StringBuilder();  for (int i=0; i < layers.length; i++) {    if (i > 0) {      str.append(',');    }    str.append(layers[i]);  }  props.put(Constants.LAYERS,str.toString());  try (final FileOutputStream os=new FileOutputStream(layerConf)){    props.store(os,"");  } } @AT@ 5838 @LENGTH@ 724
---UPD Block@@ThenBody:{  final File layerConf=env.getInstalledImage().getLayersConf();  Properties props=new Properties();  StringBuilder str=new StringBuilder();  for (int i=0; i < layers.length; i++) {    if (i > 0) {      str.append(',');    }    str.append(layers[i]);  }  props.put(Constants.LAYERS,str.toString());  final FileOutputStream os=new FileOutputStream(layerConf);  try {    props.store(os,"");  }  finally {    IoUtils.safeClose(os);  }} @TO@ ThenBody:{  final File layerConf=env.getInstalledImage().getLayersConf();  Properties props=new Properties();  StringBuilder str=new StringBuilder();  for (int i=0; i < layers.length; i++) {    if (i > 0) {      str.append(',');    }    str.append(layers[i]);  }  props.put(Constants.LAYERS,str.toString());  try (final FileOutputStream os=new FileOutputStream(layerConf)){    props.store(os,"");  } } @AT@ 5857 @LENGTH@ 705
------INS TryStatement@@try (final FileOutputStream os=new FileOutputStream(layerConf)){  props.store(os,"");}  @TO@ Block@@ThenBody:{  final File layerConf=env.getInstalledImage().getLayersConf();  Properties props=new Properties();  StringBuilder str=new StringBuilder();  for (int i=0; i < layers.length; i++) {    if (i > 0) {      str.append(',');    }    str.append(layers[i]);  }  props.put(Constants.LAYERS,str.toString());  final FileOutputStream os=new FileOutputStream(layerConf);  try {    props.store(os,"");  }  finally {    IoUtils.safeClose(os);  }} @AT@ 6297 @LENGTH@ 117
---------INS VariableDeclarationExpression@@final FileOutputStream os=new FileOutputStream(layerConf) @TO@ TryStatement@@try (final FileOutputStream os=new FileOutputStream(layerConf)){  props.store(os,"");}  @AT@ 6302 @LENGTH@ 59
------------INS Modifier@@final @TO@ VariableDeclarationExpression@@final FileOutputStream os=new FileOutputStream(layerConf) @AT@ 6302 @LENGTH@ 5
------------INS SimpleType@@FileOutputStream @TO@ VariableDeclarationExpression@@final FileOutputStream os=new FileOutputStream(layerConf) @AT@ 6308 @LENGTH@ 16
------------MOV VariableDeclarationFragment@@os=new FileOutputStream(layerConf) @TO@ VariableDeclarationExpression@@final FileOutputStream os=new FileOutputStream(layerConf) @AT@ 6383 @LENGTH@ 36
---------MOV ExpressionStatement@@MethodInvocation:props.store(os,"") @TO@ TryStatement@@try (final FileOutputStream os=new FileOutputStream(layerConf)){  props.store(os,"");}  @AT@ 6455 @LENGTH@ 20
------DEL VariableDeclarationStatement@@final FileOutputStream os=new FileOutputStream(layerConf); @AT@ 6360 @LENGTH@ 60
---------DEL Modifier@@final @AT@ 6360 @LENGTH@ 5
---------DEL SimpleType@@FileOutputStream @AT@ 6366 @LENGTH@ 16
------DEL TryStatement@@try {  props.store(os,"");}  finally {  IoUtils.safeClose(os);} @AT@ 6433 @LENGTH@ 119
---------DEL Block@@FinallyBody:{  IoUtils.safeClose(os);} @AT@ 6498 @LENGTH@ 54
------------DEL ExpressionStatement@@MethodInvocation:IoUtils.safeClose(os) @AT@ 6516 @LENGTH@ 22
---------------DEL MethodInvocation@@IoUtils.safeClose(os) @AT@ 6516 @LENGTH@ 21
------------------DEL SimpleName@@Name:IoUtils @AT@ 6516 @LENGTH@ 7
------------------DEL SimpleName@@MethodName:safeClose:[os] @AT@ 6524 @LENGTH@ 13
---------------------DEL SimpleName@@os @AT@ 6534 @LENGTH@ 2


UPD Block@@WhileBody:{  beeLine.output(beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString()));} @TO@ WhileBody:{  tmp=hist.next().toString().split(":",2);  tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1);  beeLine.output(beeLine.getColorBuffer().pad(tmp[0],6).append(":" + tmp[1]));} @AT@ 5761 @LENGTH@ 117
---INS ExpressionStatement@@Assignment:tmp=hist.next().toString().split(":",2) @TO@ Block@@WhileBody:{  beeLine.output(beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString()));} @AT@ 5768 @LENGTH@ 43
------INS Assignment@@tmp=hist.next().toString().split(":",2) @TO@ ExpressionStatement@@Assignment:tmp=hist.next().toString().split(":",2) @AT@ 5768 @LENGTH@ 42
---------INS SimpleName@@tmp @TO@ Assignment@@tmp=hist.next().toString().split(":",2) @AT@ 5768 @LENGTH@ 3
---------INS Operator@@= @TO@ Assignment@@tmp=hist.next().toString().split(":",2) @AT@ 5771 @LENGTH@ 1
---------INS MethodInvocation@@hist.next().toString().split(":",2) @TO@ Assignment@@tmp=hist.next().toString().split(":",2) @AT@ 5774 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:toString:[] @TO@ MethodInvocation@@hist.next().toString().split(":",2) @AT@ 5774 @LENGTH@ 22
------------INS MethodInvocation@@MethodName:next:[] @TO@ MethodInvocation@@hist.next().toString().split(":",2) @AT@ 5774 @LENGTH@ 11
------------INS SimpleName@@Name:hist @TO@ MethodInvocation@@hist.next().toString().split(":",2) @AT@ 5774 @LENGTH@ 4
------------INS SimpleName@@MethodName:split:[":", 2] @TO@ MethodInvocation@@hist.next().toString().split(":",2) @AT@ 5797 @LENGTH@ 13
---------------INS StringLiteral@@":" @TO@ SimpleName@@MethodName:split:[":", 2] @AT@ 5803 @LENGTH@ 3
---------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:split:[":", 2] @AT@ 5808 @LENGTH@ 1
---UPD ExpressionStatement@@MethodInvocation:beeLine.output(beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString())) @TO@ MethodInvocation:beeLine.output(beeLine.getColorBuffer().pad(tmp[0],6).append(":" + tmp[1])) @AT@ 5769 @LENGTH@ 103
------UPD MethodInvocation@@beeLine.output(beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString())) @TO@ beeLine.output(beeLine.getColorBuffer().pad(tmp[0],6).append(":" + tmp[1])) @AT@ 5769 @LENGTH@ 102
---------UPD SimpleName@@MethodName:output:[beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString())] @TO@ MethodName:output:[beeLine.getColorBuffer().pad(tmp[0],6).append(":" + tmp[1])] @AT@ 5777 @LENGTH@ 94
------------UPD MethodInvocation@@beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString()) @TO@ beeLine.getColorBuffer().pad(tmp[0],6).append(":" + tmp[1]) @AT@ 5784 @LENGTH@ 86
---------------UPD MethodInvocation@@MethodName:pad:[index + ".", 6] @TO@ MethodName:pad:[tmp[0], 6] @AT@ 5784 @LENGTH@ 44
------------------DEL InfixExpression@@index + "." @AT@ 5813 @LENGTH@ 11
---------------------DEL SimpleName@@index @AT@ 5813 @LENGTH@ 5
---------------------DEL Operator@@+ @AT@ 5818 @LENGTH@ 1
---------------------DEL StringLiteral@@"." @AT@ 5821 @LENGTH@ 3
------------------INS ArrayAccess@@tmp[0] @TO@ MethodInvocation@@MethodName:pad:[index + ".", 6] @AT@ 5925 @LENGTH@ 6
---------------------INS SimpleName@@tmp @TO@ ArrayAccess@@tmp[0] @AT@ 5925 @LENGTH@ 3
---------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@tmp[0] @AT@ 5929 @LENGTH@ 1
---------------UPD SimpleName@@MethodName:append:[hist.next().toString()] @TO@ MethodName:append:[":" + tmp[1]] @AT@ 5840 @LENGTH@ 30
------------------DEL MethodInvocation@@hist.next().toString() @AT@ 5847 @LENGTH@ 22
---------------------DEL MethodInvocation@@MethodName:next:[] @AT@ 5847 @LENGTH@ 11
---------------------DEL SimpleName@@Name:hist @AT@ 5847 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:toString:[] @AT@ 5859 @LENGTH@ 10
------------------INS InfixExpression@@":" + tmp[1] @TO@ SimpleName@@MethodName:append:[hist.next().toString()] @AT@ 5954 @LENGTH@ 12
---------------------INS StringLiteral@@":" @TO@ InfixExpression@@":" + tmp[1] @AT@ 5954 @LENGTH@ 3
---------------------INS Operator@@+ @TO@ InfixExpression@@":" + tmp[1] @AT@ 5957 @LENGTH@ 1
---------------------INS ArrayAccess@@tmp[1] @TO@ InfixExpression@@":" + tmp[1] @AT@ 5960 @LENGTH@ 6
------------------------INS SimpleName@@tmp @TO@ ArrayAccess@@tmp[1] @AT@ 5960 @LENGTH@ 3
------------------------INS NumberLiteral@@1 @TO@ ArrayAccess@@tmp[1] @AT@ 5964 @LENGTH@ 1
---INS ExpressionStatement@@Assignment:tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @TO@ Block@@WhileBody:{  beeLine.output(beeLine.getColorBuffer().pad(index + ".",6).append(hist.next().toString()));} @AT@ 5818 @LENGTH@ 56
------INS Assignment@@tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @TO@ ExpressionStatement@@Assignment:tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5818 @LENGTH@ 55
---------INS ArrayAccess@@tmp[0] @TO@ Assignment@@tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5818 @LENGTH@ 6
------------INS SimpleName@@tmp @TO@ ArrayAccess@@tmp[0] @AT@ 5818 @LENGTH@ 3
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@tmp[0] @AT@ 5822 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5824 @LENGTH@ 1
---------INS MethodInvocation@@Integer.toString(Integer.parseInt(tmp[0]) + 1) @TO@ Assignment@@tmp[0]=Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5827 @LENGTH@ 46
------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5827 @LENGTH@ 7
------------INS SimpleName@@MethodName:toString:[Integer.parseInt(tmp[0]) + 1] @TO@ MethodInvocation@@Integer.toString(Integer.parseInt(tmp[0]) + 1) @AT@ 5835 @LENGTH@ 38
---------------INS InfixExpression@@Integer.parseInt(tmp[0]) + 1 @TO@ SimpleName@@MethodName:toString:[Integer.parseInt(tmp[0]) + 1] @AT@ 5844 @LENGTH@ 28
------------------INS MethodInvocation@@Integer.parseInt(tmp[0]) @TO@ InfixExpression@@Integer.parseInt(tmp[0]) + 1 @AT@ 5844 @LENGTH@ 24
---------------------INS SimpleName@@Name:Integer @TO@ MethodInvocation@@Integer.parseInt(tmp[0]) @AT@ 5844 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:parseInt:[tmp[0]] @TO@ MethodInvocation@@Integer.parseInt(tmp[0]) @AT@ 5852 @LENGTH@ 16
------------------------INS ArrayAccess@@tmp[0] @TO@ SimpleName@@MethodName:parseInt:[tmp[0]] @AT@ 5861 @LENGTH@ 6
---------------------------INS SimpleName@@tmp @TO@ ArrayAccess@@tmp[0] @AT@ 5861 @LENGTH@ 3
---------------------------INS NumberLiteral@@0 @TO@ ArrayAccess@@tmp[0] @AT@ 5865 @LENGTH@ 1
------------------INS Operator@@+ @TO@ InfixExpression@@Integer.parseInt(tmp[0]) + 1 @AT@ 5868 @LENGTH@ 1
------------------INS NumberLiteral@@1 @TO@ InfixExpression@@Integer.parseInt(tmp[0]) + 1 @AT@ 5871 @LENGTH@ 1


UPD TypeDeclaration@@[public]Wait,  @TO@ [public, final]Wait,  @AT@ 130 @LENGTH@ 1091
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Wait,  @AT@ 908 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:EndpointPathComparator, String syntax,  @TO@ voidMethodName:EndpointPathComparator, String syntax,  @AT@ 5494 @LENGTH@ 90
---DEL Modifier@@public @AT@ 5494 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:Collections.sort(postProcessors,AnnotationAwareOrderComparator.INSTANCE) @TO@ MethodDeclaration@@public, Object, MethodName:postProcess, Object object,  @AT@ 3809 @LENGTH@ 74
---INS MethodInvocation@@Collections.sort(postProcessors,AnnotationAwareOrderComparator.INSTANCE) @TO@ ExpressionStatement@@MethodInvocation:Collections.sort(postProcessors,AnnotationAwareOrderComparator.INSTANCE) @AT@ 3809 @LENGTH@ 73
------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.sort(postProcessors,AnnotationAwareOrderComparator.INSTANCE) @AT@ 3809 @LENGTH@ 11
------INS SimpleName@@MethodName:sort:[postProcessors, AnnotationAwareOrderComparator.INSTANCE] @TO@ MethodInvocation@@Collections.sort(postProcessors,AnnotationAwareOrderComparator.INSTANCE) @AT@ 3821 @LENGTH@ 61
---------INS SimpleName@@postProcessors @TO@ SimpleName@@MethodName:sort:[postProcessors, AnnotationAwareOrderComparator.INSTANCE] @AT@ 3826 @LENGTH@ 14
---------INS QualifiedName@@AnnotationAwareOrderComparator.INSTANCE @TO@ SimpleName@@MethodName:sort:[postProcessors, AnnotationAwareOrderComparator.INSTANCE] @AT@ 3842 @LENGTH@ 39
------------INS SimpleName@@AnnotationAwareOrderComparator @TO@ QualifiedName@@AnnotationAwareOrderComparator.INSTANCE @AT@ 3842 @LENGTH@ 30
------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@AnnotationAwareOrderComparator.INSTANCE @AT@ 3873 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(context.getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_CUSTOM","ROLE_ADMIN") @TO@ MethodInvocation:assertThat(context.getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_CUSTOM","ROLE_ADMIN") @AT@ 3802 @LENGTH@ 128
---UPD MethodInvocation@@assertThat(context.getAuthentication().getAuthorities()).onProperty("authority").containsOnly("ROLE_CUSTOM","ROLE_ADMIN") @TO@ assertThat(context.getAuthentication().getAuthorities()).extracting("authority").containsOnly("ROLE_CUSTOM","ROLE_ADMIN") @AT@ 3802 @LENGTH@ 127
------UPD MethodInvocation@@MethodName:onProperty:["authority"] @TO@ MethodName:extracting:["authority"] @AT@ 3802 @LENGTH@ 80


UPD MethodDeclaration@@public, voidMethodName:AnnotatedMethodCache, Class<? extends Annotation> annotationType,  @TO@ voidMethodName:AnnotatedMethodCache, Class<? extends Annotation> annotationType,  @AT@ 1340 @LENGTH@ 125
---DEL Modifier@@public @AT@ 1340 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MappingRedisConverterUnitTests,  @AT@ 46917 @LENGTH@ 464
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 46917 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 46924 @LENGTH@ 4
---INS SimpleName@@MethodName:writeHandlesArraysOfPrimitivesProperly @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 46929 @LENGTH@ 38
---INS VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 46975 @LENGTH@ 65
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<String,String>(); @AT@ 46975 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 46975 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 46979 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 46987 @LENGTH@ 6
------INS VariableDeclarationFragment@@source=new LinkedHashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> source=new LinkedHashMap<String,String>(); @AT@ 46995 @LENGTH@ 44
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new LinkedHashMap<String,String>() @AT@ 46995 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedHashMap<String,String>[] @TO@ VariableDeclarationFragment@@source=new LinkedHashMap<String,String>() @AT@ 47004 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<String,String>[] @AT@ 47004 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashMap<String,String> @TO@ ClassInstanceCreation@@LinkedHashMap<String,String>[] @AT@ 47008 @LENGTH@ 29
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 47008 @LENGTH@ 13
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 47022 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 47030 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[0]","1") @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47043 @LENGTH@ 41
------INS MethodInvocation@@source.put("arrayOfPrimitives.[0]","1") @TO@ ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[0]","1") @AT@ 47043 @LENGTH@ 40
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[0]","1") @AT@ 47043 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["arrayOfPrimitives.[0]", "1"] @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[0]","1") @AT@ 47050 @LENGTH@ 33
------------INS StringLiteral@@"arrayOfPrimitives.[0]" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[0]", "1"] @AT@ 47054 @LENGTH@ 23
------------INS StringLiteral@@"1" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[0]", "1"] @AT@ 47079 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[1]","2") @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47087 @LENGTH@ 41
------INS MethodInvocation@@source.put("arrayOfPrimitives.[1]","2") @TO@ ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[1]","2") @AT@ 47087 @LENGTH@ 40
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[1]","2") @AT@ 47087 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["arrayOfPrimitives.[1]", "2"] @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[1]","2") @AT@ 47094 @LENGTH@ 33
------------INS StringLiteral@@"arrayOfPrimitives.[1]" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[1]", "2"] @AT@ 47098 @LENGTH@ 23
------------INS StringLiteral@@"2" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[1]", "2"] @AT@ 47123 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[2]","3") @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47131 @LENGTH@ 41
------INS MethodInvocation@@source.put("arrayOfPrimitives.[2]","3") @TO@ ExpressionStatement@@MethodInvocation:source.put("arrayOfPrimitives.[2]","3") @AT@ 47131 @LENGTH@ 40
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[2]","3") @AT@ 47131 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["arrayOfPrimitives.[2]", "3"] @TO@ MethodInvocation@@source.put("arrayOfPrimitives.[2]","3") @AT@ 47138 @LENGTH@ 33
------------INS StringLiteral@@"arrayOfPrimitives.[2]" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[2]", "3"] @AT@ 47142 @LENGTH@ 23
------------INS StringLiteral@@"3" @TO@ SimpleName@@MethodName:put:["arrayOfPrimitives.[2]", "3"] @AT@ 47167 @LENGTH@ 3
---INS VariableDeclarationStatement@@WithArrays target=read(WithArrays.class,source); @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47176 @LENGTH@ 51
------INS SimpleType@@WithArrays @TO@ VariableDeclarationStatement@@WithArrays target=read(WithArrays.class,source); @AT@ 47176 @LENGTH@ 10
------INS VariableDeclarationFragment@@target=read(WithArrays.class,source) @TO@ VariableDeclarationStatement@@WithArrays target=read(WithArrays.class,source); @AT@ 47187 @LENGTH@ 39
---------INS SimpleName@@target @TO@ VariableDeclarationFragment@@target=read(WithArrays.class,source) @AT@ 47187 @LENGTH@ 6
---------INS MethodInvocation@@read(WithArrays.class,source) @TO@ VariableDeclarationFragment@@target=read(WithArrays.class,source) @AT@ 47196 @LENGTH@ 30
------------INS SimpleName@@MethodName:read:[WithArrays.class, source] @TO@ MethodInvocation@@read(WithArrays.class,source) @AT@ 47196 @LENGTH@ 30
---------------INS TypeLiteral@@WithArrays.class @TO@ SimpleName@@MethodName:read:[WithArrays.class, source] @AT@ 47201 @LENGTH@ 16
---------------INS SimpleName@@source @TO@ SimpleName@@MethodName:read:[WithArrays.class, source] @AT@ 47219 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[0],is(1)) @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47231 @LENGTH@ 47
------INS MethodInvocation@@assertThat(target.arrayOfPrimitives[0],is(1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[0],is(1)) @AT@ 47231 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[0], is(1)] @TO@ MethodInvocation@@assertThat(target.arrayOfPrimitives[0],is(1)) @AT@ 47231 @LENGTH@ 46
------------INS ArrayAccess@@target.arrayOfPrimitives[0] @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[0], is(1)] @AT@ 47242 @LENGTH@ 27
---------------INS QualifiedName@@target.arrayOfPrimitives @TO@ ArrayAccess@@target.arrayOfPrimitives[0] @AT@ 47242 @LENGTH@ 24
------------------INS SimpleName@@target @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47242 @LENGTH@ 6
------------------INS SimpleName@@arrayOfPrimitives @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47249 @LENGTH@ 17
---------------INS NumberLiteral@@0 @TO@ ArrayAccess@@target.arrayOfPrimitives[0] @AT@ 47267 @LENGTH@ 1
------------INS MethodInvocation@@is(1) @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[0], is(1)] @AT@ 47271 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 47271 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 47274 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[1] @TO@ MethodInvocation@@is(1) @AT@ 47271 @LENGTH@ 5
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:is:[1] @AT@ 47274 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[1],is(2)) @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47281 @LENGTH@ 47
------INS MethodInvocation@@assertThat(target.arrayOfPrimitives[1],is(2)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[1],is(2)) @AT@ 47281 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[1], is(2)] @TO@ MethodInvocation@@assertThat(target.arrayOfPrimitives[1],is(2)) @AT@ 47281 @LENGTH@ 46
------------INS ArrayAccess@@target.arrayOfPrimitives[1] @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[1], is(2)] @AT@ 47292 @LENGTH@ 27
---------------INS QualifiedName@@target.arrayOfPrimitives @TO@ ArrayAccess@@target.arrayOfPrimitives[1] @AT@ 47292 @LENGTH@ 24
------------------INS SimpleName@@target @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47292 @LENGTH@ 6
------------------INS SimpleName@@arrayOfPrimitives @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47299 @LENGTH@ 17
---------------INS NumberLiteral@@1 @TO@ ArrayAccess@@target.arrayOfPrimitives[1] @AT@ 47317 @LENGTH@ 1
------------INS MethodInvocation@@is(2) @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[1], is(2)] @AT@ 47321 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 47321 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 47324 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[2] @TO@ MethodInvocation@@is(2) @AT@ 47321 @LENGTH@ 5
------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:is:[2] @AT@ 47324 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[2],is(3)) @TO@ MethodDeclaration@@public, void, MethodName:writeHandlesArraysOfPrimitivesProperly,  @AT@ 47331 @LENGTH@ 47
------INS MethodInvocation@@assertThat(target.arrayOfPrimitives[2],is(3)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(target.arrayOfPrimitives[2],is(3)) @AT@ 47331 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[2], is(3)] @TO@ MethodInvocation@@assertThat(target.arrayOfPrimitives[2],is(3)) @AT@ 47331 @LENGTH@ 46
------------INS ArrayAccess@@target.arrayOfPrimitives[2] @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[2], is(3)] @AT@ 47342 @LENGTH@ 27
---------------INS QualifiedName@@target.arrayOfPrimitives @TO@ ArrayAccess@@target.arrayOfPrimitives[2] @AT@ 47342 @LENGTH@ 24
------------------INS SimpleName@@target @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47342 @LENGTH@ 6
------------------INS SimpleName@@arrayOfPrimitives @TO@ QualifiedName@@target.arrayOfPrimitives @AT@ 47349 @LENGTH@ 17
---------------INS NumberLiteral@@2 @TO@ ArrayAccess@@target.arrayOfPrimitives[2] @AT@ 47367 @LENGTH@ 1
------------INS MethodInvocation@@is(3) @TO@ SimpleName@@MethodName:assertThat:[target.arrayOfPrimitives[2], is(3)] @AT@ 47371 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[3] @TO@ MethodInvocation@@is(3) @AT@ 47371 @LENGTH@ 5
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:is:[3] @AT@ 47374 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[3] @TO@ MethodInvocation@@is(3) @AT@ 47371 @LENGTH@ 5
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:is:[3] @AT@ 47374 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @TO@ TypeDeclaration@@[public]OAuth2AuthenticationTests,  @AT@ 3134 @LENGTH@ 260
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3134 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3141 @LENGTH@ 4
---INS SimpleName@@MethodName:testEraseCredentialsUserAuthentication @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3146 @LENGTH@ 38
---INS VariableDeclarationStatement@@OAuth2Authentication authentication=new OAuth2Authentication(request,userAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3191 @LENGTH@ 92
------INS SimpleType@@OAuth2Authentication @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=new OAuth2Authentication(request,userAuthentication); @AT@ 3191 @LENGTH@ 20
------INS VariableDeclarationFragment@@authentication=new OAuth2Authentication(request,userAuthentication) @TO@ VariableDeclarationStatement@@OAuth2Authentication authentication=new OAuth2Authentication(request,userAuthentication); @AT@ 3212 @LENGTH@ 70
---------INS SimpleName@@authentication @TO@ VariableDeclarationFragment@@authentication=new OAuth2Authentication(request,userAuthentication) @AT@ 3212 @LENGTH@ 14
---------INS ClassInstanceCreation@@OAuth2Authentication[request, userAuthentication] @TO@ VariableDeclarationFragment@@authentication=new OAuth2Authentication(request,userAuthentication) @AT@ 3229 @LENGTH@ 53
------------INS New@@new @TO@ ClassInstanceCreation@@OAuth2Authentication[request, userAuthentication] @AT@ 3229 @LENGTH@ 3
------------INS SimpleType@@OAuth2Authentication @TO@ ClassInstanceCreation@@OAuth2Authentication[request, userAuthentication] @AT@ 3233 @LENGTH@ 20
------------INS SimpleName@@request @TO@ ClassInstanceCreation@@OAuth2Authentication[request, userAuthentication] @AT@ 3254 @LENGTH@ 7
------------INS SimpleName@@userAuthentication @TO@ ClassInstanceCreation@@OAuth2Authentication[request, userAuthentication] @AT@ 3263 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:authentication.eraseCredentials() @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3286 @LENGTH@ 34
------INS MethodInvocation@@authentication.eraseCredentials() @TO@ ExpressionStatement@@MethodInvocation:authentication.eraseCredentials() @AT@ 3286 @LENGTH@ 33
---------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.eraseCredentials() @AT@ 3286 @LENGTH@ 14
---------INS SimpleName@@MethodName:eraseCredentials:[] @TO@ MethodInvocation@@authentication.eraseCredentials() @AT@ 3301 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertNull(authentication.getUserAuthentication().getCredentials()) @TO@ MethodDeclaration@@public, void, MethodName:testEraseCredentialsUserAuthentication,  @AT@ 3323 @LENGTH@ 68
------INS MethodInvocation@@assertNull(authentication.getUserAuthentication().getCredentials()) @TO@ ExpressionStatement@@MethodInvocation:assertNull(authentication.getUserAuthentication().getCredentials()) @AT@ 3323 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertNull:[authentication.getUserAuthentication().getCredentials()] @TO@ MethodInvocation@@assertNull(authentication.getUserAuthentication().getCredentials()) @AT@ 3323 @LENGTH@ 67
------------INS MethodInvocation@@authentication.getUserAuthentication().getCredentials() @TO@ SimpleName@@MethodName:assertNull:[authentication.getUserAuthentication().getCredentials()] @AT@ 3334 @LENGTH@ 55
---------------INS MethodInvocation@@MethodName:getUserAuthentication:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getCredentials() @AT@ 3334 @LENGTH@ 38
---------------INS SimpleName@@Name:authentication @TO@ MethodInvocation@@authentication.getUserAuthentication().getCredentials() @AT@ 3334 @LENGTH@ 14
---------------INS SimpleName@@MethodName:getCredentials:[] @TO@ MethodInvocation@@authentication.getUserAuthentication().getCredentials() @AT@ 3373 @LENGTH@ 16


UPD IfStatement@@if (xml != null) {  RestsDefinition rests=ModelHelper.createModelFromXml(null,xml,RestsDefinition.class);  if (rests != null) {    return rests.getRests();  }} @TO@ if (xml != null) {  LOG.debug("DumpRestAsXml:\n{}",xml);  RestsDefinition rests=ModelHelper.createModelFromXml(null,xml,RestsDefinition.class);  if (rests != null) {    return rests.getRests();  }} @AT@ 6271 @LENGTH@ 238
---UPD Block@@ThenBody:{  RestsDefinition rests=ModelHelper.createModelFromXml(null,xml,RestsDefinition.class);  if (rests != null) {    return rests.getRests();  }} @TO@ ThenBody:{  LOG.debug("DumpRestAsXml:\n{}",xml);  RestsDefinition rests=ModelHelper.createModelFromXml(null,xml,RestsDefinition.class);  if (rests != null) {    return rests.getRests();  }} @AT@ 6288 @LENGTH@ 221
------INS ExpressionStatement@@MethodInvocation:LOG.debug("DumpRestAsXml:\n{}",xml) @TO@ Block@@ThenBody:{  RestsDefinition rests=ModelHelper.createModelFromXml(null,xml,RestsDefinition.class);  if (rests != null) {    return rests.getRests();  }} @AT@ 6306 @LENGTH@ 37
---------INS MethodInvocation@@LOG.debug("DumpRestAsXml:\n{}",xml) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("DumpRestAsXml:\n{}",xml) @AT@ 6306 @LENGTH@ 36
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("DumpRestAsXml:\n{}",xml) @AT@ 6306 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["DumpRestAsXml:\n{}", xml] @TO@ MethodInvocation@@LOG.debug("DumpRestAsXml:\n{}",xml) @AT@ 6310 @LENGTH@ 32
---------------INS StringLiteral@@"DumpRestAsXml:\n{}" @TO@ SimpleName@@MethodName:debug:["DumpRestAsXml:\n{}", xml] @AT@ 6316 @LENGTH@ 20
---------------INS SimpleName@@xml @TO@ SimpleName@@MethodName:debug:["DumpRestAsXml:\n{}", xml] @AT@ 6338 @LENGTH@ 3


INS IfStatement@@if (strategy != null && shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @TO@ MethodDeclaration@@private, AggregationStrategy, MethodName:createAggregationStrategy, RouteContext routeContext,  @AT@ 6602 @LENGTH@ 203
---INS InfixExpression@@strategy != null && shareUnitOfWork != null && shareUnitOfWork @TO@ IfStatement@@if (strategy != null && shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 6606 @LENGTH@ 62
------INS InfixExpression@@strategy != null && shareUnitOfWork != null @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null && shareUnitOfWork @AT@ 6606 @LENGTH@ 43
---------INS InfixExpression@@strategy != null @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null @AT@ 6606 @LENGTH@ 16
------------INS SimpleName@@strategy @TO@ InfixExpression@@strategy != null @AT@ 6606 @LENGTH@ 8
------------INS Operator@@!= @TO@ InfixExpression@@strategy != null @AT@ 6614 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@strategy != null @AT@ 6618 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null @AT@ 6622 @LENGTH@ 2
---------INS InfixExpression@@shareUnitOfWork != null @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null @AT@ 6626 @LENGTH@ 23
------------INS SimpleName@@shareUnitOfWork @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 6626 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 6641 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@shareUnitOfWork != null @AT@ 6645 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null && shareUnitOfWork @AT@ 6649 @LENGTH@ 2
------INS SimpleName@@shareUnitOfWork @TO@ InfixExpression@@strategy != null && shareUnitOfWork != null && shareUnitOfWork @AT@ 6653 @LENGTH@ 15
---INS Block@@ThenBody:{  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @TO@ IfStatement@@if (strategy != null && shareUnitOfWork != null && shareUnitOfWork) {  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 6670 @LENGTH@ 135
------INS ExpressionStatement@@Assignment:strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @TO@ Block@@ThenBody:{  strategy=new ShareUnitOfWorkAggregationStrategy(strategy);} @AT@ 6735 @LENGTH@ 60
---------INS Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @TO@ ExpressionStatement@@Assignment:strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 6735 @LENGTH@ 59
------------INS SimpleName@@strategy @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 6735 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 6743 @LENGTH@ 1
------------INS ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @TO@ Assignment@@strategy=new ShareUnitOfWorkAggregationStrategy(strategy) @AT@ 6746 @LENGTH@ 48
---------------INS New@@new @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 6746 @LENGTH@ 3
---------------INS SimpleType@@ShareUnitOfWorkAggregationStrategy @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 6750 @LENGTH@ 34
---------------INS SimpleName@@strategy @TO@ ClassInstanceCreation@@ShareUnitOfWorkAggregationStrategy[strategy] @AT@ 6785 @LENGTH@ 8


UPD TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  Class<?> clazz=blueprintContainer.loadClass(getServiceInterface());  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,clazz);} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @TO@ try {  ServiceHelper.startService(endpoint);  producer=endpoint.createProducer();  getCamelContext().addService(producer,true,true);  Class<?> clazz=blueprintContainer.loadClass(getServiceInterface());  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,clazz);} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 4066 @LENGTH@ 382
---MOV ExpressionStatement@@Assignment:producer=endpoint.createProducer() @TO@ TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  Class<?> clazz=blueprintContainer.loadClass(getServiceInterface());  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,clazz);} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 4084 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startService(producer) @TO@ MethodInvocation:ServiceHelper.startService(endpoint) @AT@ 4134 @LENGTH@ 37
------UPD MethodInvocation@@ServiceHelper.startService(producer) @TO@ ServiceHelper.startService(endpoint) @AT@ 4134 @LENGTH@ 36
---------UPD SimpleName@@MethodName:startService:[producer] @TO@ MethodName:startService:[endpoint] @AT@ 4148 @LENGTH@ 22
------------UPD SimpleName@@producer @TO@ endpoint @AT@ 4161 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:getCamelContext().addService(producer,true,true) @TO@ TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  Class<?> clazz=blueprintContainer.loadClass(getServiceInterface());  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,clazz);} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 4286 @LENGTH@ 51
------INS MethodInvocation@@getCamelContext().addService(producer,true,true) @TO@ ExpressionStatement@@MethodInvocation:getCamelContext().addService(producer,true,true) @AT@ 4286 @LENGTH@ 50
---------INS MethodInvocation@@MethodName:getCamelContext:[] @TO@ MethodInvocation@@getCamelContext().addService(producer,true,true) @AT@ 4286 @LENGTH@ 17
---------INS SimpleName@@MethodName:addService:[producer, true, true] @TO@ MethodInvocation@@getCamelContext().addService(producer,true,true) @AT@ 4304 @LENGTH@ 32
------------INS SimpleName@@producer @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 4315 @LENGTH@ 8
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 4325 @LENGTH@ 4
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 4331 @LENGTH@ 4


UPD EnumDeclaration@@[public, static]Colour,  @TO@ [public]Colour,  @AT@ 4959 @LENGTH@ 47
---DEL Modifier@@static @AT@ 4966 @LENGTH@ 6


INS IfStatement@@if (a.getClass().isArray() && b.getClass().isArray()) {  return Objects.deepEquals(a,b);} else {  return a.equals(b);} @TO@ MethodDeclaration@@public, static, boolean, MethodName:equal, final Object a, final Object b, final boolean ignoreCase,  @AT@ 8129 @LENGTH@ 232
---INS InfixExpression@@a.getClass().isArray() && b.getClass().isArray() @TO@ IfStatement@@if (a.getClass().isArray() && b.getClass().isArray()) {  return Objects.deepEquals(a,b);} else {  return a.equals(b);} @AT@ 8133 @LENGTH@ 48
------INS MethodInvocation@@a.getClass().isArray() @TO@ InfixExpression@@a.getClass().isArray() && b.getClass().isArray() @AT@ 8133 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@a.getClass().isArray() @AT@ 8133 @LENGTH@ 12
---------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.getClass().isArray() @AT@ 8133 @LENGTH@ 1
---------INS SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@a.getClass().isArray() @AT@ 8146 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@a.getClass().isArray() && b.getClass().isArray() @AT@ 8155 @LENGTH@ 2
------INS MethodInvocation@@b.getClass().isArray() @TO@ InfixExpression@@a.getClass().isArray() && b.getClass().isArray() @AT@ 8159 @LENGTH@ 22
---------INS MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@b.getClass().isArray() @AT@ 8159 @LENGTH@ 12
---------INS SimpleName@@Name:b @TO@ MethodInvocation@@b.getClass().isArray() @AT@ 8159 @LENGTH@ 1
---------INS SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@b.getClass().isArray() @AT@ 8172 @LENGTH@ 9
---INS Block@@ThenBody:{  return Objects.deepEquals(a,b);} @TO@ IfStatement@@if (a.getClass().isArray() && b.getClass().isArray()) {  return Objects.deepEquals(a,b);} else {  return a.equals(b);} @AT@ 8183 @LENGTH@ 95
------MOV ReturnStatement@@MethodInvocation:Objects.deepEquals(a,b) @TO@ Block@@ThenBody:{  return Objects.deepEquals(a,b);} @AT@ 8129 @LENGTH@ 32
---INS Block@@ElseBody:{  return a.equals(b);} @TO@ IfStatement@@if (a.getClass().isArray() && b.getClass().isArray()) {  return Objects.deepEquals(a,b);} else {  return a.equals(b);} @AT@ 8284 @LENGTH@ 77
------INS ReturnStatement@@MethodInvocation:a.equals(b) @TO@ Block@@ElseBody:{  return a.equals(b);} @AT@ 8332 @LENGTH@ 19
---------INS MethodInvocation@@a.equals(b) @TO@ ReturnStatement@@MethodInvocation:a.equals(b) @AT@ 8339 @LENGTH@ 11
------------INS SimpleName@@Name:a @TO@ MethodInvocation@@a.equals(b) @AT@ 8339 @LENGTH@ 1
------------INS SimpleName@@MethodName:equals:[b] @TO@ MethodInvocation@@a.equals(b) @AT@ 8341 @LENGTH@ 9
---------------INS SimpleName@@b @TO@ SimpleName@@MethodName:equals:[b] @AT@ 8348 @LENGTH@ 1


UPD TypeDeclaration@@[public]NullRunAsManagerTests, TestCase @TO@ [public]NullRunAsManagerTests,  @AT@ 968 @LENGTH@ 711
---DEL SimpleType@@TestCase @AT@ 1011 @LENGTH@ 8


UPD MethodDeclaration@@voidMethodName:PolicyContextIdInterceptor, final String policyContextID,  @TO@ public, voidMethodName:PolicyContextIdInterceptor, final String policyContextID,  @AT@ 1493 @LENGTH@ 112
---INS Modifier@@public @TO@ MethodDeclaration@@voidMethodName:PolicyContextIdInterceptor, final String policyContextID,  @AT@ 1500 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:daemonId=new DaemonId(UserGroupInformation.getCurrentUser().getUserName(),LlapUtil.generateClusterName(daemonConf),hostName,appName,System.currentTimeMillis()) @TO@ Assignment:daemonId=new DaemonId(UserGroupInformation.getCurrentUser().getShortUserName(),LlapUtil.generateClusterName(daemonConf),hostName,appName,System.currentTimeMillis()) @AT@ 7445 @LENGTH@ 176
---UPD Assignment@@daemonId=new DaemonId(UserGroupInformation.getCurrentUser().getUserName(),LlapUtil.generateClusterName(daemonConf),hostName,appName,System.currentTimeMillis()) @TO@ daemonId=new DaemonId(UserGroupInformation.getCurrentUser().getShortUserName(),LlapUtil.generateClusterName(daemonConf),hostName,appName,System.currentTimeMillis()) @AT@ 7445 @LENGTH@ 175
------UPD ClassInstanceCreation@@DaemonId[UserGroupInformation.getCurrentUser().getUserName(), LlapUtil.generateClusterName(daemonConf), hostName, appName, System.currentTimeMillis()] @TO@ DaemonId[UserGroupInformation.getCurrentUser().getShortUserName(), LlapUtil.generateClusterName(daemonConf), hostName, appName, System.currentTimeMillis()] @AT@ 7456 @LENGTH@ 164
---------UPD MethodInvocation@@UserGroupInformation.getCurrentUser().getUserName() @TO@ UserGroupInformation.getCurrentUser().getShortUserName() @AT@ 7469 @LENGTH@ 51
------------UPD SimpleName@@MethodName:getUserName:[] @TO@ MethodName:getShortUserName:[] @AT@ 7507 @LENGTH@ 13


UPD TypeDeclaration@@[public]EtcdRoutePolicyMain,  @TO@ [public, final]EtcdRoutePolicyMain,  @AT@ 935 @LENGTH@ 846
---INS Modifier@@final @TO@ TypeDeclaration@@[public]EtcdRoutePolicyMain,  @AT@ 942 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:CorrelationMessagePostProcessor, MessagePostProcessor userPostProcessor, CorrelationData correlationData,  @TO@ private, voidMethodName:CorrelationMessagePostProcessor, MessagePostProcessor userPostProcessor, CorrelationData correlationData,  @AT@ 22872 @LENGTH@ 248
---UPD Modifier@@public @TO@ private @AT@ 22872 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:TempRouteBuilder, String routeId,  @TO@ voidMethodName:TempRouteBuilder, String routeId,  @AT@ 2568 @LENGTH@ 87
---DEL Modifier@@public @AT@ 2568 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 4407 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 4407 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 4426 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 4440 @LENGTH@ 2


UPD MethodDeclaration@@public, voidMethodName:DefaultDataReader, FileSystem fs, Path path, boolean useZeroCopy, CompressionCodec codec,  @TO@ private, voidMethodName:DefaultDataReader, DataReaderProperties properties,  @AT@ 2440 @LENGTH@ 220
---UPD Modifier@@public @TO@ private @AT@ 2440 @LENGTH@ 6
---UPD SingleVariableDeclaration@@FileSystem fs @TO@ DataReaderProperties properties @AT@ 2474 @LENGTH@ 13
------UPD SimpleType@@FileSystem @TO@ DataReaderProperties @AT@ 2474 @LENGTH@ 10
------UPD SimpleName@@fs @TO@ properties @AT@ 2485 @LENGTH@ 2
---DEL SingleVariableDeclaration@@Path path @AT@ 2489 @LENGTH@ 9
------DEL SimpleType@@Path @AT@ 2489 @LENGTH@ 4
------DEL SimpleName@@path @AT@ 2494 @LENGTH@ 4
---DEL SingleVariableDeclaration@@boolean useZeroCopy @AT@ 2500 @LENGTH@ 19
------DEL PrimitiveType@@boolean @AT@ 2500 @LENGTH@ 7
------DEL SimpleName@@useZeroCopy @AT@ 2508 @LENGTH@ 11
---DEL SingleVariableDeclaration@@CompressionCodec codec @AT@ 2521 @LENGTH@ 22
------DEL SimpleType@@CompressionCodec @AT@ 2521 @LENGTH@ 16
------DEL SimpleName@@codec @AT@ 2538 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:this.fs=fs @TO@ Assignment:this.fs=properties.getFileSystem() @AT@ 2553 @LENGTH@ 13
------UPD Assignment@@this.fs=fs @TO@ this.fs=properties.getFileSystem() @AT@ 2553 @LENGTH@ 12
---------DEL SimpleName@@fs @AT@ 2563 @LENGTH@ 2
---------INS MethodInvocation@@properties.getFileSystem() @TO@ Assignment@@this.fs=fs @AT@ 2566 @LENGTH@ 26
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getFileSystem() @AT@ 2566 @LENGTH@ 10
------------INS SimpleName@@MethodName:getFileSystem:[] @TO@ MethodInvocation@@properties.getFileSystem() @AT@ 2577 @LENGTH@ 15
---UPD ExpressionStatement@@Assignment:this.path=path @TO@ Assignment:this.path=properties.getPath() @AT@ 2573 @LENGTH@ 17
------UPD Assignment@@this.path=path @TO@ this.path=properties.getPath() @AT@ 2573 @LENGTH@ 16
---------DEL SimpleName@@path @AT@ 2585 @LENGTH@ 4
---------INS MethodInvocation@@properties.getPath() @TO@ Assignment@@this.path=path @AT@ 2612 @LENGTH@ 20
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getPath() @AT@ 2612 @LENGTH@ 10
------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@properties.getPath() @AT@ 2623 @LENGTH@ 9
---UPD ExpressionStatement@@Assignment:this.useZeroCopy=useZeroCopy @TO@ Assignment:this.useZeroCopy=properties.getZeroCopy() @AT@ 2597 @LENGTH@ 31
------UPD Assignment@@this.useZeroCopy=useZeroCopy @TO@ this.useZeroCopy=properties.getZeroCopy() @AT@ 2597 @LENGTH@ 30
---------DEL SimpleName@@useZeroCopy @AT@ 2616 @LENGTH@ 11
---------INS MethodInvocation@@properties.getZeroCopy() @TO@ Assignment@@this.useZeroCopy=useZeroCopy @AT@ 2659 @LENGTH@ 24
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getZeroCopy() @AT@ 2659 @LENGTH@ 10
------------INS SimpleName@@MethodName:getZeroCopy:[] @TO@ MethodInvocation@@properties.getZeroCopy() @AT@ 2670 @LENGTH@ 13
---UPD ExpressionStatement@@Assignment:this.codec=codec @TO@ Assignment:this.codec=properties.getCodec() @AT@ 2635 @LENGTH@ 19
------UPD Assignment@@this.codec=codec @TO@ this.codec=properties.getCodec() @AT@ 2635 @LENGTH@ 18
---------DEL SimpleName@@codec @AT@ 2648 @LENGTH@ 5
---------INS MethodInvocation@@properties.getCodec() @TO@ Assignment@@this.codec=codec @AT@ 2704 @LENGTH@ 21
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getCodec() @AT@ 2704 @LENGTH@ 10
------------INS SimpleName@@MethodName:getCodec:[] @TO@ MethodInvocation@@properties.getCodec() @AT@ 2715 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @TO@ TypeDeclaration@@[public]DefaultRedirectResolverTests,  @AT@ 4768 @LENGTH@ 273
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4768 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4775 @LENGTH@ 4
---INS SimpleName@@MethodName:testRedirectNotMatchingSubdomain @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4780 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4822 @LENGTH@ 9
---INS VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4836 @LENGTH@ 89
------INS ParameterizedType@@Set<String> @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @AT@ 4836 @LENGTH@ 11
---------INS SimpleType@@Set @TO@ ParameterizedType@@Set<String> @AT@ 4836 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Set<String> @AT@ 4840 @LENGTH@ 6
------INS VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @TO@ VariableDeclarationStatement@@Set<String> redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")); @AT@ 4848 @LENGTH@ 76
---------INS SimpleName@@redirectUris @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @AT@ 4848 @LENGTH@ 12
---------INS ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @TO@ VariableDeclarationFragment@@redirectUris=new HashSet<String>(Arrays.asList("http://anywhere.com/foo")) @AT@ 4863 @LENGTH@ 61
------------INS New@@new @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 4863 @LENGTH@ 3
------------INS ParameterizedType@@HashSet<String> @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 4867 @LENGTH@ 15
---------------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 4867 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 4875 @LENGTH@ 6
------------INS MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @TO@ ClassInstanceCreation@@HashSet<String>[Arrays.asList("http://anywhere.com/foo")] @AT@ 4883 @LENGTH@ 40
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @AT@ 4883 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["http://anywhere.com/foo"] @TO@ MethodInvocation@@Arrays.asList("http://anywhere.com/foo") @AT@ 4890 @LENGTH@ 33
------------------INS StringLiteral@@"http://anywhere.com/foo" @TO@ SimpleName@@MethodName:asList:["http://anywhere.com/foo"] @AT@ 4897 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4928 @LENGTH@ 46
------INS MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @TO@ ExpressionStatement@@MethodInvocation:client.setRegisteredRedirectUri(redirectUris) @AT@ 4928 @LENGTH@ 45
---------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 4928 @LENGTH@ 6
---------INS SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @TO@ MethodInvocation@@client.setRegisteredRedirectUri(redirectUris) @AT@ 4935 @LENGTH@ 38
------------INS SimpleName@@redirectUris @TO@ SimpleName@@MethodName:setRegisteredRedirectUri:[redirectUris] @AT@ 4960 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:resolver.resolveRedirect("http://2anywhere.com/foo",client) @TO@ MethodDeclaration@@public, void, MethodName:testRedirectNotMatchingSubdomain, Exception,  @AT@ 4977 @LENGTH@ 61
------INS MethodInvocation@@resolver.resolveRedirect("http://2anywhere.com/foo",client) @TO@ ExpressionStatement@@MethodInvocation:resolver.resolveRedirect("http://2anywhere.com/foo",client) @AT@ 4977 @LENGTH@ 60
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveRedirect("http://2anywhere.com/foo",client) @AT@ 4977 @LENGTH@ 8
---------INS SimpleName@@MethodName:resolveRedirect:["http://2anywhere.com/foo", client] @TO@ MethodInvocation@@resolver.resolveRedirect("http://2anywhere.com/foo",client) @AT@ 4986 @LENGTH@ 51
------------INS StringLiteral@@"http://2anywhere.com/foo" @TO@ SimpleName@@MethodName:resolveRedirect:["http://2anywhere.com/foo", client] @AT@ 5002 @LENGTH@ 26
------------INS SimpleName@@client @TO@ SimpleName@@MethodName:resolveRedirect:["http://2anywhere.com/foo", client] @AT@ 5030 @LENGTH@ 6


UPD TypeDeclaration@@[@SuppressWarnings("unchecked"), public]UserDetailsByNameServiceWrapperTests, TestCase @TO@ [@SuppressWarnings("unchecked"), public]UserDetailsByNameServiceWrapperTests,  @AT@ 288 @LENGTH@ 1345
---DEL SimpleType@@TestCase @AT@ 377 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3500 @LENGTH@ 36
---INS MethodInvocation@@websocketComponent.setMinThreads(1) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMinThreads(1) @AT@ 3500 @LENGTH@ 35
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3500 @LENGTH@ 18
------INS SimpleName@@MethodName:setMinThreads:[1] @TO@ MethodInvocation@@websocketComponent.setMinThreads(1) @AT@ 3519 @LENGTH@ 16
---------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:setMinThreads:[1] @AT@ 3533 @LENGTH@ 1


DEL ExpressionStatement@@MethodInvocation:routeContext.getCamelContext().addService(idempotentRepository) @AT@ 8423 @LENGTH@ 64
---DEL MethodInvocation@@routeContext.getCamelContext().addService(idempotentRepository) @AT@ 8423 @LENGTH@ 63
------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 8423 @LENGTH@ 30
------DEL SimpleName@@Name:routeContext @AT@ 8423 @LENGTH@ 12
------DEL SimpleName@@MethodName:addService:[idempotentRepository] @AT@ 8454 @LENGTH@ 32
---------DEL SimpleName@@idempotentRepository @AT@ 8465 @LENGTH@ 20


UPD MethodDeclaration@@public, voidMethodName:EncodingFileWriter, FileOutputStream out, String charset, FileNotFoundException, UnsupportedEncodingException,  @TO@ voidMethodName:EncodingFileWriter, FileOutputStream out, String charset, FileNotFoundException, UnsupportedEncodingException,  @AT@ 17439 @LENGTH@ 207
---DEL Modifier@@public @AT@ 17439 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:miniCluster=new MiniSolrCloudCluster(1,"/solr",new File("target/tmp"),new File(solrHome,"solr-no-core.xml"),null,null) @TO@ Assignment:miniCluster=new MiniSolrCloudCluster(1,"/solr",new File("target/tmp").toPath(),xml,null,null) @AT@ 2400 @LENGTH@ 127
---UPD Assignment@@miniCluster=new MiniSolrCloudCluster(1,"/solr",new File("target/tmp"),new File(solrHome,"solr-no-core.xml"),null,null) @TO@ miniCluster=new MiniSolrCloudCluster(1,"/solr",new File("target/tmp").toPath(),xml,null,null) @AT@ 2400 @LENGTH@ 126
------UPD ClassInstanceCreation@@MiniSolrCloudCluster[1, "/solr", new File("target/tmp"), new File(solrHome,"solr-no-core.xml"), null, null] @TO@ MiniSolrCloudCluster[1, "/solr", new File("target/tmp").toPath(), xml, null, null] @AT@ 2414 @LENGTH@ 112
---------DEL ClassInstanceCreation@@File["target/tmp"] @AT@ 2451 @LENGTH@ 22
---------DEL ClassInstanceCreation@@File[solrHome, "solr-no-core.xml"] @AT@ 2475 @LENGTH@ 38
------------DEL New@@new @AT@ 2475 @LENGTH@ 3
------------DEL SimpleType@@File @AT@ 2479 @LENGTH@ 4
------------DEL SimpleName@@solrHome @AT@ 2484 @LENGTH@ 8
------------DEL StringLiteral@@"solr-no-core.xml" @AT@ 2494 @LENGTH@ 18
---------INS MethodInvocation@@new File("target/tmp").toPath() @TO@ ClassInstanceCreation@@MiniSolrCloudCluster[1, "/solr", new File("target/tmp"), new File(solrHome,"solr-no-core.xml"), null, null] @AT@ 2615 @LENGTH@ 31
------------INS ClassInstanceCreation@@File["target/tmp"] @TO@ MethodInvocation@@new File("target/tmp").toPath() @AT@ 2615 @LENGTH@ 22
---------------MOV New@@new @TO@ ClassInstanceCreation@@File["target/tmp"] @AT@ 2451 @LENGTH@ 3
---------------MOV SimpleType@@File @TO@ ClassInstanceCreation@@File["target/tmp"] @AT@ 2455 @LENGTH@ 4
---------------MOV StringLiteral@@"target/tmp" @TO@ ClassInstanceCreation@@File["target/tmp"] @AT@ 2460 @LENGTH@ 12
------------INS SimpleName@@MethodName:toPath:[] @TO@ MethodInvocation@@new File("target/tmp").toPath() @AT@ 2638 @LENGTH@ 8
---------INS SimpleName@@xml @TO@ ClassInstanceCreation@@MiniSolrCloudCluster[1, "/solr", new File("target/tmp"), new File(solrHome,"solr-no-core.xml"), null, null] @AT@ 2648 @LENGTH@ 3


UPD Block@@ThenBody:{  int seconds=(int)(expiration.getTime() / 1000);  conn.expireAt(refreshToAccessKey,seconds);  conn.expireAt(accessToRefreshKey,seconds);} @TO@ ThenBody:{  int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue();  conn.expire(refreshToAccessKey,seconds);  conn.expire(accessToRefreshKey,seconds);} @AT@ 6794 @LENGTH@ 165
---UPD VariableDeclarationStatement@@int seconds=(int)(expiration.getTime() / 1000); @TO@ int seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue(); @AT@ 6802 @LENGTH@ 50
------UPD VariableDeclarationFragment@@seconds=(int)(expiration.getTime() / 1000) @TO@ seconds=Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 6806 @LENGTH@ 45
---------INS MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @TO@ VariableDeclarationFragment@@seconds=(int)(expiration.getTime() / 1000) @AT@ 6816 @LENGTH@ 93
------------INS MethodInvocation@@MethodName:valueOf:[(expiration.getTime() - System.currentTimeMillis()) / 1000L] @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 6816 @LENGTH@ 73
---------------INS InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @TO@ MethodInvocation@@MethodName:valueOf:[(expiration.getTime() - System.currentTimeMillis()) / 1000L] @AT@ 6829 @LENGTH@ 59
------------------INS ParenthesizedExpression@@(expiration.getTime() - System.currentTimeMillis()) @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 6829 @LENGTH@ 51
---------------------INS InfixExpression@@expiration.getTime() - System.currentTimeMillis() @TO@ ParenthesizedExpression@@(expiration.getTime() - System.currentTimeMillis()) @AT@ 6830 @LENGTH@ 49
------------------------MOV MethodInvocation@@expiration.getTime() @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 6823 @LENGTH@ 20
------------------------INS Operator@@- @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 6850 @LENGTH@ 1
------------------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@expiration.getTime() - System.currentTimeMillis() @AT@ 6853 @LENGTH@ 26
---------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 6853 @LENGTH@ 6
---------------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 6860 @LENGTH@ 19
------------------MOV Operator@@/ @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 6843 @LENGTH@ 1
------------------MOV NumberLiteral@@1000 @TO@ InfixExpression@@(expiration.getTime() - System.currentTimeMillis()) / 1000L @AT@ 6846 @LENGTH@ 4
------------INS SimpleName@@Name:Long @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 6816 @LENGTH@ 4
------------INS SimpleName@@MethodName:intValue:[] @TO@ MethodInvocation@@Long.valueOf((expiration.getTime() - System.currentTimeMillis()) / 1000L).intValue() @AT@ 6899 @LENGTH@ 10
---------DEL CastExpression@@(int)(expiration.getTime() / 1000) @AT@ 6816 @LENGTH@ 35
------------DEL PrimitiveType@@int @AT@ 6817 @LENGTH@ 3
------------DEL ParenthesizedExpression@@(expiration.getTime() / 1000) @AT@ 6822 @LENGTH@ 29
---------------DEL InfixExpression@@expiration.getTime() / 1000 @AT@ 6823 @LENGTH@ 27
---UPD ExpressionStatement@@MethodInvocation:conn.expireAt(refreshToAccessKey,seconds) @TO@ MethodInvocation:conn.expire(refreshToAccessKey,seconds) @AT@ 6859 @LENGTH@ 43
------UPD MethodInvocation@@conn.expireAt(refreshToAccessKey,seconds) @TO@ conn.expire(refreshToAccessKey,seconds) @AT@ 6859 @LENGTH@ 42
---------UPD SimpleName@@MethodName:expireAt:[refreshToAccessKey, seconds] @TO@ MethodName:expire:[refreshToAccessKey, seconds] @AT@ 6864 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:conn.expireAt(accessToRefreshKey,seconds) @TO@ MethodInvocation:conn.expire(accessToRefreshKey,seconds) @AT@ 6909 @LENGTH@ 43
------UPD MethodInvocation@@conn.expireAt(accessToRefreshKey,seconds) @TO@ conn.expire(accessToRefreshKey,seconds) @AT@ 6909 @LENGTH@ 42
---------UPD SimpleName@@MethodName:expireAt:[accessToRefreshKey, seconds] @TO@ MethodName:expire:[accessToRefreshKey, seconds] @AT@ 6914 @LENGTH@ 37


UPD VariableDeclarationStatement@@String rc=proxy.say(); @TO@ String rc=proxy.say("Camel"); @AT@ 1428 @LENGTH@ 24
---UPD VariableDeclarationFragment@@rc=proxy.say() @TO@ rc=proxy.say("Camel") @AT@ 1435 @LENGTH@ 16
------UPD MethodInvocation@@proxy.say() @TO@ proxy.say("Camel") @AT@ 1440 @LENGTH@ 11
---------UPD SimpleName@@MethodName:say:[] @TO@ MethodName:say:["Camel"] @AT@ 1446 @LENGTH@ 5
------------INS StringLiteral@@"Camel" @TO@ SimpleName@@MethodName:say:[] @AT@ 1450 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).",response.getContentAsString()) @TO@ MethodInvocation:assertThat(response.getContentAsString()).isEqualTo("This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).") @AT@ 3435 @LENGTH@ 172
---UPD MethodInvocation@@assertEquals("This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).",response.getContentAsString()) @TO@ assertThat(response.getContentAsString()).isEqualTo("This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).") @AT@ 3435 @LENGTH@ 171
------INS MethodInvocation@@MethodName:assertThat:[response.getContentAsString()] @TO@ MethodInvocation@@assertEquals("This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).",response.getContentAsString()) @AT@ 3435 @LENGTH@ 41
---------INS MethodInvocation@@response.getContentAsString() @TO@ MethodInvocation@@MethodName:assertThat:[response.getContentAsString()] @AT@ 3446 @LENGTH@ 29
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 3446 @LENGTH@ 8
------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 3455 @LENGTH@ 20
------UPD SimpleName@@MethodName:assertEquals:["This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user).", response.getContentAsString()] @TO@ MethodName:isEqualTo:["This session has been expired (possibly due to multiple concurrent logins being " + "attempted as the same user)."] @AT@ 3435 @LENGTH@ 171
---------DEL MethodInvocation@@response.getContentAsString() @AT@ 3576 @LENGTH@ 29
------------DEL SimpleName@@Name:response @AT@ 3576 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getContentAsString:[] @AT@ 3585 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:assertTrue(node.getStatus().getCapacity().get("pods").getAmount().equals("40")) @TO@ MethodInvocation:assertTrue(node.getStatus().getCapacity().get("pods").getAmount().equals("110")) @AT@ 2442 @LENGTH@ 80
---UPD MethodInvocation@@assertTrue(node.getStatus().getCapacity().get("pods").getAmount().equals("40")) @TO@ assertTrue(node.getStatus().getCapacity().get("pods").getAmount().equals("110")) @AT@ 2442 @LENGTH@ 79
------UPD SimpleName@@MethodName:assertTrue:[node.getStatus().getCapacity().get("pods").getAmount().equals("40")] @TO@ MethodName:assertTrue:[node.getStatus().getCapacity().get("pods").getAmount().equals("110")] @AT@ 2442 @LENGTH@ 79
---------UPD MethodInvocation@@node.getStatus().getCapacity().get("pods").getAmount().equals("40") @TO@ node.getStatus().getCapacity().get("pods").getAmount().equals("110") @AT@ 2453 @LENGTH@ 67
------------UPD SimpleName@@MethodName:equals:["40"] @TO@ MethodName:equals:["110"] @AT@ 2508 @LENGTH@ 12
---------------UPD StringLiteral@@"40" @TO@ "110" @AT@ 2515 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:oauthException=new UnauthorizedUserException(DETAILS) @TO@ Assignment:oauthException=new UnauthorizedClientException(DETAILS) @AT@ 3523 @LENGTH@ 56
---UPD Assignment@@oauthException=new UnauthorizedUserException(DETAILS) @TO@ oauthException=new UnauthorizedClientException(DETAILS) @AT@ 3523 @LENGTH@ 55
------UPD ClassInstanceCreation@@UnauthorizedUserException[DETAILS] @TO@ UnauthorizedClientException[DETAILS] @AT@ 3540 @LENGTH@ 38
---------UPD SimpleType@@UnauthorizedUserException @TO@ UnauthorizedClientException @AT@ 3544 @LENGTH@ 25


UPD IfStatement@@if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM)) {  Form form=new Form(request.getEntity());  for (  String paramName : form.getValuesMap().keySet()) {    String[] values=form.getValuesArray(paramName);    Object value=null;    if (values != null && values.length > 0) {      if (values.length == 1) {        value=values[0];      } else {        value=values;      }    }    if (value == null) {      inMessage.setBody(paramName);      LOG.debug("Populate exchange from Restlet request body: {}",paramName);    } else {      if (!headerFilterStrategy.applyFilterToExternalHeaders(paramName,value,exchange)) {        inMessage.setHeader(paramName,value);        LOG.debug("Populate exchange from Restlet request user header: {} value: {}",paramName,value);      }    }  }} else {  InputStream is=request.getEntity().getStream();  Object body=RestletHelper.readResponseBodyFromInputStream(is,exchange);  inMessage.setBody(body);} @TO@ if (request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM,true)) {  Form form=new Form(request.getEntity());  for (  String paramName : form.getValuesMap().keySet()) {    String[] values=form.getValuesArray(paramName);    Object value=null;    if (values != null && values.length > 0) {      if (values.length == 1) {        value=values[0];      } else {        value=values;      }    }    if (value == null) {      inMessage.setBody(paramName);      LOG.debug("Populate exchange from Restlet request body: {}",paramName);    } else {      if (!headerFilterStrategy.applyFilterToExternalHeaders(paramName,value,exchange)) {        inMessage.setHeader(paramName,value);        LOG.debug("Populate exchange from Restlet request user header: {} value: {}",paramName,value);      }    }  }} else {  InputStream is=request.getEntity().getStream();  Object body=RestletHelper.readResponseBodyFromInputStream(is,exchange);  inMessage.setBody(body);} @AT@ 4977 @LENGTH@ 1371
---UPD InfixExpression@@request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM) @TO@ request.getEntity().getMediaType() != null && request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM,true) @AT@ 4981 @LENGTH@ 119
------UPD MethodInvocation@@request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM) @TO@ request.getEntity().getMediaType().equals(MediaType.APPLICATION_WWW_FORM,true) @AT@ 5027 @LENGTH@ 73
---------UPD SimpleName@@MethodName:equals:[MediaType.APPLICATION_WWW_FORM] @TO@ MethodName:equals:[MediaType.APPLICATION_WWW_FORM, true] @AT@ 5062 @LENGTH@ 38
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:equals:[MediaType.APPLICATION_WWW_FORM] @AT@ 5101 @LENGTH@ 4


UPD VariableDeclarationStatement@@long maximum=calculateMaximum(intervalMs,throttle,messageCount); @TO@ long maximum=calculateMaximum(intervalMs,throttle,messageCount) + 50; @AT@ 6417 @LENGTH@ 68
---UPD VariableDeclarationFragment@@maximum=calculateMaximum(intervalMs,throttle,messageCount) @TO@ maximum=calculateMaximum(intervalMs,throttle,messageCount) + 50 @AT@ 6422 @LENGTH@ 62
------INS InfixExpression@@calculateMaximum(intervalMs,throttle,messageCount) + 50 @TO@ VariableDeclarationFragment@@maximum=calculateMaximum(intervalMs,throttle,messageCount) @AT@ 6459 @LENGTH@ 57
---------MOV MethodInvocation@@calculateMaximum(intervalMs,throttle,messageCount) @TO@ InfixExpression@@calculateMaximum(intervalMs,throttle,messageCount) + 50 @AT@ 6432 @LENGTH@ 52
---------INS Operator@@+ @TO@ InfixExpression@@calculateMaximum(intervalMs,throttle,messageCount) + 50 @AT@ 6511 @LENGTH@ 1
---------INS NumberLiteral@@50 @TO@ InfixExpression@@calculateMaximum(intervalMs,throttle,messageCount) + 50 @AT@ 6514 @LENGTH@ 2


INS MethodDeclaration@@private, voidMethodName:Service2Application,  @TO@ TypeDeclaration@@[public]Service2Application,  @AT@ 909 @LENGTH@ 51
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Service2Application,  @AT@ 909 @LENGTH@ 7
---INS SimpleName@@MethodName:Service2Application @TO@ MethodDeclaration@@private, voidMethodName:Service2Application,  @AT@ 917 @LENGTH@ 19


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 5334 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 5334 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 5353 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 5367 @LENGTH@ 2


INS MethodDeclaration@@private, voidMethodName:Wait,  @TO@ TypeDeclaration@@[public]Wait,  @AT@ 932 @LENGTH@ 22
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Wait,  @AT@ 932 @LENGTH@ 7
---INS SimpleName@@MethodName:Wait @TO@ MethodDeclaration@@private, voidMethodName:Wait,  @AT@ 940 @LENGTH@ 4


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 316 @LENGTH@ 289
---UPD Modifier@@protected @TO@ public @AT@ 316 @LENGTH@ 9


UPD TypeDeclaration@@[public]PositionedCryptoInputStream, CounterCryptoInputStream @TO@ [public]PositionedCryptoInputStream, CTRCryptoInputStream @AT@ 1976 @LENGTH@ 9058
---UPD SimpleType@@CounterCryptoInputStream @TO@ CTRCryptoInputStream @AT@ 2025 @LENGTH@ 24


UPD ExpressionStatement@@MethodInvocation:assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @TO@ MethodInvocation:assertThat(getUser().getPassword()).isEqualTo(cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2206 @LENGTH@ 105
---UPD MethodInvocation@@assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @TO@ assertThat(getUser().getPassword()).isEqualTo(cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2206 @LENGTH@ 104
------INS MethodInvocation@@MethodName:assertThat:[getUser().getPassword()] @TO@ MethodInvocation@@assertEquals(getUser().getPassword(),cache.getUserFromCache(getUser().getUsername()).getPassword()) @AT@ 2206 @LENGTH@ 35
---------INS MethodInvocation@@getUser().getPassword() @TO@ MethodInvocation@@MethodName:assertThat:[getUser().getPassword()] @AT@ 2217 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getUser:[] @TO@ MethodInvocation@@getUser().getPassword() @AT@ 2217 @LENGTH@ 9
------------INS SimpleName@@MethodName:getPassword:[] @TO@ MethodInvocation@@getUser().getPassword() @AT@ 2227 @LENGTH@ 13
------UPD SimpleName@@MethodName:assertEquals:[getUser().getPassword(), cache.getUserFromCache(getUser().getUsername()).getPassword()] @TO@ MethodName:isEqualTo:[cache.getUserFromCache(getUser().getUsername()).getPassword()] @AT@ 2206 @LENGTH@ 104
---------DEL MethodInvocation@@getUser().getPassword() @AT@ 2219 @LENGTH@ 23
------------DEL MethodInvocation@@MethodName:getUser:[] @AT@ 2219 @LENGTH@ 9
------------DEL SimpleName@@MethodName:getPassword:[] @AT@ 2229 @LENGTH@ 13


UPD MethodDeclaration@@String, MethodName:say, RemoteException,  @TO@ String, MethodName:say, String name, RemoteException,  @AT@ 973 @LENGTH@ 29
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@String, MethodName:say, RemoteException,  @AT@ 967 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 967 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 974 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:badLowCustomStrength,  @TO@ TypeDeclaration@@[public]BCryptPasswordEncoderTests,  @AT@ 1880 @LENGTH@ 71
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:badLowCustomStrength,  @AT@ 1880 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:badLowCustomStrength,  @AT@ 1887 @LENGTH@ 4
---INS SimpleName@@MethodName:badLowCustomStrength @TO@ MethodDeclaration@@public, void, MethodName:badLowCustomStrength,  @AT@ 1892 @LENGTH@ 20
---INS ExpressionStatement@@ClassInstanceCreation:new BCryptPasswordEncoder(3) @TO@ MethodDeclaration@@public, void, MethodName:badLowCustomStrength,  @AT@ 1919 @LENGTH@ 29
------INS ClassInstanceCreation@@BCryptPasswordEncoder[3] @TO@ ExpressionStatement@@ClassInstanceCreation:new BCryptPasswordEncoder(3) @AT@ 1919 @LENGTH@ 28
---------INS New@@new @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[3] @AT@ 1919 @LENGTH@ 3
---------INS SimpleType@@BCryptPasswordEncoder @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[3] @AT@ 1923 @LENGTH@ 21
---------INS NumberLiteral@@3 @TO@ ClassInstanceCreation@@BCryptPasswordEncoder[3] @AT@ 1945 @LENGTH@ 1


DEL FieldDeclaration@@public, static, final, String, [JOB_NAME="CamelSpringBatch.jobName"] @AT@ 1091 @LENGTH@ 66
---DEL Modifier@@public @AT@ 1091 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1099 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1106 @LENGTH@ 5
---DEL SimpleType@@String @AT@ 1112 @LENGTH@ 6
---DEL VariableDeclarationFragment@@JOB_NAME="CamelSpringBatch.jobName" @AT@ 1119 @LENGTH@ 37
------DEL SimpleName@@JOB_NAME @AT@ 1119 @LENGTH@ 8
------DEL StringLiteral@@"CamelSpringBatch.jobName" @AT@ 1130 @LENGTH@ 26


INS IfStatement@@if (messageListenerContainerFactory == null) {  messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class);} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 41294 @LENGTH@ 244
---INS InfixExpression@@messageListenerContainerFactory == null @TO@ IfStatement@@if (messageListenerContainerFactory == null) {  messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class);} @AT@ 41298 @LENGTH@ 39
------INS SimpleName@@messageListenerContainerFactory @TO@ InfixExpression@@messageListenerContainerFactory == null @AT@ 41298 @LENGTH@ 31
------INS Operator@@== @TO@ InfixExpression@@messageListenerContainerFactory == null @AT@ 41329 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@messageListenerContainerFactory == null @AT@ 41333 @LENGTH@ 4
---INS Block@@ThenBody:{  messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class);} @TO@ IfStatement@@if (messageListenerContainerFactory == null) {  messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class);} @AT@ 41339 @LENGTH@ 199
------INS ExpressionStatement@@Assignment:messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @TO@ Block@@ThenBody:{  messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class);} @AT@ 41353 @LENGTH@ 175
---------INS Assignment@@messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @TO@ ExpressionStatement@@Assignment:messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @AT@ 41353 @LENGTH@ 174
------------INS SimpleName@@messageListenerContainerFactory @TO@ Assignment@@messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @AT@ 41353 @LENGTH@ 31
------------INS Operator@@= @TO@ Assignment@@messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @AT@ 41384 @LENGTH@ 1
------------INS MethodInvocation@@resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @TO@ Assignment@@messageListenerContainerFactory=resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @AT@ 41387 @LENGTH@ 140
---------------INS SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[parameters, "messageListenerContainerFactory", MessageListenerContainerFactory.class] @TO@ MethodInvocation@@resolveAndRemoveReferenceParameter(parameters,"messageListenerContainerFactory",MessageListenerContainerFactory.class) @AT@ 41387 @LENGTH@ 140
------------------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[parameters, "messageListenerContainerFactory", MessageListenerContainerFactory.class] @AT@ 41422 @LENGTH@ 10
------------------INS StringLiteral@@"messageListenerContainerFactory" @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[parameters, "messageListenerContainerFactory", MessageListenerContainerFactory.class] @AT@ 41454 @LENGTH@ 33
------------------INS TypeLiteral@@MessageListenerContainerFactory.class @TO@ SimpleName@@MethodName:resolveAndRemoveReferenceParameter:[parameters, "messageListenerContainerFactory", MessageListenerContainerFactory.class] @AT@ 41489 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:IsolatedThreadGroup, String name,  @TO@ voidMethodName:IsolatedThreadGroup, String name,  @AT@ 14644 @LENGTH@ 76
---DEL Modifier@@public @AT@ 14644 @LENGTH@ 6


UPD TypeDeclaration@@[public, static, final]Instance,  @TO@ [final]Instance,  @AT@ 1902 @LENGTH@ 2308
---DEL Modifier@@public @AT@ 1902 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1909 @LENGTH@ 6


UPD FieldDeclaration@@final, Object, [result] @TO@ private, final, Object, [result] @AT@ 17330 @LENGTH@ 20
---INS Modifier@@private @TO@ FieldDeclaration@@final, Object, [result] @AT@ 17330 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:LSInputSource, String namespaceURI, String publicId, String systemId, String baseURI,  @TO@ voidMethodName:LSInputSource, String namespaceURI, String publicId, String systemId, String baseURI,  @AT@ 1976 @LENGTH@ 569
---DEL Modifier@@public @AT@ 1976 @LENGTH@ 6


UPD IfStatement@@if ((Method.PUT == method || Method.POST == method) && mediaType == MediaType.APPLICATION_WWW_FORM) {  form=new Form();  String body=exchange.getIn().getBody(String.class);  if (body != null) {    form.add(body,null);  }} @TO@ if ((Method.PUT == method || Method.POST == method) && MediaType.APPLICATION_WWW_FORM.equals(mediaType,true)) {  form=new Form();  String body=exchange.getIn().getBody(String.class);  if (body != null) {    form.add(body,null);  }} @AT@ 6846 @LENGTH@ 339
---UPD InfixExpression@@(Method.PUT == method || Method.POST == method) && mediaType == MediaType.APPLICATION_WWW_FORM @TO@ (Method.PUT == method || Method.POST == method) && MediaType.APPLICATION_WWW_FORM.equals(mediaType,true) @AT@ 6850 @LENGTH@ 94
------DEL InfixExpression@@mediaType == MediaType.APPLICATION_WWW_FORM @AT@ 6901 @LENGTH@ 43
---------DEL SimpleName@@mediaType @AT@ 6901 @LENGTH@ 9
---------DEL Operator@@== @AT@ 6910 @LENGTH@ 2
---------DEL QualifiedName@@MediaType.APPLICATION_WWW_FORM @AT@ 6914 @LENGTH@ 30
------------DEL SimpleName@@MediaType @AT@ 6914 @LENGTH@ 9
------------DEL SimpleName@@APPLICATION_WWW_FORM @AT@ 6924 @LENGTH@ 20
------INS MethodInvocation@@MediaType.APPLICATION_WWW_FORM.equals(mediaType,true) @TO@ InfixExpression@@(Method.PUT == method || Method.POST == method) && mediaType == MediaType.APPLICATION_WWW_FORM @AT@ 6907 @LENGTH@ 54
---------INS QualifiedName@@Name:MediaType.APPLICATION_WWW_FORM @TO@ MethodInvocation@@MediaType.APPLICATION_WWW_FORM.equals(mediaType,true) @AT@ 6907 @LENGTH@ 30
---------INS SimpleName@@MethodName:equals:[mediaType, true] @TO@ MethodInvocation@@MediaType.APPLICATION_WWW_FORM.equals(mediaType,true) @AT@ 6938 @LENGTH@ 23
------------INS SimpleName@@mediaType @TO@ SimpleName@@MethodName:equals:[mediaType, true] @AT@ 6945 @LENGTH@ 9
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:equals:[mediaType, true] @AT@ 6956 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertThat(count(query).isCloseTo(0,within('&'))) @TO@ MethodInvocation:assertThat(count(query,'&')).isEqualTo(0) @AT@ 3620 @LENGTH@ 51
---UPD MethodInvocation@@assertThat(count(query).isCloseTo(0,within('&'))) @TO@ assertThat(count(query,'&')).isEqualTo(0) @AT@ 3620 @LENGTH@ 50
------DEL SimpleName@@MethodName:assertThat:[count(query).isCloseTo(0,within('&'))] @AT@ 3620 @LENGTH@ 50
---------DEL MethodInvocation@@count(query).isCloseTo(0,within('&')) @AT@ 3631 @LENGTH@ 38
------MOV MethodInvocation@@MethodName:count:[query] @TO@ MethodInvocation@@assertThat(count(query).isCloseTo(0,within('&'))) @AT@ 3631 @LENGTH@ 12
---------INS MethodInvocation@@count(query,'&') @TO@ MethodInvocation@@MethodName:count:[query] @AT@ 3623 @LENGTH@ 17
------------INS SimpleName@@MethodName:count:[query, '&'] @TO@ MethodInvocation@@count(query,'&') @AT@ 3623 @LENGTH@ 17
---------------INS SimpleName@@query @TO@ SimpleName@@MethodName:count:[query, '&'] @AT@ 3629 @LENGTH@ 5
---------------INS CharacterLiteral@@'&' @TO@ SimpleName@@MethodName:count:[query, '&'] @AT@ 3636 @LENGTH@ 3
---------DEL SimpleName@@query @AT@ 3637 @LENGTH@ 5
------MOV SimpleName@@MethodName:isCloseTo:[0, within('&')] @TO@ MethodInvocation@@assertThat(count(query).isCloseTo(0,within('&'))) @AT@ 3644 @LENGTH@ 25
---------DEL MethodInvocation@@within('&') @AT@ 3657 @LENGTH@ 11
------------DEL SimpleName@@MethodName:within:['&'] @AT@ 3657 @LENGTH@ 11
---------------DEL CharacterLiteral@@'&' @AT@ 3664 @LENGTH@ 3


UPD MethodDeclaration@@public, voidMethodName:CamelClient, CamelContext camelContext,  @TO@ voidMethodName:CamelClient, CamelContext camelContext,  @AT@ 3937 @LENGTH@ 231
---DEL Modifier@@public @AT@ 3937 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:assertFalse(json.contains("{foo}")) @TO@ MethodDeclaration@@public, void, MethodName:testReaderRead, Exception,  @AT@ 4552 @LENGTH@ 36
---INS MethodInvocation@@assertFalse(json.contains("{foo}")) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(json.contains("{foo}")) @AT@ 4552 @LENGTH@ 35
------INS SimpleName@@MethodName:assertFalse:[json.contains("{foo}")] @TO@ MethodInvocation@@assertFalse(json.contains("{foo}")) @AT@ 4552 @LENGTH@ 35
---------INS MethodInvocation@@json.contains("{foo}") @TO@ SimpleName@@MethodName:assertFalse:[json.contains("{foo}")] @AT@ 4564 @LENGTH@ 22
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("{foo}") @AT@ 4564 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["{foo}"] @TO@ MethodInvocation@@json.contains("{foo}") @AT@ 4569 @LENGTH@ 17
---------------INS StringLiteral@@"{foo}" @TO@ SimpleName@@MethodName:contains:["{foo}"] @AT@ 4578 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertThat(invocationData.getArguments()[0],equalTo("foo")) @TO@ MethodInvocation:assertThat((String)invocationData.getArguments()[0],equalTo("foo")) @AT@ 2816 @LENGTH@ 61
---UPD MethodInvocation@@assertThat(invocationData.getArguments()[0],equalTo("foo")) @TO@ assertThat((String)invocationData.getArguments()[0],equalTo("foo")) @AT@ 2816 @LENGTH@ 60
------UPD SimpleName@@MethodName:assertThat:[invocationData.getArguments()[0], equalTo("foo")] @TO@ MethodName:assertThat:[(String)invocationData.getArguments()[0], equalTo("foo")] @AT@ 2816 @LENGTH@ 60
---------INS CastExpression@@(String)invocationData.getArguments()[0] @TO@ SimpleName@@MethodName:assertThat:[invocationData.getArguments()[0], equalTo("foo")] @AT@ 2827 @LENGTH@ 41
------------MOV ArrayAccess@@invocationData.getArguments()[0] @TO@ CastExpression@@(String)invocationData.getArguments()[0] @AT@ 2827 @LENGTH@ 32
------------INS SimpleType@@String @TO@ CastExpression@@(String)invocationData.getArguments()[0] @AT@ 2828 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Mockito.when(kp.send(Mockito.any())).thenReturn(future) @TO@ MethodInvocation:Mockito.when(kp.send(Mockito.any(ProducerRecord.class))).thenReturn(future) @AT@ 2437 @LENGTH@ 56
---UPD MethodInvocation@@Mockito.when(kp.send(Mockito.any())).thenReturn(future) @TO@ Mockito.when(kp.send(Mockito.any(ProducerRecord.class))).thenReturn(future) @AT@ 2437 @LENGTH@ 55
------UPD MethodInvocation@@MethodName:when:[kp.send(Mockito.any())] @TO@ MethodName:when:[kp.send(Mockito.any(ProducerRecord.class))] @AT@ 2437 @LENGTH@ 36
---------UPD MethodInvocation@@kp.send(Mockito.any()) @TO@ kp.send(Mockito.any(ProducerRecord.class)) @AT@ 2450 @LENGTH@ 22
------------UPD SimpleName@@MethodName:send:[Mockito.any()] @TO@ MethodName:send:[Mockito.any(ProducerRecord.class)] @AT@ 2453 @LENGTH@ 19
---------------UPD MethodInvocation@@Mockito.any() @TO@ Mockito.any(ProducerRecord.class) @AT@ 2458 @LENGTH@ 13
------------------UPD SimpleName@@MethodName:any:[] @TO@ MethodName:any:[ProducerRecord.class] @AT@ 2466 @LENGTH@ 5
---------------------INS TypeLiteral@@ProducerRecord.class @TO@ SimpleName@@MethodName:any:[] @AT@ 2470 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:headerMap.put(AmqpHeaders.CONTENT_TYPE,"text/html") @TO@ MethodInvocation:headerMap.put(AmqpHeaders.CONTENT_TYPE,MimeTypeUtils.TEXT_HTML) @AT@ 4433 @LENGTH@ 53
---UPD MethodInvocation@@headerMap.put(AmqpHeaders.CONTENT_TYPE,"text/html") @TO@ headerMap.put(AmqpHeaders.CONTENT_TYPE,MimeTypeUtils.TEXT_HTML) @AT@ 4433 @LENGTH@ 52
------UPD SimpleName@@MethodName:put:[AmqpHeaders.CONTENT_TYPE, "text/html"] @TO@ MethodName:put:[AmqpHeaders.CONTENT_TYPE, MimeTypeUtils.TEXT_HTML] @AT@ 4443 @LENGTH@ 42
---------DEL StringLiteral@@"text/html" @AT@ 4473 @LENGTH@ 11
---------INS QualifiedName@@MimeTypeUtils.TEXT_HTML @TO@ SimpleName@@MethodName:put:[AmqpHeaders.CONTENT_TYPE, "text/html"] @AT@ 4520 @LENGTH@ 23
------------INS SimpleName@@MimeTypeUtils @TO@ QualifiedName@@MimeTypeUtils.TEXT_HTML @AT@ 4520 @LENGTH@ 13
------------INS SimpleName@@TEXT_HTML @TO@ QualifiedName@@MimeTypeUtils.TEXT_HTML @AT@ 4534 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:CircularBuffer, int bufferSize,  @TO@ voidMethodName:CircularBuffer, int bufferSize,  @AT@ 4528 @LENGTH@ 128
---DEL Modifier@@public @AT@ 4528 @LENGTH@ 6


UPD VariableDeclarationStatement@@final NameExpr nameExpr=JavaParserUtils.getNameExpr(castValue.getFullyQualifiedTypeName()); @TO@ final NameExpr nameExpr=JavaParserUtils.importTypeIfRequired(compilationUnitServices.getEnclosingTypeName(),compilationUnitServices.getImports(),castValue); @AT@ 15809 @LENGTH@ 93
---UPD VariableDeclarationFragment@@nameExpr=JavaParserUtils.getNameExpr(castValue.getFullyQualifiedTypeName()) @TO@ nameExpr=JavaParserUtils.importTypeIfRequired(compilationUnitServices.getEnclosingTypeName(),compilationUnitServices.getImports(),castValue) @AT@ 15824 @LENGTH@ 77
------UPD MethodInvocation@@JavaParserUtils.getNameExpr(castValue.getFullyQualifiedTypeName()) @TO@ JavaParserUtils.importTypeIfRequired(compilationUnitServices.getEnclosingTypeName(),compilationUnitServices.getImports(),castValue) @AT@ 15835 @LENGTH@ 66
---------UPD SimpleName@@MethodName:getNameExpr:[castValue.getFullyQualifiedTypeName()] @TO@ MethodName:importTypeIfRequired:[compilationUnitServices.getEnclosingTypeName(), compilationUnitServices.getImports(), castValue] @AT@ 15851 @LENGTH@ 50
------------UPD MethodInvocation@@castValue.getFullyQualifiedTypeName() @TO@ compilationUnitServices.getEnclosingTypeName() @AT@ 15863 @LENGTH@ 37
---------------UPD SimpleName@@Name:castValue @TO@ Name:compilationUnitServices @AT@ 15863 @LENGTH@ 9
---------------UPD SimpleName@@MethodName:getFullyQualifiedTypeName:[] @TO@ MethodName:getEnclosingTypeName:[] @AT@ 15873 @LENGTH@ 27
------------INS MethodInvocation@@compilationUnitServices.getImports() @TO@ SimpleName@@MethodName:getNameExpr:[castValue.getFullyQualifiedTypeName()] @AT@ 15944 @LENGTH@ 36
---------------INS SimpleName@@Name:compilationUnitServices @TO@ MethodInvocation@@compilationUnitServices.getImports() @AT@ 15944 @LENGTH@ 23
---------------INS SimpleName@@MethodName:getImports:[] @TO@ MethodInvocation@@compilationUnitServices.getImports() @AT@ 15968 @LENGTH@ 12
------------INS SimpleName@@castValue @TO@ SimpleName@@MethodName:getNameExpr:[castValue.getFullyQualifiedTypeName()] @AT@ 15982 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:qtp.setName("CamelJettyWebSocketServer(" + ObjectHelper.getIdentityHashCode(server) + ")") @TO@ MethodInvocation:qtp.setName("CamelJettyWebSocketServer(" + "test" + ")") @AT@ 14833 @LENGTH@ 91
---UPD MethodInvocation@@qtp.setName("CamelJettyWebSocketServer(" + ObjectHelper.getIdentityHashCode(server) + ")") @TO@ qtp.setName("CamelJettyWebSocketServer(" + "test" + ")") @AT@ 14833 @LENGTH@ 90
------UPD SimpleName@@MethodName:setName:["CamelJettyWebSocketServer(" + ObjectHelper.getIdentityHashCode(server) + ")"] @TO@ MethodName:setName:["CamelJettyWebSocketServer(" + "test" + ")"] @AT@ 14837 @LENGTH@ 86
---------UPD InfixExpression@@"CamelJettyWebSocketServer(" + ObjectHelper.getIdentityHashCode(server) + ")" @TO@ "CamelJettyWebSocketServer(" + "test" + ")" @AT@ 14845 @LENGTH@ 77
------------INS StringLiteral@@"test" @TO@ InfixExpression@@"CamelJettyWebSocketServer(" + ObjectHelper.getIdentityHashCode(server) + ")" @AT@ 14875 @LENGTH@ 6
------------DEL MethodInvocation@@ObjectHelper.getIdentityHashCode(server) @AT@ 14876 @LENGTH@ 40
---------------DEL SimpleName@@Name:ObjectHelper @AT@ 14876 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:getIdentityHashCode:[server] @AT@ 14889 @LENGTH@ 27
------------------DEL SimpleName@@server @AT@ 14909 @LENGTH@ 6


INS IfStatement@@if (cookieDomain != null) {  cookie.setDomain(cookieDomain);} @TO@ MethodDeclaration@@protected, void, MethodName:cancelCookie, HttpServletRequest request, HttpServletResponse response,  @AT@ 13512 @LENGTH@ 66
---INS InfixExpression@@cookieDomain != null @TO@ IfStatement@@if (cookieDomain != null) {  cookie.setDomain(cookieDomain);} @AT@ 13516 @LENGTH@ 20
------INS SimpleName@@cookieDomain @TO@ InfixExpression@@cookieDomain != null @AT@ 13516 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@cookieDomain != null @AT@ 13528 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@cookieDomain != null @AT@ 13532 @LENGTH@ 4
---INS Block@@ThenBody:{  cookie.setDomain(cookieDomain);} @TO@ IfStatement@@if (cookieDomain != null) {  cookie.setDomain(cookieDomain);} @AT@ 13538 @LENGTH@ 40
------INS ExpressionStatement@@MethodInvocation:cookie.setDomain(cookieDomain) @TO@ Block@@ThenBody:{  cookie.setDomain(cookieDomain);} @AT@ 13543 @LENGTH@ 31
---------INS MethodInvocation@@cookie.setDomain(cookieDomain) @TO@ ExpressionStatement@@MethodInvocation:cookie.setDomain(cookieDomain) @AT@ 13543 @LENGTH@ 30
------------INS SimpleName@@Name:cookie @TO@ MethodInvocation@@cookie.setDomain(cookieDomain) @AT@ 13543 @LENGTH@ 6
------------INS SimpleName@@MethodName:setDomain:[cookieDomain] @TO@ MethodInvocation@@cookie.setDomain(cookieDomain) @AT@ 13550 @LENGTH@ 23
---------------INS SimpleName@@cookieDomain @TO@ SimpleName@@MethodName:setDomain:[cookieDomain] @AT@ 13560 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @TO@ MethodInvocation:assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password")).containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1298 @LENGTH@ 140
---UPD MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @TO@ assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password")).containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1298 @LENGTH@ 139
------INS MethodInvocation@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("manager","password")] @TO@ MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @AT@ 1298 @LENGTH@ 68
---------INS MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("manager","password") @TO@ MethodInvocation@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("manager","password")] @AT@ 1309 @LENGTH@ 56
------------MOV SimpleName@@Name:ctxSrc @TO@ MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("manager","password") @AT@ 1309 @LENGTH@ 6
------------INS SimpleName@@MethodName:getAuthenticatedEnvForTest:["manager", "password"] @TO@ MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("manager","password") @AT@ 1316 @LENGTH@ 49
---------------INS StringLiteral@@"manager" @TO@ SimpleName@@MethodName:getAuthenticatedEnvForTest:["manager", "password"] @AT@ 1343 @LENGTH@ 9
---------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:getAuthenticatedEnvForTest:["manager", "password"] @AT@ 1354 @LENGTH@ 10
------DEL SimpleName@@MethodName:assertThat:[ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)] @AT@ 1298 @LENGTH@ 139
---------DEL MethodInvocation@@ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG) @AT@ 1309 @LENGTH@ 127
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 1309 @LENGTH@ 65
------------DEL MethodInvocation@@MethodName:getAuthenticatedEnvForTest:["manager", "password"] @AT@ 1309 @LENGTH@ 56
---------------DEL StringLiteral@@"manager" @AT@ 1343 @LENGTH@ 9
---------------DEL StringLiteral@@"password" @AT@ 1354 @LENGTH@ 10
------MOV SimpleName@@MethodName:containsKey:[AbstractContextSource.SUN_LDAP_POOLING_FLAG] @TO@ MethodInvocation@@assertThat(ctxSrc.getAuthenticatedEnvForTest("manager","password").isTrue().containsKey(AbstractContextSource.SUN_LDAP_POOLING_FLAG)) @AT@ 1375 @LENGTH@ 61


UPD MethodDeclaration@@private, void, MethodName:releasePermit,  @TO@ private, void, MethodName:releasePermitIfNecessary, Object proxy,  @AT@ 32883 @LENGTH@ 502
---UPD SimpleName@@MethodName:releasePermit @TO@ MethodName:releasePermitIfNecessary @AT@ 32896 @LENGTH@ 13
---INS SingleVariableDeclaration@@Object proxy @TO@ MethodDeclaration@@private, void, MethodName:releasePermit,  @AT@ 32910 @LENGTH@ 12
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object proxy @AT@ 32910 @LENGTH@ 6
------INS SimpleName@@proxy @TO@ SingleVariableDeclaration@@Object proxy @AT@ 32917 @LENGTH@ 5
---UPD IfStatement@@if (CachingConnectionFactory.this.channelCheckoutTimeout > 0) {  Semaphore checkoutPermits=CachingConnectionFactory.this.checkoutPermits.get(this.theConnection);  if (checkoutPermits != null) {    checkoutPermits.release();    logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());  } else {    logger.error("LEAKAGE: No permits map entry for " + this.theConnection);  }} @TO@ if (CachingConnectionFactory.this.channelCheckoutTimeout > 0) {synchronized (this.channelList) {    if (this.channelList.contains(proxy)) {      return;    }  }  Semaphore checkoutPermits=CachingConnectionFactory.this.checkoutPermits.get(this.theConnection);  if (checkoutPermits != null) {    checkoutPermits.release();    if (logger.isDebugEnabled()) {      logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());    }  } else {    logger.error("LEAKAGE: No permits map entry for " + this.theConnection);  }} @AT@ 32917 @LENGTH@ 464
------UPD Block@@ThenBody:{  Semaphore checkoutPermits=CachingConnectionFactory.this.checkoutPermits.get(this.theConnection);  if (checkoutPermits != null) {    checkoutPermits.release();    logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());  } else {    logger.error("LEAKAGE: No permits map entry for " + this.theConnection);  }} @TO@ ThenBody:{synchronized (this.channelList) {    if (this.channelList.contains(proxy)) {      return;    }  }  Semaphore checkoutPermits=CachingConnectionFactory.this.checkoutPermits.get(this.theConnection);  if (checkoutPermits != null) {    checkoutPermits.release();    if (logger.isDebugEnabled()) {      logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());    }  } else {    logger.error("LEAKAGE: No permits map entry for " + this.theConnection);  }} @AT@ 32979 @LENGTH@ 402
---------UPD IfStatement@@if (checkoutPermits != null) {  checkoutPermits.release();  logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} else {  logger.error("LEAKAGE: No permits map entry for " + this.theConnection);} @TO@ if (checkoutPermits != null) {  checkoutPermits.release();  if (logger.isDebugEnabled()) {    logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());  }} else {  logger.error("LEAKAGE: No permits map entry for " + this.theConnection);} @AT@ 33088 @LENGTH@ 288
------------UPD Block@@ThenBody:{  checkoutPermits.release();  logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @TO@ ThenBody:{  checkoutPermits.release();  if (logger.isDebugEnabled()) {    logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());  }} @AT@ 33117 @LENGTH@ 164
---------------UPD ExpressionStatement@@MethodInvocation:logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()) @TO@ MethodInvocation:logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()) @AT@ 33156 @LENGTH@ 119
---------------INS IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @TO@ Block@@ThenBody:{  checkoutPermits.release();  logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @AT@ 33484 @LENGTH@ 163
------------------INS MethodInvocation@@logger.isDebugEnabled() @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @AT@ 33488 @LENGTH@ 23
---------------------INS SimpleName@@Name:logger @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 33488 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:isDebugEnabled:[] @TO@ MethodInvocation@@logger.isDebugEnabled() @AT@ 33495 @LENGTH@ 16
------------------INS Block@@ThenBody:{  logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @TO@ IfStatement@@if (logger.isDebugEnabled()) {  logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @AT@ 33513 @LENGTH@ 134
---------------------MOV ExpressionStatement@@MethodInvocation:logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()) @TO@ Block@@ThenBody:{  logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());} @AT@ 33156 @LENGTH@ 119
------------------------UPD MethodInvocation@@logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()) @TO@ logger.debug("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()) @AT@ 33156 @LENGTH@ 118
---------------------------UPD SimpleName@@MethodName:error:["Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()] @TO@ MethodName:debug:["Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits()] @AT@ 33163 @LENGTH@ 111
---------INS SynchronizedStatement@@synchronized (this.channelList) {  if (this.channelList.contains(proxy)) {    return;  }} @TO@ Block@@ThenBody:{  Semaphore checkoutPermits=CachingConnectionFactory.this.checkoutPermits.get(this.theConnection);  if (checkoutPermits != null) {    checkoutPermits.release();    logger.error("Released permit for " + this.theConnection + ", remaining:"+ checkoutPermits.availablePermits());  } else {    logger.error("LEAKAGE: No permits map entry for " + this.theConnection);  }} @AT@ 33204 @LENGTH@ 104
------------INS FieldAccess@@this.channelList @TO@ SynchronizedStatement@@synchronized (this.channelList) {  if (this.channelList.contains(proxy)) {    return;  }} @AT@ 33217 @LENGTH@ 16
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.channelList @AT@ 33217 @LENGTH@ 4
---------------INS SimpleName@@channelList @TO@ FieldAccess@@this.channelList @AT@ 33222 @LENGTH@ 11
------------INS Block@@SyncBody:{  if (this.channelList.contains(proxy)) {    return;  }} @TO@ SynchronizedStatement@@synchronized (this.channelList) {  if (this.channelList.contains(proxy)) {    return;  }} @AT@ 33235 @LENGTH@ 73
---------------INS IfStatement@@if (this.channelList.contains(proxy)) {  return;} @TO@ Block@@SyncBody:{  if (this.channelList.contains(proxy)) {    return;  }} @AT@ 33242 @LENGTH@ 60
------------------INS MethodInvocation@@this.channelList.contains(proxy) @TO@ IfStatement@@if (this.channelList.contains(proxy)) {  return;} @AT@ 33246 @LENGTH@ 32
---------------------INS FieldAccess@@this.channelList @TO@ MethodInvocation@@this.channelList.contains(proxy) @AT@ 33246 @LENGTH@ 16
------------------------INS ThisExpression@@this @TO@ FieldAccess@@this.channelList @AT@ 33246 @LENGTH@ 4
------------------------INS SimpleName@@channelList @TO@ FieldAccess@@this.channelList @AT@ 33251 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:contains:[proxy] @TO@ MethodInvocation@@this.channelList.contains(proxy) @AT@ 33263 @LENGTH@ 15
------------------------INS SimpleName@@proxy @TO@ SimpleName@@MethodName:contains:[proxy] @AT@ 33272 @LENGTH@ 5
------------------INS Block@@ThenBody:{  return;} @TO@ IfStatement@@if (this.channelList.contains(proxy)) {  return;} @AT@ 33280 @LENGTH@ 22
---------------------INS ReturnStatement@@ @TO@ Block@@ThenBody:{  return;} @AT@ 33288 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:TracerInterceptorSubclass, ProcessorDefinition<?> node, Processor target, TraceFormatter formatter, Tracer tracer, List<StringBuilder> eventMessages, TraceInterceptorSubclassFactory factory,  @TO@ voidMethodName:TracerInterceptorSubclass, ProcessorDefinition<?> node, Processor target, TraceFormatter formatter, Tracer tracer, List<StringBuilder> eventMessages, TraceInterceptorSubclassFactory factory,  @AT@ 2012 @LENGTH@ 650
---DEL Modifier@@public @AT@ 2012 @LENGTH@ 6


UPD TypeDeclaration@@[public]Service2Application,  @TO@ [public, final]Service2Application,  @AT@ 863 @LENGTH@ 209
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Service2Application,  @AT@ 870 @LENGTH@ 5


INS MethodDeclaration@@public, Date, MethodName:getBackdatedTime,  @TO@ TypeDeclaration@@[public]Album, FacebookObject @AT@ 1251 @LENGTH@ 59
---INS Modifier@@public @TO@ MethodDeclaration@@public, Date, MethodName:getBackdatedTime,  @AT@ 1251 @LENGTH@ 6
---INS SimpleType@@Date @TO@ MethodDeclaration@@public, Date, MethodName:getBackdatedTime,  @AT@ 1258 @LENGTH@ 4
---INS SimpleName@@MethodName:getBackdatedTime @TO@ MethodDeclaration@@public, Date, MethodName:getBackdatedTime,  @AT@ 1263 @LENGTH@ 16
---INS ReturnStatement@@SimpleName:backdatedTime @TO@ MethodDeclaration@@public, Date, MethodName:getBackdatedTime,  @AT@ 1286 @LENGTH@ 21
------INS SimpleName@@backdatedTime @TO@ ReturnStatement@@SimpleName:backdatedTime @AT@ 1293 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertThat("don").isEqualTo(0,mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size()) @TO@ MethodInvocation:assertThat(mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don"),"don")).hasSize(0) @AT@ 6229 @LENGTH@ 102
---UPD MethodInvocation@@assertThat("don").isEqualTo(0,mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size()) @TO@ assertThat(mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don"),"don")).hasSize(0) @AT@ 6229 @LENGTH@ 101
------DEL MethodInvocation@@MethodName:assertThat:["don"] @AT@ 6229 @LENGTH@ 17
---------DEL StringLiteral@@"don" @AT@ 6240 @LENGTH@ 5
------UPD SimpleName@@MethodName:isEqualTo:[0, mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size()] @TO@ MethodName:hasSize:[0] @AT@ 6247 @LENGTH@ 83
---------UPD MethodInvocation@@mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size() @TO@ MethodName:assertThat:[mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don"),"don")] @AT@ 6260 @LENGTH@ 69
------MOV MethodInvocation@@mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size() @TO@ MethodInvocation@@assertThat("don").isEqualTo(0,mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don")).size()) @AT@ 6260 @LENGTH@ 69
---------UPD MethodInvocation@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don")] @TO@ mgr.getUserAuthorities(mgr.usernameMapper.buildDn("don"),"don") @AT@ 6260 @LENGTH@ 57
------------INS SimpleName@@Name:mgr @TO@ MethodInvocation@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don")] @AT@ 5844 @LENGTH@ 3
------------INS SimpleName@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don"), "don"] @TO@ MethodInvocation@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don")] @AT@ 5848 @LENGTH@ 60
---------------INS StringLiteral@@"don" @TO@ SimpleName@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don"), "don"] @AT@ 5902 @LENGTH@ 5
---------------MOV MethodInvocation@@mgr.usernameMapper.buildDn("don") @TO@ SimpleName@@MethodName:getUserAuthorities:[mgr.usernameMapper.buildDn("don"), "don"] @AT@ 6283 @LENGTH@ 33
---------DEL SimpleName@@Name:mgr @AT@ 6260 @LENGTH@ 3
---------DEL SimpleName@@MethodName:size:[] @AT@ 6323 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:IsolatedThreadGroup, String name,  @TO@ voidMethodName:IsolatedThreadGroup, String name,  @AT@ 18857 @LENGTH@ 76
---DEL Modifier@@public @AT@ 18857 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:AnnotatedRddCallbackProxy, Object objectWithCallback, CamelContext camelContext,  @TO@ voidMethodName:AnnotatedRddCallbackProxy, Object objectWithCallback, CamelContext camelContext,  @AT@ 1451 @LENGTH@ 494
---DEL Modifier@@public @AT@ 1451 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.strategy=Assert.checkNotNullParam("tokenValidationStrategy(",configuration.strategy) @TO@ Assignment:this.strategy=Assert.checkNotNullParam("tokenValidationStrategy",configuration.strategy) @AT@ 2446 @LENGTH@ 93
---UPD Assignment@@this.strategy=Assert.checkNotNullParam("tokenValidationStrategy(",configuration.strategy) @TO@ this.strategy=Assert.checkNotNullParam("tokenValidationStrategy",configuration.strategy) @AT@ 2446 @LENGTH@ 92
------UPD MethodInvocation@@Assert.checkNotNullParam("tokenValidationStrategy(",configuration.strategy) @TO@ Assert.checkNotNullParam("tokenValidationStrategy",configuration.strategy) @AT@ 2462 @LENGTH@ 76
---------UPD SimpleName@@MethodName:checkNotNullParam:["tokenValidationStrategy(", configuration.strategy] @TO@ MethodName:checkNotNullParam:["tokenValidationStrategy", configuration.strategy] @AT@ 2469 @LENGTH@ 69
------------UPD StringLiteral@@"tokenValidationStrategy(" @TO@ "tokenValidationStrategy" @AT@ 2487 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:cipher.doFinal(inBuffer,outBuffer) @TO@ MethodInvocation:cipher.doFinal(inBuffer,out) @AT@ 13693 @LENGTH@ 36
---UPD MethodInvocation@@cipher.doFinal(inBuffer,outBuffer) @TO@ cipher.doFinal(inBuffer,out) @AT@ 13693 @LENGTH@ 35
------UPD SimpleName@@MethodName:doFinal:[inBuffer, outBuffer] @TO@ MethodName:doFinal:[inBuffer, out] @AT@ 13700 @LENGTH@ 28
---------UPD SimpleName@@outBuffer @TO@ out @AT@ 13718 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:LineBuilder, String line, int wordsCount,  @TO@ voidMethodName:LineBuilder, String line, int wordsCount,  @AT@ 5613 @LENGTH@ 150
---DEL Modifier@@public @AT@ 5613 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).isTrue().contains("foo")) @TO@ MethodInvocation:assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @AT@ 2954 @LENGTH@ 101
---UPD MethodInvocation@@assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).isTrue().contains("foo")) @TO@ assertThat(AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")) @AT@ 2954 @LENGTH@ 100
------UPD SimpleName@@MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities()).isTrue().contains("foo")] @TO@ MethodName:assertThat:[AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo")] @AT@ 2954 @LENGTH@ 100
---------UPD MethodInvocation@@AuthorityUtils.authorityListToSet(result.getAuthorities()).isTrue().contains("foo") @TO@ AuthorityUtils.authorityListToSet(result.getAuthorities()).contains("foo") @AT@ 2965 @LENGTH@ 88
------------DEL MethodInvocation@@MethodName:isTrue:[] @AT@ 2965 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 4856 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 4856 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 4875 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 4889 @LENGTH@ 2


UPD IfStatement@@if (e.getMessage().contains(charSetName)) return false; @TO@ if (e.getMessage().contains(charSetName)) {  return false;} @AT@ 30137 @LENGTH@ 55
---UPD Block@@ThenBody:return false; @TO@ ThenBody:{  return false;} @AT@ 30179 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:MyFuture, Runnable runnable, String o,  @TO@ voidMethodName:MyFuture, Runnable runnable, String o,  @AT@ 8659 @LENGTH@ 88
---DEL Modifier@@public @AT@ 8659 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:IoUtils.safeClose(is) @TO@ MethodInvocation:Files.copy(is,moduleXml,StandardCopyOption.REPLACE_EXISTING) @AT@ 4188 @LENGTH@ 22


INS MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @TO@ TypeDeclaration@@[public]ModelAwareWhileMatchFilter, WhileMatchFilter[ModelAwareFilter<WhileMatchFilter>] @AT@ 1933 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1933 @LENGTH@ 6
---INS SimpleType@@FilterList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1940 @LENGTH@ 10
---INS SimpleName@@MethodName:getFilteredList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1951 @LENGTH@ 15
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 1973 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1980 @LENGTH@ 4


UPD ReturnStatement@@InfixExpression:camelContext.getClass().getName().contains("Proxy") == false @TO@ PrefixExpression:!camelContext.getClass().getName().contains("Proxy") @AT@ 1331 @LENGTH@ 68
---DEL InfixExpression@@camelContext.getClass().getName().contains("Proxy") == false @AT@ 1338 @LENGTH@ 60
------DEL Operator@@== @AT@ 1389 @LENGTH@ 2
------DEL BooleanLiteral@@false @AT@ 1393 @LENGTH@ 5
---INS PrefixExpression@@!camelContext.getClass().getName().contains("Proxy") @TO@ ReturnStatement@@InfixExpression:camelContext.getClass().getName().contains("Proxy") == false @AT@ 1338 @LENGTH@ 52
------MOV MethodInvocation@@camelContext.getClass().getName().contains("Proxy") @TO@ PrefixExpression@@!camelContext.getClass().getName().contains("Proxy") @AT@ 1338 @LENGTH@ 51
------INS Operator@@! @TO@ PrefixExpression@@!camelContext.getClass().getName().contains("Proxy") @AT@ 1338 @LENGTH@ 1


UPD MethodDeclaration@@public, voidMethodName:ExchangeAwaiter, final int count,  @TO@ voidMethodName:ExchangeAwaiter, final int count,  @AT@ 15705 @LENGTH@ 83
---DEL Modifier@@public @AT@ 15705 @LENGTH@ 6


INS TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.getStrictAffinity();}  @TO@ MethodDeclaration@@public, Affinity, MethodName:getStrictAffinity,  @AT@ 2420 @LENGTH@ 124
---MOV ReturnStatement@@MethodInvocation:this.manager.getStrictAffinity() @TO@ TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.getStrictAffinity();}  @AT@ 2420 @LENGTH@ 40
---INS VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @TO@ TryStatement@@try (Batch batch=this.manager.getBatcher().createBatch()){  return this.manager.getStrictAffinity();}  @AT@ 2425 @LENGTH@ 53
------INS SimpleType@@Batch @TO@ VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @AT@ 2425 @LENGTH@ 5
------INS VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @TO@ VariableDeclarationExpression@@Batch batch=this.manager.getBatcher().createBatch() @AT@ 2431 @LENGTH@ 47
---------INS SimpleName@@batch @TO@ VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @AT@ 2431 @LENGTH@ 5
---------INS MethodInvocation@@this.manager.getBatcher().createBatch() @TO@ VariableDeclarationFragment@@batch=this.manager.getBatcher().createBatch() @AT@ 2439 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getBatcher:[] @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 2439 @LENGTH@ 25
------------INS FieldAccess@@this.manager @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 2439 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.manager @AT@ 2439 @LENGTH@ 4
---------------INS SimpleName@@manager @TO@ FieldAccess@@this.manager @AT@ 2444 @LENGTH@ 7
------------INS SimpleName@@MethodName:createBatch:[] @TO@ MethodInvocation@@this.manager.getBatcher().createBatch() @AT@ 2465 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:Mockito.when(kp.send(Mockito.any(),Mockito.any())).thenThrow(new ApiException()) @TO@ MethodInvocation:Mockito.when(kp.send(Mockito.any(ProducerRecord.class),Mockito.any(Callback.class))).thenThrow(new ApiException()) @AT@ 4437 @LENGTH@ 82
---UPD MethodInvocation@@Mockito.when(kp.send(Mockito.any(),Mockito.any())).thenThrow(new ApiException()) @TO@ Mockito.when(kp.send(Mockito.any(ProducerRecord.class),Mockito.any(Callback.class))).thenThrow(new ApiException()) @AT@ 4437 @LENGTH@ 81
------UPD MethodInvocation@@MethodName:when:[kp.send(Mockito.any(),Mockito.any())] @TO@ MethodName:when:[kp.send(Mockito.any(ProducerRecord.class),Mockito.any(Callback.class))] @AT@ 4437 @LENGTH@ 51
---------UPD MethodInvocation@@kp.send(Mockito.any(),Mockito.any()) @TO@ kp.send(Mockito.any(ProducerRecord.class),Mockito.any(Callback.class)) @AT@ 4450 @LENGTH@ 37
------------UPD SimpleName@@MethodName:send:[Mockito.any(), Mockito.any()] @TO@ MethodName:send:[Mockito.any(ProducerRecord.class), Mockito.any(Callback.class)] @AT@ 4453 @LENGTH@ 34
---------------UPD MethodInvocation@@Mockito.any() @TO@ Mockito.any(ProducerRecord.class) @AT@ 4458 @LENGTH@ 13
------------------UPD SimpleName@@MethodName:any:[] @TO@ MethodName:any:[ProducerRecord.class] @AT@ 4466 @LENGTH@ 5
---------------------INS TypeLiteral@@ProducerRecord.class @TO@ SimpleName@@MethodName:any:[] @AT@ 4490 @LENGTH@ 20
---------------UPD MethodInvocation@@Mockito.any() @TO@ Mockito.any(Callback.class) @AT@ 4473 @LENGTH@ 13
------------------UPD SimpleName@@MethodName:any:[] @TO@ MethodName:any:[Callback.class] @AT@ 4481 @LENGTH@ 5
---------------------INS TypeLiteral@@Callback.class @TO@ SimpleName@@MethodName:any:[] @AT@ 4525 @LENGTH@ 14


INS IfStatement@@if (val == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:enforceMaxLength, String val, int maxLength,  @AT@ 1412 @LENGTH@ 43
---INS InfixExpression@@val == null @TO@ IfStatement@@if (val == null) {  return null;} @AT@ 1416 @LENGTH@ 11
------INS SimpleName@@val @TO@ InfixExpression@@val == null @AT@ 1416 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@val == null @AT@ 1419 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@val == null @AT@ 1423 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (val == null) {  return null;} @AT@ 1429 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1437 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1444 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas,gas.containsAll(returnedGas) && returnedGas.containsAll(gas)) @TO@ MethodInvocation:assertThat(gas.containsAll(returnedGas) && returnedGas.containsAll(gas)).withFailMessage("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas).isTrue() @AT@ 1423 @LENGTH@ 174
---UPD MethodInvocation@@assertTrue("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas,gas.containsAll(returnedGas) && returnedGas.containsAll(gas)) @TO@ MethodName:assertThat:[gas.containsAll(returnedGas) && returnedGas.containsAll(gas)] @AT@ 1423 @LENGTH@ 173
---INS MethodInvocation@@assertThat(gas.containsAll(returnedGas) && returnedGas.containsAll(gas)).withFailMessage("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas,gas.containsAll(returnedGas) && returnedGas.containsAll(gas)) @AT@ 1429 @LENGTH@ 198
------MOV MethodInvocation@@assertTrue("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas,gas.containsAll(returnedGas) && returnedGas.containsAll(gas)) @TO@ MethodInvocation@@assertThat(gas.containsAll(returnedGas) && returnedGas.containsAll(gas)).withFailMessage("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas).isTrue() @AT@ 1423 @LENGTH@ 173
---------DEL SimpleName@@MethodName:assertTrue:["Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas, gas.containsAll(returnedGas) && returnedGas.containsAll(gas)] @AT@ 1423 @LENGTH@ 173
------------DEL InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1434 @LENGTH@ 95
---------------DEL StringLiteral@@"Collections do not contain same elements; expected: " @AT@ 1434 @LENGTH@ 54
---------------DEL Operator@@+ @AT@ 1488 @LENGTH@ 1
---------------DEL SimpleName@@gas @AT@ 1491 @LENGTH@ 3
---------------DEL StringLiteral@@", returned: " @AT@ 1501 @LENGTH@ 14
---------------DEL SimpleName@@returnedGas @AT@ 1518 @LENGTH@ 11
---------MOV InfixExpression@@gas.containsAll(returnedGas) && returnedGas.containsAll(gas) @TO@ MethodInvocation@@assertTrue("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas,gas.containsAll(returnedGas) && returnedGas.containsAll(gas)) @AT@ 1531 @LENGTH@ 64
------INS MethodInvocation@@MethodName:withFailMessage:["Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas] @TO@ MethodInvocation@@assertThat(gas.containsAll(returnedGas) && returnedGas.containsAll(gas)).withFailMessage("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas).isTrue() @AT@ 1429 @LENGTH@ 189
---------INS InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @TO@ MethodInvocation@@MethodName:withFailMessage:["Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas] @AT@ 1522 @LENGTH@ 95
------------INS StringLiteral@@"Collections do not contain same elements; expected: " @TO@ InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1522 @LENGTH@ 54
------------INS Operator@@+ @TO@ InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1576 @LENGTH@ 1
------------INS SimpleName@@gas @TO@ InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1579 @LENGTH@ 3
------------INS StringLiteral@@", returned: " @TO@ InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1589 @LENGTH@ 14
------------INS SimpleName@@returnedGas @TO@ InfixExpression@@"Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas @AT@ 1606 @LENGTH@ 11
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(gas.containsAll(returnedGas) && returnedGas.containsAll(gas)).withFailMessage("Collections do not contain same elements; expected: " + gas + ", returned: "+ returnedGas).isTrue() @AT@ 1619 @LENGTH@ 8


INS MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @TO@ TypeDeclaration@@[public]WithSecurityContextTestExecutionListener, AbstractTestExecutionListener @AT@ 3641 @LENGTH@ 610
---MOV VariableDeclarationStatement@@Annotation annotation=AnnotationUtils.findAnnotation(annotated,type); @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3352 @LENGTH@ 73
------UPD VariableDeclarationFragment@@annotation=AnnotationUtils.findAnnotation(annotated,type) @TO@ findAnnotation=AnnotationUtils.findAnnotation(annotated,type) @AT@ 3363 @LENGTH@ 61
---------UPD SimpleName@@annotation @TO@ findAnnotation @AT@ 3363 @LENGTH@ 10
---INS Modifier@@private @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3641 @LENGTH@ 7
---INS SimpleType@@Annotation @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3649 @LENGTH@ 10
---INS SimpleName@@MethodName:findAnnotation @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3660 @LENGTH@ 14
---INS SingleVariableDeclaration@@AnnotatedElement annotated @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3675 @LENGTH@ 26
------INS SimpleType@@AnnotatedElement @TO@ SingleVariableDeclaration@@AnnotatedElement annotated @AT@ 3675 @LENGTH@ 16
------INS SimpleName@@annotated @TO@ SingleVariableDeclaration@@AnnotatedElement annotated @AT@ 3692 @LENGTH@ 9
---INS SingleVariableDeclaration@@Class<? extends Annotation> type @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3706 @LENGTH@ 32
------INS ParameterizedType@@Class<? extends Annotation> @TO@ SingleVariableDeclaration@@Class<? extends Annotation> type @AT@ 3706 @LENGTH@ 27
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<? extends Annotation> @AT@ 3706 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<? extends Annotation> @AT@ 3712 @LENGTH@ 20
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<? extends Annotation> type @AT@ 3734 @LENGTH@ 4
---INS IfStatement@@if (findAnnotation != null) {  return findAnnotation;} @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3823 @LENGTH@ 59
------INS InfixExpression@@findAnnotation != null @TO@ IfStatement@@if (findAnnotation != null) {  return findAnnotation;} @AT@ 3827 @LENGTH@ 22
---------INS SimpleName@@findAnnotation @TO@ InfixExpression@@findAnnotation != null @AT@ 3827 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@findAnnotation != null @AT@ 3841 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@findAnnotation != null @AT@ 3845 @LENGTH@ 4
------INS Block@@ThenBody:{  return findAnnotation;} @TO@ IfStatement@@if (findAnnotation != null) {  return findAnnotation;} @AT@ 3851 @LENGTH@ 31
---------INS ReturnStatement@@SimpleName:findAnnotation @TO@ Block@@ThenBody:{  return findAnnotation;} @AT@ 3856 @LENGTH@ 22
------------INS SimpleName@@findAnnotation @TO@ ReturnStatement@@SimpleName:findAnnotation @AT@ 3863 @LENGTH@ 14
---INS VariableDeclarationStatement@@Annotation[] allAnnotations=AnnotationUtils.getAnnotations(annotated); @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3885 @LENGTH@ 72
------INS ArrayType@@Annotation[] @TO@ VariableDeclarationStatement@@Annotation[] allAnnotations=AnnotationUtils.getAnnotations(annotated); @AT@ 3885 @LENGTH@ 12
---------INS SimpleType@@Annotation @TO@ ArrayType@@Annotation[] @AT@ 3885 @LENGTH@ 10
------INS VariableDeclarationFragment@@allAnnotations=AnnotationUtils.getAnnotations(annotated) @TO@ VariableDeclarationStatement@@Annotation[] allAnnotations=AnnotationUtils.getAnnotations(annotated); @AT@ 3898 @LENGTH@ 58
---------INS SimpleName@@allAnnotations @TO@ VariableDeclarationFragment@@allAnnotations=AnnotationUtils.getAnnotations(annotated) @AT@ 3898 @LENGTH@ 14
---------INS MethodInvocation@@AnnotationUtils.getAnnotations(annotated) @TO@ VariableDeclarationFragment@@allAnnotations=AnnotationUtils.getAnnotations(annotated) @AT@ 3915 @LENGTH@ 41
------------INS SimpleName@@Name:AnnotationUtils @TO@ MethodInvocation@@AnnotationUtils.getAnnotations(annotated) @AT@ 3915 @LENGTH@ 15
------------INS SimpleName@@MethodName:getAnnotations:[annotated] @TO@ MethodInvocation@@AnnotationUtils.getAnnotations(annotated) @AT@ 3931 @LENGTH@ 25
---------------INS SimpleName@@annotated @TO@ SimpleName@@MethodName:getAnnotations:[annotated] @AT@ 3946 @LENGTH@ 9
---INS EnhancedForStatement@@for (Annotation annotationToTest : allAnnotations) {  WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class);  if (withSecurityContext != null) {    return annotationToTest;  }} @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 3960 @LENGTH@ 273
------INS SingleVariableDeclaration@@Annotation annotationToTest @TO@ EnhancedForStatement@@for (Annotation annotationToTest : allAnnotations) {  WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class);  if (withSecurityContext != null) {    return annotationToTest;  }} @AT@ 3965 @LENGTH@ 27
---------INS SimpleType@@Annotation @TO@ SingleVariableDeclaration@@Annotation annotationToTest @AT@ 3965 @LENGTH@ 10
---------INS SimpleName@@annotationToTest @TO@ SingleVariableDeclaration@@Annotation annotationToTest @AT@ 3976 @LENGTH@ 16
------INS SimpleName@@allAnnotations @TO@ EnhancedForStatement@@for (Annotation annotationToTest : allAnnotations) {  WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class);  if (withSecurityContext != null) {    return annotationToTest;  }} @AT@ 3995 @LENGTH@ 14
------INS VariableDeclarationStatement@@WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class); @TO@ EnhancedForStatement@@for (Annotation annotationToTest : allAnnotations) {  WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class);  if (withSecurityContext != null) {    return annotationToTest;  }} @AT@ 4016 @LENGTH@ 141
---------INS SimpleType@@WithSecurityContext @TO@ VariableDeclarationStatement@@WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class); @AT@ 4016 @LENGTH@ 19
---------INS VariableDeclarationFragment@@withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @TO@ VariableDeclarationStatement@@WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class); @AT@ 4036 @LENGTH@ 120
------------INS SimpleName@@withSecurityContext @TO@ VariableDeclarationFragment@@withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @AT@ 4036 @LENGTH@ 19
------------INS MethodInvocation@@AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @TO@ VariableDeclarationFragment@@withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @AT@ 4058 @LENGTH@ 98
---------------INS SimpleName@@Name:AnnotationUtils @TO@ MethodInvocation@@AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @AT@ 4058 @LENGTH@ 15
---------------INS SimpleName@@MethodName:findAnnotation:[annotationToTest.annotationType(), WithSecurityContext.class] @TO@ MethodInvocation@@AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class) @AT@ 4074 @LENGTH@ 82
------------------INS MethodInvocation@@annotationToTest.annotationType() @TO@ SimpleName@@MethodName:findAnnotation:[annotationToTest.annotationType(), WithSecurityContext.class] @AT@ 4095 @LENGTH@ 33
---------------------INS SimpleName@@Name:annotationToTest @TO@ MethodInvocation@@annotationToTest.annotationType() @AT@ 4095 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:annotationType:[] @TO@ MethodInvocation@@annotationToTest.annotationType() @AT@ 4112 @LENGTH@ 16
------------------INS TypeLiteral@@WithSecurityContext.class @TO@ SimpleName@@MethodName:findAnnotation:[annotationToTest.annotationType(), WithSecurityContext.class] @AT@ 4130 @LENGTH@ 25
------INS IfStatement@@if (withSecurityContext != null) {  return annotationToTest;} @TO@ EnhancedForStatement@@for (Annotation annotationToTest : allAnnotations) {  WithSecurityContext withSecurityContext=AnnotationUtils.findAnnotation(annotationToTest.annotationType(),WithSecurityContext.class);  if (withSecurityContext != null) {    return annotationToTest;  }} @AT@ 4161 @LENGTH@ 68
---------INS InfixExpression@@withSecurityContext != null @TO@ IfStatement@@if (withSecurityContext != null) {  return annotationToTest;} @AT@ 4165 @LENGTH@ 27
------------INS SimpleName@@withSecurityContext @TO@ InfixExpression@@withSecurityContext != null @AT@ 4165 @LENGTH@ 19
------------INS Operator@@!= @TO@ InfixExpression@@withSecurityContext != null @AT@ 4184 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@withSecurityContext != null @AT@ 4188 @LENGTH@ 4
---------INS Block@@ThenBody:{  return annotationToTest;} @TO@ IfStatement@@if (withSecurityContext != null) {  return annotationToTest;} @AT@ 4194 @LENGTH@ 35
------------INS ReturnStatement@@SimpleName:annotationToTest @TO@ Block@@ThenBody:{  return annotationToTest;} @AT@ 4200 @LENGTH@ 24
---------------INS SimpleName@@annotationToTest @TO@ ReturnStatement@@SimpleName:annotationToTest @AT@ 4207 @LENGTH@ 16
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@private, Annotation, MethodName:findAnnotation, AnnotatedElement annotated, Class<? extends Annotation> type,  @AT@ 4236 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 4243 @LENGTH@ 4


UPD IfStatement@@if (!(source.getParameterTypes()[i].isAssignableFrom(target.getParameterTypes()[i]))) {  return false;} @TO@ if (!(source.getParameterTypes()[i].isAssignableFrom(target.getParameterTypes()[i]))) {  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 50749 @LENGTH@ 139
---INS Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @TO@ IfStatement@@if (!(source.getParameterTypes()[i].isAssignableFrom(target.getParameterTypes()[i]))) {  return false;} @AT@ 51033 @LENGTH@ 271
------INS VariableDeclarationStatement@@boolean b1=source.isBridge(); @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 51055 @LENGTH@ 31
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean b1=source.isBridge(); @AT@ 51055 @LENGTH@ 7
---------INS VariableDeclarationFragment@@b1=source.isBridge() @TO@ VariableDeclarationStatement@@boolean b1=source.isBridge(); @AT@ 51063 @LENGTH@ 22
------------INS SimpleName@@b1 @TO@ VariableDeclarationFragment@@b1=source.isBridge() @AT@ 51063 @LENGTH@ 2
------------INS MethodInvocation@@source.isBridge() @TO@ VariableDeclarationFragment@@b1=source.isBridge() @AT@ 51068 @LENGTH@ 17
---------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.isBridge() @AT@ 51068 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isBridge:[] @TO@ MethodInvocation@@source.isBridge() @AT@ 51075 @LENGTH@ 10
------INS VariableDeclarationStatement@@boolean b2=target.isBridge(); @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 51107 @LENGTH@ 31
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean b2=target.isBridge(); @AT@ 51107 @LENGTH@ 7
---------INS VariableDeclarationFragment@@b2=target.isBridge() @TO@ VariableDeclarationStatement@@boolean b2=target.isBridge(); @AT@ 51115 @LENGTH@ 22
------------INS SimpleName@@b2 @TO@ VariableDeclarationFragment@@b2=target.isBridge() @AT@ 51115 @LENGTH@ 2
------------INS MethodInvocation@@target.isBridge() @TO@ VariableDeclarationFragment@@b2=target.isBridge() @AT@ 51120 @LENGTH@ 17
---------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.isBridge() @AT@ 51120 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isBridge:[] @TO@ MethodInvocation@@target.isBridge() @AT@ 51127 @LENGTH@ 10
------INS IfStatement@@if (!b1 && !b2) {  return false;} @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 51209 @LENGTH@ 77
---------MOV Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!b1 && !b2) {  return false;} @AT@ 50835 @LENGTH@ 53
---------INS InfixExpression@@!b1 && !b2 @TO@ IfStatement@@if (!b1 && !b2) {  return false;} @AT@ 51213 @LENGTH@ 10
------------INS PrefixExpression@@!b1 @TO@ InfixExpression@@!b1 && !b2 @AT@ 51213 @LENGTH@ 3
---------------INS Operator@@! @TO@ PrefixExpression@@!b1 @AT@ 51213 @LENGTH@ 1
---------------INS SimpleName@@b1 @TO@ PrefixExpression@@!b1 @AT@ 51214 @LENGTH@ 2
------------INS Operator@@&& @TO@ InfixExpression@@!b1 && !b2 @AT@ 51216 @LENGTH@ 2
------------INS PrefixExpression@@!b2 @TO@ InfixExpression@@!b1 && !b2 @AT@ 51220 @LENGTH@ 3
---------------INS Operator@@! @TO@ PrefixExpression@@!b2 @AT@ 51220 @LENGTH@ 1
---------------INS SimpleName@@b2 @TO@ PrefixExpression@@!b2 @AT@ 51221 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:LlapTokenChecker.checkPermissions(clusterId,queryInfo.getTokenAppId(),queryInfo.getTokenUserName(),queryInfo.getQueryIdentifier()) @TO@ MethodInvocation:LlapTokenChecker.checkPermissions(clusterId,queryInfo.getTokenUserName(),queryInfo.getTokenAppId(),queryInfo.getQueryIdentifier()) @AT@ 13811 @LENGTH@ 142
---UPD MethodInvocation@@LlapTokenChecker.checkPermissions(clusterId,queryInfo.getTokenAppId(),queryInfo.getTokenUserName(),queryInfo.getQueryIdentifier()) @TO@ LlapTokenChecker.checkPermissions(clusterId,queryInfo.getTokenUserName(),queryInfo.getTokenAppId(),queryInfo.getQueryIdentifier()) @AT@ 13811 @LENGTH@ 141
------UPD SimpleName@@MethodName:checkPermissions:[clusterId, queryInfo.getTokenAppId(), queryInfo.getTokenUserName(), queryInfo.getQueryIdentifier()] @TO@ MethodName:checkPermissions:[clusterId, queryInfo.getTokenUserName(), queryInfo.getTokenAppId(), queryInfo.getQueryIdentifier()] @AT@ 13828 @LENGTH@ 124
---------UPD MethodInvocation@@queryInfo.getTokenAppId() @TO@ queryInfo.getTokenUserName() @AT@ 13856 @LENGTH@ 25
------------UPD SimpleName@@MethodName:getTokenAppId:[] @TO@ MethodName:getTokenUserName:[] @AT@ 13866 @LENGTH@ 15
---------UPD MethodInvocation@@queryInfo.getTokenUserName() @TO@ queryInfo.getTokenAppId() @AT@ 13891 @LENGTH@ 28
------------UPD SimpleName@@MethodName:getTokenUserName:[] @TO@ MethodName:getTokenAppId:[] @AT@ 13901 @LENGTH@ 18


UPD VariableDeclarationStatement@@long minimum=calculateMinimum(intervalMs,throttle,messageCount); @TO@ long minimum=calculateMinimum(intervalMs,throttle,messageCount) - 50; @AT@ 6340 @LENGTH@ 68
---UPD VariableDeclarationFragment@@minimum=calculateMinimum(intervalMs,throttle,messageCount) @TO@ minimum=calculateMinimum(intervalMs,throttle,messageCount) - 50 @AT@ 6345 @LENGTH@ 62
------INS InfixExpression@@calculateMinimum(intervalMs,throttle,messageCount) - 50 @TO@ VariableDeclarationFragment@@minimum=calculateMinimum(intervalMs,throttle,messageCount) @AT@ 6377 @LENGTH@ 57
---------MOV MethodInvocation@@calculateMinimum(intervalMs,throttle,messageCount) @TO@ InfixExpression@@calculateMinimum(intervalMs,throttle,messageCount) - 50 @AT@ 6355 @LENGTH@ 52
---------INS Operator@@- @TO@ InfixExpression@@calculateMinimum(intervalMs,throttle,messageCount) - 50 @AT@ 6429 @LENGTH@ 1
---------INS NumberLiteral@@50 @TO@ InfixExpression@@calculateMinimum(intervalMs,throttle,messageCount) - 50 @AT@ 6432 @LENGTH@ 2


UPD MethodDeclaration@@Set<V>, MethodName:rangeByLex, RedisZSetCommands.Range range, RedisZSetCommands.Limit limit,  @TO@ Set<V>, MethodName:rangeByLex, Range range, Limit limit,  @AT@ 1747 @LENGTH@ 73
---UPD SingleVariableDeclaration@@RedisZSetCommands.Range range @TO@ Range range @AT@ 1758 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Range @TO@ Range @AT@ 1758 @LENGTH@ 23
---UPD SingleVariableDeclaration@@RedisZSetCommands.Limit limit @TO@ Limit limit @AT@ 1789 @LENGTH@ 29
------UPD SimpleType@@RedisZSetCommands.Limit @TO@ Limit @AT@ 1789 @LENGTH@ 23


UPD IfStatement@@if ((lastOptionValue == null || "".equals(lastOptionValue)) && (!translated.endsWith(" "))) {  List<CliOption> remainingMandatories=new ArrayList<CliOption>();  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext)) {      remainingMandatories.add(include);    }  }  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }  if (remainingMandatories.size() != 0) {    for (    final CliOption option : remainingMandatories) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }  } else {    for (    final CliOption option : unspecified) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }    if (hasShellContextParameter(methodTarget.getMethod())) {      for (      final String parameter : globalParameters) {        if (parameter != null && lastOptionKey != null && parameter.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {          final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + parameter + " ";          results.add(new Completion(completionValue));        }      }    }  }  candidates.addAll(results);  return 0;} @TO@ if ((lastOptionValue == null || "".equals(lastOptionValue)) && (!translated.endsWith(" "))) {  List<CliOption> remainingMandatories=new ArrayList<CliOption>();  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext)) {      remainingMandatories.add(include);    }  }  if (alreadySpecified.size() > 0) {    List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());    if (paramsKeys.contains(lastOptionKey)) {      remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));    }  }  if (remainingMandatories.size() != 0) {    for (    final CliOption option : remainingMandatories) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }  } else {    for (    final CliOption option : unspecified) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }    if (hasShellContextParameter(methodTarget.getMethod())) {      for (      final String parameter : globalParameters) {        if (parameter != null && lastOptionKey != null && parameter.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {          final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + parameter + " ";          results.add(new Completion(completionValue));        }      }    }  }  candidates.addAll(results);  return 0;} @AT@ 29723 @LENGTH@ 4924
---UPD Block@@ThenBody:{  List<CliOption> remainingMandatories=new ArrayList<CliOption>();  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext)) {      remainingMandatories.add(include);    }  }  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }  if (remainingMandatories.size() != 0) {    for (    final CliOption option : remainingMandatories) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }  } else {    for (    final CliOption option : unspecified) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }    if (hasShellContextParameter(methodTarget.getMethod())) {      for (      final String parameter : globalParameters) {        if (parameter != null && lastOptionKey != null && parameter.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {          final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + parameter + " ";          results.add(new Completion(completionValue));        }      }    }  }  candidates.addAll(results);  return 0;} @TO@ ThenBody:{  List<CliOption> remainingMandatories=new ArrayList<CliOption>();  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext)) {      remainingMandatories.add(include);    }  }  if (alreadySpecified.size() > 0) {    List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());    if (paramsKeys.contains(lastOptionKey)) {      remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));    }  }  if (remainingMandatories.size() != 0) {    for (    final CliOption option : remainingMandatories) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }  } else {    for (    final CliOption option : unspecified) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }    if (hasShellContextParameter(methodTarget.getMethod())) {      for (      final String parameter : globalParameters) {        if (parameter != null && lastOptionKey != null && parameter.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {          final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + parameter + " ";          results.add(new Completion(completionValue));        }      }    }  }  candidates.addAll(results);  return 0;} @AT@ 29835 @LENGTH@ 4812
------INS IfStatement@@if (alreadySpecified.size() > 0) {  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @TO@ Block@@ThenBody:{  List<CliOption> remainingMandatories=new ArrayList<CliOption>();  for (  final CliOption include : unspecified) {    if (isMandatoryParam(methodTarget.getKey(),include,shellContext)) {      remainingMandatories.add(include);    }  }  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }  if (remainingMandatories.size() != 0) {    for (    final CliOption option : remainingMandatories) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }  } else {    for (    final CliOption option : unspecified) {      if (isVisibleParam(methodTarget.getKey(),option,shellContext)) {        for (        final String value : option.key()) {          if (value != null && lastOptionKey != null && value.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {            final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + value + " ";            results.add(new Completion(completionValue));          }        }      }    }    if (hasShellContextParameter(methodTarget.getMethod())) {      for (      final String parameter : globalParameters) {        if (parameter != null && lastOptionKey != null && parameter.regionMatches(true,0,lastOptionKey,0,lastOptionKey.length())) {          final String completionValue=translated.substring(0,translated.length() - lastOptionKey.length()) + parameter + " ";          results.add(new Completion(completionValue));        }      }    }  }  candidates.addAll(results);  return 0;} @AT@ 30634 @LENGTH@ 435
---------INS InfixExpression@@alreadySpecified.size() > 0 @TO@ IfStatement@@if (alreadySpecified.size() > 0) {  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @AT@ 30637 @LENGTH@ 27
------------INS MethodInvocation@@alreadySpecified.size() @TO@ InfixExpression@@alreadySpecified.size() > 0 @AT@ 30637 @LENGTH@ 23
---------------INS SimpleName@@Name:alreadySpecified @TO@ MethodInvocation@@alreadySpecified.size() @AT@ 30637 @LENGTH@ 16
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@alreadySpecified.size() @AT@ 30654 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@alreadySpecified.size() > 0 @AT@ 30660 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@alreadySpecified.size() > 0 @AT@ 30663 @LENGTH@ 1
---------INS Block@@ThenBody:{  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @TO@ IfStatement@@if (alreadySpecified.size() > 0) {  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @AT@ 30665 @LENGTH@ 404
------------MOV VariableDeclarationStatement@@List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key()); @TO@ Block@@ThenBody:{  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @AT@ 30634 @LENGTH@ 96
------------MOV IfStatement@@if (paramsKeys.contains(lastOptionKey)) {  remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));} @TO@ Block@@ThenBody:{  List<String> paramsKeys=Arrays.asList(alreadySpecified.get(alreadySpecified.size() - 1).key());  if (paramsKeys.contains(lastOptionKey)) {    remainingMandatories.add(alreadySpecified.get(alreadySpecified.size() - 1));  }} @AT@ 30747 @LENGTH@ 231


MOV ExpressionStatement@@MethodInvocation:new DirectFieldAccessor(consumer).setPropertyValue("logger",qLogger) @TO@ MethodDeclaration@@public, void, MethodName:testErrorHandlerThrowsARADRE, Exception,  @AT@ 5513 @LENGTH@ 70


UPD MethodDeclaration@@public, voidMethodName:MyBookProcessor, String encoding, String title,  @TO@ voidMethodName:MyBookProcessor, String encoding, String title,  @AT@ 4813 @LENGTH@ 135
---DEL Modifier@@public @AT@ 4813 @LENGTH@ 6


UPD TypeDeclaration@@[public]SecurityContextHolderTests, TestCase @TO@ [public]SecurityContextHolderTests,  @AT@ 938 @LENGTH@ 1098
---DEL SimpleType@@TestCase @AT@ 986 @LENGTH@ 8


UPD FieldDeclaration@@public, final, static, String, [CLASSPATH_LOCATION="META-INF/wildfly-swarm-classpath.conf"] @TO@ public, final, static, String, [CLASSPATH_LOCATION="META-INF/wildfly-swarm-bootstrap.conf"] @AT@ 1343 @LENGTH@ 88
---UPD VariableDeclarationFragment@@CLASSPATH_LOCATION="META-INF/wildfly-swarm-classpath.conf" @TO@ CLASSPATH_LOCATION="META-INF/wildfly-swarm-bootstrap.conf" @AT@ 1370 @LENGTH@ 60
------UPD StringLiteral@@"META-INF/wildfly-swarm-classpath.conf" @TO@ "META-INF/wildfly-swarm-bootstrap.conf" @AT@ 1391 @LENGTH@ 39


UPD ExpressionStatement@@Assignment:this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @TO@ Assignment:this.sessionAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 9385 @LENGTH@ 75
---UPD Assignment@@this.sessionFixationAuthenticationStrategy=sessionAuthenticationStrategy @TO@ this.sessionAuthenticationStrategy=sessionAuthenticationStrategy @AT@ 9385 @LENGTH@ 74
------UPD FieldAccess@@this.sessionFixationAuthenticationStrategy @TO@ this.sessionAuthenticationStrategy @AT@ 9385 @LENGTH@ 42
---------UPD SimpleName@@sessionFixationAuthenticationStrategy @TO@ sessionAuthenticationStrategy @AT@ 9390 @LENGTH@ 37


UPD MethodDeclaration@@public, voidMethodName:Delivery,  @TO@ voidMethodName:Delivery,  @AT@ 9271 @LENGTH@ 132
---DEL Modifier@@public @AT@ 9271 @LENGTH@ 6


UPD TryStatement@@try {  final ModelNode request=buildRequest(ctx);  final ModelControllerClient client=ctx.getModelControllerClient();  try {    response=client.execute(request);  } catch (  Exception e) {    throw new CommandFormatException("Failed to perform operation: " + e.getLocalizedMessage());  }  if (!Util.isSuccess(response)) {    throw new CommandFormatException(Util.getFailureDescription(response));  }} catch (CommandLineException e) {  failed=true;  throw new CommandLineException("The batch failed with the following error " + "(you are remaining in the batch editing mode to have a chance to correct the error)",e);} finally {  if (!failed) {    if (ctx.getBatchManager().isBatchActive()) {      ctx.getBatchManager().discardActiveBatch();    }  }} @TO@ try {  final ModelNode request=buildRequest(ctx);  if (ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS)) {    final List<ModelNode> steps=request.get(Util.STEPS).asList();    for (    ModelNode step : steps) {      ModelNode opDescOutcome=Util.validateRequest(ctx,step);      if (opDescOutcome != null) {        Util.replaceFilePathsWithBytes(request,opDescOutcome);      }    }  }  final ModelControllerClient client=ctx.getModelControllerClient();  try {    response=client.execute(request);  } catch (  Exception e) {    throw new CommandFormatException("Failed to perform operation: " + e.getLocalizedMessage());  }  if (!Util.isSuccess(response)) {    throw new CommandFormatException(Util.getFailureDescription(response));  }} catch (CommandLineException e) {  failed=true;  throw new CommandLineException("The batch failed with the following error " + "(you are remaining in the batch editing mode to have a chance to correct the error)",e);} finally {  if (!failed) {    if (ctx.getBatchManager().isBatchActive()) {      ctx.getBatchManager().discardActiveBatch();    }  }} @AT@ 2919 @LENGTH@ 1000
---INS IfStatement@@if (ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS)) {  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @TO@ TryStatement@@try {  final ModelNode request=buildRequest(ctx);  final ModelControllerClient client=ctx.getModelControllerClient();  try {    response=client.execute(request);  } catch (  Exception e) {    throw new CommandFormatException("Failed to perform operation: " + e.getLocalizedMessage());  }  if (!Util.isSuccess(response)) {    throw new CommandFormatException(Util.getFailureDescription(response));  }} catch (CommandLineException e) {  failed=true;  throw new CommandLineException("The batch failed with the following error " + "(you are remaining in the batch editing mode to have a chance to correct the error)",e);} finally {  if (!failed) {    if (ctx.getBatchManager().isBatchActive()) {      ctx.getBatchManager().discardActiveBatch();    }  }} @AT@ 2995 @LENGTH@ 615
------INS InfixExpression@@ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS) @TO@ IfStatement@@if (ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS)) {  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @AT@ 2999 @LENGTH@ 164
---------INS MethodInvocation@@ctx.getConfig().isValidateOperationRequests() @TO@ InfixExpression@@ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS) @AT@ 2999 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:getConfig:[] @TO@ MethodInvocation@@ctx.getConfig().isValidateOperationRequests() @AT@ 2999 @LENGTH@ 15
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getConfig().isValidateOperationRequests() @AT@ 2999 @LENGTH@ 3
------------INS SimpleName@@MethodName:isValidateOperationRequests:[] @TO@ MethodInvocation@@ctx.getConfig().isValidateOperationRequests() @AT@ 3015 @LENGTH@ 29
---------INS Operator@@&& @TO@ InfixExpression@@ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS) @AT@ 3044 @LENGTH@ 2
---------INS MethodInvocation@@request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) @TO@ InfixExpression@@ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS) @AT@ 3048 @LENGTH@ 61
------------INS MethodInvocation@@MethodName:asString:[] @TO@ MethodInvocation@@request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) @AT@ 3048 @LENGTH@ 38
------------INS MethodInvocation@@MethodName:get:[Util.OPERATION] @TO@ MethodInvocation@@request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) @AT@ 3048 @LENGTH@ 27
---------------INS QualifiedName@@Util.OPERATION @TO@ MethodInvocation@@MethodName:get:[Util.OPERATION] @AT@ 3060 @LENGTH@ 14
------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.OPERATION @AT@ 3060 @LENGTH@ 4
------------------INS SimpleName@@OPERATION @TO@ QualifiedName@@Util.OPERATION @AT@ 3065 @LENGTH@ 9
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) @AT@ 3048 @LENGTH@ 7
------------INS SimpleName@@MethodName:equals:[Util.COMPOSITE] @TO@ MethodInvocation@@request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) @AT@ 3087 @LENGTH@ 22
---------------INS QualifiedName@@Util.COMPOSITE @TO@ SimpleName@@MethodName:equals:[Util.COMPOSITE] @AT@ 3094 @LENGTH@ 14
------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.COMPOSITE @AT@ 3094 @LENGTH@ 4
------------------INS SimpleName@@COMPOSITE @TO@ QualifiedName@@Util.COMPOSITE @AT@ 3099 @LENGTH@ 9
---------INS MethodInvocation@@request.hasDefined(Util.STEPS) @TO@ InfixExpression@@ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS) @AT@ 3133 @LENGTH@ 30
------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.hasDefined(Util.STEPS) @AT@ 3133 @LENGTH@ 7
------------INS SimpleName@@MethodName:hasDefined:[Util.STEPS] @TO@ MethodInvocation@@request.hasDefined(Util.STEPS) @AT@ 3141 @LENGTH@ 22
---------------INS QualifiedName@@Util.STEPS @TO@ SimpleName@@MethodName:hasDefined:[Util.STEPS] @AT@ 3152 @LENGTH@ 10
------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.STEPS @AT@ 3152 @LENGTH@ 4
------------------INS SimpleName@@STEPS @TO@ QualifiedName@@Util.STEPS @AT@ 3157 @LENGTH@ 5
------INS Block@@ThenBody:{  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @TO@ IfStatement@@if (ctx.getConfig().isValidateOperationRequests() && request.get(Util.OPERATION).asString().equals(Util.COMPOSITE) && request.hasDefined(Util.STEPS)) {  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @AT@ 3165 @LENGTH@ 445
---------INS VariableDeclarationStatement@@final List<ModelNode> steps=request.get(Util.STEPS).asList(); @TO@ Block@@ThenBody:{  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @AT@ 3183 @LENGTH@ 63
------------INS Modifier@@final @TO@ VariableDeclarationStatement@@final List<ModelNode> steps=request.get(Util.STEPS).asList(); @AT@ 3183 @LENGTH@ 5
------------INS ParameterizedType@@List<ModelNode> @TO@ VariableDeclarationStatement@@final List<ModelNode> steps=request.get(Util.STEPS).asList(); @AT@ 3189 @LENGTH@ 15
---------------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 3189 @LENGTH@ 4
---------------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 3194 @LENGTH@ 9
------------INS VariableDeclarationFragment@@steps=request.get(Util.STEPS).asList() @TO@ VariableDeclarationStatement@@final List<ModelNode> steps=request.get(Util.STEPS).asList(); @AT@ 3205 @LENGTH@ 40
---------------INS SimpleName@@steps @TO@ VariableDeclarationFragment@@steps=request.get(Util.STEPS).asList() @AT@ 3205 @LENGTH@ 5
---------------INS MethodInvocation@@request.get(Util.STEPS).asList() @TO@ VariableDeclarationFragment@@steps=request.get(Util.STEPS).asList() @AT@ 3213 @LENGTH@ 32
------------------INS MethodInvocation@@MethodName:get:[Util.STEPS] @TO@ MethodInvocation@@request.get(Util.STEPS).asList() @AT@ 3213 @LENGTH@ 23
---------------------INS QualifiedName@@Util.STEPS @TO@ MethodInvocation@@MethodName:get:[Util.STEPS] @AT@ 3225 @LENGTH@ 10
------------------------INS SimpleName@@Util @TO@ QualifiedName@@Util.STEPS @AT@ 3225 @LENGTH@ 4
------------------------INS SimpleName@@STEPS @TO@ QualifiedName@@Util.STEPS @AT@ 3230 @LENGTH@ 5
------------------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.get(Util.STEPS).asList() @AT@ 3213 @LENGTH@ 7
------------------INS SimpleName@@MethodName:asList:[] @TO@ MethodInvocation@@request.get(Util.STEPS).asList() @AT@ 3237 @LENGTH@ 8
---------INS EnhancedForStatement@@for (ModelNode step : steps) {  ModelNode opDescOutcome=Util.validateRequest(ctx,step);  if (opDescOutcome != null) {    Util.replaceFilePathsWithBytes(request,opDescOutcome);  }} @TO@ Block@@ThenBody:{  final List<ModelNode> steps=request.get(Util.STEPS).asList();  for (  ModelNode step : steps) {    ModelNode opDescOutcome=Util.validateRequest(ctx,step);    if (opDescOutcome != null) {      Util.replaceFilePathsWithBytes(request,opDescOutcome);    }  }} @AT@ 3263 @LENGTH@ 333
------------INS SingleVariableDeclaration@@ModelNode step @TO@ EnhancedForStatement@@for (ModelNode step : steps) {  ModelNode opDescOutcome=Util.validateRequest(ctx,step);  if (opDescOutcome != null) {    Util.replaceFilePathsWithBytes(request,opDescOutcome);  }} @AT@ 3268 @LENGTH@ 14
---------------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@ModelNode step @AT@ 3268 @LENGTH@ 9
---------------INS SimpleName@@step @TO@ SingleVariableDeclaration@@ModelNode step @AT@ 3278 @LENGTH@ 4
------------INS SimpleName@@steps @TO@ EnhancedForStatement@@for (ModelNode step : steps) {  ModelNode opDescOutcome=Util.validateRequest(ctx,step);  if (opDescOutcome != null) {    Util.replaceFilePathsWithBytes(request,opDescOutcome);  }} @AT@ 3285 @LENGTH@ 5
------------INS VariableDeclarationStatement@@ModelNode opDescOutcome=Util.validateRequest(ctx,step); @TO@ EnhancedForStatement@@for (ModelNode step : steps) {  ModelNode opDescOutcome=Util.validateRequest(ctx,step);  if (opDescOutcome != null) {    Util.replaceFilePathsWithBytes(request,opDescOutcome);  }} @AT@ 3314 @LENGTH@ 58
---------------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode opDescOutcome=Util.validateRequest(ctx,step); @AT@ 3314 @LENGTH@ 9
---------------INS VariableDeclarationFragment@@opDescOutcome=Util.validateRequest(ctx,step) @TO@ VariableDeclarationStatement@@ModelNode opDescOutcome=Util.validateRequest(ctx,step); @AT@ 3324 @LENGTH@ 47
------------------INS SimpleName@@opDescOutcome @TO@ VariableDeclarationFragment@@opDescOutcome=Util.validateRequest(ctx,step) @AT@ 3324 @LENGTH@ 13
------------------INS MethodInvocation@@Util.validateRequest(ctx,step) @TO@ VariableDeclarationFragment@@opDescOutcome=Util.validateRequest(ctx,step) @AT@ 3340 @LENGTH@ 31
---------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.validateRequest(ctx,step) @AT@ 3340 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:validateRequest:[ctx, step] @TO@ MethodInvocation@@Util.validateRequest(ctx,step) @AT@ 3345 @LENGTH@ 26
------------------------INS SimpleName@@ctx @TO@ SimpleName@@MethodName:validateRequest:[ctx, step] @AT@ 3361 @LENGTH@ 3
------------------------INS SimpleName@@step @TO@ SimpleName@@MethodName:validateRequest:[ctx, step] @AT@ 3366 @LENGTH@ 4
------------INS IfStatement@@if (opDescOutcome != null) {  Util.replaceFilePathsWithBytes(request,opDescOutcome);} @TO@ EnhancedForStatement@@for (ModelNode step : steps) {  ModelNode opDescOutcome=Util.validateRequest(ctx,step);  if (opDescOutcome != null) {    Util.replaceFilePathsWithBytes(request,opDescOutcome);  }} @AT@ 3393 @LENGTH@ 185
---------------INS InfixExpression@@opDescOutcome != null @TO@ IfStatement@@if (opDescOutcome != null) {  Util.replaceFilePathsWithBytes(request,opDescOutcome);} @AT@ 3397 @LENGTH@ 21
------------------INS SimpleName@@opDescOutcome @TO@ InfixExpression@@opDescOutcome != null @AT@ 3397 @LENGTH@ 13
------------------INS Operator@@!= @TO@ InfixExpression@@opDescOutcome != null @AT@ 3410 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@opDescOutcome != null @AT@ 3414 @LENGTH@ 4
---------------INS Block@@ThenBody:{  Util.replaceFilePathsWithBytes(request,opDescOutcome);} @TO@ IfStatement@@if (opDescOutcome != null) {  Util.replaceFilePathsWithBytes(request,opDescOutcome);} @AT@ 3420 @LENGTH@ 158
------------------INS ExpressionStatement@@MethodInvocation:Util.replaceFilePathsWithBytes(request,opDescOutcome) @TO@ Block@@ThenBody:{  Util.replaceFilePathsWithBytes(request,opDescOutcome);} @AT@ 3501 @LENGTH@ 55
---------------------INS MethodInvocation@@Util.replaceFilePathsWithBytes(request,opDescOutcome) @TO@ ExpressionStatement@@MethodInvocation:Util.replaceFilePathsWithBytes(request,opDescOutcome) @AT@ 3501 @LENGTH@ 54
------------------------INS SimpleName@@Name:Util @TO@ MethodInvocation@@Util.replaceFilePathsWithBytes(request,opDescOutcome) @AT@ 3501 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:replaceFilePathsWithBytes:[request, opDescOutcome] @TO@ MethodInvocation@@Util.replaceFilePathsWithBytes(request,opDescOutcome) @AT@ 3506 @LENGTH@ 49
---------------------------INS SimpleName@@request @TO@ SimpleName@@MethodName:replaceFilePathsWithBytes:[request, opDescOutcome] @AT@ 3532 @LENGTH@ 7
---------------------------INS SimpleName@@opDescOutcome @TO@ SimpleName@@MethodName:replaceFilePathsWithBytes:[request, opDescOutcome] @AT@ 3541 @LENGTH@ 13


INS FieldDeclaration@@private, HazelcastSedaConfiguration, [hazelcastSedaConfiguration] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="hazelcast",title="Hazelcast",syntax="hazelcast:command:cacheName",consumerClass=HazelcastDefaultConsumer.class,label="cache,datagrid"), public, abstract]HazelcastDefaultEndpoint, DefaultEndpoint @AT@ 2010 @LENGTH@ 62
---INS Modifier@@private @TO@ FieldDeclaration@@private, HazelcastSedaConfiguration, [hazelcastSedaConfiguration] @AT@ 2010 @LENGTH@ 7
---INS SimpleType@@HazelcastSedaConfiguration @TO@ FieldDeclaration@@private, HazelcastSedaConfiguration, [hazelcastSedaConfiguration] @AT@ 2018 @LENGTH@ 26
---INS VariableDeclarationFragment@@hazelcastSedaConfiguration @TO@ FieldDeclaration@@private, HazelcastSedaConfiguration, [hazelcastSedaConfiguration] @AT@ 2045 @LENGTH@ 26
------INS SimpleName@@hazelcastSedaConfiguration @TO@ VariableDeclarationFragment@@hazelcastSedaConfiguration @AT@ 2045 @LENGTH@ 26


INS MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @TO@ TypeDeclaration@@[public]ResultProcessorUnitTests,  @AT@ 5768 @LENGTH@ 136
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @AT@ 5768 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @AT@ 5775 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsNullResultAsIs @TO@ MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @AT@ 5780 @LENGTH@ 21
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @AT@ 5811 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertThat(getProcessor("findOneDto").processResult(null),is(nullValue())) @TO@ MethodDeclaration@@public, void, MethodName:returnsNullResultAsIs, Exception,  @AT@ 5825 @LENGTH@ 76
------INS MethodInvocation@@assertThat(getProcessor("findOneDto").processResult(null),is(nullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(getProcessor("findOneDto").processResult(null),is(nullValue())) @AT@ 5825 @LENGTH@ 75
---------INS SimpleName@@MethodName:assertThat:[getProcessor("findOneDto").processResult(null), is(nullValue())] @TO@ MethodInvocation@@assertThat(getProcessor("findOneDto").processResult(null),is(nullValue())) @AT@ 5825 @LENGTH@ 75
------------INS MethodInvocation@@getProcessor("findOneDto").processResult(null) @TO@ SimpleName@@MethodName:assertThat:[getProcessor("findOneDto").processResult(null), is(nullValue())] @AT@ 5836 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:getProcessor:["findOneDto"] @TO@ MethodInvocation@@getProcessor("findOneDto").processResult(null) @AT@ 5836 @LENGTH@ 26
------------------INS StringLiteral@@"findOneDto" @TO@ MethodInvocation@@MethodName:getProcessor:["findOneDto"] @AT@ 5849 @LENGTH@ 12
---------------INS SimpleName@@MethodName:processResult:[null] @TO@ MethodInvocation@@getProcessor("findOneDto").processResult(null) @AT@ 5863 @LENGTH@ 19
------------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:processResult:[null] @AT@ 5877 @LENGTH@ 4
------------INS MethodInvocation@@is(nullValue()) @TO@ SimpleName@@MethodName:assertThat:[getProcessor("findOneDto").processResult(null), is(nullValue())] @AT@ 5884 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 5884 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 5887 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 5884 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 5887 @LENGTH@ 11


INS MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @TO@ TypeDeclaration@@[public]TestPojoExclusion,  @AT@ 1539 @LENGTH@ 427
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1539 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1546 @LENGTH@ 7
---INS SimpleName@@MethodName:equals @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1554 @LENGTH@ 6
---INS SingleVariableDeclaration@@Object o @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1561 @LENGTH@ 8
------INS SimpleType@@Object @TO@ SingleVariableDeclaration@@Object o @AT@ 1561 @LENGTH@ 6
------INS SimpleName@@o @TO@ SingleVariableDeclaration@@Object o @AT@ 1568 @LENGTH@ 1
---INS IfStatement@@if (this == o) {  return true;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1581 @LENGTH@ 51
------INS InfixExpression@@this == o @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1585 @LENGTH@ 9
---------INS ThisExpression@@this @TO@ InfixExpression@@this == o @AT@ 1585 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@this == o @AT@ 1589 @LENGTH@ 2
---------INS SimpleName@@o @TO@ InfixExpression@@this == o @AT@ 1593 @LENGTH@ 1
------INS Block@@ThenBody:{  return true;} @TO@ IfStatement@@if (this == o) {  return true;} @AT@ 1596 @LENGTH@ 36
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  return true;} @AT@ 1610 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 1617 @LENGTH@ 4
---INS IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1641 @LENGTH@ 82
------INS InfixExpression@@o == null || getClass() != o.getClass() @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1645 @LENGTH@ 39
---------INS InfixExpression@@o == null @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1645 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 1645 @LENGTH@ 1
------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 1646 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 1650 @LENGTH@ 4
---------INS Operator@@|| @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1654 @LENGTH@ 2
---------INS InfixExpression@@getClass() != o.getClass() @TO@ InfixExpression@@o == null || getClass() != o.getClass() @AT@ 1658 @LENGTH@ 26
------------INS MethodInvocation@@MethodName:getClass:[] @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1658 @LENGTH@ 10
------------INS Operator@@!= @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1668 @LENGTH@ 2
------------INS MethodInvocation@@o.getClass() @TO@ InfixExpression@@getClass() != o.getClass() @AT@ 1672 @LENGTH@ 12
---------------INS SimpleName@@Name:o @TO@ MethodInvocation@@o.getClass() @AT@ 1672 @LENGTH@ 1
---------------INS SimpleName@@MethodName:getClass:[] @TO@ MethodInvocation@@o.getClass() @AT@ 1674 @LENGTH@ 10
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (o == null || getClass() != o.getClass()) {  return false;} @AT@ 1686 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1700 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1707 @LENGTH@ 5
---INS VariableDeclarationStatement@@TestPojoExclusion that=(TestPojoExclusion)o; @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1733 @LENGTH@ 47
------INS SimpleType@@TestPojoExclusion @TO@ VariableDeclarationStatement@@TestPojoExclusion that=(TestPojoExclusion)o; @AT@ 1733 @LENGTH@ 17
------INS VariableDeclarationFragment@@that=(TestPojoExclusion)o @TO@ VariableDeclarationStatement@@TestPojoExclusion that=(TestPojoExclusion)o; @AT@ 1751 @LENGTH@ 28
---------INS SimpleName@@that @TO@ VariableDeclarationFragment@@that=(TestPojoExclusion)o @AT@ 1751 @LENGTH@ 4
---------INS CastExpression@@(TestPojoExclusion)o @TO@ VariableDeclarationFragment@@that=(TestPojoExclusion)o @AT@ 1758 @LENGTH@ 21
------------INS SimpleType@@TestPojoExclusion @TO@ CastExpression@@(TestPojoExclusion)o @AT@ 1759 @LENGTH@ 17
------------INS SimpleName@@o @TO@ CastExpression@@(TestPojoExclusion)o @AT@ 1778 @LENGTH@ 1
---INS IfStatement@@if (age != that.age) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1790 @LENGTH@ 58
------INS InfixExpression@@age != that.age @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1794 @LENGTH@ 15
---------INS SimpleName@@age @TO@ InfixExpression@@age != that.age @AT@ 1794 @LENGTH@ 3
---------INS Operator@@!= @TO@ InfixExpression@@age != that.age @AT@ 1797 @LENGTH@ 2
---------INS QualifiedName@@that.age @TO@ InfixExpression@@age != that.age @AT@ 1801 @LENGTH@ 8
------------INS SimpleName@@that @TO@ QualifiedName@@that.age @AT@ 1801 @LENGTH@ 4
------------INS SimpleName@@age @TO@ QualifiedName@@that.age @AT@ 1806 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (age != that.age) {  return false;} @AT@ 1811 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1825 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1832 @LENGTH@ 5
---INS IfStatement@@if (height != that.height) {  return false;} @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1857 @LENGTH@ 64
------INS InfixExpression@@height != that.height @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1861 @LENGTH@ 21
---------INS SimpleName@@height @TO@ InfixExpression@@height != that.height @AT@ 1861 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@height != that.height @AT@ 1867 @LENGTH@ 2
---------INS QualifiedName@@that.height @TO@ InfixExpression@@height != that.height @AT@ 1871 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.height @AT@ 1871 @LENGTH@ 4
------------INS SimpleName@@height @TO@ QualifiedName@@that.height @AT@ 1876 @LENGTH@ 6
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (height != that.height) {  return false;} @AT@ 1884 @LENGTH@ 37
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 1898 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 1905 @LENGTH@ 5
---INS ReturnStatement@@InfixExpression:weight == that.weight @TO@ MethodDeclaration@@public, boolean, MethodName:equals, Object o,  @AT@ 1930 @LENGTH@ 29
------INS InfixExpression@@weight == that.weight @TO@ ReturnStatement@@InfixExpression:weight == that.weight @AT@ 1937 @LENGTH@ 21
---------INS SimpleName@@weight @TO@ InfixExpression@@weight == that.weight @AT@ 1937 @LENGTH@ 6
---------INS Operator@@== @TO@ InfixExpression@@weight == that.weight @AT@ 1943 @LENGTH@ 2
---------INS QualifiedName@@that.weight @TO@ InfixExpression@@weight == that.weight @AT@ 1947 @LENGTH@ 11
------------INS SimpleName@@that @TO@ QualifiedName@@that.weight @AT@ 1947 @LENGTH@ 4
------------INS SimpleName@@weight @TO@ QualifiedName@@that.weight @AT@ 1952 @LENGTH@ 6


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(CamelCatalogTest.class)] @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 1406 @LENGTH@ 82


UPD ReturnStatement@@MethodInvocation:this.name.equals(((TestPojo)obj).getName()) @TO@ MethodInvocation:this.name.equals(((TestJAXBPojo)obj).getName()) @AT@ 1265 @LENGTH@ 52
---UPD MethodInvocation@@this.name.equals(((TestPojo)obj).getName()) @TO@ this.name.equals(((TestJAXBPojo)obj).getName()) @AT@ 1272 @LENGTH@ 44
------UPD SimpleName@@MethodName:equals:[((TestPojo)obj).getName()] @TO@ MethodName:equals:[((TestJAXBPojo)obj).getName()] @AT@ 1282 @LENGTH@ 34
---------UPD MethodInvocation@@((TestPojo)obj).getName() @TO@ ((TestJAXBPojo)obj).getName() @AT@ 1289 @LENGTH@ 26
------------UPD ParenthesizedExpression@@((TestPojo)obj) @TO@ ((TestJAXBPojo)obj) @AT@ 1289 @LENGTH@ 16
---------------UPD CastExpression@@(TestPojo)obj @TO@ (TestJAXBPojo)obj @AT@ 1290 @LENGTH@ 14
------------------UPD SimpleType@@TestPojo @TO@ TestJAXBPojo @AT@ 1291 @LENGTH@ 8


UPD VariableDeclarationStatement@@int idx1=-1, idx2=-1; @TO@ int idx1=-1; @AT@ 6521 @LENGTH@ 21


DEL ExpressionStatement@@MethodInvocation:ServiceHelper.stopService(producer) @AT@ 3720 @LENGTH@ 36
---DEL MethodInvocation@@ServiceHelper.stopService(producer) @AT@ 3720 @LENGTH@ 35
------DEL SimpleName@@Name:ServiceHelper @AT@ 3720 @LENGTH@ 13
------DEL SimpleName@@MethodName:stopService:[producer] @AT@ 3734 @LENGTH@ 21
---------DEL SimpleName@@producer @AT@ 3746 @LENGTH@ 8


UPD MethodDeclaration@@public, WebSocket, MethodName:doWebSocketConnect, HttpServletRequest request, String protocol,  @TO@ public, WebSocket, MethodName:doWebSocketConnect, ServletUpgradeRequest request, String protocol,  @AT@ 2413 @LENGTH@ 504
---UPD SingleVariableDeclaration@@HttpServletRequest request @TO@ ServletUpgradeRequest request @AT@ 2449 @LENGTH@ 26
------UPD SimpleType@@HttpServletRequest @TO@ ServletUpgradeRequest @AT@ 2449 @LENGTH@ 18


UPD MethodDeclaration@@public, voidMethodName:ElementComparator, SequenceElementComparator<E> comparator,  @TO@ voidMethodName:ElementComparator, SequenceElementComparator<E> comparator,  @AT@ 1461 @LENGTH@ 111
---DEL Modifier@@public @AT@ 1461 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:createContainingCriteria(part,property,criteria,parameters).not() @TO@ MethodInvocation:createContainingCriteria(part,property,criteria.not(),parameters) @AT@ 7014 @LENGTH@ 76
---UPD MethodInvocation@@createContainingCriteria(part,property,criteria,parameters).not() @TO@ createContainingCriteria(part,property,criteria.not(),parameters) @AT@ 7021 @LENGTH@ 68
------DEL MethodInvocation@@MethodName:createContainingCriteria:[part, property, criteria, parameters] @AT@ 7021 @LENGTH@ 62
---------DEL SimpleName@@part @AT@ 7046 @LENGTH@ 4
---------DEL SimpleName@@property @AT@ 7052 @LENGTH@ 8
------INS SimpleName@@MethodName:createContainingCriteria:[part, property, criteria.not(), parameters] @TO@ MethodInvocation@@createContainingCriteria(part,property,criteria,parameters).not() @AT@ 7021 @LENGTH@ 68
---------INS SimpleName@@part @TO@ SimpleName@@MethodName:createContainingCriteria:[part, property, criteria.not(), parameters] @AT@ 7046 @LENGTH@ 4
---------INS SimpleName@@property @TO@ SimpleName@@MethodName:createContainingCriteria:[part, property, criteria.not(), parameters] @AT@ 7052 @LENGTH@ 8
---------INS MethodInvocation@@criteria.not() @TO@ SimpleName@@MethodName:createContainingCriteria:[part, property, criteria.not(), parameters] @AT@ 7062 @LENGTH@ 14
------------MOV SimpleName@@criteria @TO@ MethodInvocation@@criteria.not() @AT@ 7062 @LENGTH@ 8
------------MOV SimpleName@@parameters @TO@ MethodInvocation@@criteria.not() @AT@ 7072 @LENGTH@ 10
---------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:createContainingCriteria:[part, property, criteria.not(), parameters] @AT@ 7078 @LENGTH@ 10
------DEL SimpleName@@MethodName:not:[] @AT@ 7084 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:xslt.setCamelContext(getCamelContext()) @AT@ 14150 @LENGTH@ 40
---DEL MethodInvocation@@xslt.setCamelContext(getCamelContext()) @AT@ 14150 @LENGTH@ 39
------DEL SimpleName@@Name:xslt @AT@ 14150 @LENGTH@ 4
------DEL SimpleName@@MethodName:setCamelContext:[getCamelContext()] @AT@ 14155 @LENGTH@ 34
---------DEL MethodInvocation@@MethodName:getCamelContext:[] @AT@ 14171 @LENGTH@ 17


INS ExpressionStatement@@MethodInvocation:factory.setCreator(new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
) @TO@ MethodDeclaration@@public, void, MethodName:configure, WebSocketServletFactory factory,  @AT@ 3418 @LENGTH@ 362
---INS MethodInvocation@@factory.setCreator(new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
) @TO@ ExpressionStatement@@MethodInvocation:factory.setCreator(new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
) @AT@ 3418 @LENGTH@ 361
------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.setCreator(new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
) @AT@ 3418 @LENGTH@ 7
------INS SimpleName@@MethodName:setCreator:[new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
] @TO@ MethodInvocation@@factory.setCreator(new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
) @AT@ 3426 @LENGTH@ 353
---------INS ClassInstanceCreation@@WebSocketCreator[] @TO@ SimpleName@@MethodName:setCreator:[new WebSocketCreator(){
  @Override public Object createWebSocket(  ServletUpgradeRequest req,  ServletUpgradeResponse resp){
    String protocolKey="default";
    WebSocketFactory factory=socketFactory.get(protocolKey);
    return factory.newInstance(req,protocolKey,sync,consumer);
  }
}
] @AT@ 3437 @LENGTH@ 341
------------INS New@@new @TO@ ClassInstanceCreation@@WebSocketCreator[] @AT@ 3437 @LENGTH@ 3
------------INS SimpleType@@WebSocketCreator @TO@ ClassInstanceCreation@@WebSocketCreator[] @AT@ 3441 @LENGTH@ 16
------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@WebSocketCreator[] @AT@ 3460 @LENGTH@ 318
---------------INS MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3486 @LENGTH@ 289
------------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3486 @LENGTH@ 6
------------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3493 @LENGTH@ 6
------------------INS SimpleName@@MethodName:createWebSocket @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3500 @LENGTH@ 15
------------------INS SingleVariableDeclaration@@ServletUpgradeRequest req @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3516 @LENGTH@ 25
---------------------INS SimpleType@@ServletUpgradeRequest @TO@ SingleVariableDeclaration@@ServletUpgradeRequest req @AT@ 3516 @LENGTH@ 21
---------------------INS SimpleName@@req @TO@ SingleVariableDeclaration@@ServletUpgradeRequest req @AT@ 3538 @LENGTH@ 3
------------------INS SingleVariableDeclaration@@ServletUpgradeResponse resp @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3543 @LENGTH@ 27
---------------------INS SimpleType@@ServletUpgradeResponse @TO@ SingleVariableDeclaration@@ServletUpgradeResponse resp @AT@ 3543 @LENGTH@ 22
---------------------INS SimpleName@@resp @TO@ SingleVariableDeclaration@@ServletUpgradeResponse resp @AT@ 3566 @LENGTH@ 4
------------------INS VariableDeclarationStatement@@String protocolKey="default"; @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3588 @LENGTH@ 31
---------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String protocolKey="default"; @AT@ 3588 @LENGTH@ 6
---------------------INS VariableDeclarationFragment@@protocolKey="default" @TO@ VariableDeclarationStatement@@String protocolKey="default"; @AT@ 3595 @LENGTH@ 23
------------------------INS SimpleName@@protocolKey @TO@ VariableDeclarationFragment@@protocolKey="default" @AT@ 3595 @LENGTH@ 11
------------------------INS StringLiteral@@"default" @TO@ VariableDeclarationFragment@@protocolKey="default" @AT@ 3609 @LENGTH@ 9
------------------INS VariableDeclarationStatement@@WebSocketFactory factory=socketFactory.get(protocolKey); @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3637 @LENGTH@ 58
---------------------INS SimpleType@@WebSocketFactory @TO@ VariableDeclarationStatement@@WebSocketFactory factory=socketFactory.get(protocolKey); @AT@ 3637 @LENGTH@ 16
---------------------INS VariableDeclarationFragment@@factory=socketFactory.get(protocolKey) @TO@ VariableDeclarationStatement@@WebSocketFactory factory=socketFactory.get(protocolKey); @AT@ 3654 @LENGTH@ 40
------------------------INS SimpleName@@factory @TO@ VariableDeclarationFragment@@factory=socketFactory.get(protocolKey) @AT@ 3654 @LENGTH@ 7
------------------------INS MethodInvocation@@socketFactory.get(protocolKey) @TO@ VariableDeclarationFragment@@factory=socketFactory.get(protocolKey) @AT@ 3664 @LENGTH@ 30
---------------------------INS SimpleName@@Name:socketFactory @TO@ MethodInvocation@@socketFactory.get(protocolKey) @AT@ 3664 @LENGTH@ 13
---------------------------INS SimpleName@@MethodName:get:[protocolKey] @TO@ MethodInvocation@@socketFactory.get(protocolKey) @AT@ 3678 @LENGTH@ 16
------------------------------INS SimpleName@@protocolKey @TO@ SimpleName@@MethodName:get:[protocolKey] @AT@ 3682 @LENGTH@ 11
------------------INS ReturnStatement@@MethodInvocation:factory.newInstance(req,protocolKey,sync,consumer) @TO@ MethodDeclaration@@public, Object, MethodName:createWebSocket, ServletUpgradeRequest req, ServletUpgradeResponse resp,  @AT@ 3705 @LENGTH@ 61
---------------------INS MethodInvocation@@factory.newInstance(req,protocolKey,sync,consumer) @TO@ ReturnStatement@@MethodInvocation:factory.newInstance(req,protocolKey,sync,consumer) @AT@ 3712 @LENGTH@ 53
------------------------INS SimpleName@@Name:factory @TO@ MethodInvocation@@factory.newInstance(req,protocolKey,sync,consumer) @AT@ 3712 @LENGTH@ 7
------------------------INS SimpleName@@MethodName:newInstance:[req, protocolKey, sync, consumer] @TO@ MethodInvocation@@factory.newInstance(req,protocolKey,sync,consumer) @AT@ 3720 @LENGTH@ 45
---------------------------INS SimpleName@@req @TO@ SimpleName@@MethodName:newInstance:[req, protocolKey, sync, consumer] @AT@ 3732 @LENGTH@ 3
---------------------------INS SimpleName@@protocolKey @TO@ SimpleName@@MethodName:newInstance:[req, protocolKey, sync, consumer] @AT@ 3737 @LENGTH@ 11
---------------------------INS SimpleName@@sync @TO@ SimpleName@@MethodName:newInstance:[req, protocolKey, sync, consumer] @AT@ 3750 @LENGTH@ 4
---------------------------INS SimpleName@@consumer @TO@ SimpleName@@MethodName:newInstance:[req, protocolKey, sync, consumer] @AT@ 3756 @LENGTH@ 8


INS TryStatement@@try {  if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {    MetricsFactory.init(hiveConf);  }} catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @TO@ MethodDeclaration@@public, synchronized, void, MethodName:init, HiveConf hiveConf,  @AT@ 4253 @LENGTH@ 261
---INS CatchClause@@catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @TO@ TryStatement@@try {  if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {    MetricsFactory.init(hiveConf);  }} catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @AT@ 4384 @LENGTH@ 130
------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @AT@ 4391 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 4391 @LENGTH@ 9
---------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 4401 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t) @TO@ CatchClause@@catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @AT@ 4412 @LENGTH@ 96
---------INS MethodInvocation@@LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t) @AT@ 4412 @LENGTH@ 95
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t) @AT@ 4412 @LENGTH@ 3
------------INS SimpleName@@MethodName:warn:["Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.", t] @TO@ MethodInvocation@@LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t) @AT@ 4416 @LENGTH@ 91
---------------INS StringLiteral@@"Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported." @TO@ SimpleName@@MethodName:warn:["Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.", t] @AT@ 4421 @LENGTH@ 82
---------------INS SimpleName@@t @TO@ SimpleName@@MethodName:warn:["Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.", t] @AT@ 4505 @LENGTH@ 1
---MOV IfStatement@@if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {  MetricsFactory.init(hiveConf);} @TO@ TryStatement@@try {  if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {    MetricsFactory.init(hiveConf);  }} catch (Throwable t) {  LOG.warn("Could not initiate the HiveServer2 Metrics system.  Metrics may not be reported.",t);} @AT@ 20936 @LENGTH@ 116


UPD FieldDeclaration@@private, static, final, ConnectionResource, [connectionResource=new ConnectionFactoryResource(2,connectionFactory)] @TO@ private, final, ConnectionResource, [connectionResource=new ConnectionFactoryResource(2,connectionFactory)] @AT@ 1597 @LENGTH@ 113
---DEL Modifier@@static @AT@ 1605 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:NatsConsumingTask, Connection connection, NatsConfiguration configuration,  @TO@ voidMethodName:NatsConsumingTask, Connection connection, NatsConfiguration configuration,  @AT@ 3664 @LENGTH@ 182
---DEL Modifier@@public @AT@ 3664 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 3915 @LENGTH@ 37
---INS MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @AT@ 3915 @LENGTH@ 36
------INS SimpleName@@Name:websocketComponent @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3915 @LENGTH@ 18
------INS SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodInvocation@@websocketComponent.setMaxThreads(11) @AT@ 3934 @LENGTH@ 17
---------INS NumberLiteral@@11 @TO@ SimpleName@@MethodName:setMaxThreads:[11] @AT@ 3948 @LENGTH@ 2


UPD ExpressionStatement@@MethodInvocation:assertTrue("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas,gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)) @TO@ MethodInvocation:assertThat(gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas).isTrue() @AT@ 2611 @LENGTH@ 210
---UPD MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas,gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)) @TO@ assertThat(gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)).withFailMessage("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas).isTrue() @AT@ 2611 @LENGTH@ 209
------INS MethodInvocation@@MethodName:assertThat:[gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)] @TO@ MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas,gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)) @AT@ 2611 @LENGTH@ 94
---------MOV InfixExpression@@gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas) @TO@ MethodInvocation@@MethodName:assertThat:[gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)] @AT@ 2737 @LENGTH@ 82
------UPD SimpleName@@MethodName:assertTrue:["GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas, gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)] @TO@ MethodName:isTrue:[] @AT@ 2611 @LENGTH@ 209
------INS MethodInvocation@@MethodName:withFailMessage:["GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas] @TO@ MethodInvocation@@assertTrue("GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas,gas.containsAll(ud.getAuthorities()) && ud.getAuthorities().containsAll(gas)) @AT@ 2611 @LENGTH@ 209
---------MOV InfixExpression@@"GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas @TO@ MethodInvocation@@MethodName:withFailMessage:["GrantedAuthority collections do not match; result: " + ud.getAuthorities() + ", expected: "+ gas] @AT@ 2627 @LENGTH@ 104


UPD MethodDeclaration@@public, voidMethodName:EncodingFileReader, FileInputStream in, String charset, FileNotFoundException, UnsupportedEncodingException,  @TO@ voidMethodName:EncodingFileReader, FileInputStream in, String charset, FileNotFoundException, UnsupportedEncodingException,  @AT@ 16746 @LENGTH@ 202
---DEL Modifier@@public @AT@ 16746 @LENGTH@ 6


MOV FieldDeclaration@@private, static, final, String, [DEFAULT_JOB_LAUNCHER_REF_NAME="jobLauncher"] @TO@ TypeDeclaration@@[public]SpringBatchComponent, UriEndpointComponent @AT@ 1091 @LENGTH@ 74


UPD VariableDeclarationStatement@@String[] lines=written.split("\n"); @TO@ String[] lines=written.split("(\\r)?(\\n)"); @AT@ 1570 @LENGTH@ 37
---UPD VariableDeclarationFragment@@lines=written.split("\n") @TO@ lines=written.split("(\\r)?(\\n)") @AT@ 1579 @LENGTH@ 27
------UPD MethodInvocation@@written.split("\n") @TO@ written.split("(\\r)?(\\n)") @AT@ 1587 @LENGTH@ 19
---------UPD SimpleName@@MethodName:split:["\n"] @TO@ MethodName:split:["(\\r)?(\\n)"] @AT@ 1595 @LENGTH@ 11
------------UPD StringLiteral@@"\n" @TO@ "(\\r)?(\\n)" @AT@ 1601 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:SubmitOrderFutureTask, long id, Callable<V> voidCallable,  @TO@ voidMethodName:SubmitOrderFutureTask, long id, Callable<V> voidCallable,  @AT@ 2381 @LENGTH@ 134
---DEL Modifier@@public @AT@ 2381 @LENGTH@ 6


UPD TypeDeclaration@@[public]SecurityContextImplTests, TestCase @TO@ [public]SecurityContextImplTests,  @AT@ 993 @LENGTH@ 980
---DEL SimpleType@@TestCase @AT@ 1039 @LENGTH@ 8


UPD TypeDeclaration@@[public]NullRememberMeServicesTests, TestCase @TO@ [public]NullRememberMeServicesTests,  @AT@ 925 @LENGTH@ 426
---DEL SimpleType@@TestCase @AT@ 974 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:outBuffer=ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ Assignment:outBuffer=ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3699 @LENGTH@ 121
---UPD Assignment@@outBuffer=ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ outBuffer=ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3699 @LENGTH@ 120
------UPD MethodInvocation@@ByteBuffer.allocateDirect(this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()) @TO@ ByteBuffer.allocateDirect(this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()) @AT@ 3711 @LENGTH@ 108
---------UPD SimpleName@@MethodName:allocateDirect:[this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize()] @TO@ MethodName:allocateDirect:[this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize()] @AT@ 3722 @LENGTH@ 97
------------UPD InfixExpression@@this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize() @TO@ this.bufferSize + cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3737 @LENGTH@ 81
---------------DEL InfixExpression@@2 * cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3764 @LENGTH@ 54
------------------DEL NumberLiteral@@2 @AT@ 3764 @LENGTH@ 1
------------------DEL Operator@@* @AT@ 3765 @LENGTH@ 1
---------------MOV MethodInvocation@@cipher.getTransformation().getAlgorithmBlockSize() @TO@ InfixExpression@@this.bufferSize + 2 * cipher.getTransformation().getAlgorithmBlockSize() @AT@ 3768 @LENGTH@ 50


UPD ExpressionStatement@@MethodInvocation:assertEquals("Get a wrong endpoint uri of http2","http4://www.google.com?proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345&test=parameter",URISupport.normalizeUri(http2.getEndpointUri())) @TO@ MethodInvocation:assertEquals("Get a wrong endpoint uri of http2","http4://www.google.com?proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345&test=parameter",URISupport.normalizeUri(http2.getEndpointUri())) @AT@ 4444 @LENGTH@ 194
---UPD MethodInvocation@@assertEquals("Get a wrong endpoint uri of http2","http4://www.google.com?proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345&test=parameter",URISupport.normalizeUri(http2.getEndpointUri())) @TO@ assertEquals("Get a wrong endpoint uri of http2","http4://www.google.com?proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345&test=parameter",URISupport.normalizeUri(http2.getEndpointUri())) @AT@ 4444 @LENGTH@ 193
------UPD SimpleName@@MethodName:assertEquals:["Get a wrong endpoint uri of http2", "http4://www.google.com?proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345&test=parameter", URISupport.normalizeUri(http2.getEndpointUri())] @TO@ MethodName:assertEquals:["Get a wrong endpoint uri of http2", "http4://www.google.com?proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345&test=parameter", URISupport.normalizeUri(http2.getEndpointUri())] @AT@ 4444 @LENGTH@ 193
---------UPD StringLiteral@@"http4://www.google.com?proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345&test=parameter" @TO@ "http4://www.google.com?proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345&test=parameter" @AT@ 4494 @LENGTH@ 93


UPD ExpressionStatement@@Assignment:enc=Cipher.getInstance(props,transformation) @TO@ Assignment:enc=CipherFactory.getInstance(props,transformation) @AT@ 3184 @LENGTH@ 48
---UPD Assignment@@enc=Cipher.getInstance(props,transformation) @TO@ enc=CipherFactory.getInstance(props,transformation) @AT@ 3184 @LENGTH@ 47
------UPD MethodInvocation@@Cipher.getInstance(props,transformation) @TO@ CipherFactory.getInstance(props,transformation) @AT@ 3190 @LENGTH@ 41
---------UPD SimpleName@@Name:Cipher @TO@ Name:CipherFactory @AT@ 3190 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertThat("/switchfailed").isEqualTo(FieldUtils.getFieldValue(filter,"switchFailureUrl")) @TO@ MethodInvocation:assertThat(FieldUtils.getFieldValue(filter,"switchFailureUrl")).isEqualTo("/switchfailed") @AT@ 7359 @LENGTH@ 97
---UPD MethodInvocation@@assertThat("/switchfailed").isEqualTo(FieldUtils.getFieldValue(filter,"switchFailureUrl")) @TO@ MethodName:assertThat:[FieldUtils.getFieldValue(filter,"switchFailureUrl")] @AT@ 7359 @LENGTH@ 96
---INS MethodInvocation@@assertThat(FieldUtils.getFieldValue(filter,"switchFailureUrl")).isEqualTo("/switchfailed") @TO@ ExpressionStatement@@MethodInvocation:assertThat("/switchfailed").isEqualTo(FieldUtils.getFieldValue(filter,"switchFailureUrl")) @AT@ 7359 @LENGTH@ 91
------MOV MethodInvocation@@assertThat("/switchfailed").isEqualTo(FieldUtils.getFieldValue(filter,"switchFailureUrl")) @TO@ MethodInvocation@@assertThat(FieldUtils.getFieldValue(filter,"switchFailureUrl")).isEqualTo("/switchfailed") @AT@ 7359 @LENGTH@ 96
---------DEL MethodInvocation@@MethodName:assertThat:["/switchfailed"] @AT@ 7359 @LENGTH@ 27
------------DEL StringLiteral@@"/switchfailed" @AT@ 7370 @LENGTH@ 15
---------DEL SimpleName@@MethodName:isEqualTo:[FieldUtils.getFieldValue(filter,"switchFailureUrl")] @AT@ 7387 @LENGTH@ 68
---------MOV MethodInvocation@@FieldUtils.getFieldValue(filter,"switchFailureUrl") @TO@ MethodInvocation@@assertThat("/switchfailed").isEqualTo(FieldUtils.getFieldValue(filter,"switchFailureUrl")) @AT@ 7402 @LENGTH@ 52
------INS SimpleName@@MethodName:isEqualTo:["/switchfailed"] @TO@ MethodInvocation@@assertThat(FieldUtils.getFieldValue(filter,"switchFailureUrl")).isEqualTo("/switchfailed") @AT@ 7424 @LENGTH@ 26
---------INS StringLiteral@@"/switchfailed" @TO@ SimpleName@@MethodName:isEqualTo:["/switchfailed"] @AT@ 7434 @LENGTH@ 15


UPD EnumDeclaration@@[private, static]MONTHS,  @TO@ [private]MONTHS,  @AT@ 1329 @LENGTH@ 101
---DEL Modifier@@static @AT@ 1337 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:EventRecord, QuickfixjEventCategory eventCategory, SessionID sessionID, Message message,  @TO@ voidMethodName:EventRecord, QuickfixjEventCategory eventCategory, SessionID sessionID, Message message,  @AT@ 24287 @LENGTH@ 230
---DEL Modifier@@public @AT@ 24287 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:StartConsumerCallable, long connectionRetryInterval,  @TO@ voidMethodName:StartConsumerCallable, long connectionRetryInterval,  @AT@ 6019 @LENGTH@ 138
---DEL Modifier@@public @AT@ 6019 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:verify(logger).info(captor.capture()) @TO@ MethodInvocation:verify(logger,atLeastOnce()).info(captor.capture()) @AT@ 12499 @LENGTH@ 38
---UPD MethodInvocation@@verify(logger).info(captor.capture()) @TO@ verify(logger,atLeastOnce()).info(captor.capture()) @AT@ 12499 @LENGTH@ 37
------UPD MethodInvocation@@MethodName:verify:[logger] @TO@ MethodName:verify:[logger, atLeastOnce()] @AT@ 12499 @LENGTH@ 14
---------INS MethodInvocation@@MethodName:atLeastOnce:[] @TO@ MethodInvocation@@MethodName:verify:[logger] @AT@ 12561 @LENGTH@ 13


INS ExpressionStatement@@MethodInvocation:mappingContext.getPersistentEntity(Person.class) @TO@ MethodDeclaration@@public, void, MethodName:shouldValidateLastName, Exception,  @AT@ 2793 @LENGTH@ 49
---INS MethodInvocation@@mappingContext.getPersistentEntity(Person.class) @TO@ ExpressionStatement@@MethodInvocation:mappingContext.getPersistentEntity(Person.class) @AT@ 2793 @LENGTH@ 48
------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.getPersistentEntity(Person.class) @AT@ 2793 @LENGTH@ 14
------INS SimpleName@@MethodName:getPersistentEntity:[Person.class] @TO@ MethodInvocation@@mappingContext.getPersistentEntity(Person.class) @AT@ 2808 @LENGTH@ 33
---------INS TypeLiteral@@Person.class @TO@ SimpleName@@MethodName:getPersistentEntity:[Person.class] @AT@ 2828 @LENGTH@ 12


UPD ExpressionStatement@@Assignment:executor=getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(configuration.getPath(),"Camel-Zookeeper Ops executor",1) @TO@ Assignment:executor=getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(this,"Camel-Zookeeper OperationsExecutor",1) @AT@ 2937 @LENGTH@ 150
---UPD Assignment@@executor=getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(configuration.getPath(),"Camel-Zookeeper Ops executor",1) @TO@ executor=getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(this,"Camel-Zookeeper OperationsExecutor",1) @AT@ 2937 @LENGTH@ 149
------UPD MethodInvocation@@getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(configuration.getPath(),"Camel-Zookeeper Ops executor",1) @TO@ getEndpoint().getCamelContext().getExecutorServiceManager().newFixedThreadPool(this,"Camel-Zookeeper OperationsExecutor",1) @AT@ 2948 @LENGTH@ 138
---------UPD SimpleName@@MethodName:newFixedThreadPool:[configuration.getPath(), "Camel-Zookeeper Ops executor", 1] @TO@ MethodName:newFixedThreadPool:[this, "Camel-Zookeeper OperationsExecutor", 1] @AT@ 3008 @LENGTH@ 78
------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:newFixedThreadPool:[configuration.getPath(), "Camel-Zookeeper Ops executor", 1] @AT@ 3026 @LENGTH@ 4
------------DEL MethodInvocation@@configuration.getPath() @AT@ 3027 @LENGTH@ 23
---------------DEL SimpleName@@Name:configuration @AT@ 3027 @LENGTH@ 13
---------------DEL SimpleName@@MethodName:getPath:[] @AT@ 3041 @LENGTH@ 9
------------UPD StringLiteral@@"Camel-Zookeeper Ops executor" @TO@ "Camel-Zookeeper OperationsExecutor" @AT@ 3052 @LENGTH@ 30


INS IfStatement@@if (val == null) {  return null;} @TO@ MethodDeclaration@@public, static, String, MethodName:getPaddedValue, String val, int maxLength,  @AT@ 1914 @LENGTH@ 43
---INS InfixExpression@@val == null @TO@ IfStatement@@if (val == null) {  return null;} @AT@ 1918 @LENGTH@ 11
------INS SimpleName@@val @TO@ InfixExpression@@val == null @AT@ 1918 @LENGTH@ 3
------INS Operator@@== @TO@ InfixExpression@@val == null @AT@ 1921 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@val == null @AT@ 1925 @LENGTH@ 4
---INS Block@@ThenBody:{  return null;} @TO@ IfStatement@@if (val == null) {  return null;} @AT@ 1931 @LENGTH@ 26
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:{  return null;} @AT@ 1939 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1946 @LENGTH@ 4


UPD Block@@WhileBody:{  readRegisteredServer=readRegisteredServer || read.contains("Registering server");  readRegisteredSlave=readRegisteredSlave || read.contains("Registered remote slave host");  readExpected=readExpected || read.contains(expected);} @TO@ WhileBody:{  readRegisteredServer=readRegisteredServer || read.contains("WFLYHC0020");  readRegisteredSlave=readRegisteredSlave || read.contains("WFLYHC0019");  readExpected=readExpected || read.contains(expected);} @AT@ 22528 @LENGTH@ 279
---UPD ExpressionStatement@@Assignment:readRegisteredServer=readRegisteredServer || read.contains("Registering server") @TO@ Assignment:readRegisteredServer=readRegisteredServer || read.contains("WFLYHC0020") @AT@ 22542 @LENGTH@ 83
------UPD Assignment@@readRegisteredServer=readRegisteredServer || read.contains("Registering server") @TO@ readRegisteredServer=readRegisteredServer || read.contains("WFLYHC0020") @AT@ 22542 @LENGTH@ 82
---------UPD InfixExpression@@readRegisteredServer || read.contains("Registering server") @TO@ readRegisteredServer || read.contains("WFLYHC0020") @AT@ 22565 @LENGTH@ 59
------------UPD MethodInvocation@@read.contains("Registering server") @TO@ read.contains("WFLYHC0020") @AT@ 22589 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:contains:["Registering server"] @TO@ MethodName:contains:["WFLYHC0020"] @AT@ 22594 @LENGTH@ 30
------------------UPD StringLiteral@@"Registering server" @TO@ "WFLYHC0020" @AT@ 22603 @LENGTH@ 20
---UPD ExpressionStatement@@Assignment:readRegisteredSlave=readRegisteredSlave || read.contains("Registered remote slave host") @TO@ Assignment:readRegisteredSlave=readRegisteredSlave || read.contains("WFLYHC0019") @AT@ 22638 @LENGTH@ 91
------UPD Assignment@@readRegisteredSlave=readRegisteredSlave || read.contains("Registered remote slave host") @TO@ readRegisteredSlave=readRegisteredSlave || read.contains("WFLYHC0019") @AT@ 22638 @LENGTH@ 90
---------UPD InfixExpression@@readRegisteredSlave || read.contains("Registered remote slave host") @TO@ readRegisteredSlave || read.contains("WFLYHC0019") @AT@ 22660 @LENGTH@ 68
------------UPD MethodInvocation@@read.contains("Registered remote slave host") @TO@ read.contains("WFLYHC0019") @AT@ 22683 @LENGTH@ 45
---------------UPD SimpleName@@MethodName:contains:["Registered remote slave host"] @TO@ MethodName:contains:["WFLYHC0019"] @AT@ 22688 @LENGTH@ 40
------------------UPD StringLiteral@@"Registered remote slave host" @TO@ "WFLYHC0019" @AT@ 22697 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:log.trace("Usage of continuation is disabled, either by component or endpoint configuration, fall back to normal servlet processing instead") @TO@ MethodInvocation:log.trace("Usage of continuation is disabled, either by component or endpoint configuration, fallback to normal servlet processing instead") @AT@ 4084 @LENGTH@ 142
---UPD MethodInvocation@@log.trace("Usage of continuation is disabled, either by component or endpoint configuration, fall back to normal servlet processing instead") @TO@ log.trace("Usage of continuation is disabled, either by component or endpoint configuration, fallback to normal servlet processing instead") @AT@ 4084 @LENGTH@ 141
------UPD SimpleName@@MethodName:trace:["Usage of continuation is disabled, either by component or endpoint configuration, fall back to normal servlet processing instead"] @TO@ MethodName:trace:["Usage of continuation is disabled, either by component or endpoint configuration, fallback to normal servlet processing instead"] @AT@ 4088 @LENGTH@ 137
---------UPD StringLiteral@@"Usage of continuation is disabled, either by component or endpoint configuration, fall back to normal servlet processing instead" @TO@ "Usage of continuation is disabled, either by component or endpoint configuration, fallback to normal servlet processing instead" @AT@ 4094 @LENGTH@ 130


UPD MethodDeclaration@@public, voidMethodName:MyConsumer, Endpoint endpoint, Processor processor,  @TO@ voidMethodName:MyConsumer, Endpoint endpoint, Processor processor,  @AT@ 5281 @LENGTH@ 109
---DEL Modifier@@public @AT@ 5281 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint,  @TO@ voidMethodName:MyProducer, Endpoint endpoint,  @AT@ 2208 @LENGTH@ 77
---DEL Modifier@@public @AT@ 2208 @LENGTH@ 6


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(SalesforceSecurityHandler.class)] @TO@ TypeDeclaration@@[public]SalesforceSecurityHandler, [ProtocolHandler] @AT@ 1776 @LENGTH@ 91


UPD MethodDeclaration@@public, voidMethodName:MappingProcessor, Object obj,  @TO@ voidMethodName:MappingProcessor, Object obj,  @AT@ 4250 @LENGTH@ 115
---DEL Modifier@@public @AT@ 4250 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint,  @TO@ voidMethodName:MyProducer, Endpoint endpoint,  @AT@ 4804 @LENGTH@ 77
---DEL Modifier@@public @AT@ 4804 @LENGTH@ 6


UPD MethodDeclaration@@static, DataReader, MethodName:createDefaultDataReader, FileSystem fs, Path path, boolean useZeroCopy, CompressionCodec codec,  @TO@ static, DataReader, MethodName:createDefaultDataReader, DataReaderProperties properties,  @AT@ 3589 @LENGTH@ 189
---UPD SingleVariableDeclaration@@FileSystem fs @TO@ DataReaderProperties properties @AT@ 3638 @LENGTH@ 13
------UPD SimpleType@@FileSystem @TO@ DataReaderProperties @AT@ 3638 @LENGTH@ 10
------UPD SimpleName@@fs @TO@ properties @AT@ 3649 @LENGTH@ 2
---DEL SingleVariableDeclaration@@Path path @AT@ 3653 @LENGTH@ 9
------DEL SimpleType@@Path @AT@ 3653 @LENGTH@ 4
------DEL SimpleName@@path @AT@ 3658 @LENGTH@ 4
---DEL SingleVariableDeclaration@@boolean useZeroCopy @AT@ 3664 @LENGTH@ 19
------DEL PrimitiveType@@boolean @AT@ 3664 @LENGTH@ 7
------DEL SimpleName@@useZeroCopy @AT@ 3672 @LENGTH@ 11
---DEL SingleVariableDeclaration@@CompressionCodec codec @AT@ 3685 @LENGTH@ 22
------DEL SimpleType@@CompressionCodec @AT@ 3685 @LENGTH@ 16
------DEL SimpleName@@codec @AT@ 3702 @LENGTH@ 5
---UPD ReturnStatement@@ClassInstanceCreation:new DefaultDataReader(fs,path,useZeroCopy,codec) @TO@ ClassInstanceCreation:new DefaultDataReader(properties) @AT@ 3715 @LENGTH@ 59
------UPD ClassInstanceCreation@@DefaultDataReader[fs, path, useZeroCopy, codec] @TO@ DefaultDataReader[properties] @AT@ 3722 @LENGTH@ 51
---------UPD SimpleName@@fs @TO@ properties @AT@ 3744 @LENGTH@ 2
---------DEL SimpleName@@path @AT@ 3748 @LENGTH@ 4
---------DEL SimpleName@@useZeroCopy @AT@ 3754 @LENGTH@ 11
---------DEL SimpleName@@codec @AT@ 3767 @LENGTH@ 5


UPD VariableDeclarationStatement@@List<String> jars=content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()); @TO@ List<String> jars=content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()); @AT@ 7887 @LENGTH@ 129
---UPD VariableDeclarationFragment@@jars=content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @TO@ jars=content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @AT@ 7900 @LENGTH@ 115
------UPD MethodInvocation@@content.keySet().stream().map((e) -> e.get()).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @TO@ content.keySet().stream().map(ArchivePath::get).filter((e) -> e.endsWith(".jar")).collect(Collectors.toList()) @AT@ 7907 @LENGTH@ 108
---------UPD MethodInvocation@@MethodName:map:[(e) -> e.get()] @TO@ MethodName:map:[ArchivePath::get] @AT@ 7907 @LENGTH@ 45
------------DEL LambdaExpression@@(e) -> e.get() @AT@ 7937 @LENGTH@ 14
---------------DEL VariableDeclarationFragment@@e @AT@ 7938 @LENGTH@ 1
------------------DEL SimpleName@@e @AT@ 7938 @LENGTH@ 1
---------------DEL MethodInvocation@@e.get() @AT@ 7944 @LENGTH@ 7
------------------DEL SimpleName@@Name:e @AT@ 7944 @LENGTH@ 1
------------------DEL SimpleName@@MethodName:get:[] @AT@ 7946 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />",value) @TO@ MethodInvocation:assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />") @AT@ 710 @LENGTH@ 240
---UPD MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />",value) @TO@ assertThat(value).withFailMessage("The output is not correct.").isEqualTo("<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />") @AT@ 710 @LENGTH@ 239
------INS MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />",value) @AT@ 710 @LENGTH@ 63
---------INS StringLiteral@@"The output is not correct." @TO@ MethodInvocation@@MethodName:withFailMessage:["The output is not correct."] @AT@ 744 @LENGTH@ 28
------INS MethodInvocation@@MethodName:assertThat:[value] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />",value) @AT@ 710 @LENGTH@ 17
---------INS SimpleName@@value @TO@ MethodInvocation@@MethodName:assertThat:[value] @AT@ 721 @LENGTH@ 5
------DEL SimpleName@@MethodName:assertEquals:["The output is not correct.", "<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />", value] @AT@ 710 @LENGTH@ 239
---------DEL StringLiteral@@"The output is not correct." @AT@ 723 @LENGTH@ 28
---------DEL SimpleName@@value @AT@ 943 @LENGTH@ 5
------INS SimpleName@@MethodName:isEqualTo:["<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />"] @TO@ MethodInvocation@@assertEquals("The output is not correct.","<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />",value) @AT@ 774 @LENGTH@ 191
---------MOV InfixExpression@@"<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />" @TO@ SimpleName@@MethodName:isEqualTo:["<meta name=\"_csrf_parameter\" content=\"_csrf\" />" + "<meta name=\"_csrf_header\" content=\"X-Csrf-Token\" />" + "<meta name=\"_csrf\" content=\"abc123def456ghi789\" />"] @AT@ 757 @LENGTH@ 184


UPD ExpressionStatement@@Assignment:useContinuation=epUseContinuation.booleanValue() @TO@ Assignment:useContinuation=epUseContinuation @AT@ 3469 @LENGTH@ 51
---UPD Assignment@@useContinuation=epUseContinuation.booleanValue() @TO@ useContinuation=epUseContinuation @AT@ 3469 @LENGTH@ 50
------DEL MethodInvocation@@epUseContinuation.booleanValue() @AT@ 3487 @LENGTH@ 32
---------DEL SimpleName@@Name:epUseContinuation @AT@ 3487 @LENGTH@ 17
---------DEL SimpleName@@MethodName:booleanValue:[] @AT@ 3505 @LENGTH@ 14
------INS SimpleName@@epUseContinuation @TO@ Assignment@@useContinuation=epUseContinuation.booleanValue() @AT@ 3561 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), public, abstract]AbstractPersonRepositoryIntegrationTests,  @AT@ 35554 @LENGTH@ 249
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35554 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35561 @LENGTH@ 4
---INS SimpleName@@MethodName:findsPersonsByFirstnameNotContains @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35566 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35610 @LENGTH@ 9
---INS VariableDeclarationStatement@@List<Person> result=repository.findByFirstnameNotContains("Boyd"); @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35625 @LENGTH@ 68
------INS ParameterizedType@@List<Person> @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByFirstnameNotContains("Boyd"); @AT@ 35625 @LENGTH@ 12
---------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 35625 @LENGTH@ 4
---------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 35630 @LENGTH@ 6
------INS VariableDeclarationFragment@@result=repository.findByFirstnameNotContains("Boyd") @TO@ VariableDeclarationStatement@@List<Person> result=repository.findByFirstnameNotContains("Boyd"); @AT@ 35638 @LENGTH@ 54
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=repository.findByFirstnameNotContains("Boyd") @AT@ 35638 @LENGTH@ 6
---------INS MethodInvocation@@repository.findByFirstnameNotContains("Boyd") @TO@ VariableDeclarationFragment@@result=repository.findByFirstnameNotContains("Boyd") @AT@ 35647 @LENGTH@ 45
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findByFirstnameNotContains("Boyd") @AT@ 35647 @LENGTH@ 10
------------INS SimpleName@@MethodName:findByFirstnameNotContains:["Boyd"] @TO@ MethodInvocation@@repository.findByFirstnameNotContains("Boyd") @AT@ 35658 @LENGTH@ 34
---------------INS StringLiteral@@"Boyd" @TO@ SimpleName@@MethodName:findByFirstnameNotContains:["Boyd"] @AT@ 35685 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(result.size(),is((int)(repository.count() - 1))) @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35696 @LENGTH@ 62
------INS MethodInvocation@@assertThat(result.size(),is((int)(repository.count() - 1))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.size(),is((int)(repository.count() - 1))) @AT@ 35696 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertThat:[result.size(), is((int)(repository.count() - 1))] @TO@ MethodInvocation@@assertThat(result.size(),is((int)(repository.count() - 1))) @AT@ 35696 @LENGTH@ 61
------------INS MethodInvocation@@result.size() @TO@ SimpleName@@MethodName:assertThat:[result.size(), is((int)(repository.count() - 1))] @AT@ 35707 @LENGTH@ 13
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.size() @AT@ 35707 @LENGTH@ 6
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@result.size() @AT@ 35714 @LENGTH@ 6
------------INS MethodInvocation@@is((int)(repository.count() - 1)) @TO@ SimpleName@@MethodName:assertThat:[result.size(), is((int)(repository.count() - 1))] @AT@ 35722 @LENGTH@ 34
---------------INS SimpleName@@MethodName:is:[(int)(repository.count() - 1)] @TO@ MethodInvocation@@is((int)(repository.count() - 1)) @AT@ 35722 @LENGTH@ 34
------------------INS CastExpression@@(int)(repository.count() - 1) @TO@ SimpleName@@MethodName:is:[(int)(repository.count() - 1)] @AT@ 35725 @LENGTH@ 30
---------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)(repository.count() - 1) @AT@ 35726 @LENGTH@ 3
---------------------INS ParenthesizedExpression@@(repository.count() - 1) @TO@ CastExpression@@(int)(repository.count() - 1) @AT@ 35731 @LENGTH@ 24
------------------------INS InfixExpression@@repository.count() - 1 @TO@ ParenthesizedExpression@@(repository.count() - 1) @AT@ 35732 @LENGTH@ 22
---------------------------INS MethodInvocation@@repository.count() @TO@ InfixExpression@@repository.count() - 1 @AT@ 35732 @LENGTH@ 18
------------------------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.count() @AT@ 35732 @LENGTH@ 10
------------------------------INS SimpleName@@MethodName:count:[] @TO@ MethodInvocation@@repository.count() @AT@ 35743 @LENGTH@ 7
---------------------------INS Operator@@- @TO@ InfixExpression@@repository.count() - 1 @AT@ 35750 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@repository.count() - 1 @AT@ 35753 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[(int)(repository.count() - 1)] @TO@ MethodInvocation@@is((int)(repository.count() - 1)) @AT@ 35722 @LENGTH@ 34
------------------INS CastExpression@@(int)(repository.count() - 1) @TO@ SimpleName@@MethodName:is:[(int)(repository.count() - 1)] @AT@ 35725 @LENGTH@ 30
---------------------INS PrimitiveType@@int @TO@ CastExpression@@(int)(repository.count() - 1) @AT@ 35726 @LENGTH@ 3
---------------------INS ParenthesizedExpression@@(repository.count() - 1) @TO@ CastExpression@@(int)(repository.count() - 1) @AT@ 35731 @LENGTH@ 24
------------------------INS InfixExpression@@repository.count() - 1 @TO@ ParenthesizedExpression@@(repository.count() - 1) @AT@ 35732 @LENGTH@ 22
---------------------------INS MethodInvocation@@repository.count() @TO@ InfixExpression@@repository.count() - 1 @AT@ 35732 @LENGTH@ 18
------------------------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.count() @AT@ 35732 @LENGTH@ 10
------------------------------INS SimpleName@@MethodName:count:[] @TO@ MethodInvocation@@repository.count() @AT@ 35743 @LENGTH@ 7
---------------------------INS Operator@@- @TO@ InfixExpression@@repository.count() - 1 @AT@ 35750 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@repository.count() - 1 @AT@ 35753 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:assertThat(result,not(hasItem(boyd))) @TO@ MethodDeclaration@@public, void, MethodName:findsPersonsByFirstnameNotContains, Exception,  @AT@ 35761 @LENGTH@ 39
------INS MethodInvocation@@assertThat(result,not(hasItem(boyd))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result,not(hasItem(boyd))) @AT@ 35761 @LENGTH@ 38
---------INS SimpleName@@MethodName:assertThat:[result, not(hasItem(boyd))] @TO@ MethodInvocation@@assertThat(result,not(hasItem(boyd))) @AT@ 35761 @LENGTH@ 38
------------INS SimpleName@@result @TO@ SimpleName@@MethodName:assertThat:[result, not(hasItem(boyd))] @AT@ 35772 @LENGTH@ 6
------------INS MethodInvocation@@not(hasItem(boyd)) @TO@ SimpleName@@MethodName:assertThat:[result, not(hasItem(boyd))] @AT@ 35780 @LENGTH@ 18
---------------INS SimpleName@@MethodName:not:[hasItem(boyd)] @TO@ MethodInvocation@@not(hasItem(boyd)) @AT@ 35780 @LENGTH@ 18
------------------INS MethodInvocation@@hasItem(boyd) @TO@ SimpleName@@MethodName:not:[hasItem(boyd)] @AT@ 35784 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------INS SimpleName@@MethodName:not:[hasItem(boyd)] @TO@ MethodInvocation@@not(hasItem(boyd)) @AT@ 35780 @LENGTH@ 18
------------------INS MethodInvocation@@hasItem(boyd) @TO@ SimpleName@@MethodName:not:[hasItem(boyd)] @AT@ 35784 @LENGTH@ 13
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:hasItem:[boyd] @TO@ MethodInvocation@@hasItem(boyd) @AT@ 35784 @LENGTH@ 13
------------------------INS SimpleName@@boyd @TO@ SimpleName@@MethodName:hasItem:[boyd] @AT@ 35792 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))) @TO@ MethodInvocation:assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))).isTrue() @AT@ 1896 @LENGTH@ 99
---UPD MethodInvocation@@assertTrue(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))) @TO@ MethodName:assertThat:[template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))] @AT@ 1896 @LENGTH@ 98
---INS MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))) @AT@ 1896 @LENGTH@ 107
------MOV MethodInvocation@@assertTrue(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))) @TO@ MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))).isTrue() @AT@ 1896 @LENGTH@ 98
---------MOV MethodInvocation@@template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword")) @TO@ MethodInvocation@@assertTrue(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))) @AT@ 1907 @LENGTH@ 86
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(template.compare("uid=bob,ou=people","userPassword",Utf8.encode("bobspassword"))).isTrue() @AT@ 1995 @LENGTH@ 8


UPD IfStatement@@if (IS_IBM) {  options.put("noAddress","true");  options.put("credsType","acceptor");  entries[0]=new AppConfigurationEntry("com.ibm.security.auth.module.Krb5LoginModule",REQUIRED,options);} else {  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @TO@ if (IS_IBM) {  options.put("useKeytab",keyTabFile);  options.put("noAddress","true");  options.put("credsType","acceptor");  entries[0]=new AppConfigurationEntry("com.ibm.security.auth.module.Krb5LoginModule",REQUIRED,options);} else {  options.put("useKeyTab","true");  options.put("keyTab",keyTabFile);  options.put("doNotPrompt","true");  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4986 @LENGTH@ 532
---UPD Block@@ThenBody:{  options.put("noAddress","true");  options.put("credsType","acceptor");  entries[0]=new AppConfigurationEntry("com.ibm.security.auth.module.Krb5LoginModule",REQUIRED,options);} @TO@ ThenBody:{  options.put("useKeytab",keyTabFile);  options.put("noAddress","true");  options.put("credsType","acceptor");  entries[0]=new AppConfigurationEntry("com.ibm.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4998 @LENGTH@ 258
------INS ExpressionStatement@@MethodInvocation:options.put("useKeytab",keyTabFile) @TO@ Block@@ThenBody:{  options.put("noAddress","true");  options.put("credsType","acceptor");  entries[0]=new AppConfigurationEntry("com.ibm.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4867 @LENGTH@ 37
---------INS MethodInvocation@@options.put("useKeytab",keyTabFile) @TO@ ExpressionStatement@@MethodInvocation:options.put("useKeytab",keyTabFile) @AT@ 4867 @LENGTH@ 36
------------INS SimpleName@@Name:options @TO@ MethodInvocation@@options.put("useKeytab",keyTabFile) @AT@ 4867 @LENGTH@ 7
------------INS SimpleName@@MethodName:put:["useKeytab", keyTabFile] @TO@ MethodInvocation@@options.put("useKeytab",keyTabFile) @AT@ 4875 @LENGTH@ 28
---------------INS StringLiteral@@"useKeytab" @TO@ SimpleName@@MethodName:put:["useKeytab", keyTabFile] @AT@ 4879 @LENGTH@ 11
---------------INS SimpleName@@keyTabFile @TO@ SimpleName@@MethodName:put:["useKeytab", keyTabFile] @AT@ 4892 @LENGTH@ 10
---UPD Block@@ElseBody:{  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @TO@ ElseBody:{  options.put("useKeyTab","true");  options.put("keyTab",keyTabFile);  options.put("doNotPrompt","true");  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 5262 @LENGTH@ 256
------MOV ExpressionStatement@@MethodInvocation:options.put("useKeyTab","true") @TO@ Block@@ElseBody:{  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4779 @LENGTH@ 33
------MOV ExpressionStatement@@MethodInvocation:options.put("keyTab",keyTabFile) @TO@ Block@@ElseBody:{  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4829 @LENGTH@ 34
------MOV ExpressionStatement@@MethodInvocation:options.put("doNotPrompt","true") @TO@ Block@@ElseBody:{  options.put("storeKey","true");  options.put("isInitiator","false");  entries[0]=new AppConfigurationEntry("com.sun.security.auth.module.Krb5LoginModule",REQUIRED,options);} @AT@ 4880 @LENGTH@ 35


INS FieldDeclaration@@private, HealthEndpoint, [health] @TO@ TypeDeclaration@@[@SpringBootApplication, public]MySpringBootRouter, FatJarRouter @AT@ 1249 @LENGTH@ 30
---INS Modifier@@private @TO@ FieldDeclaration@@private, HealthEndpoint, [health] @AT@ 1249 @LENGTH@ 7
---INS SimpleType@@HealthEndpoint @TO@ FieldDeclaration@@private, HealthEndpoint, [health] @AT@ 1257 @LENGTH@ 14
---INS VariableDeclarationFragment@@health @TO@ FieldDeclaration@@private, HealthEndpoint, [health] @AT@ 1272 @LENGTH@ 6
------INS SimpleName@@health @TO@ VariableDeclarationFragment@@health @AT@ 1272 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:ServiceHelper.startService(xslt) @AT@ 14274 @LENGTH@ 33
---DEL MethodInvocation@@ServiceHelper.startService(xslt) @AT@ 14274 @LENGTH@ 32
------DEL SimpleName@@Name:ServiceHelper @AT@ 14274 @LENGTH@ 13
------DEL SimpleName@@MethodName:startService:[xslt] @AT@ 14288 @LENGTH@ 18
---------DEL SimpleName@@xslt @AT@ 14301 @LENGTH@ 4


INS VariableDeclarationStatement@@int idx2=-1; @TO@ MethodDeclaration@@public, static, BundleContext, MethodName:createBundleContext, String name, String bundleFilter, TinyBundle bundle, Exception,  @AT@ 6544 @LENGTH@ 14
---MOV VariableDeclarationFragment@@idx2=-1 @TO@ VariableDeclarationStatement@@int idx2=-1; @AT@ 6534 @LENGTH@ 7
---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int idx2=-1; @AT@ 6544 @LENGTH@ 3


INS IfStatement@@if (ROOT_LOGGER.isDebugEnabled()) {  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @TO@ MethodDeclaration@@public, void, MethodName:patchBase, Exception,  @AT@ 5402 @LENGTH@ 155
---INS MethodInvocation@@ROOT_LOGGER.isDebugEnabled() @TO@ IfStatement@@if (ROOT_LOGGER.isDebugEnabled()) {  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @AT@ 5406 @LENGTH@ 28
------MOV SimpleName@@MethodName:println:["patch =>>"] @TO@ MethodInvocation@@ROOT_LOGGER.isDebugEnabled() @AT@ 4763 @LENGTH@ 20
---------DEL StringLiteral@@"patch =>>" @AT@ 4771 @LENGTH@ 11
------INS SimpleName@@Name:ROOT_LOGGER @TO@ MethodInvocation@@ROOT_LOGGER.isDebugEnabled() @AT@ 5406 @LENGTH@ 11
---INS Block@@ThenBody:{  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @TO@ IfStatement@@if (ROOT_LOGGER.isDebugEnabled()) {  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @AT@ 5436 @LENGTH@ 121
------MOV ExpressionStatement@@MethodInvocation:System.out.println("installation =>>") @TO@ Block@@ThenBody:{  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @AT@ 5374 @LENGTH@ 39
------MOV ExpressionStatement@@MethodInvocation:tree(env.getInstalledImage().getJbossHome()) @TO@ Block@@ThenBody:{  System.out.println("installation =>>");  tree(env.getInstalledImage().getJbossHome());} @AT@ 5422 @LENGTH@ 45


UPD IfStatement@@if (authenticationClass.getModule() != null && authenticationClass.getModule().equals(governorPhysicalTypeMetadata.getType().getModule())) {  authenticationType=authenticationClass;  break;} @TO@ if (authenticationClass.getModule() != null && authenticationClass.getModule().equals(governorPhysicalTypeMetadata.getType().getModule())) {  authenticationType=authenticationClass;  break;} else if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @AT@ 4163 @LENGTH@ 248
---INS Block@@ElseBody:if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @TO@ IfStatement@@if (authenticationClass.getModule() != null && authenticationClass.getModule().equals(governorPhysicalTypeMetadata.getType().getModule())) {  authenticationType=authenticationClass;  break;} @AT@ 4417 @LENGTH@ 175
------INS IfStatement@@if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @TO@ Block@@ElseBody:if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @AT@ 4417 @LENGTH@ 175
---------INS InfixExpression@@authenticationClasses.size() == 1 @TO@ IfStatement@@if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @AT@ 4421 @LENGTH@ 33
------------INS MethodInvocation@@authenticationClasses.size() @TO@ InfixExpression@@authenticationClasses.size() == 1 @AT@ 4421 @LENGTH@ 28
---------------INS SimpleName@@Name:authenticationClasses @TO@ MethodInvocation@@authenticationClasses.size() @AT@ 4421 @LENGTH@ 21
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@authenticationClasses.size() @AT@ 4443 @LENGTH@ 6
------------INS Operator@@== @TO@ InfixExpression@@authenticationClasses.size() == 1 @AT@ 4449 @LENGTH@ 2
------------INS NumberLiteral@@1 @TO@ InfixExpression@@authenticationClasses.size() == 1 @AT@ 4453 @LENGTH@ 1
---------INS Block@@ThenBody:{  authenticationType=authenticationClass;} @TO@ IfStatement@@if (authenticationClasses.size() == 1) {  authenticationType=authenticationClass;} @AT@ 4456 @LENGTH@ 136
------------INS ExpressionStatement@@Assignment:authenticationType=authenticationClass @TO@ Block@@ThenBody:{  authenticationType=authenticationClass;} @AT@ 4541 @LENGTH@ 41
---------------INS Assignment@@authenticationType=authenticationClass @TO@ ExpressionStatement@@Assignment:authenticationType=authenticationClass @AT@ 4541 @LENGTH@ 40
------------------INS SimpleName@@authenticationType @TO@ Assignment@@authenticationType=authenticationClass @AT@ 4541 @LENGTH@ 18
------------------INS Operator@@= @TO@ Assignment@@authenticationType=authenticationClass @AT@ 4559 @LENGTH@ 1
------------------INS SimpleName@@authenticationClass @TO@ Assignment@@authenticationType=authenticationClass @AT@ 4562 @LENGTH@ 19


UPD MethodDeclaration@@public, voidMethodName:TradeExecutorEndpoint, String uri, TradeExecutor tradeExecutor,  @TO@ voidMethodName:TradeExecutorEndpoint, String uri, TradeExecutor tradeExecutor,  @AT@ 3665 @LENGTH@ 1855
---DEL Modifier@@public @AT@ 3665 @LENGTH@ 6


UPD TypeDeclaration@@[public]SimpleRoles2GrantedAuthoritiesMapperTests, TestCase @TO@ [public]SimpleRoles2GrantedAuthoritiesMapperTests,  @AT@ 227 @LENGTH@ 4547
---DEL SimpleType@@TestCase @AT@ 290 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:ZipInputStreamWrapper, InputStream in, int size,  @TO@ voidMethodName:ZipInputStreamWrapper, InputStream in, int size,  @AT@ 1030 @LENGTH@ 89
---DEL Modifier@@public @AT@ 1030 @LENGTH@ 6


UPD FieldDeclaration@@static, final, String, [DEFAULT_RABBIT_LISTENER_CONTAINER_FACTORY_BEAN_NAME="rabbitListenerContainerFactory"] @TO@ public, static, final, String, [DEFAULT_RABBIT_LISTENER_CONTAINER_FACTORY_BEAN_NAME="rabbitListenerContainerFactory"] @AT@ 5310 @LENGTH@ 107
---INS Modifier@@public @TO@ FieldDeclaration@@static, final, String, [DEFAULT_RABBIT_LISTENER_CONTAINER_FACTORY_BEAN_NAME="rabbitListenerContainerFactory"] @AT@ 5310 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3643 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3643 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3662 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3676 @LENGTH@ 2


UPD EnhancedForStatement@@for (CipherTransformation suite : suites) {  if (suite.getName().equals(name)) {    return suite;  }} @TO@ for (CipherTransformation transformation : transformations) {  if (transformation.getName().equals(name)) {    return transformation;  }} @AT@ 2122 @LENGTH@ 121
---UPD SingleVariableDeclaration@@CipherTransformation suite @TO@ CipherTransformation transformation @AT@ 2127 @LENGTH@ 26
------UPD SimpleName@@suite @TO@ transformation @AT@ 2148 @LENGTH@ 5
---UPD SimpleName@@suites @TO@ transformations @AT@ 2156 @LENGTH@ 6
---UPD IfStatement@@if (suite.getName().equals(name)) {  return suite;} @TO@ if (transformation.getName().equals(name)) {  return transformation;} @AT@ 2172 @LENGTH@ 65
------UPD MethodInvocation@@suite.getName().equals(name) @TO@ transformation.getName().equals(name) @AT@ 2176 @LENGTH@ 28
---------UPD SimpleName@@Name:suite @TO@ Name:transformation @AT@ 2176 @LENGTH@ 5
------UPD Block@@ThenBody:{  return suite;} @TO@ ThenBody:{  return transformation;} @AT@ 2206 @LENGTH@ 31
---------UPD ReturnStatement@@SimpleName:suite @TO@ SimpleName:transformation @AT@ 2216 @LENGTH@ 13
------------UPD SimpleName@@suite @TO@ transformation @AT@ 2223 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(resp.getStatus().isEqualTo("Incorrect status"),HttpServletResponse.SC_FORBIDDEN) @TO@ MethodInvocation:assertThat(resp.getStatus()).withFailMessage("Incorrect status").isEqualTo(HttpServletResponse.SC_FORBIDDEN) @AT@ 906 @LENGTH@ 98
---UPD MethodInvocation@@assertThat(resp.getStatus().isEqualTo("Incorrect status"),HttpServletResponse.SC_FORBIDDEN) @TO@ assertThat(resp.getStatus()).withFailMessage("Incorrect status").isEqualTo(HttpServletResponse.SC_FORBIDDEN) @AT@ 906 @LENGTH@ 97
------DEL SimpleName@@MethodName:assertThat:[resp.getStatus().isEqualTo("Incorrect status"), HttpServletResponse.SC_FORBIDDEN] @AT@ 906 @LENGTH@ 97
---------DEL MethodInvocation@@resp.getStatus().isEqualTo("Incorrect status") @AT@ 917 @LENGTH@ 46
------------DEL MethodInvocation@@MethodName:getStatus:[] @AT@ 917 @LENGTH@ 16
------INS MethodInvocation@@MethodName:withFailMessage:["Incorrect status"] @TO@ MethodInvocation@@assertThat(resp.getStatus().isEqualTo("Incorrect status"),HttpServletResponse.SC_FORBIDDEN) @AT@ 966 @LENGTH@ 64
---------INS StringLiteral@@"Incorrect status" @TO@ MethodInvocation@@MethodName:withFailMessage:["Incorrect status"] @AT@ 1011 @LENGTH@ 18
------INS MethodInvocation@@MethodName:assertThat:[resp.getStatus()] @TO@ MethodInvocation@@assertThat(resp.getStatus().isEqualTo("Incorrect status"),HttpServletResponse.SC_FORBIDDEN) @AT@ 966 @LENGTH@ 28
---------INS MethodInvocation@@resp.getStatus() @TO@ MethodInvocation@@MethodName:assertThat:[resp.getStatus()] @AT@ 977 @LENGTH@ 16
------------MOV SimpleName@@Name:resp @TO@ MethodInvocation@@resp.getStatus() @AT@ 917 @LENGTH@ 4
------------MOV SimpleName@@MethodName:isEqualTo:["Incorrect status"] @TO@ MethodInvocation@@resp.getStatus() @AT@ 934 @LENGTH@ 29
---------------DEL StringLiteral@@"Incorrect status" @AT@ 944 @LENGTH@ 18
------INS SimpleName@@MethodName:isEqualTo:[HttpServletResponse.SC_FORBIDDEN] @TO@ MethodInvocation@@assertThat(resp.getStatus().isEqualTo("Incorrect status"),HttpServletResponse.SC_FORBIDDEN) @AT@ 1031 @LENGTH@ 49
---------MOV QualifiedName@@HttpServletResponse.SC_FORBIDDEN @TO@ SimpleName@@MethodName:isEqualTo:[HttpServletResponse.SC_FORBIDDEN] @AT@ 970 @LENGTH@ 32


UPD ExpressionStatement@@MethodInvocation:headers.put(SpringBatchComponent.JOB_NAME,"dynamicMockjob") @TO@ MethodInvocation:headers.put(SpringBatchConstants.JOB_NAME,"dynamicMockjob") @AT@ 4392 @LENGTH@ 61
---UPD MethodInvocation@@headers.put(SpringBatchComponent.JOB_NAME,"dynamicMockjob") @TO@ headers.put(SpringBatchConstants.JOB_NAME,"dynamicMockjob") @AT@ 4392 @LENGTH@ 60
------UPD SimpleName@@MethodName:put:[SpringBatchComponent.JOB_NAME, "dynamicMockjob"] @TO@ MethodName:put:[SpringBatchConstants.JOB_NAME, "dynamicMockjob"] @AT@ 4400 @LENGTH@ 52
---------UPD QualifiedName@@SpringBatchComponent.JOB_NAME @TO@ SpringBatchConstants.JOB_NAME @AT@ 4404 @LENGTH@ 29
------------UPD SimpleName@@SpringBatchComponent @TO@ SpringBatchConstants @AT@ 4404 @LENGTH@ 20


UPD TypeDeclaration@@[public]UnanimousBasedTests, TestCase @TO@ [public]UnanimousBasedTests,  @AT@ 1331 @LENGTH@ 4214
---DEL SimpleType@@TestCase @AT@ 1372 @LENGTH@ 8


UPD MethodDeclaration@@protected, RoutesBuilder, MethodName:createRouteBuilder, Exception,  @TO@ protected, RouteBuilder, MethodName:createRouteBuilder, Exception,  @AT@ 1399 @LENGTH@ 464
---UPD SimpleType@@RoutesBuilder @TO@ RouteBuilder @AT@ 1409 @LENGTH@ 13


UPD MethodDeclaration@@public, voidMethodName:LeakySieveProducer, Endpoint endpoint,  @TO@ voidMethodName:LeakySieveProducer, Endpoint endpoint,  @AT@ 3136 @LENGTH@ 85
---DEL Modifier@@public @AT@ 3136 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:result[i]=typeParameters.get(0).getType() @TO@ Assignment:result[i]=typeParameters.get(i).getType() @AT@ 15470 @LENGTH@ 44
---UPD Assignment@@result[i]=typeParameters.get(0).getType() @TO@ result[i]=typeParameters.get(i).getType() @AT@ 15470 @LENGTH@ 43
------UPD MethodInvocation@@typeParameters.get(0).getType() @TO@ typeParameters.get(i).getType() @AT@ 15482 @LENGTH@ 31
---------UPD MethodInvocation@@MethodName:get:[0] @TO@ MethodName:get:[i] @AT@ 15482 @LENGTH@ 21
------------DEL NumberLiteral@@0 @AT@ 15501 @LENGTH@ 1
------------INS SimpleName@@i @TO@ MethodInvocation@@MethodName:get:[0] @AT@ 15501 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:buffer.retain() @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, ByteBuf buffer, Exchange exchange,  @AT@ 1879 @LENGTH@ 16
---INS MethodInvocation@@buffer.retain() @TO@ ExpressionStatement@@MethodInvocation:buffer.retain() @AT@ 1879 @LENGTH@ 15
------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.retain() @AT@ 1879 @LENGTH@ 6
------INS SimpleName@@MethodName:retain:[] @TO@ MethodInvocation@@buffer.retain() @AT@ 1886 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:this.regionName=region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @TO@ Assignment:this.regionName=(region != null && StringUtils.hasText(region.value()) ? region.value() : defaultRegionName) @AT@ 1600 @LENGTH@ 105
---UPD Assignment@@this.regionName=region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @TO@ this.regionName=(region != null && StringUtils.hasText(region.value()) ? region.value() : defaultRegionName) @AT@ 1600 @LENGTH@ 104
------UPD ConditionalExpression@@region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @TO@ region != null && StringUtils.hasText(region.value()) ? region.value() : defaultRegionName @AT@ 1618 @LENGTH@ 86
------INS ParenthesizedExpression@@(region != null && StringUtils.hasText(region.value()) ? region.value() : defaultRegionName) @TO@ Assignment@@this.regionName=region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @AT@ 1645 @LENGTH@ 92
---------MOV ConditionalExpression@@region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @TO@ ParenthesizedExpression@@(region != null && StringUtils.hasText(region.value()) ? region.value() : defaultRegionName) @AT@ 1618 @LENGTH@ 86
------------UPD InfixExpression@@region == null || !StringUtils.hasText(region.value()) @TO@ region != null && StringUtils.hasText(region.value()) @AT@ 1618 @LENGTH@ 54
---------------UPD InfixExpression@@region == null @TO@ region != null @AT@ 1618 @LENGTH@ 14
------------------UPD Operator@@== @TO@ != @AT@ 1624 @LENGTH@ 2
---------------UPD Operator@@|| @TO@ && @AT@ 1632 @LENGTH@ 2
---------------DEL PrefixExpression@@!StringUtils.hasText(region.value()) @AT@ 1636 @LENGTH@ 36
------------------DEL Operator@@! @AT@ 1636 @LENGTH@ 1
---------------MOV MethodInvocation@@StringUtils.hasText(region.value()) @TO@ InfixExpression@@region == null || !StringUtils.hasText(region.value()) @AT@ 1637 @LENGTH@ 35
------------DEL SimpleName@@fallbackName @AT@ 1675 @LENGTH@ 12
------------INS SimpleName@@defaultRegionName @TO@ ConditionalExpression@@region == null || !StringUtils.hasText(region.value()) ? fallbackName : region.value() @AT@ 1719 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:assertTrue(Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue())) @TO@ MethodInvocation:assertThat(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL).isEqualTo(result.getEncodedValue()) @AT@ 1070 @LENGTH@ 113
---UPD MethodInvocation@@assertTrue(Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue())) @TO@ assertThat(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL).isEqualTo(result.getEncodedValue()) @AT@ 1070 @LENGTH@ 112
------INS MethodInvocation@@MethodName:assertThat:[PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL] @TO@ MethodInvocation@@assertTrue(Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue())) @AT@ 1070 @LENGTH@ 67
---------INS QualifiedName@@PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL @TO@ MethodInvocation@@MethodName:assertThat:[PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL] @AT@ 1081 @LENGTH@ 55
------------MOV SimpleName@@PasswordPolicyResponseControlTests @TO@ QualifiedName@@PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL @AT@ 1095 @LENGTH@ 34
------------MOV SimpleName@@OPENLDAP_LOCKED_CTRL @TO@ QualifiedName@@PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL @AT@ 1130 @LENGTH@ 20
------DEL SimpleName@@MethodName:assertTrue:[Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue())] @AT@ 1070 @LENGTH@ 112
---------DEL MethodInvocation@@Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue()) @AT@ 1081 @LENGTH@ 100
------------DEL SimpleName@@Name:Arrays @AT@ 1081 @LENGTH@ 6
------------DEL SimpleName@@MethodName:equals:[PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL, result.getEncodedValue()] @AT@ 1088 @LENGTH@ 93
---------------DEL QualifiedName@@PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL @AT@ 1095 @LENGTH@ 55
------INS SimpleName@@MethodName:isEqualTo:[result.getEncodedValue()] @TO@ MethodInvocation@@assertTrue(Arrays.equals(PasswordPolicyResponseControlTests.OPENLDAP_LOCKED_CTRL,result.getEncodedValue())) @AT@ 1138 @LENGTH@ 35
---------MOV MethodInvocation@@result.getEncodedValue() @TO@ SimpleName@@MethodName:isEqualTo:[result.getEncodedValue()] @AT@ 1156 @LENGTH@ 24


UPD ExpressionStatement@@Assignment:oip=new ObjectInputStream(new ByteArrayInputStream(byteArray)) @TO@ Assignment:oip=new ConfigurableObjectInputStream(new ByteArrayInputStream(byteArray),Thread.currentThread().getContextClassLoader()) @AT@ 676 @LENGTH@ 65
---UPD Assignment@@oip=new ObjectInputStream(new ByteArrayInputStream(byteArray)) @TO@ oip=new ConfigurableObjectInputStream(new ByteArrayInputStream(byteArray),Thread.currentThread().getContextClassLoader()) @AT@ 676 @LENGTH@ 64
------UPD ClassInstanceCreation@@ObjectInputStream[new ByteArrayInputStream(byteArray)] @TO@ ConfigurableObjectInputStream[new ByteArrayInputStream(byteArray), Thread.currentThread().getContextClassLoader()] @AT@ 682 @LENGTH@ 58
---------UPD SimpleType@@ObjectInputStream @TO@ ConfigurableObjectInputStream @AT@ 686 @LENGTH@ 17
---------INS MethodInvocation@@Thread.currentThread().getContextClassLoader() @TO@ ClassInstanceCreation@@ObjectInputStream[new ByteArrayInputStream(byteArray)] @AT@ 976 @LENGTH@ 46
------------INS MethodInvocation@@MethodName:currentThread:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 976 @LENGTH@ 22
------------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 976 @LENGTH@ 6
------------INS SimpleName@@MethodName:getContextClassLoader:[] @TO@ MethodInvocation@@Thread.currentThread().getContextClassLoader() @AT@ 999 @LENGTH@ 23


UPD CatchClause@@catch (CamelExecutionException e) {  InvalidPayloadRuntimeException cause=assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause());  assertTrue(cause.getMessage().contains("Body is null"));} @TO@ catch (CamelExecutionException e) {  assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause());} @AT@ 1495 @LENGTH@ 237
---DEL VariableDeclarationStatement@@InvalidPayloadRuntimeException cause=assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause()); @AT@ 1543 @LENGTH@ 110
------DEL SimpleType@@InvalidPayloadRuntimeException @AT@ 1543 @LENGTH@ 30
------DEL VariableDeclarationFragment@@cause=assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause()) @AT@ 1574 @LENGTH@ 78
---------DEL SimpleName@@cause @AT@ 1574 @LENGTH@ 5
---UPD ExpressionStatement@@MethodInvocation:assertTrue(cause.getMessage().contains("Body is null")) @TO@ MethodInvocation:assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause()) @AT@ 1666 @LENGTH@ 56
------MOV MethodInvocation@@assertIsInstanceOf(InvalidPayloadRuntimeException.class,e.getCause()) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(cause.getMessage().contains("Body is null")) @AT@ 1582 @LENGTH@ 70
------DEL MethodInvocation@@assertTrue(cause.getMessage().contains("Body is null")) @AT@ 1666 @LENGTH@ 55
---------DEL SimpleName@@MethodName:assertTrue:[cause.getMessage().contains("Body is null")] @AT@ 1666 @LENGTH@ 55
------------DEL MethodInvocation@@cause.getMessage().contains("Body is null") @AT@ 1677 @LENGTH@ 43
---------------DEL MethodInvocation@@MethodName:getMessage:[] @AT@ 1677 @LENGTH@ 18
---------------DEL SimpleName@@Name:cause @AT@ 1677 @LENGTH@ 5
---------------DEL SimpleName@@MethodName:contains:["Body is null"] @AT@ 1696 @LENGTH@ 24
------------------DEL StringLiteral@@"Body is null" @AT@ 1705 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:assertThat("Subject is expected to be null, but is not. Got " + subject,subject).isNull() @TO@ MethodInvocation:assertThat(subject).withFailMessage("Subject is expected to be null, but is not. Got " + subject).isNull() @AT@ 8084 @LENGTH@ 91
---UPD MethodInvocation@@assertThat("Subject is expected to be null, but is not. Got " + subject,subject).isNull() @TO@ assertThat(subject).withFailMessage("Subject is expected to be null, but is not. Got " + subject).isNull() @AT@ 8084 @LENGTH@ 90
------INS MethodInvocation@@MethodName:assertThat:[subject] @TO@ MethodInvocation@@assertThat("Subject is expected to be null, but is not. Got " + subject,subject).isNull() @AT@ 7933 @LENGTH@ 19
---------INS SimpleName@@subject @TO@ MethodInvocation@@MethodName:assertThat:[subject] @AT@ 7944 @LENGTH@ 7
------UPD MethodInvocation@@MethodName:assertThat:["Subject is expected to be null, but is not. Got " + subject, subject] @TO@ MethodName:withFailMessage:["Subject is expected to be null, but is not. Got " + subject] @AT@ 8084 @LENGTH@ 81
---------DEL SimpleName@@subject @AT@ 8157 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:OgnlInvokeProcessor, BeanHolder beanHolder, String ognl,  @TO@ voidMethodName:OgnlInvokeProcessor, BeanHolder beanHolder, String ognl,  @AT@ 8491 @LENGTH@ 254
---DEL Modifier@@public @AT@ 8491 @LENGTH@ 6


UPD TypeDeclaration@@[public]MethodSecurityMetadataSourceAdvisorTests, TestCase @TO@ [public]MethodSecurityMetadataSourceAdvisorTests,  @AT@ 1131 @LENGTH@ 1346
---DEL SimpleType@@TestCase @AT@ 1193 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @TO@ TypeDeclaration@@[public]ApprovalStoreUserApprovalHandlerTests,  @AT@ 4246 @LENGTH@ 453
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4246 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4253 @LENGTH@ 4
---INS SimpleName@@MethodName:testExplicitlyUnapprovedScopes @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4258 @LENGTH@ 30
---INS ExpressionStatement@@MethodInvocation:store.addApprovals(Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))) @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4295 @LENGTH@ 157
------INS MethodInvocation@@store.addApprovals(Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))) @TO@ ExpressionStatement@@MethodInvocation:store.addApprovals(Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))) @AT@ 4295 @LENGTH@ 156
---------INS SimpleName@@Name:store @TO@ MethodInvocation@@store.addApprovals(Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))) @AT@ 4295 @LENGTH@ 5
---------INS SimpleName@@MethodName:addApprovals:[Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))] @TO@ MethodInvocation@@store.addApprovals(Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))) @AT@ 4301 @LENGTH@ 150
------------INS MethodInvocation@@Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED)) @TO@ SimpleName@@MethodName:addApprovals:[Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED))] @AT@ 4314 @LENGTH@ 136
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED)) @AT@ 4314 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:[new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED)] @TO@ MethodInvocation@@Arrays.asList(new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED)) @AT@ 4321 @LENGTH@ 129
------------------INS ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @TO@ SimpleName@@MethodName:asList:[new Approval("user","client","read",new Date(System.currentTimeMillis() + 10000),Approval.ApprovalStatus.DENIED)] @AT@ 4328 @LENGTH@ 121
---------------------INS New@@new @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4328 @LENGTH@ 3
---------------------INS SimpleType@@Approval @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4332 @LENGTH@ 8
---------------------INS StringLiteral@@"user" @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4341 @LENGTH@ 6
---------------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4349 @LENGTH@ 8
---------------------INS StringLiteral@@"read" @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4359 @LENGTH@ 6
---------------------INS ClassInstanceCreation@@Date[System.currentTimeMillis() + 10000] @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4367 @LENGTH@ 49
------------------------INS New@@new @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() + 10000] @AT@ 4367 @LENGTH@ 3
------------------------INS SimpleType@@Date @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() + 10000] @AT@ 4371 @LENGTH@ 4
------------------------INS InfixExpression@@System.currentTimeMillis() + 10000 @TO@ ClassInstanceCreation@@Date[System.currentTimeMillis() + 10000] @AT@ 4381 @LENGTH@ 34
---------------------------INS MethodInvocation@@System.currentTimeMillis() @TO@ InfixExpression@@System.currentTimeMillis() + 10000 @AT@ 4381 @LENGTH@ 26
------------------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4381 @LENGTH@ 6
------------------------------INS SimpleName@@MethodName:currentTimeMillis:[] @TO@ MethodInvocation@@System.currentTimeMillis() @AT@ 4388 @LENGTH@ 19
---------------------------INS Operator@@+ @TO@ InfixExpression@@System.currentTimeMillis() + 10000 @AT@ 4407 @LENGTH@ 1
---------------------------INS NumberLiteral@@10000 @TO@ InfixExpression@@System.currentTimeMillis() + 10000 @AT@ 4410 @LENGTH@ 5
---------------------INS QualifiedName@@Approval.ApprovalStatus.DENIED @TO@ ClassInstanceCreation@@Approval["user", "client", "read", new Date(System.currentTimeMillis() + 10000), Approval.ApprovalStatus.DENIED] @AT@ 4418 @LENGTH@ 30
------------------------INS QualifiedName@@Approval.ApprovalStatus @TO@ QualifiedName@@Approval.ApprovalStatus.DENIED @AT@ 4418 @LENGTH@ 23
---------------------------INS SimpleName@@Approval @TO@ QualifiedName@@Approval.ApprovalStatus @AT@ 4418 @LENGTH@ 8
---------------------------INS SimpleName@@ApprovalStatus @TO@ QualifiedName@@Approval.ApprovalStatus @AT@ 4427 @LENGTH@ 14
------------------------INS SimpleName@@DENIED @TO@ QualifiedName@@Approval.ApprovalStatus.DENIED @AT@ 4442 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4455 @LENGTH@ 102
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 4455 @LENGTH@ 20
------INS VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @TO@ VariableDeclarationStatement@@AuthorizationRequest authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")); @AT@ 4476 @LENGTH@ 80
---------INS SimpleName@@authorizationRequest @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 4476 @LENGTH@ 20
---------INS ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @TO@ VariableDeclarationFragment@@authorizationRequest=new AuthorizationRequest("client",Arrays.asList("read")) @AT@ 4499 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 4499 @LENGTH@ 3
------------INS SimpleType@@AuthorizationRequest @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 4503 @LENGTH@ 20
------------INS StringLiteral@@"client" @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 4524 @LENGTH@ 8
------------INS MethodInvocation@@Arrays.asList("read") @TO@ ClassInstanceCreation@@AuthorizationRequest["client", Arrays.asList("read")] @AT@ 4534 @LENGTH@ 21
---------------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 4534 @LENGTH@ 6
---------------INS SimpleName@@MethodName:asList:["read"] @TO@ MethodInvocation@@Arrays.asList("read") @AT@ 4541 @LENGTH@ 14
------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:asList:["read"] @AT@ 4548 @LENGTH@ 6
---INS VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4560 @LENGTH@ 100
------INS SimpleType@@AuthorizationRequest @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @AT@ 4560 @LENGTH@ 20
------INS VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationStatement@@AuthorizationRequest result=handler.checkForPreApproval(authorizationRequest,userAuthentication); @AT@ 4581 @LENGTH@ 78
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 4581 @LENGTH@ 6
---------INS MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @TO@ VariableDeclarationFragment@@result=handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 4590 @LENGTH@ 69
------------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 4590 @LENGTH@ 7
------------INS SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @TO@ MethodInvocation@@handler.checkForPreApproval(authorizationRequest,userAuthentication) @AT@ 4598 @LENGTH@ 61
---------------INS SimpleName@@authorizationRequest @TO@ SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @AT@ 4618 @LENGTH@ 20
---------------INS SimpleName@@userAuthentication @TO@ SimpleName@@MethodName:checkForPreApproval:[authorizationRequest, userAuthentication] @AT@ 4640 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:assertFalse(result.isApproved()) @TO@ MethodDeclaration@@public, void, MethodName:testExplicitlyUnapprovedScopes,  @AT@ 4663 @LENGTH@ 33
------INS MethodInvocation@@assertFalse(result.isApproved()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(result.isApproved()) @AT@ 4663 @LENGTH@ 32
---------INS SimpleName@@MethodName:assertFalse:[result.isApproved()] @TO@ MethodInvocation@@assertFalse(result.isApproved()) @AT@ 4663 @LENGTH@ 32
------------INS MethodInvocation@@result.isApproved() @TO@ SimpleName@@MethodName:assertFalse:[result.isApproved()] @AT@ 4675 @LENGTH@ 19
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.isApproved() @AT@ 4675 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isApproved:[] @TO@ MethodInvocation@@result.isApproved() @AT@ 4682 @LENGTH@ 12


INS MethodDeclaration@@private, String, MethodName:toKey, String gav,  @TO@ TypeDeclaration@@[public]FractionList, [org.wildfly.swarm.tools.FractionList] @AT@ 4635 @LENGTH@ 95
---INS Modifier@@private @TO@ MethodDeclaration@@private, String, MethodName:toKey, String gav,  @AT@ 4635 @LENGTH@ 7
---INS SimpleType@@String @TO@ MethodDeclaration@@private, String, MethodName:toKey, String gav,  @AT@ 4643 @LENGTH@ 6
---INS SimpleName@@MethodName:toKey @TO@ MethodDeclaration@@private, String, MethodName:toKey, String gav,  @AT@ 4650 @LENGTH@ 5
---INS SingleVariableDeclaration@@String gav @TO@ MethodDeclaration@@private, String, MethodName:toKey, String gav,  @AT@ 4656 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String gav @AT@ 4656 @LENGTH@ 6
------INS SimpleName@@gav @TO@ SingleVariableDeclaration@@String gav @AT@ 4663 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:gav.substring(0,gav.lastIndexOf(':')) @TO@ MethodDeclaration@@private, String, MethodName:toKey, String gav,  @AT@ 4678 @LENGTH@ 46
------INS MethodInvocation@@gav.substring(0,gav.lastIndexOf(':')) @TO@ ReturnStatement@@MethodInvocation:gav.substring(0,gav.lastIndexOf(':')) @AT@ 4685 @LENGTH@ 38
---------INS SimpleName@@Name:gav @TO@ MethodInvocation@@gav.substring(0,gav.lastIndexOf(':')) @AT@ 4685 @LENGTH@ 3
---------INS SimpleName@@MethodName:substring:[0, gav.lastIndexOf(':')] @TO@ MethodInvocation@@gav.substring(0,gav.lastIndexOf(':')) @AT@ 4689 @LENGTH@ 34
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, gav.lastIndexOf(':')] @AT@ 4699 @LENGTH@ 1
------------INS MethodInvocation@@gav.lastIndexOf(':') @TO@ SimpleName@@MethodName:substring:[0, gav.lastIndexOf(':')] @AT@ 4702 @LENGTH@ 20
---------------INS SimpleName@@Name:gav @TO@ MethodInvocation@@gav.lastIndexOf(':') @AT@ 4702 @LENGTH@ 3
---------------INS SimpleName@@MethodName:lastIndexOf:[':'] @TO@ MethodInvocation@@gav.lastIndexOf(':') @AT@ 4706 @LENGTH@ 16
------------------INS CharacterLiteral@@':' @TO@ SimpleName@@MethodName:lastIndexOf:[':'] @AT@ 4718 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:request.setNodeLabelExpression(labelExpression) @TO@ MethodInvocation:request.setNodeLabelExpression(allocationValues.labelExpression) @AT@ 16099 @LENGTH@ 48
---UPD MethodInvocation@@request.setNodeLabelExpression(labelExpression) @TO@ request.setNodeLabelExpression(allocationValues.labelExpression) @AT@ 16099 @LENGTH@ 47
------UPD SimpleName@@MethodName:setNodeLabelExpression:[labelExpression] @TO@ MethodName:setNodeLabelExpression:[allocationValues.labelExpression] @AT@ 16107 @LENGTH@ 39
---------INS QualifiedName@@allocationValues.labelExpression @TO@ SimpleName@@MethodName:setNodeLabelExpression:[labelExpression] @AT@ 16130 @LENGTH@ 32
------------INS SimpleName@@allocationValues @TO@ QualifiedName@@allocationValues.labelExpression @AT@ 16130 @LENGTH@ 16
------------INS SimpleName@@labelExpression @TO@ QualifiedName@@allocationValues.labelExpression @AT@ 16147 @LENGTH@ 15
---------DEL SimpleName@@labelExpression @AT@ 16130 @LENGTH@ 15


UPD VariableDeclarationStatement@@NotifyBuilder notify=new NotifyBuilder(camelContext).whenDone(1).create(); @TO@ NotifyBuilder notify=new NotifyBuilder(camelContext).whenDone(4).create(); @AT@ 1779 @LENGTH@ 76
---UPD VariableDeclarationFragment@@notify=new NotifyBuilder(camelContext).whenDone(1).create() @TO@ notify=new NotifyBuilder(camelContext).whenDone(4).create() @AT@ 1793 @LENGTH@ 61
------UPD MethodInvocation@@new NotifyBuilder(camelContext).whenDone(1).create() @TO@ new NotifyBuilder(camelContext).whenDone(4).create() @AT@ 1802 @LENGTH@ 52
---------UPD MethodInvocation@@MethodName:whenDone:[1] @TO@ MethodName:whenDone:[4] @AT@ 1802 @LENGTH@ 43
------------UPD NumberLiteral@@1 @TO@ 4 @AT@ 1843 @LENGTH@ 1


UPD IfStatement@@if (!getClass().equals(obj.getClass())) {  return false;} @TO@ if (!getClass().equals(ClassUtils.getUserClass(obj))) {  return false;} @AT@ 2365 @LENGTH@ 62
---UPD PrefixExpression@@!getClass().equals(obj.getClass()) @TO@ !getClass().equals(ClassUtils.getUserClass(obj)) @AT@ 2369 @LENGTH@ 34
------UPD MethodInvocation@@getClass().equals(obj.getClass()) @TO@ getClass().equals(ClassUtils.getUserClass(obj)) @AT@ 2370 @LENGTH@ 33
---------UPD SimpleName@@MethodName:equals:[obj.getClass()] @TO@ MethodName:equals:[ClassUtils.getUserClass(obj)] @AT@ 2381 @LENGTH@ 22
------------UPD MethodInvocation@@obj.getClass() @TO@ ClassUtils.getUserClass(obj) @AT@ 2388 @LENGTH@ 14
---------------UPD SimpleName@@Name:obj @TO@ Name:ClassUtils @AT@ 2388 @LENGTH@ 3
---------------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:getUserClass:[obj] @AT@ 2392 @LENGTH@ 10
------------------INS SimpleName@@obj @TO@ SimpleName@@MethodName:getClass:[] @AT@ 2456 @LENGTH@ 3


INS MethodDeclaration@@private, voidMethodName:EtcdRoutePolicyMain,  @TO@ TypeDeclaration@@[public]EtcdRoutePolicyMain,  @AT@ 981 @LENGTH@ 37
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:EtcdRoutePolicyMain,  @AT@ 981 @LENGTH@ 7
---INS SimpleName@@MethodName:EtcdRoutePolicyMain @TO@ MethodDeclaration@@private, voidMethodName:EtcdRoutePolicyMain,  @AT@ 989 @LENGTH@ 19


UPD IfStatement@@if (name == null) {  name=n.getBytes();  NAMES.put(n,name);} @TO@ if (name == null && n != null) {  name=n.getBytes();  NAMES.put(n,name);} @AT@ 1726 @LENGTH@ 94
---INS InfixExpression@@name == null && n != null @TO@ IfStatement@@if (name == null) {  name=n.getBytes();  NAMES.put(n,name);} @AT@ 1730 @LENGTH@ 25
------INS InfixExpression@@name == null @TO@ InfixExpression@@name == null && n != null @AT@ 1730 @LENGTH@ 12
---------MOV SimpleName@@name @TO@ InfixExpression@@name == null @AT@ 1730 @LENGTH@ 4
---------MOV Operator@@== @TO@ InfixExpression@@name == null @AT@ 1734 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@name == null @AT@ 1738 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@name == null && n != null @AT@ 1742 @LENGTH@ 2
------INS InfixExpression@@n != null @TO@ InfixExpression@@name == null && n != null @AT@ 1746 @LENGTH@ 9
---------INS SimpleName@@n @TO@ InfixExpression@@n != null @AT@ 1746 @LENGTH@ 1
---------INS Operator@@!= @TO@ InfixExpression@@n != null @AT@ 1747 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@n != null @AT@ 1751 @LENGTH@ 4
---DEL InfixExpression@@name == null @AT@ 1730 @LENGTH@ 12


INS MethodDeclaration@@public, int, MethodName:hashCode,  @TO@ TypeDeclaration@@[public]TestPojoExclusion,  @AT@ 1986 @LENGTH@ 156
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1986 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1993 @LENGTH@ 3
---INS SimpleName@@MethodName:hashCode @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 1997 @LENGTH@ 8
---INS VariableDeclarationStatement@@int result=age; @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2018 @LENGTH@ 17
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2018 @LENGTH@ 3
------INS VariableDeclarationFragment@@result=age @TO@ VariableDeclarationStatement@@int result=age; @AT@ 2022 @LENGTH@ 12
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=age @AT@ 2022 @LENGTH@ 6
---------INS SimpleName@@age @TO@ VariableDeclarationFragment@@result=age @AT@ 2031 @LENGTH@ 3
---INS ExpressionStatement@@Assignment:result=31 * result + height @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2044 @LENGTH@ 30
------INS Assignment@@result=31 * result + height @TO@ ExpressionStatement@@Assignment:result=31 * result + height @AT@ 2044 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + height @AT@ 2044 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + height @AT@ 2050 @LENGTH@ 1
---------INS InfixExpression@@31 * result + height @TO@ Assignment@@result=31 * result + height @AT@ 2053 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + height @AT@ 2053 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2053 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2055 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2058 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + height @AT@ 2064 @LENGTH@ 1
------------INS SimpleName@@height @TO@ InfixExpression@@31 * result + height @AT@ 2067 @LENGTH@ 6
---INS ExpressionStatement@@Assignment:result=31 * result + weight @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2083 @LENGTH@ 30
------INS Assignment@@result=31 * result + weight @TO@ ExpressionStatement@@Assignment:result=31 * result + weight @AT@ 2083 @LENGTH@ 29
---------INS SimpleName@@result @TO@ Assignment@@result=31 * result + weight @AT@ 2083 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@result=31 * result + weight @AT@ 2089 @LENGTH@ 1
---------INS InfixExpression@@31 * result + weight @TO@ Assignment@@result=31 * result + weight @AT@ 2092 @LENGTH@ 20
------------INS InfixExpression@@31 * result @TO@ InfixExpression@@31 * result + weight @AT@ 2092 @LENGTH@ 11
---------------INS NumberLiteral@@31 @TO@ InfixExpression@@31 * result @AT@ 2092 @LENGTH@ 2
---------------INS Operator@@* @TO@ InfixExpression@@31 * result @AT@ 2094 @LENGTH@ 1
---------------INS SimpleName@@result @TO@ InfixExpression@@31 * result @AT@ 2097 @LENGTH@ 6
------------INS Operator@@+ @TO@ InfixExpression@@31 * result + weight @AT@ 2103 @LENGTH@ 1
------------INS SimpleName@@weight @TO@ InfixExpression@@31 * result + weight @AT@ 2106 @LENGTH@ 6
---INS ReturnStatement@@SimpleName:result @TO@ MethodDeclaration@@public, int, MethodName:hashCode,  @AT@ 2122 @LENGTH@ 14
------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 2129 @LENGTH@ 6


UPD ReturnStatement@@MethodInvocation:new UserProfileBuilder().setName(profile.getName()).setFirstName(profile.getFirstName()).setLastName(profile.getLastName()).setEmail(profile.getEmail()).build() @TO@ MethodInvocation:new UserProfileBuilder().setId(profile.getId()).setName(profile.getName()).setFirstName(profile.getFirstName()).setLastName(profile.getLastName()).setEmail(profile.getEmail()).build() @AT@ 1861 @LENGTH@ 172
---UPD MethodInvocation@@new UserProfileBuilder().setName(profile.getName()).setFirstName(profile.getFirstName()).setLastName(profile.getLastName()).setEmail(profile.getEmail()).build() @TO@ new UserProfileBuilder().setId(profile.getId()).setName(profile.getName()).setFirstName(profile.getFirstName()).setLastName(profile.getLastName()).setEmail(profile.getEmail()).build() @AT@ 1868 @LENGTH@ 164
------INS MethodInvocation@@MethodName:setId:[profile.getId()] @TO@ MethodInvocation@@new UserProfileBuilder().setName(profile.getName()).setFirstName(profile.getFirstName()).setLastName(profile.getLastName()).setEmail(profile.getEmail()).build() @AT@ 1868 @LENGTH@ 47
---------INS MethodInvocation@@profile.getId() @TO@ MethodInvocation@@MethodName:setId:[profile.getId()] @AT@ 1899 @LENGTH@ 15
------------INS SimpleName@@Name:profile @TO@ MethodInvocation@@profile.getId() @AT@ 1899 @LENGTH@ 7
------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@profile.getId() @AT@ 1907 @LENGTH@ 7


DEL VariableDeclarationStatement@@final InputStream is=getResource(fileName); @AT@ 5303 @LENGTH@ 45
---DEL Modifier@@final @AT@ 5303 @LENGTH@ 5
---DEL SimpleType@@InputStream @AT@ 5309 @LENGTH@ 11


UPD VariableDeclarationStatement@@CipherTransformation[] suites=CipherTransformation.values(); @TO@ CipherTransformation[] transformations=CipherTransformation.values(); @AT@ 2055 @LENGTH@ 62
---UPD VariableDeclarationFragment@@suites=CipherTransformation.values() @TO@ transformations=CipherTransformation.values() @AT@ 2078 @LENGTH@ 38
------UPD SimpleName@@suites @TO@ transformations @AT@ 2078 @LENGTH@ 6


INS MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @TO@ TypeDeclaration@@[public, final]ExpressionBuilder,  @AT@ 46218 @LENGTH@ 835
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46218 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46225 @LENGTH@ 6
---INS SimpleType@@Expression @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46232 @LENGTH@ 10
---INS SimpleName@@MethodName:groupXmlIteratorExpression @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46243 @LENGTH@ 26
---INS SingleVariableDeclaration@@final Expression expression @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46270 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Expression expression @AT@ 46270 @LENGTH@ 5
------INS SimpleType@@Expression @TO@ SingleVariableDeclaration@@final Expression expression @AT@ 46276 @LENGTH@ 10
------INS SimpleName@@expression @TO@ SingleVariableDeclaration@@final Expression expression @AT@ 46287 @LENGTH@ 10
---INS SingleVariableDeclaration@@final int group @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46299 @LENGTH@ 15
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final int group @AT@ 46299 @LENGTH@ 5
------INS PrimitiveType@@int @TO@ SingleVariableDeclaration@@final int group @AT@ 46305 @LENGTH@ 3
------INS SimpleName@@group @TO@ SingleVariableDeclaration@@final int group @AT@ 46309 @LENGTH@ 5
---INS ReturnStatement@@ClassInstanceCreation:new ExpressionAdapter(){
  public Object evaluate(  Exchange exchange){
    Iterator<?> it=expression.evaluate(exchange,Iterator.class);
    ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator");
    return new GroupTokenIterator(exchange,it,null,group);
  }
  @Override public String toString(){
    return "group " + expression + " "+ group+ " times";
  }
}
 @TO@ MethodDeclaration@@public, static, Expression, MethodName:groupXmlIteratorExpression, final Expression expression, final int group,  @AT@ 46326 @LENGTH@ 721
------INS ClassInstanceCreation@@ExpressionAdapter[] @TO@ ReturnStatement@@ClassInstanceCreation:new ExpressionAdapter(){
  public Object evaluate(  Exchange exchange){
    Iterator<?> it=expression.evaluate(exchange,Iterator.class);
    ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator");
    return new GroupTokenIterator(exchange,it,null,group);
  }
  @Override public String toString(){
    return "group " + expression + " "+ group+ " times";
  }
}
 @AT@ 46333 @LENGTH@ 713
---------INS New@@new @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 46333 @LENGTH@ 3
---------INS SimpleType@@ExpressionAdapter @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 46337 @LENGTH@ 17
---------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@ExpressionAdapter[] @AT@ 46357 @LENGTH@ 689
------------INS MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 46371 @LENGTH@ 518
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46371 @LENGTH@ 6
---------------INS SimpleType@@Object @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46378 @LENGTH@ 6
---------------INS SimpleName@@MethodName:evaluate @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46385 @LENGTH@ 8
---------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46394 @LENGTH@ 17
------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 46394 @LENGTH@ 8
------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 46403 @LENGTH@ 8
---------------INS VariableDeclarationStatement@@Iterator<?> it=expression.evaluate(exchange,Iterator.class); @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46482 @LENGTH@ 63
------------------INS ParameterizedType@@Iterator<?> @TO@ VariableDeclarationStatement@@Iterator<?> it=expression.evaluate(exchange,Iterator.class); @AT@ 46482 @LENGTH@ 11
---------------------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<?> @AT@ 46482 @LENGTH@ 8
---------------------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<?> @AT@ 46491 @LENGTH@ 1
------------------INS VariableDeclarationFragment@@it=expression.evaluate(exchange,Iterator.class) @TO@ VariableDeclarationStatement@@Iterator<?> it=expression.evaluate(exchange,Iterator.class); @AT@ 46494 @LENGTH@ 50
---------------------INS SimpleName@@it @TO@ VariableDeclarationFragment@@it=expression.evaluate(exchange,Iterator.class) @AT@ 46494 @LENGTH@ 2
---------------------INS MethodInvocation@@expression.evaluate(exchange,Iterator.class) @TO@ VariableDeclarationFragment@@it=expression.evaluate(exchange,Iterator.class) @AT@ 46499 @LENGTH@ 45
------------------------INS SimpleName@@Name:expression @TO@ MethodInvocation@@expression.evaluate(exchange,Iterator.class) @AT@ 46499 @LENGTH@ 10
------------------------INS SimpleName@@MethodName:evaluate:[exchange, Iterator.class] @TO@ MethodInvocation@@expression.evaluate(exchange,Iterator.class) @AT@ 46510 @LENGTH@ 34
---------------------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:evaluate:[exchange, Iterator.class] @AT@ 46519 @LENGTH@ 8
---------------------------INS TypeLiteral@@Iterator.class @TO@ SimpleName@@MethodName:evaluate:[exchange, Iterator.class] @AT@ 46529 @LENGTH@ 14
---------------INS ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator") @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46562 @LENGTH@ 123
------------------INS MethodInvocation@@ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator") @TO@ ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator") @AT@ 46562 @LENGTH@ 122
---------------------INS SimpleName@@Name:ObjectHelper @TO@ MethodInvocation@@ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator") @AT@ 46562 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:notNull:[it, "expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator"] @TO@ MethodInvocation@@ObjectHelper.notNull(it,"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator") @AT@ 46575 @LENGTH@ 109
------------------------INS SimpleName@@it @TO@ SimpleName@@MethodName:notNull:[it, "expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator"] @AT@ 46583 @LENGTH@ 2
------------------------INS InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @TO@ SimpleName@@MethodName:notNull:[it, "expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator"] @AT@ 46587 @LENGTH@ 96
---------------------------INS StringLiteral@@"expression: " @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46587 @LENGTH@ 14
---------------------------INS Operator@@+ @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46601 @LENGTH@ 1
---------------------------INS SimpleName@@expression @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46604 @LENGTH@ 10
---------------------------INS StringLiteral@@" evaluated on " @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46617 @LENGTH@ 16
---------------------------INS SimpleName@@exchange @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46636 @LENGTH@ 8
---------------------------INS StringLiteral@@" must return an java.util.Iterator" @TO@ InfixExpression@@"expression: " + expression + " evaluated on "+ exchange+ " must return an java.util.Iterator" @AT@ 46647 @LENGTH@ 36
---------------INS ReturnStatement@@ClassInstanceCreation:new GroupTokenIterator(exchange,it,null,group) @TO@ MethodDeclaration@@public, Object, MethodName:evaluate, Exchange exchange,  @AT@ 46818 @LENGTH@ 57
------------------INS ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @TO@ ReturnStatement@@ClassInstanceCreation:new GroupTokenIterator(exchange,it,null,group) @AT@ 46825 @LENGTH@ 49
---------------------INS New@@new @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46825 @LENGTH@ 3
---------------------INS SimpleType@@GroupTokenIterator @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46829 @LENGTH@ 18
---------------------INS SimpleName@@exchange @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46848 @LENGTH@ 8
---------------------INS SimpleName@@it @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46858 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46862 @LENGTH@ 4
---------------------INS SimpleName@@group @TO@ ClassInstanceCreation@@GroupTokenIterator[exchange, it, null, group] @AT@ 46868 @LENGTH@ 5
------------INS MethodDeclaration@@public, String, MethodName:toString,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 46925 @LENGTH@ 111
---------------INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 46925 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 46932 @LENGTH@ 6
---------------INS SimpleName@@MethodName:toString @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 46939 @LENGTH@ 8
---------------INS ReturnStatement@@InfixExpression:"group " + expression + " "+ group+ " times" @TO@ MethodDeclaration@@public, String, MethodName:toString,  @AT@ 46968 @LENGTH@ 54
------------------INS InfixExpression@@"group " + expression + " "+ group+ " times" @TO@ ReturnStatement@@InfixExpression:"group " + expression + " "+ group+ " times" @AT@ 46975 @LENGTH@ 46
---------------------INS StringLiteral@@"group " @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 46975 @LENGTH@ 8
---------------------INS Operator@@+ @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 46983 @LENGTH@ 1
---------------------INS SimpleName@@expression @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 46986 @LENGTH@ 10
---------------------INS StringLiteral@@" " @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 46999 @LENGTH@ 3
---------------------INS SimpleName@@group @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 47005 @LENGTH@ 5
---------------------INS StringLiteral@@" times" @TO@ InfixExpression@@"group " + expression + " "+ group+ " times" @AT@ 47013 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:verify(Config.channel2,never()).exchangeDeclare(eq("bar"),eq("direct"),anyBoolean(),anyBoolean(),anyBoolean(),Matchers.<Map<String,Object>>any()) @TO@ MethodInvocation:verify(Config.channel2,never()).exchangeDeclare(eq("bar"),eq("direct"),anyBoolean(),anyBoolean(),anyBoolean(),anyMap()) @AT@ 12658 @LENGTH@ 167
---UPD MethodInvocation@@verify(Config.channel2,never()).exchangeDeclare(eq("bar"),eq("direct"),anyBoolean(),anyBoolean(),anyBoolean(),Matchers.<Map<String,Object>>any()) @TO@ verify(Config.channel2,never()).exchangeDeclare(eq("bar"),eq("direct"),anyBoolean(),anyBoolean(),anyBoolean(),anyMap()) @AT@ 12658 @LENGTH@ 166
------UPD SimpleName@@MethodName:exchangeDeclare:[eq("bar"), eq("direct"), anyBoolean(), anyBoolean(), anyBoolean(), Matchers.<Map<String,Object>>any()] @TO@ MethodName:exchangeDeclare:[eq("bar"), eq("direct"), anyBoolean(), anyBoolean(), anyBoolean(), anyMap()] @AT@ 12696 @LENGTH@ 128
---------UPD MethodInvocation@@Matchers.<Map<String,Object>>any() @TO@ MethodName:anyMap:[] @AT@ 12787 @LENGTH@ 36
------------DEL SimpleName@@Name:Matchers @AT@ 12787 @LENGTH@ 8
------------DEL SimpleName@@MethodName:any:[] @AT@ 12818 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @TO@ MethodInvocation:assertThat(new String(result)).isNotEqualTo(new String(encryptor.encrypt("text".getBytes()))) @AT@ 847 @LENGTH@ 103
---DEL MethodInvocation@@assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @AT@ 847 @LENGTH@ 102
------DEL SimpleName@@MethodName:assertThat:[new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))] @AT@ 847 @LENGTH@ 102
---MOV MethodInvocation@@new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes()))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes())))) @AT@ 858 @LENGTH@ 90
------INS MethodInvocation@@MethodName:assertThat:[new String(result)] @TO@ MethodInvocation@@new String(result).isFalse().equals(new String(encryptor.encrypt("text".getBytes()))) @AT@ 715 @LENGTH@ 30
---------MOV ClassInstanceCreation@@String[result] @TO@ MethodInvocation@@MethodName:assertThat:[new String(result)] @AT@ 858 @LENGTH@ 18
------DEL MethodInvocation@@MethodName:isFalse:[] @AT@ 858 @LENGTH@ 28
------UPD SimpleName@@MethodName:equals:[new String(encryptor.encrypt("text".getBytes()))] @TO@ MethodName:isNotEqualTo:[new String(encryptor.encrypt("text".getBytes()))] @AT@ 887 @LENGTH@ 61


UPD MethodDeclaration@@public, voidMethodName:MockConnectionFactory, Service service,  @TO@ voidMethodName:MockConnectionFactory, Service service,  @AT@ 3043 @LENGTH@ 126
---DEL Modifier@@public @AT@ 3043 @LENGTH@ 6


UPD MethodDeclaration@@protected, void, MethodName:setUp, Exception,  @TO@ public, void, MethodName:setUp, Exception,  @AT@ 565 @LENGTH@ 121
---UPD Modifier@@protected @TO@ public @AT@ 565 @LENGTH@ 9


INS FieldDeclaration@@Date, [backdatedTime] @TO@ TypeDeclaration@@[@JsonIgnoreProperties(ignoreUnknown=true), abstract]AlbumMixin, FacebookObjectMixin @AT@ 1625 @LENGTH@ 19
---INS SimpleType@@Date @TO@ FieldDeclaration@@Date, [backdatedTime] @AT@ 1625 @LENGTH@ 4
---INS VariableDeclarationFragment@@backdatedTime @TO@ FieldDeclaration@@Date, [backdatedTime] @AT@ 1630 @LENGTH@ 13
------INS SimpleName@@backdatedTime @TO@ VariableDeclarationFragment@@backdatedTime @AT@ 1630 @LENGTH@ 13


UPD VariableDeclarationStatement@@String script="require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\").to_json\n" + "puts @claims"; @TO@ String script="require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\")[0].to_json\n" + "puts @claims"; @AT@ 2347 @LENGTH@ 131
---UPD VariableDeclarationFragment@@script="require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\").to_json\n" + "puts @claims" @TO@ script="require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\")[0].to_json\n" + "puts @claims" @AT@ 2354 @LENGTH@ 123
------UPD InfixExpression@@"require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\").to_json\n" + "puts @claims" @TO@ "require \"jwt\"\n" + "@claims = JWT.decode(@token, \"secret\", \"HS256\")[0].to_json\n" + "puts @claims" @AT@ 2367 @LENGTH@ 110
---------UPD StringLiteral@@"@claims = JWT.decode(@token, \"secret\", \"HS256\").to_json\n" @TO@ "@claims = JWT.decode(@token, \"secret\", \"HS256\")[0].to_json\n" @AT@ 2393 @LENGTH@ 63


UPD FieldDeclaration@@private, int, [port] @TO@ private, int, [dummy] @AT@ 1592 @LENGTH@ 17
---UPD VariableDeclarationFragment@@port @TO@ dummy @AT@ 1604 @LENGTH@ 4
------UPD SimpleName@@port @TO@ dummy @AT@ 1604 @LENGTH@ 4


UPD IfStatement@@if (e.isFailed()) {  LOG.error("Error setting up election node " + fullpath,e.getException());} else {  LOG.info("Candidate node '{}' has been created",fullpath);  try {    if (zep != null) {      camelContext.addRoutes(new ElectoralMonitorRoute(zep));    }  } catch (  Exception ex) {    LOG.error("Error configuring ZookeeperElection",ex);  }} @TO@ if (e.isFailed()) {  LOG.warn("Error setting up election node " + fullpath,e.getException());} else {  LOG.info("Candidate node '{}' has been created",fullpath);  try {    camelContext.addRoutes(new ElectoralMonitorRoute(zep));  } catch (  Exception ex) {    LOG.warn("Error configuring ZookeeperElection",ex);  }} @AT@ 6334 @LENGTH@ 473
---UPD Block@@ThenBody:{  LOG.error("Error setting up election node " + fullpath,e.getException());} @TO@ ThenBody:{  LOG.warn("Error setting up election node " + fullpath,e.getException());} @AT@ 6352 @LENGTH@ 98
------UPD ExpressionStatement@@MethodInvocation:LOG.error("Error setting up election node " + fullpath,e.getException()) @TO@ MethodInvocation:LOG.warn("Error setting up election node " + fullpath,e.getException()) @AT@ 6366 @LENGTH@ 74
---------UPD MethodInvocation@@LOG.error("Error setting up election node " + fullpath,e.getException()) @TO@ LOG.warn("Error setting up election node " + fullpath,e.getException()) @AT@ 6366 @LENGTH@ 73
------------UPD SimpleName@@MethodName:error:["Error setting up election node " + fullpath, e.getException()] @TO@ MethodName:warn:["Error setting up election node " + fullpath, e.getException()] @AT@ 6370 @LENGTH@ 69
---DEL Block@@ElseBody:{  LOG.info("Candidate node '{}' has been created",fullpath);  try {    if (zep != null) {      camelContext.addRoutes(new ElectoralMonitorRoute(zep));    }  } catch (  Exception ex) {    LOG.error("Error configuring ZookeeperElection",ex);  }} @AT@ 6456 @LENGTH@ 351
------DEL TryStatement@@try {  if (zep != null) {    camelContext.addRoutes(new ElectoralMonitorRoute(zep));  }} catch (Exception ex) {  LOG.error("Error configuring ZookeeperElection",ex);} @AT@ 6542 @LENGTH@ 255
---------DEL IfStatement@@if (zep != null) {  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} @AT@ 6564 @LENGTH@ 112
------------DEL InfixExpression@@zep != null @AT@ 6568 @LENGTH@ 11
---------------DEL SimpleName@@zep @AT@ 6568 @LENGTH@ 3
---------------DEL Operator@@!= @AT@ 6571 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 6575 @LENGTH@ 4
---------DEL CatchClause@@catch (Exception ex) {  LOG.error("Error configuring ZookeeperElection",ex);} @AT@ 6691 @LENGTH@ 106
------------DEL SingleVariableDeclaration@@Exception ex @AT@ 6698 @LENGTH@ 12
---------------DEL SimpleType@@Exception @AT@ 6698 @LENGTH@ 9
---------------DEL SimpleName@@ex @AT@ 6708 @LENGTH@ 2
------------DEL ExpressionStatement@@MethodInvocation:LOG.error("Error configuring ZookeeperElection",ex) @AT@ 6730 @LENGTH@ 53
---------------DEL MethodInvocation@@LOG.error("Error configuring ZookeeperElection",ex) @AT@ 6730 @LENGTH@ 52
------------------DEL SimpleName@@Name:LOG @AT@ 6730 @LENGTH@ 3
------------------DEL SimpleName@@MethodName:error:["Error configuring ZookeeperElection", ex] @AT@ 6734 @LENGTH@ 48
---------------------DEL StringLiteral@@"Error configuring ZookeeperElection" @AT@ 6740 @LENGTH@ 37
---------------------DEL SimpleName@@ex @AT@ 6779 @LENGTH@ 2
---MOV Block@@ThenBody:{  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} @TO@ IfStatement@@if (e.isFailed()) {  LOG.error("Error setting up election node " + fullpath,e.getException());} else {  LOG.info("Candidate node '{}' has been created",fullpath);  try {    if (zep != null) {      camelContext.addRoutes(new ElectoralMonitorRoute(zep));    }  } catch (  Exception ex) {    LOG.error("Error configuring ZookeeperElection",ex);  }} @AT@ 6581 @LENGTH@ 95
------MOV ExpressionStatement@@MethodInvocation:LOG.info("Candidate node '{}' has been created",fullpath) @TO@ Block@@ThenBody:{  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} @AT@ 6470 @LENGTH@ 59
------INS TryStatement@@try {  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @TO@ Block@@ThenBody:{  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} @AT@ 6541 @LENGTH@ 197
---------MOV ExpressionStatement@@MethodInvocation:camelContext.addRoutes(new ElectoralMonitorRoute(zep)) @TO@ TryStatement@@try {  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @AT@ 6603 @LENGTH@ 55
---------INS CatchClause@@catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @TO@ TryStatement@@try {  camelContext.addRoutes(new ElectoralMonitorRoute(zep));} catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @AT@ 6633 @LENGTH@ 105
------------INS SingleVariableDeclaration@@Exception ex @TO@ CatchClause@@catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @AT@ 6640 @LENGTH@ 12
---------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6640 @LENGTH@ 9
---------------INS SimpleName@@ex @TO@ SingleVariableDeclaration@@Exception ex @AT@ 6650 @LENGTH@ 2
------------INS ExpressionStatement@@MethodInvocation:LOG.warn("Error configuring ZookeeperElection",ex) @TO@ CatchClause@@catch (Exception ex) {  LOG.warn("Error configuring ZookeeperElection",ex);} @AT@ 6672 @LENGTH@ 52
---------------INS MethodInvocation@@LOG.warn("Error configuring ZookeeperElection",ex) @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Error configuring ZookeeperElection",ex) @AT@ 6672 @LENGTH@ 51
------------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Error configuring ZookeeperElection",ex) @AT@ 6672 @LENGTH@ 3
------------------INS SimpleName@@MethodName:warn:["Error configuring ZookeeperElection", ex] @TO@ MethodInvocation@@LOG.warn("Error configuring ZookeeperElection",ex) @AT@ 6676 @LENGTH@ 47
---------------------INS StringLiteral@@"Error configuring ZookeeperElection" @TO@ SimpleName@@MethodName:warn:["Error configuring ZookeeperElection", ex] @AT@ 6681 @LENGTH@ 37
---------------------INS SimpleName@@ex @TO@ SimpleName@@MethodName:warn:["Error configuring ZookeeperElection", ex] @AT@ 6720 @LENGTH@ 2


UPD VariableDeclarationStatement@@IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()); @TO@ IllegalArgumentException cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause()); @AT@ 1531 @LENGTH@ 98
---UPD VariableDeclarationFragment@@cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ cause=assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause()) @AT@ 1556 @LENGTH@ 72
------UPD MethodInvocation@@assertIsInstanceOf(IllegalArgumentException.class,e.getCause()) @TO@ assertIsInstanceOf(IllegalArgumentException.class,e.getCause().getCause()) @AT@ 1564 @LENGTH@ 64
---------UPD SimpleName@@MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause()] @TO@ MethodName:assertIsInstanceOf:[IllegalArgumentException.class, e.getCause().getCause()] @AT@ 1564 @LENGTH@ 64
------------UPD MethodInvocation@@e.getCause() @TO@ e.getCause().getCause() @AT@ 1615 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 1615 @LENGTH@ 12
---------------INS MethodInvocation@@MethodName:getCause:[] @TO@ MethodInvocation@@e.getCause() @AT@ 1615 @LENGTH@ 12


MOV FieldDeclaration@@public, BrokerRunning, [brokerIsRunning=BrokerRunning.isRunningWithEmptyQueues(ROUTE,REPLY_QUEUE.getName())] @TO@ TypeDeclaration@@[@ContextConfiguration, @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]RabbitTemplateIntegrationTests,  @AT@ 7643 @LENGTH@ 108


UPD Block@@ThenBody:{  String groupToken=isXml() ? null : token;  answer=ExpressionBuilder.groupIteratorExpression(answer,groupToken,group);} @TO@ ThenBody:{  if (isXml()) {    answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);  } else {    answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);  }} @AT@ 5028 @LENGTH@ 209
---INS IfStatement@@if (isXml()) {  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} else {  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @TO@ Block@@ThenBody:{  String groupToken=isXml() ? null : token;  answer=ExpressionBuilder.groupIteratorExpression(answer,groupToken,group);} @AT@ 5042 @LENGTH@ 225
------INS MethodInvocation@@MethodName:isXml:[] @TO@ IfStatement@@if (isXml()) {  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} else {  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @AT@ 5046 @LENGTH@ 7
------INS Block@@ThenBody:{  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} @TO@ IfStatement@@if (isXml()) {  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} else {  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @AT@ 5055 @LENGTH@ 101
---------INS ExpressionStatement@@Assignment:answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @TO@ Block@@ThenBody:{  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} @AT@ 5073 @LENGTH@ 69
------------INS Assignment@@answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @TO@ ExpressionStatement@@Assignment:answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5073 @LENGTH@ 68
---------------INS SimpleName@@answer @TO@ Assignment@@answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5073 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5079 @LENGTH@ 1
---------------INS MethodInvocation@@ExpressionBuilder.groupXmlIteratorExpression(answer,group) @TO@ Assignment@@answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5082 @LENGTH@ 59
------------------INS SimpleName@@Name:ExpressionBuilder @TO@ MethodInvocation@@ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5082 @LENGTH@ 17
------------------INS SimpleName@@MethodName:groupXmlIteratorExpression:[answer, group] @TO@ MethodInvocation@@ExpressionBuilder.groupXmlIteratorExpression(answer,group) @AT@ 5100 @LENGTH@ 41
---------------------INS SimpleName@@answer @TO@ SimpleName@@MethodName:groupXmlIteratorExpression:[answer, group] @AT@ 5127 @LENGTH@ 6
---------------------INS SimpleName@@group @TO@ SimpleName@@MethodName:groupXmlIteratorExpression:[answer, group] @AT@ 5135 @LENGTH@ 5
------INS Block@@ElseBody:{  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @TO@ IfStatement@@if (isXml()) {  answer=ExpressionBuilder.groupXmlIteratorExpression(answer,group);} else {  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @AT@ 5162 @LENGTH@ 105
---------MOV ExpressionStatement@@Assignment:answer=ExpressionBuilder.groupIteratorExpression(answer,groupToken,group) @TO@ Block@@ElseBody:{  answer=ExpressionBuilder.groupIteratorExpression(answer,token,group);} @AT@ 5149 @LENGTH@ 78
------------UPD Assignment@@answer=ExpressionBuilder.groupIteratorExpression(answer,groupToken,group) @TO@ answer=ExpressionBuilder.groupIteratorExpression(answer,token,group) @AT@ 5149 @LENGTH@ 77
---------------UPD MethodInvocation@@ExpressionBuilder.groupIteratorExpression(answer,groupToken,group) @TO@ ExpressionBuilder.groupIteratorExpression(answer,token,group) @AT@ 5158 @LENGTH@ 68
------------------UPD SimpleName@@MethodName:groupIteratorExpression:[answer, groupToken, group] @TO@ MethodName:groupIteratorExpression:[answer, token, group] @AT@ 5176 @LENGTH@ 50
---------------------UPD SimpleName@@groupToken @TO@ token @AT@ 5208 @LENGTH@ 10
---DEL VariableDeclarationStatement@@String groupToken=isXml() ? null : token; @AT@ 5093 @LENGTH@ 43
------DEL SimpleType@@String @AT@ 5093 @LENGTH@ 6
------DEL VariableDeclarationFragment@@groupToken=isXml() ? null : token @AT@ 5100 @LENGTH@ 35
---------DEL SimpleName@@groupToken @AT@ 5100 @LENGTH@ 10
---------DEL ConditionalExpression@@isXml() ? null : token @AT@ 5113 @LENGTH@ 22
------------DEL MethodInvocation@@MethodName:isXml:[] @AT@ 5113 @LENGTH@ 7
------------DEL NullLiteral@@null @AT@ 5123 @LENGTH@ 4
------------DEL SimpleName@@token @AT@ 5130 @LENGTH@ 5
---UPD ExpressionStatement@@Assignment:answer=ExpressionBuilder.groupIteratorExpression(answer,groupToken,group) @TO@ Assignment:answer=ExpressionBuilder.groupIteratorExpression(answer,token,group) @AT@ 5149 @LENGTH@ 78


UPD TypeDeclaration@@[@SuppressWarnings("unchecked"), public]ChannelDecisionManagerImplTests, TestCase @TO@ [@SuppressWarnings("unchecked"), public]ChannelDecisionManagerImplTests,  @AT@ 1493 @LENGTH@ 6308
---DEL SimpleType@@TestCase @AT@ 1577 @LENGTH@ 8


UPD VariableDeclarationStatement@@MethodMetadataBuilder methodBuilder=new MethodMetadataBuilder(getId(),Modifier.PUBLIC,new JavaSymbolName("auditorProvider"),new JavaType(AUDITOR_AWARE.getNameIncludingTypeParameters(false,importResolver),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)),parameterTypes,parameterNames,bodyBuilder); @TO@ MethodMetadataBuilder methodBuilder=new MethodMetadataBuilder(getId(),Modifier.PUBLIC,new JavaSymbolName("auditorProvider"),new JavaType(AUDITOR_AWARE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)),parameterTypes,parameterNames,bodyBuilder); @AT@ 5369 @LENGTH@ 361
---UPD VariableDeclarationFragment@@methodBuilder=new MethodMetadataBuilder(getId(),Modifier.PUBLIC,new JavaSymbolName("auditorProvider"),new JavaType(AUDITOR_AWARE.getNameIncludingTypeParameters(false,importResolver),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)),parameterTypes,parameterNames,bodyBuilder) @TO@ methodBuilder=new MethodMetadataBuilder(getId(),Modifier.PUBLIC,new JavaSymbolName("auditorProvider"),new JavaType(AUDITOR_AWARE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)),parameterTypes,parameterNames,bodyBuilder) @AT@ 5391 @LENGTH@ 338
------UPD ClassInstanceCreation@@MethodMetadataBuilder[getId(), Modifier.PUBLIC, new JavaSymbolName("auditorProvider"), new JavaType(AUDITOR_AWARE.getNameIncludingTypeParameters(false,importResolver),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)), parameterTypes, parameterNames, bodyBuilder] @TO@ MethodMetadataBuilder[getId(), Modifier.PUBLIC, new JavaSymbolName("auditorProvider"), new JavaType(AUDITOR_AWARE.getFullyQualifiedTypeName(),0,DataType.TYPE,null,Arrays.asList(JavaType.STRING)), parameterTypes, parameterNames, bodyBuilder] @AT@ 5415 @LENGTH@ 314
---------UPD ClassInstanceCreation@@JavaType[AUDITOR_AWARE.getNameIncludingTypeParameters(false,importResolver), 0, DataType.TYPE, null, Arrays.asList(JavaType.STRING)] @TO@ JavaType[AUDITOR_AWARE.getFullyQualifiedTypeName(), 0, DataType.TYPE, null, Arrays.asList(JavaType.STRING)] @AT@ 5518 @LENGTH@ 153
------------UPD MethodInvocation@@AUDITOR_AWARE.getNameIncludingTypeParameters(false,importResolver) @TO@ AUDITOR_AWARE.getFullyQualifiedTypeName() @AT@ 5531 @LENGTH@ 67
---------------UPD SimpleName@@MethodName:getNameIncludingTypeParameters:[false, importResolver] @TO@ MethodName:getFullyQualifiedTypeName:[] @AT@ 5545 @LENGTH@ 53
------------------DEL BooleanLiteral@@false @AT@ 5576 @LENGTH@ 5
------------------DEL SimpleName@@importResolver @AT@ 5583 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:String.format("Page %s of %d containing %s instances",getNumber(),getTotalPages(),contentType) @TO@ MethodInvocation:String.format("Page %s of %d containing %s instances",getNumber() + 1,getTotalPages(),contentType) @AT@ 3363 @LENGTH@ 105
---UPD MethodInvocation@@String.format("Page %s of %d containing %s instances",getNumber(),getTotalPages(),contentType) @TO@ String.format("Page %s of %d containing %s instances",getNumber() + 1,getTotalPages(),contentType) @AT@ 3370 @LENGTH@ 97
------UPD SimpleName@@MethodName:format:["Page %s of %d containing %s instances", getNumber(), getTotalPages(), contentType] @TO@ MethodName:format:["Page %s of %d containing %s instances", getNumber() + 1, getTotalPages(), contentType] @AT@ 3377 @LENGTH@ 90
---------INS InfixExpression@@getNumber() + 1 @TO@ SimpleName@@MethodName:format:["Page %s of %d containing %s instances", getNumber(), getTotalPages(), contentType] @AT@ 3425 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:getNumber:[] @TO@ InfixExpression@@getNumber() + 1 @AT@ 3425 @LENGTH@ 11
------------INS Operator@@+ @TO@ InfixExpression@@getNumber() + 1 @AT@ 3436 @LENGTH@ 1
------------INS NumberLiteral@@1 @TO@ InfixExpression@@getNumber() + 1 @AT@ 3437 @LENGTH@ 1
---------DEL MethodInvocation@@MethodName:getNumber:[] @AT@ 3425 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("netty4-http:http://0.0.0.0:" + port1 + "/foo").to("netty4-http:http://0.0.0.0:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false") @TO@ MethodInvocation:from("netty4-http:http://0.0.0.0:" + port1 + "/foo").to("netty4-http:http://localhost:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false") @AT@ 1543 @LENGTH@ 179
---UPD MethodInvocation@@from("netty4-http:http://0.0.0.0:" + port1 + "/foo").to("netty4-http:http://0.0.0.0:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false") @TO@ from("netty4-http:http://0.0.0.0:" + port1 + "/foo").to("netty4-http:http://localhost:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false") @AT@ 1543 @LENGTH@ 178
------UPD SimpleName@@MethodName:to:["netty4-http:http://0.0.0.0:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false"] @TO@ MethodName:to:["netty4-http:http://localhost:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false"] @AT@ 1621 @LENGTH@ 100
---------UPD InfixExpression@@"netty4-http:http://0.0.0.0:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false" @TO@ "netty4-http:http://localhost:" + port2 + "/bar?bridgeEndpoint=true&throwExceptionOnFailure=false" @AT@ 1624 @LENGTH@ 96
------------UPD StringLiteral@@"netty4-http:http://0.0.0.0:" @TO@ "netty4-http:http://localhost:" @AT@ 1624 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).onProperty("authority").containsOnly("USER","CUSTOM") @TO@ MethodInvocation:assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).extracting("authority").containsOnly("USER","CUSTOM") @AT@ 2917 @LENGTH@ 161
---UPD MethodInvocation@@assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).onProperty("authority").containsOnly("USER","CUSTOM") @TO@ assertThat(factory.createSecurityContext(withUser).getAuthentication().getAuthorities()).extracting("authority").containsOnly("USER","CUSTOM") @AT@ 2917 @LENGTH@ 160
------UPD MethodInvocation@@MethodName:onProperty:["authority"] @TO@ MethodName:extracting:["authority"] @AT@ 2917 @LENGTH@ 124


UPD MethodDeclaration@@public, voidMethodName:ZipkinRoutePolicy, String routeId,  @TO@ voidMethodName:ZipkinRoutePolicy, String routeId,  @AT@ 28634 @LENGTH@ 88
---DEL Modifier@@public @AT@ 28634 @LENGTH@ 6


DEL FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(KinesisComponent.class)] @AT@ 1122 @LENGTH@ 82
---DEL Modifier@@private @AT@ 1122 @LENGTH@ 7
---DEL Modifier@@static @AT@ 1130 @LENGTH@ 6
---DEL Modifier@@final @AT@ 1137 @LENGTH@ 5
---DEL SimpleType@@Logger @AT@ 1143 @LENGTH@ 6
---DEL VariableDeclarationFragment@@LOG=LoggerFactory.getLogger(KinesisComponent.class) @AT@ 1150 @LENGTH@ 53
------DEL SimpleName@@LOG @AT@ 1150 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(KinesisComponent.class) @AT@ 1156 @LENGTH@ 47
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1156 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[KinesisComponent.class] @AT@ 1170 @LENGTH@ 33
------------DEL TypeLiteral@@KinesisComponent.class @AT@ 1180 @LENGTH@ 22


UPD ExpressionStatement@@Assignment:content=deserialize(inputStream,this.deserializer) @TO@ Assignment:content=deserialize(inputStream) @AT@ 5351 @LENGTH@ 54
---UPD Assignment@@content=deserialize(inputStream,this.deserializer) @TO@ content=deserialize(inputStream) @AT@ 5351 @LENGTH@ 53
------UPD MethodInvocation@@deserialize(inputStream,this.deserializer) @TO@ deserialize(inputStream) @AT@ 5361 @LENGTH@ 43
---------UPD SimpleName@@MethodName:deserialize:[inputStream, this.deserializer] @TO@ MethodName:deserialize:[inputStream] @AT@ 5361 @LENGTH@ 43
------------DEL FieldAccess@@this.deserializer @AT@ 5386 @LENGTH@ 17
---------------DEL ThisExpression@@this @AT@ 5386 @LENGTH@ 4
---------------DEL SimpleName@@deserializer @AT@ 5391 @LENGTH@ 12
---------UPD SimpleName@@MethodName:deserialize:[inputStream, this.deserializer] @TO@ MethodName:deserialize:[inputStream] @AT@ 5361 @LENGTH@ 43
------------DEL FieldAccess@@this.deserializer @AT@ 5386 @LENGTH@ 17
---------------DEL ThisExpression@@this @AT@ 5386 @LENGTH@ 4
---------------DEL SimpleName@@deserializer @AT@ 5391 @LENGTH@ 12


UPD FieldDeclaration@@private, Collection<GrantedAuthority>, [expectedGrantedAuthorities] @TO@ private, Collection<? extends GrantedAuthority>, [expectedGrantedAuthorities] @AT@ 3078 @LENGTH@ 64
---UPD ParameterizedType@@Collection<GrantedAuthority> @TO@ Collection<? extends GrantedAuthority> @AT@ 3086 @LENGTH@ 28
------DEL SimpleType@@GrantedAuthority @AT@ 3097 @LENGTH@ 16
------INS WildcardType@@? @TO@ ParameterizedType@@Collection<GrantedAuthority> @AT@ 3122 @LENGTH@ 26


INS TryStatement@@try {  buffer.getBytes(readerIndex,bytes);}  finally {  buffer.release();} @TO@ MethodDeclaration@@public, static, byte[], MethodName:toByteArray, ByteBuf buffer, Exchange exchange,  @AT@ 1904 @LENGTH@ 114
---MOV ExpressionStatement@@MethodInvocation:buffer.getBytes(readerIndex,bytes) @TO@ TryStatement@@try {  buffer.getBytes(readerIndex,bytes);}  finally {  buffer.release();} @AT@ 1880 @LENGTH@ 36
---INS Block@@FinallyBody:{  buffer.release();} @TO@ TryStatement@@try {  buffer.getBytes(readerIndex,bytes);}  finally {  buffer.release();} @AT@ 1977 @LENGTH@ 41
------INS ExpressionStatement@@MethodInvocation:buffer.release() @TO@ Block@@FinallyBody:{  buffer.release();} @AT@ 1991 @LENGTH@ 17
---------INS MethodInvocation@@buffer.release() @TO@ ExpressionStatement@@MethodInvocation:buffer.release() @AT@ 1991 @LENGTH@ 16
------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.release() @AT@ 1991 @LENGTH@ 6
------------INS SimpleName@@MethodName:release:[] @TO@ MethodInvocation@@buffer.release() @AT@ 1998 @LENGTH@ 9


UPD TypeDeclaration@@[public]SimpleMappableRolesRetrieverTests, TestCase @TO@ [public]SimpleMappableRolesRetrieverTests,  @AT@ 310 @LENGTH@ 509
---DEL SimpleType@@TestCase @AT@ 365 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertThat(result.equals("password")).isFalse() @TO@ MethodInvocation:assertThat(result).isNotEqualTo("password") @AT@ 375 @LENGTH@ 48
---UPD MethodInvocation@@assertThat(result.equals("password")).isFalse() @TO@ assertThat(result).isNotEqualTo("password") @AT@ 375 @LENGTH@ 47
------INS MethodInvocation@@MethodName:assertThat:[result] @TO@ MethodInvocation@@assertThat(result.equals("password")).isFalse() @AT@ 346 @LENGTH@ 18
---------MOV SimpleName@@Name:result @TO@ MethodInvocation@@MethodName:assertThat:[result] @AT@ 386 @LENGTH@ 6
------DEL MethodInvocation@@MethodName:assertThat:[result.equals("password")] @AT@ 375 @LENGTH@ 37
---------DEL MethodInvocation@@result.equals("password") @AT@ 386 @LENGTH@ 25
------MOV SimpleName@@MethodName:equals:["password"] @TO@ MethodInvocation@@assertThat(result.equals("password")).isFalse() @AT@ 393 @LENGTH@ 18
------DEL SimpleName@@MethodName:isFalse:[] @AT@ 413 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertThat(entity.getHeaders().getLocation().toString(),not(endsWith("{?projection}"))) @TO@ MethodInvocation:assertThat(entity.getHeaders().getLocation().toString(),not(Matchers.endsWith("{?projection}"))) @AT@ 3967 @LENGTH@ 89
---UPD MethodInvocation@@assertThat(entity.getHeaders().getLocation().toString(),not(endsWith("{?projection}"))) @TO@ assertThat(entity.getHeaders().getLocation().toString(),not(Matchers.endsWith("{?projection}"))) @AT@ 3967 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertThat:[entity.getHeaders().getLocation().toString(), not(endsWith("{?projection}"))] @TO@ MethodName:assertThat:[entity.getHeaders().getLocation().toString(), not(Matchers.endsWith("{?projection}"))] @AT@ 3967 @LENGTH@ 88
---------UPD MethodInvocation@@not(endsWith("{?projection}")) @TO@ not(Matchers.endsWith("{?projection}")) @AT@ 4024 @LENGTH@ 30
------------UPD SimpleName@@MethodName:not:[endsWith("{?projection}")] @TO@ MethodName:not:[Matchers.endsWith("{?projection}")] @AT@ 4024 @LENGTH@ 30
---------------UPD MethodInvocation@@endsWith("{?projection}") @TO@ Matchers.endsWith("{?projection}") @AT@ 4028 @LENGTH@ 25
------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@endsWith("{?projection}") @AT@ 4165 @LENGTH@ 8
------------UPD SimpleName@@MethodName:not:[endsWith("{?projection}")] @TO@ MethodName:not:[Matchers.endsWith("{?projection}")] @AT@ 4024 @LENGTH@ 30
---------------UPD MethodInvocation@@endsWith("{?projection}") @TO@ Matchers.endsWith("{?projection}") @AT@ 4028 @LENGTH@ 25
------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@endsWith("{?projection}") @AT@ 4165 @LENGTH@ 8


UPD ExpressionStatement@@Assignment:message=converter.toMessage(foo,props) @TO@ MethodInvocation:converter.toMessage(foo,props) @AT@ 2252 @LENGTH@ 42
---DEL Assignment@@message=converter.toMessage(foo,props) @AT@ 2252 @LENGTH@ 41
------DEL SimpleName@@message @AT@ 2252 @LENGTH@ 7
------DEL Operator@@= @AT@ 2259 @LENGTH@ 1
------DEL MethodInvocation@@converter.toMessage(foo,props) @AT@ 2262 @LENGTH@ 31
---INS MethodInvocation@@converter.toMessage(foo,props) @TO@ ExpressionStatement@@Assignment:message=converter.toMessage(foo,props) @AT@ 2259 @LENGTH@ 31
------MOV SimpleName@@Name:converter @TO@ MethodInvocation@@converter.toMessage(foo,props) @AT@ 2262 @LENGTH@ 9
------MOV SimpleName@@MethodName:toMessage:[foo, props] @TO@ MethodInvocation@@converter.toMessage(foo,props) @AT@ 2272 @LENGTH@ 21


INS MethodDeclaration@@List<Person>, MethodName:findByFirstnameNotContains, String firstname,  @TO@ TypeDeclaration@@[public]PersonRepository, [MongoRepository<Person,String>, QueryDslPredicateExecutor<Person>] @AT@ 2903 @LENGTH@ 45
---INS ParameterizedType@@List<Person> @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameNotContains, String firstname,  @AT@ 2890 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<Person> @AT@ 2890 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@List<Person> @AT@ 2895 @LENGTH@ 6
---INS SimpleName@@MethodName:findByFirstnameNotContains @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameNotContains, String firstname,  @AT@ 2903 @LENGTH@ 26
---INS SingleVariableDeclaration@@String firstname @TO@ MethodDeclaration@@List<Person>, MethodName:findByFirstnameNotContains, String firstname,  @AT@ 2930 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String firstname @AT@ 2930 @LENGTH@ 6
------INS SimpleName@@firstname @TO@ SingleVariableDeclaration@@String firstname @AT@ 2937 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3720 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3720 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3739 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3753 @LENGTH@ 2


UPD ExpressionStatement@@Assignment:entry=jar.getEntry(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION) @TO@ Assignment:entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION) @AT@ 16781 @LENGTH@ 67
---UPD Assignment@@entry=jar.getEntry(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION) @TO@ entry=jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION) @AT@ 16781 @LENGTH@ 66
------UPD MethodInvocation@@jar.getEntry(WildFlySwarmBootstrapConf.CLASSPATH_LOCATION) @TO@ jar.getEntry(WildFlySwarmClasspathConf.CLASSPATH_LOCATION) @AT@ 16789 @LENGTH@ 58
---------UPD SimpleName@@MethodName:getEntry:[WildFlySwarmBootstrapConf.CLASSPATH_LOCATION] @TO@ MethodName:getEntry:[WildFlySwarmClasspathConf.CLASSPATH_LOCATION] @AT@ 16793 @LENGTH@ 54
------------UPD QualifiedName@@WildFlySwarmBootstrapConf.CLASSPATH_LOCATION @TO@ WildFlySwarmClasspathConf.CLASSPATH_LOCATION @AT@ 16802 @LENGTH@ 44
---------------UPD SimpleName@@WildFlySwarmBootstrapConf @TO@ WildFlySwarmClasspathConf @AT@ 16802 @LENGTH@ 25


UPD ExpressionStatement@@MethodInvocation:assertTrue(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")) @TO@ MethodInvocation:assertThat(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")).isTrue() @AT@ 2728 @LENGTH@ 95
---UPD MethodInvocation@@assertTrue(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")) @TO@ MethodName:assertThat:[md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")] @AT@ 2728 @LENGTH@ 94
---INS MethodInvocation@@assertThat(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")).isTrue() @TO@ ExpressionStatement@@MethodInvocation:assertTrue(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")) @AT@ 2744 @LENGTH@ 103
------MOV MethodInvocation@@assertTrue(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")) @TO@ MethodInvocation@@assertThat(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")).isTrue() @AT@ 2728 @LENGTH@ 94
---------DEL SimpleName@@MethodName:assertTrue:[md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")] @AT@ 2728 @LENGTH@ 94
---------MOV MethodInvocation@@md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart") @TO@ MethodInvocation@@assertTrue(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")) @AT@ 2739 @LENGTH@ 82
------INS SimpleName@@MethodName:isTrue:[] @TO@ MethodInvocation@@assertThat(md4.isPasswordValid("ZplT6P5Kv6Rlu6W4FIoYNA==","ww_uni123","Alan K Stewart")).isTrue() @AT@ 2839 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:Assert.assertThat(t1.equals(t2)).isFalse() @TO@ MethodInvocation:assertThat(t1).isNotEqualTo(t2) @AT@ 1093 @LENGTH@ 43
---UPD MethodInvocation@@Assert.assertThat(t1.equals(t2)).isFalse() @TO@ assertThat(t1).isNotEqualTo(t2) @AT@ 1093 @LENGTH@ 42
------DEL MethodInvocation@@MethodName:assertThat:[t1.equals(t2)] @AT@ 1093 @LENGTH@ 32
---------DEL MethodInvocation@@t1.equals(t2) @AT@ 1111 @LENGTH@ 13
------DEL SimpleName@@Name:Assert @AT@ 1093 @LENGTH@ 6
------INS MethodInvocation@@MethodName:assertThat:[t1] @TO@ MethodInvocation@@Assert.assertThat(t1.equals(t2)).isFalse() @AT@ 1104 @LENGTH@ 14
---------MOV SimpleName@@Name:t1 @TO@ MethodInvocation@@MethodName:assertThat:[t1] @AT@ 1111 @LENGTH@ 2
------MOV SimpleName@@MethodName:equals:[t2] @TO@ MethodInvocation@@Assert.assertThat(t1.equals(t2)).isFalse() @AT@ 1114 @LENGTH@ 10
------DEL SimpleName@@MethodName:isFalse:[] @AT@ 1126 @LENGTH@ 9


UPD CatchClause@@catch (StreamingIOFailure ex) {  expectedEx=ex;} @TO@ catch (StreamingIOFailure ex) {  expectedEx=ex;  txnBatch.getCurrentTransactionState();  txnBatch.getCurrentTxnId();} @AT@ 69769 @LENGTH@ 59
---INS ExpressionStatement@@MethodInvocation:txnBatch.getCurrentTransactionState() @TO@ CatchClause@@catch (StreamingIOFailure ex) {  expectedEx=ex;} @AT@ 69829 @LENGTH@ 38
------INS MethodInvocation@@txnBatch.getCurrentTransactionState() @TO@ ExpressionStatement@@MethodInvocation:txnBatch.getCurrentTransactionState() @AT@ 69829 @LENGTH@ 37
---------INS SimpleName@@Name:txnBatch @TO@ MethodInvocation@@txnBatch.getCurrentTransactionState() @AT@ 69829 @LENGTH@ 8
---------INS SimpleName@@MethodName:getCurrentTransactionState:[] @TO@ MethodInvocation@@txnBatch.getCurrentTransactionState() @AT@ 69838 @LENGTH@ 28
---INS ExpressionStatement@@MethodInvocation:txnBatch.getCurrentTxnId() @TO@ CatchClause@@catch (StreamingIOFailure ex) {  expectedEx=ex;} @AT@ 69874 @LENGTH@ 27
------INS MethodInvocation@@txnBatch.getCurrentTxnId() @TO@ ExpressionStatement@@MethodInvocation:txnBatch.getCurrentTxnId() @AT@ 69874 @LENGTH@ 26
---------INS SimpleName@@Name:txnBatch @TO@ MethodInvocation@@txnBatch.getCurrentTxnId() @AT@ 69874 @LENGTH@ 8
---------INS SimpleName@@MethodName:getCurrentTxnId:[] @TO@ MethodInvocation@@txnBatch.getCurrentTxnId() @AT@ 69883 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Creating connection with static configuration of {}",configuration) @TO@ MethodInvocation:LOG.debug("Creating connection to ZooKeeper: {}",configuration) @AT@ 1970 @LENGTH@ 80
---UPD MethodInvocation@@LOG.debug("Creating connection with static configuration of {}",configuration) @TO@ LOG.debug("Creating connection to ZooKeeper: {}",configuration) @AT@ 1970 @LENGTH@ 79
------UPD SimpleName@@MethodName:debug:["Creating connection with static configuration of {}", configuration] @TO@ MethodName:debug:["Creating connection to ZooKeeper: {}", configuration] @AT@ 1974 @LENGTH@ 75
---------UPD StringLiteral@@"Creating connection with static configuration of {}" @TO@ "Creating connection to ZooKeeper: {}" @AT@ 1980 @LENGTH@ 53


UPD TryStatement@@try {  doTestJavaPrimitiveObjectInspector(NullWritable.class,Void.class,null);  doTestJavaPrimitiveObjectInspector(BooleanWritable.class,Boolean.class,true);  doTestJavaPrimitiveObjectInspector(ByteWritable.class,Byte.class,(byte)1);  doTestJavaPrimitiveObjectInspector(ShortWritable.class,Short.class,(short)1);  doTestJavaPrimitiveObjectInspector(IntWritable.class,Integer.class,1);  doTestJavaPrimitiveObjectInspector(LongWritable.class,Long.class,(long)1);  doTestJavaPrimitiveObjectInspector(FloatWritable.class,Float.class,(float)1);  doTestJavaPrimitiveObjectInspector(DoubleWritable.class,Double.class,(double)1);  doTestJavaPrimitiveObjectInspector(Text.class,String.class,"a");  doTestJavaPrimitiveObjectInspector(BytesWritable.class,byte[].class,new byte[]{'3'});} catch (Throwable e) {  e.printStackTrace();  throw e;} @TO@ try {  doTestJavaPrimitiveObjectInspector(NullWritable.class,Void.class,null);  doTestJavaPrimitiveObjectInspector(BooleanWritable.class,Boolean.class,true);  doTestJavaPrimitiveObjectInspector(ByteWritable.class,Byte.class,(byte)1);  doTestJavaPrimitiveObjectInspector(ShortWritable.class,Short.class,(short)1);  doTestJavaPrimitiveObjectInspector(IntWritable.class,Integer.class,1);  doTestJavaPrimitiveObjectInspector(LongWritable.class,Long.class,(long)1);  doTestJavaPrimitiveObjectInspector(FloatWritable.class,Float.class,(float)1);  doTestJavaPrimitiveObjectInspector(DoubleWritable.class,Double.class,(double)1);  doTestJavaPrimitiveObjectInspector(Text.class,String.class,"a");  doTestJavaPrimitiveObjectInspector(HiveVarcharWritable.class,HiveVarchar.class,"a");  doTestJavaPrimitiveObjectInspector(HiveCharWritable.class,HiveChar.class,"a");  doTestJavaPrimitiveObjectInspector(BytesWritable.class,byte[].class,new byte[]{'3'});} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 5941 @LENGTH@ 986
---INS ExpressionStatement@@MethodInvocation:doTestJavaPrimitiveObjectInspector(HiveVarcharWritable.class,HiveVarchar.class,"a") @TO@ TryStatement@@try {  doTestJavaPrimitiveObjectInspector(NullWritable.class,Void.class,null);  doTestJavaPrimitiveObjectInspector(BooleanWritable.class,Boolean.class,true);  doTestJavaPrimitiveObjectInspector(ByteWritable.class,Byte.class,(byte)1);  doTestJavaPrimitiveObjectInspector(ShortWritable.class,Short.class,(short)1);  doTestJavaPrimitiveObjectInspector(IntWritable.class,Integer.class,1);  doTestJavaPrimitiveObjectInspector(LongWritable.class,Long.class,(long)1);  doTestJavaPrimitiveObjectInspector(FloatWritable.class,Float.class,(float)1);  doTestJavaPrimitiveObjectInspector(DoubleWritable.class,Double.class,(double)1);  doTestJavaPrimitiveObjectInspector(Text.class,String.class,"a");  doTestJavaPrimitiveObjectInspector(BytesWritable.class,byte[].class,new byte[]{'3'});} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 7219 @LENGTH@ 86
------INS MethodInvocation@@doTestJavaPrimitiveObjectInspector(HiveVarcharWritable.class,HiveVarchar.class,"a") @TO@ ExpressionStatement@@MethodInvocation:doTestJavaPrimitiveObjectInspector(HiveVarcharWritable.class,HiveVarchar.class,"a") @AT@ 7219 @LENGTH@ 85
---------INS SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveVarcharWritable.class, HiveVarchar.class, "a"] @TO@ MethodInvocation@@doTestJavaPrimitiveObjectInspector(HiveVarcharWritable.class,HiveVarchar.class,"a") @AT@ 7219 @LENGTH@ 85
------------INS TypeLiteral@@HiveVarcharWritable.class @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveVarcharWritable.class, HiveVarchar.class, "a"] @AT@ 7254 @LENGTH@ 25
------------INS TypeLiteral@@HiveVarchar.class @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveVarcharWritable.class, HiveVarchar.class, "a"] @AT@ 7281 @LENGTH@ 17
------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveVarcharWritable.class, HiveVarchar.class, "a"] @AT@ 7300 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:doTestJavaPrimitiveObjectInspector(HiveCharWritable.class,HiveChar.class,"a") @TO@ TryStatement@@try {  doTestJavaPrimitiveObjectInspector(NullWritable.class,Void.class,null);  doTestJavaPrimitiveObjectInspector(BooleanWritable.class,Boolean.class,true);  doTestJavaPrimitiveObjectInspector(ByteWritable.class,Byte.class,(byte)1);  doTestJavaPrimitiveObjectInspector(ShortWritable.class,Short.class,(short)1);  doTestJavaPrimitiveObjectInspector(IntWritable.class,Integer.class,1);  doTestJavaPrimitiveObjectInspector(LongWritable.class,Long.class,(long)1);  doTestJavaPrimitiveObjectInspector(FloatWritable.class,Float.class,(float)1);  doTestJavaPrimitiveObjectInspector(DoubleWritable.class,Double.class,(double)1);  doTestJavaPrimitiveObjectInspector(Text.class,String.class,"a");  doTestJavaPrimitiveObjectInspector(BytesWritable.class,byte[].class,new byte[]{'3'});} catch (Throwable e) {  e.printStackTrace();  throw e;} @AT@ 7312 @LENGTH@ 80
------INS MethodInvocation@@doTestJavaPrimitiveObjectInspector(HiveCharWritable.class,HiveChar.class,"a") @TO@ ExpressionStatement@@MethodInvocation:doTestJavaPrimitiveObjectInspector(HiveCharWritable.class,HiveChar.class,"a") @AT@ 7312 @LENGTH@ 79
---------INS SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveCharWritable.class, HiveChar.class, "a"] @TO@ MethodInvocation@@doTestJavaPrimitiveObjectInspector(HiveCharWritable.class,HiveChar.class,"a") @AT@ 7312 @LENGTH@ 79
------------INS TypeLiteral@@HiveCharWritable.class @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveCharWritable.class, HiveChar.class, "a"] @AT@ 7347 @LENGTH@ 22
------------INS TypeLiteral@@HiveChar.class @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveCharWritable.class, HiveChar.class, "a"] @AT@ 7371 @LENGTH@ 14
------------INS StringLiteral@@"a" @TO@ SimpleName@@MethodName:doTestJavaPrimitiveObjectInspector:[HiveCharWritable.class, HiveChar.class, "a"] @AT@ 7387 @LENGTH@ 3


UPD SwitchStatement@@switch (apiName) {case SHARED_COMMENTS:case SHARED_FILES:case SHARED_FOLDERS:case SHARED_ITEMS:  if (ObjectHelper.isEmpty(sharedLink)) {    throw new IllegalArgumentException("Missing required property sharedLink");  }default :} @TO@ switch (apiName) {case SHARED_COMMENTS:case SHARED_FILES:case SHARED_FOLDERS:case SHARED_ITEMS:  if (ObjectHelper.isEmpty(sharedLink)) {    throw new IllegalArgumentException("Missing required property sharedLink");  }break;default :} @AT@ 6737 @LENGTH@ 316
---INS BreakStatement@@ @TO@ SwitchStatement@@switch (apiName) {case SHARED_COMMENTS:case SHARED_FILES:case SHARED_FOLDERS:case SHARED_ITEMS:  if (ObjectHelper.isEmpty(sharedLink)) {    throw new IllegalArgumentException("Missing required property sharedLink");  }default :} @AT@ 7039 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:ZookeeperPolicyEnforcedContext, String name, Exception,  @TO@ voidMethodName:ZookeeperPolicyEnforcedContext, String name, Exception,  @AT@ 3066 @LENGTH@ 429
---DEL Modifier@@public @AT@ 3066 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Assert.assertNotNull(securityDomain) @TO@ MethodInvocation:Assert.checkNotNullParam("securityDomain",securityDomain) @AT@ 1954 @LENGTH@ 37
---UPD MethodInvocation@@Assert.assertNotNull(securityDomain) @TO@ Assert.checkNotNullParam("securityDomain",securityDomain) @AT@ 1954 @LENGTH@ 36
------UPD SimpleName@@MethodName:assertNotNull:[securityDomain] @TO@ MethodName:checkNotNullParam:["securityDomain", securityDomain] @AT@ 1961 @LENGTH@ 29
---------INS StringLiteral@@"securityDomain" @TO@ SimpleName@@MethodName:assertNotNull:[securityDomain] @AT@ 1979 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation:assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 755 @LENGTH@ 102
---UPD MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodName:assertThat:[request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 755 @LENGTH@ 101
---INS MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @TO@ ExpressionStatement@@MethodInvocation:assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 755 @LENGTH@ 101
------MOV MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 755 @LENGTH@ 101
---------DEL SimpleName@@MethodName:assertThat:[request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)] @AT@ 755 @LENGTH@ 101
---------MOV MethodInvocation@@request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST) @TO@ MethodInvocation@@assertThat(request.getSession().isNotNull().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)) @AT@ 766 @LENGTH@ 89
------------DEL MethodInvocation@@MethodName:isNotNull:[] @AT@ 766 @LENGTH@ 32
------INS SimpleName@@MethodName:isNotNull:[] @TO@ MethodInvocation@@assertThat(request.getSession().getAttribute(HttpSessionRequestCache.SAVED_REQUEST)).isNotNull() @AT@ 845 @LENGTH@ 11


UPD EnhancedForStatement@@for (String line : lines) {  String[] tokens=line.split("=");  if (null == System.getProperty(tokens[0]))   this.properties.put(tokens[0],tokens[1]); else   this.properties.put(tokens[0],System.getProperty(tokens[0]));} @TO@ for (String line : lines) {  int pos=line.indexOf('=');  String left=line.substring(0,pos);  if (null == System.getProperty(left))   this.properties.put(left,line.substring(pos + 1,line.length())); else   this.properties.put(left,System.getProperty(left));} @AT@ 818 @LENGTH@ 369
---UPD VariableDeclarationStatement@@String[] tokens=line.split("="); @TO@ String left=line.substring(0,pos); @AT@ 862 @LENGTH@ 34
------DEL ArrayType@@String[] @AT@ 862 @LENGTH@ 8
---------DEL SimpleType@@String @AT@ 862 @LENGTH@ 6
------UPD VariableDeclarationFragment@@tokens=line.split("=") @TO@ left=line.substring(0,pos) @AT@ 871 @LENGTH@ 24
---------UPD SimpleName@@tokens @TO@ left @AT@ 871 @LENGTH@ 6
---------UPD MethodInvocation@@line.split("=") @TO@ line.substring(0,pos) @AT@ 880 @LENGTH@ 15
------------UPD SimpleName@@MethodName:split:["="] @TO@ MethodName:substring:[0, pos] @AT@ 885 @LENGTH@ 10
---------------DEL StringLiteral@@"=" @AT@ 891 @LENGTH@ 3
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:split:["="] @AT@ 936 @LENGTH@ 1
---------------INS SimpleName@@pos @TO@ SimpleName@@MethodName:split:["="] @AT@ 939 @LENGTH@ 3
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String[] tokens=line.split("="); @AT@ 907 @LENGTH@ 6
---INS VariableDeclarationStatement@@int pos=line.indexOf('='); @TO@ EnhancedForStatement@@for (String line : lines) {  String[] tokens=line.split("=");  if (null == System.getProperty(tokens[0]))   this.properties.put(tokens[0],tokens[1]); else   this.properties.put(tokens[0],System.getProperty(tokens[0]));} @AT@ 862 @LENGTH@ 28
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int pos=line.indexOf('='); @AT@ 862 @LENGTH@ 3
------INS VariableDeclarationFragment@@pos=line.indexOf('=') @TO@ VariableDeclarationStatement@@int pos=line.indexOf('='); @AT@ 866 @LENGTH@ 23
---------INS SimpleName@@pos @TO@ VariableDeclarationFragment@@pos=line.indexOf('=') @AT@ 866 @LENGTH@ 3
---------INS MethodInvocation@@line.indexOf('=') @TO@ VariableDeclarationFragment@@pos=line.indexOf('=') @AT@ 872 @LENGTH@ 17
------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.indexOf('=') @AT@ 872 @LENGTH@ 4
------------INS SimpleName@@MethodName:indexOf:['='] @TO@ MethodInvocation@@line.indexOf('=') @AT@ 877 @LENGTH@ 12
---------------INS CharacterLiteral@@'=' @TO@ SimpleName@@MethodName:indexOf:['='] @AT@ 885 @LENGTH@ 3
---UPD IfStatement@@if (null == System.getProperty(tokens[0])) this.properties.put(tokens[0],tokens[1]); else this.properties.put(tokens[0],System.getProperty(tokens[0])); @TO@ if (null == System.getProperty(left)) this.properties.put(left,line.substring(pos + 1,line.length())); else this.properties.put(left,System.getProperty(left)); @AT@ 967 @LENGTH@ 206
------UPD InfixExpression@@null == System.getProperty(tokens[0]) @TO@ null == System.getProperty(left) @AT@ 970 @LENGTH@ 35
---------UPD MethodInvocation@@System.getProperty(tokens[0]) @TO@ System.getProperty(left) @AT@ 976 @LENGTH@ 29
------------UPD SimpleName@@MethodName:getProperty:[tokens[0]] @TO@ MethodName:getProperty:[left] @AT@ 983 @LENGTH@ 22
---------------DEL ArrayAccess@@tokens[0] @AT@ 995 @LENGTH@ 9
------------------DEL SimpleName@@tokens @AT@ 995 @LENGTH@ 6
------------------DEL NumberLiteral@@0 @AT@ 1002 @LENGTH@ 1
---------------INS SimpleName@@left @TO@ SimpleName@@MethodName:getProperty:[tokens[0]] @AT@ 1043 @LENGTH@ 4
------UPD Block@@ThenBody:this.properties.put(tokens[0],tokens[1]); @TO@ ThenBody:this.properties.put(left,line.substring(pos + 1,line.length())); @AT@ 1027 @LENGTH@ 42
---------UPD ExpressionStatement@@MethodInvocation:this.properties.put(tokens[0],tokens[1]) @TO@ MethodInvocation:this.properties.put(left,line.substring(pos + 1,line.length())) @AT@ 1027 @LENGTH@ 42
------------UPD MethodInvocation@@this.properties.put(tokens[0],tokens[1]) @TO@ this.properties.put(left,line.substring(pos + 1,line.length())) @AT@ 1027 @LENGTH@ 41
---------------UPD SimpleName@@MethodName:put:[tokens[0], tokens[1]] @TO@ MethodName:put:[left, line.substring(pos + 1,line.length())] @AT@ 1043 @LENGTH@ 25
------------------DEL ArrayAccess@@tokens[0] @AT@ 1047 @LENGTH@ 9
---------------------DEL SimpleName@@tokens @AT@ 1047 @LENGTH@ 6
---------------------DEL NumberLiteral@@0 @AT@ 1054 @LENGTH@ 1
------------------DEL ArrayAccess@@tokens[1] @AT@ 1058 @LENGTH@ 9
---------------------DEL SimpleName@@tokens @AT@ 1058 @LENGTH@ 6
---------------------DEL NumberLiteral@@1 @AT@ 1065 @LENGTH@ 1
------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:put:[tokens[0], tokens[1]] @AT@ 1090 @LENGTH@ 4
------------------INS MethodInvocation@@line.substring(pos + 1,line.length()) @TO@ SimpleName@@MethodName:put:[tokens[0], tokens[1]] @AT@ 1096 @LENGTH@ 38
---------------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.substring(pos + 1,line.length()) @AT@ 1096 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:substring:[pos + 1, line.length()] @TO@ MethodInvocation@@line.substring(pos + 1,line.length()) @AT@ 1101 @LENGTH@ 33
------------------------INS InfixExpression@@pos + 1 @TO@ SimpleName@@MethodName:substring:[pos + 1, line.length()] @AT@ 1111 @LENGTH@ 7
---------------------------INS SimpleName@@pos @TO@ InfixExpression@@pos + 1 @AT@ 1111 @LENGTH@ 3
---------------------------INS Operator@@+ @TO@ InfixExpression@@pos + 1 @AT@ 1114 @LENGTH@ 1
---------------------------INS NumberLiteral@@1 @TO@ InfixExpression@@pos + 1 @AT@ 1117 @LENGTH@ 1
------------------------INS MethodInvocation@@line.length() @TO@ SimpleName@@MethodName:substring:[pos + 1, line.length()] @AT@ 1120 @LENGTH@ 13
---------------------------INS SimpleName@@Name:line @TO@ MethodInvocation@@line.length() @AT@ 1120 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@line.length() @AT@ 1125 @LENGTH@ 8
------UPD Block@@ElseBody:this.properties.put(tokens[0],System.getProperty(tokens[0])); @TO@ ElseBody:this.properties.put(left,System.getProperty(left)); @AT@ 1111 @LENGTH@ 62
---------UPD ExpressionStatement@@MethodInvocation:this.properties.put(tokens[0],System.getProperty(tokens[0])) @TO@ MethodInvocation:this.properties.put(left,System.getProperty(left)) @AT@ 1111 @LENGTH@ 62
------------UPD MethodInvocation@@this.properties.put(tokens[0],System.getProperty(tokens[0])) @TO@ this.properties.put(left,System.getProperty(left)) @AT@ 1111 @LENGTH@ 61
---------------UPD SimpleName@@MethodName:put:[tokens[0], System.getProperty(tokens[0])] @TO@ MethodName:put:[left, System.getProperty(left)] @AT@ 1127 @LENGTH@ 45
------------------DEL ArrayAccess@@tokens[0] @AT@ 1131 @LENGTH@ 9
---------------------DEL SimpleName@@tokens @AT@ 1131 @LENGTH@ 6
---------------------DEL NumberLiteral@@0 @AT@ 1138 @LENGTH@ 1
------------------UPD MethodInvocation@@System.getProperty(tokens[0]) @TO@ System.getProperty(left) @AT@ 1142 @LENGTH@ 29
---------------------UPD SimpleName@@MethodName:getProperty:[tokens[0]] @TO@ MethodName:getProperty:[left] @AT@ 1149 @LENGTH@ 22
------------------------DEL ArrayAccess@@tokens[0] @AT@ 1161 @LENGTH@ 9
---------------------------DEL SimpleName@@tokens @AT@ 1161 @LENGTH@ 6
---------------------------DEL NumberLiteral@@0 @AT@ 1168 @LENGTH@ 1
------------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:getProperty:[tokens[0]] @AT@ 1223 @LENGTH@ 4
------------------INS SimpleName@@left @TO@ SimpleName@@MethodName:put:[tokens[0], System.getProperty(tokens[0])] @AT@ 1198 @LENGTH@ 4


UPD ReturnStatement@@BooleanLiteral:false @TO@ BooleanLiteral:true @AT@ 4346 @LENGTH@ 13
---UPD BooleanLiteral@@false @TO@ true @AT@ 4353 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:xslt.setCamelContext(context) @AT@ 5806 @LENGTH@ 30
---DEL MethodInvocation@@xslt.setCamelContext(context) @AT@ 5806 @LENGTH@ 29
------DEL SimpleName@@Name:xslt @AT@ 5806 @LENGTH@ 4
------DEL SimpleName@@MethodName:setCamelContext:[context] @AT@ 5811 @LENGTH@ 24
---------DEL SimpleName@@context @AT@ 5827 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:MyAsyncProcessor,  @TO@ voidMethodName:MyAsyncProcessor,  @AT@ 2538 @LENGTH@ 294
---DEL Modifier@@public @AT@ 2538 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:UndertowProducerCallback, ClientConnection connection, ByteBuffer body, Exchange camelExchange, AsyncCallback callback,  @TO@ voidMethodName:UndertowProducerCallback, ClientConnection connection, ByteBuffer body, Exchange camelExchange, AsyncCallback callback,  @AT@ 5565 @LENGTH@ 295
---DEL Modifier@@public @AT@ 5565 @LENGTH@ 6


UPD EnumDeclaration@@[static]TestMethod, [ApiMethod] @TO@ TestMethod, [ApiMethod] @AT@ 8228 @LENGTH@ 1406
---DEL Modifier@@static @AT@ 8228 @LENGTH@ 6
---UPD MethodDeclaration@@private, voidMethodName:TestMethod, Class<?> resultType, String name, Object... args,  @TO@ voidMethodName:TestMethod, Class<?> resultType, String name, Object... args,  @AT@ 8896 @LENGTH@ 169
------DEL Modifier@@private @AT@ 8896 @LENGTH@ 7


UPD TypeDeclaration@@[public, static, abstract]ProjectMixin,  @TO@ [@JsonIgnoreProperties(ignoreUnknown=true), public, static, abstract]ProjectMixin,  @AT@ 1485 @LENGTH@ 288
---INS NormalAnnotation@@@JsonIgnoreProperties(ignoreUnknown=true) @TO@ TypeDeclaration@@[public, static, abstract]ProjectMixin,  @AT@ 1483 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:assertTrue("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @TO@ MethodInvocation:assertThat(resultColl.containsAll(expectedColl)).withFailMessage("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 6774 @LENGTH@ 185
---UPD MethodInvocation@@assertTrue("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @TO@ assertThat(resultColl.containsAll(expectedColl)).withFailMessage("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl).isTrue() @AT@ 6774 @LENGTH@ 184
------DEL SimpleName@@MethodName:assertTrue:["Role collections should match; result: " + resultColl + ", expected: "+ expectedColl, expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)] @AT@ 6774 @LENGTH@ 184
---------DEL InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6785 @LENGTH@ 90
---------DEL InfixExpression@@expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl) @AT@ 6877 @LENGTH@ 80
------------DEL MethodInvocation@@expectedColl.containsAll(resultColl) @AT@ 6877 @LENGTH@ 36
---------------DEL SimpleName@@Name:expectedColl @AT@ 6877 @LENGTH@ 12
------------DEL Operator@@&& @AT@ 6913 @LENGTH@ 2
------INS MethodInvocation@@MethodName:withFailMessage:["Role collections should match; result: " + resultColl + ", expected: "+ expectedColl] @TO@ MethodInvocation@@assertTrue("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @AT@ 6780 @LENGTH@ 156
---------INS InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @TO@ MethodInvocation@@MethodName:withFailMessage:["Role collections should match; result: " + resultColl + ", expected: "+ expectedColl] @AT@ 6845 @LENGTH@ 90
------------MOV StringLiteral@@"Role collections should match; result: " @TO@ InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6785 @LENGTH@ 41
------------MOV Operator@@+ @TO@ InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6826 @LENGTH@ 1
------------MOV SimpleName@@resultColl @TO@ InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6829 @LENGTH@ 10
------------MOV StringLiteral@@", expected: " @TO@ InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6846 @LENGTH@ 14
------------MOV SimpleName@@expectedColl @TO@ InfixExpression@@"Role collections should match; result: " + resultColl + ", expected: "+ expectedColl @AT@ 6863 @LENGTH@ 12
------INS MethodInvocation@@MethodName:assertThat:[resultColl.containsAll(expectedColl)] @TO@ MethodInvocation@@assertTrue("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @AT@ 6780 @LENGTH@ 48
---------MOV MethodInvocation@@resultColl.containsAll(expectedColl) @TO@ MethodInvocation@@MethodName:assertThat:[resultColl.containsAll(expectedColl)] @AT@ 6921 @LENGTH@ 36
------MOV SimpleName@@MethodName:containsAll:[resultColl] @TO@ MethodInvocation@@assertTrue("Role collections should match; result: " + resultColl + ", expected: "+ expectedColl,expectedColl.containsAll(resultColl) && resultColl.containsAll(expectedColl)) @AT@ 6890 @LENGTH@ 23
---------DEL SimpleName@@resultColl @AT@ 6902 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:websocketComponent.setMaxThreads(11) @TO@ MethodInvocation:websocketComponent.setMaxThreads(20) @AT@ 3396 @LENGTH@ 37
---UPD MethodInvocation@@websocketComponent.setMaxThreads(11) @TO@ websocketComponent.setMaxThreads(20) @AT@ 3396 @LENGTH@ 36
------UPD SimpleName@@MethodName:setMaxThreads:[11] @TO@ MethodName:setMaxThreads:[20] @AT@ 3415 @LENGTH@ 17
---------UPD NumberLiteral@@11 @TO@ 20 @AT@ 3429 @LENGTH@ 2


UPD IfStatement@@if (resolvedCh == '$') {  getDefaultHandler().handle(ctx);} else {  getHandler(resolvedCh).handle(ctx);} @TO@ if (resolvedCh == '$' && originalLength == ctx.getInput().length()) {  getDefaultHandler().handle(ctx);} else {  getHandler(resolvedCh).handle(ctx);} @AT@ 2842 @LENGTH@ 175
---DEL InfixExpression@@resolvedCh == '$' @AT@ 2845 @LENGTH@ 17
---INS InfixExpression@@resolvedCh == '$' && originalLength == ctx.getInput().length() @TO@ IfStatement@@if (resolvedCh == '$') {  getDefaultHandler().handle(ctx);} else {  getHandler(resolvedCh).handle(ctx);} @AT@ 2913 @LENGTH@ 62
------INS InfixExpression@@resolvedCh == '$' @TO@ InfixExpression@@resolvedCh == '$' && originalLength == ctx.getInput().length() @AT@ 2913 @LENGTH@ 17
---------MOV SimpleName@@resolvedCh @TO@ InfixExpression@@resolvedCh == '$' @AT@ 2845 @LENGTH@ 10
---------MOV Operator@@== @TO@ InfixExpression@@resolvedCh == '$' @AT@ 2855 @LENGTH@ 2
---------MOV CharacterLiteral@@'$' @TO@ InfixExpression@@resolvedCh == '$' @AT@ 2859 @LENGTH@ 3
------INS Operator@@&& @TO@ InfixExpression@@resolvedCh == '$' && originalLength == ctx.getInput().length() @AT@ 2930 @LENGTH@ 2
------INS InfixExpression@@originalLength == ctx.getInput().length() @TO@ InfixExpression@@resolvedCh == '$' && originalLength == ctx.getInput().length() @AT@ 2934 @LENGTH@ 41
---------INS SimpleName@@originalLength @TO@ InfixExpression@@originalLength == ctx.getInput().length() @AT@ 2934 @LENGTH@ 14
---------INS Operator@@== @TO@ InfixExpression@@originalLength == ctx.getInput().length() @AT@ 2948 @LENGTH@ 2
---------INS MethodInvocation@@ctx.getInput().length() @TO@ InfixExpression@@originalLength == ctx.getInput().length() @AT@ 2952 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:getInput:[] @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2952 @LENGTH@ 14
------------INS SimpleName@@Name:ctx @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2952 @LENGTH@ 3
------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@ctx.getInput().length() @AT@ 2967 @LENGTH@ 8


INS ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)) @TO@ MethodDeclaration@@public, void, MethodName:deploy, DeploymentPhaseContext phaseContext, DeploymentUnitProcessingException,  @AT@ 3782 @LENGTH@ 116
---INS MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)) @TO@ ExpressionStatement@@MethodInvocation:moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)) @AT@ 3782 @LENGTH@ 115
------INS SimpleName@@Name:moduleSpecification @TO@ MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)) @AT@ 3782 @LENGTH@ 19
------INS SimpleName@@MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)] @TO@ MethodInvocation@@moduleSpecification.addSystemDependency(new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)) @AT@ 3802 @LENGTH@ 95
---------INS ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @TO@ SimpleName@@MethodName:addSystemDependency:[new ModuleDependency(moduleLoader,JAX_RPC_API,false,false,true,false)] @AT@ 3822 @LENGTH@ 74
------------INS New@@new @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3822 @LENGTH@ 3
------------INS SimpleType@@ModuleDependency @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3826 @LENGTH@ 16
------------INS SimpleName@@moduleLoader @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3843 @LENGTH@ 12
------------INS SimpleName@@JAX_RPC_API @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3857 @LENGTH@ 11
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3870 @LENGTH@ 5
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3877 @LENGTH@ 5
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3884 @LENGTH@ 4
------------INS BooleanLiteral@@false @TO@ ClassInstanceCreation@@ModuleDependency[moduleLoader, JAX_RPC_API, false, false, true, false] @AT@ 3890 @LENGTH@ 5


DEL ReturnStatement@@SimpleName:fieldsObject @AT@ 2067 @LENGTH@ 20


UPD VariableDeclarationStatement@@BeanDefinition expressionDef=null; @TO@ BeanDefinition expressionDef; @AT@ 13710 @LENGTH@ 36
---UPD VariableDeclarationFragment@@expressionDef=null @TO@ expressionDef @AT@ 13725 @LENGTH@ 20
------DEL NullLiteral@@null @AT@ 13741 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:ContinuousQueryEventListener, String cacheName,  @TO@ voidMethodName:ContinuousQueryEventListener, String cacheName,  @AT@ 5376 @LENGTH@ 105
---DEL Modifier@@public @AT@ 5376 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint, Exception,  @TO@ voidMethodName:MyProducer, Endpoint endpoint, Exception,  @AT@ 1333 @LENGTH@ 115
---DEL Modifier@@public @AT@ 1333 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:TypeInfo, final String typeName, final QName elName,  @TO@ voidMethodName:TypeInfo, final String typeName, final QName elName,  @AT@ 1227 @LENGTH@ 130
---DEL Modifier@@public @AT@ 1227 @LENGTH@ 6


UPD EnhancedForStatement@@for (ClassOrInterfaceTypeDetails dto : dtosInProject) {  String name=replaceTopLevelPackageString(dto,currentText);  if (!allPossibleValues.contains(name)) {    allPossibleValues.add(name);  }} @TO@ for (ClassOrInterfaceTypeDetails entity : entities) {  String name=replaceTopLevelPackageString(entity,currentText);  if (!allPossibleValues.contains(name)) {    allPossibleValues.add(name);  }} @AT@ 5674 @LENGTH@ 221
---UPD SingleVariableDeclaration@@ClassOrInterfaceTypeDetails dto @TO@ ClassOrInterfaceTypeDetails entity @AT@ 5679 @LENGTH@ 31
------UPD SimpleName@@dto @TO@ entity @AT@ 5707 @LENGTH@ 3
---UPD SimpleName@@dtosInProject @TO@ entities @AT@ 5713 @LENGTH@ 13
---UPD VariableDeclarationStatement@@String name=replaceTopLevelPackageString(dto,currentText); @TO@ String name=replaceTopLevelPackageString(entity,currentText); @AT@ 5736 @LENGTH@ 61
------UPD VariableDeclarationFragment@@name=replaceTopLevelPackageString(dto,currentText) @TO@ name=replaceTopLevelPackageString(entity,currentText) @AT@ 5743 @LENGTH@ 53
---------UPD MethodInvocation@@replaceTopLevelPackageString(dto,currentText) @TO@ replaceTopLevelPackageString(entity,currentText) @AT@ 5750 @LENGTH@ 46
------------UPD SimpleName@@MethodName:replaceTopLevelPackageString:[dto, currentText] @TO@ MethodName:replaceTopLevelPackageString:[entity, currentText] @AT@ 5750 @LENGTH@ 46
---------------UPD SimpleName@@dto @TO@ entity @AT@ 5779 @LENGTH@ 3


UPD TryStatement@@try {  OutputStream out=null;  if (stdout != null) {    final String value=stdout.trim().toLowerCase(Locale.ENGLISH);    if ("system.out".equals(value)) {      out=System.out;    } else     if ("system.err".equals(value)) {      out=System.err;    } else     if ("none".equals(value)) {      out=null;    } else {      final Path path=Paths.get(value);      if (Files.notExists(path)) {        final Path parent=path.getParent();        if (parent != null) {          Files.createDirectories(parent);        }        Files.createFile(path);      }      out=new BufferedOutputStream(Files.newOutputStream(path));    }  }  final Server server=Server.create(createCommandBuilder(jbossHome),env,createClient(),out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);  server.checkServerState();} catch (Exception e) {  throw new MojoExecutionException("The server failed to start",e);} @TO@ try {  OutputStream out=null;  if (stdout != null) {    final String value=stdout.trim().toLowerCase(Locale.ENGLISH);    if ("system.out".equals(value)) {      out=System.out;    } else     if ("system.err".equals(value)) {      out=System.err;    } else     if ("none".equals(value)) {      out=null;    } else {      final Path path=Paths.get(value);      if (Files.notExists(path)) {        final Path parent=path.getParent();        if (parent != null) {          Files.createDirectories(parent);        }        Files.createFile(path);      }      out=new BufferedOutputStream(Files.newOutputStream(path));    }  }  try (final ModelControllerClient client=createClient()){    final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);    log.info(String.format("%s server is starting up.",serverType));    server.start(startupTimeout);  } } catch (Exception e) {  throw new MojoExecutionException("The server failed to start",e);} @AT@ 9347 @LENGTH@ 1549
---UPD VariableDeclarationStatement@@final Server server=Server.create(createCommandBuilder(jbossHome),env,createClient(),out); @TO@ final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out); @AT@ 10489 @LENGTH@ 95
---INS TryStatement@@try (final ModelControllerClient client=createClient()){  final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);}  @TO@ TryStatement@@try {  OutputStream out=null;  if (stdout != null) {    final String value=stdout.trim().toLowerCase(Locale.ENGLISH);    if ("system.out".equals(value)) {      out=System.out;    } else     if ("system.err".equals(value)) {      out=System.err;    } else     if ("none".equals(value)) {      out=null;    } else {      final Path path=Paths.get(value);      if (Files.notExists(path)) {        final Path parent=path.getParent();        if (parent != null) {          Files.createDirectories(parent);        }        Files.createFile(path);      }      out=new BufferedOutputStream(Files.newOutputStream(path));    }  }  final Server server=Server.create(createCommandBuilder(jbossHome),env,createClient(),out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);  server.checkServerState();} catch (Exception e) {  throw new MojoExecutionException("The server failed to start",e);} @AT@ 10626 @LENGTH@ 341
------MOV VariableDeclarationStatement@@final Server server=Server.create(createCommandBuilder(jbossHome),env,createClient(),out); @TO@ TryStatement@@try (final ModelControllerClient client=createClient()){  final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);}  @AT@ 10489 @LENGTH@ 95
---------UPD VariableDeclarationFragment@@server=Server.create(createCommandBuilder(jbossHome),env,createClient(),out) @TO@ server=Server.create(createCommandBuilder(jbossHome),env,client,out) @AT@ 10502 @LENGTH@ 81
------------UPD MethodInvocation@@Server.create(createCommandBuilder(jbossHome),env,createClient(),out) @TO@ Server.create(createCommandBuilder(jbossHome),env,client,out) @AT@ 10511 @LENGTH@ 72
---------------UPD SimpleName@@MethodName:create:[createCommandBuilder(jbossHome), env, createClient(), out] @TO@ MethodName:create:[createCommandBuilder(jbossHome), env, client, out] @AT@ 10518 @LENGTH@ 65
------------------DEL MethodInvocation@@MethodName:createClient:[] @AT@ 10563 @LENGTH@ 14
------------------INS SimpleName@@client @TO@ SimpleName@@MethodName:create:[createCommandBuilder(jbossHome), env, createClient(), out] @AT@ 10776 @LENGTH@ 6
------MOV ExpressionStatement@@MethodInvocation:log.info(String.format("%s server is starting up.",serverType)) @TO@ TryStatement@@try (final ModelControllerClient client=createClient()){  final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);}  @AT@ 10629 @LENGTH@ 65
------INS VariableDeclarationExpression@@final ModelControllerClient client=createClient() @TO@ TryStatement@@try (final ModelControllerClient client=createClient()){  final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);}  @AT@ 10631 @LENGTH@ 51
---------INS Modifier@@final @TO@ VariableDeclarationExpression@@final ModelControllerClient client=createClient() @AT@ 10631 @LENGTH@ 5
---------INS SimpleType@@ModelControllerClient @TO@ VariableDeclarationExpression@@final ModelControllerClient client=createClient() @AT@ 10637 @LENGTH@ 21
---------INS VariableDeclarationFragment@@client=createClient() @TO@ VariableDeclarationExpression@@final ModelControllerClient client=createClient() @AT@ 10659 @LENGTH@ 23
------------INS SimpleName@@client @TO@ VariableDeclarationFragment@@client=createClient() @AT@ 10659 @LENGTH@ 6
------------INS MethodInvocation@@MethodName:createClient:[] @TO@ VariableDeclarationFragment@@client=createClient() @AT@ 10668 @LENGTH@ 14
------MOV ExpressionStatement@@MethodInvocation:server.start(startupTimeout) @TO@ TryStatement@@try (final ModelControllerClient client=createClient()){  final Server server=Server.create(createCommandBuilder(jbossHome),env,client,out);  log.info(String.format("%s server is starting up.",serverType));  server.start(startupTimeout);}  @AT@ 10707 @LENGTH@ 29
---DEL ExpressionStatement@@MethodInvocation:server.checkServerState() @AT@ 10749 @LENGTH@ 26
------DEL MethodInvocation@@server.checkServerState() @AT@ 10749 @LENGTH@ 25
---------DEL SimpleName@@Name:server @AT@ 10749 @LENGTH@ 6
---------DEL SimpleName@@MethodName:checkServerState:[] @AT@ 10756 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:Assert.assertThat(auth).isNotNull() @TO@ MethodInvocation:assertThat(auth).isNotNull() @AT@ 2311 @LENGTH@ 36
---UPD MethodInvocation@@Assert.assertThat(auth).isNotNull() @TO@ assertThat(auth).isNotNull() @AT@ 2311 @LENGTH@ 35
------DEL SimpleName@@Name:Assert @AT@ 2311 @LENGTH@ 6


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Usage: java %s [algorithm] [FILE|DIRECTORY]",Digest.class.getName())) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Usage: java %s [algorithm] [FILE|DIRECTORY|string]",Digest.class.getName())) @AT@ 2318 @LENGTH@ 143
---UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Usage: java %s [algorithm] [FILE|DIRECTORY]",Digest.class.getName())] @TO@ IllegalArgumentException[String.format("Usage: java %s [algorithm] [FILE|DIRECTORY|string]",Digest.class.getName())] @AT@ 2324 @LENGTH@ 136
------UPD MethodInvocation@@String.format("Usage: java %s [algorithm] [FILE|DIRECTORY]",Digest.class.getName()) @TO@ String.format("Usage: java %s [algorithm] [FILE|DIRECTORY|string]",Digest.class.getName()) @AT@ 2375 @LENGTH@ 84
---------UPD SimpleName@@MethodName:format:["Usage: java %s [algorithm] [FILE|DIRECTORY]", Digest.class.getName()] @TO@ MethodName:format:["Usage: java %s [algorithm] [FILE|DIRECTORY|string]", Digest.class.getName()] @AT@ 2382 @LENGTH@ 77
------------UPD StringLiteral@@"Usage: java %s [algorithm] [FILE|DIRECTORY]" @TO@ "Usage: java %s [algorithm] [FILE|DIRECTORY|string]" @AT@ 2389 @LENGTH@ 45


UPD VariableDeclarationStatement@@String fallbackName=rawType.getSimpleName(); @TO@ String defaultRegionName=rawType.getSimpleName(); @AT@ 1550 @LENGTH@ 46
---UPD VariableDeclarationFragment@@fallbackName=rawType.getSimpleName() @TO@ defaultRegionName=rawType.getSimpleName() @AT@ 1557 @LENGTH@ 38
------UPD SimpleName@@fallbackName @TO@ defaultRegionName @AT@ 1557 @LENGTH@ 12


UPD TypeDeclaration@@[public]SessionInformationTests, TestCase @TO@ [public]SessionInformationTests,  @AT@ 870 @LENGTH@ 724
---DEL SimpleType@@TestCase @AT@ 915 @LENGTH@ 8


UPD MethodDeclaration@@private, voidMethodName:OAuthScope, String value,  @TO@ voidMethodName:OAuthScope, String value,  @AT@ 1352 @LENGTH@ 68
---DEL Modifier@@private @AT@ 1352 @LENGTH@ 7


UPD VariableDeclarationStatement@@HttpEndpoint http2=context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345",HttpEndpoint.class); @TO@ HttpEndpoint http2=context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345",HttpEndpoint.class); @AT@ 3888 @LENGTH@ 156
---UPD VariableDeclarationFragment@@http2=context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345",HttpEndpoint.class) @TO@ http2=context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345",HttpEndpoint.class) @AT@ 3901 @LENGTH@ 142
------UPD MethodInvocation@@context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345",HttpEndpoint.class) @TO@ context.getEndpoint("http4://www.google.com?test=parameter&proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345",HttpEndpoint.class) @AT@ 3909 @LENGTH@ 134
---------UPD SimpleName@@MethodName:getEndpoint:["http4://www.google.com?test=parameter&proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345", HttpEndpoint.class] @TO@ MethodName:getEndpoint:["http4://www.google.com?test=parameter&proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345", HttpEndpoint.class] @AT@ 3917 @LENGTH@ 126
------------UPD StringLiteral@@"http4://www.google.com?test=parameter&proxyAuthHost=www.myotherproxy.com&proxyAuthPort=2345" @TO@ "http4://www.google.com?test=parameter&proxyAuthHost=www.otherproxy.com&proxyAuthPort=2345" @AT@ 3929 @LENGTH@ 93


DEL VariableDeclarationStatement@@ArrayList<Object> results=Lists.newArrayList(Iterators.toArray(iter,Object.class)); @AT@ 4864 @LENGTH@ 86
---DEL ParameterizedType@@ArrayList<Object> @AT@ 4864 @LENGTH@ 17
------DEL SimpleType@@ArrayList @AT@ 4864 @LENGTH@ 9
------DEL SimpleType@@Object @AT@ 4874 @LENGTH@ 6
---DEL VariableDeclarationFragment@@results=Lists.newArrayList(Iterators.toArray(iter,Object.class)) @AT@ 4882 @LENGTH@ 67
------DEL SimpleName@@results @AT@ 4882 @LENGTH@ 7
------DEL MethodInvocation@@Lists.newArrayList(Iterators.toArray(iter,Object.class)) @AT@ 4892 @LENGTH@ 57
---------DEL SimpleName@@Name:Lists @AT@ 4892 @LENGTH@ 5
---------DEL SimpleName@@MethodName:newArrayList:[Iterators.toArray(iter,Object.class)] @AT@ 4898 @LENGTH@ 51
------------DEL MethodInvocation@@Iterators.toArray(iter,Object.class) @AT@ 4911 @LENGTH@ 37
---------------DEL SimpleName@@Name:Iterators @AT@ 4911 @LENGTH@ 9
---------------DEL SimpleName@@MethodName:toArray:[iter, Object.class] @AT@ 4921 @LENGTH@ 27
------------------DEL SimpleName@@iter @AT@ 4929 @LENGTH@ 4
------------------DEL TypeLiteral@@Object.class @AT@ 4935 @LENGTH@ 12


UPD MethodDeclaration@@public, voidMethodName:DeclarationExceptionEvent, RabbitAdmin source, Declarable declarable, Throwable t,  @TO@ public, voidMethodName:DeclarationExceptionEvent, Object source, Declarable declarable, Throwable t,  @AT@ 1048 @LENGTH@ 164
---UPD SingleVariableDeclaration@@RabbitAdmin source @TO@ Object source @AT@ 1081 @LENGTH@ 18
------UPD SimpleType@@RabbitAdmin @TO@ Object @AT@ 1081 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:relBuilder.convert(union.getRowType(),false) @TO@ MethodDeclaration@@public, void, MethodName:onMatch, RelOptRuleCall call,  @AT@ 5289 @LENGTH@ 46
---INS MethodInvocation@@relBuilder.convert(union.getRowType(),false) @TO@ ExpressionStatement@@MethodInvocation:relBuilder.convert(union.getRowType(),false) @AT@ 5289 @LENGTH@ 45
------INS SimpleName@@Name:relBuilder @TO@ MethodInvocation@@relBuilder.convert(union.getRowType(),false) @AT@ 5289 @LENGTH@ 10
------INS SimpleName@@MethodName:convert:[union.getRowType(), false] @TO@ MethodInvocation@@relBuilder.convert(union.getRowType(),false) @AT@ 5300 @LENGTH@ 34
---------INS MethodInvocation@@union.getRowType() @TO@ SimpleName@@MethodName:convert:[union.getRowType(), false] @AT@ 5308 @LENGTH@ 18
------------INS SimpleName@@Name:union @TO@ MethodInvocation@@union.getRowType() @AT@ 5308 @LENGTH@ 5
------------INS SimpleName@@MethodName:getRowType:[] @TO@ MethodInvocation@@union.getRowType() @AT@ 5314 @LENGTH@ 12
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:convert:[union.getRowType(), false] @AT@ 5328 @LENGTH@ 5


INS VariableDeclarationStatement@@byte[] refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue); @TO@ MethodDeclaration@@public, void, MethodName:removeRefreshToken, String tokenValue,  @AT@ 11147 @LENGTH@ 64
---INS ArrayType@@byte[] @TO@ VariableDeclarationStatement@@byte[] refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue); @AT@ 11147 @LENGTH@ 6
------INS PrimitiveType@@byte @TO@ ArrayType@@byte[] @AT@ 11147 @LENGTH@ 4
---INS VariableDeclarationFragment@@refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue) @TO@ VariableDeclarationStatement@@byte[] refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue); @AT@ 11154 @LENGTH@ 56
------INS SimpleName@@refreshAuthKey @TO@ VariableDeclarationFragment@@refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue) @AT@ 11154 @LENGTH@ 14
------INS MethodInvocation@@serializeKey(REFRESH_AUTH + tokenValue) @TO@ VariableDeclarationFragment@@refreshAuthKey=serializeKey(REFRESH_AUTH + tokenValue) @AT@ 11171 @LENGTH@ 39
---------INS SimpleName@@MethodName:serializeKey:[REFRESH_AUTH + tokenValue] @TO@ MethodInvocation@@serializeKey(REFRESH_AUTH + tokenValue) @AT@ 11171 @LENGTH@ 39
------------INS InfixExpression@@REFRESH_AUTH + tokenValue @TO@ SimpleName@@MethodName:serializeKey:[REFRESH_AUTH + tokenValue] @AT@ 11184 @LENGTH@ 25
---------------INS SimpleName@@REFRESH_AUTH @TO@ InfixExpression@@REFRESH_AUTH + tokenValue @AT@ 11184 @LENGTH@ 12
---------------INS Operator@@+ @TO@ InfixExpression@@REFRESH_AUTH + tokenValue @AT@ 11196 @LENGTH@ 1
---------------INS SimpleName@@tokenValue @TO@ InfixExpression@@REFRESH_AUTH + tokenValue @AT@ 11199 @LENGTH@ 10


UPD MethodDeclaration@@public, voidMethodName:RabbitAdminEvent, RabbitAdmin source,  @TO@ public, voidMethodName:RabbitAdminEvent, Object source,  @AT@ 901 @LENGTH@ 65
---UPD SingleVariableDeclaration@@RabbitAdmin source @TO@ Object source @AT@ 925 @LENGTH@ 18
------UPD SimpleType@@RabbitAdmin @TO@ Object @AT@ 925 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:assertNull(HiveBaseChar.getPaddedValue(null,0)) @TO@ MethodDeclaration@@public, void, MethodName:testGetPaddedValue,  @AT@ 3598 @LENGTH@ 49
---INS MethodInvocation@@assertNull(HiveBaseChar.getPaddedValue(null,0)) @TO@ ExpressionStatement@@MethodInvocation:assertNull(HiveBaseChar.getPaddedValue(null,0)) @AT@ 3598 @LENGTH@ 48
------INS SimpleName@@MethodName:assertNull:[HiveBaseChar.getPaddedValue(null,0)] @TO@ MethodInvocation@@assertNull(HiveBaseChar.getPaddedValue(null,0)) @AT@ 3598 @LENGTH@ 48
---------INS MethodInvocation@@HiveBaseChar.getPaddedValue(null,0) @TO@ SimpleName@@MethodName:assertNull:[HiveBaseChar.getPaddedValue(null,0)] @AT@ 3609 @LENGTH@ 36
------------INS SimpleName@@Name:HiveBaseChar @TO@ MethodInvocation@@HiveBaseChar.getPaddedValue(null,0) @AT@ 3609 @LENGTH@ 12
------------INS SimpleName@@MethodName:getPaddedValue:[null, 0] @TO@ MethodInvocation@@HiveBaseChar.getPaddedValue(null,0) @AT@ 3622 @LENGTH@ 23
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:getPaddedValue:[null, 0] @AT@ 3637 @LENGTH@ 4
---------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getPaddedValue:[null, 0] @AT@ 3643 @LENGTH@ 1


UPD IfStatement@@if (!source.getReturnType().isAssignableFrom(target.getReturnType())) {  return false;} @TO@ if (!source.getReturnType().isAssignableFrom(target.getReturnType())) {  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 50114 @LENGTH@ 115
---INS Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @TO@ IfStatement@@if (!source.getReturnType().isAssignableFrom(target.getReturnType())) {  return false;} @AT@ 50184 @LENGTH@ 243
------INS VariableDeclarationStatement@@boolean b1=source.isBridge(); @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 50202 @LENGTH@ 31
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean b1=source.isBridge(); @AT@ 50202 @LENGTH@ 7
---------INS VariableDeclarationFragment@@b1=source.isBridge() @TO@ VariableDeclarationStatement@@boolean b1=source.isBridge(); @AT@ 50210 @LENGTH@ 22
------------INS SimpleName@@b1 @TO@ VariableDeclarationFragment@@b1=source.isBridge() @AT@ 50210 @LENGTH@ 2
------------INS MethodInvocation@@source.isBridge() @TO@ VariableDeclarationFragment@@b1=source.isBridge() @AT@ 50215 @LENGTH@ 17
---------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.isBridge() @AT@ 50215 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isBridge:[] @TO@ MethodInvocation@@source.isBridge() @AT@ 50222 @LENGTH@ 10
------INS VariableDeclarationStatement@@boolean b2=target.isBridge(); @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 50250 @LENGTH@ 31
---------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean b2=target.isBridge(); @AT@ 50250 @LENGTH@ 7
---------INS VariableDeclarationFragment@@b2=target.isBridge() @TO@ VariableDeclarationStatement@@boolean b2=target.isBridge(); @AT@ 50258 @LENGTH@ 22
------------INS SimpleName@@b2 @TO@ VariableDeclarationFragment@@b2=target.isBridge() @AT@ 50258 @LENGTH@ 2
------------INS MethodInvocation@@target.isBridge() @TO@ VariableDeclarationFragment@@b2=target.isBridge() @AT@ 50263 @LENGTH@ 17
---------------INS SimpleName@@Name:target @TO@ MethodInvocation@@target.isBridge() @AT@ 50263 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isBridge:[] @TO@ MethodInvocation@@target.isBridge() @AT@ 50270 @LENGTH@ 10
------INS IfStatement@@if (!b1 && !b2) {  return false;} @TO@ Block@@ThenBody:{  boolean b1=source.isBridge();  boolean b2=target.isBridge();  if (!b1 && !b2) {    return false;  }} @AT@ 50344 @LENGTH@ 69
---------MOV Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (!b1 && !b2) {  return false;} @AT@ 50184 @LENGTH@ 45
---------INS InfixExpression@@!b1 && !b2 @TO@ IfStatement@@if (!b1 && !b2) {  return false;} @AT@ 50348 @LENGTH@ 10
------------INS PrefixExpression@@!b1 @TO@ InfixExpression@@!b1 && !b2 @AT@ 50348 @LENGTH@ 3
---------------INS Operator@@! @TO@ PrefixExpression@@!b1 @AT@ 50348 @LENGTH@ 1
---------------INS SimpleName@@b1 @TO@ PrefixExpression@@!b1 @AT@ 50349 @LENGTH@ 2
------------INS Operator@@&& @TO@ InfixExpression@@!b1 && !b2 @AT@ 50351 @LENGTH@ 2
------------INS PrefixExpression@@!b2 @TO@ InfixExpression@@!b1 && !b2 @AT@ 50355 @LENGTH@ 3
---------------INS Operator@@! @TO@ PrefixExpression@@!b2 @AT@ 50355 @LENGTH@ 1
---------------INS SimpleName@@b2 @TO@ PrefixExpression@@!b2 @AT@ 50356 @LENGTH@ 2


INS ExpressionStatement@@MethodInvocation:from("timer:status").bean(health,"invoke").log("Health is ${body}") @TO@ MethodDeclaration@@public, void, MethodName:configure,  @AT@ 1446 @LENGTH@ 95
---INS MethodInvocation@@from("timer:status").bean(health,"invoke").log("Health is ${body}") @TO@ ExpressionStatement@@MethodInvocation:from("timer:status").bean(health,"invoke").log("Health is ${body}") @AT@ 1446 @LENGTH@ 94
------INS MethodInvocation@@MethodName:bean:[health, "invoke"] @TO@ MethodInvocation@@from("timer:status").bean(health,"invoke").log("Health is ${body}") @AT@ 1446 @LENGTH@ 56
---------INS SimpleName@@health @TO@ MethodInvocation@@MethodName:bean:[health, "invoke"] @AT@ 1485 @LENGTH@ 6
---------INS StringLiteral@@"invoke" @TO@ MethodInvocation@@MethodName:bean:[health, "invoke"] @AT@ 1493 @LENGTH@ 8
------INS MethodInvocation@@MethodName:from:["timer:status"] @TO@ MethodInvocation@@from("timer:status").bean(health,"invoke").log("Health is ${body}") @AT@ 1446 @LENGTH@ 20
---------INS StringLiteral@@"timer:status" @TO@ MethodInvocation@@MethodName:from:["timer:status"] @AT@ 1451 @LENGTH@ 14
------INS SimpleName@@MethodName:log:["Health is ${body}"] @TO@ MethodInvocation@@from("timer:status").bean(health,"invoke").log("Health is ${body}") @AT@ 1516 @LENGTH@ 24
---------INS StringLiteral@@"Health is ${body}" @TO@ SimpleName@@MethodName:log:["Health is ${body}"] @AT@ 1520 @LENGTH@ 19


INS ExpressionStatement@@MethodInvocation:activators.add(new ConsulTopologyConnectorActivator()) @TO@ MethodDeclaration@@public, List<ServiceActivator>, MethodName:getServiceActivators, ConsulTopologyFraction fraction,  @AT@ 1460 @LENGTH@ 55
---INS MethodInvocation@@activators.add(new ConsulTopologyConnectorActivator()) @TO@ ExpressionStatement@@MethodInvocation:activators.add(new ConsulTopologyConnectorActivator()) @AT@ 1460 @LENGTH@ 54
------INS SimpleName@@Name:activators @TO@ MethodInvocation@@activators.add(new ConsulTopologyConnectorActivator()) @AT@ 1460 @LENGTH@ 10
------INS SimpleName@@MethodName:add:[new ConsulTopologyConnectorActivator()] @TO@ MethodInvocation@@activators.add(new ConsulTopologyConnectorActivator()) @AT@ 1471 @LENGTH@ 43
---------INS ClassInstanceCreation@@ConsulTopologyConnectorActivator[] @TO@ SimpleName@@MethodName:add:[new ConsulTopologyConnectorActivator()] @AT@ 1475 @LENGTH@ 38
------------INS New@@new @TO@ ClassInstanceCreation@@ConsulTopologyConnectorActivator[] @AT@ 1475 @LENGTH@ 3
------------INS SimpleType@@ConsulTopologyConnectorActivator @TO@ ClassInstanceCreation@@ConsulTopologyConnectorActivator[] @AT@ 1479 @LENGTH@ 32


UPD MethodDeclaration@@public, AuthenticatedMatcher, MethodName:withAuthorities, Collection<GrantedAuthority> expected,  @TO@ public, AuthenticatedMatcher, MethodName:withAuthorities, Collection<? extends GrantedAuthority> expected,  @AT@ 6818 @LENGTH@ 151
---UPD SingleVariableDeclaration@@Collection<GrantedAuthority> expected @TO@ Collection<? extends GrantedAuthority> expected @AT@ 6862 @LENGTH@ 37
------UPD ParameterizedType@@Collection<GrantedAuthority> @TO@ Collection<? extends GrantedAuthority> @AT@ 6862 @LENGTH@ 28
---------DEL SimpleType@@GrantedAuthority @AT@ 6873 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@Collection<GrantedAuthority> @AT@ 6908 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:log.debug("Staring CamelContext: {}",context.getName()) @TO@ MethodInvocation:log.debug("Starting CamelContext: {}",context.getName()) @AT@ 11315 @LENGTH@ 57
---UPD MethodInvocation@@log.debug("Staring CamelContext: {}",context.getName()) @TO@ log.debug("Starting CamelContext: {}",context.getName()) @AT@ 11315 @LENGTH@ 56
------UPD SimpleName@@MethodName:debug:["Staring CamelContext: {}", context.getName()] @TO@ MethodName:debug:["Starting CamelContext: {}", context.getName()] @AT@ 11319 @LENGTH@ 52
---------UPD StringLiteral@@"Staring CamelContext: {}" @TO@ "Starting CamelContext: {}" @AT@ 11325 @LENGTH@ 26


UPD FieldDeclaration@@public, static, final, String, [CHIMERA_CRYPTO_CIPHER_SUITE_KEY="chimera.crypto.cipher.suite"] @TO@ public, static, final, String, [CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_KEY="chimera.crypto.cipher.transformation"] @AT@ 1110 @LENGTH@ 97
---UPD VariableDeclarationFragment@@CHIMERA_CRYPTO_CIPHER_SUITE_KEY="chimera.crypto.cipher.suite" @TO@ CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_KEY="chimera.crypto.cipher.transformation" @AT@ 1137 @LENGTH@ 69
------UPD SimpleName@@CHIMERA_CRYPTO_CIPHER_SUITE_KEY @TO@ CHIMERA_CRYPTO_CIPHER_TRANSFORMATION_KEY @AT@ 1137 @LENGTH@ 31
------UPD StringLiteral@@"chimera.crypto.cipher.suite" @TO@ "chimera.crypto.cipher.transformation" @AT@ 1177 @LENGTH@ 29


UPD MethodDeclaration@@private, voidMethodName:DockerOperation, String text, boolean canConsume, boolean canProduce, Object... params,  @TO@ voidMethodName:DockerOperation, String text, boolean canConsume, boolean canProduce, Object... params,  @AT@ 10098 @LENGTH@ 752
---DEL Modifier@@private @AT@ 10098 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPNettyDecoder,  @TO@ voidMethodName:HL7MLLPNettyDecoder,  @AT@ 1540 @LENGTH@ 71
---DEL Modifier@@public @AT@ 1540 @LENGTH@ 6


UPD VariableDeclarationStatement@@String out=template.requestBody("netty4-http:http://0.0.0.0:{{port}}/SHoppING/HelloWorld","Camel",String.class); @TO@ String out=template.requestBody("netty4-http:http://localhost:{{port}}/SHoppING/HelloWorld","Camel",String.class); @AT@ 1189 @LENGTH@ 116
---UPD VariableDeclarationFragment@@out=template.requestBody("netty4-http:http://0.0.0.0:{{port}}/SHoppING/HelloWorld","Camel",String.class) @TO@ out=template.requestBody("netty4-http:http://localhost:{{port}}/SHoppING/HelloWorld","Camel",String.class) @AT@ 1196 @LENGTH@ 108
------UPD MethodInvocation@@template.requestBody("netty4-http:http://0.0.0.0:{{port}}/SHoppING/HelloWorld","Camel",String.class) @TO@ template.requestBody("netty4-http:http://localhost:{{port}}/SHoppING/HelloWorld","Camel",String.class) @AT@ 1202 @LENGTH@ 102
---------UPD SimpleName@@MethodName:requestBody:["netty4-http:http://0.0.0.0:{{port}}/SHoppING/HelloWorld", "Camel", String.class] @TO@ MethodName:requestBody:["netty4-http:http://localhost:{{port}}/SHoppING/HelloWorld", "Camel", String.class] @AT@ 1211 @LENGTH@ 93
------------UPD StringLiteral@@"netty4-http:http://0.0.0.0:{{port}}/SHoppING/HelloWorld" @TO@ "netty4-http:http://localhost:{{port}}/SHoppING/HelloWorld" @AT@ 1223 @LENGTH@ 57


UPD ExpressionStatement@@MethodInvocation:assertArrayEquals(new Object[]{"bar","foo"},wrapper.getParameterValues("action")) @TO@ MethodInvocation:assertThat(wrapper.getParameterValues("action")).isEqualTo(new Object[]{"bar","foo"}) @AT@ 5324 @LENGTH@ 91
---UPD MethodInvocation@@assertArrayEquals(new Object[]{"bar","foo"},wrapper.getParameterValues("action")) @TO@ assertThat(wrapper.getParameterValues("action")).isEqualTo(new Object[]{"bar","foo"}) @AT@ 5324 @LENGTH@ 90
------INS MethodInvocation@@MethodName:assertThat:[wrapper.getParameterValues("action")] @TO@ MethodInvocation@@assertArrayEquals(new Object[]{"bar","foo"},wrapper.getParameterValues("action")) @AT@ 5324 @LENGTH@ 48
---------MOV MethodInvocation@@wrapper.getParameterValues("action") @TO@ MethodInvocation@@MethodName:assertThat:[wrapper.getParameterValues("action")] @AT@ 5377 @LENGTH@ 36
------UPD SimpleName@@MethodName:assertArrayEquals:[new Object[]{"bar","foo"}, wrapper.getParameterValues("action")] @TO@ MethodName:isEqualTo:[new Object[]{"bar","foo"}] @AT@ 5324 @LENGTH@ 90


UPD MethodDeclaration@@public, voidMethodName:HL7MLLPConfigAwareChannelHandlerFactory, HL7MLLPConfig config,  @TO@ voidMethodName:HL7MLLPConfigAwareChannelHandlerFactory, HL7MLLPConfig config,  @AT@ 1255 @LENGTH@ 106
---DEL Modifier@@public @AT@ 1255 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testConsumeTemplate, Exception,  @AT@ 1316 @LENGTH@ 16
---INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 1316 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 1316 @LENGTH@ 7
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 1324 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:notify=new NotifyBuilder(context).whenDone(4).create() @TO@ Assignment:notify=new NotifyBuilder(context).whenDone(2).create() @AT@ 2606 @LENGTH@ 57
---UPD Assignment@@notify=new NotifyBuilder(context).whenDone(4).create() @TO@ notify=new NotifyBuilder(context).whenDone(2).create() @AT@ 2606 @LENGTH@ 56
------UPD MethodInvocation@@new NotifyBuilder(context).whenDone(4).create() @TO@ new NotifyBuilder(context).whenDone(2).create() @AT@ 2615 @LENGTH@ 47
---------UPD MethodInvocation@@MethodName:whenDone:[4] @TO@ MethodName:whenDone:[2] @AT@ 2615 @LENGTH@ 38
------------UPD NumberLiteral@@4 @TO@ 2 @AT@ 2651 @LENGTH@ 1


UPD EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @TO@ for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=false;  Object entityIdentifier=null;  PersistentEntity<?,?> entity=resourceInformation.getPersistentEntity();  if (objectToUpdate != null) {    forUpdate=true;    entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();  }  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  if (entityIdentifier != null) {    entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);  }  Builder build=PersistentEntityResource.build(obj,entity);  return forUpdate ? build.build() : build.forCreation();} @AT@ 5798 @LENGTH@ 732
---DEL VariableDeclarationStatement@@boolean forUpdate=objectToUpdate != null; @AT@ 6127 @LENGTH@ 43
------DEL VariableDeclarationFragment@@forUpdate=objectToUpdate != null @AT@ 6135 @LENGTH@ 34
---------DEL InfixExpression@@objectToUpdate != null @AT@ 6147 @LENGTH@ 22
---INS VariableDeclarationStatement@@boolean forUpdate=false; @TO@ EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @AT@ 6186 @LENGTH@ 26
------MOV PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean forUpdate=false; @AT@ 6127 @LENGTH@ 7
------INS VariableDeclarationFragment@@forUpdate=false @TO@ VariableDeclarationStatement@@boolean forUpdate=false; @AT@ 6194 @LENGTH@ 17
---------MOV SimpleName@@forUpdate @TO@ VariableDeclarationFragment@@forUpdate=false @AT@ 6135 @LENGTH@ 9
---------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@forUpdate=false @AT@ 6206 @LENGTH@ 5
---INS VariableDeclarationStatement@@Object entityIdentifier=null; @TO@ EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @AT@ 6216 @LENGTH@ 31
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object entityIdentifier=null; @AT@ 6216 @LENGTH@ 6
------INS VariableDeclarationFragment@@entityIdentifier=null @TO@ VariableDeclarationStatement@@Object entityIdentifier=null; @AT@ 6223 @LENGTH@ 23
---------INS SimpleName@@entityIdentifier @TO@ VariableDeclarationFragment@@entityIdentifier=null @AT@ 6223 @LENGTH@ 16
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@entityIdentifier=null @AT@ 6242 @LENGTH@ 4
---INS VariableDeclarationStatement@@PersistentEntity<?,?> entity=resourceInformation.getPersistentEntity(); @TO@ EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @AT@ 6251 @LENGTH@ 74
------INS ParameterizedType@@PersistentEntity<?,?> @TO@ VariableDeclarationStatement@@PersistentEntity<?,?> entity=resourceInformation.getPersistentEntity(); @AT@ 6251 @LENGTH@ 22
---------INS SimpleType@@PersistentEntity @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 6251 @LENGTH@ 16
---------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 6268 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 6271 @LENGTH@ 1
------INS VariableDeclarationFragment@@entity=resourceInformation.getPersistentEntity() @TO@ VariableDeclarationStatement@@PersistentEntity<?,?> entity=resourceInformation.getPersistentEntity(); @AT@ 6274 @LENGTH@ 50
---------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=resourceInformation.getPersistentEntity() @AT@ 6274 @LENGTH@ 6
---------INS MethodInvocation@@resourceInformation.getPersistentEntity() @TO@ VariableDeclarationFragment@@entity=resourceInformation.getPersistentEntity() @AT@ 6283 @LENGTH@ 41
------------INS SimpleName@@Name:resourceInformation @TO@ MethodInvocation@@resourceInformation.getPersistentEntity() @AT@ 6283 @LENGTH@ 19
------------INS SimpleName@@MethodName:getPersistentEntity:[] @TO@ MethodInvocation@@resourceInformation.getPersistentEntity() @AT@ 6303 @LENGTH@ 21
---INS IfStatement@@if (objectToUpdate != null) {  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @TO@ EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @AT@ 6330 @LENGTH@ 141
------INS InfixExpression@@objectToUpdate != null @TO@ IfStatement@@if (objectToUpdate != null) {  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @AT@ 6334 @LENGTH@ 22
---------MOV SimpleName@@objectToUpdate @TO@ InfixExpression@@objectToUpdate != null @AT@ 6147 @LENGTH@ 14
---------MOV Operator@@!= @TO@ InfixExpression@@objectToUpdate != null @AT@ 6161 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@objectToUpdate != null @AT@ 6165 @LENGTH@ 4
------INS Block@@ThenBody:{  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @TO@ IfStatement@@if (objectToUpdate != null) {  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @AT@ 6358 @LENGTH@ 113
---------INS ExpressionStatement@@Assignment:forUpdate=true @TO@ Block@@ThenBody:{  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @AT@ 6364 @LENGTH@ 17
------------INS Assignment@@forUpdate=true @TO@ ExpressionStatement@@Assignment:forUpdate=true @AT@ 6364 @LENGTH@ 16
---------------INS SimpleName@@forUpdate @TO@ Assignment@@forUpdate=true @AT@ 6364 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@forUpdate=true @AT@ 6373 @LENGTH@ 1
---------------INS BooleanLiteral@@true @TO@ Assignment@@forUpdate=true @AT@ 6376 @LENGTH@ 4
---------INS ExpressionStatement@@Assignment:entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @TO@ Block@@ThenBody:{  forUpdate=true;  entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier();} @AT@ 6386 @LENGTH@ 80
------------INS Assignment@@entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @TO@ ExpressionStatement@@Assignment:entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6386 @LENGTH@ 79
---------------INS SimpleName@@entityIdentifier @TO@ Assignment@@entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6386 @LENGTH@ 16
---------------INS Operator@@= @TO@ Assignment@@entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6402 @LENGTH@ 1
---------------INS MethodInvocation@@entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @TO@ Assignment@@entityIdentifier=entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6405 @LENGTH@ 60
------------------INS MethodInvocation@@MethodName:getIdentifierAccessor:[objectToUpdate] @TO@ MethodInvocation@@entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6405 @LENGTH@ 44
---------------------INS SimpleName@@objectToUpdate @TO@ MethodInvocation@@MethodName:getIdentifierAccessor:[objectToUpdate] @AT@ 6434 @LENGTH@ 14
------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6405 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getIdentifier:[] @TO@ MethodInvocation@@entity.getIdentifierAccessor(objectToUpdate).getIdentifier() @AT@ 6450 @LENGTH@ 15
---UPD VariableDeclarationStatement@@Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity()); @TO@ Builder build=PersistentEntityResource.build(obj,entity); @AT@ 6372 @LENGTH@ 95
------UPD VariableDeclarationFragment@@build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity()) @TO@ build=PersistentEntityResource.build(obj,entity) @AT@ 6380 @LENGTH@ 86
---------UPD MethodInvocation@@PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity()) @TO@ PersistentEntityResource.build(obj,entity) @AT@ 6388 @LENGTH@ 78
------------UPD SimpleName@@MethodName:build:[obj, resourceInformation.getPersistentEntity()] @TO@ MethodName:build:[obj, entity] @AT@ 6413 @LENGTH@ 53
---------------DEL MethodInvocation@@resourceInformation.getPersistentEntity() @AT@ 6424 @LENGTH@ 41
------------------DEL SimpleName@@Name:resourceInformation @AT@ 6424 @LENGTH@ 19
------------------DEL SimpleName@@MethodName:getPersistentEntity:[] @AT@ 6444 @LENGTH@ 21
---------------INS SimpleName@@entity @TO@ SimpleName@@MethodName:build:[obj, resourceInformation.getPersistentEntity()] @AT@ 6858 @LENGTH@ 6
---INS IfStatement@@if (entityIdentifier != null) {  entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);} @TO@ EnhancedForStatement@@for (HttpMessageConverter converter : messageConverters) {  if (!converter.canRead(PersistentEntityResource.class,contentType)) {    continue;  }  Serializable id=idResolver.resolveArgument(parameter,mavContainer,webRequest,binderFactory);  Object objectToUpdate=getObjectToUpdate(id,resourceInformation);  boolean forUpdate=objectToUpdate != null;  Object obj=read(resourceInformation,incoming,converter,objectToUpdate);  if (obj == null) {    throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,domainType));  }  Builder build=PersistentEntityResource.build(obj,resourceInformation.getPersistentEntity());  return forUpdate ? build.build() : build.forCreation();} @AT@ 6674 @LENGTH@ 127
------INS InfixExpression@@entityIdentifier != null @TO@ IfStatement@@if (entityIdentifier != null) {  entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);} @AT@ 6678 @LENGTH@ 24
---------INS SimpleName@@entityIdentifier @TO@ InfixExpression@@entityIdentifier != null @AT@ 6678 @LENGTH@ 16
---------INS Operator@@!= @TO@ InfixExpression@@entityIdentifier != null @AT@ 6694 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@entityIdentifier != null @AT@ 6698 @LENGTH@ 4
------INS Block@@ThenBody:{  entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);} @TO@ IfStatement@@if (entityIdentifier != null) {  entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);} @AT@ 6704 @LENGTH@ 97
---------INS ExpressionStatement@@MethodInvocation:entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @TO@ Block@@ThenBody:{  entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier);} @AT@ 6710 @LENGTH@ 86
------------INS MethodInvocation@@entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @TO@ ExpressionStatement@@MethodInvocation:entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @AT@ 6710 @LENGTH@ 85
---------------INS MethodInvocation@@MethodName:getPropertyAccessor:[obj] @TO@ MethodInvocation@@entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @AT@ 6710 @LENGTH@ 31
------------------INS SimpleName@@obj @TO@ MethodInvocation@@MethodName:getPropertyAccessor:[obj] @AT@ 6737 @LENGTH@ 3
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @AT@ 6710 @LENGTH@ 6
---------------INS SimpleName@@MethodName:setProperty:[entity.getIdProperty(), entityIdentifier] @TO@ MethodInvocation@@entity.getPropertyAccessor(obj).setProperty(entity.getIdProperty(),entityIdentifier) @AT@ 6742 @LENGTH@ 53
------------------INS MethodInvocation@@entity.getIdProperty() @TO@ SimpleName@@MethodName:setProperty:[entity.getIdProperty(), entityIdentifier] @AT@ 6754 @LENGTH@ 22
---------------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 6754 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getIdProperty:[] @TO@ MethodInvocation@@entity.getIdProperty() @AT@ 6761 @LENGTH@ 15
------------------INS SimpleName@@entityIdentifier @TO@ SimpleName@@MethodName:setProperty:[entity.getIdProperty(), entityIdentifier] @AT@ 6778 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @TO@ TypeDeclaration@@[public]DirContextAdapterTest,  @AT@ 11612 @LENGTH@ 403
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11612 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11619 @LENGTH@ 4
---INS SimpleName@@MethodName:testNewLdapNameWithLdapName @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11624 @LENGTH@ 27
---INS SimpleType@@NamingException @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11661 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member","CN=test,DC=root") @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11681 @LENGTH@ 54
------INS MethodInvocation@@tested.addAttributeValue("member","CN=test,DC=root") @TO@ ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member","CN=test,DC=root") @AT@ 11681 @LENGTH@ 53
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.addAttributeValue("member","CN=test,DC=root") @AT@ 11681 @LENGTH@ 6
---------INS SimpleName@@MethodName:addAttributeValue:["member", "CN=test,DC=root"] @TO@ MethodInvocation@@tested.addAttributeValue("member","CN=test,DC=root") @AT@ 11688 @LENGTH@ 46
------------INS StringLiteral@@"member" @TO@ SimpleName@@MethodName:addAttributeValue:["member", "CN=test,DC=root"] @AT@ 11706 @LENGTH@ 8
------------INS StringLiteral@@"CN=test,DC=root" @TO@ SimpleName@@MethodName:addAttributeValue:["member", "CN=test,DC=root"] @AT@ 11716 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11738 @LENGTH@ 79
------INS MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @TO@ ExpressionStatement@@MethodInvocation:tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11738 @LENGTH@ 78
---------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11738 @LENGTH@ 6
---------INS SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @TO@ MethodInvocation@@tested.addAttributeValue("member2",LdapUtils.newLdapName("CN=test2,DC=root")) @AT@ 11745 @LENGTH@ 71
------------INS StringLiteral@@"member2" @TO@ SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @AT@ 11763 @LENGTH@ 9
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @TO@ SimpleName@@MethodName:addAttributeValue:["member2", LdapUtils.newLdapName("CN=test2,DC=root")] @AT@ 11774 @LENGTH@ 41
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11774 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11784 @LENGTH@ 31
------------------INS StringLiteral@@"CN=test2,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @AT@ 11796 @LENGTH@ 18
---INS VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11821 @LENGTH@ 42
------INS SimpleType@@Attributes @TO@ VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @AT@ 11821 @LENGTH@ 10
------INS VariableDeclarationFragment@@attrs=tested.getAttributes() @TO@ VariableDeclarationStatement@@Attributes attrs=tested.getAttributes(); @AT@ 11832 @LENGTH@ 30
---------INS SimpleName@@attrs @TO@ VariableDeclarationFragment@@attrs=tested.getAttributes() @AT@ 11832 @LENGTH@ 5
---------INS MethodInvocation@@tested.getAttributes() @TO@ VariableDeclarationFragment@@attrs=tested.getAttributes() @AT@ 11840 @LENGTH@ 22
------------INS SimpleName@@Name:tested @TO@ MethodInvocation@@tested.getAttributes() @AT@ 11840 @LENGTH@ 6
------------INS SimpleName@@MethodName:getAttributes:[] @TO@ MethodInvocation@@tested.getAttributes() @AT@ 11847 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertEquals("CN=test,DC=root",attrs.get("member").get()) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11866 @LENGTH@ 59
------INS MethodInvocation@@assertEquals("CN=test,DC=root",attrs.get("member").get()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("CN=test,DC=root",attrs.get("member").get()) @AT@ 11866 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertEquals:["CN=test,DC=root", attrs.get("member").get()] @TO@ MethodInvocation@@assertEquals("CN=test,DC=root",attrs.get("member").get()) @AT@ 11866 @LENGTH@ 58
------------INS StringLiteral@@"CN=test,DC=root" @TO@ SimpleName@@MethodName:assertEquals:["CN=test,DC=root", attrs.get("member").get()] @AT@ 11879 @LENGTH@ 17
------------INS MethodInvocation@@attrs.get("member").get() @TO@ SimpleName@@MethodName:assertEquals:["CN=test,DC=root", attrs.get("member").get()] @AT@ 11898 @LENGTH@ 25
---------------INS MethodInvocation@@MethodName:get:["member"] @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11898 @LENGTH@ 19
------------------INS StringLiteral@@"member" @TO@ MethodInvocation@@MethodName:get:["member"] @AT@ 11908 @LENGTH@ 8
---------------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11898 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@attrs.get("member").get() @AT@ 11918 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @TO@ MethodDeclaration@@public, void, MethodName:testNewLdapNameWithLdapName, NamingException,  @AT@ 11928 @LENGTH@ 84
------INS MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @AT@ 11928 @LENGTH@ 83
---------INS SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @TO@ MethodInvocation@@assertEquals(LdapUtils.newLdapName("CN=test2,DC=root"),attrs.get("member2").get()) @AT@ 11928 @LENGTH@ 83
------------INS MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @AT@ 11941 @LENGTH@ 41
---------------INS SimpleName@@Name:LdapUtils @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11941 @LENGTH@ 9
---------------INS SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @TO@ MethodInvocation@@LdapUtils.newLdapName("CN=test2,DC=root") @AT@ 11951 @LENGTH@ 31
------------------INS StringLiteral@@"CN=test2,DC=root" @TO@ SimpleName@@MethodName:newLdapName:["CN=test2,DC=root"] @AT@ 11963 @LENGTH@ 18
------------INS MethodInvocation@@attrs.get("member2").get() @TO@ SimpleName@@MethodName:assertEquals:[LdapUtils.newLdapName("CN=test2,DC=root"), attrs.get("member2").get()] @AT@ 11984 @LENGTH@ 26
---------------INS MethodInvocation@@MethodName:get:["member2"] @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 11984 @LENGTH@ 20
------------------INS StringLiteral@@"member2" @TO@ MethodInvocation@@MethodName:get:["member2"] @AT@ 11994 @LENGTH@ 9
---------------INS SimpleName@@Name:attrs @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 11984 @LENGTH@ 5
---------------INS SimpleName@@MethodName:get:[] @TO@ MethodInvocation@@attrs.get("member2").get() @AT@ 12005 @LENGTH@ 5


UPD MethodDeclaration@@public, voidMethodName:TransactedSendHarness, String queueName,  @TO@ voidMethodName:TransactedSendHarness, String queueName,  @AT@ 2774 @LENGTH@ 98
---DEL Modifier@@public @AT@ 2774 @LENGTH@ 6


UPD IfStatement@@if (cid.getAnnotation(RooJavaType.ROO_JPA_ENTITY) == null) {  LOGGER.warning("Unable to find the entity annotation on '" + entity + "'");  return null;} @TO@ if (cid.getAnnotation(RooJavaType.ROO_JPA_ENTITY) == null) {  return null;} @AT@ 11516 @LENGTH@ 167
---UPD Block@@ThenBody:{  LOGGER.warning("Unable to find the entity annotation on '" + entity + "'");  return null;} @TO@ ThenBody:{  return null;} @AT@ 11575 @LENGTH@ 108
------DEL ExpressionStatement@@MethodInvocation:LOGGER.warning("Unable to find the entity annotation on '" + entity + "'") @AT@ 11583 @LENGTH@ 75
---------DEL MethodInvocation@@LOGGER.warning("Unable to find the entity annotation on '" + entity + "'") @AT@ 11583 @LENGTH@ 74
------------DEL SimpleName@@Name:LOGGER @AT@ 11583 @LENGTH@ 6
------------DEL SimpleName@@MethodName:warning:["Unable to find the entity annotation on '" + entity + "'"] @AT@ 11590 @LENGTH@ 67
---------------DEL InfixExpression@@"Unable to find the entity annotation on '" + entity + "'" @AT@ 11598 @LENGTH@ 58
------------------DEL StringLiteral@@"Unable to find the entity annotation on '" @AT@ 11598 @LENGTH@ 43
------------------DEL Operator@@+ @AT@ 11641 @LENGTH@ 1
------------------DEL SimpleName@@entity @AT@ 11644 @LENGTH@ 6
------------------DEL StringLiteral@@"'" @AT@ 11653 @LENGTH@ 3


UPD IfStatement@@if (config.getPort() == -1) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @TO@ if (config.getPort() == -1 || config.getPort() == 0) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @AT@ 6078 @LENGTH@ 232
---INS InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @TO@ IfStatement@@if (config.getPort() == -1) {  if (remaining.startsWith("http:")) {    config.setPort(80);  } else   if (remaining.startsWith("https:")) {    config.setPort(443);  }} @AT@ 6082 @LENGTH@ 47
------MOV InfixExpression@@config.getPort() == -1 @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6082 @LENGTH@ 22
------INS Operator@@|| @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6104 @LENGTH@ 2
------INS InfixExpression@@config.getPort() == 0 @TO@ InfixExpression@@config.getPort() == -1 || config.getPort() == 0 @AT@ 6108 @LENGTH@ 21
---------INS MethodInvocation@@config.getPort() @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6108 @LENGTH@ 16
------------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.getPort() @AT@ 6108 @LENGTH@ 6
------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@config.getPort() @AT@ 6115 @LENGTH@ 9
---------INS Operator@@== @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6124 @LENGTH@ 2
---------INS NumberLiteral@@0 @TO@ InfixExpression@@config.getPort() == 0 @AT@ 6128 @LENGTH@ 1


UPD IfStatement@@if (method.getReturnType().equals(void.class) || method.getReturnType().equals(Future.class)) {  configuration.addClientInterceptor(method,LogDiagnosticContextStorageInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_SAVE);  configuration.addClientInterceptor(method,AsyncFutureInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_INVOCATION);  configuration.addClientInterceptor(method,LogDiagnosticContextRecoveryInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_RESTORE);} else {  throw EjbLogger.ROOT_LOGGER.wrongReturnTypeForAsyncMethod(method);} @TO@ if (method.getReturnType().equals(void.class) || method.getReturnType().equals(Future.class)) {  configuration.addClientInterceptor(method,LogDiagnosticContextStorageInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_SAVE);  configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT);  configuration.addClientInterceptor(method,AsyncFutureInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_INVOCATION);  configuration.addClientInterceptor(method,LogDiagnosticContextRecoveryInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_RESTORE);} else {  throw EjbLogger.ROOT_LOGGER.wrongReturnTypeForAsyncMethod(method);} @AT@ 9162 @LENGTH@ 659
---UPD Block@@ThenBody:{  configuration.addClientInterceptor(method,LogDiagnosticContextStorageInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_SAVE);  configuration.addClientInterceptor(method,AsyncFutureInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_INVOCATION);  configuration.addClientInterceptor(method,LogDiagnosticContextRecoveryInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_RESTORE);} @TO@ ThenBody:{  configuration.addClientInterceptor(method,LogDiagnosticContextStorageInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_SAVE);  configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT);  configuration.addClientInterceptor(method,AsyncFutureInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_INVOCATION);  configuration.addClientInterceptor(method,LogDiagnosticContextRecoveryInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_RESTORE);} @AT@ 9256 @LENGTH@ 469
------INS ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT) @TO@ Block@@ThenBody:{  configuration.addClientInterceptor(method,LogDiagnosticContextStorageInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_SAVE);  configuration.addClientInterceptor(method,AsyncFutureInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_INVOCATION);  configuration.addClientInterceptor(method,LogDiagnosticContextRecoveryInterceptor.getFactory(),InterceptorOrder.Client.LOCAL_ASYNC_LOG_RESTORE);} @AT@ 9598 @LENGTH@ 140
---------INS MethodInvocation@@configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT) @TO@ ExpressionStatement@@MethodInvocation:configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT) @AT@ 9598 @LENGTH@ 139
------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT) @AT@ 9598 @LENGTH@ 13
------------INS SimpleName@@MethodName:addClientInterceptor:[method, SecurityDomainInterceptorFactory.INSTANCE, InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT] @TO@ MethodInvocation@@configuration.addClientInterceptor(method,SecurityDomainInterceptorFactory.INSTANCE,InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT) @AT@ 9612 @LENGTH@ 125
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:addClientInterceptor:[method, SecurityDomainInterceptorFactory.INSTANCE, InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT] @AT@ 9633 @LENGTH@ 6
---------------INS QualifiedName@@SecurityDomainInterceptorFactory.INSTANCE @TO@ SimpleName@@MethodName:addClientInterceptor:[method, SecurityDomainInterceptorFactory.INSTANCE, InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT] @AT@ 9641 @LENGTH@ 41
------------------INS SimpleName@@SecurityDomainInterceptorFactory @TO@ QualifiedName@@SecurityDomainInterceptorFactory.INSTANCE @AT@ 9641 @LENGTH@ 32
------------------INS SimpleName@@INSTANCE @TO@ QualifiedName@@SecurityDomainInterceptorFactory.INSTANCE @AT@ 9674 @LENGTH@ 8
---------------INS QualifiedName@@InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT @TO@ SimpleName@@MethodName:addClientInterceptor:[method, SecurityDomainInterceptorFactory.INSTANCE, InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT] @AT@ 9684 @LENGTH@ 52
------------------INS QualifiedName@@InterceptorOrder.Client @TO@ QualifiedName@@InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT @AT@ 9684 @LENGTH@ 23
---------------------INS SimpleName@@InterceptorOrder @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 9684 @LENGTH@ 16
---------------------INS SimpleName@@Client @TO@ QualifiedName@@InterceptorOrder.Client @AT@ 9701 @LENGTH@ 6
------------------INS SimpleName@@LOCAL_ASYNC_SECURITY_CONTEXT @TO@ QualifiedName@@InterceptorOrder.Client.LOCAL_ASYNC_SECURITY_CONTEXT @AT@ 9708 @LENGTH@ 28


UPD FieldDeclaration@@private, HttpServletRequest, [request] @TO@ private, ServletUpgradeRequest, [request] @AT@ 1775 @LENGTH@ 35
---UPD SimpleType@@HttpServletRequest @TO@ ServletUpgradeRequest @AT@ 1783 @LENGTH@ 18


UPD MethodDeclaration@@private, voidMethodName:DropboxOperation, final String text,  @TO@ voidMethodName:DropboxOperation, final String text,  @AT@ 1010 @LENGTH@ 77
---DEL Modifier@@private @AT@ 1010 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals(DN,authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)) @TO@ MethodInvocation:assertThat(authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)).isEqualTo(DN) @AT@ 1172 @LENGTH@ 90
---INS MethodInvocation@@assertThat(authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)).isEqualTo(DN) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(DN,authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)) @AT@ 1112 @LENGTH@ 93
------MOV MethodInvocation@@assertEquals(DN,authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)) @TO@ MethodInvocation@@assertThat(authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)).isEqualTo(DN) @AT@ 1172 @LENGTH@ 89
---------MOV MethodInvocation@@authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY) @TO@ MethodInvocation@@assertEquals(DN,authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)) @AT@ 1193 @LENGTH@ 67
------INS SimpleName@@MethodName:isEqualTo:[DN] @TO@ MethodInvocation@@assertThat(authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)).isEqualTo(DN) @AT@ 1192 @LENGTH@ 13
---------INS SimpleName@@DN @TO@ SimpleName@@MethodName:isEqualTo:[DN] @AT@ 1202 @LENGTH@ 2
---UPD MethodInvocation@@assertEquals(DN,authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)) @TO@ MethodName:assertThat:[authority.getFirstAttributeValue(SpringSecurityLdapTemplate.DN_KEY)] @AT@ 1172 @LENGTH@ 89


UPD MethodDeclaration@@public, voidMethodName:BatchSender,  @TO@ voidMethodName:BatchSender,  @AT@ 11319 @LENGTH@ 180
---DEL Modifier@@public @AT@ 11319 @LENGTH@ 6


INS MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @TO@ TypeDeclaration@@[public]ModelAwareFilterList, [ModelAwareFilter<FilterList>] @AT@ 3217 @LENGTH@ 53
---INS Modifier@@public @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 3217 @LENGTH@ 6
---INS SimpleType@@FilterList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 3224 @LENGTH@ 10
---INS SimpleName@@MethodName:getFilteredList @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 3235 @LENGTH@ 15
---INS ReturnStatement@@SimpleName:fl @TO@ MethodDeclaration@@public, FilterList, MethodName:getFilteredList,  @AT@ 3257 @LENGTH@ 10
------INS SimpleName@@fl @TO@ ReturnStatement@@SimpleName:fl @AT@ 3264 @LENGTH@ 2


UPD IfStatement@@if (!reader.getLocalName().equals(wrapper)) {  ParseUtils.requireNoContent(reader);} @TO@ if (reader.getEventType() != XMLStreamConstants.END_ELEMENT) {  throw ParseUtils.unexpectedElement(reader,Collections.singleton(elementName));} @AT@ 3840 @LENGTH@ 120
---DEL PrefixExpression@@!reader.getLocalName().equals(wrapper) @AT@ 3844 @LENGTH@ 38
------DEL Operator@@! @AT@ 3844 @LENGTH@ 1
------DEL MethodInvocation@@reader.getLocalName().equals(wrapper) @AT@ 3845 @LENGTH@ 37
---------DEL MethodInvocation@@MethodName:getLocalName:[] @AT@ 3845 @LENGTH@ 21
---UPD Block@@ThenBody:{  ParseUtils.requireNoContent(reader);} @TO@ ThenBody:{  throw ParseUtils.unexpectedElement(reader,Collections.singleton(elementName));} @AT@ 3884 @LENGTH@ 76
------DEL ExpressionStatement@@MethodInvocation:ParseUtils.requireNoContent(reader) @AT@ 3906 @LENGTH@ 36
---------DEL MethodInvocation@@ParseUtils.requireNoContent(reader) @AT@ 3906 @LENGTH@ 35
------INS ThrowStatement@@MethodInvocation:ParseUtils.unexpectedElement(reader,Collections.singleton(elementName)) @TO@ Block@@ThenBody:{  ParseUtils.requireNoContent(reader);} @AT@ 4083 @LENGTH@ 79
---------INS MethodInvocation@@ParseUtils.unexpectedElement(reader,Collections.singleton(elementName)) @TO@ ThrowStatement@@MethodInvocation:ParseUtils.unexpectedElement(reader,Collections.singleton(elementName)) @AT@ 4089 @LENGTH@ 72
------------MOV SimpleName@@Name:ParseUtils @TO@ MethodInvocation@@ParseUtils.unexpectedElement(reader,Collections.singleton(elementName)) @AT@ 3906 @LENGTH@ 10
------------MOV SimpleName@@MethodName:requireNoContent:[reader] @TO@ MethodInvocation@@ParseUtils.unexpectedElement(reader,Collections.singleton(elementName)) @AT@ 3917 @LENGTH@ 24
---------------INS MethodInvocation@@Collections.singleton(elementName) @TO@ SimpleName@@MethodName:requireNoContent:[reader] @AT@ 4126 @LENGTH@ 34
------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(elementName) @AT@ 4126 @LENGTH@ 11
------------------INS SimpleName@@MethodName:singleton:[elementName] @TO@ MethodInvocation@@Collections.singleton(elementName) @AT@ 4138 @LENGTH@ 22
---------------------INS SimpleName@@elementName @TO@ SimpleName@@MethodName:singleton:[elementName] @AT@ 4148 @LENGTH@ 11
---INS InfixExpression@@reader.getEventType() != XMLStreamConstants.END_ELEMENT @TO@ IfStatement@@if (!reader.getLocalName().equals(wrapper)) {  ParseUtils.requireNoContent(reader);} @AT@ 4004 @LENGTH@ 55
------INS MethodInvocation@@reader.getEventType() @TO@ InfixExpression@@reader.getEventType() != XMLStreamConstants.END_ELEMENT @AT@ 4004 @LENGTH@ 21
---------MOV SimpleName@@Name:reader @TO@ MethodInvocation@@reader.getEventType() @AT@ 3845 @LENGTH@ 6
---------MOV SimpleName@@MethodName:equals:[wrapper] @TO@ MethodInvocation@@reader.getEventType() @AT@ 3867 @LENGTH@ 15
------------DEL SimpleName@@wrapper @AT@ 3874 @LENGTH@ 7
------INS Operator@@!= @TO@ InfixExpression@@reader.getEventType() != XMLStreamConstants.END_ELEMENT @AT@ 4025 @LENGTH@ 2
------INS QualifiedName@@XMLStreamConstants.END_ELEMENT @TO@ InfixExpression@@reader.getEventType() != XMLStreamConstants.END_ELEMENT @AT@ 4029 @LENGTH@ 30
---------INS SimpleName@@XMLStreamConstants @TO@ QualifiedName@@XMLStreamConstants.END_ELEMENT @AT@ 4029 @LENGTH@ 18
---------INS SimpleName@@END_ELEMENT @TO@ QualifiedName@@XMLStreamConstants.END_ELEMENT @AT@ 4048 @LENGTH@ 11


UPD VariableDeclarationStatement@@String configName=CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.name()); @TO@ String configName=CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.getName()); @AT@ 4636 @LENGTH@ 118
---UPD VariableDeclarationFragment@@configName=CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.name()) @TO@ configName=CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.getName()) @AT@ 4643 @LENGTH@ 110
------UPD InfixExpression@@CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.name()) @TO@ CHIMERA_CRYPTO_CODEC_CLASSES_KEY_PREFIX + CipherSuite.getConfigSuffix(cipherSuite.getName()) @AT@ 4664 @LENGTH@ 89
---------UPD MethodInvocation@@CipherSuite.getConfigSuffix(cipherSuite.name()) @TO@ CipherSuite.getConfigSuffix(cipherSuite.getName()) @AT@ 4706 @LENGTH@ 47
------------UPD SimpleName@@MethodName:getConfigSuffix:[cipherSuite.name()] @TO@ MethodName:getConfigSuffix:[cipherSuite.getName()] @AT@ 4718 @LENGTH@ 35
---------------UPD MethodInvocation@@cipherSuite.name() @TO@ cipherSuite.getName() @AT@ 4734 @LENGTH@ 18
------------------UPD SimpleName@@MethodName:name:[] @TO@ MethodName:getName:[] @AT@ 4746 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @TO@ TypeDeclaration@@[public]TestINIConfiguration,  @AT@ 29244 @LENGTH@ 439
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29244 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29251 @LENGTH@ 4
---INS SimpleName@@MethodName:testPropertyWithDelimiter @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29256 @LENGTH@ 25
---INS SimpleType@@ConfigurationException @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29291 @LENGTH@ 22
---INS VariableDeclarationStatement@@String data=INI_DATA + "key.dot = dotValue"; @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29328 @LENGTH@ 46
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String data=INI_DATA + "key.dot = dotValue"; @AT@ 29328 @LENGTH@ 6
------INS VariableDeclarationFragment@@data=INI_DATA + "key.dot = dotValue" @TO@ VariableDeclarationStatement@@String data=INI_DATA + "key.dot = dotValue"; @AT@ 29335 @LENGTH@ 38
---------INS SimpleName@@data @TO@ VariableDeclarationFragment@@data=INI_DATA + "key.dot = dotValue" @AT@ 29335 @LENGTH@ 4
---------INS InfixExpression@@INI_DATA + "key.dot = dotValue" @TO@ VariableDeclarationFragment@@data=INI_DATA + "key.dot = dotValue" @AT@ 29342 @LENGTH@ 31
------------INS SimpleName@@INI_DATA @TO@ InfixExpression@@INI_DATA + "key.dot = dotValue" @AT@ 29342 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@INI_DATA + "key.dot = dotValue" @AT@ 29350 @LENGTH@ 1
------------INS StringLiteral@@"key.dot = dotValue" @TO@ InfixExpression@@INI_DATA + "key.dot = dotValue" @AT@ 29353 @LENGTH@ 20
---INS VariableDeclarationStatement@@INIConfiguration conf=new INIConfiguration(); @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29383 @LENGTH@ 47
------INS SimpleType@@INIConfiguration @TO@ VariableDeclarationStatement@@INIConfiguration conf=new INIConfiguration(); @AT@ 29383 @LENGTH@ 16
------INS VariableDeclarationFragment@@conf=new INIConfiguration() @TO@ VariableDeclarationStatement@@INIConfiguration conf=new INIConfiguration(); @AT@ 29400 @LENGTH@ 29
---------INS SimpleName@@conf @TO@ VariableDeclarationFragment@@conf=new INIConfiguration() @AT@ 29400 @LENGTH@ 4
---------INS ClassInstanceCreation@@INIConfiguration[] @TO@ VariableDeclarationFragment@@conf=new INIConfiguration() @AT@ 29407 @LENGTH@ 22
------------INS New@@new @TO@ ClassInstanceCreation@@INIConfiguration[] @AT@ 29407 @LENGTH@ 3
------------INS SimpleType@@INIConfiguration @TO@ ClassInstanceCreation@@INIConfiguration[] @AT@ 29411 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:load(conf,data) @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29439 @LENGTH@ 17
------INS MethodInvocation@@load(conf,data) @TO@ ExpressionStatement@@MethodInvocation:load(conf,data) @AT@ 29439 @LENGTH@ 16
---------INS SimpleName@@MethodName:load:[conf, data] @TO@ MethodInvocation@@load(conf,data) @AT@ 29439 @LENGTH@ 16
------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:load:[conf, data] @AT@ 29444 @LENGTH@ 4
------------INS SimpleName@@data @TO@ SimpleName@@MethodName:load:[conf, data] @AT@ 29450 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Wrong property value","dotValue",conf.getString("section3.key..dot")) @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29465 @LENGTH@ 102
------INS MethodInvocation@@assertEquals("Wrong property value","dotValue",conf.getString("section3.key..dot")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Wrong property value","dotValue",conf.getString("section3.key..dot")) @AT@ 29465 @LENGTH@ 101
---------INS SimpleName@@MethodName:assertEquals:["Wrong property value", "dotValue", conf.getString("section3.key..dot")] @TO@ MethodInvocation@@assertEquals("Wrong property value","dotValue",conf.getString("section3.key..dot")) @AT@ 29465 @LENGTH@ 101
------------INS StringLiteral@@"Wrong property value" @TO@ SimpleName@@MethodName:assertEquals:["Wrong property value", "dotValue", conf.getString("section3.key..dot")] @AT@ 29478 @LENGTH@ 22
------------INS StringLiteral@@"dotValue" @TO@ SimpleName@@MethodName:assertEquals:["Wrong property value", "dotValue", conf.getString("section3.key..dot")] @AT@ 29502 @LENGTH@ 10
------------INS MethodInvocation@@conf.getString("section3.key..dot") @TO@ SimpleName@@MethodName:assertEquals:["Wrong property value", "dotValue", conf.getString("section3.key..dot")] @AT@ 29530 @LENGTH@ 35
---------------INS SimpleName@@Name:conf @TO@ MethodInvocation@@conf.getString("section3.key..dot") @AT@ 29530 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getString:["section3.key..dot"] @TO@ MethodInvocation@@conf.getString("section3.key..dot") @AT@ 29535 @LENGTH@ 30
------------------INS StringLiteral@@"section3.key..dot" @TO@ SimpleName@@MethodName:getString:["section3.key..dot"] @AT@ 29545 @LENGTH@ 19
---INS VariableDeclarationStatement@@String output=saveToString(conf); @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29576 @LENGTH@ 35
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String output=saveToString(conf); @AT@ 29576 @LENGTH@ 6
------INS VariableDeclarationFragment@@output=saveToString(conf) @TO@ VariableDeclarationStatement@@String output=saveToString(conf); @AT@ 29583 @LENGTH@ 27
---------INS SimpleName@@output @TO@ VariableDeclarationFragment@@output=saveToString(conf) @AT@ 29583 @LENGTH@ 6
---------INS MethodInvocation@@saveToString(conf) @TO@ VariableDeclarationFragment@@output=saveToString(conf) @AT@ 29592 @LENGTH@ 18
------------INS SimpleName@@MethodName:saveToString:[conf] @TO@ MethodInvocation@@saveToString(conf) @AT@ 29592 @LENGTH@ 18
---------------INS SimpleName@@conf @TO@ SimpleName@@MethodName:saveToString:[conf] @AT@ 29605 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(output,containsString("key.dot = dotValue")) @TO@ MethodDeclaration@@public, void, MethodName:testPropertyWithDelimiter, ConfigurationException,  @AT@ 29620 @LENGTH@ 57
------INS MethodInvocation@@assertThat(output,containsString("key.dot = dotValue")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(output,containsString("key.dot = dotValue")) @AT@ 29620 @LENGTH@ 56
---------INS SimpleName@@MethodName:assertThat:[output, containsString("key.dot = dotValue")] @TO@ MethodInvocation@@assertThat(output,containsString("key.dot = dotValue")) @AT@ 29620 @LENGTH@ 56
------------INS SimpleName@@output @TO@ SimpleName@@MethodName:assertThat:[output, containsString("key.dot = dotValue")] @AT@ 29631 @LENGTH@ 6
------------INS MethodInvocation@@containsString("key.dot = dotValue") @TO@ SimpleName@@MethodName:assertThat:[output, containsString("key.dot = dotValue")] @AT@ 29639 @LENGTH@ 36
---------------INS SimpleName@@MethodName:containsString:["key.dot = dotValue"] @TO@ MethodInvocation@@containsString("key.dot = dotValue") @AT@ 29639 @LENGTH@ 36
------------------INS StringLiteral@@"key.dot = dotValue" @TO@ SimpleName@@MethodName:containsString:["key.dot = dotValue"] @AT@ 29654 @LENGTH@ 20


INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testProducerDisableReplyTo, Exception,  @AT@ 1330 @LENGTH@ 16
---INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 1330 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 1330 @LENGTH@ 7
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 1338 @LENGTH@ 7


INS FieldDeclaration@@KeyValueMappingContext, [mappingContext] @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration, public]ValidatorIntegrationTests,  @AT@ 2629 @LENGTH@ 38
---INS SimpleType@@KeyValueMappingContext @TO@ FieldDeclaration@@KeyValueMappingContext, [mappingContext] @AT@ 2629 @LENGTH@ 22
---INS VariableDeclarationFragment@@mappingContext @TO@ FieldDeclaration@@KeyValueMappingContext, [mappingContext] @AT@ 2652 @LENGTH@ 14
------INS SimpleName@@mappingContext @TO@ VariableDeclarationFragment@@mappingContext @AT@ 2652 @LENGTH@ 14


UPD MethodDeclaration@@public, voidMethodName:MyFuture, Callable<String> callable,  @TO@ voidMethodName:MyFuture, Callable<String> callable,  @AT@ 8566 @LENGTH@ 83
---DEL Modifier@@public @AT@ 8566 @LENGTH@ 6


UPD TypeDeclaration@@[public]PreAuthenticatedAuthenticationTokenTests, TestCase @TO@ [public]PreAuthenticatedAuthenticationTokenTests,  @AT@ 431 @LENGTH@ 1928
---DEL SimpleType@@TestCase @AT@ 493 @LENGTH@ 8


UPD TypeDeclaration@@[public]AuditingEventListener, [ApplicationListener<BeforeConvertEvent<Object>>] @TO@ [public]AuditingEventListener, [ApplicationListener<BeforeConvertEvent<Object>>, Ordered] @AT@ 1176 @LENGTH@ 985
---INS SimpleType@@Ordered @TO@ TypeDeclaration@@[public]AuditingEventListener, [ApplicationListener<BeforeConvertEvent<Object>>] @AT@ 1312 @LENGTH@ 7


UPD TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,getServiceInterface());} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @TO@ try {  ServiceHelper.startService(endpoint);  producer=endpoint.createProducer();  camelContext.addService(producer,true,true);  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,getServiceInterface());} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 3343 @LENGTH@ 316
---MOV ExpressionStatement@@Assignment:producer=endpoint.createProducer() @TO@ TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,getServiceInterface());} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 3361 @LENGTH@ 37
---UPD ExpressionStatement@@MethodInvocation:ServiceHelper.startService(producer) @TO@ MethodInvocation:ServiceHelper.startService(endpoint) @AT@ 3411 @LENGTH@ 37
------UPD MethodInvocation@@ServiceHelper.startService(producer) @TO@ ServiceHelper.startService(endpoint) @AT@ 3411 @LENGTH@ 36
---------UPD SimpleName@@MethodName:startService:[producer] @TO@ MethodName:startService:[endpoint] @AT@ 3425 @LENGTH@ 22
------------UPD SimpleName@@producer @TO@ endpoint @AT@ 3438 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:camelContext.addService(producer,true,true) @TO@ TryStatement@@try {  producer=endpoint.createProducer();  ServiceHelper.startService(producer);  serviceProxy=ProxyHelper.createProxy(endpoint,bind,producer,getServiceInterface());} catch (Exception e) {  throw new FailedToCreateProducerException(endpoint,e);} @AT@ 3563 @LENGTH@ 46
------INS MethodInvocation@@camelContext.addService(producer,true,true) @TO@ ExpressionStatement@@MethodInvocation:camelContext.addService(producer,true,true) @AT@ 3563 @LENGTH@ 45
---------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.addService(producer,true,true) @AT@ 3563 @LENGTH@ 12
---------INS SimpleName@@MethodName:addService:[producer, true, true] @TO@ MethodInvocation@@camelContext.addService(producer,true,true) @AT@ 3576 @LENGTH@ 32
------------INS SimpleName@@producer @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 3587 @LENGTH@ 8
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 3597 @LENGTH@ 4
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:addService:[producer, true, true] @AT@ 3603 @LENGTH@ 4


UPD MethodDeclaration@@public, voidMethodName:ShutdownTask, CamelContext context, List<RouteStartupOrder> routes, long timeout, TimeUnit timeUnit, boolean suspendOnly, boolean abortAfterTimeout, AtomicBoolean timeoutOccurred,  @TO@ voidMethodName:ShutdownTask, CamelContext context, List<RouteStartupOrder> routes, long timeout, TimeUnit timeUnit, boolean suspendOnly, boolean abortAfterTimeout, AtomicBoolean timeoutOccurred,  @AT@ 21432 @LENGTH@ 521
---DEL Modifier@@public @AT@ 21432 @LENGTH@ 6


INS VariableDeclarationStatement@@PersistentEntity<?,?> persistentEntity=persistentEntities.getPersistentEntity(domainType); @TO@ MethodDeclaration@@private, Errors, MethodName:validate, String event, Object entity,  @AT@ 5613 @LENGTH@ 93
---MOV VariableDeclarationFragment@@errors=new ValidationErrors(domainType.getSimpleName(),entity,persistentEntities.getPersistentEntity(domainType)) @TO@ VariableDeclarationStatement@@PersistentEntity<?,?> persistentEntity=persistentEntities.getPersistentEntity(domainType); @AT@ 5498 @LENGTH@ 121
------DEL SimpleName@@errors @AT@ 5498 @LENGTH@ 6
------DEL ClassInstanceCreation@@ValidationErrors[domainType.getSimpleName(), entity, persistentEntities.getPersistentEntity(domainType)] @AT@ 5507 @LENGTH@ 112
---------DEL New@@new @AT@ 5507 @LENGTH@ 3
---------DEL SimpleType@@ValidationErrors @AT@ 5511 @LENGTH@ 16
---------DEL MethodInvocation@@domainType.getSimpleName() @AT@ 5528 @LENGTH@ 26
------------DEL SimpleName@@Name:domainType @AT@ 5528 @LENGTH@ 10
------------DEL SimpleName@@MethodName:getSimpleName:[] @AT@ 5539 @LENGTH@ 15
---------DEL SimpleName@@entity @AT@ 5556 @LENGTH@ 6
------MOV MethodInvocation@@persistentEntities.getPersistentEntity(domainType) @TO@ VariableDeclarationFragment@@errors=new ValidationErrors(domainType.getSimpleName(),entity,persistentEntities.getPersistentEntity(domainType)) @AT@ 5568 @LENGTH@ 50
------INS SimpleName@@persistentEntity @TO@ VariableDeclarationFragment@@errors=new ValidationErrors(domainType.getSimpleName(),entity,persistentEntities.getPersistentEntity(domainType)) @AT@ 5636 @LENGTH@ 16
---INS ParameterizedType@@PersistentEntity<?,?> @TO@ VariableDeclarationStatement@@PersistentEntity<?,?> persistentEntity=persistentEntities.getPersistentEntity(domainType); @AT@ 5613 @LENGTH@ 22
------INS SimpleType@@PersistentEntity @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 5613 @LENGTH@ 16
------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 5630 @LENGTH@ 1
------INS WildcardType@@? @TO@ ParameterizedType@@PersistentEntity<?,?> @AT@ 5633 @LENGTH@ 1


UPD VariableDeclarationStatement@@String reply=template.requestBody("netty4-http:http://0.0.0.0:" + port1 + "/foo","World",String.class); @TO@ String reply=template.requestBody("netty4-http:http://localhost:" + port1 + "/foo","World",String.class); @AT@ 1101 @LENGTH@ 107
---UPD VariableDeclarationFragment@@reply=template.requestBody("netty4-http:http://0.0.0.0:" + port1 + "/foo","World",String.class) @TO@ reply=template.requestBody("netty4-http:http://localhost:" + port1 + "/foo","World",String.class) @AT@ 1108 @LENGTH@ 99
------UPD MethodInvocation@@template.requestBody("netty4-http:http://0.0.0.0:" + port1 + "/foo","World",String.class) @TO@ template.requestBody("netty4-http:http://localhost:" + port1 + "/foo","World",String.class) @AT@ 1116 @LENGTH@ 91
---------UPD SimpleName@@MethodName:requestBody:["netty4-http:http://0.0.0.0:" + port1 + "/foo", "World", String.class] @TO@ MethodName:requestBody:["netty4-http:http://localhost:" + port1 + "/foo", "World", String.class] @AT@ 1125 @LENGTH@ 82
------------UPD InfixExpression@@"netty4-http:http://0.0.0.0:" + port1 + "/foo" @TO@ "netty4-http:http://localhost:" + port1 + "/foo" @AT@ 1137 @LENGTH@ 46
---------------UPD StringLiteral@@"netty4-http:http://0.0.0.0:" @TO@ "netty4-http:http://localhost:" @AT@ 1137 @LENGTH@ 29


UPD MethodDeclaration@@private, voidMethodName:FormatEnum, String value,  @TO@ voidMethodName:FormatEnum, String value,  @AT@ 1253 @LENGTH@ 68
---DEL Modifier@@private @AT@ 1253 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:exchange.getIn().setBody("test message " + i) @TO@ MethodInvocation:exchange.getIn().setBody(("test message " + i).getBytes("UTF-8")) @AT@ 2826 @LENGTH@ 46
---UPD MethodInvocation@@exchange.getIn().setBody("test message " + i) @TO@ exchange.getIn().setBody(("test message " + i).getBytes("UTF-8")) @AT@ 2826 @LENGTH@ 45
------UPD SimpleName@@MethodName:setBody:["test message " + i] @TO@ MethodName:setBody:[("test message " + i).getBytes("UTF-8")] @AT@ 2843 @LENGTH@ 28
---------DEL InfixExpression@@"test message " + i @AT@ 2851 @LENGTH@ 19
---------INS MethodInvocation@@("test message " + i).getBytes("UTF-8") @TO@ SimpleName@@MethodName:setBody:["test message " + i] @AT@ 2928 @LENGTH@ 39
------------INS ParenthesizedExpression@@("test message " + i) @TO@ MethodInvocation@@("test message " + i).getBytes("UTF-8") @AT@ 2928 @LENGTH@ 21
---------------INS InfixExpression@@"test message " + i @TO@ ParenthesizedExpression@@("test message " + i) @AT@ 2929 @LENGTH@ 19
------------------MOV StringLiteral@@"test message " @TO@ InfixExpression@@"test message " + i @AT@ 2851 @LENGTH@ 15
------------------MOV Operator@@+ @TO@ InfixExpression@@"test message " + i @AT@ 2866 @LENGTH@ 1
------------------MOV SimpleName@@i @TO@ InfixExpression@@"test message " + i @AT@ 2869 @LENGTH@ 1
------------INS SimpleName@@MethodName:getBytes:["UTF-8"] @TO@ MethodInvocation@@("test message " + i).getBytes("UTF-8") @AT@ 2950 @LENGTH@ 17
---------------INS StringLiteral@@"UTF-8" @TO@ SimpleName@@MethodName:getBytes:["UTF-8"] @AT@ 2959 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:context.start() @TO@ MethodDeclaration@@public, void, MethodName:testJmsSelector, Exception,  @AT@ 1316 @LENGTH@ 16
---INS MethodInvocation@@context.start() @TO@ ExpressionStatement@@MethodInvocation:context.start() @AT@ 1316 @LENGTH@ 15
------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.start() @AT@ 1316 @LENGTH@ 7
------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@context.start() @AT@ 1324 @LENGTH@ 7


UPD VariableDeclarationStatement@@String[] lines=written.split("\n"); @TO@ String[] lines=written.split("(\\r)?(\\n)"); @AT@ 1681 @LENGTH@ 37
---UPD VariableDeclarationFragment@@lines=written.split("\n") @TO@ lines=written.split("(\\r)?(\\n)") @AT@ 1690 @LENGTH@ 27
------UPD MethodInvocation@@written.split("\n") @TO@ written.split("(\\r)?(\\n)") @AT@ 1698 @LENGTH@ 19
---------UPD SimpleName@@MethodName:split:["\n"] @TO@ MethodName:split:["(\\r)?(\\n)"] @AT@ 1706 @LENGTH@ 11
------------UPD StringLiteral@@"\n" @TO@ "(\\r)?(\\n)" @AT@ 1712 @LENGTH@ 4


UPD TypeDeclaration@@[public]LdapUserDetailsMapperTests, TestCase @TO@ [public]LdapUserDetailsMapperTests,  @AT@ 1060 @LENGTH@ 2135
---DEL SimpleType@@TestCase @AT@ 1108 @LENGTH@ 8


UPD MethodDeclaration@@public, voidMethodName:MyProducer, Endpoint endpoint,  @TO@ voidMethodName:MyProducer, Endpoint endpoint,  @AT@ 4661 @LENGTH@ 77
---DEL Modifier@@public @AT@ 4661 @LENGTH@ 6


INS FieldDeclaration@@EntityManager, [em] @TO@ TypeDeclaration@@[@Transactional, @RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration(locations={"classpath:config/namespace-autoconfig-context.xml"}), public]AbstractPersistableIntegrationTests,  @AT@ 1725 @LENGTH@ 17
---INS SimpleType@@EntityManager @TO@ FieldDeclaration@@EntityManager, [em] @AT@ 1725 @LENGTH@ 13
---INS VariableDeclarationFragment@@em @TO@ FieldDeclaration@@EntityManager, [em] @AT@ 1739 @LENGTH@ 2
------INS SimpleName@@em @TO@ VariableDeclarationFragment@@em @AT@ 1739 @LENGTH@ 2


UPD Block@@ThenBody:{  final HazelcastSedaConfiguration config=new HazelcastSedaConfiguration();  setProperties(config,parameters);  config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length()));  endpoint=new HazelcastSedaEndpoint(hzInstance,uri,this,config);  endpoint.setCommand(HazelcastCommand.seda);} @TO@ ThenBody:{  remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/');  final HazelcastSedaConfiguration config=new HazelcastSedaConfiguration();  setProperties(config,parameters);  config.setQueueName(remaining);  endpoint=new HazelcastSedaEndpoint(hzInstance,uri,this,config);  endpoint.setCacheName(remaining);  endpoint.setCommand(HazelcastCommand.seda);} @AT@ 6078 @LENGTH@ 386
---UPD ExpressionStatement@@MethodInvocation:config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length())) @TO@ Assignment:remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @AT@ 6227 @LENGTH@ 89
------INS Assignment@@remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @TO@ ExpressionStatement@@MethodInvocation:config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length())) @AT@ 6145 @LENGTH@ 103
---------INS SimpleName@@remaining @TO@ Assignment@@remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @AT@ 6145 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @AT@ 6154 @LENGTH@ 1
---------INS MethodInvocation@@removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @TO@ Assignment@@remaining=removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @AT@ 6157 @LENGTH@ 91
------------MOV SimpleName@@MethodName:setQueueName:[remaining.substring(remaining.indexOf(":") + 1,remaining.length())] @TO@ MethodInvocation@@removeStartingCharacters(remaining.substring(HazelcastConstants.SEDA_PREFIX.length()),'/') @AT@ 6234 @LENGTH@ 81
---------------INS CharacterLiteral@@'/' @TO@ SimpleName@@MethodName:setQueueName:[remaining.substring(remaining.indexOf(":") + 1,remaining.length())] @AT@ 6244 @LENGTH@ 3
------DEL MethodInvocation@@config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length())) @AT@ 6227 @LENGTH@ 88
---------DEL SimpleName@@Name:config @AT@ 6227 @LENGTH@ 6
---MOV ExpressionStatement@@MethodInvocation:config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length())) @TO@ Block@@ThenBody:{  final HazelcastSedaConfiguration config=new HazelcastSedaConfiguration();  setProperties(config,parameters);  config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length()));  endpoint=new HazelcastSedaEndpoint(hzInstance,uri,this,config);  endpoint.setCommand(HazelcastCommand.seda);} @AT@ 6227 @LENGTH@ 89
---INS ExpressionStatement@@MethodInvocation:config.setQueueName(remaining) @TO@ Block@@ThenBody:{  final HazelcastSedaConfiguration config=new HazelcastSedaConfiguration();  setProperties(config,parameters);  config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length()));  endpoint=new HazelcastSedaEndpoint(hzInstance,uri,this,config);  endpoint.setCommand(HazelcastCommand.seda);} @AT@ 6397 @LENGTH@ 31
------INS MethodInvocation@@config.setQueueName(remaining) @TO@ ExpressionStatement@@MethodInvocation:config.setQueueName(remaining) @AT@ 6397 @LENGTH@ 30
---------INS SimpleName@@Name:config @TO@ MethodInvocation@@config.setQueueName(remaining) @AT@ 6397 @LENGTH@ 6
---------INS SimpleName@@MethodName:setQueueName:[remaining] @TO@ MethodInvocation@@config.setQueueName(remaining) @AT@ 6404 @LENGTH@ 23
------------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:setQueueName:[remaining] @AT@ 6417 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:endpoint.setCacheName(remaining) @TO@ Block@@ThenBody:{  final HazelcastSedaConfiguration config=new HazelcastSedaConfiguration();  setProperties(config,parameters);  config.setQueueName(remaining.substring(remaining.indexOf(":") + 1,remaining.length()));  endpoint=new HazelcastSedaEndpoint(hzInstance,uri,this,config);  endpoint.setCommand(HazelcastCommand.seda);} @AT@ 6522 @LENGTH@ 33
------INS MethodInvocation@@endpoint.setCacheName(remaining) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setCacheName(remaining) @AT@ 6522 @LENGTH@ 32
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setCacheName(remaining) @AT@ 6522 @LENGTH@ 8
---------INS SimpleName@@MethodName:setCacheName:[remaining] @TO@ MethodInvocation@@endpoint.setCacheName(remaining) @AT@ 6531 @LENGTH@ 23
------------INS SimpleName@@remaining @TO@ SimpleName@@MethodName:setCacheName:[remaining] @AT@ 6544 @LENGTH@ 9

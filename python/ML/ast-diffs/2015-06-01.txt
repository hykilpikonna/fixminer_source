INS TypeDeclaration@@AddressProjection,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), @Transactional, public]RepositoryEntityControllerIntegrationTests, AbstractControllerIntegrationTests @AT@ 9777 @LENGTH@ 20
---INS SimpleName@@ClassName:AddressProjection @TO@ TypeDeclaration@@AddressProjection,  @AT@ 9777 @LENGTH@ 17


INS MethodDeclaration@@void, MethodName:stop, Exception,  @TO@ TypeDeclaration@@[public]Server,  @AT@ 162 @LENGTH@ 24
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:stop, Exception,  @AT@ 157 @LENGTH@ 4
---INS SimpleName@@MethodName:stop @TO@ MethodDeclaration@@void, MethodName:stop, Exception,  @AT@ 162 @LENGTH@ 4
---INS SimpleType@@Exception @TO@ MethodDeclaration@@void, MethodName:stop, Exception,  @AT@ 176 @LENGTH@ 9


UPD IfStatement@@if (ss == null) {  return PerfLogger.getPerfLogger(null,resetPerfLogger);} else if (ss.perfLogger != null && !resetPerfLogger) {  return ss.perfLogger;} else {  PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);  ss.perfLogger=perfLogger;  return perfLogger;} @TO@ if (ss == null) {  return PerfLogger.getPerfLogger(null,resetPerfLogger);} else {  return PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);} @AT@ 52014 @LENGTH@ 332
---DEL Block@@ElseBody:if (ss.perfLogger != null && !resetPerfLogger) {  return ss.perfLogger;} else {  PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);  ss.perfLogger=perfLogger;  return perfLogger;} @AT@ 52105 @LENGTH@ 241
------DEL IfStatement@@if (ss.perfLogger != null && !resetPerfLogger) {  return ss.perfLogger;} else {  PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);  ss.perfLogger=perfLogger;  return perfLogger;} @AT@ 52105 @LENGTH@ 241
---------DEL InfixExpression@@ss.perfLogger != null && !resetPerfLogger @AT@ 52109 @LENGTH@ 41
------------DEL InfixExpression@@ss.perfLogger != null @AT@ 52109 @LENGTH@ 21
---------------DEL QualifiedName@@ss.perfLogger @AT@ 52109 @LENGTH@ 13
------------------DEL SimpleName@@ss @AT@ 52109 @LENGTH@ 2
------------------DEL SimpleName@@perfLogger @AT@ 52112 @LENGTH@ 10
---------------DEL Operator@@!= @AT@ 52122 @LENGTH@ 2
---------------DEL NullLiteral@@null @AT@ 52126 @LENGTH@ 4
------------DEL Operator@@&& @AT@ 52130 @LENGTH@ 2
------------DEL PrefixExpression@@!resetPerfLogger @AT@ 52134 @LENGTH@ 16
---------------DEL Operator@@! @AT@ 52134 @LENGTH@ 1
---------------DEL SimpleName@@resetPerfLogger @AT@ 52135 @LENGTH@ 15
---------DEL Block@@ThenBody:{  return ss.perfLogger;} @AT@ 52152 @LENGTH@ 35
------------DEL ReturnStatement@@QualifiedName:ss.perfLogger @AT@ 52160 @LENGTH@ 21
---------------DEL QualifiedName@@ss.perfLogger @AT@ 52167 @LENGTH@ 13
------------------DEL SimpleName@@ss @AT@ 52167 @LENGTH@ 2
------------------DEL SimpleName@@perfLogger @AT@ 52170 @LENGTH@ 10
---MOV Block@@ElseBody:{  PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);  ss.perfLogger=perfLogger;  return perfLogger;} @TO@ IfStatement@@if (ss == null) {  return PerfLogger.getPerfLogger(null,resetPerfLogger);} else if (ss.perfLogger != null && !resetPerfLogger) {  return ss.perfLogger;} else {  PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger);  ss.perfLogger=perfLogger;  return perfLogger;} @AT@ 52193 @LENGTH@ 153
------DEL VariableDeclarationStatement@@PerfLogger perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger); @AT@ 52201 @LENGTH@ 80
---------DEL SimpleType@@PerfLogger @AT@ 52201 @LENGTH@ 10
---------DEL VariableDeclarationFragment@@perfLogger=PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger) @AT@ 52212 @LENGTH@ 68
------------DEL SimpleName@@perfLogger @AT@ 52212 @LENGTH@ 10
------DEL ExpressionStatement@@Assignment:ss.perfLogger=perfLogger @AT@ 52288 @LENGTH@ 27
---------DEL Assignment@@ss.perfLogger=perfLogger @AT@ 52288 @LENGTH@ 26
------------DEL QualifiedName@@ss.perfLogger @AT@ 52288 @LENGTH@ 13
---------------DEL SimpleName@@ss @AT@ 52288 @LENGTH@ 2
---------------DEL SimpleName@@perfLogger @AT@ 52291 @LENGTH@ 10
------------DEL Operator@@= @AT@ 52301 @LENGTH@ 1
------------DEL SimpleName@@perfLogger @AT@ 52304 @LENGTH@ 10
------UPD ReturnStatement@@SimpleName:perfLogger @TO@ MethodInvocation:PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger) @AT@ 52322 @LENGTH@ 18
---------MOV MethodInvocation@@PerfLogger.getPerfLogger(ss.getConf(),resetPerfLogger) @TO@ ReturnStatement@@SimpleName:perfLogger @AT@ 52225 @LENGTH@ 55
---------DEL SimpleName@@perfLogger @AT@ 52329 @LENGTH@ 10


DEL MethodDeclaration@@public, Void, MethodName:touchOnlyWorldsReachableByRocket,  @AT@ 1299 @LENGTH@ 47
---DEL Modifier@@public @AT@ 1299 @LENGTH@ 6
---DEL SimpleType@@Void @AT@ 1306 @LENGTH@ 4
---DEL SimpleName@@MethodName:touchOnlyWorldsReachableByRocket @AT@ 1311 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:testEnvProperties,  @TO@ TypeDeclaration@@[public]SpringYarnPropertiesTests,  @AT@ 2238 @LENGTH@ 799
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2238 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2245 @LENGTH@ 4
---INS SimpleName@@MethodName:testEnvProperties @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2250 @LENGTH@ 17
---INS VariableDeclarationStatement@@SpringApplication app=new SpringApplication(TestConfiguration.class); @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2274 @LENGTH@ 71
------INS SimpleType@@SpringApplication @TO@ VariableDeclarationStatement@@SpringApplication app=new SpringApplication(TestConfiguration.class); @AT@ 2274 @LENGTH@ 17
------INS VariableDeclarationFragment@@app=new SpringApplication(TestConfiguration.class) @TO@ VariableDeclarationStatement@@SpringApplication app=new SpringApplication(TestConfiguration.class); @AT@ 2292 @LENGTH@ 52
---------INS SimpleName@@app @TO@ VariableDeclarationFragment@@app=new SpringApplication(TestConfiguration.class) @AT@ 2292 @LENGTH@ 3
---------INS ClassInstanceCreation@@SpringApplication[TestConfiguration.class] @TO@ VariableDeclarationFragment@@app=new SpringApplication(TestConfiguration.class) @AT@ 2298 @LENGTH@ 46
------------INS New@@new @TO@ ClassInstanceCreation@@SpringApplication[TestConfiguration.class] @AT@ 2298 @LENGTH@ 3
------------INS SimpleType@@SpringApplication @TO@ ClassInstanceCreation@@SpringApplication[TestConfiguration.class] @AT@ 2302 @LENGTH@ 17
------------INS TypeLiteral@@TestConfiguration.class @TO@ ClassInstanceCreation@@SpringApplication[TestConfiguration.class] @AT@ 2320 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:app.setWebEnvironment(false) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2348 @LENGTH@ 29
------INS MethodInvocation@@app.setWebEnvironment(false) @TO@ ExpressionStatement@@MethodInvocation:app.setWebEnvironment(false) @AT@ 2348 @LENGTH@ 28
---------INS SimpleName@@Name:app @TO@ MethodInvocation@@app.setWebEnvironment(false) @AT@ 2348 @LENGTH@ 3
---------INS SimpleName@@MethodName:setWebEnvironment:[false] @TO@ MethodInvocation@@app.setWebEnvironment(false) @AT@ 2352 @LENGTH@ 24
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:setWebEnvironment:[false] @AT@ 2370 @LENGTH@ 5
---INS VariableDeclarationStatement@@ConfigurableApplicationContext context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}); @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2380 @LENGTH@ 260
------INS SimpleType@@ConfigurableApplicationContext @TO@ VariableDeclarationStatement@@ConfigurableApplicationContext context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}); @AT@ 2380 @LENGTH@ 30
------INS VariableDeclarationFragment@@context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @TO@ VariableDeclarationStatement@@ConfigurableApplicationContext context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}); @AT@ 2411 @LENGTH@ 228
---------INS SimpleName@@context @TO@ VariableDeclarationFragment@@context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @AT@ 2411 @LENGTH@ 7
---------INS MethodInvocation@@app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @TO@ VariableDeclarationFragment@@context=app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @AT@ 2421 @LENGTH@ 218
------------INS SimpleName@@Name:app @TO@ MethodInvocation@@app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @AT@ 2421 @LENGTH@ 3
------------INS SimpleName@@MethodName:run:[new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}] @TO@ MethodInvocation@@app.run(new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}) @AT@ 2425 @LENGTH@ 214
---------------INS ArrayCreation@@new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @TO@ SimpleName@@MethodName:run:[new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"}] @AT@ 2429 @LENGTH@ 209
------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2433 @LENGTH@ 8
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 2433 @LENGTH@ 6
------------------INS ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @TO@ ArrayCreation@@new String[]{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2442 @LENGTH@ 196
---------------------INS StringLiteral@@"--SHDP_HD_FS=myshdphdfs" @TO@ ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2444 @LENGTH@ 25
---------------------INS StringLiteral@@"--SHDP_HD_RM=myshdphdrm" @TO@ ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2475 @LENGTH@ 25
---------------------INS StringLiteral@@"--SHDP_HD_SCHEDULER=myshdpscheduler" @TO@ ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2502 @LENGTH@ 37
---------------------INS StringLiteral@@"--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl" @TO@ ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2545 @LENGTH@ 51
---------------------INS StringLiteral@@"--SHDP_CONTAINERID=myshdpcontainerid" @TO@ ArrayInitializer@@{"--SHDP_HD_FS=myshdphdfs","--SHDP_HD_RM=myshdphdrm","--SHDP_HD_SCHEDULER=myshdpscheduler","--SHDP_AMSERVICE_TRACKURL=myshdpamservicetrackurl","--SHDP_CONTAINERID=myshdpcontainerid"} @AT@ 2598 @LENGTH@ 38
---INS VariableDeclarationStatement@@SpringYarnEnvProperties properties=context.getBean(SpringYarnEnvProperties.class); @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2643 @LENGTH@ 84
------INS SimpleType@@SpringYarnEnvProperties @TO@ VariableDeclarationStatement@@SpringYarnEnvProperties properties=context.getBean(SpringYarnEnvProperties.class); @AT@ 2643 @LENGTH@ 23
------INS VariableDeclarationFragment@@properties=context.getBean(SpringYarnEnvProperties.class) @TO@ VariableDeclarationStatement@@SpringYarnEnvProperties properties=context.getBean(SpringYarnEnvProperties.class); @AT@ 2667 @LENGTH@ 59
---------INS SimpleName@@properties @TO@ VariableDeclarationFragment@@properties=context.getBean(SpringYarnEnvProperties.class) @AT@ 2667 @LENGTH@ 10
---------INS MethodInvocation@@context.getBean(SpringYarnEnvProperties.class) @TO@ VariableDeclarationFragment@@properties=context.getBean(SpringYarnEnvProperties.class) @AT@ 2680 @LENGTH@ 46
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getBean(SpringYarnEnvProperties.class) @AT@ 2680 @LENGTH@ 7
------------INS SimpleName@@MethodName:getBean:[SpringYarnEnvProperties.class] @TO@ MethodInvocation@@context.getBean(SpringYarnEnvProperties.class) @AT@ 2688 @LENGTH@ 38
---------------INS TypeLiteral@@SpringYarnEnvProperties.class @TO@ SimpleName@@MethodName:getBean:[SpringYarnEnvProperties.class] @AT@ 2696 @LENGTH@ 29
---INS ExpressionStatement@@MethodInvocation:assertThat(properties.getFs(),is("myshdphdfs")) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2730 @LENGTH@ 49
------INS MethodInvocation@@assertThat(properties.getFs(),is("myshdphdfs")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(properties.getFs(),is("myshdphdfs")) @AT@ 2730 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertThat:[properties.getFs(), is("myshdphdfs")] @TO@ MethodInvocation@@assertThat(properties.getFs(),is("myshdphdfs")) @AT@ 2730 @LENGTH@ 48
------------INS MethodInvocation@@properties.getFs() @TO@ SimpleName@@MethodName:assertThat:[properties.getFs(), is("myshdphdfs")] @AT@ 2741 @LENGTH@ 18
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getFs() @AT@ 2741 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getFs:[] @TO@ MethodInvocation@@properties.getFs() @AT@ 2752 @LENGTH@ 7
------------INS MethodInvocation@@is("myshdphdfs") @TO@ SimpleName@@MethodName:assertThat:[properties.getFs(), is("myshdphdfs")] @AT@ 2761 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:["myshdphdfs"] @TO@ MethodInvocation@@is("myshdphdfs") @AT@ 2761 @LENGTH@ 16
------------------INS StringLiteral@@"myshdphdfs" @TO@ SimpleName@@MethodName:is:["myshdphdfs"] @AT@ 2764 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:["myshdphdfs"] @TO@ MethodInvocation@@is("myshdphdfs") @AT@ 2761 @LENGTH@ 16
------------------INS StringLiteral@@"myshdphdfs" @TO@ SimpleName@@MethodName:is:["myshdphdfs"] @AT@ 2764 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(properties.getRm(),is("myshdphdrm")) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2782 @LENGTH@ 49
------INS MethodInvocation@@assertThat(properties.getRm(),is("myshdphdrm")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(properties.getRm(),is("myshdphdrm")) @AT@ 2782 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertThat:[properties.getRm(), is("myshdphdrm")] @TO@ MethodInvocation@@assertThat(properties.getRm(),is("myshdphdrm")) @AT@ 2782 @LENGTH@ 48
------------INS MethodInvocation@@properties.getRm() @TO@ SimpleName@@MethodName:assertThat:[properties.getRm(), is("myshdphdrm")] @AT@ 2793 @LENGTH@ 18
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getRm() @AT@ 2793 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getRm:[] @TO@ MethodInvocation@@properties.getRm() @AT@ 2804 @LENGTH@ 7
------------INS MethodInvocation@@is("myshdphdrm") @TO@ SimpleName@@MethodName:assertThat:[properties.getRm(), is("myshdphdrm")] @AT@ 2813 @LENGTH@ 16
---------------INS SimpleName@@MethodName:is:["myshdphdrm"] @TO@ MethodInvocation@@is("myshdphdrm") @AT@ 2813 @LENGTH@ 16
------------------INS StringLiteral@@"myshdphdrm" @TO@ SimpleName@@MethodName:is:["myshdphdrm"] @AT@ 2816 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:["myshdphdrm"] @TO@ MethodInvocation@@is("myshdphdrm") @AT@ 2813 @LENGTH@ 16
------------------INS StringLiteral@@"myshdphdrm" @TO@ SimpleName@@MethodName:is:["myshdphdrm"] @AT@ 2816 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(properties.getScheduler(),is("myshdpscheduler")) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2834 @LENGTH@ 61
------INS MethodInvocation@@assertThat(properties.getScheduler(),is("myshdpscheduler")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(properties.getScheduler(),is("myshdpscheduler")) @AT@ 2834 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertThat:[properties.getScheduler(), is("myshdpscheduler")] @TO@ MethodInvocation@@assertThat(properties.getScheduler(),is("myshdpscheduler")) @AT@ 2834 @LENGTH@ 60
------------INS MethodInvocation@@properties.getScheduler() @TO@ SimpleName@@MethodName:assertThat:[properties.getScheduler(), is("myshdpscheduler")] @AT@ 2845 @LENGTH@ 25
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getScheduler() @AT@ 2845 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getScheduler:[] @TO@ MethodInvocation@@properties.getScheduler() @AT@ 2856 @LENGTH@ 14
------------INS MethodInvocation@@is("myshdpscheduler") @TO@ SimpleName@@MethodName:assertThat:[properties.getScheduler(), is("myshdpscheduler")] @AT@ 2872 @LENGTH@ 21
---------------INS SimpleName@@MethodName:is:["myshdpscheduler"] @TO@ MethodInvocation@@is("myshdpscheduler") @AT@ 2872 @LENGTH@ 21
------------------INS StringLiteral@@"myshdpscheduler" @TO@ SimpleName@@MethodName:is:["myshdpscheduler"] @AT@ 2875 @LENGTH@ 17
---------------INS SimpleName@@MethodName:is:["myshdpscheduler"] @TO@ MethodInvocation@@is("myshdpscheduler") @AT@ 2872 @LENGTH@ 21
------------------INS StringLiteral@@"myshdpscheduler" @TO@ SimpleName@@MethodName:is:["myshdpscheduler"] @AT@ 2875 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(properties.getTrackUrl(),is("myshdpamservicetrackurl")) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2898 @LENGTH@ 68
------INS MethodInvocation@@assertThat(properties.getTrackUrl(),is("myshdpamservicetrackurl")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(properties.getTrackUrl(),is("myshdpamservicetrackurl")) @AT@ 2898 @LENGTH@ 67
---------INS SimpleName@@MethodName:assertThat:[properties.getTrackUrl(), is("myshdpamservicetrackurl")] @TO@ MethodInvocation@@assertThat(properties.getTrackUrl(),is("myshdpamservicetrackurl")) @AT@ 2898 @LENGTH@ 67
------------INS MethodInvocation@@properties.getTrackUrl() @TO@ SimpleName@@MethodName:assertThat:[properties.getTrackUrl(), is("myshdpamservicetrackurl")] @AT@ 2909 @LENGTH@ 24
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getTrackUrl() @AT@ 2909 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getTrackUrl:[] @TO@ MethodInvocation@@properties.getTrackUrl() @AT@ 2920 @LENGTH@ 13
------------INS MethodInvocation@@is("myshdpamservicetrackurl") @TO@ SimpleName@@MethodName:assertThat:[properties.getTrackUrl(), is("myshdpamservicetrackurl")] @AT@ 2935 @LENGTH@ 29
---------------INS SimpleName@@MethodName:is:["myshdpamservicetrackurl"] @TO@ MethodInvocation@@is("myshdpamservicetrackurl") @AT@ 2935 @LENGTH@ 29
------------------INS StringLiteral@@"myshdpamservicetrackurl" @TO@ SimpleName@@MethodName:is:["myshdpamservicetrackurl"] @AT@ 2938 @LENGTH@ 25
---------------INS SimpleName@@MethodName:is:["myshdpamservicetrackurl"] @TO@ MethodInvocation@@is("myshdpamservicetrackurl") @AT@ 2935 @LENGTH@ 29
------------------INS StringLiteral@@"myshdpamservicetrackurl" @TO@ SimpleName@@MethodName:is:["myshdpamservicetrackurl"] @AT@ 2938 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertThat(properties.getContainerId(),is("myshdpcontainerid")) @TO@ MethodDeclaration@@public, void, MethodName:testEnvProperties,  @AT@ 2969 @LENGTH@ 65
------INS MethodInvocation@@assertThat(properties.getContainerId(),is("myshdpcontainerid")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(properties.getContainerId(),is("myshdpcontainerid")) @AT@ 2969 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[properties.getContainerId(), is("myshdpcontainerid")] @TO@ MethodInvocation@@assertThat(properties.getContainerId(),is("myshdpcontainerid")) @AT@ 2969 @LENGTH@ 64
------------INS MethodInvocation@@properties.getContainerId() @TO@ SimpleName@@MethodName:assertThat:[properties.getContainerId(), is("myshdpcontainerid")] @AT@ 2980 @LENGTH@ 27
---------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.getContainerId() @AT@ 2980 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getContainerId:[] @TO@ MethodInvocation@@properties.getContainerId() @AT@ 2991 @LENGTH@ 16
------------INS MethodInvocation@@is("myshdpcontainerid") @TO@ SimpleName@@MethodName:assertThat:[properties.getContainerId(), is("myshdpcontainerid")] @AT@ 3009 @LENGTH@ 23
---------------INS SimpleName@@MethodName:is:["myshdpcontainerid"] @TO@ MethodInvocation@@is("myshdpcontainerid") @AT@ 3009 @LENGTH@ 23
------------------INS StringLiteral@@"myshdpcontainerid" @TO@ SimpleName@@MethodName:is:["myshdpcontainerid"] @AT@ 3012 @LENGTH@ 19


INS IfStatement@@if (INSTANCE == null) {  INSTANCE=new RedisTestProfileValueSource();} @TO@ MethodDeclaration@@public, static, boolean, MethodName:matches, String key, String value,  @AT@ 3367 @LENGTH@ 76
---INS InfixExpression@@INSTANCE == null @TO@ IfStatement@@if (INSTANCE == null) {  INSTANCE=new RedisTestProfileValueSource();} @AT@ 3371 @LENGTH@ 16
------INS SimpleName@@INSTANCE @TO@ InfixExpression@@INSTANCE == null @AT@ 3371 @LENGTH@ 8
------INS Operator@@== @TO@ InfixExpression@@INSTANCE == null @AT@ 3379 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@INSTANCE == null @AT@ 3383 @LENGTH@ 4
---INS Block@@ThenBody:{  INSTANCE=new RedisTestProfileValueSource();} @TO@ IfStatement@@if (INSTANCE == null) {  INSTANCE=new RedisTestProfileValueSource();} @AT@ 3389 @LENGTH@ 54
------INS ExpressionStatement@@Assignment:INSTANCE=new RedisTestProfileValueSource() @TO@ Block@@ThenBody:{  INSTANCE=new RedisTestProfileValueSource();} @AT@ 3394 @LENGTH@ 45
---------INS Assignment@@INSTANCE=new RedisTestProfileValueSource() @TO@ ExpressionStatement@@Assignment:INSTANCE=new RedisTestProfileValueSource() @AT@ 3394 @LENGTH@ 44
------------INS SimpleName@@INSTANCE @TO@ Assignment@@INSTANCE=new RedisTestProfileValueSource() @AT@ 3394 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@INSTANCE=new RedisTestProfileValueSource() @AT@ 3402 @LENGTH@ 1
------------INS ClassInstanceCreation@@RedisTestProfileValueSource[] @TO@ Assignment@@INSTANCE=new RedisTestProfileValueSource() @AT@ 3405 @LENGTH@ 33
---------------INS New@@new @TO@ ClassInstanceCreation@@RedisTestProfileValueSource[] @AT@ 3405 @LENGTH@ 3
---------------INS SimpleType@@RedisTestProfileValueSource @TO@ ClassInstanceCreation@@RedisTestProfileValueSource[] @AT@ 3409 @LENGTH@ 27


UPD ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=tokens[i];  if (properties.containsKey(key)) {    if (!first) {      sb.append(token);    }    hasQuestionmark|=token.contains("?") || key.contains("?");    sb.append(key2);    first=false;  }  range++;} @TO@ for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=null;  if (tokens.length > i) {    token=tokens[i];  }  if (properties.containsKey(key)) {    if (!first && token != null) {      sb.append(token);    }    hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));    sb.append(key2);    first=false;  }  range++;} @AT@ 25613 @LENGTH@ 524
---DEL VariableDeclarationStatement@@String token=tokens[i]; @AT@ 25752 @LENGTH@ 25
------DEL VariableDeclarationFragment@@token=tokens[i] @AT@ 25759 @LENGTH@ 17
---------DEL ArrayAccess@@tokens[i] @AT@ 25767 @LENGTH@ 9
---INS VariableDeclarationStatement@@String token=null; @TO@ ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=tokens[i];  if (properties.containsKey(key)) {    if (!first) {      sb.append(token);    }    hasQuestionmark|=token.contains("?") || key.contains("?");    sb.append(key2);    first=false;  }  range++;} @AT@ 25752 @LENGTH@ 20
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String token=null; @AT@ 25752 @LENGTH@ 6
------INS VariableDeclarationFragment@@token=null @TO@ VariableDeclarationStatement@@String token=null; @AT@ 25759 @LENGTH@ 12
---------MOV SimpleName@@token @TO@ VariableDeclarationFragment@@token=null @AT@ 25759 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@token=null @AT@ 25767 @LENGTH@ 4
---INS IfStatement@@if (tokens.length > i) {  token=tokens[i];} @TO@ ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=tokens[i];  if (properties.containsKey(key)) {    if (!first) {      sb.append(token);    }    hasQuestionmark|=token.contains("?") || key.contains("?");    sb.append(key2);    first=false;  }  range++;} @AT@ 25785 @LENGTH@ 73
------INS InfixExpression@@tokens.length > i @TO@ IfStatement@@if (tokens.length > i) {  token=tokens[i];} @AT@ 25789 @LENGTH@ 17
---------INS QualifiedName@@tokens.length @TO@ InfixExpression@@tokens.length > i @AT@ 25789 @LENGTH@ 13
------------INS SimpleName@@tokens @TO@ QualifiedName@@tokens.length @AT@ 25789 @LENGTH@ 6
------------INS SimpleName@@length @TO@ QualifiedName@@tokens.length @AT@ 25796 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@tokens.length > i @AT@ 25802 @LENGTH@ 1
---------INS SimpleName@@i @TO@ InfixExpression@@tokens.length > i @AT@ 25805 @LENGTH@ 1
------INS Block@@ThenBody:{  token=tokens[i];} @TO@ IfStatement@@if (tokens.length > i) {  token=tokens[i];} @AT@ 25808 @LENGTH@ 50
---------INS ExpressionStatement@@Assignment:token=tokens[i] @TO@ Block@@ThenBody:{  token=tokens[i];} @AT@ 25826 @LENGTH@ 18
------------INS Assignment@@token=tokens[i] @TO@ ExpressionStatement@@Assignment:token=tokens[i] @AT@ 25826 @LENGTH@ 17
---------------INS SimpleName@@token @TO@ Assignment@@token=tokens[i] @AT@ 25826 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@token=tokens[i] @AT@ 25831 @LENGTH@ 1
---------------INS ArrayAccess@@tokens[i] @TO@ Assignment@@token=tokens[i] @AT@ 25834 @LENGTH@ 9
------------------MOV SimpleName@@tokens @TO@ ArrayAccess@@tokens[i] @AT@ 25767 @LENGTH@ 6
------------------MOV SimpleName@@i @TO@ ArrayAccess@@tokens[i] @AT@ 25774 @LENGTH@ 1
---UPD IfStatement@@if (properties.containsKey(key)) {  if (!first) {    sb.append(token);  }  hasQuestionmark|=token.contains("?") || key.contains("?");  sb.append(key2);  first=false;} @TO@ if (properties.containsKey(key)) {  if (!first && token != null) {    sb.append(token);  }  hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));  sb.append(key2);  first=false;} @AT@ 25831 @LENGTH@ 275
------UPD Block@@ThenBody:{  if (!first) {    sb.append(token);  }  hasQuestionmark|=token.contains("?") || key.contains("?");  sb.append(key2);  first=false;} @TO@ ThenBody:{  if (!first && token != null) {    sb.append(token);  }  hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));  sb.append(key2);  first=false;} @AT@ 25864 @LENGTH@ 242
---------UPD IfStatement@@if (!first) {  sb.append(token);} @TO@ if (!first && token != null) {  sb.append(token);} @AT@ 25882 @LENGTH@ 69
------------DEL PrefixExpression@@!first @AT@ 25886 @LENGTH@ 6
------------INS InfixExpression@@!first && token != null @TO@ IfStatement@@if (!first) {  sb.append(token);} @AT@ 25967 @LENGTH@ 23
---------------INS PrefixExpression@@!first @TO@ InfixExpression@@!first && token != null @AT@ 25967 @LENGTH@ 6
------------------MOV Operator@@! @TO@ PrefixExpression@@!first @AT@ 25886 @LENGTH@ 1
------------------MOV SimpleName@@first @TO@ PrefixExpression@@!first @AT@ 25887 @LENGTH@ 5
---------------INS Operator@@&& @TO@ InfixExpression@@!first && token != null @AT@ 25973 @LENGTH@ 2
---------------INS InfixExpression@@token != null @TO@ InfixExpression@@!first && token != null @AT@ 25977 @LENGTH@ 13
------------------INS SimpleName@@token @TO@ InfixExpression@@token != null @AT@ 25977 @LENGTH@ 5
------------------INS Operator@@!= @TO@ InfixExpression@@token != null @AT@ 25982 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@token != null @AT@ 25986 @LENGTH@ 4
---------UPD ExpressionStatement@@Assignment:hasQuestionmark|=token.contains("?") || key.contains("?") @TO@ Assignment:hasQuestionmark|=key.contains("?") || (token != null && token.contains("?")) @AT@ 25968 @LENGTH@ 60
------------UPD Assignment@@hasQuestionmark|=token.contains("?") || key.contains("?") @TO@ hasQuestionmark|=key.contains("?") || (token != null && token.contains("?")) @AT@ 25968 @LENGTH@ 59
---------------UPD InfixExpression@@token.contains("?") || key.contains("?") @TO@ key.contains("?") || (token != null && token.contains("?")) @AT@ 25987 @LENGTH@ 40
------------------MOV Operator@@|| @TO@ InfixExpression@@token.contains("?") || key.contains("?") @AT@ 26006 @LENGTH@ 2
------------------INS ParenthesizedExpression@@(token != null && token.contains("?")) @TO@ InfixExpression@@token.contains("?") || key.contains("?") @AT@ 26106 @LENGTH@ 38
---------------------INS InfixExpression@@token != null && token.contains("?") @TO@ ParenthesizedExpression@@(token != null && token.contains("?")) @AT@ 26107 @LENGTH@ 36
------------------------MOV MethodInvocation@@token.contains("?") @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 25987 @LENGTH@ 19
------------------------INS InfixExpression@@token != null @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 26107 @LENGTH@ 13
---------------------------INS SimpleName@@token @TO@ InfixExpression@@token != null @AT@ 26107 @LENGTH@ 5
---------------------------INS Operator@@!= @TO@ InfixExpression@@token != null @AT@ 26112 @LENGTH@ 2
---------------------------INS NullLiteral@@null @TO@ InfixExpression@@token != null @AT@ 26116 @LENGTH@ 4
------------------------INS Operator@@&& @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 26120 @LENGTH@ 2


UPD FieldDeclaration@@public, static, Logger, [LOG=LoggerFactory.getLogger(ActivatorTest.class)] @TO@ public, static, final, Logger, [LOG=LoggerFactory.getLogger(ActivatorTest.class)] @AT@ 1628 @LENGTH@ 72
---INS Modifier@@final @TO@ FieldDeclaration@@public, static, Logger, [LOG=LoggerFactory.getLogger(ActivatorTest.class)] @AT@ 1537 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:LOG.debug("Registering classpath-scanned entity %s in persistence unit info!",definition.getBeanClassName()) @TO@ MethodInvocation:LOG.debug("Registering classpath-scanned entity {} in persistence unit info!",definition.getBeanClassName()) @AT@ 5186 @LENGTH@ 110
---UPD MethodInvocation@@LOG.debug("Registering classpath-scanned entity %s in persistence unit info!",definition.getBeanClassName()) @TO@ LOG.debug("Registering classpath-scanned entity {} in persistence unit info!",definition.getBeanClassName()) @AT@ 5186 @LENGTH@ 109
------UPD SimpleName@@MethodName:debug:["Registering classpath-scanned entity %s in persistence unit info!", definition.getBeanClassName()] @TO@ MethodName:debug:["Registering classpath-scanned entity {} in persistence unit info!", definition.getBeanClassName()] @AT@ 5190 @LENGTH@ 105
---------UPD StringLiteral@@"Registering classpath-scanned entity %s in persistence unit info!" @TO@ "Registering classpath-scanned entity {} in persistence unit info!" @AT@ 5196 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:assertTrue(String.format("Cause was: %1$s!",ClassUtils.getClassName(expected.getCause())),expected.getCause() instanceof IllegalArgumentException) @TO@ MethodInvocation:assertTrue(String.format("Cause was: %1$s!",ObjectUtils.nullSafeClassName(expected.getCause())),expected.getCause() instanceof IllegalArgumentException) @AT@ 22060 @LENGTH@ 153
---UPD MethodInvocation@@assertTrue(String.format("Cause was: %1$s!",ClassUtils.getClassName(expected.getCause())),expected.getCause() instanceof IllegalArgumentException) @TO@ assertTrue(String.format("Cause was: %1$s!",ObjectUtils.nullSafeClassName(expected.getCause())),expected.getCause() instanceof IllegalArgumentException) @AT@ 22060 @LENGTH@ 152
------UPD SimpleName@@MethodName:assertTrue:[String.format("Cause was: %1$s!",ClassUtils.getClassName(expected.getCause())), expected.getCause() instanceof IllegalArgumentException] @TO@ MethodName:assertTrue:[String.format("Cause was: %1$s!",ObjectUtils.nullSafeClassName(expected.getCause())), expected.getCause() instanceof IllegalArgumentException] @AT@ 22060 @LENGTH@ 152
---------UPD MethodInvocation@@String.format("Cause was: %1$s!",ClassUtils.getClassName(expected.getCause())) @TO@ String.format("Cause was: %1$s!",ObjectUtils.nullSafeClassName(expected.getCause())) @AT@ 22071 @LENGTH@ 79
------------UPD SimpleName@@MethodName:format:["Cause was: %1$s!", ClassUtils.getClassName(expected.getCause())] @TO@ MethodName:format:["Cause was: %1$s!", ObjectUtils.nullSafeClassName(expected.getCause())] @AT@ 22078 @LENGTH@ 72
---------------UPD MethodInvocation@@ClassUtils.getClassName(expected.getCause()) @TO@ ObjectUtils.nullSafeClassName(expected.getCause()) @AT@ 22105 @LENGTH@ 44
------------------UPD SimpleName@@Name:ClassUtils @TO@ Name:ObjectUtils @AT@ 22105 @LENGTH@ 10
------------------UPD SimpleName@@MethodName:getClassName:[expected.getCause()] @TO@ MethodName:nullSafeClassName:[expected.getCause()] @AT@ 22116 @LENGTH@ 33


INS MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @TO@ TypeDeclaration@@[public, abstract]MessageSupport, [Message] @AT@ 5404 @LENGTH@ 731
---MOV VariableDeclarationStatement@@boolean sameAttachments=false; @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5389 @LENGTH@ 32
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5404 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5411 @LENGTH@ 4
---INS SimpleName@@MethodName:copyAttachments @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5416 @LENGTH@ 15
---MOV IfStatement@@if (hasAttachments() && that.hasAttachments() && getAttachments() == that.getAttachments()) {  sameAttachments=true;} @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5430 @LENGTH@ 139
---INS SingleVariableDeclaration@@Message that @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5432 @LENGTH@ 12
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message that @AT@ 5432 @LENGTH@ 7
------INS SimpleName@@that @TO@ SingleVariableDeclaration@@Message that @AT@ 5440 @LENGTH@ 4
---MOV IfStatement@@if (!sameAttachments) {  if (hasAttachments()) {    getAttachments().clear();  }  if (that.hasAttachments()) {    getAttachments().putAll(that.getAttachments());  }} @TO@ MethodDeclaration@@public, void, MethodName:copyAttachments, Message that,  @AT@ 5579 @LENGTH@ 302


UPD IfStatement@@if (accessTokenValiditySeconds != other.accessTokenValiditySeconds) return false; @TO@ if (accessTokenValiditySeconds == null) {  if (other.accessTokenValiditySeconds != null)   return false;} else if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @AT@ 12264 @LENGTH@ 84
---DEL InfixExpression@@accessTokenValiditySeconds != other.accessTokenValiditySeconds @AT@ 12268 @LENGTH@ 62
------DEL QualifiedName@@other.accessTokenValiditySeconds @AT@ 12298 @LENGTH@ 32
---INS InfixExpression@@accessTokenValiditySeconds == null @TO@ IfStatement@@if (accessTokenValiditySeconds != other.accessTokenValiditySeconds) return false; @AT@ 12268 @LENGTH@ 34
------MOV SimpleName@@accessTokenValiditySeconds @TO@ InfixExpression@@accessTokenValiditySeconds == null @AT@ 12268 @LENGTH@ 26
------INS Operator@@== @TO@ InfixExpression@@accessTokenValiditySeconds == null @AT@ 12294 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@accessTokenValiditySeconds == null @AT@ 12298 @LENGTH@ 4
---INS Block@@ThenBody:{  if (other.accessTokenValiditySeconds != null)   return false;} @TO@ IfStatement@@if (accessTokenValiditySeconds != other.accessTokenValiditySeconds) return false; @AT@ 12304 @LENGTH@ 72
------INS IfStatement@@if (other.accessTokenValiditySeconds != null) return false; @TO@ Block@@ThenBody:{  if (other.accessTokenValiditySeconds != null)   return false;} @AT@ 12309 @LENGTH@ 63
---------INS InfixExpression@@other.accessTokenValiditySeconds != null @TO@ IfStatement@@if (other.accessTokenValiditySeconds != null) return false; @AT@ 12313 @LENGTH@ 40
------------MOV Operator@@!= @TO@ InfixExpression@@other.accessTokenValiditySeconds != null @AT@ 12294 @LENGTH@ 2
------------INS QualifiedName@@other.accessTokenValiditySeconds @TO@ InfixExpression@@other.accessTokenValiditySeconds != null @AT@ 12313 @LENGTH@ 32
---------------INS SimpleName@@other @TO@ QualifiedName@@other.accessTokenValiditySeconds @AT@ 12313 @LENGTH@ 5
---------------INS SimpleName@@accessTokenValiditySeconds @TO@ QualifiedName@@other.accessTokenValiditySeconds @AT@ 12319 @LENGTH@ 26
------------INS NullLiteral@@null @TO@ InfixExpression@@other.accessTokenValiditySeconds != null @AT@ 12349 @LENGTH@ 4
---------MOV Block@@ThenBody:return false; @TO@ IfStatement@@if (other.accessTokenValiditySeconds != null) return false; @AT@ 12335 @LENGTH@ 13
---INS Block@@ElseBody:if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @TO@ IfStatement@@if (accessTokenValiditySeconds != other.accessTokenValiditySeconds) return false; @AT@ 12382 @LENGTH@ 90
------INS IfStatement@@if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @TO@ Block@@ElseBody:if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @AT@ 12382 @LENGTH@ 90
---------INS PrefixExpression@@!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @TO@ IfStatement@@if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @AT@ 12386 @LENGTH@ 68
------------INS Operator@@! @TO@ PrefixExpression@@!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @AT@ 12386 @LENGTH@ 1
------------INS MethodInvocation@@accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @TO@ PrefixExpression@@!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @AT@ 12387 @LENGTH@ 67
---------------INS SimpleName@@Name:accessTokenValiditySeconds @TO@ MethodInvocation@@accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @AT@ 12387 @LENGTH@ 26
---------------INS SimpleName@@MethodName:equals:[other.accessTokenValiditySeconds] @TO@ MethodInvocation@@accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds) @AT@ 12414 @LENGTH@ 40
------------------INS QualifiedName@@other.accessTokenValiditySeconds @TO@ SimpleName@@MethodName:equals:[other.accessTokenValiditySeconds] @AT@ 12421 @LENGTH@ 32
---------------------MOV SimpleName@@other @TO@ QualifiedName@@other.accessTokenValiditySeconds @AT@ 12298 @LENGTH@ 5
---------------------MOV SimpleName@@accessTokenValiditySeconds @TO@ QualifiedName@@other.accessTokenValiditySeconds @AT@ 12304 @LENGTH@ 26
---------MOV Block@@ThenBody:return false; @TO@ IfStatement@@if (!accessTokenValiditySeconds.equals(other.accessTokenValiditySeconds)) return false; @AT@ 12424 @LENGTH@ 13


UPD TypeDeclaration@@[@RunWith(Arquillian.class), @ServerSetup({MDB20TopicTestCase.JmsQueueSetup.class}), @Ignore, public]MDB20TopicTestCase, AbstractMDB2xTestCase @TO@ [@RunWith(Arquillian.class), @ServerSetup({MDB20TopicTestCase.JmsQueueSetup.class}), public]MDB20TopicTestCase, AbstractMDB2xTestCase @AT@ 2069 @LENGTH@ 3068
---DEL MarkerAnnotation@@@Ignore @AT@ 2151 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)) @TO@ MethodDeclaration@@public, ModuleSpec, MethodName:findModule, ModuleIdentifier identifier, ModuleLoader delegateLoader, ModuleLoadException,  @AT@ 954 @LENGTH@ 115
---INS MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)) @TO@ ExpressionStatement@@MethodInvocation:builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)) @AT@ 954 @LENGTH@ 114
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)) @AT@ 954 @LENGTH@ 7
------INS SimpleName@@MethodName:addDependency:[DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)] @TO@ MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)) @AT@ 962 @LENGTH@ 106
---------INS MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true) @TO@ SimpleName@@MethodName:addDependency:[DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true)] @AT@ 977 @LENGTH@ 89
------------INS SimpleName@@Name:DependencySpec @TO@ MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true) @AT@ 977 @LENGTH@ 14
------------INS SimpleName@@MethodName:createModuleDependencySpec:[ModuleIdentifier.create("javax.api"), true] @TO@ MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("javax.api"),true) @AT@ 992 @LENGTH@ 74
---------------INS MethodInvocation@@ModuleIdentifier.create("javax.api") @TO@ SimpleName@@MethodName:createModuleDependencySpec:[ModuleIdentifier.create("javax.api"), true] @AT@ 1020 @LENGTH@ 38
------------------INS SimpleName@@Name:ModuleIdentifier @TO@ MethodInvocation@@ModuleIdentifier.create("javax.api") @AT@ 1020 @LENGTH@ 16
------------------INS SimpleName@@MethodName:create:["javax.api"] @TO@ MethodInvocation@@ModuleIdentifier.create("javax.api") @AT@ 1037 @LENGTH@ 21
---------------------INS StringLiteral@@"javax.api" @TO@ SimpleName@@MethodName:create:["javax.api"] @AT@ 1045 @LENGTH@ 11
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:createModuleDependencySpec:[ModuleIdentifier.create("javax.api"), true] @AT@ 1060 @LENGTH@ 4


INS MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @TO@ TypeDeclaration@@[public, final]URISupport,  @AT@ 1638 @LENGTH@ 146
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1638 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1645 @LENGTH@ 6
---INS SimpleType@@URI @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1652 @LENGTH@ 3
---INS SimpleName@@MethodName:normalizeUri @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1656 @LENGTH@ 12
---INS SingleVariableDeclaration@@String uri @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1669 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String uri @AT@ 1669 @LENGTH@ 6
------INS SimpleName@@uri @TO@ SingleVariableDeclaration@@String uri @AT@ 1676 @LENGTH@ 3
---INS SimpleType@@URISyntaxException @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1688 @LENGTH@ 18
---INS ReturnStatement@@ClassInstanceCreation:new URI(UnsafeUriCharactersEncoder.encode(uri,true)) @TO@ MethodDeclaration@@public, static, URI, MethodName:normalizeUri, String uri, URISyntaxException,  @AT@ 1717 @LENGTH@ 61
------INS ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri,true)] @TO@ ReturnStatement@@ClassInstanceCreation:new URI(UnsafeUriCharactersEncoder.encode(uri,true)) @AT@ 1724 @LENGTH@ 53
---------INS New@@new @TO@ ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri,true)] @AT@ 1724 @LENGTH@ 3
---------INS SimpleType@@URI @TO@ ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri,true)] @AT@ 1728 @LENGTH@ 3
---------INS MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri,true) @TO@ ClassInstanceCreation@@URI[UnsafeUriCharactersEncoder.encode(uri,true)] @AT@ 1732 @LENGTH@ 44
------------INS SimpleName@@Name:UnsafeUriCharactersEncoder @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri,true) @AT@ 1732 @LENGTH@ 26
------------INS SimpleName@@MethodName:encode:[uri, true] @TO@ MethodInvocation@@UnsafeUriCharactersEncoder.encode(uri,true) @AT@ 1759 @LENGTH@ 17
---------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:encode:[uri, true] @AT@ 1766 @LENGTH@ 3
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:encode:[uri, true] @AT@ 1771 @LENGTH@ 4


UPD VariableDeclarationStatement@@Property property=new JsonSchema.Property("foo","bar",false); @TO@ JsonSchemaProperty property=new JsonSchemaProperty("foo",null,"bar",false); @AT@ 1248 @LENGTH@ 65
---UPD SimpleType@@Property @TO@ JsonSchemaProperty @AT@ 1248 @LENGTH@ 8
---UPD VariableDeclarationFragment@@property=new JsonSchema.Property("foo","bar",false) @TO@ property=new JsonSchemaProperty("foo",null,"bar",false) @AT@ 1257 @LENGTH@ 55
------UPD ClassInstanceCreation@@JsonSchema.Property["foo", "bar", false] @TO@ JsonSchemaProperty["foo", null, "bar", false] @AT@ 1268 @LENGTH@ 44
---------UPD SimpleType@@JsonSchema.Property @TO@ JsonSchemaProperty @AT@ 1272 @LENGTH@ 19
---------INS NullLiteral@@null @TO@ ClassInstanceCreation@@JsonSchema.Property["foo", "bar", false] @AT@ 1318 @LENGTH@ 4


INS MethodDeclaration@@public, Set<Rating>, MethodName:getRatings,  @TO@ TypeDeclaration@@[public]User, Person @AT@ 1845 @LENGTH@ 63
---INS Modifier@@public @TO@ MethodDeclaration@@public, Set<Rating>, MethodName:getRatings,  @AT@ 1845 @LENGTH@ 6
---INS ParameterizedType@@Set<Rating> @TO@ MethodDeclaration@@public, Set<Rating>, MethodName:getRatings,  @AT@ 1852 @LENGTH@ 11
------INS SimpleType@@Set @TO@ ParameterizedType@@Set<Rating> @AT@ 1852 @LENGTH@ 3
------INS SimpleType@@Rating @TO@ ParameterizedType@@Set<Rating> @AT@ 1856 @LENGTH@ 6
---INS SimpleName@@MethodName:getRatings @TO@ MethodDeclaration@@public, Set<Rating>, MethodName:getRatings,  @AT@ 1864 @LENGTH@ 10
---INS ReturnStatement@@SimpleName:ratings @TO@ MethodDeclaration@@public, Set<Rating>, MethodName:getRatings,  @AT@ 1887 @LENGTH@ 15
------INS SimpleName@@ratings @TO@ ReturnStatement@@SimpleName:ratings @AT@ 1894 @LENGTH@ 7


UPD MethodDeclaration@@public, List<AuditableUser>, MethodName:findByFirstname, final String firstname,  @TO@ List<AuditableUser>, MethodName:findByFirstname, final String firstname,  @AT@ 1138 @LENGTH@ 67
---DEL Modifier@@public @AT@ 1138 @LENGTH@ 6


UPD MethodDeclaration@@voidMethodName:Route, final SimpleRegistry registry,  @TO@ voidMethodName:Route, final Registry registry,  @AT@ 1551 @LENGTH@ 78
---UPD SingleVariableDeclaration@@final SimpleRegistry registry @TO@ final Registry registry @AT@ 1557 @LENGTH@ 29
------UPD SimpleType@@SimpleRegistry @TO@ Registry @AT@ 1563 @LENGTH@ 14


INS MethodDeclaration@@public, int, MethodName:getOrder,  @TO@ TypeDeclaration@@[@Order(1000), public]WithSecurityContextTestExecutionListener, AbstractTestExecutionListener @AT@ 4427 @LENGTH@ 41
---INS Modifier@@public @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 4427 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 4434 @LENGTH@ 3
---INS SimpleName@@MethodName:getOrder @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 4438 @LENGTH@ 8
---INS ReturnStatement@@NumberLiteral:1000 @TO@ MethodDeclaration@@public, int, MethodName:getOrder,  @AT@ 4453 @LENGTH@ 12
------INS NumberLiteral@@1000 @TO@ ReturnStatement@@NumberLiteral:1000 @AT@ 4460 @LENGTH@ 4


INS MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @TO@ TypeDeclaration@@JsonPatchHandler,  @AT@ 5044 @LENGTH@ 460
---MOV VariableDeclarationStatement@@CollectionType listOfOperationsType=mapper.getTypeFactory().constructCollectionType(List.class,JsonPatchOperation.class); @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 3684 @LENGTH@ 128
---INS Modifier@@private @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 5044 @LENGTH@ 7
---INS ParameterizedType@@List<JsonPatchOperation> @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 5052 @LENGTH@ 24
------INS SimpleType@@List @TO@ ParameterizedType@@List<JsonPatchOperation> @AT@ 5052 @LENGTH@ 4
------INS SimpleType@@JsonPatchOperation @TO@ ParameterizedType@@List<JsonPatchOperation> @AT@ 5057 @LENGTH@ 18
---INS SimpleName@@MethodName:getPatchOperations @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 5077 @LENGTH@ 18
---INS SingleVariableDeclaration@@InputStream source @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 5096 @LENGTH@ 18
------INS SimpleType@@InputStream @TO@ SingleVariableDeclaration@@InputStream source @AT@ 5096 @LENGTH@ 11
------INS SimpleName@@source @TO@ SingleVariableDeclaration@@InputStream source @AT@ 5108 @LENGTH@ 6
---INS TryStatement@@try {  return mapper.readValue(source,listOfOperationsType);} catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @TO@ MethodDeclaration@@private, List<JsonPatchOperation>, MethodName:getPatchOperations, InputStream source,  @AT@ 5253 @LENGTH@ 248
------INS ReturnStatement@@MethodInvocation:mapper.readValue(source,listOfOperationsType) @TO@ TryStatement@@try {  return mapper.readValue(source,listOfOperationsType);} catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @AT@ 5262 @LENGTH@ 54
---------MOV MethodInvocation@@mapper.readValue(source,listOfOperationsType) @TO@ ReturnStatement@@MethodInvocation:mapper.readValue(source,listOfOperationsType) @AT@ 3852 @LENGTH@ 46
------INS CatchClause@@catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @TO@ TryStatement@@try {  return mapper.readValue(source,listOfOperationsType);} catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @AT@ 5321 @LENGTH@ 180
---------INS SingleVariableDeclaration@@Exception o_O @TO@ CatchClause@@catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @AT@ 5328 @LENGTH@ 13
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception o_O @AT@ 5328 @LENGTH@ 9
------------INS SimpleName@@o_O @TO@ SingleVariableDeclaration@@Exception o_O @AT@ 5338 @LENGTH@ 3
---------INS ThrowStatement@@ClassInstanceCreation:new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O) @TO@ CatchClause@@catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O);} @AT@ 5348 @LENGTH@ 149
------------INS ClassInstanceCreation@@HttpMessageNotReadableException[String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON), o_O] @TO@ ThrowStatement@@ClassInstanceCreation:new HttpMessageNotReadableException(String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON),o_O) @AT@ 5354 @LENGTH@ 142
---------------INS New@@new @TO@ ClassInstanceCreation@@HttpMessageNotReadableException[String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON), o_O] @AT@ 5354 @LENGTH@ 3
---------------INS SimpleType@@HttpMessageNotReadableException @TO@ ClassInstanceCreation@@HttpMessageNotReadableException[String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON), o_O] @AT@ 5358 @LENGTH@ 31
---------------INS MethodInvocation@@String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON) @TO@ ClassInstanceCreation@@HttpMessageNotReadableException[String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON), o_O] @AT@ 5396 @LENGTH@ 94
------------------INS SimpleName@@Name:String @TO@ MethodInvocation@@String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON) @AT@ 5396 @LENGTH@ 6
------------------INS SimpleName@@MethodName:format:["Could not read PATCH operations! Expected %s!", RestMediaTypes.JSON_PATCH_JSON] @TO@ MethodInvocation@@String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON) @AT@ 5403 @LENGTH@ 87
---------------------INS StringLiteral@@"Could not read PATCH operations! Expected %s!" @TO@ SimpleName@@MethodName:format:["Could not read PATCH operations! Expected %s!", RestMediaTypes.JSON_PATCH_JSON] @AT@ 5410 @LENGTH@ 47
---------------------INS QualifiedName@@RestMediaTypes.JSON_PATCH_JSON @TO@ SimpleName@@MethodName:format:["Could not read PATCH operations! Expected %s!", RestMediaTypes.JSON_PATCH_JSON] @AT@ 5459 @LENGTH@ 30
------------------------INS SimpleName@@RestMediaTypes @TO@ QualifiedName@@RestMediaTypes.JSON_PATCH_JSON @AT@ 5459 @LENGTH@ 14
------------------------INS SimpleName@@JSON_PATCH_JSON @TO@ QualifiedName@@RestMediaTypes.JSON_PATCH_JSON @AT@ 5474 @LENGTH@ 15
---------------INS SimpleName@@o_O @TO@ ClassInstanceCreation@@HttpMessageNotReadableException[String.format("Could not read PATCH operations! Expected %s!",RestMediaTypes.JSON_PATCH_JSON), o_O] @AT@ 5492 @LENGTH@ 3


UPD TypeDeclaration@@[public]Locator,  @TO@ [public, final]Locator,  @AT@ 1036 @LENGTH@ 330
---INS Modifier@@final @TO@ TypeDeclaration@@[public]Locator,  @AT@ 1043 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:from("file:src/test/resources/org/apache/camel/aggregate/zipfile/data?consumer.delay=1000&noop=true&recursive=true").aggregate(new ZipAggregationStrategy(true)).constant(true).completionFromBatchConsumer().eagerCheckCompletion().to("file:target/out").to("mock:aggregateToZipEntry").log("Done processing zip file: ${header.CamelFileName}") @TO@ MethodInvocation:from("file:src/test/resources/org/apache/camel/aggregate/zipfile/data?consumer.delay=1000&noop=true&recursive=true").aggregate(new ZipAggregationStrategy(true,true)).constant(true).completionFromBatchConsumer().eagerCheckCompletion().to("file:target/out").to("mock:aggregateToZipEntry").log("Done processing zip file: ${header.CamelFileName}") @AT@ 3290 @LENGTH@ 498
---UPD MethodInvocation@@from("file:src/test/resources/org/apache/camel/aggregate/zipfile/data?consumer.delay=1000&noop=true&recursive=true").aggregate(new ZipAggregationStrategy(true)).constant(true).completionFromBatchConsumer().eagerCheckCompletion().to("file:target/out").to("mock:aggregateToZipEntry").log("Done processing zip file: ${header.CamelFileName}") @TO@ from("file:src/test/resources/org/apache/camel/aggregate/zipfile/data?consumer.delay=1000&noop=true&recursive=true").aggregate(new ZipAggregationStrategy(true,true)).constant(true).completionFromBatchConsumer().eagerCheckCompletion().to("file:target/out").to("mock:aggregateToZipEntry").log("Done processing zip file: ${header.CamelFileName}") @AT@ 3290 @LENGTH@ 497
------UPD MethodInvocation@@MethodName:aggregate:[new ZipAggregationStrategy(true)] @TO@ MethodName:aggregate:[new ZipAggregationStrategy(true,true)] @AT@ 3290 @LENGTH@ 181
---------UPD ClassInstanceCreation@@ZipAggregationStrategy[true] @TO@ ZipAggregationStrategy[true, true] @AT@ 3438 @LENGTH@ 32
------------INS BooleanLiteral@@true @TO@ ClassInstanceCreation@@ZipAggregationStrategy[true] @AT@ 3471 @LENGTH@ 4


UPD TypeDeclaration@@[private, static]EventHandlerMethod,  @TO@ [static]EventHandlerMethod,  @AT@ 6989 @LENGTH@ 524
---DEL Modifier@@private @AT@ 6989 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @TO@ TypeDeclaration@@[public]CompositeTokenGranter, [TokenGranter] @AT@ 1347 @LENGTH@ 192
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1347 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1354 @LENGTH@ 4
---INS SimpleName@@MethodName:addTokenGranter @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1359 @LENGTH@ 15
---INS SingleVariableDeclaration@@TokenGranter tokenGranter @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1375 @LENGTH@ 25
------INS SimpleType@@TokenGranter @TO@ SingleVariableDeclaration@@TokenGranter tokenGranter @AT@ 1375 @LENGTH@ 12
------INS SimpleName@@tokenGranter @TO@ SingleVariableDeclaration@@TokenGranter tokenGranter @AT@ 1388 @LENGTH@ 12
---INS IfStatement@@if (tokenGranter == null) {  throw new IllegalArgumentException("Token granter is null");} @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1406 @LENGTH@ 95
------INS InfixExpression@@tokenGranter == null @TO@ IfStatement@@if (tokenGranter == null) {  throw new IllegalArgumentException("Token granter is null");} @AT@ 1410 @LENGTH@ 20
---------INS SimpleName@@tokenGranter @TO@ InfixExpression@@tokenGranter == null @AT@ 1410 @LENGTH@ 12
---------INS Operator@@== @TO@ InfixExpression@@tokenGranter == null @AT@ 1422 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@tokenGranter == null @AT@ 1426 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new IllegalArgumentException("Token granter is null");} @TO@ IfStatement@@if (tokenGranter == null) {  throw new IllegalArgumentException("Token granter is null");} @AT@ 1432 @LENGTH@ 69
---------INS ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Token granter is null") @TO@ Block@@ThenBody:{  throw new IllegalArgumentException("Token granter is null");} @AT@ 1437 @LENGTH@ 60
------------INS ClassInstanceCreation@@IllegalArgumentException["Token granter is null"] @TO@ ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Token granter is null") @AT@ 1443 @LENGTH@ 53
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalArgumentException["Token granter is null"] @AT@ 1443 @LENGTH@ 3
---------------INS SimpleType@@IllegalArgumentException @TO@ ClassInstanceCreation@@IllegalArgumentException["Token granter is null"] @AT@ 1447 @LENGTH@ 24
---------------INS StringLiteral@@"Token granter is null" @TO@ ClassInstanceCreation@@IllegalArgumentException["Token granter is null"] @AT@ 1472 @LENGTH@ 23
---INS ExpressionStatement@@MethodInvocation:tokenGranters.add(tokenGranter) @TO@ MethodDeclaration@@public, void, MethodName:addTokenGranter, TokenGranter tokenGranter,  @AT@ 1504 @LENGTH@ 32
------INS MethodInvocation@@tokenGranters.add(tokenGranter) @TO@ ExpressionStatement@@MethodInvocation:tokenGranters.add(tokenGranter) @AT@ 1504 @LENGTH@ 31
---------INS SimpleName@@Name:tokenGranters @TO@ MethodInvocation@@tokenGranters.add(tokenGranter) @AT@ 1504 @LENGTH@ 13
---------INS SimpleName@@MethodName:add:[tokenGranter] @TO@ MethodInvocation@@tokenGranters.add(tokenGranter) @AT@ 1518 @LENGTH@ 17
------------INS SimpleName@@tokenGranter @TO@ SimpleName@@MethodName:add:[tokenGranter] @AT@ 1522 @LENGTH@ 12


UPD VariableDeclarationStatement@@RelNode modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema); @TO@ RelNode modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema,this.getQB().getTableDesc() != null); @AT@ 26638 @LENGTH@ 157
---UPD VariableDeclarationFragment@@modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @TO@ modifiedOptimizedOptiqPlan=PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema,this.getQB().getTableDesc() != null) @AT@ 26646 @LENGTH@ 148
------UPD MethodInvocation@@PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema) @TO@ PlanModifierForReturnPath.convertOpTree(introduceProjectIfNeeded(optimizedOptiqPlan),topLevelFieldSchema,this.getQB().getTableDesc() != null) @AT@ 26675 @LENGTH@ 119
---------UPD SimpleName@@MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema] @TO@ MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema, this.getQB().getTableDesc() != null] @AT@ 26701 @LENGTH@ 93
------------INS InfixExpression@@this.getQB().getTableDesc() != null @TO@ SimpleName@@MethodName:convertOpTree:[introduceProjectIfNeeded(optimizedOptiqPlan), topLevelFieldSchema] @AT@ 26791 @LENGTH@ 48
---------------INS MethodInvocation@@this.getQB().getTableDesc() @TO@ InfixExpression@@this.getQB().getTableDesc() != null @AT@ 26791 @LENGTH@ 40
------------------INS MethodInvocation@@MethodName:getQB:[] @TO@ MethodInvocation@@this.getQB().getTableDesc() @AT@ 26791 @LENGTH@ 12
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.getQB().getTableDesc() @AT@ 26791 @LENGTH@ 4
------------------INS SimpleName@@MethodName:getTableDesc:[] @TO@ MethodInvocation@@this.getQB().getTableDesc() @AT@ 26817 @LENGTH@ 14
---------------INS Operator@@!= @TO@ InfixExpression@@this.getQB().getTableDesc() != null @AT@ 26831 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@this.getQB().getTableDesc() != null @AT@ 26835 @LENGTH@ 4


UPD IfStatement@@if (parserState == ParserState.METHOD_SUMMARY && HTML.Tag.TABLE.equals(tag.getHTMLTag())) {  parserState=ParserState.INIT;} @TO@ if (parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() && HTML.Tag.TABLE.equals(tag.getHTMLTag())) {  parserState=ParserState.INIT;} @AT@ 6417 @LENGTH@ 188
---UPD InfixExpression@@parserState == ParserState.METHOD_SUMMARY && HTML.Tag.TABLE.equals(tag.getHTMLTag()) @TO@ parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() && HTML.Tag.TABLE.equals(tag.getHTMLTag()) @AT@ 6421 @LENGTH@ 84
------INS InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && HTML.Tag.TABLE.equals(tag.getHTMLTag()) @AT@ 6420 @LENGTH@ 75
---------MOV InfixExpression@@parserState == ParserState.METHOD_SUMMARY @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6421 @LENGTH@ 41
---------MOV Operator@@&& @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6462 @LENGTH@ 2
---------INS PrefixExpression@@!methods.isEmpty() @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6477 @LENGTH@ 18
------------INS Operator@@! @TO@ PrefixExpression@@!methods.isEmpty() @AT@ 6477 @LENGTH@ 1
------------INS MethodInvocation@@methods.isEmpty() @TO@ PrefixExpression@@!methods.isEmpty() @AT@ 6478 @LENGTH@ 17
---------------INS SimpleName@@Name:methods @TO@ MethodInvocation@@methods.isEmpty() @AT@ 6478 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@methods.isEmpty() @AT@ 6486 @LENGTH@ 9
------INS InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && HTML.Tag.TABLE.equals(tag.getHTMLTag()) @AT@ 6420 @LENGTH@ 75
---------MOV InfixExpression@@parserState == ParserState.METHOD_SUMMARY @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6421 @LENGTH@ 41
---------MOV Operator@@&& @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6462 @LENGTH@ 2
---------INS PrefixExpression@@!methods.isEmpty() @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && !methods.isEmpty() @AT@ 6477 @LENGTH@ 18
------------INS Operator@@! @TO@ PrefixExpression@@!methods.isEmpty() @AT@ 6477 @LENGTH@ 1
------------INS MethodInvocation@@methods.isEmpty() @TO@ PrefixExpression@@!methods.isEmpty() @AT@ 6478 @LENGTH@ 17
---------------INS SimpleName@@Name:methods @TO@ MethodInvocation@@methods.isEmpty() @AT@ 6478 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@methods.isEmpty() @AT@ 6486 @LENGTH@ 9
------INS Operator@@&& @TO@ InfixExpression@@parserState == ParserState.METHOD_SUMMARY && HTML.Tag.TABLE.equals(tag.getHTMLTag()) @AT@ 6495 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @TO@ TypeDeclaration@@[public]EEFraction, Ee<EEFraction>[Fraction] @AT@ 2511 @LENGTH@ 389
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @AT@ 2511 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @AT@ 2518 @LENGTH@ 4
---INS SimpleName@@MethodName:postInitialize @TO@ MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @AT@ 2523 @LENGTH@ 14
---INS SingleVariableDeclaration@@Container.PostInitContext initContext @TO@ MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @AT@ 2538 @LENGTH@ 37
------INS SimpleType@@Container.PostInitContext @TO@ SingleVariableDeclaration@@Container.PostInitContext initContext @AT@ 2538 @LENGTH@ 25
------INS SimpleName@@initContext @TO@ SingleVariableDeclaration@@Container.PostInitContext initContext @AT@ 2564 @LENGTH@ 11
---INS IfStatement@@if (initContext.hasFraction("Messaging")) {  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @TO@ MethodDeclaration@@public, void, MethodName:postInitialize, Container.PostInitContext initContext,  @AT@ 2587 @LENGTH@ 307
------INS MethodInvocation@@initContext.hasFraction("Messaging") @TO@ IfStatement@@if (initContext.hasFraction("Messaging")) {  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @AT@ 2592 @LENGTH@ 38
---------INS SimpleName@@Name:initContext @TO@ MethodInvocation@@initContext.hasFraction("Messaging") @AT@ 2592 @LENGTH@ 11
---------INS SimpleName@@MethodName:hasFraction:["Messaging"] @TO@ MethodInvocation@@initContext.hasFraction("Messaging") @AT@ 2604 @LENGTH@ 26
------------INS StringLiteral@@"Messaging" @TO@ SimpleName@@MethodName:hasFraction:["Messaging"] @AT@ 2617 @LENGTH@ 11
------INS Block@@ThenBody:{  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @TO@ IfStatement@@if (initContext.hasFraction("Messaging")) {  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @AT@ 2632 @LENGTH@ 262
---------INS IfStatement@@if (this.defaultBindings() == null) {  this.defaultBindings(new DefaultBindings());} @TO@ Block@@ThenBody:{  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @AT@ 2646 @LENGTH@ 116
------------INS InfixExpression@@this.defaultBindings() == null @TO@ IfStatement@@if (this.defaultBindings() == null) {  this.defaultBindings(new DefaultBindings());} @AT@ 2651 @LENGTH@ 30
---------------INS MethodInvocation@@this.defaultBindings() @TO@ InfixExpression@@this.defaultBindings() == null @AT@ 2651 @LENGTH@ 22
------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.defaultBindings() @AT@ 2651 @LENGTH@ 4
------------------INS SimpleName@@MethodName:defaultBindings:[] @TO@ MethodInvocation@@this.defaultBindings() @AT@ 2656 @LENGTH@ 17
---------------INS Operator@@== @TO@ InfixExpression@@this.defaultBindings() == null @AT@ 2673 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@this.defaultBindings() == null @AT@ 2677 @LENGTH@ 4
------------INS Block@@ThenBody:{  this.defaultBindings(new DefaultBindings());} @TO@ IfStatement@@if (this.defaultBindings() == null) {  this.defaultBindings(new DefaultBindings());} @AT@ 2684 @LENGTH@ 78
---------------INS ExpressionStatement@@MethodInvocation:this.defaultBindings(new DefaultBindings()) @TO@ Block@@ThenBody:{  this.defaultBindings(new DefaultBindings());} @AT@ 2702 @LENGTH@ 46
------------------INS MethodInvocation@@this.defaultBindings(new DefaultBindings()) @TO@ ExpressionStatement@@MethodInvocation:this.defaultBindings(new DefaultBindings()) @AT@ 2702 @LENGTH@ 45
---------------------INS ThisExpression@@this @TO@ MethodInvocation@@this.defaultBindings(new DefaultBindings()) @AT@ 2702 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:defaultBindings:[new DefaultBindings()] @TO@ MethodInvocation@@this.defaultBindings(new DefaultBindings()) @AT@ 2707 @LENGTH@ 40
------------------------INS ClassInstanceCreation@@DefaultBindings[] @TO@ SimpleName@@MethodName:defaultBindings:[new DefaultBindings()] @AT@ 2724 @LENGTH@ 21
---------------------------INS New@@new @TO@ ClassInstanceCreation@@DefaultBindings[] @AT@ 2724 @LENGTH@ 3
---------------------------INS SimpleType@@DefaultBindings @TO@ ClassInstanceCreation@@DefaultBindings[] @AT@ 2728 @LENGTH@ 15
---------INS ExpressionStatement@@MethodInvocation:this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @TO@ Block@@ThenBody:{  if (this.defaultBindings() == null) {    this.defaultBindings(new DefaultBindings());  }  this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory");} @AT@ 2775 @LENGTH@ 109
------------INS MethodInvocation@@this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @TO@ ExpressionStatement@@MethodInvocation:this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @AT@ 2775 @LENGTH@ 108
---------------INS MethodInvocation@@MethodName:defaultBindings:[] @TO@ MethodInvocation@@this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @AT@ 2775 @LENGTH@ 22
---------------INS ThisExpression@@this @TO@ MethodInvocation@@this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @AT@ 2775 @LENGTH@ 4
---------------INS SimpleName@@MethodName:jmsConnectionFactory:["java:jboss/DefaultJMSConnectionFactory"] @TO@ MethodInvocation@@this.defaultBindings().jmsConnectionFactory("java:jboss/DefaultJMSConnectionFactory") @AT@ 2819 @LENGTH@ 64
------------------INS StringLiteral@@"java:jboss/DefaultJMSConnectionFactory" @TO@ SimpleName@@MethodName:jmsConnectionFactory:["java:jboss/DefaultJMSConnectionFactory"] @AT@ 2841 @LENGTH@ 40


UPD ExpressionStatement@@MethodInvocation:quartz.setEnableJmx(isEnableJmx()) @TO@ MethodInvocation:quartz.setEnableJmx(useJmx()) @AT@ 1302 @LENGTH@ 35
---UPD MethodInvocation@@quartz.setEnableJmx(isEnableJmx()) @TO@ quartz.setEnableJmx(useJmx()) @AT@ 1302 @LENGTH@ 34
------UPD SimpleName@@MethodName:setEnableJmx:[isEnableJmx()] @TO@ MethodName:setEnableJmx:[useJmx()] @AT@ 1309 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:isEnableJmx:[] @TO@ MethodName:useJmx:[] @AT@ 1322 @LENGTH@ 13


UPD VariableDeclarationStatement@@Class<?> clazz=(Class)parameterizedType.getActualTypeArguments()[0]; @TO@ Class<?> clazz=(Class<?>)parameterizedType.getActualTypeArguments()[0]; @AT@ 1918 @LENGTH@ 71
---UPD VariableDeclarationFragment@@clazz=(Class)parameterizedType.getActualTypeArguments()[0] @TO@ clazz=(Class<?>)parameterizedType.getActualTypeArguments()[0] @AT@ 1927 @LENGTH@ 61
------UPD CastExpression@@(Class)parameterizedType.getActualTypeArguments()[0] @TO@ (Class<?>)parameterizedType.getActualTypeArguments()[0] @AT@ 1935 @LENGTH@ 53
---------INS ParameterizedType@@Class<?> @TO@ CastExpression@@(Class)parameterizedType.getActualTypeArguments()[0] @AT@ 1936 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1936 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1942 @LENGTH@ 1
---------DEL SimpleType@@Class @AT@ 1936 @LENGTH@ 5


INS ExpressionStatement@@MethodInvocation:post.setHeader("X-Management-Client-Name","test-client") @TO@ MethodDeclaration@@private, ModelNode, MethodName:executePost, final ContentBody operation, final boolean encoded, final List<ContentBody> streams, IOException,  @AT@ 8266 @LENGTH@ 58
---INS MethodInvocation@@post.setHeader("X-Management-Client-Name","test-client") @TO@ ExpressionStatement@@MethodInvocation:post.setHeader("X-Management-Client-Name","test-client") @AT@ 8266 @LENGTH@ 57
------INS SimpleName@@Name:post @TO@ MethodInvocation@@post.setHeader("X-Management-Client-Name","test-client") @AT@ 8266 @LENGTH@ 4
------INS SimpleName@@MethodName:setHeader:["X-Management-Client-Name", "test-client"] @TO@ MethodInvocation@@post.setHeader("X-Management-Client-Name","test-client") @AT@ 8271 @LENGTH@ 52
---------INS StringLiteral@@"X-Management-Client-Name" @TO@ SimpleName@@MethodName:setHeader:["X-Management-Client-Name", "test-client"] @AT@ 8281 @LENGTH@ 26
---------INS StringLiteral@@"test-client" @TO@ SimpleName@@MethodName:setHeader:["X-Management-Client-Name", "test-client"] @AT@ 8309 @LENGTH@ 13


INS IfStatement@@if (additionalModules == null) {  additionalModules=new String[]{"modules"};} @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 5363 @LENGTH@ 100
---INS InfixExpression@@additionalModules == null @TO@ IfStatement@@if (additionalModules == null) {  additionalModules=new String[]{"modules"};} @AT@ 5367 @LENGTH@ 25
------INS SimpleName@@additionalModules @TO@ InfixExpression@@additionalModules == null @AT@ 5367 @LENGTH@ 17
------INS Operator@@== @TO@ InfixExpression@@additionalModules == null @AT@ 5384 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@additionalModules == null @AT@ 5388 @LENGTH@ 4
---INS Block@@ThenBody:{  additionalModules=new String[]{"modules"};} @TO@ IfStatement@@if (additionalModules == null) {  additionalModules=new String[]{"modules"};} @AT@ 5394 @LENGTH@ 69
------INS ExpressionStatement@@Assignment:additionalModules=new String[]{"modules"} @TO@ Block@@ThenBody:{  additionalModules=new String[]{"modules"};} @AT@ 5408 @LENGTH@ 45
---------INS Assignment@@additionalModules=new String[]{"modules"} @TO@ ExpressionStatement@@Assignment:additionalModules=new String[]{"modules"} @AT@ 5408 @LENGTH@ 44
------------INS SimpleName@@additionalModules @TO@ Assignment@@additionalModules=new String[]{"modules"} @AT@ 5408 @LENGTH@ 17
------------INS Operator@@= @TO@ Assignment@@additionalModules=new String[]{"modules"} @AT@ 5425 @LENGTH@ 1
------------INS ArrayCreation@@new String[]{"modules"} @TO@ Assignment@@additionalModules=new String[]{"modules"} @AT@ 5428 @LENGTH@ 24
---------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[]{"modules"} @AT@ 5432 @LENGTH@ 8
------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5432 @LENGTH@ 6
---------------INS ArrayInitializer@@{"modules"} @TO@ ArrayCreation@@new String[]{"modules"} @AT@ 5441 @LENGTH@ 11
------------------INS StringLiteral@@"modules" @TO@ ArrayInitializer@@{"modules"} @AT@ 5442 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:found=s.startsWith("\"" + group + "\":") @TO@ Assignment:found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 5159 @LENGTH@ 43
---UPD Assignment@@found=s.startsWith("\"" + group + "\":") @TO@ found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 5159 @LENGTH@ 42
------INS InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @TO@ Assignment@@found=s.startsWith("\"" + group + "\":") @AT@ 5167 @LENGTH@ 53
---------MOV MethodInvocation@@s.startsWith("\"" + group + "\":") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 5167 @LENGTH@ 34
---------INS Operator@@&& @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 5201 @LENGTH@ 2
---------INS MethodInvocation@@s.endsWith("{") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 5205 @LENGTH@ 15
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.endsWith("{") @AT@ 5205 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["{"] @TO@ MethodInvocation@@s.endsWith("{") @AT@ 5207 @LENGTH@ 13
---------------INS StringLiteral@@"{" @TO@ SimpleName@@MethodName:endsWith:["{"] @AT@ 5216 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:context.stopRoute("testRoute",0,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:context.stopRoute("testRoute",1000,TimeUnit.MILLISECONDS) @AT@ 1958 @LENGTH@ 57
---UPD MethodInvocation@@context.stopRoute("testRoute",0,TimeUnit.MILLISECONDS) @TO@ context.stopRoute("testRoute",1000,TimeUnit.MILLISECONDS) @AT@ 1958 @LENGTH@ 56
------UPD SimpleName@@MethodName:stopRoute:["testRoute", 0, TimeUnit.MILLISECONDS] @TO@ MethodName:stopRoute:["testRoute", 1000, TimeUnit.MILLISECONDS] @AT@ 1966 @LENGTH@ 48
---------UPD NumberLiteral@@0 @TO@ 1000 @AT@ 1989 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:ShrinkWrap.create(JavaArchive.class,"MDBActivationConfigTestCase").addPackage(MDBWithUnknownActivationConfigProperties.class.getPackage()).addClasses(JMSOperations.class,JMSMessagingUtil.class,JmsQueueSetup.class).addClasses(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client, org.jboss.dmr \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @TO@ MethodInvocation:ShrinkWrap.create(JavaArchive.class,"MDBActivationConfigTestCase.jar").addPackage(MDBWithUnknownActivationConfigProperties.class.getPackage()).addClasses(JMSOperations.class,JMSMessagingUtil.class,JmsQueueSetup.class).addClasses(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client, org.jboss.dmr \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @AT@ 4170 @LENGTH@ 587
---UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"MDBActivationConfigTestCase").addPackage(MDBWithUnknownActivationConfigProperties.class.getPackage()).addClasses(JMSOperations.class,JMSMessagingUtil.class,JmsQueueSetup.class).addClasses(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client, org.jboss.dmr \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @TO@ ShrinkWrap.create(JavaArchive.class,"MDBActivationConfigTestCase.jar").addPackage(MDBWithUnknownActivationConfigProperties.class.getPackage()).addClasses(JMSOperations.class,JMSMessagingUtil.class,JmsQueueSetup.class).addClasses(TimeoutUtil.class).addAsManifestResource(new StringAsset("Dependencies: org.jboss.as.controller-client, org.jboss.dmr \n"),"MANIFEST.MF").addAsResource(createPermissionsXmlAsset(new PropertyPermission("ts.timeout.factor","read")),"META-INF/jboss-permissions.xml") @AT@ 4177 @LENGTH@ 579
------UPD MethodInvocation@@MethodName:create:[JavaArchive.class, "MDBActivationConfigTestCase"] @TO@ MethodName:create:[JavaArchive.class, "MDBActivationConfigTestCase.jar"] @AT@ 4177 @LENGTH@ 67
---------UPD StringLiteral@@"MDBActivationConfigTestCase" @TO@ "MDBActivationConfigTestCase.jar" @AT@ 4214 @LENGTH@ 29


UPD ReturnStatement@@ClassInstanceCreation:new StringBody(operation.toJSONString(true)) @TO@ ClassInstanceCreation:new StringBody(operation.toJSONString(true),ContentType.APPLICATION_JSON) @AT@ 8788 @LENGTH@ 52
---UPD ClassInstanceCreation@@StringBody[operation.toJSONString(true)] @TO@ StringBody[operation.toJSONString(true), ContentType.APPLICATION_JSON] @AT@ 8795 @LENGTH@ 44
------INS QualifiedName@@ContentType.APPLICATION_JSON @TO@ ClassInstanceCreation@@StringBody[operation.toJSONString(true)] @AT@ 8950 @LENGTH@ 28
---------INS SimpleName@@ContentType @TO@ QualifiedName@@ContentType.APPLICATION_JSON @AT@ 8950 @LENGTH@ 11
---------INS SimpleName@@APPLICATION_JSON @TO@ QualifiedName@@ContentType.APPLICATION_JSON @AT@ 8962 @LENGTH@ 16


UPD IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ if (path.length() > 0) {  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7510 @LENGTH@ 284
---UPD Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ ThenBody:{  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} @AT@ 7533 @LENGTH@ 261
---INS Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @TO@ IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 7546 @LENGTH@ 793
------INS VariableDeclarationStatement@@int idx=uri.indexOf("?"); @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7649 @LENGTH@ 27
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 7649 @LENGTH@ 3
---------INS VariableDeclarationFragment@@idx=uri.indexOf("?") @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 7653 @LENGTH@ 22
------------INS SimpleName@@idx @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 7653 @LENGTH@ 3
------------INS MethodInvocation@@uri.indexOf("?") @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 7659 @LENGTH@ 16
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 7659 @LENGTH@ 3
---------------INS SimpleName@@MethodName:indexOf:["?"] @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 7663 @LENGTH@ 12
------------------INS StringLiteral@@"?" @TO@ SimpleName@@MethodName:indexOf:["?"] @AT@ 7671 @LENGTH@ 3
------INS IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7742 @LENGTH@ 583
---------MOV Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7533 @LENGTH@ 261
------------DEL IfStatement@@if (!uri.endsWith("/")) {  uri=uri + "/";} @AT@ 7660 @LENGTH@ 80
---------------DEL PrefixExpression@@!uri.endsWith("/") @AT@ 7664 @LENGTH@ 18
------------------DEL Operator@@! @AT@ 7664 @LENGTH@ 1
---------------DEL Block@@ThenBody:{  uri=uri + "/";} @AT@ 7684 @LENGTH@ 56
------------MOV ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 7706 @LENGTH@ 16
---------------UPD Assignment@@uri=uri + "/" @TO@ uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 7706 @LENGTH@ 15
------------------DEL InfixExpression@@uri + "/" @AT@ 7712 @LENGTH@ 9
------------------INS ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @TO@ Assignment@@uri=uri + "/" @AT@ 7879 @LENGTH@ 35
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7665 @LENGTH@ 17
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7665 @LENGTH@ 17
---------------------INS SimpleName@@uri @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7899 @LENGTH@ 3
---------------------INS InfixExpression@@uri + "/" @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7905 @LENGTH@ 9
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 7712 @LENGTH@ 3
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 7712 @LENGTH@ 3
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 7715 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 7715 @LENGTH@ 1
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 7718 @LENGTH@ 3
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 7718 @LENGTH@ 3
---------INS InfixExpression@@idx == -1 @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7746 @LENGTH@ 9
------------INS SimpleName@@idx @TO@ InfixExpression@@idx == -1 @AT@ 7746 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@idx == -1 @AT@ 7749 @LENGTH@ 2
------------INS PrefixExpression@@-1 @TO@ InfixExpression@@idx == -1 @AT@ 7753 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7753 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7754 @LENGTH@ 1
---------INS Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7983 @LENGTH@ 342
------------INS VariableDeclarationStatement@@String base=uri.substring(0,idx); @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8099 @LENGTH@ 36
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 8099 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@base=uri.substring(0,idx) @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 8106 @LENGTH@ 28
------------------INS SimpleName@@base @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 8106 @LENGTH@ 4
------------------INS MethodInvocation@@uri.substring(0,idx) @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 8113 @LENGTH@ 21
---------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 8113 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:substring:[0, idx] @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 8117 @LENGTH@ 17
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 8127 @LENGTH@ 1
------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 8130 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8156 @LENGTH@ 46
---------------INS Assignment@@base=base.endsWith("/") ? base : base + "/" @TO@ ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @AT@ 8156 @LENGTH@ 45
------------------INS SimpleName@@base @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8156 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8160 @LENGTH@ 1
------------------INS ConditionalExpression@@base.endsWith("/") ? base : base + "/" @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8163 @LENGTH@ 38
---------------------INS MethodInvocation@@base.endsWith("/") @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8163 @LENGTH@ 18
------------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.endsWith("/") @AT@ 8163 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@base.endsWith("/") @AT@ 8168 @LENGTH@ 13
---------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 8177 @LENGTH@ 3
---------------------INS SimpleName@@base @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8184 @LENGTH@ 4
---------------------INS InfixExpression@@base + "/" @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8191 @LENGTH@ 10
------------------------INS SimpleName@@base @TO@ InfixExpression@@base + "/" @AT@ 8191 @LENGTH@ 4
------------------------INS Operator@@+ @TO@ InfixExpression@@base + "/" @AT@ 8195 @LENGTH@ 1
------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@base + "/" @AT@ 8198 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.concat(path) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8223 @LENGTH@ 25
---------------INS Assignment@@base=base.concat(path) @TO@ ExpressionStatement@@Assignment:base=base.concat(path) @AT@ 8223 @LENGTH@ 24
------------------INS SimpleName@@base @TO@ Assignment@@base=base.concat(path) @AT@ 8223 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.concat(path) @AT@ 8227 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(path) @TO@ Assignment@@base=base.concat(path) @AT@ 8230 @LENGTH@ 17
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(path) @AT@ 8230 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[path] @TO@ MethodInvocation@@base.concat(path) @AT@ 8235 @LENGTH@ 12
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:concat:[path] @AT@ 8242 @LENGTH@ 4
------------INS ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8269 @LENGTH@ 38
---------------INS Assignment@@uri=base.concat(uri.substring(idx)) @TO@ ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @AT@ 8269 @LENGTH@ 37
------------------INS SimpleName@@uri @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8269 @LENGTH@ 3
------------------INS Operator@@= @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8272 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(uri.substring(idx)) @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8275 @LENGTH@ 31
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 8275 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[uri.substring(idx)] @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 8280 @LENGTH@ 26
------------------------INS MethodInvocation@@uri.substring(idx) @TO@ SimpleName@@MethodName:concat:[uri.substring(idx)] @AT@ 8287 @LENGTH@ 18
---------------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(idx) @AT@ 8287 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:substring:[idx] @TO@ MethodInvocation@@uri.substring(idx) @AT@ 8291 @LENGTH@ 14
------------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[idx] @AT@ 8301 @LENGTH@ 3


UPD SuperConstructorInvocation@@super(ModelElement.IDENTITY_CONFIGURATION,new IDMConfigAddStepHandler(getModelValidators()));
 @TO@ super(ModelElement.IDENTITY_CONFIGURATION,new IDMConfigAddStepHandler(getModelValidators()),IdentityConfigurationRemoveStepHandler.INSTANCE);
 @AT@ 1784 @LENGTH@ 94
---INS QualifiedName@@IdentityConfigurationRemoveStepHandler.INSTANCE @TO@ SuperConstructorInvocation@@super(ModelElement.IDENTITY_CONFIGURATION,new IDMConfigAddStepHandler(getModelValidators()));
 @AT@ 1878 @LENGTH@ 47
------INS SimpleName@@IdentityConfigurationRemoveStepHandler @TO@ QualifiedName@@IdentityConfigurationRemoveStepHandler.INSTANCE @AT@ 1878 @LENGTH@ 38
------INS SimpleName@@INSTANCE @TO@ QualifiedName@@IdentityConfigurationRemoveStepHandler.INSTANCE @AT@ 1917 @LENGTH@ 8


UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Throwable e) {  exchange.setException(e);} @AT@ 2356 @LENGTH@ 69
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 2363 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 2363 @LENGTH@ 9


UPD FieldDeclaration@@private, final, Map<E,AtomicInteger>, [counts=new HashMap<E,AtomicInteger>()] @TO@ private, final, Map<E,AtomicInteger>, [counts=new ConcurrentHashMap<E,AtomicInteger>()] @AT@ 1954 @LENGTH@ 77
---UPD VariableDeclarationFragment@@counts=new HashMap<E,AtomicInteger>() @TO@ counts=new ConcurrentHashMap<E,AtomicInteger>() @AT@ 1990 @LENGTH@ 40
------UPD ClassInstanceCreation@@HashMap<E,AtomicInteger>[] @TO@ ConcurrentHashMap<E,AtomicInteger>[] @AT@ 1999 @LENGTH@ 31
---------UPD ParameterizedType@@HashMap<E,AtomicInteger> @TO@ ConcurrentHashMap<E,AtomicInteger> @AT@ 2003 @LENGTH@ 25
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 2003 @LENGTH@ 7


UPD MethodDeclaration@@public, voidMethodName:ContainerFactory, AppContext appContext, long appIdLong,  @TO@ public, voidMethodName:ContainerFactory, ApplicationAttemptId appAttemptId, long appIdLong,  @AT@ 1179 @LENGTH@ 400
---UPD SingleVariableDeclaration@@AppContext appContext @TO@ ApplicationAttemptId appAttemptId @AT@ 1203 @LENGTH@ 21
------UPD SimpleType@@AppContext @TO@ ApplicationAttemptId @AT@ 1203 @LENGTH@ 10
------UPD SimpleName@@appContext @TO@ appAttemptId @AT@ 1214 @LENGTH@ 10
---UPD VariableDeclarationStatement@@ApplicationId appId=ApplicationId.newInstance(appIdLong,appContext.getApplicationAttemptId().getApplicationId().getId()); @TO@ ApplicationId appId=ApplicationId.newInstance(appIdLong,appAttemptId.getApplicationId().getId()); @AT@ 1285 @LENGTH@ 145
------UPD VariableDeclarationFragment@@appId=ApplicationId.newInstance(appIdLong,appContext.getApplicationAttemptId().getApplicationId().getId()) @TO@ appId=ApplicationId.newInstance(appIdLong,appAttemptId.getApplicationId().getId()) @AT@ 1299 @LENGTH@ 130
---------UPD MethodInvocation@@ApplicationId.newInstance(appIdLong,appContext.getApplicationAttemptId().getApplicationId().getId()) @TO@ ApplicationId.newInstance(appIdLong,appAttemptId.getApplicationId().getId()) @AT@ 1315 @LENGTH@ 114
------------UPD SimpleName@@MethodName:newInstance:[appIdLong, appContext.getApplicationAttemptId().getApplicationId().getId()] @TO@ MethodName:newInstance:[appIdLong, appAttemptId.getApplicationId().getId()] @AT@ 1329 @LENGTH@ 100
---------------UPD MethodInvocation@@appContext.getApplicationAttemptId().getApplicationId().getId() @TO@ appAttemptId.getApplicationId().getId() @AT@ 1352 @LENGTH@ 76
------------------DEL MethodInvocation@@MethodName:getApplicationAttemptId:[] @AT@ 1352 @LENGTH@ 36
------------------UPD SimpleName@@Name:appContext @TO@ Name:appAttemptId @AT@ 1352 @LENGTH@ 10
---UPD ExpressionStatement@@Assignment:this.customAppAttemptId=ApplicationAttemptId.newInstance(appId,appContext.getApplicationAttemptId().getAttemptId()) @TO@ Assignment:this.customAppAttemptId=ApplicationAttemptId.newInstance(appId,appAttemptId.getAttemptId()) @AT@ 1435 @LENGTH@ 140
------UPD Assignment@@this.customAppAttemptId=ApplicationAttemptId.newInstance(appId,appContext.getApplicationAttemptId().getAttemptId()) @TO@ this.customAppAttemptId=ApplicationAttemptId.newInstance(appId,appAttemptId.getAttemptId()) @AT@ 1435 @LENGTH@ 139
---------UPD MethodInvocation@@ApplicationAttemptId.newInstance(appId,appContext.getApplicationAttemptId().getAttemptId()) @TO@ ApplicationAttemptId.newInstance(appId,appAttemptId.getAttemptId()) @AT@ 1469 @LENGTH@ 105
------------UPD SimpleName@@MethodName:newInstance:[appId, appContext.getApplicationAttemptId().getAttemptId()] @TO@ MethodName:newInstance:[appId, appAttemptId.getAttemptId()] @AT@ 1490 @LENGTH@ 84
---------------UPD MethodInvocation@@appContext.getApplicationAttemptId().getAttemptId() @TO@ appAttemptId.getAttemptId() @AT@ 1509 @LENGTH@ 64
------------------DEL MethodInvocation@@MethodName:getApplicationAttemptId:[] @AT@ 1509 @LENGTH@ 36
------------------UPD SimpleName@@Name:appContext @TO@ Name:appAttemptId @AT@ 1509 @LENGTH@ 10


UPD SuperConstructorInvocation@@super(LlapContainerLauncher.class.getName(),containerLauncherContext);
 @TO@ super(containerLauncherContext);
 @AT@ 1167 @LENGTH@ 71
---DEL MethodInvocation@@LlapContainerLauncher.class.getName() @AT@ 1173 @LENGTH@ 37
------DEL TypeLiteral@@LlapContainerLauncher.class @AT@ 1173 @LENGTH@ 27
------DEL SimpleName@@MethodName:getName:[] @AT@ 1201 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:builder.addNode("hornetq-server",serverName) @TO@ MethodInvocation:builder.addNode("server",serverName) @AT@ 3480 @LENGTH@ 46
---UPD MethodInvocation@@builder.addNode("hornetq-server",serverName) @TO@ builder.addNode("server",serverName) @AT@ 3480 @LENGTH@ 45
------UPD SimpleName@@MethodName:addNode:["hornetq-server", serverName] @TO@ MethodName:addNode:["server", serverName] @AT@ 3488 @LENGTH@ 37
---------UPD StringLiteral@@"hornetq-server" @TO@ "server" @AT@ 3496 @LENGTH@ 16


UPD FieldDeclaration@@private, boolean, [skipQueueDeclare=false] @TO@ private, boolean, [skipQueueDeclare] @AT@ 4156 @LENGTH@ 41
---UPD VariableDeclarationFragment@@skipQueueDeclare=false @TO@ skipQueueDeclare @AT@ 4172 @LENGTH@ 24
------DEL BooleanLiteral@@false @AT@ 4191 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:quartz.setEnableJmx(isEnableJmx()) @TO@ MethodInvocation:quartz.setEnableJmx(useJmx()) @AT@ 1300 @LENGTH@ 35
---UPD MethodInvocation@@quartz.setEnableJmx(isEnableJmx()) @TO@ quartz.setEnableJmx(useJmx()) @AT@ 1300 @LENGTH@ 34
------UPD SimpleName@@MethodName:setEnableJmx:[isEnableJmx()] @TO@ MethodName:setEnableJmx:[useJmx()] @AT@ 1307 @LENGTH@ 27
---------UPD MethodInvocation@@MethodName:isEnableJmx:[] @TO@ MethodName:useJmx:[] @AT@ 1320 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertTrue(out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])) @TO@ MethodInvocation:assertTrue("two first keys returned",out.getHeaders().containsValue(body[0][0][0]) && out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])) @AT@ 2480 @LENGTH@ 158
---UPD MethodInvocation@@assertTrue(out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])) @TO@ assertTrue("two first keys returned",out.getHeaders().containsValue(body[0][0][0]) && out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])) @AT@ 2480 @LENGTH@ 157
------UPD SimpleName@@MethodName:assertTrue:[out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])] @TO@ MethodName:assertTrue:["two first keys returned", out.getHeaders().containsValue(body[0][0][0]) && out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])] @AT@ 2480 @LENGTH@ 157
---------UPD InfixExpression@@out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0]) @TO@ out.getHeaders().containsValue(body[0][0][0]) && out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0]) @AT@ 2491 @LENGTH@ 145
------------DEL PrefixExpression@@!out.getHeaders().containsValue(body[1][0][0]) @AT@ 2540 @LENGTH@ 46
---------------DEL Operator@@! @AT@ 2540 @LENGTH@ 1
------------MOV MethodInvocation@@out.getHeaders().containsValue(body[1][0][0]) @TO@ InfixExpression@@out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0]) @AT@ 2541 @LENGTH@ 45
---------INS StringLiteral@@"two first keys returned" @TO@ SimpleName@@MethodName:assertTrue:[out.getHeaders().containsValue(body[0][0][0]) && !out.getHeaders().containsValue(body[1][0][0]) && !out.getHeaders().containsValue(body[2][0][0])] @AT@ 2530 @LENGTH@ 25


UPD MethodDeclaration@@public, boolean, MethodName:deallocateTask, Object task, boolean taskSucceeded, TaskAttemptEndReason endReason,  @TO@ public, boolean, MethodName:deallocateTask, Object task, boolean taskSucceeded, TaskAttemptEndReason endReason, String diagnostics,  @AT@ 15160 @LENGTH@ 3889
---INS SingleVariableDeclaration@@String diagnostics @TO@ MethodDeclaration@@public, boolean, MethodName:deallocateTask, Object task, boolean taskSucceeded, TaskAttemptEndReason endReason,  @AT@ 15258 @LENGTH@ 18
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String diagnostics @AT@ 15258 @LENGTH@ 6
------INS SimpleName@@diagnostics @TO@ SingleVariableDeclaration@@String diagnostics @AT@ 15265 @LENGTH@ 11
---UPD TryStatement@@try {  taskInfo=unregisterTask(task);  if (taskInfo == null) {    LOG.error("Could not determine ContainerId for task: " + task + " . Could have hit a race condition. Ignoring."+ " The query may hang since this \"unknown\" container is now taking up a slot permanently");    return false;  }  if (taskInfo.containerId == null) {    if (taskInfo.assigned) {      LOG.error("Task: " + task + " assigned, but could not find the corresponding containerId."+ " The query may hang since this \"unknown\" container is now taking up a slot permanently");    } else {      LOG.info("Ignoring deallocate request for task " + task + " which hasn't been assigned to a container");      removePendingTask(taskInfo);    }    return false;  }  ServiceInstance assignedInstance=taskInfo.assignedInstance;  assert assignedInstance != null;  NodeInfo nodeInfo=instanceToNodeMap.get(assignedInstance);  assert nodeInfo != null;  if (taskInfo.preempted) {    LOG.info("Processing deallocateTask for {} which was preempted, EndReason={}",task,endReason);    pendingPreemptions.decrementAndGet();    nodeInfo.registerUnsuccessfulTaskEnd(true);    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else {    if (taskSucceeded) {      nodeInfo.registerTaskSuccess();      if (nodeInfo.isDisabled()) {        nodeInfo.enableNode();        if (disabledNodesQueue.remove(nodeInfo)) {          disabledNodesQueue.add(nodeInfo);        }      }      trySchedulingPendingTasks();    } else     if (!taskSucceeded) {      nodeInfo.registerUnsuccessfulTaskEnd(false);      if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {        if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {          dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());        } else         if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {          dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());        }      }      boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;      disableInstance(assignedInstance,commFailure);    }  }}  finally {  writeLock.unlock();} @TO@ try {  taskInfo=unregisterTask(task);  if (taskInfo == null) {    LOG.error("Could not determine ContainerId for task: " + task + " . Could have hit a race condition. Ignoring."+ " The query may hang since this \"unknown\" container is now taking up a slot permanently");    return false;  }  if (taskInfo.containerId == null) {    if (taskInfo.assigned) {      LOG.error("Task: " + task + " assigned, but could not find the corresponding containerId."+ " The query may hang since this \"unknown\" container is now taking up a slot permanently");    } else {      LOG.info("Ignoring deallocate request for task " + task + " which hasn't been assigned to a container");      removePendingTask(taskInfo);    }    return false;  }  ServiceInstance assignedInstance=taskInfo.assignedInstance;  assert assignedInstance != null;  NodeInfo nodeInfo=instanceToNodeMap.get(assignedInstance);  assert nodeInfo != null;  if (taskInfo.preempted) {    LOG.info("Processing deallocateTask for {} which was preempted, EndReason={}",task,endReason);    pendingPreemptions.decrementAndGet();    nodeInfo.registerUnsuccessfulTaskEnd(true);    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else {    if (taskSucceeded) {      nodeInfo.registerTaskSuccess();      if (nodeInfo.isDisabled()) {        nodeInfo.enableNode();        if (disabledNodesQueue.remove(nodeInfo)) {          disabledNodesQueue.add(nodeInfo);        }      }      trySchedulingPendingTasks();    } else     if (!taskSucceeded) {      nodeInfo.registerUnsuccessfulTaskEnd(false);      if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {        if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {          dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());        } else         if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {          dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());        }      }      boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;      disableInstance(assignedInstance,commFailure);    }  }}  finally {  writeLock.unlock();} @AT@ 15346 @LENGTH@ 3619
------UPD IfStatement@@if (taskInfo.preempted) {  LOG.info("Processing deallocateTask for {} which was preempted, EndReason={}",task,endReason);  pendingPreemptions.decrementAndGet();  nodeInfo.registerUnsuccessfulTaskEnd(true);  if (nodeInfo.isDisabled()) {    nodeInfo.enableNode();    if (disabledNodesQueue.remove(nodeInfo)) {      disabledNodesQueue.add(nodeInfo);    }  }  trySchedulingPendingTasks();} else {  if (taskSucceeded) {    nodeInfo.registerTaskSuccess();    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else   if (!taskSucceeded) {    nodeInfo.registerUnsuccessfulTaskEnd(false);    if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {      if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {        dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());      } else       if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {        dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());      }    }    boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;    disableInstance(assignedInstance,commFailure);  }} @TO@ if (taskInfo.preempted) {  LOG.info("Processing deallocateTask for {} which was preempted, EndReason={}",task,endReason);  pendingPreemptions.decrementAndGet();  nodeInfo.registerUnsuccessfulTaskEnd(true);  if (nodeInfo.isDisabled()) {    nodeInfo.enableNode();    if (disabledNodesQueue.remove(nodeInfo)) {      disabledNodesQueue.add(nodeInfo);    }  }  trySchedulingPendingTasks();} else {  if (taskSucceeded) {    nodeInfo.registerTaskSuccess();    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else   if (!taskSucceeded) {    nodeInfo.registerUnsuccessfulTaskEnd(false);    if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {      if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {        dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());      } else       if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {        dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());      }    }    boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;    disableInstance(assignedInstance,commFailure);  }} @AT@ 16494 @LENGTH@ 2423
---------UPD Block@@ElseBody:{  if (taskSucceeded) {    nodeInfo.registerTaskSuccess();    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else   if (!taskSucceeded) {    nodeInfo.registerUnsuccessfulTaskEnd(false);    if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {      if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {        dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());      } else       if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {        dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());      }    }    boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;    disableInstance(assignedInstance,commFailure);  }} @TO@ ElseBody:{  if (taskSucceeded) {    nodeInfo.registerTaskSuccess();    if (nodeInfo.isDisabled()) {      nodeInfo.enableNode();      if (disabledNodesQueue.remove(nodeInfo)) {        disabledNodesQueue.add(nodeInfo);      }    }    trySchedulingPendingTasks();  } else   if (!taskSucceeded) {    nodeInfo.registerUnsuccessfulTaskEnd(false);    if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {      if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {        dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());      } else       if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {        dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());      }    }    boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;    disableInstance(assignedInstance,commFailure);  }} @AT@ 17315 @LENGTH@ 1602
------------UPD IfStatement@@if (taskSucceeded) {  nodeInfo.registerTaskSuccess();  if (nodeInfo.isDisabled()) {    nodeInfo.enableNode();    if (disabledNodesQueue.remove(nodeInfo)) {      disabledNodesQueue.add(nodeInfo);    }  }  trySchedulingPendingTasks();} else if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @TO@ if (taskSucceeded) {  nodeInfo.registerTaskSuccess();  if (nodeInfo.isDisabled()) {    nodeInfo.enableNode();    if (disabledNodesQueue.remove(nodeInfo)) {      disabledNodesQueue.add(nodeInfo);    }  }  trySchedulingPendingTasks();} else if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @AT@ 17325 @LENGTH@ 1584
---------------UPD Block@@ElseBody:if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @TO@ ElseBody:if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @AT@ 18132 @LENGTH@ 777
------------------UPD IfStatement@@if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @TO@ if (!taskSucceeded) {  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @AT@ 18132 @LENGTH@ 777
---------------------UPD Block@@ThenBody:{  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @TO@ ThenBody:{  nodeInfo.registerUnsuccessfulTaskEnd(false);  if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {    if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {      dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());    } else     if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {      dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());    }  }  boolean commFailure=endReason != null && endReason == TaskAttemptEndReason.COMMUNICATION_ERROR;  disableInstance(assignedInstance,commFailure);} @AT@ 18152 @LENGTH@ 757
------------------------UPD IfStatement@@if (endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {  if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {    dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());  } else   if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {    dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());  }} @TO@ if (endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason)) {  if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {    dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());  } else   if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {    dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());  }} @AT@ 18219 @LENGTH@ 500
---------------------------UPD InfixExpression@@endReason != null && EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason) @TO@ endReason != null && EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason) @AT@ 18223 @LENGTH@ 158
------------------------------UPD MethodInvocation@@EnumSet.of(TaskAttemptEndReason.SERVICE_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason) @TO@ EnumSet.of(TaskAttemptEndReason.EXECUTOR_BUSY,TaskAttemptEndReason.COMMUNICATION_ERROR).contains(endReason) @AT@ 18244 @LENGTH@ 137
---------------------------------UPD MethodInvocation@@MethodName:of:[TaskAttemptEndReason.SERVICE_BUSY, TaskAttemptEndReason.COMMUNICATION_ERROR] @TO@ MethodName:of:[TaskAttemptEndReason.EXECUTOR_BUSY, TaskAttemptEndReason.COMMUNICATION_ERROR] @AT@ 18244 @LENGTH@ 102
------------------------------------UPD QualifiedName@@TaskAttemptEndReason.SERVICE_BUSY @TO@ TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 18270 @LENGTH@ 33
---------------------------------------UPD SimpleName@@SERVICE_BUSY @TO@ EXECUTOR_BUSY @AT@ 18291 @LENGTH@ 12
---------------------------UPD Block@@ThenBody:{  if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {    dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());  } else   if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {    dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());  }} @TO@ ThenBody:{  if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {    dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());  } else   if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {    dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());  }} @AT@ 18383 @LENGTH@ 336
------------------------------UPD IfStatement@@if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {  dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());} else if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @TO@ if (endReason == TaskAttemptEndReason.COMMUNICATION_ERROR) {  dagStats.registerCommFailure(taskInfo.assignedInstance.getHost());} else if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @AT@ 18397 @LENGTH@ 310
---------------------------------UPD Block@@ElseBody:if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @TO@ ElseBody:if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @AT@ 18558 @LENGTH@ 149
------------------------------------UPD IfStatement@@if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @TO@ if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @AT@ 18558 @LENGTH@ 149
---------------------------------------UPD InfixExpression@@endReason == TaskAttemptEndReason.SERVICE_BUSY @TO@ endReason == TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 18562 @LENGTH@ 46
------------------------------------------UPD QualifiedName@@TaskAttemptEndReason.SERVICE_BUSY @TO@ TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 18575 @LENGTH@ 33
---------------------------------------------UPD SimpleName@@SERVICE_BUSY @TO@ EXECUTOR_BUSY @AT@ 18596 @LENGTH@ 12
------------------------------------UPD IfStatement@@if (endReason == TaskAttemptEndReason.SERVICE_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @TO@ if (endReason == TaskAttemptEndReason.EXECUTOR_BUSY) {  dagStats.registerTaskRejected(taskInfo.assignedInstance.getHost());} @AT@ 18558 @LENGTH@ 149
---------------------------------------UPD InfixExpression@@endReason == TaskAttemptEndReason.SERVICE_BUSY @TO@ endReason == TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 18562 @LENGTH@ 46
------------------------------------------UPD QualifiedName@@TaskAttemptEndReason.SERVICE_BUSY @TO@ TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 18575 @LENGTH@ 33
---------------------------------------------UPD SimpleName@@SERVICE_BUSY @TO@ EXECUTOR_BUSY @AT@ 18596 @LENGTH@ 12


DEL VariableDeclarationStatement@@@SuppressWarnings("deprecation") DefaultHttpBinding httpBinding=new DefaultHttpBinding(filterStrat); @AT@ 4167 @LENGTH@ 110
---DEL SimpleType@@DefaultHttpBinding @AT@ 4208 @LENGTH@ 18
---DEL VariableDeclarationFragment@@httpBinding=new DefaultHttpBinding(filterStrat) @AT@ 4227 @LENGTH@ 49
------DEL SimpleName@@httpBinding @AT@ 4227 @LENGTH@ 11
------DEL ClassInstanceCreation@@DefaultHttpBinding[filterStrat] @AT@ 4241 @LENGTH@ 35
---------DEL New@@new @AT@ 4241 @LENGTH@ 3
---------DEL SimpleType@@DefaultHttpBinding @AT@ 4245 @LENGTH@ 18
---------DEL SimpleName@@filterStrat @AT@ 4264 @LENGTH@ 11


INS IfStatement@@if (analyzer != null) {  this.inputs=analyzer.getInputs();} @TO@ MethodDeclaration@@public, voidMethodName:ExplainWork, Path resFile, ParseContext pCtx, List<Task<? extends Serializable>> rootTasks, Task<? extends Serializable> fetchTask, ASTNode astTree, BaseSemanticAnalyzer analyzer, boolean extended, boolean formatted, boolean dependency, boolean logical, boolean authorize, boolean userLevelExplain, String cboInfo,  @AT@ 2496 @LENGTH@ 71
---INS InfixExpression@@analyzer != null @TO@ IfStatement@@if (analyzer != null) {  this.inputs=analyzer.getInputs();} @AT@ 2500 @LENGTH@ 16
------INS SimpleName@@analyzer @TO@ InfixExpression@@analyzer != null @AT@ 2500 @LENGTH@ 8
------INS Operator@@!= @TO@ InfixExpression@@analyzer != null @AT@ 2508 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@analyzer != null @AT@ 2512 @LENGTH@ 4
---INS Block@@ThenBody:{  this.inputs=analyzer.getInputs();} @TO@ IfStatement@@if (analyzer != null) {  this.inputs=analyzer.getInputs();} @AT@ 2518 @LENGTH@ 49
------MOV ExpressionStatement@@Assignment:this.inputs=analyzer.getInputs() @TO@ Block@@ThenBody:{  this.inputs=analyzer.getInputs();} @AT@ 2496 @LENGTH@ 35


UPD MethodDeclaration@@protected, boolean, MethodName:isEnableJmx,  @TO@ protected, boolean, MethodName:useJmx,  @AT@ 1002 @LENGTH@ 60
---UPD SimpleName@@MethodName:isEnableJmx @TO@ MethodName:useJmx @AT@ 1020 @LENGTH@ 11


MOV FieldDeclaration@@private, final, Pattern, [excludePattern] @TO@ TypeDeclaration@@[public, abstract]GenericFileConsumer, ScheduledBatchPollingConsumer @AT@ 1602 @LENGTH@ 37


UPD ReturnStatement@@MethodInvocation:parent.entrySet.size() @TO@ MethodInvocation:parent.map.entrySet().size() @AT@ 17025 @LENGTH@ 30
---UPD MethodInvocation@@parent.entrySet.size() @TO@ parent.map.entrySet().size() @AT@ 17032 @LENGTH@ 22
------INS MethodInvocation@@MethodName:entrySet:[] @TO@ MethodInvocation@@parent.entrySet.size() @AT@ 17032 @LENGTH@ 21
------UPD QualifiedName@@Name:parent.entrySet @TO@ Name:parent.map @AT@ 17032 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 11707 @LENGTH@ 133
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 11707 @LENGTH@ 132
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 11707 @LENGTH@ 109
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 11711 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 11711 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 11728 @LENGTH@ 10
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 11740 @LENGTH@ 7
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor, handler] @AT@ 11746 @LENGTH@ 42
------------DEL New@@new @AT@ 11746 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 11750 @LENGTH@ 17
------------DEL SimpleName@@descriptor @AT@ 11768 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 11780 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertEquals("getGroup()","Camel",triggerKey.getGroup()) @TO@ MethodInvocation:assertEquals("getGroup()","Camel_" + context.getManagementName(),triggerKey.getGroup()) @AT@ 2644 @LENGTH@ 59
---UPD MethodInvocation@@assertEquals("getGroup()","Camel",triggerKey.getGroup()) @TO@ assertEquals("getGroup()","Camel_" + context.getManagementName(),triggerKey.getGroup()) @AT@ 2644 @LENGTH@ 58
------UPD SimpleName@@MethodName:assertEquals:["getGroup()", "Camel", triggerKey.getGroup()] @TO@ MethodName:assertEquals:["getGroup()", "Camel_" + context.getManagementName(), triggerKey.getGroup()] @AT@ 2644 @LENGTH@ 58
---------INS InfixExpression@@"Camel_" + context.getManagementName() @TO@ SimpleName@@MethodName:assertEquals:["getGroup()", "Camel", triggerKey.getGroup()] @AT@ 2671 @LENGTH@ 38
------------INS StringLiteral@@"Camel_" @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2671 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2679 @LENGTH@ 1
------------INS MethodInvocation@@context.getManagementName() @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2682 @LENGTH@ 27
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getManagementName() @AT@ 2682 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getManagementName:[] @TO@ MethodInvocation@@context.getManagementName() @AT@ 2690 @LENGTH@ 19
---------DEL StringLiteral@@"Camel" @AT@ 2671 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @TO@ TypeDeclaration@@[public]WhitelabelErrorEndpointTests,  @AT@ 2290 @LENGTH@ 407
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2290 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2297 @LENGTH@ 4
---INS SimpleName@@MethodName:testErrorPageXSS @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2302 @LENGTH@ 16
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2328 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:request.setAttribute("error",new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2342 @LENGTH@ 107
------INS MethodInvocation@@request.setAttribute("error",new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")) @TO@ ExpressionStatement@@MethodInvocation:request.setAttribute("error",new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")) @AT@ 2342 @LENGTH@ 106
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setAttribute("error",new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")) @AT@ 2342 @LENGTH@ 7
---------INS SimpleName@@MethodName:setAttribute:["error", new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")] @TO@ MethodInvocation@@request.setAttribute("error",new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")) @AT@ 2350 @LENGTH@ 98
------------INS StringLiteral@@"error" @TO@ SimpleName@@MethodName:setAttribute:["error", new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")] @AT@ 2363 @LENGTH@ 7
------------INS ClassInstanceCreation@@InvalidGrantException["Invalid grant : <script>alert('XSS');</script>"] @TO@ SimpleName@@MethodName:setAttribute:["error", new InvalidGrantException("Invalid grant : <script>alert('XSS');</script>")] @AT@ 2372 @LENGTH@ 75
---------------INS New@@new @TO@ ClassInstanceCreation@@InvalidGrantException["Invalid grant : <script>alert('XSS');</script>"] @AT@ 2372 @LENGTH@ 3
---------------INS SimpleType@@InvalidGrantException @TO@ ClassInstanceCreation@@InvalidGrantException["Invalid grant : <script>alert('XSS');</script>"] @AT@ 2376 @LENGTH@ 21
---------------INS StringLiteral@@"Invalid grant : <script>alert('XSS');</script>" @TO@ ClassInstanceCreation@@InvalidGrantException["Invalid grant : <script>alert('XSS');</script>"] @AT@ 2398 @LENGTH@ 48
---INS VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2452 @LENGTH@ 52
------INS SimpleType@@ModelAndView @TO@ VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @AT@ 2452 @LENGTH@ 12
------INS VariableDeclarationFragment@@result=endpoint.handleError(request) @TO@ VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @AT@ 2465 @LENGTH@ 38
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=endpoint.handleError(request) @AT@ 2465 @LENGTH@ 6
---------INS MethodInvocation@@endpoint.handleError(request) @TO@ VariableDeclarationFragment@@result=endpoint.handleError(request) @AT@ 2474 @LENGTH@ 29
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.handleError(request) @AT@ 2474 @LENGTH@ 8
------------INS SimpleName@@MethodName:handleError:[request] @TO@ MethodInvocation@@endpoint.handleError(request) @AT@ 2483 @LENGTH@ 20
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:handleError:[request] @AT@ 2495 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:result.getView().render(result.getModel(),request,response) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2507 @LENGTH@ 62
------INS MethodInvocation@@result.getView().render(result.getModel(),request,response) @TO@ ExpressionStatement@@MethodInvocation:result.getView().render(result.getModel(),request,response) @AT@ 2507 @LENGTH@ 61
---------INS MethodInvocation@@MethodName:getView:[] @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 2507 @LENGTH@ 16
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 2507 @LENGTH@ 6
---------INS SimpleName@@MethodName:render:[result.getModel(), request, response] @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 2524 @LENGTH@ 44
------------INS MethodInvocation@@result.getModel() @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 2531 @LENGTH@ 17
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getModel() @AT@ 2531 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getModel:[] @TO@ MethodInvocation@@result.getModel() @AT@ 2538 @LENGTH@ 10
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 2550 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 2559 @LENGTH@ 8
---INS VariableDeclarationStatement@@String content=response.getContentAsString(); @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2572 @LENGTH@ 47
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String content=response.getContentAsString(); @AT@ 2572 @LENGTH@ 6
------INS VariableDeclarationFragment@@content=response.getContentAsString() @TO@ VariableDeclarationStatement@@String content=response.getContentAsString(); @AT@ 2579 @LENGTH@ 39
---------INS SimpleName@@content @TO@ VariableDeclarationFragment@@content=response.getContentAsString() @AT@ 2579 @LENGTH@ 7
---------INS MethodInvocation@@response.getContentAsString() @TO@ VariableDeclarationFragment@@content=response.getContentAsString() @AT@ 2589 @LENGTH@ 29
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 2589 @LENGTH@ 8
------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 2598 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertFalse("Wrong content : " + content,content.contains("<script>")) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageXSS, Exception,  @AT@ 2622 @LENGTH@ 72
------INS MethodInvocation@@assertFalse("Wrong content : " + content,content.contains("<script>")) @TO@ ExpressionStatement@@MethodInvocation:assertFalse("Wrong content : " + content,content.contains("<script>")) @AT@ 2622 @LENGTH@ 71
---------INS SimpleName@@MethodName:assertFalse:["Wrong content : " + content, content.contains("<script>")] @TO@ MethodInvocation@@assertFalse("Wrong content : " + content,content.contains("<script>")) @AT@ 2622 @LENGTH@ 71
------------INS InfixExpression@@"Wrong content : " + content @TO@ SimpleName@@MethodName:assertFalse:["Wrong content : " + content, content.contains("<script>")] @AT@ 2634 @LENGTH@ 28
---------------INS StringLiteral@@"Wrong content : " @TO@ InfixExpression@@"Wrong content : " + content @AT@ 2634 @LENGTH@ 18
---------------INS Operator@@+ @TO@ InfixExpression@@"Wrong content : " + content @AT@ 2652 @LENGTH@ 1
---------------INS SimpleName@@content @TO@ InfixExpression@@"Wrong content : " + content @AT@ 2655 @LENGTH@ 7
------------INS MethodInvocation@@content.contains("<script>") @TO@ SimpleName@@MethodName:assertFalse:["Wrong content : " + content, content.contains("<script>")] @AT@ 2664 @LENGTH@ 28
---------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains("<script>") @AT@ 2664 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["<script>"] @TO@ MethodInvocation@@content.contains("<script>") @AT@ 2672 @LENGTH@ 20
------------------INS StringLiteral@@"<script>" @TO@ SimpleName@@MethodName:contains:["<script>"] @AT@ 2681 @LENGTH@ 10


UPD VariableDeclarationStatement@@Exchange response=template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange); @TO@ Exchange response=template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange); @AT@ 1889 @LENGTH@ 277
---UPD VariableDeclarationFragment@@response=template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @TO@ response=template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @AT@ 1898 @LENGTH@ 267
------UPD MethodInvocation@@template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @TO@ template.send("netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @AT@ 1909 @LENGTH@ 256
---------UPD SimpleName@@MethodName:send:["netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @TO@ MethodName:send:["netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @AT@ 1918 @LENGTH@ 247
------------DEL StringLiteral@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1923 @LENGTH@ 231
------------INS InfixExpression@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ SimpleName@@MethodName:send:["netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @AT@ 1952 @LENGTH@ 252
---------------INS StringLiteral@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1952 @LENGTH@ 90
---------------INS Operator@@+ @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 2042 @LENGTH@ 1
---------------INS StringLiteral@@"&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 2061 @LENGTH@ 143


UPD ExpressionStatement@@MethodInvocation:context.stopRoute("testRoute",0,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:context.stopRoute("testRoute",1000,TimeUnit.MILLISECONDS) @AT@ 1977 @LENGTH@ 57
---UPD MethodInvocation@@context.stopRoute("testRoute",0,TimeUnit.MILLISECONDS) @TO@ context.stopRoute("testRoute",1000,TimeUnit.MILLISECONDS) @AT@ 1977 @LENGTH@ 56
------UPD SimpleName@@MethodName:stopRoute:["testRoute", 0, TimeUnit.MILLISECONDS] @TO@ MethodName:stopRoute:["testRoute", 1000, TimeUnit.MILLISECONDS] @AT@ 1985 @LENGTH@ 48
---------UPD NumberLiteral@@0 @TO@ 1000 @AT@ 2008 @LENGTH@ 1


INS MethodDeclaration@@public, Container, MethodName:stop, Exception,  @TO@ TypeDeclaration@@[public]Container,  @AT@ 3975 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 3975 @LENGTH@ 6
---INS SimpleType@@Container @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 3982 @LENGTH@ 9
---INS SimpleName@@MethodName:stop @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 3992 @LENGTH@ 4
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 4006 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:this.server.stop() @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 4026 @LENGTH@ 19
------INS MethodInvocation@@this.server.stop() @TO@ ExpressionStatement@@MethodInvocation:this.server.stop() @AT@ 4026 @LENGTH@ 18
---------INS FieldAccess@@this.server @TO@ MethodInvocation@@this.server.stop() @AT@ 4026 @LENGTH@ 11
------------INS ThisExpression@@this @TO@ FieldAccess@@this.server @AT@ 4026 @LENGTH@ 4
------------INS SimpleName@@server @TO@ FieldAccess@@this.server @AT@ 4031 @LENGTH@ 6
---------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@this.server.stop() @AT@ 4038 @LENGTH@ 6
---INS ReturnStatement@@ThisExpression:this @TO@ MethodDeclaration@@public, Container, MethodName:stop, Exception,  @AT@ 4054 @LENGTH@ 12
------INS ThisExpression@@this @TO@ ReturnStatement@@ThisExpression:this @AT@ 4061 @LENGTH@ 4


UPD ReturnStatement@@MethodInvocation:nullPredicate() @TO@ MethodInvocation:NullPredicate.nullPredicate() @AT@ 1857 @LENGTH@ 23
---UPD MethodInvocation@@MethodName:nullPredicate:[] @TO@ NullPredicate.nullPredicate() @AT@ 1864 @LENGTH@ 15
------INS SimpleName@@Name:NullPredicate @TO@ MethodInvocation@@MethodName:nullPredicate:[] @AT@ 1791 @LENGTH@ 13
------INS SimpleName@@MethodName:nullPredicate:[] @TO@ MethodInvocation@@MethodName:nullPredicate:[] @AT@ 1805 @LENGTH@ 15


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=HttpClientUtils.relaxedCookieHttpClient(); @AT@ 5600 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 5600 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=HttpClientUtils.relaxedCookieHttpClient() @AT@ 5611 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ HttpClientUtils.relaxedCookieHttpClient() @AT@ 5620 @LENGTH@ 27
---------UPD SimpleName@@Name:HttpClients @TO@ Name:HttpClientUtils @AT@ 5620 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 5632 @LENGTH@ 15


DEL VariableDeclarationStatement@@int pos=dst.position(); @AT@ 1302 @LENGTH@ 25
---DEL PrimitiveType@@int @AT@ 1302 @LENGTH@ 3
---DEL VariableDeclarationFragment@@pos=dst.position() @AT@ 1306 @LENGTH@ 20
------DEL SimpleName@@pos @AT@ 1306 @LENGTH@ 3
------DEL MethodInvocation@@dst.position() @AT@ 1312 @LENGTH@ 14
---------DEL SimpleName@@Name:dst @AT@ 1312 @LENGTH@ 3
---------DEL SimpleName@@MethodName:position:[] @AT@ 1316 @LENGTH@ 10


UPD VariableDeclarationStatement@@final SecurityIdentity securityIdentity=new SecurityIdentity(domain,principal,realmInfo,authorizationIdentity); @TO@ final SecurityIdentity securityIdentity=new SecurityIdentity(domain,oldState.getAuthenticationPrincipal(),realmInfo,authorizationIdentity); @AT@ 16686 @LENGTH@ 116
---UPD VariableDeclarationFragment@@securityIdentity=new SecurityIdentity(domain,principal,realmInfo,authorizationIdentity) @TO@ securityIdentity=new SecurityIdentity(domain,oldState.getAuthenticationPrincipal(),realmInfo,authorizationIdentity) @AT@ 16709 @LENGTH@ 92
------UPD ClassInstanceCreation@@SecurityIdentity[domain, principal, realmInfo, authorizationIdentity] @TO@ SecurityIdentity[domain, oldState.getAuthenticationPrincipal(), realmInfo, authorizationIdentity] @AT@ 16728 @LENGTH@ 73
---------INS MethodInvocation@@oldState.getAuthenticationPrincipal() @TO@ ClassInstanceCreation@@SecurityIdentity[domain, principal, realmInfo, authorizationIdentity] @AT@ 16757 @LENGTH@ 37
------------INS SimpleName@@Name:oldState @TO@ MethodInvocation@@oldState.getAuthenticationPrincipal() @AT@ 16757 @LENGTH@ 8
------------INS SimpleName@@MethodName:getAuthenticationPrincipal:[] @TO@ MethodInvocation@@oldState.getAuthenticationPrincipal() @AT@ 16766 @LENGTH@ 28
---------DEL SimpleName@@principal @AT@ 16757 @LENGTH@ 9


UPD ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Assignment:uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 7714 @LENGTH@ 16


INS ExpressionStatement@@MethodInvocation:fh.setFileLocator(locator) @TO@ MethodDeclaration@@private, void, MethodName:loadIncludeFile, String fileName, ConfigurationException,  @AT@ 47632 @LENGTH@ 27
---INS MethodInvocation@@fh.setFileLocator(locator) @TO@ ExpressionStatement@@MethodInvocation:fh.setFileLocator(locator) @AT@ 47632 @LENGTH@ 26
------INS SimpleName@@Name:fh @TO@ MethodInvocation@@fh.setFileLocator(locator) @AT@ 47632 @LENGTH@ 2
------INS SimpleName@@MethodName:setFileLocator:[locator] @TO@ MethodInvocation@@fh.setFileLocator(locator) @AT@ 47635 @LENGTH@ 23
---------INS SimpleName@@locator @TO@ SimpleName@@MethodName:setFileLocator:[locator] @AT@ 47650 @LENGTH@ 7


UPD IfStatement@@if (objectToUpdate == null) {  new ResourceNotFoundException();} @TO@ if (objectToUpdate == null) {  throw new ResourceNotFoundException();} @AT@ 7323 @LENGTH@ 71
---UPD Block@@ThenBody:{  new ResourceNotFoundException();} @TO@ ThenBody:{  throw new ResourceNotFoundException();} @AT@ 7351 @LENGTH@ 43
------INS ThrowStatement@@ClassInstanceCreation:new ResourceNotFoundException() @TO@ Block@@ThenBody:{  new ResourceNotFoundException();} @AT@ 7357 @LENGTH@ 38
---------INS ClassInstanceCreation@@ResourceNotFoundException[] @TO@ ThrowStatement@@ClassInstanceCreation:new ResourceNotFoundException() @AT@ 7363 @LENGTH@ 31
------------MOV New@@new @TO@ ClassInstanceCreation@@ResourceNotFoundException[] @AT@ 7357 @LENGTH@ 3
------------MOV SimpleType@@ResourceNotFoundException @TO@ ClassInstanceCreation@@ResourceNotFoundException[] @AT@ 7361 @LENGTH@ 25
------DEL ExpressionStatement@@ClassInstanceCreation:new ResourceNotFoundException() @AT@ 7357 @LENGTH@ 32
---------DEL ClassInstanceCreation@@ResourceNotFoundException[] @AT@ 7357 @LENGTH@ 31


INS VariableDeclarationStatement@@PropertyPath path=part.getProperty().getLeafProperty(); @TO@ MethodDeclaration@@private, Criteria, MethodName:createLikeRegexCriteriaOrThrow, Part part, MongoPersistentProperty property, Criteria criteria, PotentiallyConvertingIterator parameters, boolean shouldNegateExpression,  @AT@ 9421 @LENGTH@ 57
---INS SimpleType@@PropertyPath @TO@ VariableDeclarationStatement@@PropertyPath path=part.getProperty().getLeafProperty(); @AT@ 9421 @LENGTH@ 12
---INS VariableDeclarationFragment@@path=part.getProperty().getLeafProperty() @TO@ VariableDeclarationStatement@@PropertyPath path=part.getProperty().getLeafProperty(); @AT@ 9434 @LENGTH@ 43
------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=part.getProperty().getLeafProperty() @AT@ 9434 @LENGTH@ 4
------INS MethodInvocation@@part.getProperty().getLeafProperty() @TO@ VariableDeclarationFragment@@path=part.getProperty().getLeafProperty() @AT@ 9441 @LENGTH@ 36
---------INS MethodInvocation@@MethodName:getProperty:[] @TO@ MethodInvocation@@part.getProperty().getLeafProperty() @AT@ 9441 @LENGTH@ 18
---------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getProperty().getLeafProperty() @AT@ 9441 @LENGTH@ 4
---------INS SimpleName@@MethodName:getLeafProperty:[] @TO@ MethodInvocation@@part.getProperty().getLeafProperty() @AT@ 9460 @LENGTH@ 17


INS MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]WithSecurityContextTestExcecutionListenerTests,  @AT@ 2432 @LENGTH@ 508
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2432 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2439 @LENGTH@ 4
---INS SimpleName@@MethodName:beforeTestMethodNoApplicationContext @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2444 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2490 @LENGTH@ 9
---INS VariableDeclarationStatement@@Class testClass=FakeTest.class; @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2504 @LENGTH@ 33
------INS SimpleType@@Class @TO@ VariableDeclarationStatement@@Class testClass=FakeTest.class; @AT@ 2504 @LENGTH@ 5
------INS VariableDeclarationFragment@@testClass=FakeTest.class @TO@ VariableDeclarationStatement@@Class testClass=FakeTest.class; @AT@ 2510 @LENGTH@ 26
---------INS SimpleName@@testClass @TO@ VariableDeclarationFragment@@testClass=FakeTest.class @AT@ 2510 @LENGTH@ 9
---------INS TypeLiteral@@FakeTest.class @TO@ VariableDeclarationFragment@@testClass=FakeTest.class @AT@ 2522 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:when(testContext.getApplicationContext()).thenThrow(new IllegalStateException()) @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2540 @LENGTH@ 81
------INS MethodInvocation@@when(testContext.getApplicationContext()).thenThrow(new IllegalStateException()) @TO@ ExpressionStatement@@MethodInvocation:when(testContext.getApplicationContext()).thenThrow(new IllegalStateException()) @AT@ 2540 @LENGTH@ 80
---------INS MethodInvocation@@MethodName:when:[testContext.getApplicationContext()] @TO@ MethodInvocation@@when(testContext.getApplicationContext()).thenThrow(new IllegalStateException()) @AT@ 2540 @LENGTH@ 41
------------INS MethodInvocation@@testContext.getApplicationContext() @TO@ MethodInvocation@@MethodName:when:[testContext.getApplicationContext()] @AT@ 2545 @LENGTH@ 35
---------------INS SimpleName@@Name:testContext @TO@ MethodInvocation@@testContext.getApplicationContext() @AT@ 2545 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getApplicationContext:[] @TO@ MethodInvocation@@testContext.getApplicationContext() @AT@ 2557 @LENGTH@ 23
---------INS SimpleName@@MethodName:thenThrow:[new IllegalStateException()] @TO@ MethodInvocation@@when(testContext.getApplicationContext()).thenThrow(new IllegalStateException()) @AT@ 2582 @LENGTH@ 38
------------INS ClassInstanceCreation@@IllegalStateException[] @TO@ SimpleName@@MethodName:thenThrow:[new IllegalStateException()] @AT@ 2592 @LENGTH@ 27
---------------INS New@@new @TO@ ClassInstanceCreation@@IllegalStateException[] @AT@ 2592 @LENGTH@ 3
---------------INS SimpleType@@IllegalStateException @TO@ ClassInstanceCreation@@IllegalStateException[] @AT@ 2596 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:when(testContext.getTestClass()).thenReturn(testClass) @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2624 @LENGTH@ 55
------INS MethodInvocation@@when(testContext.getTestClass()).thenReturn(testClass) @TO@ ExpressionStatement@@MethodInvocation:when(testContext.getTestClass()).thenReturn(testClass) @AT@ 2624 @LENGTH@ 54
---------INS MethodInvocation@@MethodName:when:[testContext.getTestClass()] @TO@ MethodInvocation@@when(testContext.getTestClass()).thenReturn(testClass) @AT@ 2624 @LENGTH@ 32
------------INS MethodInvocation@@testContext.getTestClass() @TO@ MethodInvocation@@MethodName:when:[testContext.getTestClass()] @AT@ 2629 @LENGTH@ 26
---------------INS SimpleName@@Name:testContext @TO@ MethodInvocation@@testContext.getTestClass() @AT@ 2629 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTestClass:[] @TO@ MethodInvocation@@testContext.getTestClass() @AT@ 2641 @LENGTH@ 14
---------INS SimpleName@@MethodName:thenReturn:[testClass] @TO@ MethodInvocation@@when(testContext.getTestClass()).thenReturn(testClass) @AT@ 2657 @LENGTH@ 21
------------INS SimpleName@@testClass @TO@ SimpleName@@MethodName:thenReturn:[testClass] @AT@ 2668 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:when(testContext.getTestMethod()).thenReturn(ReflectionUtils.findMethod(testClass,"testWithMockUser")) @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2682 @LENGTH@ 109
------INS MethodInvocation@@when(testContext.getTestMethod()).thenReturn(ReflectionUtils.findMethod(testClass,"testWithMockUser")) @TO@ ExpressionStatement@@MethodInvocation:when(testContext.getTestMethod()).thenReturn(ReflectionUtils.findMethod(testClass,"testWithMockUser")) @AT@ 2682 @LENGTH@ 108
---------INS MethodInvocation@@MethodName:when:[testContext.getTestMethod()] @TO@ MethodInvocation@@when(testContext.getTestMethod()).thenReturn(ReflectionUtils.findMethod(testClass,"testWithMockUser")) @AT@ 2682 @LENGTH@ 33
------------INS MethodInvocation@@testContext.getTestMethod() @TO@ MethodInvocation@@MethodName:when:[testContext.getTestMethod()] @AT@ 2687 @LENGTH@ 27
---------------INS SimpleName@@Name:testContext @TO@ MethodInvocation@@testContext.getTestMethod() @AT@ 2687 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getTestMethod:[] @TO@ MethodInvocation@@testContext.getTestMethod() @AT@ 2699 @LENGTH@ 15
---------INS SimpleName@@MethodName:thenReturn:[ReflectionUtils.findMethod(testClass,"testWithMockUser")] @TO@ MethodInvocation@@when(testContext.getTestMethod()).thenReturn(ReflectionUtils.findMethod(testClass,"testWithMockUser")) @AT@ 2716 @LENGTH@ 74
------------INS MethodInvocation@@ReflectionUtils.findMethod(testClass,"testWithMockUser") @TO@ SimpleName@@MethodName:thenReturn:[ReflectionUtils.findMethod(testClass,"testWithMockUser")] @AT@ 2732 @LENGTH@ 57
---------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.findMethod(testClass,"testWithMockUser") @AT@ 2732 @LENGTH@ 15
---------------INS SimpleName@@MethodName:findMethod:[testClass, "testWithMockUser"] @TO@ MethodInvocation@@ReflectionUtils.findMethod(testClass,"testWithMockUser") @AT@ 2748 @LENGTH@ 41
------------------INS SimpleName@@testClass @TO@ SimpleName@@MethodName:findMethod:[testClass, "testWithMockUser"] @AT@ 2759 @LENGTH@ 9
------------------INS StringLiteral@@"testWithMockUser" @TO@ SimpleName@@MethodName:findMethod:[testClass, "testWithMockUser"] @AT@ 2770 @LENGTH@ 18
---INS ExpressionStatement@@MethodInvocation:listener.beforeTestMethod(testContext) @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2795 @LENGTH@ 39
------INS MethodInvocation@@listener.beforeTestMethod(testContext) @TO@ ExpressionStatement@@MethodInvocation:listener.beforeTestMethod(testContext) @AT@ 2795 @LENGTH@ 38
---------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.beforeTestMethod(testContext) @AT@ 2795 @LENGTH@ 8
---------INS SimpleName@@MethodName:beforeTestMethod:[testContext] @TO@ MethodInvocation@@listener.beforeTestMethod(testContext) @AT@ 2804 @LENGTH@ 29
------------INS SimpleName@@testContext @TO@ SimpleName@@MethodName:beforeTestMethod:[testContext] @AT@ 2821 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(TestSecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("user") @TO@ MethodDeclaration@@public, void, MethodName:beforeTestMethodNoApplicationContext, Exception,  @AT@ 2838 @LENGTH@ 99
------INS MethodInvocation@@assertThat(TestSecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("user") @TO@ ExpressionStatement@@MethodInvocation:assertThat(TestSecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("user") @AT@ 2838 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:assertThat:[TestSecurityContextHolder.getContext().getAuthentication().getName()] @TO@ MethodInvocation@@assertThat(TestSecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("user") @AT@ 2838 @LENGTH@ 80
------------INS MethodInvocation@@TestSecurityContextHolder.getContext().getAuthentication().getName() @TO@ MethodInvocation@@MethodName:assertThat:[TestSecurityContextHolder.getContext().getAuthentication().getName()] @AT@ 2849 @LENGTH@ 68
---------------INS MethodInvocation@@MethodName:getAuthentication:[] @TO@ MethodInvocation@@TestSecurityContextHolder.getContext().getAuthentication().getName() @AT@ 2849 @LENGTH@ 58
---------------INS MethodInvocation@@MethodName:getContext:[] @TO@ MethodInvocation@@TestSecurityContextHolder.getContext().getAuthentication().getName() @AT@ 2849 @LENGTH@ 38
---------------INS SimpleName@@Name:TestSecurityContextHolder @TO@ MethodInvocation@@TestSecurityContextHolder.getContext().getAuthentication().getName() @AT@ 2849 @LENGTH@ 25
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@TestSecurityContextHolder.getContext().getAuthentication().getName() @AT@ 2908 @LENGTH@ 9
---------INS SimpleName@@MethodName:isEqualTo:["user"] @TO@ MethodInvocation@@assertThat(TestSecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo("user") @AT@ 2919 @LENGTH@ 17
------------INS StringLiteral@@"user" @TO@ SimpleName@@MethodName:isEqualTo:["user"] @AT@ 2929 @LENGTH@ 6


INS ExpressionStatement@@MethodInvocation:node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @TO@ MethodDeclaration@@public, List<ModelNode>, MethodName:getList, EJBFraction fraction,  @AT@ 2050 @LENGTH@ 115
---INS MethodInvocation@@node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @TO@ ExpressionStatement@@MethodInvocation:node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @AT@ 2050 @LENGTH@ 114
------INS MethodInvocation@@MethodName:get:["default-resource-adapter-name"] @TO@ MethodInvocation@@node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @AT@ 2050 @LENGTH@ 41
---------INS StringLiteral@@"default-resource-adapter-name" @TO@ MethodInvocation@@MethodName:get:["default-resource-adapter-name"] @AT@ 2059 @LENGTH@ 31
------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @AT@ 2050 @LENGTH@ 4
------INS SimpleName@@MethodName:set:[new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")] @TO@ MethodInvocation@@node.get("default-resource-adapter-name").set(new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")) @AT@ 2092 @LENGTH@ 72
---------INS ClassInstanceCreation@@ValueExpression["${ejb.resource-adapter-name:activemq-ra.rar}"] @TO@ SimpleName@@MethodName:set:[new ValueExpression("${ejb.resource-adapter-name:activemq-ra.rar}")] @AT@ 2096 @LENGTH@ 67
------------INS New@@new @TO@ ClassInstanceCreation@@ValueExpression["${ejb.resource-adapter-name:activemq-ra.rar}"] @AT@ 2096 @LENGTH@ 3
------------INS SimpleType@@ValueExpression @TO@ ClassInstanceCreation@@ValueExpression["${ejb.resource-adapter-name:activemq-ra.rar}"] @AT@ 2100 @LENGTH@ 15
------------INS StringLiteral@@"${ejb.resource-adapter-name:activemq-ra.rar}" @TO@ ClassInstanceCreation@@ValueExpression["${ejb.resource-adapter-name:activemq-ra.rar}"] @AT@ 2116 @LENGTH@ 46


UPD ReturnStatement@@InfixExpression:fileInDir.length > 0 @TO@ InfixExpression:fileInDir != null && fileInDir.length > 0 @AT@ 132501 @LENGTH@ 28
---INS InfixExpression@@fileInDir != null && fileInDir.length > 0 @TO@ ReturnStatement@@InfixExpression:fileInDir.length > 0 @AT@ 132508 @LENGTH@ 41
------MOV InfixExpression@@fileInDir.length > 0 @TO@ InfixExpression@@fileInDir != null && fileInDir.length > 0 @AT@ 132508 @LENGTH@ 20
------INS InfixExpression@@fileInDir != null @TO@ InfixExpression@@fileInDir != null && fileInDir.length > 0 @AT@ 132508 @LENGTH@ 17
---------INS SimpleName@@fileInDir @TO@ InfixExpression@@fileInDir != null @AT@ 132508 @LENGTH@ 9
---------INS Operator@@!= @TO@ InfixExpression@@fileInDir != null @AT@ 132517 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@fileInDir != null @AT@ 132521 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@fileInDir != null && fileInDir.length > 0 @AT@ 132525 @LENGTH@ 2


INS MethodDeclaration@@void, MethodName:deleteByUserName, String userName,  @TO@ TypeDeclaration@@PersonRepository, [Repository<User,Long>] @AT@ 7922 @LENGTH@ 34
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:deleteByUserName, String userName,  @AT@ 7917 @LENGTH@ 4
---INS SimpleName@@MethodName:deleteByUserName @TO@ MethodDeclaration@@void, MethodName:deleteByUserName, String userName,  @AT@ 7922 @LENGTH@ 16
---INS SingleVariableDeclaration@@String userName @TO@ MethodDeclaration@@void, MethodName:deleteByUserName, String userName,  @AT@ 7939 @LENGTH@ 15
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String userName @AT@ 7939 @LENGTH@ 6
------INS SimpleName@@userName @TO@ SingleVariableDeclaration@@String userName @AT@ 7946 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1481 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1490 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1490 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1518 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1521 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1533 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1490 @LENGTH@ 46


INS MethodDeclaration@@void, MethodName:errorStoppingRA, @Cause Throwable cause,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYJCA",length=4), public]ConnectorLogger, [BasicLogger] @AT@ 33475 @LENGTH@ 40
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:errorStoppingRA, @Cause Throwable cause,  @AT@ 33470 @LENGTH@ 4
---INS SimpleName@@MethodName:errorStoppingRA @TO@ MethodDeclaration@@void, MethodName:errorStoppingRA, @Cause Throwable cause,  @AT@ 33475 @LENGTH@ 15
---INS SingleVariableDeclaration@@@Cause Throwable cause @TO@ MethodDeclaration@@void, MethodName:errorStoppingRA, @Cause Throwable cause,  @AT@ 33491 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 33498 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 33508 @LENGTH@ 5


INS MethodDeclaration@@public, Long, MethodName:getId,  @TO@ TypeDeclaration@@[public, abstract]AbstractEntity,  @AT@ 720 @LENGTH@ 46
---INS Modifier@@public @TO@ MethodDeclaration@@public, Long, MethodName:getId,  @AT@ 720 @LENGTH@ 6
---INS SimpleType@@Long @TO@ MethodDeclaration@@public, Long, MethodName:getId,  @AT@ 727 @LENGTH@ 4
---INS SimpleName@@MethodName:getId @TO@ MethodDeclaration@@public, Long, MethodName:getId,  @AT@ 732 @LENGTH@ 5
---INS ReturnStatement@@SimpleName:id @TO@ MethodDeclaration@@public, Long, MethodName:getId,  @AT@ 750 @LENGTH@ 10
------INS SimpleName@@id @TO@ ReturnStatement@@SimpleName:id @AT@ 757 @LENGTH@ 2


INS FieldDeclaration@@public, Long, [version] @TO@ TypeDeclaration@@[@Entity, public]Address,  @AT@ 908 @LENGTH@ 29
---INS Modifier@@public @TO@ FieldDeclaration@@public, Long, [version] @AT@ 908 @LENGTH@ 6
---INS SimpleType@@Long @TO@ FieldDeclaration@@public, Long, [version] @AT@ 924 @LENGTH@ 4
---INS VariableDeclarationFragment@@version @TO@ FieldDeclaration@@public, Long, [version] @AT@ 929 @LENGTH@ 7
------INS SimpleName@@version @TO@ VariableDeclarationFragment@@version @AT@ 929 @LENGTH@ 7


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1071 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1071 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1081 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1089 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1108 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1115 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:tPartition.getSd().setOutputFormat(HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString()) @TO@ MethodInvocation:tPartition.getSd().setOutputFormat(HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName()) @AT@ 9845 @LENGTH@ 121
---UPD MethodInvocation@@tPartition.getSd().setOutputFormat(HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString()) @TO@ tPartition.getSd().setOutputFormat(HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName()) @AT@ 9845 @LENGTH@ 120
------UPD SimpleName@@MethodName:setOutputFormat:[HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString()] @TO@ MethodName:setOutputFormat:[HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName()] @AT@ 9864 @LENGTH@ 101
---------UPD MethodInvocation@@HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).toString() @TO@ HiveFileFormatUtils.getOutputFormatSubstitute(outputFormatClass).getName() @AT@ 9880 @LENGTH@ 84
------------UPD SimpleName@@MethodName:toString:[] @TO@ MethodName:getName:[] @AT@ 9954 @LENGTH@ 10


UPD VariableDeclarationStatement@@final RabbitListener classLevelListener=AnnotationUtils.findAnnotation(bean.getClass(),RabbitListener.class); @TO@ final RabbitListener classLevelListener=AnnotationUtils.findAnnotation(targetClass,RabbitListener.class); @AT@ 9491 @LENGTH@ 112
---UPD VariableDeclarationFragment@@classLevelListener=AnnotationUtils.findAnnotation(bean.getClass(),RabbitListener.class) @TO@ classLevelListener=AnnotationUtils.findAnnotation(targetClass,RabbitListener.class) @AT@ 9512 @LENGTH@ 90
------UPD MethodInvocation@@AnnotationUtils.findAnnotation(bean.getClass(),RabbitListener.class) @TO@ AnnotationUtils.findAnnotation(targetClass,RabbitListener.class) @AT@ 9533 @LENGTH@ 69
---------UPD SimpleName@@MethodName:findAnnotation:[bean.getClass(), RabbitListener.class] @TO@ MethodName:findAnnotation:[targetClass, RabbitListener.class] @AT@ 9549 @LENGTH@ 53
------------DEL MethodInvocation@@bean.getClass() @AT@ 9564 @LENGTH@ 15
---------------DEL SimpleName@@Name:bean @AT@ 9564 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:getClass:[] @AT@ 9569 @LENGTH@ 10
------------INS SimpleName@@targetClass @TO@ SimpleName@@MethodName:findAnnotation:[bean.getClass(), RabbitListener.class] @AT@ 9564 @LENGTH@ 11


UPD TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @TO@ try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  System.out.println("Executed HTTP request");}  finally {  client.getConnectionManager().shutdown();} @AT@ 5934 @LENGTH@ 2263
---DEL TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6126 @LENGTH@ 205
------DEL Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 6260 @LENGTH@ 71
---------DEL ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 6278 @LENGTH@ 39
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6148 @LENGTH@ 89
---INS ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6212 @LENGTH@ 42
------MOV MethodInvocation@@HttpClientUtils.closeQuietly(response) @TO@ ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 6278 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 6212 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getEntity:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 6212 @LENGTH@ 20
---DEL TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 6672 @LENGTH@ 310
------DEL Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 6911 @LENGTH@ 71
---------DEL ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 6929 @LENGTH@ 39
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6694 @LENGTH@ 89
---INS ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6798 @LENGTH@ 42
------MOV MethodInvocation@@HttpClientUtils.closeQuietly(response) @TO@ ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 6929 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 6798 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getEntity:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 6798 @LENGTH@ 20
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6800 @LENGTH@ 88
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 6995 @LENGTH@ 44
---DEL TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7211 @LENGTH@ 310
------DEL Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 7450 @LENGTH@ 71
---------DEL ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 7468 @LENGTH@ 39
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7233 @LENGTH@ 89
---INS ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7272 @LENGTH@ 42
------MOV MethodInvocation@@HttpClientUtils.closeQuietly(response) @TO@ ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 7468 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 7272 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getEntity:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 7272 @LENGTH@ 20
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7339 @LENGTH@ 88
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7534 @LENGTH@ 44
---INS ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7746 @LENGTH@ 42
------MOV MethodInvocation@@HttpClientUtils.closeQuietly(response) @TO@ ExpressionStatement@@MethodInvocation:response.getEntity().getContent().close() @AT@ 8007 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:getContent:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 7746 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:getEntity:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(response) @AT@ 7746 @LENGTH@ 20
---DEL TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @AT@ 7750 @LENGTH@ 310
------DEL Block@@FinallyBody:{  HttpClientUtils.closeQuietly(response);} @AT@ 7989 @LENGTH@ 71
---------DEL ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(response) @AT@ 8007 @LENGTH@ 39
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode()) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7772 @LENGTH@ 89
---MOV ExpressionStatement@@MethodInvocation:Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue())) @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 7878 @LENGTH@ 88
---MOV ExpressionStatement@@MethodInvocation:System.out.println("Executed HTTP request") @TO@ TryStatement@@try {  System.out.println("Executing HTTP request: " + url1);  HttpResponse response=client.execute(new HttpGet(url1));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  waitForReplication(GRACE_TIME_TO_REPLICATE);  System.out.println("Executing HTTP request: " + url2);  response=client.execute(new HttpGet(url2));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url3);  response=client.execute(new HttpGet(url3));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");  System.out.println("Executing HTTP request: " + url4);  response=client.execute(new HttpGet(url4));  try {    Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());    Assert.assertEquals(100,Integer.parseInt(response.getFirstHeader("value").getValue()));  }  finally {    HttpClientUtils.closeQuietly(response);  }  System.out.println("Executed HTTP request");}  finally {  HttpClientUtils.closeQuietly(client);} @AT@ 8073 @LENGTH@ 44
---UPD Block@@FinallyBody:{  HttpClientUtils.closeQuietly(client);} @TO@ FinallyBody:{  client.getConnectionManager().shutdown();} @AT@ 8136 @LENGTH@ 61
------UPD ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(client) @TO@ MethodInvocation:client.getConnectionManager().shutdown() @AT@ 8150 @LENGTH@ 37
---------UPD MethodInvocation@@HttpClientUtils.closeQuietly(client) @TO@ client.getConnectionManager().shutdown() @AT@ 8150 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getConnectionManager:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(client) @AT@ 7878 @LENGTH@ 29
------------UPD SimpleName@@Name:HttpClientUtils @TO@ Name:client @AT@ 8150 @LENGTH@ 15
------------UPD SimpleName@@MethodName:closeQuietly:[client] @TO@ MethodName:shutdown:[] @AT@ 8166 @LENGTH@ 20
---------------DEL SimpleName@@client @AT@ 8179 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:Thread.sleep(1000) @TO@ MethodInvocation:Thread.sleep(2000) @AT@ 4428 @LENGTH@ 19
---UPD MethodInvocation@@Thread.sleep(1000) @TO@ Thread.sleep(2000) @AT@ 4428 @LENGTH@ 18
------UPD SimpleName@@MethodName:sleep:[1000] @TO@ MethodName:sleep:[2000] @AT@ 4435 @LENGTH@ 11
---------UPD NumberLiteral@@1000 @TO@ 2000 @AT@ 4441 @LENGTH@ 4


DEL ExpressionStatement@@MethodInvocation:log.info(out) @AT@ 1372 @LENGTH@ 14
---DEL MethodInvocation@@log.info(out) @AT@ 1372 @LENGTH@ 13
------DEL SimpleName@@Name:log @AT@ 1372 @LENGTH@ 3
------DEL SimpleName@@MethodName:info:[out] @AT@ 1376 @LENGTH@ 9
---------DEL SimpleName@@out @AT@ 1381 @LENGTH@ 3


UPD Block@@ThenBody:{  decoder.decodeImplicit(trustedAuthorityType);  byte[] cert=decoder.drainElementValue();  try {    CertificateFactory certFactory=CertificateFactory.getInstance("X.509");    trustedAuthority=new CertificateTrustedAuthority((X509Certificate)certFactory.generateCertificate(new ByteArrayInputStream(cert)));  } catch (  CertificateException e) {    throw new ASN1Exception(e);  }  break out;} @TO@ ThenBody:{  decoder.decodeImplicit(trustedAuthorityType);  byte[] cert=decoder.drainElement();  cert[0]=SEQUENCE_TYPE;  try {    CertificateFactory certFactory=CertificateFactory.getInstance("X.509");    trustedAuthority=new CertificateTrustedAuthority((X509Certificate)certFactory.generateCertificate(new ByteArrayInputStream(cert)));  } catch (  CertificateException e) {    throw new ASN1Exception(e);  }  break out;} @AT@ 25595 @LENGTH@ 711
---UPD VariableDeclarationStatement@@byte[] cert=decoder.drainElementValue(); @TO@ byte[] cert=decoder.drainElement(); @AT@ 25707 @LENGTH@ 42
------UPD VariableDeclarationFragment@@cert=decoder.drainElementValue() @TO@ cert=decoder.drainElement() @AT@ 25714 @LENGTH@ 34
---------UPD MethodInvocation@@decoder.drainElementValue() @TO@ decoder.drainElement() @AT@ 25721 @LENGTH@ 27
------------UPD SimpleName@@MethodName:drainElementValue:[] @TO@ MethodName:drainElement:[] @AT@ 25729 @LENGTH@ 19
---INS ExpressionStatement@@Assignment:cert[0]=SEQUENCE_TYPE @TO@ Block@@ThenBody:{  decoder.decodeImplicit(trustedAuthorityType);  byte[] cert=decoder.drainElementValue();  try {    CertificateFactory certFactory=CertificateFactory.getInstance("X.509");    trustedAuthority=new CertificateTrustedAuthority((X509Certificate)certFactory.generateCertificate(new ByteArrayInputStream(cert)));  } catch (  CertificateException e) {    throw new ASN1Exception(e);  }  break out;} @AT@ 25777 @LENGTH@ 24
------INS Assignment@@cert[0]=SEQUENCE_TYPE @TO@ ExpressionStatement@@Assignment:cert[0]=SEQUENCE_TYPE @AT@ 25777 @LENGTH@ 23
---------INS ArrayAccess@@cert[0] @TO@ Assignment@@cert[0]=SEQUENCE_TYPE @AT@ 25777 @LENGTH@ 7
------------INS SimpleName@@cert @TO@ ArrayAccess@@cert[0] @AT@ 25777 @LENGTH@ 4
------------INS NumberLiteral@@0 @TO@ ArrayAccess@@cert[0] @AT@ 25782 @LENGTH@ 1
---------INS Operator@@= @TO@ Assignment@@cert[0]=SEQUENCE_TYPE @AT@ 25784 @LENGTH@ 1
---------INS SimpleName@@SEQUENCE_TYPE @TO@ Assignment@@cert[0]=SEQUENCE_TYPE @AT@ 25787 @LENGTH@ 13


UPD VariableDeclarationStatement@@ModelNode connectors=EXCLUDED_CONNECTORS.resolveModelAttribute(context,model); @TO@ List<String> connectors=EXCLUDED_CONNECTORS.unwrap(context,model); @AT@ 5611 @LENGTH@ 81
---INS ParameterizedType@@List<String> @TO@ VariableDeclarationStatement@@ModelNode connectors=EXCLUDED_CONNECTORS.resolveModelAttribute(context,model); @AT@ 5583 @LENGTH@ 12
------INS SimpleType@@List @TO@ ParameterizedType@@List<String> @AT@ 5583 @LENGTH@ 4
------INS SimpleType@@String @TO@ ParameterizedType@@List<String> @AT@ 5588 @LENGTH@ 6
---DEL SimpleType@@ModelNode @AT@ 5611 @LENGTH@ 9
---UPD VariableDeclarationFragment@@connectors=EXCLUDED_CONNECTORS.resolveModelAttribute(context,model) @TO@ connectors=EXCLUDED_CONNECTORS.unwrap(context,model) @AT@ 5621 @LENGTH@ 70
------UPD MethodInvocation@@EXCLUDED_CONNECTORS.resolveModelAttribute(context,model) @TO@ EXCLUDED_CONNECTORS.unwrap(context,model) @AT@ 5634 @LENGTH@ 57
---------UPD SimpleName@@MethodName:resolveModelAttribute:[context, model] @TO@ MethodName:unwrap:[context, model] @AT@ 5654 @LENGTH@ 37


UPD IfStatement@@if (version.isEmpty() || version.equals("*")) {  version=null;} @TO@ if (version != null && (version.isEmpty() || version.equals("*"))) {  version=null;} @AT@ 6031 @LENGTH@ 85
---INS InfixExpression@@version != null && (version.isEmpty() || version.equals("*")) @TO@ IfStatement@@if (version.isEmpty() || version.equals("*")) {  version=null;} @AT@ 6136 @LENGTH@ 61
------INS InfixExpression@@version != null @TO@ InfixExpression@@version != null && (version.isEmpty() || version.equals("*")) @AT@ 6136 @LENGTH@ 15
---------INS SimpleName@@version @TO@ InfixExpression@@version != null @AT@ 6136 @LENGTH@ 7
---------INS Operator@@!= @TO@ InfixExpression@@version != null @AT@ 6143 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@version != null @AT@ 6147 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@version != null && (version.isEmpty() || version.equals("*")) @AT@ 6151 @LENGTH@ 2
------INS ParenthesizedExpression@@(version.isEmpty() || version.equals("*")) @TO@ InfixExpression@@version != null && (version.isEmpty() || version.equals("*")) @AT@ 6155 @LENGTH@ 42
---------MOV InfixExpression@@version.isEmpty() || version.equals("*") @TO@ ParenthesizedExpression@@(version.isEmpty() || version.equals("*")) @AT@ 6035 @LENGTH@ 40


UPD ExpressionStatement@@Assignment:found=s.startsWith("\"" + group + "\":") @TO@ Assignment:found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 10848 @LENGTH@ 43
---UPD Assignment@@found=s.startsWith("\"" + group + "\":") @TO@ found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 10848 @LENGTH@ 42
------INS InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @TO@ Assignment@@found=s.startsWith("\"" + group + "\":") @AT@ 10856 @LENGTH@ 53
---------MOV MethodInvocation@@s.startsWith("\"" + group + "\":") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 10856 @LENGTH@ 34
---------INS Operator@@&& @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 10890 @LENGTH@ 2
---------INS MethodInvocation@@s.endsWith("{") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 10894 @LENGTH@ 15
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.endsWith("{") @AT@ 10894 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["{"] @TO@ MethodInvocation@@s.endsWith("{") @AT@ 10896 @LENGTH@ 13
---------------INS StringLiteral@@"{" @TO@ SimpleName@@MethodName:endsWith:["{"] @AT@ 10905 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 8050 @LENGTH@ 130
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 8050 @LENGTH@ 129
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 8050 @LENGTH@ 106
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 8054 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 8054 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 8085 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor, handler] @AT@ 8089 @LENGTH@ 39
------------DEL New@@new @AT@ 8089 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 8093 @LENGTH@ 14
------------DEL SimpleName@@descriptor @AT@ 8108 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 8120 @LENGTH@ 7
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 8097 @LENGTH@ 7


DEL MethodDeclaration@@protected, boolean, MethodName:useJmx,  @AT@ 1070 @LENGTH@ 55
---DEL Modifier@@protected @AT@ 1070 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1080 @LENGTH@ 7
---DEL SimpleName@@MethodName:useJmx @AT@ 1088 @LENGTH@ 6
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1107 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1114 @LENGTH@ 4


INS FieldDeclaration@@private, static, String, [payload] @TO@ TypeDeclaration@@[public]SignatureAlgorithmTest, CamelTestSupport @AT@ 3647 @LENGTH@ 30
---MOV Modifier@@private @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3647 @LENGTH@ 7
---MOV Modifier@@static @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3655 @LENGTH@ 6
---MOV SimpleType@@String @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3662 @LENGTH@ 6
---INS VariableDeclarationFragment@@payload @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3669 @LENGTH@ 7
------MOV SimpleName@@payload @TO@ VariableDeclarationFragment@@payload @AT@ 3669 @LENGTH@ 7


UPD ReturnStatement@@SuperMethodInvocation:super.getMappedObjectForField(field,getMappedValue(field,rawValue)) @TO@ SuperMethodInvocation:super.getMappedObjectForField(field,rawValue) @AT@ 3398 @LENGTH@ 77
---UPD SuperMethodInvocation@@super.getMappedObjectForField(field,getMappedValue(field,rawValue)) @TO@ super.getMappedObjectForField(field,rawValue) @AT@ 3405 @LENGTH@ 69
------UPD SimpleName@@MethodName:getMappedObjectForField:[field, getMappedValue(field,rawValue)] @TO@ MethodName:getMappedObjectForField:[field, rawValue] @AT@ 3411 @LENGTH@ 23
------DEL MethodInvocation@@getMappedValue(field,rawValue) @AT@ 3442 @LENGTH@ 31
---------DEL SimpleName@@MethodName:getMappedValue:[field, rawValue] @AT@ 3442 @LENGTH@ 31
------------DEL SimpleName@@field @AT@ 3457 @LENGTH@ 5
------------DEL SimpleName@@rawValue @AT@ 3464 @LENGTH@ 8
------INS SimpleName@@rawValue @TO@ SuperMethodInvocation@@super.getMappedObjectForField(field,getMappedValue(field,rawValue)) @AT@ 3442 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"method\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1748 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue(json.contains("\"method\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1748 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"method\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")] @AT@ 1748 @LENGTH@ 88
---------UPD MethodInvocation@@json.contains("\"method\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"") @AT@ 1759 @LENGTH@ 76
------------UPD SimpleName@@MethodName:contains:["\"method\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\""] @AT@ 1764 @LENGTH@ 71
---------------UPD StringLiteral@@"\"method\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"method\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"" @AT@ 1773 @LENGTH@ 61


DEL MethodDeclaration@@protected, boolean, MethodName:isEnableJmx,  @AT@ 1145 @LENGTH@ 60
---DEL Modifier@@protected @AT@ 1145 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1155 @LENGTH@ 7
---DEL SimpleName@@MethodName:isEnableJmx @AT@ 1163 @LENGTH@ 11
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1187 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1194 @LENGTH@ 4


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 2801 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 2801 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2812 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2821 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2790 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 2821 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 2833 @LENGTH@ 15


UPD VariableDeclarationStatement@@List<T> content=total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList(); @TO@ List<T> content=pageable == null || total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList(); @AT@ 5248 @LENGTH@ 96
---UPD VariableDeclarationFragment@@content=total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList() @TO@ content=pageable == null || total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList() @AT@ 5256 @LENGTH@ 87
------UPD ConditionalExpression@@total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList() @TO@ pageable == null || total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList() @AT@ 5266 @LENGTH@ 77
---------INS InfixExpression@@pageable == null || total > pageable.getOffset() @TO@ ConditionalExpression@@total > pageable.getOffset() ? query.list(path) : Collections.<T>emptyList() @AT@ 5266 @LENGTH@ 48
------------MOV InfixExpression@@total > pageable.getOffset() @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 5266 @LENGTH@ 28
------------INS InfixExpression@@pageable == null @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 5266 @LENGTH@ 16
---------------INS SimpleName@@pageable @TO@ InfixExpression@@pageable == null @AT@ 5266 @LENGTH@ 8
---------------INS Operator@@== @TO@ InfixExpression@@pageable == null @AT@ 5274 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@pageable == null @AT@ 5278 @LENGTH@ 4
------------INS Operator@@|| @TO@ InfixExpression@@pageable == null || total > pageable.getOffset() @AT@ 5282 @LENGTH@ 2


UPD IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else if (response.getEntity() instanceof Representation) {  Representation representationDecoded=new DecodeRepresentation(response.getEntity());  exchange.getOut().setBody(representationDecoded.getText());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @TO@ if (response.getEntity() instanceof StreamRepresentation) {  Representation representationDecoded=new DecodeRepresentation(response.getEntity());  exchange.getOut().setBody(representationDecoded.getStream());} else if (response.getEntity() instanceof Representation) {  Representation representationDecoded=new DecodeRepresentation(response.getEntity());  exchange.getOut().setBody(representationDecoded.getText());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 15202 @LENGTH@ 682
---DEL InfixExpression@@mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 15206 @LENGTH@ 73
------DEL InfixExpression@@mediaType != null @AT@ 15206 @LENGTH@ 17
---------DEL SimpleName@@mediaType @AT@ 15206 @LENGTH@ 9
---------DEL Operator@@!= @AT@ 15215 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 15219 @LENGTH@ 4
------DEL Operator@@&& @AT@ 15223 @LENGTH@ 2
------DEL MethodInvocation@@mediaType.equals(MediaType.APPLICATION_OCTET_STREAM) @AT@ 15227 @LENGTH@ 52
---INS InstanceofExpression@@response.getEntity() instanceof StreamRepresentation @TO@ IfStatement@@if (mediaType != null && mediaType.equals(MediaType.APPLICATION_OCTET_STREAM)) {  exchange.getOut().setBody(response.getEntity().getStream());} else if (response.getEntity() instanceof Representation) {  Representation representationDecoded=new DecodeRepresentation(response.getEntity());  exchange.getOut().setBody(representationDecoded.getText());} else {  String text=response.getEntity().getText();  LOG.debug("Populate exchange from Restlet response: {}",text);  exchange.getOut().setBody(text);} @AT@ 15262 @LENGTH@ 52
------INS MethodInvocation@@response.getEntity() @TO@ InstanceofExpression@@response.getEntity() instanceof StreamRepresentation @AT@ 15262 @LENGTH@ 20
---------MOV SimpleName@@Name:mediaType @TO@ MethodInvocation@@response.getEntity() @AT@ 15227 @LENGTH@ 9
---------MOV SimpleName@@MethodName:equals:[MediaType.APPLICATION_OCTET_STREAM] @TO@ MethodInvocation@@response.getEntity() @AT@ 15237 @LENGTH@ 42
------------DEL QualifiedName@@MediaType.APPLICATION_OCTET_STREAM @AT@ 15244 @LENGTH@ 34
---------------DEL SimpleName@@MediaType @AT@ 15244 @LENGTH@ 9
---------------DEL SimpleName@@APPLICATION_OCTET_STREAM @AT@ 15254 @LENGTH@ 24
------INS Instanceof@@instanceof @TO@ InstanceofExpression@@response.getEntity() instanceof StreamRepresentation @AT@ 15283 @LENGTH@ 10
------INS SimpleType@@StreamRepresentation @TO@ InstanceofExpression@@response.getEntity() instanceof StreamRepresentation @AT@ 15294 @LENGTH@ 20
---UPD Block@@ThenBody:{  exchange.getOut().setBody(response.getEntity().getStream());} @TO@ ThenBody:{  Representation representationDecoded=new DecodeRepresentation(response.getEntity());  exchange.getOut().setBody(representationDecoded.getStream());} @AT@ 15281 @LENGTH@ 92
------UPD ExpressionStatement@@MethodInvocation:exchange.getOut().setBody(response.getEntity().getStream()) @TO@ MethodInvocation:exchange.getOut().setBody(representationDecoded.getStream()) @AT@ 15299 @LENGTH@ 60
---------UPD MethodInvocation@@exchange.getOut().setBody(response.getEntity().getStream()) @TO@ exchange.getOut().setBody(representationDecoded.getStream()) @AT@ 15299 @LENGTH@ 59
------------UPD SimpleName@@MethodName:setBody:[response.getEntity().getStream()] @TO@ MethodName:setBody:[representationDecoded.getStream()] @AT@ 15317 @LENGTH@ 41
---------------UPD MethodInvocation@@response.getEntity().getStream() @TO@ representationDecoded.getStream() @AT@ 15325 @LENGTH@ 32
------------------DEL MethodInvocation@@MethodName:getEntity:[] @AT@ 15325 @LENGTH@ 20
------------------UPD SimpleName@@Name:response @TO@ Name:representationDecoded @AT@ 15325 @LENGTH@ 8
------INS VariableDeclarationStatement@@Representation representationDecoded=new DecodeRepresentation(response.getEntity()); @TO@ Block@@ThenBody:{  exchange.getOut().setBody(response.getEntity().getStream());} @AT@ 15334 @LENGTH@ 86
---------INS SimpleType@@Representation @TO@ VariableDeclarationStatement@@Representation representationDecoded=new DecodeRepresentation(response.getEntity()); @AT@ 15334 @LENGTH@ 14
---------INS VariableDeclarationFragment@@representationDecoded=new DecodeRepresentation(response.getEntity()) @TO@ VariableDeclarationStatement@@Representation representationDecoded=new DecodeRepresentation(response.getEntity()); @AT@ 15349 @LENGTH@ 70
------------INS SimpleName@@representationDecoded @TO@ VariableDeclarationFragment@@representationDecoded=new DecodeRepresentation(response.getEntity()) @AT@ 15349 @LENGTH@ 21
------------INS ClassInstanceCreation@@DecodeRepresentation[response.getEntity()] @TO@ VariableDeclarationFragment@@representationDecoded=new DecodeRepresentation(response.getEntity()) @AT@ 15373 @LENGTH@ 46
---------------INS New@@new @TO@ ClassInstanceCreation@@DecodeRepresentation[response.getEntity()] @AT@ 15373 @LENGTH@ 3
---------------INS SimpleType@@DecodeRepresentation @TO@ ClassInstanceCreation@@DecodeRepresentation[response.getEntity()] @AT@ 15377 @LENGTH@ 20
---------------INS MethodInvocation@@response.getEntity() @TO@ ClassInstanceCreation@@DecodeRepresentation[response.getEntity()] @AT@ 15398 @LENGTH@ 20
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getEntity() @AT@ 15398 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getEntity:[] @TO@ MethodInvocation@@response.getEntity() @AT@ 15407 @LENGTH@ 11


UPD ReturnStatement@@MethodInvocation:of(IterableUtils.collatedIterable(null,iterable,other)) @TO@ MethodInvocation:of(IterableUtils.collatedIterable(iterable,other)) @AT@ 7195 @LENGTH@ 65
---UPD MethodInvocation@@of(IterableUtils.collatedIterable(null,iterable,other)) @TO@ of(IterableUtils.collatedIterable(iterable,other)) @AT@ 7202 @LENGTH@ 57
------UPD SimpleName@@MethodName:of:[IterableUtils.collatedIterable(null,iterable,other)] @TO@ MethodName:of:[IterableUtils.collatedIterable(iterable,other)] @AT@ 7202 @LENGTH@ 57
---------UPD MethodInvocation@@IterableUtils.collatedIterable(null,iterable,other) @TO@ IterableUtils.collatedIterable(iterable,other) @AT@ 7205 @LENGTH@ 53
------------UPD SimpleName@@MethodName:collatedIterable:[null, iterable, other] @TO@ MethodName:collatedIterable:[iterable, other] @AT@ 7219 @LENGTH@ 39
---------------DEL NullLiteral@@null @AT@ 7236 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @TO@ TypeDeclaration@@[public]QuerydslPredicateBuilderUnitTests,  @AT@ 3681 @LENGTH@ 444
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3681 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3688 @LENGTH@ 4
---INS SimpleName@@MethodName:ignoresNonDomainTypeProperties @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3693 @LENGTH@ 30
---INS VariableDeclarationStatement@@MultiValueMap<String,String> values=new LinkedMultiValueMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3731 @LENGTH@ 81
------INS ParameterizedType@@MultiValueMap<String,String> @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> values=new LinkedMultiValueMap<String,String>(); @AT@ 3731 @LENGTH@ 29
---------INS SimpleType@@MultiValueMap @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3731 @LENGTH@ 13
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3745 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@MultiValueMap<String,String> @AT@ 3753 @LENGTH@ 6
------INS VariableDeclarationFragment@@values=new LinkedMultiValueMap<String,String>() @TO@ VariableDeclarationStatement@@MultiValueMap<String,String> values=new LinkedMultiValueMap<String,String>(); @AT@ 3761 @LENGTH@ 50
---------INS SimpleName@@values @TO@ VariableDeclarationFragment@@values=new LinkedMultiValueMap<String,String>() @AT@ 3761 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @TO@ VariableDeclarationFragment@@values=new LinkedMultiValueMap<String,String>() @AT@ 3770 @LENGTH@ 41
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @AT@ 3770 @LENGTH@ 3
------------INS ParameterizedType@@LinkedMultiValueMap<String,String> @TO@ ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @AT@ 3774 @LENGTH@ 35
---------------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 3774 @LENGTH@ 19
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 3794 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 3802 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:values.add("firstname","rand") @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3815 @LENGTH@ 32
------INS MethodInvocation@@values.add("firstname","rand") @TO@ ExpressionStatement@@MethodInvocation:values.add("firstname","rand") @AT@ 3815 @LENGTH@ 31
---------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.add("firstname","rand") @AT@ 3815 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["firstname", "rand"] @TO@ MethodInvocation@@values.add("firstname","rand") @AT@ 3822 @LENGTH@ 24
------------INS StringLiteral@@"firstname" @TO@ SimpleName@@MethodName:add:["firstname", "rand"] @AT@ 3826 @LENGTH@ 11
------------INS StringLiteral@@"rand" @TO@ SimpleName@@MethodName:add:["firstname", "rand"] @AT@ 3839 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:values.add("lastname".toUpperCase(),"al'thor") @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3850 @LENGTH@ 48
------INS MethodInvocation@@values.add("lastname".toUpperCase(),"al'thor") @TO@ ExpressionStatement@@MethodInvocation:values.add("lastname".toUpperCase(),"al'thor") @AT@ 3850 @LENGTH@ 47
---------INS SimpleName@@Name:values @TO@ MethodInvocation@@values.add("lastname".toUpperCase(),"al'thor") @AT@ 3850 @LENGTH@ 6
---------INS SimpleName@@MethodName:add:["lastname".toUpperCase(), "al'thor"] @TO@ MethodInvocation@@values.add("lastname".toUpperCase(),"al'thor") @AT@ 3857 @LENGTH@ 40
------------INS MethodInvocation@@"lastname".toUpperCase() @TO@ SimpleName@@MethodName:add:["lastname".toUpperCase(), "al'thor"] @AT@ 3861 @LENGTH@ 24
---------------INS StringLiteral@@"lastname" @TO@ MethodInvocation@@"lastname".toUpperCase() @AT@ 3861 @LENGTH@ 10
---------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@"lastname".toUpperCase() @AT@ 3872 @LENGTH@ 13
------------INS StringLiteral@@"al'thor" @TO@ SimpleName@@MethodName:add:["lastname".toUpperCase(), "al'thor"] @AT@ 3887 @LENGTH@ 9
---INS VariableDeclarationStatement@@Predicate predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)); @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 3902 @LENGTH@ 145
------INS SimpleType@@Predicate @TO@ VariableDeclarationStatement@@Predicate predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)); @AT@ 3902 @LENGTH@ 9
------INS VariableDeclarationFragment@@predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @TO@ VariableDeclarationStatement@@Predicate predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)); @AT@ 3912 @LENGTH@ 134
---------INS SimpleName@@predicate @TO@ VariableDeclarationFragment@@predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @AT@ 3912 @LENGTH@ 9
---------INS MethodInvocation@@builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @TO@ VariableDeclarationFragment@@predicate=builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @AT@ 3924 @LENGTH@ 122
------------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @AT@ 3924 @LENGTH@ 7
------------INS SimpleName@@MethodName:getPredicate:[new MutablePropertyValues(values), new QuerydslBindings(), ClassTypeInformation.from(User.class)] @TO@ MethodInvocation@@builder.getPredicate(new MutablePropertyValues(values),new QuerydslBindings(),ClassTypeInformation.from(User.class)) @AT@ 3932 @LENGTH@ 114
---------------INS ClassInstanceCreation@@MutablePropertyValues[values] @TO@ SimpleName@@MethodName:getPredicate:[new MutablePropertyValues(values), new QuerydslBindings(), ClassTypeInformation.from(User.class)] @AT@ 3945 @LENGTH@ 33
------------------INS New@@new @TO@ ClassInstanceCreation@@MutablePropertyValues[values] @AT@ 3945 @LENGTH@ 3
------------------INS SimpleType@@MutablePropertyValues @TO@ ClassInstanceCreation@@MutablePropertyValues[values] @AT@ 3949 @LENGTH@ 21
------------------INS SimpleName@@values @TO@ ClassInstanceCreation@@MutablePropertyValues[values] @AT@ 3971 @LENGTH@ 6
---------------INS ClassInstanceCreation@@QuerydslBindings[] @TO@ SimpleName@@MethodName:getPredicate:[new MutablePropertyValues(values), new QuerydslBindings(), ClassTypeInformation.from(User.class)] @AT@ 3980 @LENGTH@ 22
------------------INS New@@new @TO@ ClassInstanceCreation@@QuerydslBindings[] @AT@ 3980 @LENGTH@ 3
------------------INS SimpleType@@QuerydslBindings @TO@ ClassInstanceCreation@@QuerydslBindings[] @AT@ 3984 @LENGTH@ 16
---------------INS MethodInvocation@@ClassTypeInformation.from(User.class) @TO@ SimpleName@@MethodName:getPredicate:[new MutablePropertyValues(values), new QuerydslBindings(), ClassTypeInformation.from(User.class)] @AT@ 4008 @LENGTH@ 37
------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 4008 @LENGTH@ 20
------------------INS SimpleName@@MethodName:from:[User.class] @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 4029 @LENGTH@ 16
---------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:from:[User.class] @AT@ 4034 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(predicate,is((Predicate)QUser.user.firstname.eq("rand"))) @TO@ MethodDeclaration@@public, void, MethodName:ignoresNonDomainTypeProperties,  @AT@ 4051 @LENGTH@ 71
------INS MethodInvocation@@assertThat(predicate,is((Predicate)QUser.user.firstname.eq("rand"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(predicate,is((Predicate)QUser.user.firstname.eq("rand"))) @AT@ 4051 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertThat:[predicate, is((Predicate)QUser.user.firstname.eq("rand"))] @TO@ MethodInvocation@@assertThat(predicate,is((Predicate)QUser.user.firstname.eq("rand"))) @AT@ 4051 @LENGTH@ 70
------------INS SimpleName@@predicate @TO@ SimpleName@@MethodName:assertThat:[predicate, is((Predicate)QUser.user.firstname.eq("rand"))] @AT@ 4062 @LENGTH@ 9
------------INS MethodInvocation@@is((Predicate)QUser.user.firstname.eq("rand")) @TO@ SimpleName@@MethodName:assertThat:[predicate, is((Predicate)QUser.user.firstname.eq("rand"))] @AT@ 4073 @LENGTH@ 47
---------------INS SimpleName@@MethodName:is:[(Predicate)QUser.user.firstname.eq("rand")] @TO@ MethodInvocation@@is((Predicate)QUser.user.firstname.eq("rand")) @AT@ 4073 @LENGTH@ 47
------------------INS CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @TO@ SimpleName@@MethodName:is:[(Predicate)QUser.user.firstname.eq("rand")] @AT@ 4076 @LENGTH@ 43
---------------------INS SimpleType@@Predicate @TO@ CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @AT@ 4077 @LENGTH@ 9
---------------------INS MethodInvocation@@QUser.user.firstname.eq("rand") @TO@ CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @AT@ 4088 @LENGTH@ 31
------------------------INS QualifiedName@@Name:QUser.user.firstname @TO@ MethodInvocation@@QUser.user.firstname.eq("rand") @AT@ 4088 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:eq:["rand"] @TO@ MethodInvocation@@QUser.user.firstname.eq("rand") @AT@ 4109 @LENGTH@ 10
---------------------------INS StringLiteral@@"rand" @TO@ SimpleName@@MethodName:eq:["rand"] @AT@ 4112 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[(Predicate)QUser.user.firstname.eq("rand")] @TO@ MethodInvocation@@is((Predicate)QUser.user.firstname.eq("rand")) @AT@ 4073 @LENGTH@ 47
------------------INS CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @TO@ SimpleName@@MethodName:is:[(Predicate)QUser.user.firstname.eq("rand")] @AT@ 4076 @LENGTH@ 43
---------------------INS SimpleType@@Predicate @TO@ CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @AT@ 4077 @LENGTH@ 9
---------------------INS MethodInvocation@@QUser.user.firstname.eq("rand") @TO@ CastExpression@@(Predicate)QUser.user.firstname.eq("rand") @AT@ 4088 @LENGTH@ 31
------------------------INS QualifiedName@@Name:QUser.user.firstname @TO@ MethodInvocation@@QUser.user.firstname.eq("rand") @AT@ 4088 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:eq:["rand"] @TO@ MethodInvocation@@QUser.user.firstname.eq("rand") @AT@ 4109 @LENGTH@ 10
---------------------------INS StringLiteral@@"rand" @TO@ SimpleName@@MethodName:eq:["rand"] @AT@ 4112 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,queueService) @TO@ MethodInvocation:BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,queueService,jmsQueueServiceName) @AT@ 3789 @LENGTH@ 81
---UPD MethodInvocation@@BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,queueService) @TO@ BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,queueService,jmsQueueServiceName) @AT@ 3789 @LENGTH@ 80
------UPD SimpleName@@MethodName:installBinderService:[serviceTarget, jndiBinding, queueService] @TO@ MethodName:installBinderService:[serviceTarget, jndiBinding, queueService, jmsQueueServiceName] @AT@ 3807 @LENGTH@ 62
---------INS SimpleName@@jmsQueueServiceName @TO@ SimpleName@@MethodName:installBinderService:[serviceTarget, jndiBinding, queueService] @AT@ 4063 @LENGTH@ 19


UPD Block@@ThenBody:{  String kind="element";  String name=elementRef.name();  if (isNullOrEmpty(name) || "##default".equals(name)) {    name=fieldName;  }  name=prefix + name;  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  Set<String> oneOfTypes=new TreeSet<String>();  Set<TypeElement> children=new LinkedHashSet<TypeElement>();  for (  String superclass : ONE_OF_VERBS) {    findTypeElementChildren(roundEnv,children,superclass);  }  for (  TypeElement child : children) {    XmlRootElement rootElement=child.getAnnotation(XmlRootElement.class);    if (rootElement != null) {      String childName=rootElement.name();      if (childName != null) {        oneOfTypes.add(childName);      }    }  }  EipOption ep=new EipOption(name,kind,fieldTypeName,true,"","",false,false,null,true,oneOfTypes);  eipOptions.add(ep);} @TO@ ThenBody:{  String kind="element";  String name=elementRef.name();  if (isNullOrEmpty(name) || "##default".equals(name)) {    name=fieldName;  }  name=prefix + name;  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true);  Set<String> oneOfTypes=new TreeSet<String>();  Set<TypeElement> children=new LinkedHashSet<TypeElement>();  for (  String superclass : ONE_OF_VERBS) {    findTypeElementChildren(roundEnv,children,superclass);  }  for (  TypeElement child : children) {    XmlRootElement rootElement=child.getAnnotation(XmlRootElement.class);    if (rootElement != null) {      String childName=rootElement.name();      if (childName != null) {        oneOfTypes.add(childName);      }    }  }  EipOption ep=new EipOption(name,kind,fieldTypeName,true,"",docComment,false,false,null,true,oneOfTypes);  eipOptions.add(ep);} @AT@ 34087 @LENGTH@ 1309
---INS VariableDeclarationStatement@@String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true); @TO@ Block@@ThenBody:{  String kind="element";  String name=elementRef.name();  if (isNullOrEmpty(name) || "##default".equals(name)) {    name=fieldName;  }  name=prefix + name;  TypeMirror fieldType=fieldElement.asType();  String fieldTypeName=fieldType.toString();  Set<String> oneOfTypes=new TreeSet<String>();  Set<TypeElement> children=new LinkedHashSet<TypeElement>();  for (  String superclass : ONE_OF_VERBS) {    findTypeElementChildren(roundEnv,children,superclass);  }  for (  TypeElement child : children) {    XmlRootElement rootElement=child.getAnnotation(XmlRootElement.class);    if (rootElement != null) {      String childName=rootElement.name();      if (childName != null) {        oneOfTypes.add(childName);      }    }  }  EipOption ep=new EipOption(name,kind,fieldTypeName,true,"","",false,false,null,true,oneOfTypes);  eipOptions.add(ep);} @AT@ 34515 @LENGTH@ 102
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true); @AT@ 34515 @LENGTH@ 6
------INS VariableDeclarationFragment@@docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true) @TO@ VariableDeclarationStatement@@String docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true); @AT@ 34522 @LENGTH@ 94
---------INS SimpleName@@docComment @TO@ VariableDeclarationFragment@@docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true) @AT@ 34522 @LENGTH@ 10
---------INS MethodInvocation@@findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true) @TO@ VariableDeclarationFragment@@docComment=findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true) @AT@ 34535 @LENGTH@ 81
------------INS SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @TO@ MethodInvocation@@findJavaDoc(elementUtils,fieldElement,fieldName,name,originalClassType,true) @AT@ 34535 @LENGTH@ 81
---------------INS SimpleName@@elementUtils @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34547 @LENGTH@ 12
---------------INS SimpleName@@fieldElement @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34561 @LENGTH@ 12
---------------INS SimpleName@@fieldName @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34575 @LENGTH@ 9
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34586 @LENGTH@ 4
---------------INS SimpleName@@originalClassType @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34592 @LENGTH@ 17
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:findJavaDoc:[elementUtils, fieldElement, fieldName, name, originalClassType, true] @AT@ 34611 @LENGTH@ 4
---UPD VariableDeclarationStatement@@EipOption ep=new EipOption(name,kind,fieldTypeName,true,"","",false,false,null,true,oneOfTypes); @TO@ EipOption ep=new EipOption(name,kind,fieldTypeName,true,"",docComment,false,false,null,true,oneOfTypes); @AT@ 35246 @LENGTH@ 108
------UPD VariableDeclarationFragment@@ep=new EipOption(name,kind,fieldTypeName,true,"","",false,false,null,true,oneOfTypes) @TO@ ep=new EipOption(name,kind,fieldTypeName,true,"",docComment,false,false,null,true,oneOfTypes) @AT@ 35256 @LENGTH@ 97
---------UPD ClassInstanceCreation@@EipOption[name, kind, fieldTypeName, true, "", "", false, false, null, true, oneOfTypes] @TO@ EipOption[name, kind, fieldTypeName, true, "", docComment, false, false, null, true, oneOfTypes] @AT@ 35261 @LENGTH@ 92
------------DEL StringLiteral@@"" @AT@ 35312 @LENGTH@ 2
------------INS SimpleName@@docComment @TO@ ClassInstanceCreation@@EipOption[name, kind, fieldTypeName, true, "", "", false, false, null, true, oneOfTypes] @AT@ 35495 @LENGTH@ 10


DEL IfStatement@@if (!delegate.hasNext() && !CursorState.FINISHED.equals(state)) {  scan(cursorId);} @AT@ 3985 @LENGTH@ 88


INS IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @TO@ MethodDeclaration@@protected, void, MethodName:populateResponse, Exchange exchange, HttpMethod method, Message in, HeaderFilterStrategy strategy, int responseCode, IOException, ClassNotFoundException,  @AT@ 9365 @LENGTH@ 152
---INS MethodInvocation@@getEndpoint().isCopyHeaders() @TO@ IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9369 @LENGTH@ 29
------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().isCopyHeaders() @AT@ 9369 @LENGTH@ 13
------INS SimpleName@@MethodName:isCopyHeaders:[] @TO@ MethodInvocation@@getEndpoint().isCopyHeaders() @AT@ 9383 @LENGTH@ 15
---INS Block@@ThenBody:{  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @TO@ IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9400 @LENGTH@ 117
------MOV ExpressionStatement@@MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false) @TO@ Block@@ThenBody:{  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9367 @LENGTH@ 93


UPD ExpressionStatement@@MethodInvocation:assertEquals("ADMIN",admin.getAuthority()) @TO@ MethodInvocation:assertEquals("ROLE_ADMIN",admin.getAuthority()) @AT@ 344 @LENGTH@ 44
---UPD MethodInvocation@@assertEquals("ADMIN",admin.getAuthority()) @TO@ assertEquals("ROLE_ADMIN",admin.getAuthority()) @AT@ 344 @LENGTH@ 43
------UPD SimpleName@@MethodName:assertEquals:["ADMIN", admin.getAuthority()] @TO@ MethodName:assertEquals:["ROLE_ADMIN", admin.getAuthority()] @AT@ 344 @LENGTH@ 43
---------UPD StringLiteral@@"ADMIN" @TO@ "ROLE_ADMIN" @AT@ 357 @LENGTH@ 7


INS MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @TO@ TypeDeclaration@@[public]GraphModel,  @AT@ 1756 @LENGTH@ 98
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @AT@ 1756 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @AT@ 1763 @LENGTH@ 7
---INS SimpleName@@MethodName:containsNodeWithId @TO@ MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @AT@ 1771 @LENGTH@ 18
---INS SingleVariableDeclaration@@Long nodeId @TO@ MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @AT@ 1790 @LENGTH@ 11
------INS SimpleType@@Long @TO@ SingleVariableDeclaration@@Long nodeId @AT@ 1790 @LENGTH@ 4
------INS SimpleName@@nodeId @TO@ SingleVariableDeclaration@@Long nodeId @AT@ 1795 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:nodeMap.containsKey(nodeId) @TO@ MethodDeclaration@@public, boolean, MethodName:containsNodeWithId, Long nodeId,  @AT@ 1813 @LENGTH@ 35
------INS MethodInvocation@@nodeMap.containsKey(nodeId) @TO@ ReturnStatement@@MethodInvocation:nodeMap.containsKey(nodeId) @AT@ 1820 @LENGTH@ 27
---------INS SimpleName@@Name:nodeMap @TO@ MethodInvocation@@nodeMap.containsKey(nodeId) @AT@ 1820 @LENGTH@ 7
---------INS SimpleName@@MethodName:containsKey:[nodeId] @TO@ MethodInvocation@@nodeMap.containsKey(nodeId) @AT@ 1828 @LENGTH@ 19
------------INS SimpleName@@nodeId @TO@ SimpleName@@MethodName:containsKey:[nodeId] @AT@ 1840 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.debugf("Switching to %s protocol for %s http-acceptor",ACTIVEMQ_REMOTING,acceptorName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.debugf("Switching to %s protocol for %s http-acceptor",ACTIVEMQ_REMOTING,acceptorName) @AT@ 7644 @LENGTH@ 106
---UPD MethodInvocation@@MESSAGING_LOGGER.debugf("Switching to %s protocol for %s http-acceptor",ACTIVEMQ_REMOTING,acceptorName) @TO@ MessagingLogger.ROOT_LOGGER.debugf("Switching to %s protocol for %s http-acceptor",ACTIVEMQ_REMOTING,acceptorName) @AT@ 7644 @LENGTH@ 105
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.debugf("Switching to %s protocol for %s http-acceptor",ACTIVEMQ_REMOTING,acceptorName) @AT@ 7631 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 7644 @LENGTH@ 16


UPD ExpressionStatement@@Assignment:answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ Assignment:answer=routeContext.lookup(ref,ErrorHandlerBuilder.class) @AT@ 5939 @LENGTH@ 70
---UPD Assignment@@answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ answer=routeContext.lookup(ref,ErrorHandlerBuilder.class) @AT@ 5939 @LENGTH@ 69
------UPD MethodInvocation@@routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ routeContext.lookup(ref,ErrorHandlerBuilder.class) @AT@ 5948 @LENGTH@ 60
---------UPD SimpleName@@MethodName:mandatoryLookup:[ref, ErrorHandlerBuilder.class] @TO@ MethodName:lookup:[ref, ErrorHandlerBuilder.class] @AT@ 5961 @LENGTH@ 47


INS MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @TO@ TypeDeclaration@@[public]TestUtilities, TestCase @AT@ 5997 @LENGTH@ 340
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 5997 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6004 @LENGTH@ 4
---INS SimpleName@@MethodName:testReplaceTaskId @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6009 @LENGTH@ 17
---INS VariableDeclarationStatement@@String taskID="000000"; @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6035 @LENGTH@ 25
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String taskID="000000"; @AT@ 6035 @LENGTH@ 6
------INS VariableDeclarationFragment@@taskID="000000" @TO@ VariableDeclarationStatement@@String taskID="000000"; @AT@ 6042 @LENGTH@ 17
---------INS SimpleName@@taskID @TO@ VariableDeclarationFragment@@taskID="000000" @AT@ 6042 @LENGTH@ 6
---------INS StringLiteral@@"000000" @TO@ VariableDeclarationFragment@@taskID="000000" @AT@ 6051 @LENGTH@ 8
---INS VariableDeclarationStatement@@int bucketNum=1; @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6065 @LENGTH@ 18
------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int bucketNum=1; @AT@ 6065 @LENGTH@ 3
------INS VariableDeclarationFragment@@bucketNum=1 @TO@ VariableDeclarationStatement@@int bucketNum=1; @AT@ 6069 @LENGTH@ 13
---------INS SimpleName@@bucketNum @TO@ VariableDeclarationFragment@@bucketNum=1 @AT@ 6069 @LENGTH@ 9
---------INS NumberLiteral@@1 @TO@ VariableDeclarationFragment@@bucketNum=1 @AT@ 6081 @LENGTH@ 1
---INS VariableDeclarationStatement@@String newTaskID=Utilities.replaceTaskId(taskID,bucketNum); @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6088 @LENGTH@ 62
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String newTaskID=Utilities.replaceTaskId(taskID,bucketNum); @AT@ 6088 @LENGTH@ 6
------INS VariableDeclarationFragment@@newTaskID=Utilities.replaceTaskId(taskID,bucketNum) @TO@ VariableDeclarationStatement@@String newTaskID=Utilities.replaceTaskId(taskID,bucketNum); @AT@ 6095 @LENGTH@ 54
---------INS SimpleName@@newTaskID @TO@ VariableDeclarationFragment@@newTaskID=Utilities.replaceTaskId(taskID,bucketNum) @AT@ 6095 @LENGTH@ 9
---------INS MethodInvocation@@Utilities.replaceTaskId(taskID,bucketNum) @TO@ VariableDeclarationFragment@@newTaskID=Utilities.replaceTaskId(taskID,bucketNum) @AT@ 6107 @LENGTH@ 42
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.replaceTaskId(taskID,bucketNum) @AT@ 6107 @LENGTH@ 9
------------INS SimpleName@@MethodName:replaceTaskId:[taskID, bucketNum] @TO@ MethodInvocation@@Utilities.replaceTaskId(taskID,bucketNum) @AT@ 6117 @LENGTH@ 32
---------------INS SimpleName@@taskID @TO@ SimpleName@@MethodName:replaceTaskId:[taskID, bucketNum] @AT@ 6131 @LENGTH@ 6
---------------INS SimpleName@@bucketNum @TO@ SimpleName@@MethodName:replaceTaskId:[taskID, bucketNum] @AT@ 6139 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("000001",newTaskID) @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6155 @LENGTH@ 41
------INS MethodInvocation@@Assert.assertEquals("000001",newTaskID) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("000001",newTaskID) @AT@ 6155 @LENGTH@ 40
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("000001",newTaskID) @AT@ 6155 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["000001", newTaskID] @TO@ MethodInvocation@@Assert.assertEquals("000001",newTaskID) @AT@ 6162 @LENGTH@ 33
------------INS StringLiteral@@"000001" @TO@ SimpleName@@MethodName:assertEquals:["000001", newTaskID] @AT@ 6175 @LENGTH@ 8
------------INS SimpleName@@newTaskID @TO@ SimpleName@@MethodName:assertEquals:["000001", newTaskID] @AT@ 6185 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:taskID="(ds%3D1)000001" @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6201 @LENGTH@ 26
------INS Assignment@@taskID="(ds%3D1)000001" @TO@ ExpressionStatement@@Assignment:taskID="(ds%3D1)000001" @AT@ 6201 @LENGTH@ 25
---------INS SimpleName@@taskID @TO@ Assignment@@taskID="(ds%3D1)000001" @AT@ 6201 @LENGTH@ 6
---------INS Operator@@= @TO@ Assignment@@taskID="(ds%3D1)000001" @AT@ 6207 @LENGTH@ 1
---------INS StringLiteral@@"(ds%3D1)000001" @TO@ Assignment@@taskID="(ds%3D1)000001" @AT@ 6210 @LENGTH@ 16
---INS ExpressionStatement@@Assignment:newTaskID=Utilities.replaceTaskId(taskID,5) @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6232 @LENGTH@ 47
------INS Assignment@@newTaskID=Utilities.replaceTaskId(taskID,5) @TO@ ExpressionStatement@@Assignment:newTaskID=Utilities.replaceTaskId(taskID,5) @AT@ 6232 @LENGTH@ 46
---------INS SimpleName@@newTaskID @TO@ Assignment@@newTaskID=Utilities.replaceTaskId(taskID,5) @AT@ 6232 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@newTaskID=Utilities.replaceTaskId(taskID,5) @AT@ 6241 @LENGTH@ 1
---------INS MethodInvocation@@Utilities.replaceTaskId(taskID,5) @TO@ Assignment@@newTaskID=Utilities.replaceTaskId(taskID,5) @AT@ 6244 @LENGTH@ 34
------------INS SimpleName@@Name:Utilities @TO@ MethodInvocation@@Utilities.replaceTaskId(taskID,5) @AT@ 6244 @LENGTH@ 9
------------INS SimpleName@@MethodName:replaceTaskId:[taskID, 5] @TO@ MethodInvocation@@Utilities.replaceTaskId(taskID,5) @AT@ 6254 @LENGTH@ 24
---------------INS SimpleName@@taskID @TO@ SimpleName@@MethodName:replaceTaskId:[taskID, 5] @AT@ 6268 @LENGTH@ 6
---------------INS NumberLiteral@@5 @TO@ SimpleName@@MethodName:replaceTaskId:[taskID, 5] @AT@ 6276 @LENGTH@ 1
---INS ExpressionStatement@@MethodInvocation:Assert.assertEquals("(ds%3D1)000005",newTaskID) @TO@ MethodDeclaration@@public, void, MethodName:testReplaceTaskId,  @AT@ 6284 @LENGTH@ 49
------INS MethodInvocation@@Assert.assertEquals("(ds%3D1)000005",newTaskID) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertEquals("(ds%3D1)000005",newTaskID) @AT@ 6284 @LENGTH@ 48
---------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertEquals("(ds%3D1)000005",newTaskID) @AT@ 6284 @LENGTH@ 6
---------INS SimpleName@@MethodName:assertEquals:["(ds%3D1)000005", newTaskID] @TO@ MethodInvocation@@Assert.assertEquals("(ds%3D1)000005",newTaskID) @AT@ 6291 @LENGTH@ 41
------------INS StringLiteral@@"(ds%3D1)000005" @TO@ SimpleName@@MethodName:assertEquals:["(ds%3D1)000005", newTaskID] @AT@ 6304 @LENGTH@ 16
------------INS SimpleName@@newTaskID @TO@ SimpleName@@MethodName:assertEquals:["(ds%3D1)000005", newTaskID] @AT@ 6322 @LENGTH@ 9


UPD ForStatement@@for (int i=0; names != null && i < names.length; i++) {  props.setProperty(PROPERTY_PREFIX + names[i],beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString());} @TO@ for (int i=0; names != null && i < names.length; i++) {  Object o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]);  props.setProperty(PROPERTY_PREFIX + names[i],o == null ? "" : o.toString());} @AT@ 6403 @LENGTH@ 222
---UPD ExpressionStatement@@MethodInvocation:props.setProperty(PROPERTY_PREFIX + names[i],beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString()) @TO@ MethodInvocation:props.setProperty(PROPERTY_PREFIX + names[i],o == null ? "" : o.toString()) @AT@ 6467 @LENGTH@ 152
------UPD MethodInvocation@@props.setProperty(PROPERTY_PREFIX + names[i],beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString()) @TO@ props.setProperty(PROPERTY_PREFIX + names[i],o == null ? "" : o.toString()) @AT@ 6467 @LENGTH@ 151
---------UPD SimpleName@@MethodName:setProperty:[PROPERTY_PREFIX + names[i], beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString()] @TO@ MethodName:setProperty:[PROPERTY_PREFIX + names[i], o == null ? "" : o.toString()] @AT@ 6473 @LENGTH@ 145
------------DEL MethodInvocation@@beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString() @AT@ 6523 @LENGTH@ 94
---------------DEL MethodInvocation@@MethodName:getReflector:[] @AT@ 6523 @LENGTH@ 22
------------INS ConditionalExpression@@o == null ? "" : o.toString() @TO@ SimpleName@@MethodName:setProperty:[PROPERTY_PREFIX + names[i], beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString()] @AT@ 6610 @LENGTH@ 29
---------------INS InfixExpression@@o == null @TO@ ConditionalExpression@@o == null ? "" : o.toString() @AT@ 6610 @LENGTH@ 9
------------------INS SimpleName@@o @TO@ InfixExpression@@o == null @AT@ 6610 @LENGTH@ 1
------------------INS Operator@@== @TO@ InfixExpression@@o == null @AT@ 6611 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@o == null @AT@ 6615 @LENGTH@ 4
---------------INS StringLiteral@@"" @TO@ ConditionalExpression@@o == null ? "" : o.toString() @AT@ 6622 @LENGTH@ 2
---------------INS MethodInvocation@@o.toString() @TO@ ConditionalExpression@@o == null ? "" : o.toString() @AT@ 6627 @LENGTH@ 12
------------------MOV SimpleName@@Name:beeLine @TO@ MethodInvocation@@o.toString() @AT@ 6523 @LENGTH@ 7
------------------MOV SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@o.toString() @AT@ 6607 @LENGTH@ 10
---INS VariableDeclarationStatement@@Object o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]); @TO@ ForStatement@@for (int i=0; names != null && i < names.length; i++) {  props.setProperty(PROPERTY_PREFIX + names[i],beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]).toString());} @AT@ 6467 @LENGTH@ 80
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]); @AT@ 6467 @LENGTH@ 6
------INS VariableDeclarationFragment@@o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]) @TO@ VariableDeclarationStatement@@Object o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]); @AT@ 6474 @LENGTH@ 72
---------INS SimpleName@@o @TO@ VariableDeclarationFragment@@o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]) @AT@ 6474 @LENGTH@ 1
---------MOV MethodInvocation@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @TO@ VariableDeclarationFragment@@o=beeLine.getReflector().invoke(this,"get" + names[i],new Object[0]) @AT@ 6523 @LENGTH@ 68
------------INS MethodInvocation@@MethodName:getReflector:[] @TO@ MethodInvocation@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6478 @LENGTH@ 22
------------INS SimpleName@@Name:beeLine @TO@ MethodInvocation@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6478 @LENGTH@ 7
------------INS SimpleName@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @TO@ MethodInvocation@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6501 @LENGTH@ 45
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6508 @LENGTH@ 4
---------------MOV InfixExpression@@"get" + names[i] @TO@ SimpleName@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6559 @LENGTH@ 16
---------------MOV ArrayCreation@@new Object[0] @TO@ SimpleName@@MethodName:invoke:[this, "get" + names[i], new Object[0]] @AT@ 6577 @LENGTH@ 13


INS IfStatement@@if (lenientContextPath()) {  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 3404 @LENGTH@ 638
---INS MethodInvocation@@MethodName:lenientContextPath:[] @TO@ IfStatement@@if (lenientContextPath()) {  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3408 @LENGTH@ 20
---INS Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @TO@ IfStatement@@if (lenientContextPath()) {  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3430 @LENGTH@ 612
------MOV VariableDeclarationStatement@@String scheme=ObjectHelper.before(uri,":"); @TO@ Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3645 @LENGTH@ 46
------MOV VariableDeclarationStatement@@String after=ObjectHelper.after(uri,":"); @TO@ Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3700 @LENGTH@ 44
------MOV WhileStatement@@while (after.startsWith("/")) {  after=after.substring(1);} @TO@ Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3810 @LENGTH@ 81
------MOV ExpressionStatement@@Assignment:after="/" + after @TO@ Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3900 @LENGTH@ 20
------MOV ExpressionStatement@@Assignment:uri=scheme + ":" + after @TO@ Block@@ThenBody:{  String scheme=ObjectHelper.before(uri,":");  String after=ObjectHelper.after(uri,":");  while (after.startsWith("/")) {    after=after.substring(1);  }  after="/" + after;  uri=scheme + ":" + after;} @AT@ 3929 @LENGTH@ 27


UPD TryStatement@@try {  method=bean.getClass().getMethod(method.getName(),method.getParameterTypes());} catch (SecurityException ex) {  ReflectionUtils.handleReflectionException(ex);}catch (NoSuchMethodException ex) {  throw new IllegalStateException(String.format("@RabbitListener method '%s' found on bean target class '%s', " + "but not found in any interface(s) for bean JDK proxy. Either " + "pull the method up to an interface or switch to subclass (CGLIB) "+ "proxies by setting proxy-target-class/proxyTargetClass "+ "attribute to 'true'",method.getName(),method.getDeclaringClass().getSimpleName()));} @TO@ try {  method=bean.getClass().getMethod(method.getName(),method.getParameterTypes());  Class<?>[] proxiedInterfaces=((Advised)bean).getProxiedInterfaces();  for (  Class<?> iface : proxiedInterfaces) {    try {      method=iface.getMethod(method.getName(),method.getParameterTypes());      break;    } catch (    NoSuchMethodException noMethod) {    }  }} catch (SecurityException ex) {  ReflectionUtils.handleReflectionException(ex);}catch (NoSuchMethodException ex) {  throw new IllegalStateException(String.format("@RabbitListener method '%s' found on bean target class '%s', " + "but not found in any interface(s) for bean JDK proxy. Either " + "pull the method up to an interface or switch to subclass (CGLIB) "+ "proxies by setting proxy-target-class/proxyTargetClass "+ "attribute to 'true'",method.getName(),method.getDeclaringClass().getSimpleName()));} @AT@ 11447 @LENGTH@ 794
---INS VariableDeclarationStatement@@Class<?>[] proxiedInterfaces=((Advised)bean).getProxiedInterfaces(); @TO@ TryStatement@@try {  method=bean.getClass().getMethod(method.getName(),method.getParameterTypes());} catch (SecurityException ex) {  ReflectionUtils.handleReflectionException(ex);}catch (NoSuchMethodException ex) {  throw new IllegalStateException(String.format("@RabbitListener method '%s' found on bean target class '%s', " + "but not found in any interface(s) for bean JDK proxy. Either " + "pull the method up to an interface or switch to subclass (CGLIB) "+ "proxies by setting proxy-target-class/proxyTargetClass "+ "attribute to 'true'",method.getName(),method.getDeclaringClass().getSimpleName()));} @AT@ 11720 @LENGTH@ 71
------INS ArrayType@@Class<?>[] @TO@ VariableDeclarationStatement@@Class<?>[] proxiedInterfaces=((Advised)bean).getProxiedInterfaces(); @AT@ 11720 @LENGTH@ 10
---------INS ParameterizedType@@Class<?> @TO@ ArrayType@@Class<?>[] @AT@ 11720 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 11720 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 11726 @LENGTH@ 1
------INS VariableDeclarationFragment@@proxiedInterfaces=((Advised)bean).getProxiedInterfaces() @TO@ VariableDeclarationStatement@@Class<?>[] proxiedInterfaces=((Advised)bean).getProxiedInterfaces(); @AT@ 11731 @LENGTH@ 59
---------INS SimpleName@@proxiedInterfaces @TO@ VariableDeclarationFragment@@proxiedInterfaces=((Advised)bean).getProxiedInterfaces() @AT@ 11731 @LENGTH@ 17
---------INS MethodInvocation@@((Advised)bean).getProxiedInterfaces() @TO@ VariableDeclarationFragment@@proxiedInterfaces=((Advised)bean).getProxiedInterfaces() @AT@ 11751 @LENGTH@ 39
------------INS ParenthesizedExpression@@((Advised)bean) @TO@ MethodInvocation@@((Advised)bean).getProxiedInterfaces() @AT@ 11751 @LENGTH@ 16
---------------INS CastExpression@@(Advised)bean @TO@ ParenthesizedExpression@@((Advised)bean) @AT@ 11752 @LENGTH@ 14
------------------INS SimpleType@@Advised @TO@ CastExpression@@(Advised)bean @AT@ 11753 @LENGTH@ 7
------------------INS SimpleName@@bean @TO@ CastExpression@@(Advised)bean @AT@ 11762 @LENGTH@ 4
------------INS SimpleName@@MethodName:getProxiedInterfaces:[] @TO@ MethodInvocation@@((Advised)bean).getProxiedInterfaces() @AT@ 11768 @LENGTH@ 22
---INS EnhancedForStatement@@for (Class<?> iface : proxiedInterfaces) {  try {    method=iface.getMethod(method.getName(),method.getParameterTypes());    break;  } catch (  NoSuchMethodException noMethod) {  }} @TO@ TryStatement@@try {  method=bean.getClass().getMethod(method.getName(),method.getParameterTypes());} catch (SecurityException ex) {  ReflectionUtils.handleReflectionException(ex);}catch (NoSuchMethodException ex) {  throw new IllegalStateException(String.format("@RabbitListener method '%s' found on bean target class '%s', " + "but not found in any interface(s) for bean JDK proxy. Either " + "pull the method up to an interface or switch to subclass (CGLIB) "+ "proxies by setting proxy-target-class/proxyTargetClass "+ "attribute to 'true'",method.getName(),method.getDeclaringClass().getSimpleName()));} @AT@ 11796 @LENGTH@ 210
------INS SingleVariableDeclaration@@Class<?> iface @TO@ EnhancedForStatement@@for (Class<?> iface : proxiedInterfaces) {  try {    method=iface.getMethod(method.getName(),method.getParameterTypes());    break;  } catch (  NoSuchMethodException noMethod) {  }} @AT@ 11801 @LENGTH@ 14
---------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> iface @AT@ 11801 @LENGTH@ 8
------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 11801 @LENGTH@ 5
------------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 11807 @LENGTH@ 1
---------INS SimpleName@@iface @TO@ SingleVariableDeclaration@@Class<?> iface @AT@ 11810 @LENGTH@ 5
------INS SimpleName@@proxiedInterfaces @TO@ EnhancedForStatement@@for (Class<?> iface : proxiedInterfaces) {  try {    method=iface.getMethod(method.getName(),method.getParameterTypes());    break;  } catch (  NoSuchMethodException noMethod) {  }} @AT@ 11818 @LENGTH@ 17
------INS TryStatement@@try {  method=iface.getMethod(method.getName(),method.getParameterTypes());  break;} catch (NoSuchMethodException noMethod) {} @TO@ EnhancedForStatement@@for (Class<?> iface : proxiedInterfaces) {  try {    method=iface.getMethod(method.getName(),method.getParameterTypes());    break;  } catch (  NoSuchMethodException noMethod) {  }} @AT@ 11844 @LENGTH@ 156
---------INS ExpressionStatement@@Assignment:method=iface.getMethod(method.getName(),method.getParameterTypes()) @TO@ TryStatement@@try {  method=iface.getMethod(method.getName(),method.getParameterTypes());  break;} catch (NoSuchMethodException noMethod) {} @AT@ 11856 @LENGTH@ 71
------------INS Assignment@@method=iface.getMethod(method.getName(),method.getParameterTypes()) @TO@ ExpressionStatement@@Assignment:method=iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11856 @LENGTH@ 70
---------------INS SimpleName@@method @TO@ Assignment@@method=iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11856 @LENGTH@ 6
---------------INS Operator@@= @TO@ Assignment@@method=iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11862 @LENGTH@ 1
---------------INS MethodInvocation@@iface.getMethod(method.getName(),method.getParameterTypes()) @TO@ Assignment@@method=iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11865 @LENGTH@ 61
------------------INS SimpleName@@Name:iface @TO@ MethodInvocation@@iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11865 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getMethod:[method.getName(), method.getParameterTypes()] @TO@ MethodInvocation@@iface.getMethod(method.getName(),method.getParameterTypes()) @AT@ 11871 @LENGTH@ 55
---------------------INS MethodInvocation@@method.getName() @TO@ SimpleName@@MethodName:getMethod:[method.getName(), method.getParameterTypes()] @AT@ 11881 @LENGTH@ 16
------------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getName() @AT@ 11881 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@method.getName() @AT@ 11888 @LENGTH@ 9
---------------------INS MethodInvocation@@method.getParameterTypes() @TO@ SimpleName@@MethodName:getMethod:[method.getName(), method.getParameterTypes()] @AT@ 11899 @LENGTH@ 26
------------------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getParameterTypes() @AT@ 11899 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getParameterTypes:[] @TO@ MethodInvocation@@method.getParameterTypes() @AT@ 11906 @LENGTH@ 19
---------INS BreakStatement@@ @TO@ TryStatement@@try {  method=iface.getMethod(method.getName(),method.getParameterTypes());  break;} catch (NoSuchMethodException noMethod) {} @AT@ 11934 @LENGTH@ 6
---------INS CatchClause@@catch (NoSuchMethodException noMethod) {} @TO@ TryStatement@@try {  method=iface.getMethod(method.getName(),method.getParameterTypes());  break;} catch (NoSuchMethodException noMethod) {} @AT@ 11953 @LENGTH@ 47
------------INS SingleVariableDeclaration@@NoSuchMethodException noMethod @TO@ CatchClause@@catch (NoSuchMethodException noMethod) {} @AT@ 11960 @LENGTH@ 30
---------------INS SimpleType@@NoSuchMethodException @TO@ SingleVariableDeclaration@@NoSuchMethodException noMethod @AT@ 11960 @LENGTH@ 21
---------------INS SimpleName@@noMethod @TO@ SingleVariableDeclaration@@NoSuchMethodException noMethod @AT@ 11982 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"script\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")) @AT@ 1789 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue(json.contains("\"script\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")) @AT@ 1789 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"script\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")] @AT@ 1789 @LENGTH@ 88
---------UPD MethodInvocation@@json.contains("\"script\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"") @AT@ 1800 @LENGTH@ 76
------------UPD SimpleName@@MethodName:contains:["\"script\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\""] @AT@ 1805 @LENGTH@ 71
---------------UPD StringLiteral@@"\"script\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"languageName\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"" @AT@ 1814 @LENGTH@ 61


UPD FieldDeclaration@@protected, static, final, String, [DEFAULT_KEY_PREFIX="rest.description"] @TO@ public, static, final, String, [DEFAULT_KEY_PREFIX="rest.description"] @AT@ 919 @LENGTH@ 70
---UPD Modifier@@protected @TO@ public @AT@ 919 @LENGTH@ 9


UPD MethodDeclaration@@public, EntityAccess, MethodName:getRelationalWriter, ClassInfo classInfo, String relationshipType, Object parameter,  @TO@ public, EntityAccess, MethodName:getRelationalWriter, ClassInfo classInfo, String relationshipType, Object scalarValue,  @AT@ 4232 @LENGTH@ 2748
---UPD SingleVariableDeclaration@@Object parameter @TO@ Object scalarValue @AT@ 4318 @LENGTH@ 16
------UPD SimpleName@@parameter @TO@ scalarValue @AT@ 4325 @LENGTH@ 9
---UPD IfStatement@@if (methodInfo != null && !methodInfo.getAnnotations().isEmpty()) {  if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @TO@ if (methodInfo != null && !methodInfo.getAnnotations().isEmpty()) {  if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @AT@ 4509 @LENGTH@ 358
------UPD Block@@ThenBody:{  if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @TO@ ThenBody:{  if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @AT@ 4575 @LENGTH@ 292
---------UPD IfStatement@@if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {  return new MethodWriter(classInfo,methodInfo);} @TO@ if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {  return new MethodWriter(classInfo,methodInfo);} @AT@ 4590 @LENGTH@ 267
------------UPD InfixExpression@@methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass()) @TO@ methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass()) @AT@ 4594 @LENGTH@ 177
---------------UPD MethodInvocation@@methodInfo.isTypeOf(parameter.getClass()) @TO@ methodInfo.isTypeOf(scalarValue.getClass()) @AT@ 4594 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:isTypeOf:[parameter.getClass()] @TO@ MethodName:isTypeOf:[scalarValue.getClass()] @AT@ 4605 @LENGTH@ 30
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 4614 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 4614 @LENGTH@ 9
---------------UPD MethodInvocation@@methodInfo.isParameterisedTypeOf(parameter.getClass()) @TO@ methodInfo.isParameterisedTypeOf(scalarValue.getClass()) @AT@ 4655 @LENGTH@ 54
------------------UPD SimpleName@@MethodName:isParameterisedTypeOf:[parameter.getClass()] @TO@ MethodName:isParameterisedTypeOf:[scalarValue.getClass()] @AT@ 4666 @LENGTH@ 43
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 4688 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 4688 @LENGTH@ 9
---------------UPD MethodInvocation@@methodInfo.isArrayOf(parameter.getClass()) @TO@ methodInfo.isArrayOf(scalarValue.getClass()) @AT@ 4729 @LENGTH@ 42
------------------UPD SimpleName@@MethodName:isArrayOf:[parameter.getClass()] @TO@ MethodName:isArrayOf:[scalarValue.getClass()] @AT@ 4740 @LENGTH@ 31
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 4750 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 4750 @LENGTH@ 9
---UPD IfStatement@@if (fieldInfo != null && !fieldInfo.getAnnotations().isEmpty()) {  if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @TO@ if (fieldInfo != null && !fieldInfo.getAnnotations().isEmpty()) {  if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @AT@ 5048 @LENGTH@ 349
------UPD Block@@ThenBody:{  if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @TO@ ThenBody:{  if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @AT@ 5112 @LENGTH@ 285
---------UPD IfStatement@@if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {  return new FieldWriter(classInfo,fieldInfo);} @TO@ if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {  return new FieldWriter(classInfo,fieldInfo);} @AT@ 5126 @LENGTH@ 261
------------UPD InfixExpression@@fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass()) @TO@ fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass()) @AT@ 5130 @LENGTH@ 174
---------------UPD MethodInvocation@@fieldInfo.isTypeOf(parameter.getClass()) @TO@ fieldInfo.isTypeOf(scalarValue.getClass()) @AT@ 5130 @LENGTH@ 40
------------------UPD SimpleName@@MethodName:isTypeOf:[parameter.getClass()] @TO@ MethodName:isTypeOf:[scalarValue.getClass()] @AT@ 5140 @LENGTH@ 30
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5149 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5149 @LENGTH@ 9
---------------UPD MethodInvocation@@fieldInfo.isParameterisedTypeOf(parameter.getClass()) @TO@ fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) @AT@ 5190 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:isParameterisedTypeOf:[parameter.getClass()] @TO@ MethodName:isParameterisedTypeOf:[scalarValue.getClass()] @AT@ 5200 @LENGTH@ 43
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5222 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5222 @LENGTH@ 9
---------------UPD MethodInvocation@@fieldInfo.isArrayOf(parameter.getClass()) @TO@ fieldInfo.isArrayOf(scalarValue.getClass()) @AT@ 5263 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:isArrayOf:[parameter.getClass()] @TO@ MethodName:isArrayOf:[scalarValue.getClass()] @AT@ 5273 @LENGTH@ 31
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5283 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5283 @LENGTH@ 9
---UPD IfStatement@@if (methodInfo != null) {  if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @TO@ if (methodInfo != null) {  if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @AT@ 5570 @LENGTH@ 319
------UPD Block@@ThenBody:{  if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @TO@ ThenBody:{  if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {    return new MethodWriter(classInfo,methodInfo);  }} @AT@ 5594 @LENGTH@ 295
---------UPD IfStatement@@if (methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass())) {  return new MethodWriter(classInfo,methodInfo);} @TO@ if (methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass())) {  return new MethodWriter(classInfo,methodInfo);} @AT@ 5608 @LENGTH@ 271
------------UPD InfixExpression@@methodInfo.isTypeOf(parameter.getClass()) || methodInfo.isParameterisedTypeOf(parameter.getClass()) || methodInfo.isArrayOf(parameter.getClass()) @TO@ methodInfo.isTypeOf(scalarValue.getClass()) || methodInfo.isParameterisedTypeOf(scalarValue.getClass()) || methodInfo.isArrayOf(scalarValue.getClass()) @AT@ 5612 @LENGTH@ 185
---------------UPD MethodInvocation@@methodInfo.isTypeOf(parameter.getClass()) @TO@ methodInfo.isTypeOf(scalarValue.getClass()) @AT@ 5612 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:isTypeOf:[parameter.getClass()] @TO@ MethodName:isTypeOf:[scalarValue.getClass()] @AT@ 5623 @LENGTH@ 30
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5632 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5632 @LENGTH@ 9
---------------UPD MethodInvocation@@methodInfo.isParameterisedTypeOf(parameter.getClass()) @TO@ methodInfo.isParameterisedTypeOf(scalarValue.getClass()) @AT@ 5677 @LENGTH@ 54
------------------UPD SimpleName@@MethodName:isParameterisedTypeOf:[parameter.getClass()] @TO@ MethodName:isParameterisedTypeOf:[scalarValue.getClass()] @AT@ 5688 @LENGTH@ 43
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5710 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5710 @LENGTH@ 9
---------------UPD MethodInvocation@@methodInfo.isArrayOf(parameter.getClass()) @TO@ methodInfo.isArrayOf(scalarValue.getClass()) @AT@ 5755 @LENGTH@ 42
------------------UPD SimpleName@@MethodName:isArrayOf:[parameter.getClass()] @TO@ MethodName:isArrayOf:[scalarValue.getClass()] @AT@ 5766 @LENGTH@ 31
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 5776 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 5776 @LENGTH@ 9
---UPD IfStatement@@if (fieldInfo != null) {  if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @TO@ if (fieldInfo != null) {  if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @AT@ 6061 @LENGTH@ 312
------UPD Block@@ThenBody:{  if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @TO@ ThenBody:{  if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {    return new FieldWriter(classInfo,fieldInfo);  }} @AT@ 6084 @LENGTH@ 289
---------UPD IfStatement@@if (fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass())) {  return new FieldWriter(classInfo,fieldInfo);} @TO@ if (fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass())) {  return new FieldWriter(classInfo,fieldInfo);} @AT@ 6098 @LENGTH@ 265
------------UPD InfixExpression@@fieldInfo.isTypeOf(parameter.getClass()) || fieldInfo.isParameterisedTypeOf(parameter.getClass()) || fieldInfo.isArrayOf(parameter.getClass()) @TO@ fieldInfo.isTypeOf(scalarValue.getClass()) || fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) || fieldInfo.isArrayOf(scalarValue.getClass()) @AT@ 6102 @LENGTH@ 182
---------------UPD MethodInvocation@@fieldInfo.isTypeOf(parameter.getClass()) @TO@ fieldInfo.isTypeOf(scalarValue.getClass()) @AT@ 6102 @LENGTH@ 40
------------------UPD SimpleName@@MethodName:isTypeOf:[parameter.getClass()] @TO@ MethodName:isTypeOf:[scalarValue.getClass()] @AT@ 6112 @LENGTH@ 30
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 6121 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 6121 @LENGTH@ 9
---------------UPD MethodInvocation@@fieldInfo.isParameterisedTypeOf(parameter.getClass()) @TO@ fieldInfo.isParameterisedTypeOf(scalarValue.getClass()) @AT@ 6166 @LENGTH@ 53
------------------UPD SimpleName@@MethodName:isParameterisedTypeOf:[parameter.getClass()] @TO@ MethodName:isParameterisedTypeOf:[scalarValue.getClass()] @AT@ 6176 @LENGTH@ 43
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 6198 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 6198 @LENGTH@ 9
---------------UPD MethodInvocation@@fieldInfo.isArrayOf(parameter.getClass()) @TO@ fieldInfo.isArrayOf(scalarValue.getClass()) @AT@ 6243 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:isArrayOf:[parameter.getClass()] @TO@ MethodName:isArrayOf:[scalarValue.getClass()] @AT@ 6253 @LENGTH@ 31
---------------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 6263 @LENGTH@ 20
------------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 6263 @LENGTH@ 9
---UPD VariableDeclarationStatement@@List<MethodInfo> methodInfos=classInfo.findSetters(parameter.getClass()); @TO@ List<MethodInfo> methodInfos=classInfo.findSetters(scalarValue.getClass()); @AT@ 6459 @LENGTH@ 75
------UPD VariableDeclarationFragment@@methodInfos=classInfo.findSetters(parameter.getClass()) @TO@ methodInfos=classInfo.findSetters(scalarValue.getClass()) @AT@ 6476 @LENGTH@ 57
---------UPD MethodInvocation@@classInfo.findSetters(parameter.getClass()) @TO@ classInfo.findSetters(scalarValue.getClass()) @AT@ 6490 @LENGTH@ 43
------------UPD SimpleName@@MethodName:findSetters:[parameter.getClass()] @TO@ MethodName:findSetters:[scalarValue.getClass()] @AT@ 6500 @LENGTH@ 33
---------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 6512 @LENGTH@ 20
------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 6512 @LENGTH@ 9
---UPD VariableDeclarationStatement@@List<FieldInfo> fieldInfos=classInfo.findFields(parameter.getClass()); @TO@ List<FieldInfo> fieldInfos=classInfo.findFields(scalarValue.getClass()); @AT@ 6755 @LENGTH@ 72
------UPD VariableDeclarationFragment@@fieldInfos=classInfo.findFields(parameter.getClass()) @TO@ fieldInfos=classInfo.findFields(scalarValue.getClass()) @AT@ 6771 @LENGTH@ 55
---------UPD MethodInvocation@@classInfo.findFields(parameter.getClass()) @TO@ classInfo.findFields(scalarValue.getClass()) @AT@ 6784 @LENGTH@ 42
------------UPD SimpleName@@MethodName:findFields:[parameter.getClass()] @TO@ MethodName:findFields:[scalarValue.getClass()] @AT@ 6794 @LENGTH@ 32
---------------UPD MethodInvocation@@parameter.getClass() @TO@ scalarValue.getClass() @AT@ 6805 @LENGTH@ 20
------------------UPD SimpleName@@Name:parameter @TO@ Name:scalarValue @AT@ 6805 @LENGTH@ 9


UPD MethodDeclaration@@public, void, MethodName:testIsTopic_nullDestinationName, Exception,  @TO@ public, void, MethodName:testIsTopicNullDestinationName, Exception,  @AT@ 1311 @LENGTH@ 168
---UPD SimpleName@@MethodName:testIsTopic_nullDestinationName @TO@ MethodName:testIsTopicNullDestinationName @AT@ 1323 @LENGTH@ 31


UPD TryStatement@@try {  if (currentExchange.get() == null) {    throw new IllegalStateException("Current exchange has not been set for ExpressionMapper");  }  Exchange exchange=currentExchange.get();  Language expLang=exchange.getContext().resolveLanguage(getLanguagePart());  String scheme=getSchemePart();  Expression exp=null;  if (scheme != null && (scheme.equalsIgnoreCase("classpath") || scheme.equalsIgnoreCase("file") || scheme.equalsIgnoreCase("http"))) {    String path=getPathPart();    try {      exp=expLang.createExpression(resolveScript(scheme + ":" + path));    } catch (    IOException e) {      throw new IllegalStateException("Expression script specified but not found",e);    }  } else {    exp=expLang.createExpression(getExpressionPart());  }  return exp.evaluate(exchange,destinationClass);}  finally {  done();} @TO@ try {  if (currentExchange.get() == null) {    throw new IllegalStateException("Current exchange has not been set for ExpressionMapper");  }  Expression exp;  Exchange exchange=currentExchange.get();  Language expLang=exchange.getContext().resolveLanguage(getLanguagePart());  String scheme=getSchemePart();  if (scheme != null && (scheme.equalsIgnoreCase("classpath") || scheme.equalsIgnoreCase("file") || scheme.equalsIgnoreCase("http"))) {    String path=getPathPart();    try {      exp=expLang.createExpression(resolveScript(scheme + ":" + path));    } catch (    IOException e) {      throw new IllegalStateException("Expression script specified but not found",e);    }  } else {    exp=expLang.createExpression(getExpressionPart());  }  return exp.evaluate(exchange,destinationClass);}  finally {  done();} @AT@ 1628 @LENGTH@ 1287
---UPD VariableDeclarationStatement@@Expression exp=null; @TO@ Expression exp; @AT@ 2110 @LENGTH@ 22
------UPD VariableDeclarationFragment@@exp=null @TO@ exp @AT@ 2121 @LENGTH@ 10
---------DEL NullLiteral@@null @AT@ 2127 @LENGTH@ 4
---MOV VariableDeclarationStatement@@Expression exp=null; @TO@ TryStatement@@try {  if (currentExchange.get() == null) {    throw new IllegalStateException("Current exchange has not been set for ExpressionMapper");  }  Exchange exchange=currentExchange.get();  Language expLang=exchange.getContext().resolveLanguage(getLanguagePart());  String scheme=getSchemePart();  Expression exp=null;  if (scheme != null && (scheme.equalsIgnoreCase("classpath") || scheme.equalsIgnoreCase("file") || scheme.equalsIgnoreCase("http"))) {    String path=getPathPart();    try {      exp=expLang.createExpression(resolveScript(scheme + ":" + path));    } catch (    IOException e) {      throw new IllegalStateException("Expression script specified but not found",e);    }  } else {    exp=expLang.createExpression(getExpressionPart());  }  return exp.evaluate(exchange,destinationClass);}  finally {  done();} @AT@ 2110 @LENGTH@ 22


UPD TryStatement@@try {  Object newHeader=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  old.setHeader(headerName,newHeader);} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newHeader=expression.evaluate(exchange,Object.class);  if (exchange.getException() != null) {    callback.done(true);    return true;  }  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  old.setHeader(headerName,newHeader);} catch (Exception e) {  exchange.setException(e);} @AT@ 1888 @LENGTH@ 329
---INS IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @TO@ TryStatement@@try {  Object newHeader=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  old.setHeader(headerName,newHeader);} catch (Exception e) {  exchange.setException(e);} @AT@ 1983 @LENGTH@ 194
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 1987 @LENGTH@ 31
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 1987 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 1987 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 1996 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getException() != null @AT@ 2010 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 2014 @LENGTH@ 4
------INS Block@@ThenBody:{  callback.done(true);  return true;} @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 2020 @LENGTH@ 157
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2114 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 2114 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 2114 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 2123 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 2128 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2151 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2158 @LENGTH@ 4


MOV FieldDeclaration@@protected, Bus, [bus] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="cxf",title="CXF",syntax="cxf:beanId:address",consumerClass=CxfConsumer.class,label="soap,webservice"), public]CxfEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, Service, Cloneable] @AT@ 6481 @LENGTH@ 18


UPD CatchClause@@catch (Exception e) {  return null;} @TO@ catch (Throwable e) {  return null;} @AT@ 2166 @LENGTH@ 56
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 2173 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 2173 @LENGTH@ 9


UPD FieldDeclaration@@static, final, RuntimeCapability<Void>, [JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.jmx",MBeanServer.class).build()] @TO@ static, final, RuntimeCapability<Void>, [JMX_CAPABILITY=RuntimeCapability.Builder.of(JMX_CAPABILITY_NAME,MBeanServer.class).build()] @AT@ 3807 @LENGTH@ 151
---UPD VariableDeclarationFragment@@JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.jmx",MBeanServer.class).build() @TO@ JMX_CAPABILITY=RuntimeCapability.Builder.of(JMX_CAPABILITY_NAME,MBeanServer.class).build() @AT@ 3844 @LENGTH@ 113
------UPD MethodInvocation@@RuntimeCapability.Builder.of("org.wildfly.extension.jmx",MBeanServer.class).build() @TO@ RuntimeCapability.Builder.of(JMX_CAPABILITY_NAME,MBeanServer.class).build() @AT@ 3873 @LENGTH@ 84
---------UPD MethodInvocation@@MethodName:of:["org.wildfly.extension.jmx", MBeanServer.class] @TO@ MethodName:of:[JMX_CAPABILITY_NAME, MBeanServer.class] @AT@ 3873 @LENGTH@ 76
------------DEL StringLiteral@@"org.wildfly.extension.jmx" @AT@ 3902 @LENGTH@ 27
------------INS SimpleName@@JMX_CAPABILITY_NAME @TO@ MethodInvocation@@MethodName:of:["org.wildfly.extension.jmx", MBeanServer.class] @AT@ 3978 @LENGTH@ 19


UPD MethodDeclaration@@public, static, Object, MethodName:instantiateCluster, Class<?> caller, int nodes, Configuration configuration, FileSystem fileSystem, ClassLoader classLoader,  @TO@ public, static, Object, MethodName:instantiateCluster, Class<?> caller, String identifier, int nodes, Configuration configuration, FileSystem fileSystem, ClassLoader classLoader,  @AT@ 2464 @LENGTH@ 1233
---INS SingleVariableDeclaration@@String identifier @TO@ MethodDeclaration@@public, static, Object, MethodName:instantiateCluster, Class<?> caller, int nodes, Configuration configuration, FileSystem fileSystem, ClassLoader classLoader,  @AT@ 2566 @LENGTH@ 17
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String identifier @AT@ 2566 @LENGTH@ 6
------INS SimpleName@@identifier @TO@ SingleVariableDeclaration@@String identifier @AT@ 2573 @LENGTH@ 10
---UPD IfStatement@@if (factoryClass != null) {  Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,int.class,Configuration.class);  cluster=ReflectionUtils.invokeMethod(method,null,caller,nodes,configuration);} else if (legacyClass != null) {  Constructor<?> constructor=ClassUtils.getConstructorIfAvailable(legacyClass,int.class,String.class,int.class);  cluster=BeanUtils.instantiateClass(constructor,nodes,fileSystem.getUri().toString(),1);} else {  log.error("Failed to find or instantiate cluster class");} @TO@ if (factoryClass != null) {  Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,String.class,int.class,Configuration.class);  cluster=ReflectionUtils.invokeMethod(method,null,caller,identifier,nodes,configuration);} else if (legacyClass != null) {  Constructor<?> constructor=ClassUtils.getConstructorIfAvailable(legacyClass,int.class,String.class,int.class);  cluster=BeanUtils.instantiateClass(constructor,nodes,fileSystem.getUri().toString(),1);} else {  log.error("Failed to find or instantiate cluster class");} @AT@ 3039 @LENGTH@ 557
------UPD Block@@ThenBody:{  Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,int.class,Configuration.class);  cluster=ReflectionUtils.invokeMethod(method,null,caller,nodes,configuration);} @TO@ ThenBody:{  Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,String.class,int.class,Configuration.class);  cluster=ReflectionUtils.invokeMethod(method,null,caller,identifier,nodes,configuration);} @AT@ 3065 @LENGTH@ 208
---------UPD VariableDeclarationStatement@@Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,int.class,Configuration.class); @TO@ Method method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,String.class,int.class,Configuration.class); @AT@ 3070 @LENGTH@ 112
------------UPD VariableDeclarationFragment@@method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,int.class,Configuration.class) @TO@ method=ReflectionUtils.findMethod(factoryClass,"create",Class.class,String.class,int.class,Configuration.class) @AT@ 3077 @LENGTH@ 104
---------------UPD MethodInvocation@@ReflectionUtils.findMethod(factoryClass,"create",Class.class,int.class,Configuration.class) @TO@ ReflectionUtils.findMethod(factoryClass,"create",Class.class,String.class,int.class,Configuration.class) @AT@ 3086 @LENGTH@ 95
------------------UPD SimpleName@@MethodName:findMethod:[factoryClass, "create", Class.class, int.class, Configuration.class] @TO@ MethodName:findMethod:[factoryClass, "create", Class.class, String.class, int.class, Configuration.class] @AT@ 3102 @LENGTH@ 79
---------------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:findMethod:[factoryClass, "create", Class.class, int.class, Configuration.class] @AT@ 3214 @LENGTH@ 12
---------UPD ExpressionStatement@@Assignment:cluster=ReflectionUtils.invokeMethod(method,null,caller,nodes,configuration) @TO@ Assignment:cluster=ReflectionUtils.invokeMethod(method,null,caller,identifier,nodes,configuration) @AT@ 3186 @LENGTH@ 83
------------UPD Assignment@@cluster=ReflectionUtils.invokeMethod(method,null,caller,nodes,configuration) @TO@ cluster=ReflectionUtils.invokeMethod(method,null,caller,identifier,nodes,configuration) @AT@ 3186 @LENGTH@ 82
---------------UPD MethodInvocation@@ReflectionUtils.invokeMethod(method,null,caller,nodes,configuration) @TO@ ReflectionUtils.invokeMethod(method,null,caller,identifier,nodes,configuration) @AT@ 3196 @LENGTH@ 72
------------------UPD SimpleName@@MethodName:invokeMethod:[method, null, caller, nodes, configuration] @TO@ MethodName:invokeMethod:[method, null, caller, identifier, nodes, configuration] @AT@ 3212 @LENGTH@ 56
---------------------INS SimpleName@@identifier @TO@ SimpleName@@MethodName:invokeMethod:[method, null, caller, nodes, configuration] @AT@ 3330 @LENGTH@ 10


INS ExpressionStatement@@MethodInvocation:builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))) @TO@ MethodDeclaration@@public, ModuleSpec, MethodName:findModule, ModuleIdentifier identifier, ModuleLoader delegateLoader, ModuleLoadException,  @AT@ 3468 @LENGTH@ 125
---INS MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))) @TO@ ExpressionStatement@@MethodInvocation:builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))) @AT@ 3468 @LENGTH@ 124
------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))) @AT@ 3468 @LENGTH@ 7
------INS SimpleName@@MethodName:addDependency:[DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))] @TO@ MethodInvocation@@builder.addDependency(DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))) @AT@ 3476 @LENGTH@ 116
---------INS MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration")) @TO@ SimpleName@@MethodName:addDependency:[DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration"))] @AT@ 3490 @LENGTH@ 101
------------INS SimpleName@@Name:DependencySpec @TO@ MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration")) @AT@ 3490 @LENGTH@ 14
------------INS SimpleName@@MethodName:createModuleDependencySpec:[ModuleIdentifier.create("org.wildfly.swarm.configuration")] @TO@ MethodInvocation@@DependencySpec.createModuleDependencySpec(ModuleIdentifier.create("org.wildfly.swarm.configuration")) @AT@ 3505 @LENGTH@ 86
---------------INS MethodInvocation@@ModuleIdentifier.create("org.wildfly.swarm.configuration") @TO@ SimpleName@@MethodName:createModuleDependencySpec:[ModuleIdentifier.create("org.wildfly.swarm.configuration")] @AT@ 3532 @LENGTH@ 58
------------------INS SimpleName@@Name:ModuleIdentifier @TO@ MethodInvocation@@ModuleIdentifier.create("org.wildfly.swarm.configuration") @AT@ 3532 @LENGTH@ 16
------------------INS SimpleName@@MethodName:create:["org.wildfly.swarm.configuration"] @TO@ MethodInvocation@@ModuleIdentifier.create("org.wildfly.swarm.configuration") @AT@ 3549 @LENGTH@ 41
---------------------INS StringLiteral@@"org.wildfly.swarm.configuration" @TO@ SimpleName@@MethodName:create:["org.wildfly.swarm.configuration"] @AT@ 3556 @LENGTH@ 33


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 2919 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 2919 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 2930 @LENGTH@ 9


UPD Block@@ThenBody:{  DEPLOYMENT_CONNECTOR_LOGGER.debugf("Unregistering: %s",deploymentName);  if (registry != null && registry.getValue() != null) {    registry.getValue().unregisterResourceAdapterDeployment(value);  }  if (managementRepository != null && managementRepository.getValue() != null && value.getDeployment() != null && value.getDeployment().getConnector() != null) {    managementRepository.getValue().getConnectors().remove(value.getDeployment().getConnector());  }  if (mdr != null && mdr.getValue() != null && value.getDeployment() != null && value.getDeployment().getCfs() != null && value.getDeployment().getCfJndiNames() != null) {    for (int i=0; i < value.getDeployment().getCfs().length; i++) {      try {        String cf=value.getDeployment().getCfs()[i].getClass().getName();        String jndi=value.getDeployment().getCfJndiNames()[i];        mdr.getValue().unregisterJndiMapping(value.getDeployment().getURL().toExternalForm(),cf,jndi);      } catch (      Throwable nfe) {        DEPLOYMENT_CONNECTOR_LOGGER.debug("Exception during JNDI unbinding",nfe);      }    }  }  if (mdr != null && mdr.getValue() != null && value.getDeployment().getAos() != null && value.getDeployment().getAoJndiNames() != null) {    for (int i=0; i < value.getDeployment().getAos().length; i++) {      try {        String ao=value.getDeployment().getAos()[i].getClass().getName();        String jndi=value.getDeployment().getAoJndiNames()[i];        mdr.getValue().unregisterJndiMapping(value.getDeployment().getURL().toExternalForm(),ao,jndi);      } catch (      Throwable nfe) {        DEPLOYMENT_CONNECTOR_LOGGER.debug("Exception during JNDI unbinding",nfe);      }    }  }  if (value != null && value.getDeployment() != null && value.getDeployment().getRecovery() != null && txInt != null && txInt.getValue() != null) {    XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();    if (rr != null) {      for (      XAResourceRecovery recovery : value.getDeployment().getRecovery()) {        if (recovery != null) {          try {            recovery.shutdown();          } catch (          Exception e) {            DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);          } finally {            rr.removeXAResourceRecovery(recovery);          }        }      }    }  }  if (value.getDeployment() != null && value.getDeployment().getConnectionManagers() != null) {    for (    ConnectionManager cm : value.getDeployment().getConnectionManagers()) {      cm.shutdown();    }  }  if (value.getDeployment() != null && value.getDeployment().getResourceAdapter() != null) {    ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();    try {      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());      value.getDeployment().getResourceAdapter().stop();    } catch (    Throwable nfe) {      DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe);    } finally {      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);    }  }  if (value.getDeployment() != null && value.getDeployment().getBootstrapContextIdentifier() != null) {    BootstrapContextCoordinator.getInstance().removeBootstrapContext(value.getDeployment().getBootstrapContextIdentifier());  }} @TO@ ThenBody:{  DEPLOYMENT_CONNECTOR_LOGGER.debugf("Unregistering: %s",deploymentName);  if (registry != null && registry.getValue() != null) {    registry.getValue().unregisterResourceAdapterDeployment(value);  }  if (managementRepository != null && managementRepository.getValue() != null && value.getDeployment() != null && value.getDeployment().getConnector() != null) {    managementRepository.getValue().getConnectors().remove(value.getDeployment().getConnector());  }  if (mdr != null && mdr.getValue() != null && value.getDeployment() != null && value.getDeployment().getCfs() != null && value.getDeployment().getCfJndiNames() != null) {    for (int i=0; i < value.getDeployment().getCfs().length; i++) {      try {        String cf=value.getDeployment().getCfs()[i].getClass().getName();        String jndi=value.getDeployment().getCfJndiNames()[i];        mdr.getValue().unregisterJndiMapping(value.getDeployment().getURL().toExternalForm(),cf,jndi);      } catch (      Throwable nfe) {        DEPLOYMENT_CONNECTOR_LOGGER.debug("Exception during JNDI unbinding",nfe);      }    }  }  if (mdr != null && mdr.getValue() != null && value.getDeployment().getAos() != null && value.getDeployment().getAoJndiNames() != null) {    for (int i=0; i < value.getDeployment().getAos().length; i++) {      try {        String ao=value.getDeployment().getAos()[i].getClass().getName();        String jndi=value.getDeployment().getAoJndiNames()[i];        mdr.getValue().unregisterJndiMapping(value.getDeployment().getURL().toExternalForm(),ao,jndi);      } catch (      Throwable nfe) {        DEPLOYMENT_CONNECTOR_LOGGER.debug("Exception during JNDI unbinding",nfe);      }    }  }  if (value != null && value.getDeployment() != null && value.getDeployment().getRecovery() != null && txInt != null && txInt.getValue() != null) {    XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();    if (rr != null) {      for (      XAResourceRecovery recovery : value.getDeployment().getRecovery()) {        if (recovery != null) {          try {            recovery.shutdown();          } catch (          Exception e) {            DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);          } finally {            rr.removeXAResourceRecovery(recovery);          }        }      }    }  }  if (value.getDeployment() != null && value.getDeployment().getConnectionManagers() != null) {    for (    ConnectionManager cm : value.getDeployment().getConnectionManagers()) {      cm.shutdown();    }  }  if (value.getDeployment() != null && value.getDeployment().getResourceAdapter() != null) {    ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();    try {      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());      value.getDeployment().getResourceAdapter().stop();    } catch (    Throwable nfe) {      DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe);    } finally {      WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);    }  }  if (value.getDeployment() != null && value.getDeployment().getBootstrapContextIdentifier() != null) {    BootstrapContextCoordinator.getInstance().removeBootstrapContext(value.getDeployment().getBootstrapContextIdentifier());  }} @AT@ 6521 @LENGTH@ 4313
---UPD IfStatement@@if (value != null && value.getDeployment() != null && value.getDeployment().getRecovery() != null && txInt != null && txInt.getValue() != null) {  XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();  if (rr != null) {    for (    XAResourceRecovery recovery : value.getDeployment().getRecovery()) {      if (recovery != null) {        try {          recovery.shutdown();        } catch (        Exception e) {          DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);        } finally {          rr.removeXAResourceRecovery(recovery);        }      }    }  }} @TO@ if (value != null && value.getDeployment() != null && value.getDeployment().getRecovery() != null && txInt != null && txInt.getValue() != null) {  XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();  if (rr != null) {    for (    XAResourceRecovery recovery : value.getDeployment().getRecovery()) {      if (recovery != null) {        try {          recovery.shutdown();        } catch (        Exception e) {          DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);        } finally {          rr.removeXAResourceRecovery(recovery);        }      }    }  }} @AT@ 8674 @LENGTH@ 871
------UPD Block@@ThenBody:{  XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();  if (rr != null) {    for (    XAResourceRecovery recovery : value.getDeployment().getRecovery()) {      if (recovery != null) {        try {          recovery.shutdown();        } catch (        Exception e) {          DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);        } finally {          rr.removeXAResourceRecovery(recovery);        }      }    }  }} @TO@ ThenBody:{  XAResourceRecoveryRegistry rr=txInt.getValue().getRecoveryRegistry();  if (rr != null) {    for (    XAResourceRecovery recovery : value.getDeployment().getRecovery()) {      if (recovery != null) {        try {          recovery.shutdown();        } catch (        Exception e) {          DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);        } finally {          rr.removeXAResourceRecovery(recovery);        }      }    }  }} @AT@ 8816 @LENGTH@ 729
---------UPD IfStatement@@if (rr != null) {  for (  XAResourceRecovery recovery : value.getDeployment().getRecovery()) {    if (recovery != null) {      try {        recovery.shutdown();      } catch (      Exception e) {        DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);      } finally {        rr.removeXAResourceRecovery(recovery);      }    }  }} @TO@ if (rr != null) {  for (  XAResourceRecovery recovery : value.getDeployment().getRecovery()) {    if (recovery != null) {      try {        recovery.shutdown();      } catch (      Exception e) {        DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);      } finally {        rr.removeXAResourceRecovery(recovery);      }    }  }} @AT@ 8923 @LENGTH@ 608
------------UPD Block@@ThenBody:{  for (  XAResourceRecovery recovery : value.getDeployment().getRecovery()) {    if (recovery != null) {      try {        recovery.shutdown();      } catch (      Exception e) {        DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);      } finally {        rr.removeXAResourceRecovery(recovery);      }    }  }} @TO@ ThenBody:{  for (  XAResourceRecovery recovery : value.getDeployment().getRecovery()) {    if (recovery != null) {      try {        recovery.shutdown();      } catch (      Exception e) {        DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);      } finally {        rr.removeXAResourceRecovery(recovery);      }    }  }} @AT@ 8939 @LENGTH@ 592
---------------UPD EnhancedForStatement@@for (XAResourceRecovery recovery : value.getDeployment().getRecovery()) {  if (recovery != null) {    try {      recovery.shutdown();    } catch (    Exception e) {      DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);    } finally {      rr.removeXAResourceRecovery(recovery);    }  }} @TO@ for (XAResourceRecovery recovery : value.getDeployment().getRecovery()) {  if (recovery != null) {    try {      recovery.shutdown();    } catch (    Exception e) {      DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);    } finally {      rr.removeXAResourceRecovery(recovery);    }  }} @AT@ 8961 @LENGTH@ 552
------------------UPD IfStatement@@if (recovery != null) {  try {    recovery.shutdown();  } catch (  Exception e) {    DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);  } finally {    rr.removeXAResourceRecovery(recovery);  }} @TO@ if (recovery != null) {  try {    recovery.shutdown();  } catch (  Exception e) {    DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);  } finally {    rr.removeXAResourceRecovery(recovery);  }} @AT@ 9059 @LENGTH@ 432
---------------------UPD Block@@ThenBody:{  try {    recovery.shutdown();  } catch (  Exception e) {    DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);  } finally {    rr.removeXAResourceRecovery(recovery);  }} @TO@ ThenBody:{  try {    recovery.shutdown();  } catch (  Exception e) {    DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);  } finally {    rr.removeXAResourceRecovery(recovery);  }} @AT@ 9080 @LENGTH@ 411
------------------------UPD TryStatement@@try {  recovery.shutdown();} catch (Exception e) {  DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);} finally {  rr.removeXAResourceRecovery(recovery);} @TO@ try {  recovery.shutdown();} catch (Exception e) {  DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);} finally {  rr.removeXAResourceRecovery(recovery);} @AT@ 9110 @LENGTH@ 355
---------------------------UPD CatchClause@@catch (Exception e) {  DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e);} @TO@ catch (Exception e) {  DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e);} @AT@ 9199 @LENGTH@ 155
------------------------------UPD ExpressionStatement@@MethodInvocation:DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e) @TO@ MethodInvocation:DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e) @AT@ 9253 @LENGTH@ 71
---------------------------------UPD MethodInvocation@@DEPLOYMENT_CONNECTOR_LOGGER.error("Error during recovery shutdown",e) @TO@ DEPLOYMENT_CONNECTOR_LOGGER.errorDuringRecoveryShutdown(e) @AT@ 9253 @LENGTH@ 70
------------------------------------UPD SimpleName@@MethodName:error:["Error during recovery shutdown", e] @TO@ MethodName:errorDuringRecoveryShutdown:[e] @AT@ 9281 @LENGTH@ 42
---------------------------------------DEL StringLiteral@@"Error during recovery shutdown" @AT@ 9287 @LENGTH@ 32
---UPD IfStatement@@if (value.getDeployment() != null && value.getDeployment().getResourceAdapter() != null) {  ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());    value.getDeployment().getResourceAdapter().stop();  } catch (  Throwable nfe) {    DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe);  } finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);  }} @TO@ if (value.getDeployment() != null && value.getDeployment().getResourceAdapter() != null) {  ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());    value.getDeployment().getResourceAdapter().stop();  } catch (  Throwable nfe) {    DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe);  } finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);  }} @AT@ 9826 @LENGTH@ 732
------UPD Block@@ThenBody:{  ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());    value.getDeployment().getResourceAdapter().stop();  } catch (  Throwable nfe) {    DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe);  } finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);  }} @TO@ ThenBody:{  ClassLoader old=WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();  try {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());    value.getDeployment().getResourceAdapter().stop();  } catch (  Throwable nfe) {    DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe);  } finally {    WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);  }} @AT@ 9915 @LENGTH@ 643
---------UPD TryStatement@@try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());  value.getDeployment().getResourceAdapter().stop();} catch (Throwable nfe) {  DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe);} finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);} @TO@ try {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(value.getDeployment().getResourceAdapter().getClass().getClassLoader());  value.getDeployment().getResourceAdapter().stop();} catch (Throwable nfe) {  DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe);} finally {  WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(old);} @AT@ 10032 @LENGTH@ 512
------------UPD CatchClause@@catch (Throwable nfe) {  DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe);} @TO@ catch (Throwable nfe) {  DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe);} @AT@ 10282 @LENGTH@ 146
---------------UPD ExpressionStatement@@MethodInvocation:DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe) @TO@ MethodInvocation:DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe) @AT@ 10326 @LENGTH@ 84
------------------UPD MethodInvocation@@DEPLOYMENT_CONNECTOR_LOGGER.warn("Exception during stopping resource adapter",nfe) @TO@ DEPLOYMENT_CONNECTOR_LOGGER.errorStoppingRA(nfe) @AT@ 10326 @LENGTH@ 83
---------------------UPD SimpleName@@MethodName:warn:["Exception during stopping resource adapter", nfe] @TO@ MethodName:errorStoppingRA:[nfe] @AT@ 10354 @LENGTH@ 55
------------------------DEL StringLiteral@@"Exception during stopping resource adapter" @AT@ 10359 @LENGTH@ 44


UPD IfStatement@@if (amNodeInfo == null) {  LOG.info(("Ignoring duplicate unregisterRequest for am at: " + amLocation + ":"+ port));} @TO@ if (amNodeInfo == null) {  LOG.info(("Ignoring duplicate unregisterRequest for am at: " + amLocation + ":"+ port));} else {  amNodeInfo.decrementAndGetTaskCount();} @AT@ 9010 @LENGTH@ 131
---INS Block@@ElseBody:{  amNodeInfo.decrementAndGetTaskCount();} @TO@ IfStatement@@if (amNodeInfo == null) {  LOG.info(("Ignoring duplicate unregisterRequest for am at: " + amLocation + ":"+ port));} @AT@ 9147 @LENGTH@ 56
------MOV ExpressionStatement@@MethodInvocation:amNodeInfo.decrementAndGetTaskCount() @TO@ Block@@ElseBody:{  amNodeInfo.decrementAndGetTaskCount();} @AT@ 9148 @LENGTH@ 38


INS MethodDeclaration@@void, MethodName:failed,  @TO@ TypeDeclaration@@[public]Bootstrap,  @AT@ 3667 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:failed,  @AT@ 3662 @LENGTH@ 4
---INS SimpleName@@MethodName:failed @TO@ MethodDeclaration@@void, MethodName:failed,  @AT@ 3667 @LENGTH@ 6


INS FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @TO@ TypeDeclaration@@[public]RepositoryRestHandlerMapping, BasePathAwareHandlerMapping @AT@ 2226 @LENGTH@ 156
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @AT@ 2226 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @AT@ 2234 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @AT@ 2241 @LENGTH@ 5
---INS SimpleType@@MediaType @TO@ FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @AT@ 2247 @LENGTH@ 9
---INS VariableDeclarationFragment@@EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET) @TO@ FieldDeclaration@@private, static, final, MediaType, [EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET)] @AT@ 2257 @LENGTH@ 124
------INS SimpleName@@EVERYTHING_JSON_MEDIA_TYPE @TO@ VariableDeclarationFragment@@EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET) @AT@ 2257 @LENGTH@ 26
------INS ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @TO@ VariableDeclarationFragment@@EVERYTHING_JSON_MEDIA_TYPE=new MediaType("application","*+json",AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET) @AT@ 2286 @LENGTH@ 95
---------INS New@@new @TO@ ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @AT@ 2286 @LENGTH@ 3
---------INS SimpleType@@MediaType @TO@ ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @AT@ 2290 @LENGTH@ 9
---------INS StringLiteral@@"application" @TO@ ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @AT@ 2300 @LENGTH@ 13
---------INS StringLiteral@@"*+json" @TO@ ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @AT@ 2315 @LENGTH@ 8
---------INS QualifiedName@@AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET @TO@ ClassInstanceCreation@@MediaType["application", "*+json", AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET] @AT@ 2328 @LENGTH@ 52
------------INS SimpleName@@AbstractJackson2HttpMessageConverter @TO@ QualifiedName@@AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET @AT@ 2328 @LENGTH@ 36
------------INS SimpleName@@DEFAULT_CHARSET @TO@ QualifiedName@@AbstractJackson2HttpMessageConverter.DEFAULT_CHARSET @AT@ 2365 @LENGTH@ 15


UPD IfStatement@@if (value.startsWith(prefix)) builder.add(value.substring(prefix.length()),true); @TO@ if (value.startsWith(prefix)) {  builder.add(value.substring(prefix.length()),true);} @AT@ 2014 @LENGTH@ 98
---UPD Block@@ThenBody:builder.add(value.substring(prefix.length()),true); @TO@ ThenBody:{  builder.add(value.substring(prefix.length()),true);} @AT@ 2060 @LENGTH@ 52


INS MethodDeclaration@@void, MethodName:copyAttachments, Message message,  @TO@ TypeDeclaration@@[public]Message,  @AT@ 7931 @LENGTH@ 33
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:copyAttachments, Message message,  @AT@ 7926 @LENGTH@ 4
---INS SimpleName@@MethodName:copyAttachments @TO@ MethodDeclaration@@void, MethodName:copyAttachments, Message message,  @AT@ 7931 @LENGTH@ 15
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@void, MethodName:copyAttachments, Message message,  @AT@ 7947 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 7947 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 7955 @LENGTH@ 7


INS MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @TO@ TypeDeclaration@@[public]TransformUtils,  @AT@ 3839 @LENGTH@ 443
---INS Modifier@@private @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3839 @LENGTH@ 7
---INS Modifier@@static @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3847 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3854 @LENGTH@ 4
---INS SimpleName@@MethodName:transformIorSettings @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3859 @LENGTH@ 20
---INS SingleVariableDeclaration@@final ModelNode model @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3880 @LENGTH@ 21
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode model @AT@ 3880 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode model @AT@ 3886 @LENGTH@ 9
------INS SimpleName@@model @TO@ SingleVariableDeclaration@@final ModelNode model @AT@ 3896 @LENGTH@ 5
---INS SingleVariableDeclaration@@final ModelNode legacyValue @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3903 @LENGTH@ 27
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ModelNode legacyValue @AT@ 3903 @LENGTH@ 5
------INS SimpleType@@ModelNode @TO@ SingleVariableDeclaration@@final ModelNode legacyValue @AT@ 3909 @LENGTH@ 9
------INS SimpleName@@legacyValue @TO@ SingleVariableDeclaration@@final ModelNode legacyValue @AT@ 3919 @LENGTH@ 11
---INS EnhancedForStatement@@for (final Property category : legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList()) {  for (  final Property property : category.getValue().asPropertyList()) {    model.get(property.getName()).set(property.getValue());  }} @TO@ MethodDeclaration@@private, static, void, MethodName:transformIorSettings, final ModelNode model, final ModelNode legacyValue,  @AT@ 3942 @LENGTH@ 334
------INS SingleVariableDeclaration@@final Property category @TO@ EnhancedForStatement@@for (final Property category : legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList()) {  for (  final Property property : category.getValue().asPropertyList()) {    model.get(property.getName()).set(property.getValue());  }} @AT@ 3947 @LENGTH@ 23
---------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Property category @AT@ 3947 @LENGTH@ 5
---------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@final Property category @AT@ 3953 @LENGTH@ 8
---------INS SimpleName@@category @TO@ SingleVariableDeclaration@@final Property category @AT@ 3962 @LENGTH@ 8
------INS MethodInvocation@@legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList() @TO@ EnhancedForStatement@@for (final Property category : legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList()) {  for (  final Property property : category.getValue().asPropertyList()) {    model.get(property.getName()).set(property.getValue());  }} @AT@ 3973 @LENGTH@ 121
---------INS MethodInvocation@@MethodName:get:[JacORBSubsystemConstants.SETTING] @TO@ MethodInvocation@@legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList() @AT@ 3973 @LENGTH@ 87
------------INS QualifiedName@@JacORBSubsystemConstants.SETTING @TO@ MethodInvocation@@MethodName:get:[JacORBSubsystemConstants.SETTING] @AT@ 4027 @LENGTH@ 32
---------------INS SimpleName@@JacORBSubsystemConstants @TO@ QualifiedName@@JacORBSubsystemConstants.SETTING @AT@ 4027 @LENGTH@ 24
---------------INS SimpleName@@SETTING @TO@ QualifiedName@@JacORBSubsystemConstants.SETTING @AT@ 4052 @LENGTH@ 7
---------INS MethodInvocation@@MethodName:get:[JacORBSubsystemConstants.DEFAULT] @TO@ MethodInvocation@@legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList() @AT@ 3973 @LENGTH@ 49
------------INS QualifiedName@@JacORBSubsystemConstants.DEFAULT @TO@ MethodInvocation@@MethodName:get:[JacORBSubsystemConstants.DEFAULT] @AT@ 3989 @LENGTH@ 32
---------------INS SimpleName@@JacORBSubsystemConstants @TO@ QualifiedName@@JacORBSubsystemConstants.DEFAULT @AT@ 3989 @LENGTH@ 24
---------------INS SimpleName@@DEFAULT @TO@ QualifiedName@@JacORBSubsystemConstants.DEFAULT @AT@ 4014 @LENGTH@ 7
---------INS SimpleName@@Name:legacyValue @TO@ MethodInvocation@@legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList() @AT@ 3973 @LENGTH@ 11
---------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList() @AT@ 4078 @LENGTH@ 16
------INS EnhancedForStatement@@for (final Property property : category.getValue().asPropertyList()) {  model.get(property.getName()).set(property.getValue());} @TO@ EnhancedForStatement@@for (final Property category : legacyValue.get(JacORBSubsystemConstants.DEFAULT).get(JacORBSubsystemConstants.SETTING).asPropertyList()) {  for (  final Property property : category.getValue().asPropertyList()) {    model.get(property.getName()).set(property.getValue());  }} @AT@ 4110 @LENGTH@ 156
---------INS SingleVariableDeclaration@@final Property property @TO@ EnhancedForStatement@@for (final Property property : category.getValue().asPropertyList()) {  model.get(property.getName()).set(property.getValue());} @AT@ 4115 @LENGTH@ 23
------------INS Modifier@@final @TO@ SingleVariableDeclaration@@final Property property @AT@ 4115 @LENGTH@ 5
------------INS SimpleType@@Property @TO@ SingleVariableDeclaration@@final Property property @AT@ 4121 @LENGTH@ 8
------------INS SimpleName@@property @TO@ SingleVariableDeclaration@@final Property property @AT@ 4130 @LENGTH@ 8
---------INS MethodInvocation@@category.getValue().asPropertyList() @TO@ EnhancedForStatement@@for (final Property property : category.getValue().asPropertyList()) {  model.get(property.getName()).set(property.getValue());} @AT@ 4141 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getValue:[] @TO@ MethodInvocation@@category.getValue().asPropertyList() @AT@ 4141 @LENGTH@ 19
------------INS SimpleName@@Name:category @TO@ MethodInvocation@@category.getValue().asPropertyList() @AT@ 4141 @LENGTH@ 8
------------INS SimpleName@@MethodName:asPropertyList:[] @TO@ MethodInvocation@@category.getValue().asPropertyList() @AT@ 4161 @LENGTH@ 16
---------INS ExpressionStatement@@MethodInvocation:model.get(property.getName()).set(property.getValue()) @TO@ EnhancedForStatement@@for (final Property property : category.getValue().asPropertyList()) {  model.get(property.getName()).set(property.getValue());} @AT@ 4197 @LENGTH@ 55
------------INS MethodInvocation@@model.get(property.getName()).set(property.getValue()) @TO@ ExpressionStatement@@MethodInvocation:model.get(property.getName()).set(property.getValue()) @AT@ 4197 @LENGTH@ 54
---------------INS MethodInvocation@@MethodName:get:[property.getName()] @TO@ MethodInvocation@@model.get(property.getName()).set(property.getValue()) @AT@ 4197 @LENGTH@ 29
------------------INS MethodInvocation@@property.getName() @TO@ MethodInvocation@@MethodName:get:[property.getName()] @AT@ 4207 @LENGTH@ 18
---------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 4207 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 4216 @LENGTH@ 9
---------------INS SimpleName@@Name:model @TO@ MethodInvocation@@model.get(property.getName()).set(property.getValue()) @AT@ 4197 @LENGTH@ 5
---------------INS SimpleName@@MethodName:set:[property.getValue()] @TO@ MethodInvocation@@model.get(property.getName()).set(property.getValue()) @AT@ 4227 @LENGTH@ 24
------------------INS MethodInvocation@@property.getValue() @TO@ SimpleName@@MethodName:set:[property.getValue()] @AT@ 4231 @LENGTH@ 19
---------------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getValue() @AT@ 4231 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getValue:[] @TO@ MethodInvocation@@property.getValue() @AT@ 4240 @LENGTH@ 10


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3488 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3488 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3499 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3508 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3479 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 3508 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3520 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.registeredHTTPUpgradeHandler(ACTIVEMQ_REMOTING,acceptorName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.registeredHTTPUpgradeHandler(ACTIVEMQ_REMOTING,acceptorName) @AT@ 5177 @LENGTH@ 79
---UPD MethodInvocation@@MESSAGING_LOGGER.registeredHTTPUpgradeHandler(ACTIVEMQ_REMOTING,acceptorName) @TO@ MessagingLogger.ROOT_LOGGER.registeredHTTPUpgradeHandler(ACTIVEMQ_REMOTING,acceptorName) @AT@ 5177 @LENGTH@ 78
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.registeredHTTPUpgradeHandler(ACTIVEMQ_REMOTING,acceptorName) @AT@ 5153 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 5177 @LENGTH@ 16


UPD ExpressionStatement@@MethodInvocation:log.error("error closing",e) @TO@ MethodInvocation:log.error("Error closing",e) @AT@ 3488 @LENGTH@ 30
---UPD MethodInvocation@@log.error("error closing",e) @TO@ log.error("Error closing",e) @AT@ 3488 @LENGTH@ 29
------UPD SimpleName@@MethodName:error:["error closing", e] @TO@ MethodName:error:["Error closing", e] @AT@ 3492 @LENGTH@ 25
---------UPD StringLiteral@@"error closing" @TO@ "Error closing" @AT@ 3498 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1776 @LENGTH@ 116
---UPD MethodInvocation@@assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"")) @TO@ assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1776 @LENGTH@ 115
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"")] @TO@ MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")] @AT@ 1776 @LENGTH@ 115
---------UPD MethodInvocation@@json.contains("\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"") @TO@ json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"") @AT@ 1787 @LENGTH@ 103
------------UPD SimpleName@@MethodName:contains:["\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\""] @TO@ MethodName:contains:["\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\""] @AT@ 1792 @LENGTH@ 98
---------------UPD StringLiteral@@"\"timeout\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" @TO@ "\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"" @AT@ 1801 @LENGTH@ 88


UPD ReturnStatement@@MethodInvocation:newContainer("INFO") @TO@ MethodInvocation:newContainer(false) @AT@ 373 @LENGTH@ 28
---UPD MethodInvocation@@newContainer("INFO") @TO@ newContainer(false) @AT@ 380 @LENGTH@ 20
------UPD SimpleName@@MethodName:newContainer:["INFO"] @TO@ MethodName:newContainer:[false] @AT@ 380 @LENGTH@ 20
---------DEL StringLiteral@@"INFO" @AT@ 393 @LENGTH@ 6
---------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:newContainer:["INFO"] @AT@ 393 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertEquals("The rated film wasn't saved correctly",film.getTitle(),loadedRating.getMovie().getTitle()) @TO@ MethodInvocation:assertEquals("The rated film wasn't saved correctly",film.getName(),loadedRating.getMovie().getName()) @AT@ 4433 @LENGTH@ 107
---UPD MethodInvocation@@assertEquals("The rated film wasn't saved correctly",film.getTitle(),loadedRating.getMovie().getTitle()) @TO@ assertEquals("The rated film wasn't saved correctly",film.getName(),loadedRating.getMovie().getName()) @AT@ 4433 @LENGTH@ 106
------UPD SimpleName@@MethodName:assertEquals:["The rated film wasn't saved correctly", film.getTitle(), loadedRating.getMovie().getTitle()] @TO@ MethodName:assertEquals:["The rated film wasn't saved correctly", film.getName(), loadedRating.getMovie().getName()] @AT@ 4433 @LENGTH@ 106
---------UPD MethodInvocation@@film.getTitle() @TO@ film.getName() @AT@ 4487 @LENGTH@ 15
------------UPD SimpleName@@MethodName:getTitle:[] @TO@ MethodName:getName:[] @AT@ 4492 @LENGTH@ 10
---------UPD MethodInvocation@@loadedRating.getMovie().getTitle() @TO@ loadedRating.getMovie().getName() @AT@ 4504 @LENGTH@ 34
------------UPD SimpleName@@MethodName:getTitle:[] @TO@ MethodName:getName:[] @AT@ 4528 @LENGTH@ 10


UPD FieldDeclaration@@ModelCamelContext, [context] @TO@ CamelContext, [context] @AT@ 1836 @LENGTH@ 26
---UPD SimpleType@@ModelCamelContext @TO@ CamelContext @AT@ 1836 @LENGTH@ 17


UPD IfStatement@@if (ObjectUtils.equals(workingComputer,removingComputer)) {  scoreDirector.beforeProblemFactRemoved(workingComputer);  it.remove();  scoreDirector.beforeProblemFactRemoved(workingComputer);  break;} @TO@ if (ObjectUtils.equals(workingComputer,removingComputer)) {  scoreDirector.beforeProblemFactRemoved(workingComputer);  it.remove();  scoreDirector.beforeProblemFactRemoved(workingComputer);  scoreDirector.triggerVariableListeners();  break;} @AT@ 4490 @LENGTH@ 312
---UPD Block@@ThenBody:{  scoreDirector.beforeProblemFactRemoved(workingComputer);  it.remove();  scoreDirector.beforeProblemFactRemoved(workingComputer);  break;} @TO@ ThenBody:{  scoreDirector.beforeProblemFactRemoved(workingComputer);  it.remove();  scoreDirector.beforeProblemFactRemoved(workingComputer);  scoreDirector.triggerVariableListeners();  break;} @AT@ 4549 @LENGTH@ 253
------INS ExpressionStatement@@MethodInvocation:scoreDirector.triggerVariableListeners() @TO@ Block@@ThenBody:{  scoreDirector.beforeProblemFactRemoved(workingComputer);  it.remove();  scoreDirector.beforeProblemFactRemoved(workingComputer);  break;} @AT@ 4670 @LENGTH@ 41
---------INS MethodInvocation@@scoreDirector.triggerVariableListeners() @TO@ ExpressionStatement@@MethodInvocation:scoreDirector.triggerVariableListeners() @AT@ 4670 @LENGTH@ 40
------------INS SimpleName@@Name:scoreDirector @TO@ MethodInvocation@@scoreDirector.triggerVariableListeners() @AT@ 4670 @LENGTH@ 13
------------INS SimpleName@@MethodName:triggerVariableListeners:[] @TO@ MethodInvocation@@scoreDirector.triggerVariableListeners() @AT@ 4684 @LENGTH@ 26


UPD MethodDeclaration@@public, void, MethodName:deInit, Exception,  @TO@ public, void, MethodName:close, Exception,  @AT@ 1228 @LENGTH@ 38
---UPD SimpleName@@MethodName:deInit @TO@ MethodName:close @AT@ 1240 @LENGTH@ 6


INS IfStatement@@if (rowCount <= 0) {  rowCount=1024 * 1024;} @TO@ MethodDeclaration@@protected, void, MethodName:reloadHashTable, byte pos, int partitionId, IOException, HiveException, SerDeException, ClassNotFoundException,  @AT@ 24199 @LENGTH@ 281
---INS InfixExpression@@rowCount <= 0 @TO@ IfStatement@@if (rowCount <= 0) {  rowCount=1024 * 1024;} @AT@ 24203 @LENGTH@ 13
------INS SimpleName@@rowCount @TO@ InfixExpression@@rowCount <= 0 @AT@ 24203 @LENGTH@ 8
------INS Operator@@<= @TO@ InfixExpression@@rowCount <= 0 @AT@ 24211 @LENGTH@ 2
------INS NumberLiteral@@0 @TO@ InfixExpression@@rowCount <= 0 @AT@ 24215 @LENGTH@ 1
---INS Block@@ThenBody:{  rowCount=1024 * 1024;} @TO@ IfStatement@@if (rowCount <= 0) {  rowCount=1024 * 1024;} @AT@ 24218 @LENGTH@ 262
------INS ExpressionStatement@@Assignment:rowCount=1024 * 1024 @TO@ Block@@ThenBody:{  rowCount=1024 * 1024;} @AT@ 24226 @LENGTH@ 23
---------INS Assignment@@rowCount=1024 * 1024 @TO@ ExpressionStatement@@Assignment:rowCount=1024 * 1024 @AT@ 24226 @LENGTH@ 22
------------INS SimpleName@@rowCount @TO@ Assignment@@rowCount=1024 * 1024 @AT@ 24226 @LENGTH@ 8
------------INS Operator@@= @TO@ Assignment@@rowCount=1024 * 1024 @AT@ 24234 @LENGTH@ 1
------------INS InfixExpression@@1024 * 1024 @TO@ Assignment@@rowCount=1024 * 1024 @AT@ 24237 @LENGTH@ 11
---------------INS NumberLiteral@@1024 @TO@ InfixExpression@@1024 * 1024 @AT@ 24237 @LENGTH@ 4
---------------INS Operator@@* @TO@ InfixExpression@@1024 * 1024 @AT@ 24241 @LENGTH@ 1
---------------INS NumberLiteral@@1024 @TO@ InfixExpression@@1024 * 1024 @AT@ 24244 @LENGTH@ 4


DEL ExpressionStatement@@Assignment:this.conf=taskSchedulerContext.getInitialConfiguration() @AT@ 6591 @LENGTH@ 59


UPD Block@@ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());      ref=builderRef.getRef();    }  }} @TO@ ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    builder=refBuilder;  }  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());      if (refBuilder != null) {        ref=builderRef.getRef();        builder=refBuilder;      }    }  }} @AT@ 7785 @LENGTH@ 1087
---UPD ExpressionStatement@@Assignment:builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ Assignment:builder=refBuilder @AT@ 8025 @LENGTH@ 94
---INS VariableDeclarationStatement@@ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()); @TO@ Block@@ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());      ref=builderRef.getRef();    }  }} @AT@ 8085 @LENGTH@ 117
------INS SimpleType@@ErrorHandlerFactory @TO@ VariableDeclarationStatement@@ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()); @AT@ 8085 @LENGTH@ 19
------INS VariableDeclarationFragment@@refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ VariableDeclarationStatement@@ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()); @AT@ 8105 @LENGTH@ 96
---------MOV MethodInvocation@@ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ VariableDeclarationFragment@@refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @AT@ 8035 @LENGTH@ 83
---------INS SimpleName@@refBuilder @TO@ VariableDeclarationFragment@@refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @AT@ 8105 @LENGTH@ 10
---INS IfStatement@@if (refBuilder != null) {  builder=refBuilder;} @TO@ Block@@ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());      ref=builderRef.getRef();    }  }} @AT@ 8215 @LENGTH@ 77
------INS InfixExpression@@refBuilder != null @TO@ IfStatement@@if (refBuilder != null) {  builder=refBuilder;} @AT@ 8219 @LENGTH@ 18
---------INS SimpleName@@refBuilder @TO@ InfixExpression@@refBuilder != null @AT@ 8219 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@refBuilder != null @AT@ 8229 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@refBuilder != null @AT@ 8233 @LENGTH@ 4
------INS Block@@ThenBody:{  builder=refBuilder;} @TO@ IfStatement@@if (refBuilder != null) {  builder=refBuilder;} @AT@ 8239 @LENGTH@ 53
---------MOV ExpressionStatement@@Assignment:builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ Block@@ThenBody:{  builder=refBuilder;} @AT@ 8025 @LENGTH@ 94
------------UPD Assignment@@builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ builder=refBuilder @AT@ 8025 @LENGTH@ 93
---------------INS SimpleName@@refBuilder @TO@ Assignment@@builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @AT@ 8267 @LENGTH@ 10
---UPD IfStatement@@if (builder instanceof ErrorHandlerBuilderRef) {  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    ref=builderRef.getRef();  }} @TO@ if (builder instanceof ErrorHandlerBuilderRef) {  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @AT@ 8367 @LENGTH@ 495
------UPD Block@@ThenBody:{  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    ref=builderRef.getRef();  }} @TO@ ThenBody:{  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @AT@ 8414 @LENGTH@ 448
---------UPD IfStatement@@if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  ref=builderRef.getRef();} @TO@ if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @AT@ 8580 @LENGTH@ 268
------------UPD Block@@ThenBody:{  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  ref=builderRef.getRef();} @TO@ ThenBody:{  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @AT@ 8667 @LENGTH@ 181
---------------UPD ExpressionStatement@@Assignment:builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ Assignment:refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @AT@ 8689 @LENGTH@ 94
------------------UPD Assignment@@builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @AT@ 8689 @LENGTH@ 93
---------------------UPD SimpleName@@builder @TO@ refBuilder @AT@ 8689 @LENGTH@ 7
---------------INS IfStatement@@if (refBuilder != null) {  ref=builderRef.getRef();  builder=refBuilder;} @TO@ Block@@ThenBody:{  builder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  ref=builderRef.getRef();} @AT@ 8980 @LENGTH@ 144
------------------INS InfixExpression@@refBuilder != null @TO@ IfStatement@@if (refBuilder != null) {  ref=builderRef.getRef();  builder=refBuilder;} @AT@ 8984 @LENGTH@ 18
---------------------INS SimpleName@@refBuilder @TO@ InfixExpression@@refBuilder != null @AT@ 8984 @LENGTH@ 10
---------------------INS Operator@@!= @TO@ InfixExpression@@refBuilder != null @AT@ 8994 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@refBuilder != null @AT@ 8998 @LENGTH@ 4
------------------INS Block@@ThenBody:{  ref=builderRef.getRef();  builder=refBuilder;} @TO@ IfStatement@@if (refBuilder != null) {  ref=builderRef.getRef();  builder=refBuilder;} @AT@ 9004 @LENGTH@ 120
---------------------MOV ExpressionStatement@@Assignment:ref=builderRef.getRef() @TO@ Block@@ThenBody:{  ref=builderRef.getRef();  builder=refBuilder;} @AT@ 8804 @LENGTH@ 26
---------------------INS ExpressionStatement@@Assignment:builder=refBuilder @TO@ Block@@ThenBody:{  ref=builderRef.getRef();  builder=refBuilder;} @AT@ 9081 @LENGTH@ 21
------------------------INS Assignment@@builder=refBuilder @TO@ ExpressionStatement@@Assignment:builder=refBuilder @AT@ 9081 @LENGTH@ 20
---------------------------INS SimpleName@@builder @TO@ Assignment@@builder=refBuilder @AT@ 9081 @LENGTH@ 7
---------------------------INS Operator@@= @TO@ Assignment@@builder=refBuilder @AT@ 9088 @LENGTH@ 1
---------------------------INS SimpleName@@refBuilder @TO@ Assignment@@builder=refBuilder @AT@ 9091 @LENGTH@ 10


UPD Block@@ThenBody:{  queueName=UUID.randomUUID().toString();  if (!StringUtils.hasText(bindingQueue.exclusive())) {    exclusive=true;  }  if (!StringUtils.hasText(bindingQueue.autoDelete())) {    autoDelete=true;  }} @TO@ ThenBody:{  queueName=UUID.randomUUID().toString();  if (!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive())) {    exclusive=true;  }  if (!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete())) {    autoDelete=true;  }} @AT@ 16819 @LENGTH@ 236
---UPD IfStatement@@if (!StringUtils.hasText(bindingQueue.exclusive())) {  exclusive=true;} @TO@ if (!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive())) {  exclusive=true;} @AT@ 16873 @LENGTH@ 84
------INS InfixExpression@@!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive()) @TO@ IfStatement@@if (!StringUtils.hasText(bindingQueue.exclusive())) {  exclusive=true;} @AT@ 16937 @LENGTH@ 109
---------MOV PrefixExpression@@!StringUtils.hasText(bindingQueue.exclusive()) @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive()) @AT@ 16877 @LENGTH@ 46
---------INS Operator@@|| @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive()) @AT@ 16983 @LENGTH@ 2
---------INS MethodInvocation@@resolveExpressionAsBoolean(bindingQueue.exclusive()) @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.exclusive()) || resolveExpressionAsBoolean(bindingQueue.exclusive()) @AT@ 16994 @LENGTH@ 52
------------INS SimpleName@@MethodName:resolveExpressionAsBoolean:[bindingQueue.exclusive()] @TO@ MethodInvocation@@resolveExpressionAsBoolean(bindingQueue.exclusive()) @AT@ 16994 @LENGTH@ 52
---------------INS MethodInvocation@@bindingQueue.exclusive() @TO@ SimpleName@@MethodName:resolveExpressionAsBoolean:[bindingQueue.exclusive()] @AT@ 17021 @LENGTH@ 24
------------------INS SimpleName@@Name:bindingQueue @TO@ MethodInvocation@@bindingQueue.exclusive() @AT@ 17021 @LENGTH@ 12
------------------INS SimpleName@@MethodName:exclusive:[] @TO@ MethodInvocation@@bindingQueue.exclusive() @AT@ 17034 @LENGTH@ 11
---UPD IfStatement@@if (!StringUtils.hasText(bindingQueue.autoDelete())) {  autoDelete=true;} @TO@ if (!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete())) {  autoDelete=true;} @AT@ 16963 @LENGTH@ 86
------INS InfixExpression@@!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete()) @TO@ IfStatement@@if (!StringUtils.hasText(bindingQueue.autoDelete())) {  autoDelete=true;} @AT@ 17090 @LENGTH@ 111
---------MOV PrefixExpression@@!StringUtils.hasText(bindingQueue.autoDelete()) @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete()) @AT@ 16967 @LENGTH@ 47
---------INS Operator@@|| @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete()) @AT@ 17137 @LENGTH@ 2
---------INS MethodInvocation@@resolveExpressionAsBoolean(bindingQueue.autoDelete()) @TO@ InfixExpression@@!StringUtils.hasText(bindingQueue.autoDelete()) || resolveExpressionAsBoolean(bindingQueue.autoDelete()) @AT@ 17148 @LENGTH@ 53
------------INS SimpleName@@MethodName:resolveExpressionAsBoolean:[bindingQueue.autoDelete()] @TO@ MethodInvocation@@resolveExpressionAsBoolean(bindingQueue.autoDelete()) @AT@ 17148 @LENGTH@ 53
---------------INS MethodInvocation@@bindingQueue.autoDelete() @TO@ SimpleName@@MethodName:resolveExpressionAsBoolean:[bindingQueue.autoDelete()] @AT@ 17175 @LENGTH@ 25
------------------INS SimpleName@@Name:bindingQueue @TO@ MethodInvocation@@bindingQueue.autoDelete() @AT@ 17175 @LENGTH@ 12
------------------INS SimpleName@@MethodName:autoDelete:[] @TO@ MethodInvocation@@bindingQueue.autoDelete() @AT@ 17188 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @TO@ MethodInvocation:fileSystem.getOutputStream(new File("")) @AT@ 2408 @LENGTH@ 79
---UPD MethodInvocation@@fileSystem.getOutputStream(new File("this is/<certainly>\\an#invalid#*path!")) @TO@ fileSystem.getOutputStream(new File("")) @AT@ 2408 @LENGTH@ 78
------UPD SimpleName@@MethodName:getOutputStream:[new File("this is/<certainly>\\an#invalid#*path!")] @TO@ MethodName:getOutputStream:[new File("")] @AT@ 2419 @LENGTH@ 67
---------UPD ClassInstanceCreation@@File["this is/<certainly>\\an#invalid#*path!"] @TO@ File[""] @AT@ 2435 @LENGTH@ 50
------------UPD StringLiteral@@"this is/<certainly>\\an#invalid#*path!" @TO@ "" @AT@ 2444 @LENGTH@ 40


INS MethodDeclaration@@User, MethodName:findByAgeContaining, @Param("age") Integer age,  @TO@ TypeDeclaration@@Sample,  @AT@ 3862 @LENGTH@ 47
---INS SimpleType@@User @TO@ MethodDeclaration@@User, MethodName:findByAgeContaining, @Param("age") Integer age,  @AT@ 3857 @LENGTH@ 4
---INS SimpleName@@MethodName:findByAgeContaining @TO@ MethodDeclaration@@User, MethodName:findByAgeContaining, @Param("age") Integer age,  @AT@ 3862 @LENGTH@ 19
---INS SingleVariableDeclaration@@@Param("age") Integer age @TO@ MethodDeclaration@@User, MethodName:findByAgeContaining, @Param("age") Integer age,  @AT@ 3882 @LENGTH@ 25
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@@Param("age") Integer age @AT@ 3896 @LENGTH@ 7
------INS SimpleName@@age @TO@ SingleVariableDeclaration@@@Param("age") Integer age @AT@ 3904 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:listener.endOfFileReached() @TO@ MethodDeclaration@@private, long, MethodName:readLines, final RandomAccessFile reader, IOException,  @AT@ 21038 @LENGTH@ 28
---INS MethodInvocation@@listener.endOfFileReached() @TO@ ExpressionStatement@@MethodInvocation:listener.endOfFileReached() @AT@ 21038 @LENGTH@ 27
------INS SimpleName@@Name:listener @TO@ MethodInvocation@@listener.endOfFileReached() @AT@ 21038 @LENGTH@ 8
------INS SimpleName@@MethodName:endOfFileReached:[] @TO@ MethodInvocation@@listener.endOfFileReached() @AT@ 21047 @LENGTH@ 18


UPD FieldDeclaration@@private, final, Map<String,BundleCapability>, [packageCapabilities=new HashMap<>()] @TO@ private, final, Map<String,BundleCapability>, [packageCapabilities=new HashMap<String,BundleCapability>()] @AT@ 4169 @LENGTH@ 82
---UPD VariableDeclarationFragment@@packageCapabilities=new HashMap<>() @TO@ packageCapabilities=new HashMap<String,BundleCapability>() @AT@ 4213 @LENGTH@ 37
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,BundleCapability>[] @AT@ 4235 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,BundleCapability> @AT@ 4239 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 4247 @LENGTH@ 6
------------INS SimpleType@@BundleCapability @TO@ ParameterizedType@@HashMap<> @AT@ 4255 @LENGTH@ 16


UPD MethodDeclaration@@public, void, MethodName:addRequestListener,  @TO@ public, void, MethodName:addRequestListener, ServletException,  @AT@ 3133 @LENGTH@ 1223
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@public, void, MethodName:addRequestListener,  @AT@ 3173 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:listeners.start() @TO@ MethodDeclaration@@public, void, MethodName:addRequestListener,  @AT@ 3770 @LENGTH@ 18
------INS MethodInvocation@@listeners.start() @TO@ ExpressionStatement@@MethodInvocation:listeners.start() @AT@ 3770 @LENGTH@ 17
---------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.start() @AT@ 3770 @LENGTH@ 9
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@listeners.start() @AT@ 3780 @LENGTH@ 7


INS MethodDeclaration@@IllegalStateException, MethodName:nameAlreadySet,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="ELY",length=5), public]ElytronMessages, [BasicLogger] @AT@ 4507 @LENGTH@ 17
---INS SimpleType@@IllegalStateException @TO@ MethodDeclaration@@IllegalStateException, MethodName:nameAlreadySet,  @AT@ 4485 @LENGTH@ 21
---INS SimpleName@@MethodName:nameAlreadySet @TO@ MethodDeclaration@@IllegalStateException, MethodName:nameAlreadySet,  @AT@ 4507 @LENGTH@ 14


UPD IfStatement@@if (contextNames.size() > 1) error.append(" Contexts : " + contextNames.toString()); @TO@ if (contextNames.size() > 1) {  error.append(" Contexts : " + contextNames.toString());} @AT@ 4013 @LENGTH@ 98
---UPD Block@@ThenBody:error.append(" Contexts : " + contextNames.toString()); @TO@ ThenBody:{  error.append(" Contexts : " + contextNames.toString());} @AT@ 4058 @LENGTH@ 53


UPD TypeDeclaration@@[protected, static]Nameable, [BeanNameAware] @TO@ [protected]Nameable, [BeanNameAware] @AT@ 6565 @LENGTH@ 111
---DEL Modifier@@static @AT@ 6575 @LENGTH@ 6


UPD MethodDeclaration@@private, static, String, MethodName:replaceTaskId, String taskId, int bucketNum,  @TO@ public, static, String, MethodName:replaceTaskId, String taskId, int bucketNum,  @AT@ 63845 @LENGTH@ 132
---UPD Modifier@@private @TO@ public @AT@ 63845 @LENGTH@ 7
---DEL ReturnStatement@@MethodInvocation:replaceTaskId(taskId,String.valueOf(bucketNum)) @AT@ 63917 @LENGTH@ 56
---INS VariableDeclarationStatement@@String bucketNumStr=String.valueOf(bucketNum); @TO@ MethodDeclaration@@private, static, String, MethodName:replaceTaskId, String taskId, int bucketNum,  @AT@ 64312 @LENGTH@ 48
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String bucketNumStr=String.valueOf(bucketNum); @AT@ 64312 @LENGTH@ 6
------INS VariableDeclarationFragment@@bucketNumStr=String.valueOf(bucketNum) @TO@ VariableDeclarationStatement@@String bucketNumStr=String.valueOf(bucketNum); @AT@ 64319 @LENGTH@ 40
---------MOV MethodInvocation@@String.valueOf(bucketNum) @TO@ VariableDeclarationFragment@@bucketNumStr=String.valueOf(bucketNum) @AT@ 63946 @LENGTH@ 25
---------INS SimpleName@@bucketNumStr @TO@ VariableDeclarationFragment@@bucketNumStr=String.valueOf(bucketNum) @AT@ 64319 @LENGTH@ 12
---INS VariableDeclarationStatement@@Matcher m=PREFIXED_TASK_ID_REGEX.matcher(taskId); @TO@ MethodDeclaration@@private, static, String, MethodName:replaceTaskId, String taskId, int bucketNum,  @AT@ 64365 @LENGTH@ 51
------INS SimpleType@@Matcher @TO@ VariableDeclarationStatement@@Matcher m=PREFIXED_TASK_ID_REGEX.matcher(taskId); @AT@ 64365 @LENGTH@ 7
------INS VariableDeclarationFragment@@m=PREFIXED_TASK_ID_REGEX.matcher(taskId) @TO@ VariableDeclarationStatement@@Matcher m=PREFIXED_TASK_ID_REGEX.matcher(taskId); @AT@ 64373 @LENGTH@ 42
---------INS SimpleName@@m @TO@ VariableDeclarationFragment@@m=PREFIXED_TASK_ID_REGEX.matcher(taskId) @AT@ 64373 @LENGTH@ 1
---------INS MethodInvocation@@PREFIXED_TASK_ID_REGEX.matcher(taskId) @TO@ VariableDeclarationFragment@@m=PREFIXED_TASK_ID_REGEX.matcher(taskId) @AT@ 64377 @LENGTH@ 38
------------INS SimpleName@@Name:PREFIXED_TASK_ID_REGEX @TO@ MethodInvocation@@PREFIXED_TASK_ID_REGEX.matcher(taskId) @AT@ 64377 @LENGTH@ 22
------------INS SimpleName@@MethodName:matcher:[taskId] @TO@ MethodInvocation@@PREFIXED_TASK_ID_REGEX.matcher(taskId) @AT@ 64400 @LENGTH@ 15
---------------INS SimpleName@@taskId @TO@ SimpleName@@MethodName:matcher:[taskId] @AT@ 64408 @LENGTH@ 6
---INS IfStatement@@if (!m.matches()) {  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} else {  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @TO@ MethodDeclaration@@private, static, String, MethodName:replaceTaskId, String taskId, int bucketNum,  @AT@ 64421 @LENGTH@ 381
------INS PrefixExpression@@!m.matches() @TO@ IfStatement@@if (!m.matches()) {  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} else {  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @AT@ 64425 @LENGTH@ 12
---------INS Operator@@! @TO@ PrefixExpression@@!m.matches() @AT@ 64425 @LENGTH@ 1
---------INS MethodInvocation@@m.matches() @TO@ PrefixExpression@@!m.matches() @AT@ 64426 @LENGTH@ 11
------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.matches() @AT@ 64426 @LENGTH@ 1
------------INS SimpleName@@MethodName:matches:[] @TO@ MethodInvocation@@m.matches() @AT@ 64428 @LENGTH@ 9
------INS Block@@ThenBody:{  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} @TO@ IfStatement@@if (!m.matches()) {  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} else {  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @AT@ 64439 @LENGTH@ 198
---------INS ExpressionStatement@@MethodInvocation:LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.") @TO@ Block@@ThenBody:{  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} @AT@ 64449 @LENGTH@ 125
------------INS MethodInvocation@@LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.") @TO@ ExpressionStatement@@MethodInvocation:LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.") @AT@ 64449 @LENGTH@ 124
---------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.") @AT@ 64449 @LENGTH@ 3
---------------INS SimpleName@@MethodName:warn:["Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number."] @TO@ MethodInvocation@@LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.") @AT@ 64453 @LENGTH@ 120
------------------INS InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @TO@ SimpleName@@MethodName:warn:["Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number."] @AT@ 64458 @LENGTH@ 114
---------------------INS StringLiteral@@"Unable to determine bucket number from task id: " @TO@ InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @AT@ 64458 @LENGTH@ 50
---------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @AT@ 64508 @LENGTH@ 1
---------------------INS SimpleName@@taskId @TO@ InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @AT@ 64511 @LENGTH@ 6
---------------------INS StringLiteral@@". Using " @TO@ InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @AT@ 64520 @LENGTH@ 10
---------------------INS StringLiteral@@"task ID as bucket number." @TO@ InfixExpression@@"Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number." @AT@ 64545 @LENGTH@ 27
---------INS ReturnStatement@@MethodInvocation:adjustBucketNumLen(bucketNumStr,taskId) @TO@ Block@@ThenBody:{  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} @AT@ 64583 @LENGTH@ 48
------------MOV MethodInvocation@@replaceTaskId(taskId,String.valueOf(bucketNum)) @TO@ ReturnStatement@@MethodInvocation:adjustBucketNumLen(bucketNumStr,taskId) @AT@ 63924 @LENGTH@ 48
---------------UPD SimpleName@@MethodName:replaceTaskId:[taskId, String.valueOf(bucketNum)] @TO@ MethodName:adjustBucketNumLen:[bucketNumStr, taskId] @AT@ 63924 @LENGTH@ 48
------------------INS SimpleName@@bucketNumStr @TO@ SimpleName@@MethodName:replaceTaskId:[taskId, String.valueOf(bucketNum)] @AT@ 64609 @LENGTH@ 12
------INS Block@@ElseBody:{  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @TO@ IfStatement@@if (!m.matches()) {  LOG.warn("Unable to determine bucket number from task id: " + taskId + ". Using "+ "task ID as bucket number.");  return adjustBucketNumLen(bucketNumStr,taskId);} else {  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @AT@ 64643 @LENGTH@ 159
---------INS VariableDeclarationStatement@@String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)); @TO@ Block@@ElseBody:{  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @AT@ 64651 @LENGTH@ 72
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)); @AT@ 64651 @LENGTH@ 6
------------INS VariableDeclarationFragment@@adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)) @TO@ VariableDeclarationStatement@@String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)); @AT@ 64658 @LENGTH@ 64
---------------INS SimpleName@@adjustedBucketNum @TO@ VariableDeclarationFragment@@adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)) @AT@ 64658 @LENGTH@ 17
---------------INS MethodInvocation@@adjustBucketNumLen(bucketNumStr,m.group(2)) @TO@ VariableDeclarationFragment@@adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2)) @AT@ 64678 @LENGTH@ 44
------------------INS SimpleName@@MethodName:adjustBucketNumLen:[bucketNumStr, m.group(2)] @TO@ MethodInvocation@@adjustBucketNumLen(bucketNumStr,m.group(2)) @AT@ 64678 @LENGTH@ 44
---------------------INS SimpleName@@bucketNumStr @TO@ SimpleName@@MethodName:adjustBucketNumLen:[bucketNumStr, m.group(2)] @AT@ 64697 @LENGTH@ 12
---------------------INS MethodInvocation@@m.group(2) @TO@ SimpleName@@MethodName:adjustBucketNumLen:[bucketNumStr, m.group(2)] @AT@ 64711 @LENGTH@ 10
------------------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.group(2) @AT@ 64711 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:group:[2] @TO@ MethodInvocation@@m.group(2) @AT@ 64713 @LENGTH@ 8
---------------------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:group:[2] @AT@ 64719 @LENGTH@ 1
---------INS ReturnStatement@@InfixExpression:(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @TO@ Block@@ElseBody:{  String adjustedBucketNum=adjustBucketNumLen(bucketNumStr,m.group(2));  return (m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum;} @AT@ 64730 @LENGTH@ 66
------------INS InfixExpression@@(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @TO@ ReturnStatement@@InfixExpression:(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @AT@ 64737 @LENGTH@ 58
---------------INS ParenthesizedExpression@@(m.group(1) == null ? "" : m.group(1)) @TO@ InfixExpression@@(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @AT@ 64737 @LENGTH@ 38
------------------INS ConditionalExpression@@m.group(1) == null ? "" : m.group(1) @TO@ ParenthesizedExpression@@(m.group(1) == null ? "" : m.group(1)) @AT@ 64738 @LENGTH@ 36
---------------------INS InfixExpression@@m.group(1) == null @TO@ ConditionalExpression@@m.group(1) == null ? "" : m.group(1) @AT@ 64738 @LENGTH@ 18
------------------------INS MethodInvocation@@m.group(1) @TO@ InfixExpression@@m.group(1) == null @AT@ 64738 @LENGTH@ 10
---------------------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.group(1) @AT@ 64738 @LENGTH@ 1
---------------------------INS SimpleName@@MethodName:group:[1] @TO@ MethodInvocation@@m.group(1) @AT@ 64740 @LENGTH@ 8
------------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:group:[1] @AT@ 64746 @LENGTH@ 1
------------------------INS Operator@@== @TO@ InfixExpression@@m.group(1) == null @AT@ 64748 @LENGTH@ 2
------------------------INS NullLiteral@@null @TO@ InfixExpression@@m.group(1) == null @AT@ 64752 @LENGTH@ 4
---------------------INS StringLiteral@@"" @TO@ ConditionalExpression@@m.group(1) == null ? "" : m.group(1) @AT@ 64759 @LENGTH@ 2
---------------------INS MethodInvocation@@m.group(1) @TO@ ConditionalExpression@@m.group(1) == null ? "" : m.group(1) @AT@ 64764 @LENGTH@ 10
------------------------INS SimpleName@@Name:m @TO@ MethodInvocation@@m.group(1) @AT@ 64764 @LENGTH@ 1
------------------------INS SimpleName@@MethodName:group:[1] @TO@ MethodInvocation@@m.group(1) @AT@ 64766 @LENGTH@ 8
---------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:group:[1] @AT@ 64772 @LENGTH@ 1
---------------INS Operator@@+ @TO@ InfixExpression@@(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @AT@ 64775 @LENGTH@ 1
---------------INS SimpleName@@adjustedBucketNum @TO@ InfixExpression@@(m.group(1) == null ? "" : m.group(1)) + adjustedBucketNum @AT@ 64778 @LENGTH@ 17


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 11568 @LENGTH@ 130
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 11568 @LENGTH@ 129
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 11568 @LENGTH@ 106
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 11572 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 11572 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 11603 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor, handler] @AT@ 11607 @LENGTH@ 39
------------DEL New@@new @AT@ 11607 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 11611 @LENGTH@ 14
------------DEL SimpleName@@descriptor @AT@ 11626 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 11638 @LENGTH@ 7
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 11615 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:props.setProperty("wildfly.swarm.context.path",this.contextPath) @TO@ MethodDeclaration@@private, void, MethodName:createWildflySwarmProperties, MojoFailureException,  @AT@ 8150 @LENGTH@ 67
---INS MethodInvocation@@props.setProperty("wildfly.swarm.context.path",this.contextPath) @TO@ ExpressionStatement@@MethodInvocation:props.setProperty("wildfly.swarm.context.path",this.contextPath) @AT@ 8150 @LENGTH@ 66
------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.setProperty("wildfly.swarm.context.path",this.contextPath) @AT@ 8150 @LENGTH@ 5
------INS SimpleName@@MethodName:setProperty:["wildfly.swarm.context.path", this.contextPath] @TO@ MethodInvocation@@props.setProperty("wildfly.swarm.context.path",this.contextPath) @AT@ 8156 @LENGTH@ 60
---------INS StringLiteral@@"wildfly.swarm.context.path" @TO@ SimpleName@@MethodName:setProperty:["wildfly.swarm.context.path", this.contextPath] @AT@ 8168 @LENGTH@ 28
---------INS FieldAccess@@this.contextPath @TO@ SimpleName@@MethodName:setProperty:["wildfly.swarm.context.path", this.contextPath] @AT@ 8198 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.contextPath @AT@ 8198 @LENGTH@ 4
------------INS SimpleName@@contextPath @TO@ FieldAccess@@this.contextPath @AT@ 8203 @LENGTH@ 11


INS ExpressionStatement@@MethodInvocation:endpoint.configureProperties(parameters) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 2371 @LENGTH@ 41
---INS MethodInvocation@@endpoint.configureProperties(parameters) @TO@ ExpressionStatement@@MethodInvocation:endpoint.configureProperties(parameters) @AT@ 2371 @LENGTH@ 40
------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.configureProperties(parameters) @AT@ 2371 @LENGTH@ 8
------INS SimpleName@@MethodName:configureProperties:[parameters] @TO@ MethodInvocation@@endpoint.configureProperties(parameters) @AT@ 2380 @LENGTH@ 31
---------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:configureProperties:[parameters] @AT@ 2400 @LENGTH@ 10


UPD SwitchCase@@case HazelcastConstants.GET_AND_ADD: @TO@ case HazelcastConstants.GET_AND_ADD_OPERATION: @AT@ 2512 @LENGTH@ 36
---UPD QualifiedName@@HazelcastConstants.GET_AND_ADD @TO@ HazelcastConstants.GET_AND_ADD_OPERATION @AT@ 2517 @LENGTH@ 30
------UPD SimpleName@@GET_AND_ADD @TO@ GET_AND_ADD_OPERATION @AT@ 2536 @LENGTH@ 11


UPD IfStatement@@if (n == -1) {  break;} else if (n > 0) {  dst.put(tmp,pos,n);  pos+=n;  total+=n;} @TO@ if (n == -1) {  if (total == 0) {    total=-1;  }  break;} else if (n > 0) {  dst.put(tmp,pos,n);  pos+=n;  total+=n;} @AT@ 642 @LENGTH@ 131
---UPD Block@@ThenBody:{  break;} @TO@ ThenBody:{  if (total == 0) {    total=-1;  }  break;} @AT@ 655 @LENGTH@ 24
------INS IfStatement@@if (total == 0) {  total=-1;} @TO@ Block@@ThenBody:{  break;} @AT@ 1472 @LENGTH@ 49
---------INS InfixExpression@@total == 0 @TO@ IfStatement@@if (total == 0) {  total=-1;} @AT@ 1476 @LENGTH@ 10
------------INS SimpleName@@total @TO@ InfixExpression@@total == 0 @AT@ 1476 @LENGTH@ 5
------------INS Operator@@== @TO@ InfixExpression@@total == 0 @AT@ 1481 @LENGTH@ 2
------------INS NumberLiteral@@0 @TO@ InfixExpression@@total == 0 @AT@ 1485 @LENGTH@ 1
---------INS Block@@ThenBody:{  total=-1;} @TO@ IfStatement@@if (total == 0) {  total=-1;} @AT@ 1488 @LENGTH@ 33
------------INS ExpressionStatement@@Assignment:total=-1 @TO@ Block@@ThenBody:{  total=-1;} @AT@ 1500 @LENGTH@ 11
---------------INS Assignment@@total=-1 @TO@ ExpressionStatement@@Assignment:total=-1 @AT@ 1500 @LENGTH@ 10
------------------INS SimpleName@@total @TO@ Assignment@@total=-1 @AT@ 1500 @LENGTH@ 5
------------------INS Operator@@= @TO@ Assignment@@total=-1 @AT@ 1505 @LENGTH@ 1
------------------INS PrefixExpression@@-1 @TO@ Assignment@@total=-1 @AT@ 1508 @LENGTH@ 2
---------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 1508 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 1509 @LENGTH@ 1


UPD SuperConstructorInvocation@@super(ModelElement.SUPPORTED_TYPES,ModelElement.SUPPORTED_TYPES.getName(),new IDMConfigAddStepHandler(attributes),attributes);
 @TO@ super(ModelElement.SUPPORTED_TYPES,new IDMConfigAddStepHandler(attributes),attributes);
 @AT@ 2071 @LENGTH@ 129
---DEL MethodInvocation@@ModelElement.SUPPORTED_TYPES.getName() @AT@ 2107 @LENGTH@ 38
------DEL QualifiedName@@Name:ModelElement.SUPPORTED_TYPES @AT@ 2107 @LENGTH@ 28
------DEL SimpleName@@MethodName:getName:[] @AT@ 2136 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:jetty.setHttpBinding(httpBinding) @TO@ MethodInvocation:jetty.setHeaderFilterStrategy(filterStrat) @AT@ 4286 @LENGTH@ 34
---UPD MethodInvocation@@jetty.setHttpBinding(httpBinding) @TO@ jetty.setHeaderFilterStrategy(filterStrat) @AT@ 4286 @LENGTH@ 33
------UPD SimpleName@@MethodName:setHttpBinding:[httpBinding] @TO@ MethodName:setHeaderFilterStrategy:[filterStrat] @AT@ 4292 @LENGTH@ 27
---------UPD SimpleName@@httpBinding @TO@ filterStrat @AT@ 4307 @LENGTH@ 11


UPD FieldDeclaration@@public, static, final, String, [MOCK_EXPIRED_ADVISORY="mock:expiredAdvisory"] @TO@ private, static, final, String, [MOCK_EXPIRED_ADVISORY="mock:expiredAdvisory"] @AT@ 1700 @LENGTH@ 74
---UPD Modifier@@public @TO@ private @AT@ 1700 @LENGTH@ 6


UPD IfStatement@@if (refreshTokenValiditySeconds != other.refreshTokenValiditySeconds) return false; @TO@ if (refreshTokenValiditySeconds == null) {  if (other.refreshTokenValiditySeconds != null)   return false;} else if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @AT@ 12351 @LENGTH@ 86
---DEL InfixExpression@@refreshTokenValiditySeconds != other.refreshTokenValiditySeconds @AT@ 12355 @LENGTH@ 64
------DEL QualifiedName@@other.refreshTokenValiditySeconds @AT@ 12386 @LENGTH@ 33
---INS InfixExpression@@refreshTokenValiditySeconds == null @TO@ IfStatement@@if (refreshTokenValiditySeconds != other.refreshTokenValiditySeconds) return false; @AT@ 12479 @LENGTH@ 35
------MOV SimpleName@@refreshTokenValiditySeconds @TO@ InfixExpression@@refreshTokenValiditySeconds == null @AT@ 12355 @LENGTH@ 27
------INS Operator@@== @TO@ InfixExpression@@refreshTokenValiditySeconds == null @AT@ 12506 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@refreshTokenValiditySeconds == null @AT@ 12510 @LENGTH@ 4
---INS Block@@ThenBody:{  if (other.refreshTokenValiditySeconds != null)   return false;} @TO@ IfStatement@@if (refreshTokenValiditySeconds != other.refreshTokenValiditySeconds) return false; @AT@ 12516 @LENGTH@ 73
------INS IfStatement@@if (other.refreshTokenValiditySeconds != null) return false; @TO@ Block@@ThenBody:{  if (other.refreshTokenValiditySeconds != null)   return false;} @AT@ 12521 @LENGTH@ 64
---------INS InfixExpression@@other.refreshTokenValiditySeconds != null @TO@ IfStatement@@if (other.refreshTokenValiditySeconds != null) return false; @AT@ 12525 @LENGTH@ 41
------------MOV Operator@@!= @TO@ InfixExpression@@other.refreshTokenValiditySeconds != null @AT@ 12382 @LENGTH@ 2
------------INS QualifiedName@@other.refreshTokenValiditySeconds @TO@ InfixExpression@@other.refreshTokenValiditySeconds != null @AT@ 12525 @LENGTH@ 33
---------------INS SimpleName@@other @TO@ QualifiedName@@other.refreshTokenValiditySeconds @AT@ 12525 @LENGTH@ 5
---------------INS SimpleName@@refreshTokenValiditySeconds @TO@ QualifiedName@@other.refreshTokenValiditySeconds @AT@ 12531 @LENGTH@ 27
------------INS NullLiteral@@null @TO@ InfixExpression@@other.refreshTokenValiditySeconds != null @AT@ 12562 @LENGTH@ 4
---------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (other.refreshTokenValiditySeconds != null) return false; @AT@ 12572 @LENGTH@ 13
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 12572 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 12579 @LENGTH@ 5
---INS Block@@ElseBody:if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @TO@ IfStatement@@if (refreshTokenValiditySeconds != other.refreshTokenValiditySeconds) return false; @AT@ 12595 @LENGTH@ 92
------INS IfStatement@@if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @TO@ Block@@ElseBody:if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @AT@ 12595 @LENGTH@ 92
---------INS PrefixExpression@@!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @TO@ IfStatement@@if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @AT@ 12599 @LENGTH@ 70
------------INS Operator@@! @TO@ PrefixExpression@@!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @AT@ 12599 @LENGTH@ 1
------------INS MethodInvocation@@refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @TO@ PrefixExpression@@!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @AT@ 12600 @LENGTH@ 69
---------------INS SimpleName@@Name:refreshTokenValiditySeconds @TO@ MethodInvocation@@refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @AT@ 12600 @LENGTH@ 27
---------------INS SimpleName@@MethodName:equals:[other.refreshTokenValiditySeconds] @TO@ MethodInvocation@@refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds) @AT@ 12628 @LENGTH@ 41
------------------INS QualifiedName@@other.refreshTokenValiditySeconds @TO@ SimpleName@@MethodName:equals:[other.refreshTokenValiditySeconds] @AT@ 12635 @LENGTH@ 33
---------------------MOV SimpleName@@other @TO@ QualifiedName@@other.refreshTokenValiditySeconds @AT@ 12386 @LENGTH@ 5
---------------------MOV SimpleName@@refreshTokenValiditySeconds @TO@ QualifiedName@@other.refreshTokenValiditySeconds @AT@ 12392 @LENGTH@ 27
---------INS Block@@ThenBody:return false; @TO@ IfStatement@@if (!refreshTokenValiditySeconds.equals(other.refreshTokenValiditySeconds)) return false; @AT@ 12674 @LENGTH@ 13
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:return false; @AT@ 12674 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 12681 @LENGTH@ 5


INS IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @TO@ MethodDeclaration@@protected, void, MethodName:populateResponse, Exchange exchange, HttpRequestBase httpRequest, HttpResponse httpResponse, Message in, HeaderFilterStrategy strategy, int responseCode, IOException, ClassNotFoundException,  @AT@ 9931 @LENGTH@ 152
---INS MethodInvocation@@getEndpoint().isCopyHeaders() @TO@ IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9935 @LENGTH@ 29
------INS MethodInvocation@@MethodName:getEndpoint:[] @TO@ MethodInvocation@@getEndpoint().isCopyHeaders() @AT@ 9935 @LENGTH@ 13
------INS SimpleName@@MethodName:isCopyHeaders:[] @TO@ MethodInvocation@@getEndpoint().isCopyHeaders() @AT@ 9949 @LENGTH@ 15
---INS Block@@ThenBody:{  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @TO@ IfStatement@@if (getEndpoint().isCopyHeaders()) {  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9966 @LENGTH@ 117
------MOV ExpressionStatement@@MethodInvocation:MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false) @TO@ Block@@ThenBody:{  MessageHelper.copyHeaders(exchange.getIn(),answer,httpProtocolHeaderFilterStrategy,false);} @AT@ 9932 @LENGTH@ 93


INS MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @TO@ TypeDeclaration@@[public]RepositoryRestHandlerMapping, BasePathAwareHandlerMapping @AT@ 5215 @LENGTH@ 468
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5215 @LENGTH@ 9
---INS SimpleType@@ProducesRequestCondition @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5225 @LENGTH@ 24
---INS SimpleName@@MethodName:customize @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5250 @LENGTH@ 9
---INS SingleVariableDeclaration@@ProducesRequestCondition condition @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5260 @LENGTH@ 34
------INS SimpleType@@ProducesRequestCondition @TO@ SingleVariableDeclaration@@ProducesRequestCondition condition @AT@ 5260 @LENGTH@ 24
------INS SimpleName@@condition @TO@ SingleVariableDeclaration@@ProducesRequestCondition condition @AT@ 5285 @LENGTH@ 9
---INS IfStatement@@if (!condition.isEmpty()) {  return condition;} @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5301 @LENGTH@ 52
------INS PrefixExpression@@!condition.isEmpty() @TO@ IfStatement@@if (!condition.isEmpty()) {  return condition;} @AT@ 5305 @LENGTH@ 20
---------INS Operator@@! @TO@ PrefixExpression@@!condition.isEmpty() @AT@ 5305 @LENGTH@ 1
---------INS MethodInvocation@@condition.isEmpty() @TO@ PrefixExpression@@!condition.isEmpty() @AT@ 5306 @LENGTH@ 19
------------INS SimpleName@@Name:condition @TO@ MethodInvocation@@condition.isEmpty() @AT@ 5306 @LENGTH@ 9
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@condition.isEmpty() @AT@ 5316 @LENGTH@ 9
------INS Block@@ThenBody:{  return condition;} @TO@ IfStatement@@if (!condition.isEmpty()) {  return condition;} @AT@ 5327 @LENGTH@ 26
---------INS ReturnStatement@@SimpleName:condition @TO@ Block@@ThenBody:{  return condition;} @AT@ 5332 @LENGTH@ 17
------------INS SimpleName@@condition @TO@ ReturnStatement@@SimpleName:condition @AT@ 5339 @LENGTH@ 9
---INS VariableDeclarationStatement@@HashSet<String> mediaTypes=new LinkedHashSet<String>(); @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5357 @LENGTH@ 57
------INS ParameterizedType@@HashSet<String> @TO@ VariableDeclarationStatement@@HashSet<String> mediaTypes=new LinkedHashSet<String>(); @AT@ 5357 @LENGTH@ 15
---------INS SimpleType@@HashSet @TO@ ParameterizedType@@HashSet<String> @AT@ 5357 @LENGTH@ 7
---------INS SimpleType@@String @TO@ ParameterizedType@@HashSet<String> @AT@ 5365 @LENGTH@ 6
------INS VariableDeclarationFragment@@mediaTypes=new LinkedHashSet<String>() @TO@ VariableDeclarationStatement@@HashSet<String> mediaTypes=new LinkedHashSet<String>(); @AT@ 5373 @LENGTH@ 40
---------INS SimpleName@@mediaTypes @TO@ VariableDeclarationFragment@@mediaTypes=new LinkedHashSet<String>() @AT@ 5373 @LENGTH@ 10
---------INS ClassInstanceCreation@@LinkedHashSet<String>[] @TO@ VariableDeclarationFragment@@mediaTypes=new LinkedHashSet<String>() @AT@ 5386 @LENGTH@ 27
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashSet<String>[] @AT@ 5386 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashSet<String> @TO@ ClassInstanceCreation@@LinkedHashSet<String>[] @AT@ 5390 @LENGTH@ 21
---------------INS SimpleType@@LinkedHashSet @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 5390 @LENGTH@ 13
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashSet<String> @AT@ 5404 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:mediaTypes.add(configuration.getDefaultMediaType().toString()) @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5417 @LENGTH@ 63
------INS MethodInvocation@@mediaTypes.add(configuration.getDefaultMediaType().toString()) @TO@ ExpressionStatement@@MethodInvocation:mediaTypes.add(configuration.getDefaultMediaType().toString()) @AT@ 5417 @LENGTH@ 62
---------INS SimpleName@@Name:mediaTypes @TO@ MethodInvocation@@mediaTypes.add(configuration.getDefaultMediaType().toString()) @AT@ 5417 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[configuration.getDefaultMediaType().toString()] @TO@ MethodInvocation@@mediaTypes.add(configuration.getDefaultMediaType().toString()) @AT@ 5428 @LENGTH@ 51
------------INS MethodInvocation@@configuration.getDefaultMediaType().toString() @TO@ SimpleName@@MethodName:add:[configuration.getDefaultMediaType().toString()] @AT@ 5432 @LENGTH@ 46
---------------INS MethodInvocation@@MethodName:getDefaultMediaType:[] @TO@ MethodInvocation@@configuration.getDefaultMediaType().toString() @AT@ 5432 @LENGTH@ 35
---------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getDefaultMediaType().toString() @AT@ 5432 @LENGTH@ 13
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@configuration.getDefaultMediaType().toString() @AT@ 5468 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:mediaTypes.add(MediaType.APPLICATION_JSON_VALUE) @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5483 @LENGTH@ 49
------INS MethodInvocation@@mediaTypes.add(MediaType.APPLICATION_JSON_VALUE) @TO@ ExpressionStatement@@MethodInvocation:mediaTypes.add(MediaType.APPLICATION_JSON_VALUE) @AT@ 5483 @LENGTH@ 48
---------INS SimpleName@@Name:mediaTypes @TO@ MethodInvocation@@mediaTypes.add(MediaType.APPLICATION_JSON_VALUE) @AT@ 5483 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[MediaType.APPLICATION_JSON_VALUE] @TO@ MethodInvocation@@mediaTypes.add(MediaType.APPLICATION_JSON_VALUE) @AT@ 5494 @LENGTH@ 37
------------INS QualifiedName@@MediaType.APPLICATION_JSON_VALUE @TO@ SimpleName@@MethodName:add:[MediaType.APPLICATION_JSON_VALUE] @AT@ 5498 @LENGTH@ 32
---------------INS SimpleName@@MediaType @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 5498 @LENGTH@ 9
---------------INS SimpleName@@APPLICATION_JSON_VALUE @TO@ QualifiedName@@MediaType.APPLICATION_JSON_VALUE @AT@ 5508 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:mediaTypes.add(EVERYTHING_JSON_MEDIA_TYPE.toString()) @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5535 @LENGTH@ 54
------INS MethodInvocation@@mediaTypes.add(EVERYTHING_JSON_MEDIA_TYPE.toString()) @TO@ ExpressionStatement@@MethodInvocation:mediaTypes.add(EVERYTHING_JSON_MEDIA_TYPE.toString()) @AT@ 5535 @LENGTH@ 53
---------INS SimpleName@@Name:mediaTypes @TO@ MethodInvocation@@mediaTypes.add(EVERYTHING_JSON_MEDIA_TYPE.toString()) @AT@ 5535 @LENGTH@ 10
---------INS SimpleName@@MethodName:add:[EVERYTHING_JSON_MEDIA_TYPE.toString()] @TO@ MethodInvocation@@mediaTypes.add(EVERYTHING_JSON_MEDIA_TYPE.toString()) @AT@ 5546 @LENGTH@ 42
------------INS MethodInvocation@@EVERYTHING_JSON_MEDIA_TYPE.toString() @TO@ SimpleName@@MethodName:add:[EVERYTHING_JSON_MEDIA_TYPE.toString()] @AT@ 5550 @LENGTH@ 37
---------------INS SimpleName@@Name:EVERYTHING_JSON_MEDIA_TYPE @TO@ MethodInvocation@@EVERYTHING_JSON_MEDIA_TYPE.toString() @AT@ 5550 @LENGTH@ 26
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@EVERYTHING_JSON_MEDIA_TYPE.toString() @AT@ 5577 @LENGTH@ 10
---INS ReturnStatement@@ClassInstanceCreation:new ProducesRequestCondition(mediaTypes.toArray(new String[mediaTypes.size()])) @TO@ MethodDeclaration@@protected, ProducesRequestCondition, MethodName:customize, ProducesRequestCondition condition,  @AT@ 5593 @LENGTH@ 87
------INS ClassInstanceCreation@@ProducesRequestCondition[mediaTypes.toArray(new String[mediaTypes.size()])] @TO@ ReturnStatement@@ClassInstanceCreation:new ProducesRequestCondition(mediaTypes.toArray(new String[mediaTypes.size()])) @AT@ 5600 @LENGTH@ 79
---------INS New@@new @TO@ ClassInstanceCreation@@ProducesRequestCondition[mediaTypes.toArray(new String[mediaTypes.size()])] @AT@ 5600 @LENGTH@ 3
---------INS SimpleType@@ProducesRequestCondition @TO@ ClassInstanceCreation@@ProducesRequestCondition[mediaTypes.toArray(new String[mediaTypes.size()])] @AT@ 5604 @LENGTH@ 24
---------INS MethodInvocation@@mediaTypes.toArray(new String[mediaTypes.size()]) @TO@ ClassInstanceCreation@@ProducesRequestCondition[mediaTypes.toArray(new String[mediaTypes.size()])] @AT@ 5629 @LENGTH@ 49
------------INS SimpleName@@Name:mediaTypes @TO@ MethodInvocation@@mediaTypes.toArray(new String[mediaTypes.size()]) @AT@ 5629 @LENGTH@ 10
------------INS SimpleName@@MethodName:toArray:[new String[mediaTypes.size()]] @TO@ MethodInvocation@@mediaTypes.toArray(new String[mediaTypes.size()]) @AT@ 5640 @LENGTH@ 38
---------------INS ArrayCreation@@new String[mediaTypes.size()] @TO@ SimpleName@@MethodName:toArray:[new String[mediaTypes.size()]] @AT@ 5648 @LENGTH@ 29
------------------INS ArrayType@@String[] @TO@ ArrayCreation@@new String[mediaTypes.size()] @AT@ 5652 @LENGTH@ 25
---------------------INS SimpleType@@String @TO@ ArrayType@@String[] @AT@ 5652 @LENGTH@ 6
------------------INS MethodInvocation@@mediaTypes.size() @TO@ ArrayCreation@@new String[mediaTypes.size()] @AT@ 5659 @LENGTH@ 17
---------------------INS SimpleName@@Name:mediaTypes @TO@ MethodInvocation@@mediaTypes.size() @AT@ 5659 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@mediaTypes.size() @AT@ 5670 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.failedToDestroy(e,"queue",queueName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.failedToDestroy(e,"queue",queueName) @AT@ 4157 @LENGTH@ 56
---UPD MethodInvocation@@MESSAGING_LOGGER.failedToDestroy(e,"queue",queueName) @TO@ MessagingLogger.ROOT_LOGGER.failedToDestroy(e,"queue",queueName) @AT@ 4157 @LENGTH@ 55
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.failedToDestroy(e,"queue",queueName) @AT@ 4060 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 4157 @LENGTH@ 16


UPD MethodDeclaration@@protected, boolean, MethodName:isEnableJmx,  @TO@ protected, boolean, MethodName:useJmx,  @AT@ 1001 @LENGTH@ 60
---UPD SimpleName@@MethodName:isEnableJmx @TO@ MethodName:useJmx @AT@ 1019 @LENGTH@ 11


UPD MethodDeclaration@@public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service,  @TO@ public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service, final ServiceName... dependencies,  @AT@ 3548 @LENGTH@ 798
---INS SingleVariableDeclaration@@final ServiceName... dependencies @TO@ MethodDeclaration@@public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service,  @AT@ 3887 @LENGTH@ 33
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final ServiceName... dependencies @AT@ 3887 @LENGTH@ 5
------INS SimpleType@@ServiceName @TO@ SingleVariableDeclaration@@final ServiceName... dependencies @AT@ 3893 @LENGTH@ 11
------INS SimpleName@@dependencies @TO@ SingleVariableDeclaration@@final ServiceName... dependencies @AT@ 3908 @LENGTH@ 12
---DEL ExpressionStatement@@MethodInvocation:serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 3920 @LENGTH@ 420
---INS VariableDeclarationStatement@@final ServiceBuilder serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE); @TO@ MethodDeclaration@@public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service,  @AT@ 4086 @LENGTH@ 752
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceBuilder serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE); @AT@ 4086 @LENGTH@ 5
------INS SimpleType@@ServiceBuilder @TO@ VariableDeclarationStatement@@final ServiceBuilder serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE); @AT@ 4092 @LENGTH@ 14
------INS VariableDeclarationFragment@@serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE) @TO@ VariableDeclarationStatement@@final ServiceBuilder serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE); @AT@ 4107 @LENGTH@ 730
---------MOV MethodInvocation@@serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.ACTIVE).install() @TO@ VariableDeclarationFragment@@serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE) @AT@ 3920 @LENGTH@ 419
------------DEL MethodInvocation@@MethodName:setInitialMode:[ServiceController.Mode.ACTIVE] @AT@ 3920 @LENGTH@ 392
---------------DEL QualifiedName@@ServiceController.Mode.ACTIVE @AT@ 4282 @LENGTH@ 29
------------DEL SimpleName@@MethodName:install:[] @AT@ 4330 @LENGTH@ 9
------------INS SimpleName@@MethodName:setInitialMode:[ServiceController.Mode.PASSIVE] @TO@ MethodInvocation@@serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.ACTIVE).install() @AT@ 4791 @LENGTH@ 46
---------------INS QualifiedName@@ServiceController.Mode.PASSIVE @TO@ SimpleName@@MethodName:setInitialMode:[ServiceController.Mode.PASSIVE] @AT@ 4806 @LENGTH@ 30
------------------MOV QualifiedName@@ServiceController.Mode @TO@ QualifiedName@@ServiceController.Mode.PASSIVE @AT@ 4282 @LENGTH@ 22
------------------MOV QualifiedName@@ServiceController.Mode @TO@ QualifiedName@@ServiceController.Mode.PASSIVE @AT@ 4282 @LENGTH@ 22
------------------MOV SimpleName@@ACTIVE @TO@ QualifiedName@@ServiceController.Mode.PASSIVE @AT@ 4305 @LENGTH@ 6
------------------MOV SimpleName@@ACTIVE @TO@ QualifiedName@@ServiceController.Mode.PASSIVE @AT@ 4305 @LENGTH@ 6
---------INS SimpleName@@serviceBuilder @TO@ VariableDeclarationFragment@@serviceBuilder=serviceTarget.addService(bindInfo.getBinderServiceName(),binderService).addDependency(bindInfo.getParentContextServiceName(),ServiceBasedNamingStore.class,binderService.getNamingStoreInjector()).addInjection(binderService.getManagedObjectInjector(),new ValueManagedReferenceFactory(service)).setInitialMode(ServiceController.Mode.PASSIVE) @AT@ 4107 @LENGTH@ 14
---INS IfStatement@@if (dependencies != null && dependencies.length > 0) {  serviceBuilder.addDependencies(dependencies);} @TO@ MethodDeclaration@@public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service,  @AT@ 4847 @LENGTH@ 122
------INS InfixExpression@@dependencies != null && dependencies.length > 0 @TO@ IfStatement@@if (dependencies != null && dependencies.length > 0) {  serviceBuilder.addDependencies(dependencies);} @AT@ 4851 @LENGTH@ 47
---------INS InfixExpression@@dependencies != null @TO@ InfixExpression@@dependencies != null && dependencies.length > 0 @AT@ 4851 @LENGTH@ 20
------------INS SimpleName@@dependencies @TO@ InfixExpression@@dependencies != null @AT@ 4851 @LENGTH@ 12
------------INS Operator@@!= @TO@ InfixExpression@@dependencies != null @AT@ 4863 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@dependencies != null @AT@ 4867 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@dependencies != null && dependencies.length > 0 @AT@ 4871 @LENGTH@ 2
---------INS InfixExpression@@dependencies.length > 0 @TO@ InfixExpression@@dependencies != null && dependencies.length > 0 @AT@ 4875 @LENGTH@ 23
------------INS QualifiedName@@dependencies.length @TO@ InfixExpression@@dependencies.length > 0 @AT@ 4875 @LENGTH@ 19
---------------INS SimpleName@@dependencies @TO@ QualifiedName@@dependencies.length @AT@ 4875 @LENGTH@ 12
---------------INS SimpleName@@length @TO@ QualifiedName@@dependencies.length @AT@ 4888 @LENGTH@ 6
------------INS Operator@@> @TO@ InfixExpression@@dependencies.length > 0 @AT@ 4894 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ InfixExpression@@dependencies.length > 0 @AT@ 4897 @LENGTH@ 1
------INS Block@@ThenBody:{  serviceBuilder.addDependencies(dependencies);} @TO@ IfStatement@@if (dependencies != null && dependencies.length > 0) {  serviceBuilder.addDependencies(dependencies);} @AT@ 4900 @LENGTH@ 69
---------INS ExpressionStatement@@MethodInvocation:serviceBuilder.addDependencies(dependencies) @TO@ Block@@ThenBody:{  serviceBuilder.addDependencies(dependencies);} @AT@ 4914 @LENGTH@ 45
------------INS MethodInvocation@@serviceBuilder.addDependencies(dependencies) @TO@ ExpressionStatement@@MethodInvocation:serviceBuilder.addDependencies(dependencies) @AT@ 4914 @LENGTH@ 44
---------------INS SimpleName@@Name:serviceBuilder @TO@ MethodInvocation@@serviceBuilder.addDependencies(dependencies) @AT@ 4914 @LENGTH@ 14
---------------INS SimpleName@@MethodName:addDependencies:[dependencies] @TO@ MethodInvocation@@serviceBuilder.addDependencies(dependencies) @AT@ 4929 @LENGTH@ 29
------------------INS SimpleName@@dependencies @TO@ SimpleName@@MethodName:addDependencies:[dependencies] @AT@ 4945 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:serviceBuilder.install() @TO@ MethodDeclaration@@public, static, void, MethodName:installBinderService, final ServiceTarget serviceTarget, final String name, final Service<?> service,  @AT@ 4978 @LENGTH@ 25
------INS MethodInvocation@@serviceBuilder.install() @TO@ ExpressionStatement@@MethodInvocation:serviceBuilder.install() @AT@ 4978 @LENGTH@ 24
---------INS SimpleName@@Name:serviceBuilder @TO@ MethodInvocation@@serviceBuilder.install() @AT@ 4978 @LENGTH@ 14
---------INS SimpleName@@MethodName:install:[] @TO@ MethodInvocation@@serviceBuilder.install() @AT@ 4993 @LENGTH@ 9


UPD FieldDeclaration@@private, static, String, [payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root xmlns=\"http://test/test\"><test>Test Message</test></root>"] @TO@ private, static, String, [payload] @AT@ 3183 @LENGTH@ 144
---UPD VariableDeclarationFragment@@payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @TO@ payload @AT@ 3205 @LENGTH@ 121
------DEL StringLiteral@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 3215 @LENGTH@ 111


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 14764 @LENGTH@ 133
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 14764 @LENGTH@ 132
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 14764 @LENGTH@ 109
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 14768 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 14768 @LENGTH@ 32
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor, handler] @AT@ 14803 @LENGTH@ 42
------------DEL New@@new @AT@ 14803 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 14807 @LENGTH@ 17
------------DEL SimpleName@@descriptor @AT@ 14825 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 14837 @LENGTH@ 7
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 14845 @LENGTH@ 10
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 14857 @LENGTH@ 7


UPD FieldDeclaration@@public, static, AttributeDefinition, [EXCLUDED_CONNECTORS=new StringListAttributeDefinition.Builder("excluded-connectors").setAllowNull(true).setAttributeMarshaller(AttributeMarshaller.STRING_LIST).setAttributeParser(AttributeParser.STRING_LIST).setRestartAllServices().build()] @TO@ public, static, StringListAttributeDefinition, [EXCLUDED_CONNECTORS=new StringListAttributeDefinition.Builder("excluded-connectors").setAllowNull(true).setAttributeMarshaller(AttributeMarshaller.STRING_LIST).setAttributeParser(AttributeParser.STRING_LIST).setRestartAllServices().build()] @AT@ 4175 @LENGTH@ 341
---UPD SimpleType@@AttributeDefinition @TO@ StringListAttributeDefinition @AT@ 4189 @LENGTH@ 19


UPD VariableDeclarationStatement@@Iterator namespaces=element.getAllDeclaredNamespaces(); @TO@ Iterator<?> namespaces=element.getAllDeclaredNamespaces(); @AT@ 10307 @LENGTH@ 57
---INS ParameterizedType@@Iterator<?> @TO@ VariableDeclarationStatement@@Iterator namespaces=element.getAllDeclaredNamespaces(); @AT@ 10307 @LENGTH@ 11
------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<?> @AT@ 10307 @LENGTH@ 8
------INS WildcardType@@? @TO@ ParameterizedType@@Iterator<?> @AT@ 10316 @LENGTH@ 1
---DEL SimpleType@@Iterator @AT@ 10307 @LENGTH@ 8


INS VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @TO@ MethodDeclaration@@public, void, MethodName:deploy, final DeploymentPhaseContext phaseContext, DeploymentUnitProcessingException,  @AT@ 3453 @LENGTH@ 130
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 3453 @LENGTH@ 5
---INS SimpleType@@DeploymentResourceSupport @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 3459 @LENGTH@ 25
---INS VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 3485 @LENGTH@ 97
------INS SimpleName@@deploymentResourceSupport @TO@ VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 3485 @LENGTH@ 25
------INS MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @TO@ VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 3513 @LENGTH@ 69
---------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 3513 @LENGTH@ 14
---------INS SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_RESOURCE_SUPPORT] @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 3528 @LENGTH@ 54
------------INS QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @TO@ SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_RESOURCE_SUPPORT] @AT@ 3542 @LENGTH@ 39
---------------INS SimpleName@@Attachments @TO@ QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @AT@ 3542 @LENGTH@ 11
---------------INS SimpleName@@DEPLOYMENT_RESOURCE_SUPPORT @TO@ QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @AT@ 3554 @LENGTH@ 27


UPD IfStatement@@if (channelTransacted & !channelLocallyTransacted) {  ConnectionFactoryUtils.registerDeliveryTag(getConnectionFactory(),channel,deliveryTag);} else {  channel.basicAck(deliveryTag,false);} @TO@ if (channelTransacted && !channelLocallyTransacted) {  ConnectionFactoryUtils.registerDeliveryTag(getConnectionFactory(),channel,deliveryTag);} else {  channel.basicAck(deliveryTag,false);} @AT@ 35860 @LENGTH@ 344
---UPD InfixExpression@@channelTransacted & !channelLocallyTransacted @TO@ channelTransacted && !channelLocallyTransacted @AT@ 35864 @LENGTH@ 45
------UPD Operator@@& @TO@ && @AT@ 35881 @LENGTH@ 1


UPD VariableDeclarationStatement@@PropertyPath path=PropertyPath.from(pathExpression,entity.getTypeInformation()); @TO@ PropertyPath path=PropertyPath.from(pathExpression.replaceAll("\\.\\d",""),entity.getTypeInformation()); @AT@ 24013 @LENGTH@ 83
---UPD VariableDeclarationFragment@@path=PropertyPath.from(pathExpression,entity.getTypeInformation()) @TO@ path=PropertyPath.from(pathExpression.replaceAll("\\.\\d",""),entity.getTypeInformation()) @AT@ 24026 @LENGTH@ 69
------UPD MethodInvocation@@PropertyPath.from(pathExpression,entity.getTypeInformation()) @TO@ PropertyPath.from(pathExpression.replaceAll("\\.\\d",""),entity.getTypeInformation()) @AT@ 24033 @LENGTH@ 62
---------UPD SimpleName@@MethodName:from:[pathExpression, entity.getTypeInformation()] @TO@ MethodName:from:[pathExpression.replaceAll("\\.\\d",""), entity.getTypeInformation()] @AT@ 24046 @LENGTH@ 49
------------INS MethodInvocation@@pathExpression.replaceAll("\\.\\d","") @TO@ SimpleName@@MethodName:from:[pathExpression, entity.getTypeInformation()] @AT@ 24051 @LENGTH@ 39
---------------INS SimpleName@@Name:pathExpression @TO@ MethodInvocation@@pathExpression.replaceAll("\\.\\d","") @AT@ 24051 @LENGTH@ 14
---------------INS SimpleName@@MethodName:replaceAll:["\\.\\d", ""] @TO@ MethodInvocation@@pathExpression.replaceAll("\\.\\d","") @AT@ 24066 @LENGTH@ 24
------------------INS StringLiteral@@"\\.\\d" @TO@ SimpleName@@MethodName:replaceAll:["\\.\\d", ""] @AT@ 24077 @LENGTH@ 8
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replaceAll:["\\.\\d", ""] @AT@ 24087 @LENGTH@ 2
------------DEL SimpleName@@pathExpression @AT@ 24051 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:this.redirectStrategy.sendRedirect(request,response,builder.build().toUriString()) @TO@ MethodInvocation:this.redirectStrategy.sendRedirect(request,response,builder.build().encode().toUriString()) @AT@ 3819 @LENGTH@ 90
---UPD MethodInvocation@@this.redirectStrategy.sendRedirect(request,response,builder.build().toUriString()) @TO@ this.redirectStrategy.sendRedirect(request,response,builder.build().encode().toUriString()) @AT@ 3819 @LENGTH@ 89
------UPD SimpleName@@MethodName:sendRedirect:[request, response, builder.build().toUriString()] @TO@ MethodName:sendRedirect:[request, response, builder.build().encode().toUriString()] @AT@ 3841 @LENGTH@ 67
---------UPD MethodInvocation@@builder.build().toUriString() @TO@ builder.build().encode().toUriString() @AT@ 3873 @LENGTH@ 34
------------INS MethodInvocation@@MethodName:encode:[] @TO@ MethodInvocation@@builder.build().toUriString() @AT@ 3873 @LENGTH@ 29


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("Gven sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty())) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Given sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty())) @AT@ 4645 @LENGTH@ 198
---UPD ClassInstanceCreation@@IllegalArgumentException[String.format("Gven sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty())] @TO@ IllegalArgumentException[String.format("Given sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty())] @AT@ 4651 @LENGTH@ 191
------UPD MethodInvocation@@String.format("Gven sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty()) @TO@ String.format("Given sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!",order.getProperty()) @AT@ 4680 @LENGTH@ 161
---------UPD SimpleName@@MethodName:format:["Gven sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!", order.getProperty()] @TO@ MethodName:format:["Given sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!", order.getProperty()] @AT@ 4687 @LENGTH@ 154
------------UPD InfixExpression@@"Gven sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!" @TO@ "Given sort contained an Order for %s with ignore case! " + "MongoDB does not support sorting ignoreing case currently!" @AT@ 4694 @LENGTH@ 125
---------------UPD StringLiteral@@"Gven sort contained an Order for %s with ignore case! " @TO@ "Given sort contained an Order for %s with ignore case! " @AT@ 4694 @LENGTH@ 56


UPD VariableDeclarationStatement@@String topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class); @TO@ String topic=endpoint.getTopic(); @AT@ 2093 @LENGTH@ 99
---UPD VariableDeclarationFragment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @TO@ topic=endpoint.getTopic() @AT@ 2100 @LENGTH@ 91
------INS MethodInvocation@@endpoint.getTopic() @TO@ VariableDeclarationFragment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @AT@ 2108 @LENGTH@ 19
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getTopic() @AT@ 2108 @LENGTH@ 8
---------INS SimpleName@@MethodName:getTopic:[] @TO@ MethodInvocation@@endpoint.getTopic() @AT@ 2117 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:autoDeclareFanout,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=EnableRabbitIntegrationTests.EnableRabbitConfig.class), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext, public]EnableRabbitIntegrationTests,  @AT@ 3855 @LENGTH@ 131
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:autoDeclareFanout,  @AT@ 3855 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:autoDeclareFanout,  @AT@ 3862 @LENGTH@ 4
---INS SimpleName@@MethodName:autoDeclareFanout @TO@ MethodDeclaration@@public, void, MethodName:autoDeclareFanout,  @AT@ 3867 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertEquals("FOOFOO",rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")) @TO@ MethodDeclaration@@public, void, MethodName:autoDeclareFanout,  @AT@ 3891 @LENGTH@ 92
------INS MethodInvocation@@assertEquals("FOOFOO",rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("FOOFOO",rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")) @AT@ 3891 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertEquals:["FOOFOO", rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")] @TO@ MethodInvocation@@assertEquals("FOOFOO",rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")) @AT@ 3891 @LENGTH@ 91
------------INS StringLiteral@@"FOOFOO" @TO@ SimpleName@@MethodName:assertEquals:["FOOFOO", rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")] @AT@ 3904 @LENGTH@ 8
------------INS MethodInvocation@@rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo") @TO@ SimpleName@@MethodName:assertEquals:["FOOFOO", rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo")] @AT@ 3914 @LENGTH@ 67
---------------INS SimpleName@@Name:rabbitTemplate @TO@ MethodInvocation@@rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo") @AT@ 3914 @LENGTH@ 14
---------------INS SimpleName@@MethodName:convertSendAndReceive:["auto.exch.fanout", "", "foo"] @TO@ MethodInvocation@@rabbitTemplate.convertSendAndReceive("auto.exch.fanout","","foo") @AT@ 3929 @LENGTH@ 52
------------------INS StringLiteral@@"auto.exch.fanout" @TO@ SimpleName@@MethodName:convertSendAndReceive:["auto.exch.fanout", "", "foo"] @AT@ 3951 @LENGTH@ 18
------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:convertSendAndReceive:["auto.exch.fanout", "", "foo"] @AT@ 3971 @LENGTH@ 2
------------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:convertSendAndReceive:["auto.exch.fanout", "", "foo"] @AT@ 3975 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:EjbLogger.REMOTE_LOGGER.warn("Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(),ioe) @TO@ MethodInvocation:EjbLogger.REMOTE_LOGGER.couldNotSendClusterRemovalMessage(ioe,registry.getGroup(),channelAssociation.getChannel()) @AT@ 16512 @LENGTH@ 179
---UPD MethodInvocation@@EjbLogger.REMOTE_LOGGER.warn("Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(),ioe) @TO@ EjbLogger.REMOTE_LOGGER.couldNotSendClusterRemovalMessage(ioe,registry.getGroup(),channelAssociation.getChannel()) @AT@ 16512 @LENGTH@ 178
------UPD SimpleName@@MethodName:warn:["Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(), ioe] @TO@ MethodName:couldNotSendClusterRemovalMessage:[ioe, registry.getGroup(), channelAssociation.getChannel()] @AT@ 16536 @LENGTH@ 154
---------DEL InfixExpression@@"Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel() @AT@ 16541 @LENGTH@ 143
------------DEL StringLiteral@@"Could not send a cluster removal message for cluster: " @AT@ 16541 @LENGTH@ 56
------------DEL Operator@@+ @AT@ 16597 @LENGTH@ 1
------------DEL MethodInvocation@@registry.getGroup() @AT@ 16600 @LENGTH@ 19
------------DEL StringLiteral@@" to the client on channel " @AT@ 16622 @LENGTH@ 28
------------DEL MethodInvocation@@channelAssociation.getChannel() @AT@ 16653 @LENGTH@ 31
---------INS SimpleName@@ioe @TO@ SimpleName@@MethodName:warn:["Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(), ioe] @AT@ 16570 @LENGTH@ 3
---------INS MethodInvocation@@registry.getGroup() @TO@ SimpleName@@MethodName:warn:["Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(), ioe] @AT@ 16575 @LENGTH@ 19
------------MOV SimpleName@@Name:registry @TO@ MethodInvocation@@registry.getGroup() @AT@ 16600 @LENGTH@ 8
------------MOV SimpleName@@MethodName:getGroup:[] @TO@ MethodInvocation@@registry.getGroup() @AT@ 16609 @LENGTH@ 10
---------INS MethodInvocation@@channelAssociation.getChannel() @TO@ SimpleName@@MethodName:warn:["Could not send a cluster removal message for cluster: " + registry.getGroup() + " to the client on channel "+ channelAssociation.getChannel(), ioe] @AT@ 16596 @LENGTH@ 31
------------MOV SimpleName@@Name:channelAssociation @TO@ MethodInvocation@@channelAssociation.getChannel() @AT@ 16653 @LENGTH@ 18
------------MOV SimpleName@@MethodName:getChannel:[] @TO@ MethodInvocation@@channelAssociation.getChannel() @AT@ 16672 @LENGTH@ 12
---------DEL SimpleName@@ioe @AT@ 16686 @LENGTH@ 3


UPD EnhancedForStatement@@for (PropertyValue propertyValue : values.getPropertyValues()) {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} @TO@ for (PropertyValue propertyValue : values.getPropertyValues()) {  try {    PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);    if (bindings.isPathVisible(propertyPath)) {      Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);      builder.and(invokeBinding(propertyPath,bindings,value));    }  } catch (  PropertyReferenceException o_O) {  }} @AT@ 2498 @LENGTH@ 373
---INS TryStatement@@try {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} catch (PropertyReferenceException o_O) {} @TO@ EnhancedForStatement@@for (PropertyValue propertyValue : values.getPropertyValues()) {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} @AT@ 2635 @LENGTH@ 419
------MOV VariableDeclarationStatement@@PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type); @TO@ TryStatement@@try {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} catch (PropertyReferenceException o_O) {} @AT@ 2567 @LENGTH@ 77
------MOV IfStatement@@if (bindings.isPathVisible(propertyPath)) {  Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);  builder.and(invokeBinding(propertyPath,bindings,value));} @TO@ TryStatement@@try {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} catch (PropertyReferenceException o_O) {} @AT@ 2649 @LENGTH@ 218
------INS CatchClause@@catch (PropertyReferenceException o_O) {} @TO@ TryStatement@@try {  PropertyPath propertyPath=PropertyPath.from(propertyValue.getName(),type);  if (bindings.isPathVisible(propertyPath)) {    Collection<Object> value=convertToPropertyPathSpecificType(propertyValue.getValue(),propertyPath);    builder.and(invokeBinding(propertyPath,bindings,value));  }} catch (PropertyReferenceException o_O) {} @AT@ 2956 @LENGTH@ 98
---------INS SingleVariableDeclaration@@PropertyReferenceException o_O @TO@ CatchClause@@catch (PropertyReferenceException o_O) {} @AT@ 2963 @LENGTH@ 30
------------INS SimpleType@@PropertyReferenceException @TO@ SingleVariableDeclaration@@PropertyReferenceException o_O @AT@ 2963 @LENGTH@ 26
------------INS SimpleName@@o_O @TO@ SingleVariableDeclaration@@PropertyReferenceException o_O @AT@ 2990 @LENGTH@ 3


UPD IfStatement@@if (value == null) {  return;} @TO@ if (value == null || (entity.isConstructorArgument(property) && accessor.getProperty(property) != null)) {  return;} @AT@ 11961 @LENGTH@ 39
---INS InfixExpression@@value == null || (entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @TO@ IfStatement@@if (value == null) {  return;} @AT@ 11965 @LENGTH@ 99
------INS InfixExpression@@value == null @TO@ InfixExpression@@value == null || (entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @AT@ 11965 @LENGTH@ 13
---------MOV SimpleName@@value @TO@ InfixExpression@@value == null @AT@ 11965 @LENGTH@ 5
---------MOV Operator@@== @TO@ InfixExpression@@value == null @AT@ 11970 @LENGTH@ 2
---------MOV NullLiteral@@null @TO@ InfixExpression@@value == null @AT@ 11974 @LENGTH@ 4
------INS Operator@@|| @TO@ InfixExpression@@value == null || (entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @AT@ 11978 @LENGTH@ 2
------INS ParenthesizedExpression@@(entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @TO@ InfixExpression@@value == null || (entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @AT@ 11982 @LENGTH@ 82
---------INS InfixExpression@@entity.isConstructorArgument(property) && accessor.getProperty(property) != null @TO@ ParenthesizedExpression@@(entity.isConstructorArgument(property) && accessor.getProperty(property) != null) @AT@ 11983 @LENGTH@ 80
------------INS MethodInvocation@@entity.isConstructorArgument(property) @TO@ InfixExpression@@entity.isConstructorArgument(property) && accessor.getProperty(property) != null @AT@ 11983 @LENGTH@ 38
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.isConstructorArgument(property) @AT@ 11983 @LENGTH@ 6
---------------INS SimpleName@@MethodName:isConstructorArgument:[property] @TO@ MethodInvocation@@entity.isConstructorArgument(property) @AT@ 11990 @LENGTH@ 31
------------------INS SimpleName@@property @TO@ SimpleName@@MethodName:isConstructorArgument:[property] @AT@ 12012 @LENGTH@ 8
------------INS Operator@@&& @TO@ InfixExpression@@entity.isConstructorArgument(property) && accessor.getProperty(property) != null @AT@ 12021 @LENGTH@ 2
------------INS InfixExpression@@accessor.getProperty(property) != null @TO@ InfixExpression@@entity.isConstructorArgument(property) && accessor.getProperty(property) != null @AT@ 12025 @LENGTH@ 38
---------------INS MethodInvocation@@accessor.getProperty(property) @TO@ InfixExpression@@accessor.getProperty(property) != null @AT@ 12025 @LENGTH@ 30
------------------INS SimpleName@@Name:accessor @TO@ MethodInvocation@@accessor.getProperty(property) @AT@ 12025 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getProperty:[property] @TO@ MethodInvocation@@accessor.getProperty(property) @AT@ 12034 @LENGTH@ 21
---------------------INS SimpleName@@property @TO@ SimpleName@@MethodName:getProperty:[property] @AT@ 12046 @LENGTH@ 8
---------------INS Operator@@!= @TO@ InfixExpression@@accessor.getProperty(property) != null @AT@ 12055 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@accessor.getProperty(property) != null @AT@ 12059 @LENGTH@ 4
---DEL InfixExpression@@value == null @AT@ 11965 @LENGTH@ 13


UPD TryStatement@@try {  URI u=new URI(uri);  String json=getComponentParameterJsonSchema(u.getScheme());  if (json == null) {    return null;  }  List<Map<String,String>> rows=JsonSchemaHelper.parseJsonSchema("properties",json,true);  Map<String,String[]> selected=new LinkedHashMap<String,String[]>();  Map<String,String[]> uriOptions=new LinkedHashMap<String,String[]>();  Map<String,Object> options=URISupport.parseParameters(u);  Map<String,Object> consumerOptions=IntrospectionSupport.extractProperties(options,"consumer.");  options.putAll(consumerOptions);  for (  Map.Entry<String,Object> entry : options.entrySet()) {    String name=entry.getKey();    String value="";    if (entry.getValue() != null) {      value=entry.getValue().toString();    }    value=URISupport.sanitizePath(value);    String type=null;    String kind=null;    String label=null;    String required=null;    String javaType=null;    String deprecated=null;    String defaultValue=null;    String description=null;    for (    Map<String,String> row : rows) {      if (name.equals(row.get("name"))) {        type=row.get("type");        kind=row.get("kind");        label=row.get("label");        required=row.get("required");        javaType=row.get("javaType");        deprecated=row.get("deprecated");        defaultValue=row.get("defaultValue");        description=row.get("description");        break;      }    }    uriOptions.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});  }  for (  Map<String,String> row : rows) {    String name=row.get("name");    String kind=row.get("kind");    String label=row.get("label");    String required=row.get("required");    String value=row.get("value");    String defaultValue=row.get("defaultValue");    String type=row.get("type");    String javaType=row.get("javaType");    String deprecated=row.get("deprecated");    value=URISupport.sanitizePath(value);    String description=row.get("description");    if ("path".equals(kind)) {      value=URISupport.extractRemainderPath(u,false);      value=URISupport.sanitizePath(value);    }    boolean isUriOption=uriOptions.containsKey(name);    if (includeAllOptions || isUriOption || "path".equals(kind)) {      if (!selected.containsKey(name)) {        if (isUriOption) {          selected.put(name,uriOptions.get(name));        } else {          selected.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});        }      }    }  }  json=ObjectHelper.before(json,"  \"componentProperties\": {");  StringBuilder buffer=new StringBuilder("  \"properties\": {");  boolean first=true;  for (  String[] row : selected.values()) {    if (first) {      first=false;    } else {      buffer.append(",");    }    buffer.append("\n    ");    String name=row[0];    String kind=row[1];    String label=row[2];    String required=row[3];    String type=row[4];    String javaType=row[5];    String deprecated=row[6];    String value=row[7];    String defaultValue=row[8];    String description=row[9];    buffer.append(StringQuoteHelper.doubleQuote(name)).append(": { ");    CollectionStringBuffer csb=new CollectionStringBuffer();    if (kind != null) {      csb.append("\"kind\": \"" + kind + "\"");    }    if (label != null) {      csb.append("\"label\": \"" + label + "\"");    }    if (required != null) {      csb.append("\"required\": \"" + required + "\"");    }    if (type != null) {      csb.append("\"type\": \"" + type + "\"");    }    if (javaType != null) {      csb.append("\"javaType\": \"" + javaType + "\"");    }    if (deprecated != null) {      csb.append("\"deprecated\": \"" + deprecated + "\"");    }    if (value != null) {      csb.append("\"value\": \"" + value + "\"");    }    if (defaultValue != null) {      csb.append("\"defaultValue\": \"" + defaultValue + "\"");    }    if (description != null) {      csb.append("\"description\": \"" + description + "\"");    }    if (!csb.isEmpty()) {      buffer.append(csb.toString());    }    buffer.append(" }");  }  buffer.append("\n  }\n}\n");  buffer.insert(0,json);  return buffer.toString();} catch (Exception e) {  return null;} @TO@ try {  URI u=new URI(uri);  String json=getComponentParameterJsonSchema(u.getScheme());  if (json == null) {    return null;  }  List<Map<String,String>> rows=JsonSchemaHelper.parseJsonSchema("properties",json,true);  Map<String,String[]> selected=new LinkedHashMap<String,String[]>();  Map<String,String[]> uriOptions=new LinkedHashMap<String,String[]>();  Map<String,Object> options=EndpointHelper.endpointProperties(this,uri);  Map<String,Object> consumerOptions=IntrospectionSupport.extractProperties(options,"consumer.");  options.putAll(consumerOptions);  for (  Map.Entry<String,Object> entry : options.entrySet()) {    String name=entry.getKey();    String value="";    if (entry.getValue() != null) {      value=entry.getValue().toString();    }    value=URISupport.sanitizePath(value);    String type=null;    String kind=null;    String label=null;    String required=null;    String javaType=null;    String deprecated=null;    String defaultValue=null;    String description=null;    for (    Map<String,String> row : rows) {      if (name.equals(row.get("name"))) {        type=row.get("type");        kind=row.get("kind");        label=row.get("label");        required=row.get("required");        javaType=row.get("javaType");        deprecated=row.get("deprecated");        defaultValue=row.get("defaultValue");        description=row.get("description");        break;      }    }    uriOptions.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});  }  for (  Map<String,String> row : rows) {    String name=row.get("name");    String kind=row.get("kind");    String label=row.get("label");    String required=row.get("required");    String value=row.get("value");    String defaultValue=row.get("defaultValue");    String type=row.get("type");    String javaType=row.get("javaType");    String deprecated=row.get("deprecated");    value=URISupport.sanitizePath(value);    String description=row.get("description");    boolean isUriOption=uriOptions.containsKey(name);    if (includeAllOptions || isUriOption || "path".equals(kind)) {      if (!selected.containsKey(name)) {        if (isUriOption) {          selected.put(name,uriOptions.get(name));        } else {          selected.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});        }      }    }  }  json=ObjectHelper.before(json,"  \"componentProperties\": {");  StringBuilder buffer=new StringBuilder("  \"properties\": {");  boolean first=true;  for (  String[] row : selected.values()) {    if (first) {      first=false;    } else {      buffer.append(",");    }    buffer.append("\n    ");    String name=row[0];    String kind=row[1];    String label=row[2];    String required=row[3];    String type=row[4];    String javaType=row[5];    String deprecated=row[6];    String value=row[7];    String defaultValue=row[8];    String description=row[9];    buffer.append(StringQuoteHelper.doubleQuote(name)).append(": { ");    CollectionStringBuffer csb=new CollectionStringBuffer();    if (kind != null) {      csb.append("\"kind\": \"" + kind + "\"");    }    if (label != null) {      csb.append("\"label\": \"" + label + "\"");    }    if (required != null) {      csb.append("\"required\": \"" + required + "\"");    }    if (type != null) {      csb.append("\"type\": \"" + type + "\"");    }    if (javaType != null) {      csb.append("\"javaType\": \"" + javaType + "\"");    }    if (deprecated != null) {      csb.append("\"deprecated\": \"" + deprecated + "\"");    }    if (value != null) {      csb.append("\"value\": \"" + value + "\"");    }    if (defaultValue != null) {      csb.append("\"defaultValue\": \"" + defaultValue + "\"");    }    if (description != null) {      csb.append("\"description\": \"" + description + "\"");    }    if (!csb.isEmpty()) {      buffer.append(csb.toString());    }    buffer.append(" }");  }  buffer.append("\n  }\n}\n");  buffer.insert(0,json);  return buffer.toString();} catch (Exception e) {  return null;} @AT@ 81834 @LENGTH@ 6961
---UPD VariableDeclarationStatement@@Map<String,Object> options=URISupport.parseParameters(u); @TO@ Map<String,Object> options=EndpointHelper.endpointProperties(this,uri); @AT@ 82399 @LENGTH@ 60
------UPD VariableDeclarationFragment@@options=URISupport.parseParameters(u) @TO@ options=EndpointHelper.endpointProperties(this,uri) @AT@ 82419 @LENGTH@ 39
---------UPD MethodInvocation@@URISupport.parseParameters(u) @TO@ EndpointHelper.endpointProperties(this,uri) @AT@ 82429 @LENGTH@ 29
------------UPD SimpleName@@Name:URISupport @TO@ Name:EndpointHelper @AT@ 82429 @LENGTH@ 10
------------UPD SimpleName@@MethodName:parseParameters:[u] @TO@ MethodName:endpointProperties:[this, uri] @AT@ 82440 @LENGTH@ 18
---------------UPD SimpleName@@u @TO@ uri @AT@ 82456 @LENGTH@ 1
---------------INS ThisExpression@@this @TO@ SimpleName@@MethodName:parseParameters:[u] @AT@ 82563 @LENGTH@ 4
---UPD EnhancedForStatement@@for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label");  String required=row.get("required");  String value=row.get("value");  String defaultValue=row.get("defaultValue");  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated");  value=URISupport.sanitizePath(value);  String description=row.get("description");  if ("path".equals(kind)) {    value=URISupport.extractRemainderPath(u,false);    value=URISupport.sanitizePath(value);  }  boolean isUriOption=uriOptions.containsKey(name);  if (includeAllOptions || isUriOption || "path".equals(kind)) {    if (!selected.containsKey(name)) {      if (isUriOption) {        selected.put(name,uriOptions.get(name));      } else {        selected.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});      }    }  }} @TO@ for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label");  String required=row.get("required");  String value=row.get("value");  String defaultValue=row.get("defaultValue");  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated");  value=URISupport.sanitizePath(value);  String description=row.get("description");  boolean isUriOption=uriOptions.containsKey(name);  if (includeAllOptions || isUriOption || "path".equals(kind)) {    if (!selected.containsKey(name)) {      if (isUriOption) {        selected.put(name,uriOptions.get(name));      } else {        selected.put(name,new String[]{name,kind,label,required,type,javaType,deprecated,value,defaultValue,description});      }    }  }} @AT@ 84363 @LENGTH@ 1692
------DEL IfStatement@@if ("path".equals(kind)) {  value=URISupport.extractRemainderPath(u,false);  value=URISupport.sanitizePath(value);} @AT@ 85007 @LENGTH@ 301
---------DEL MethodInvocation@@"path".equals(kind) @AT@ 85011 @LENGTH@ 19
------------DEL StringLiteral@@"path" @AT@ 85011 @LENGTH@ 6
------------DEL SimpleName@@MethodName:equals:[kind] @AT@ 85018 @LENGTH@ 12
---------------DEL SimpleName@@kind @AT@ 85025 @LENGTH@ 4
---------DEL Block@@ThenBody:{  value=URISupport.extractRemainderPath(u,false);  value=URISupport.sanitizePath(value);} @AT@ 85032 @LENGTH@ 276
------------DEL ExpressionStatement@@Assignment:value=URISupport.extractRemainderPath(u,false) @AT@ 85180 @LENGTH@ 50
---------------DEL Assignment@@value=URISupport.extractRemainderPath(u,false) @AT@ 85180 @LENGTH@ 49
------------------DEL SimpleName@@value @AT@ 85180 @LENGTH@ 5
------------------DEL Operator@@= @AT@ 85185 @LENGTH@ 1
------------------DEL MethodInvocation@@URISupport.extractRemainderPath(u,false) @AT@ 85188 @LENGTH@ 41
---------------------DEL SimpleName@@Name:URISupport @AT@ 85188 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:extractRemainderPath:[u, false] @AT@ 85199 @LENGTH@ 30
------------------------DEL SimpleName@@u @AT@ 85220 @LENGTH@ 1
------------------------DEL BooleanLiteral@@false @AT@ 85223 @LENGTH@ 5
------------DEL ExpressionStatement@@Assignment:value=URISupport.sanitizePath(value) @AT@ 85251 @LENGTH@ 39
---------------DEL Assignment@@value=URISupport.sanitizePath(value) @AT@ 85251 @LENGTH@ 38
------------------DEL SimpleName@@value @AT@ 85251 @LENGTH@ 5
------------------DEL Operator@@= @AT@ 85256 @LENGTH@ 1
------------------DEL MethodInvocation@@URISupport.sanitizePath(value) @AT@ 85259 @LENGTH@ 30
---------------------DEL SimpleName@@Name:URISupport @AT@ 85259 @LENGTH@ 10
---------------------DEL SimpleName@@MethodName:sanitizePath:[value] @AT@ 85270 @LENGTH@ 19
------------------------DEL SimpleName@@value @AT@ 85283 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:MessagingLogger.MESSAGING_LOGGER.noMatchingDeadLetterAddress(deadLetterAddress.asString(),addressSetting) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.noMatchingDeadLetterAddress(deadLetterAddress.asString(),addressSetting) @AT@ 4791 @LENGTH@ 107
---UPD MethodInvocation@@MessagingLogger.MESSAGING_LOGGER.noMatchingDeadLetterAddress(deadLetterAddress.asString(),addressSetting) @TO@ MessagingLogger.ROOT_LOGGER.noMatchingDeadLetterAddress(deadLetterAddress.asString(),addressSetting) @AT@ 4791 @LENGTH@ 106
------UPD QualifiedName@@Name:MessagingLogger.MESSAGING_LOGGER @TO@ Name:MessagingLogger.ROOT_LOGGER @AT@ 4791 @LENGTH@ 32


UPD ReturnStatement@@ClassInstanceCreation:new org.springframework.amqp.rabbit.listener.exception.ConsumerCancelledException(ex) @TO@ ClassInstanceCreation:new org.springframework.amqp.rabbit.support.ConsumerCancelledException(ex) @AT@ 2564 @LENGTH@ 93
---UPD ClassInstanceCreation@@org.springframework.amqp.rabbit.listener.exception.ConsumerCancelledException[ex] @TO@ org.springframework.amqp.rabbit.support.ConsumerCancelledException[ex] @AT@ 2571 @LENGTH@ 85
------UPD SimpleType@@org.springframework.amqp.rabbit.listener.exception.ConsumerCancelledException @TO@ org.springframework.amqp.rabbit.support.ConsumerCancelledException @AT@ 2575 @LENGTH@ 77


INS MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]MongoQueryCreatorUnitTests,  @AT@ 18428 @LENGTH@ 300
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18428 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18435 @LENGTH@ 4
---INS SimpleName@@MethodName:appliesIgnoreCaseToLeafProperty @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18440 @LENGTH@ 31
---INS VariableDeclarationStatement@@PartTree tree=new PartTree("findByAddressStreetIgnoreCase",User.class); @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18479 @LENGTH@ 74
------INS SimpleType@@PartTree @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByAddressStreetIgnoreCase",User.class); @AT@ 18479 @LENGTH@ 8
------INS VariableDeclarationFragment@@tree=new PartTree("findByAddressStreetIgnoreCase",User.class) @TO@ VariableDeclarationStatement@@PartTree tree=new PartTree("findByAddressStreetIgnoreCase",User.class); @AT@ 18488 @LENGTH@ 64
---------INS SimpleName@@tree @TO@ VariableDeclarationFragment@@tree=new PartTree("findByAddressStreetIgnoreCase",User.class) @AT@ 18488 @LENGTH@ 4
---------INS ClassInstanceCreation@@PartTree["findByAddressStreetIgnoreCase", User.class] @TO@ VariableDeclarationFragment@@tree=new PartTree("findByAddressStreetIgnoreCase",User.class) @AT@ 18495 @LENGTH@ 57
------------INS New@@new @TO@ ClassInstanceCreation@@PartTree["findByAddressStreetIgnoreCase", User.class] @AT@ 18495 @LENGTH@ 3
------------INS SimpleType@@PartTree @TO@ ClassInstanceCreation@@PartTree["findByAddressStreetIgnoreCase", User.class] @AT@ 18499 @LENGTH@ 8
------------INS StringLiteral@@"findByAddressStreetIgnoreCase" @TO@ ClassInstanceCreation@@PartTree["findByAddressStreetIgnoreCase", User.class] @AT@ 18508 @LENGTH@ 31
------------INS TypeLiteral@@User.class @TO@ ClassInstanceCreation@@PartTree["findByAddressStreetIgnoreCase", User.class] @AT@ 18541 @LENGTH@ 10
---INS VariableDeclarationStatement@@ConvertingParameterAccessor accessor=getAccessor(converter,"Street"); @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18556 @LENGTH@ 72
------INS SimpleType@@ConvertingParameterAccessor @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=getAccessor(converter,"Street"); @AT@ 18556 @LENGTH@ 27
------INS VariableDeclarationFragment@@accessor=getAccessor(converter,"Street") @TO@ VariableDeclarationStatement@@ConvertingParameterAccessor accessor=getAccessor(converter,"Street"); @AT@ 18584 @LENGTH@ 43
---------INS SimpleName@@accessor @TO@ VariableDeclarationFragment@@accessor=getAccessor(converter,"Street") @AT@ 18584 @LENGTH@ 8
---------INS MethodInvocation@@getAccessor(converter,"Street") @TO@ VariableDeclarationFragment@@accessor=getAccessor(converter,"Street") @AT@ 18595 @LENGTH@ 32
------------INS SimpleName@@MethodName:getAccessor:[converter, "Street"] @TO@ MethodInvocation@@getAccessor(converter,"Street") @AT@ 18595 @LENGTH@ 32
---------------INS SimpleName@@converter @TO@ SimpleName@@MethodName:getAccessor:[converter, "Street"] @AT@ 18607 @LENGTH@ 9
---------------INS StringLiteral@@"Street" @TO@ SimpleName@@MethodName:getAccessor:[converter, "Street"] @AT@ 18618 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertThat(new MongoQueryCreator(tree,accessor,context).createQuery(),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:appliesIgnoreCaseToLeafProperty,  @AT@ 18632 @LENGTH@ 93
------INS MethodInvocation@@assertThat(new MongoQueryCreator(tree,accessor,context).createQuery(),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(new MongoQueryCreator(tree,accessor,context).createQuery(),is(notNullValue())) @AT@ 18632 @LENGTH@ 92
---------INS SimpleName@@MethodName:assertThat:[new MongoQueryCreator(tree,accessor,context).createQuery(), is(notNullValue())] @TO@ MethodInvocation@@assertThat(new MongoQueryCreator(tree,accessor,context).createQuery(),is(notNullValue())) @AT@ 18632 @LENGTH@ 92
------------INS MethodInvocation@@new MongoQueryCreator(tree,accessor,context).createQuery() @TO@ SimpleName@@MethodName:assertThat:[new MongoQueryCreator(tree,accessor,context).createQuery(), is(notNullValue())] @AT@ 18643 @LENGTH@ 60
---------------INS ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @TO@ MethodInvocation@@new MongoQueryCreator(tree,accessor,context).createQuery() @AT@ 18643 @LENGTH@ 46
------------------INS New@@new @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @AT@ 18643 @LENGTH@ 3
------------------INS SimpleType@@MongoQueryCreator @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @AT@ 18647 @LENGTH@ 17
------------------INS SimpleName@@tree @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @AT@ 18665 @LENGTH@ 4
------------------INS SimpleName@@accessor @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @AT@ 18671 @LENGTH@ 8
------------------INS SimpleName@@context @TO@ ClassInstanceCreation@@MongoQueryCreator[tree, accessor, context] @AT@ 18681 @LENGTH@ 7
---------------INS SimpleName@@MethodName:createQuery:[] @TO@ MethodInvocation@@new MongoQueryCreator(tree,accessor,context).createQuery() @AT@ 18690 @LENGTH@ 13
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[new MongoQueryCreator(tree,accessor,context).createQuery(), is(notNullValue())] @AT@ 18705 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 18705 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 18708 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 18705 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 18708 @LENGTH@ 14


UPD ReturnStatement@@MethodInvocation:nullPredicate() @TO@ MethodInvocation:NullPredicate.nullPredicate() @AT@ 2357 @LENGTH@ 23
---UPD MethodInvocation@@MethodName:nullPredicate:[] @TO@ NullPredicate.nullPredicate() @AT@ 2364 @LENGTH@ 15
------INS SimpleName@@Name:NullPredicate @TO@ MethodInvocation@@MethodName:nullPredicate:[] @AT@ 2305 @LENGTH@ 13
------INS SimpleName@@MethodName:nullPredicate:[] @TO@ MethodInvocation@@MethodName:nullPredicate:[] @AT@ 2319 @LENGTH@ 15


DEL FieldDeclaration@@MessagingLogger, [MESSAGING_LOGGER=ROOT_LOGGER] @AT@ 2677 @LENGTH@ 47
---DEL SimpleType@@MessagingLogger @AT@ 2677 @LENGTH@ 15
---DEL VariableDeclarationFragment@@MESSAGING_LOGGER=ROOT_LOGGER @AT@ 2693 @LENGTH@ 30
------DEL SimpleName@@MESSAGING_LOGGER @AT@ 2693 @LENGTH@ 16
------DEL SimpleName@@ROOT_LOGGER @AT@ 2712 @LENGTH@ 11


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 5223 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 5223 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 5234 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 5243 @LENGTH@ 27
---------DEL SimpleName@@Name:HttpClients @AT@ 5243 @LENGTH@ 11
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 5255 @LENGTH@ 43
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 5255 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:as(WARArchive.class).addAsServiceProvider("io.undertow.server.handlers.builder.HandlerBuilder","org.wildfly.swarm.runtime.undertow.StaticHandlerBuilder") @TO@ MethodInvocation:as(WARArchive.class).addAsServiceProvider("io.undertow.server.handlers.builder.HandlerBuilder","org.wildfly.swarm.undertow.runtime.StaticHandlerBuilder") @AT@ 562 @LENGTH@ 155
---UPD MethodInvocation@@as(WARArchive.class).addAsServiceProvider("io.undertow.server.handlers.builder.HandlerBuilder","org.wildfly.swarm.runtime.undertow.StaticHandlerBuilder") @TO@ as(WARArchive.class).addAsServiceProvider("io.undertow.server.handlers.builder.HandlerBuilder","org.wildfly.swarm.undertow.runtime.StaticHandlerBuilder") @AT@ 562 @LENGTH@ 154
------UPD SimpleName@@MethodName:addAsServiceProvider:["io.undertow.server.handlers.builder.HandlerBuilder", "org.wildfly.swarm.runtime.undertow.StaticHandlerBuilder"] @TO@ MethodName:addAsServiceProvider:["io.undertow.server.handlers.builder.HandlerBuilder", "org.wildfly.swarm.undertow.runtime.StaticHandlerBuilder"] @AT@ 583 @LENGTH@ 133
---------UPD StringLiteral@@"org.wildfly.swarm.runtime.undertow.StaticHandlerBuilder" @TO@ "org.wildfly.swarm.undertow.runtime.StaticHandlerBuilder" @AT@ 658 @LENGTH@ 57


UPD VariableDeclarationStatement@@int code=this.process.run(args.toArray(new String[args.size()])); @TO@ int code=this.process.run(true,args.toArray(new String[args.size()])); @AT@ 1598 @LENGTH@ 67
---UPD VariableDeclarationFragment@@code=this.process.run(args.toArray(new String[args.size()])) @TO@ code=this.process.run(true,args.toArray(new String[args.size()])) @AT@ 1602 @LENGTH@ 62
------UPD MethodInvocation@@this.process.run(args.toArray(new String[args.size()])) @TO@ this.process.run(true,args.toArray(new String[args.size()])) @AT@ 1609 @LENGTH@ 55
---------UPD SimpleName@@MethodName:run:[args.toArray(new String[args.size()])] @TO@ MethodName:run:[true, args.toArray(new String[args.size()])] @AT@ 1622 @LENGTH@ 42
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:run:[args.toArray(new String[args.size()])] @AT@ 1626 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor).register(registration) @AT@ 6521 @LENGTH@ 121
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor).register(registration) @AT@ 6521 @LENGTH@ 120
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor), this.parentBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[this.parentBuilderFactory, descriptor] @AT@ 6521 @LENGTH@ 97
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 6525 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 6525 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor), this.parentBuilderFactory] @AT@ 6556 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor] @AT@ 6560 @LENGTH@ 30
------------DEL New@@new @AT@ 6560 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 6564 @LENGTH@ 14
------------DEL SimpleName@@descriptor @AT@ 6579 @LENGTH@ 10


UPD TryStatement@@try {  List<String> cli=new ArrayList<>();  cli.add(java.toString());  cli.add("-classpath");  cli.add(dependencies(false));  cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString());  Properties runProps=runProperties();  Enumeration<?> propNames=runProps.propertyNames();  while (propNames.hasMoreElements()) {    String name=(String)propNames.nextElement();    cli.add("-D" + name + "="+ runProps.getProperty(name));  }  cli.add("-Dwildfly.swarm.context.path=" + this.contextPath);  cli.add("org.wildfly.swarm.Swarm");  Process process=Runtime.getRuntime().exec(cli.toArray(new String[cli.size()]));  new Thread(new IOBridge(process.getInputStream(),System.out)).start();  new Thread(new IOBridge(process.getErrorStream(),System.err)).start();  process.waitFor();} catch (IOException e) {  throw new MojoFailureException("Error executing",e);}catch (InterruptedException e) {} @TO@ try {  List<String> cli=new ArrayList<>();  cli.add(java.toString());  cli.add("-classpath");  cli.add(dependencies(false));  String finalName=this.project.getBuild().getFinalName();  if (!finalName.endsWith(".war")) {    finalName=finalName + ".war";  }  cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,finalName).toString());  Properties runProps=runProperties();  Enumeration<?> propNames=runProps.propertyNames();  while (propNames.hasMoreElements()) {    String name=(String)propNames.nextElement();    cli.add("-D" + name + "="+ runProps.getProperty(name));  }  cli.add("-Dwildfly.swarm.context.path=" + this.contextPath);  cli.add("org.wildfly.swarm.Swarm");  Process process=Runtime.getRuntime().exec(cli.toArray(new String[cli.size()]));  new Thread(new IOBridge(process.getInputStream(),System.out)).start();  new Thread(new IOBridge(process.getErrorStream(),System.err)).start();  process.waitFor();} catch (IOException e) {  throw new MojoFailureException("Error executing",e);}catch (InterruptedException e) {} @AT@ 2287 @LENGTH@ 1219
---UPD ExpressionStatement@@MethodInvocation:cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString()) @TO@ MethodInvocation:cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,finalName).toString()) @AT@ 2470 @LENGTH@ 122
------UPD MethodInvocation@@cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString()) @TO@ cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,finalName).toString()) @AT@ 2470 @LENGTH@ 121
---------UPD SimpleName@@MethodName:add:["-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString()] @TO@ MethodName:add:["-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,finalName).toString()] @AT@ 2474 @LENGTH@ 117
------------UPD InfixExpression@@"-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString() @TO@ "-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,finalName).toString() @AT@ 2478 @LENGTH@ 112
---------------UPD MethodInvocation@@Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString() @TO@ Paths.get(this.projectBuildDir,finalName).toString() @AT@ 2508 @LENGTH@ 82
------------------UPD MethodInvocation@@MethodName:get:[this.projectBuildDir, this.project.getBuild().getFinalName()] @TO@ MethodName:get:[this.projectBuildDir, finalName] @AT@ 2508 @LENGTH@ 71
---------------------INS SimpleName@@finalName @TO@ MethodInvocation@@MethodName:get:[this.projectBuildDir, this.project.getBuild().getFinalName()] @AT@ 2726 @LENGTH@ 9
---INS VariableDeclarationStatement@@String finalName=this.project.getBuild().getFinalName(); @TO@ TryStatement@@try {  List<String> cli=new ArrayList<>();  cli.add(java.toString());  cli.add("-classpath");  cli.add(dependencies(false));  cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString());  Properties runProps=runProperties();  Enumeration<?> propNames=runProps.propertyNames();  while (propNames.hasMoreElements()) {    String name=(String)propNames.nextElement();    cli.add("-D" + name + "="+ runProps.getProperty(name));  }  cli.add("-Dwildfly.swarm.context.path=" + this.contextPath);  cli.add("org.wildfly.swarm.Swarm");  Process process=Runtime.getRuntime().exec(cli.toArray(new String[cli.size()]));  new Thread(new IOBridge(process.getInputStream(),System.out)).start();  new Thread(new IOBridge(process.getErrorStream(),System.err)).start();  process.waitFor();} catch (IOException e) {  throw new MojoFailureException("Error executing",e);}catch (InterruptedException e) {} @AT@ 2471 @LENGTH@ 58
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String finalName=this.project.getBuild().getFinalName(); @AT@ 2471 @LENGTH@ 6
------INS VariableDeclarationFragment@@finalName=this.project.getBuild().getFinalName() @TO@ VariableDeclarationStatement@@String finalName=this.project.getBuild().getFinalName(); @AT@ 2478 @LENGTH@ 50
---------INS SimpleName@@finalName @TO@ VariableDeclarationFragment@@finalName=this.project.getBuild().getFinalName() @AT@ 2478 @LENGTH@ 9
---------MOV MethodInvocation@@this.project.getBuild().getFinalName() @TO@ VariableDeclarationFragment@@finalName=this.project.getBuild().getFinalName() @AT@ 2540 @LENGTH@ 38
---INS IfStatement@@if (!finalName.endsWith(".war")) {  finalName=finalName + ".war";} @TO@ TryStatement@@try {  List<String> cli=new ArrayList<>();  cli.add(java.toString());  cli.add("-classpath");  cli.add(dependencies(false));  cli.add("-Dwildfly.swarm.app.path=" + Paths.get(this.projectBuildDir,this.project.getBuild().getFinalName()).toString());  Properties runProps=runProperties();  Enumeration<?> propNames=runProps.propertyNames();  while (propNames.hasMoreElements()) {    String name=(String)propNames.nextElement();    cli.add("-D" + name + "="+ runProps.getProperty(name));  }  cli.add("-Dwildfly.swarm.context.path=" + this.contextPath);  cli.add("org.wildfly.swarm.Swarm");  Process process=Runtime.getRuntime().exec(cli.toArray(new String[cli.size()]));  new Thread(new IOBridge(process.getInputStream(),System.out)).start();  new Thread(new IOBridge(process.getErrorStream(),System.err)).start();  process.waitFor();} catch (IOException e) {  throw new MojoFailureException("Error executing",e);}catch (InterruptedException e) {} @AT@ 2542 @LENGTH@ 101
------INS PrefixExpression@@!finalName.endsWith(".war") @TO@ IfStatement@@if (!finalName.endsWith(".war")) {  finalName=finalName + ".war";} @AT@ 2547 @LENGTH@ 30
---------INS Operator@@! @TO@ PrefixExpression@@!finalName.endsWith(".war") @AT@ 2547 @LENGTH@ 1
---------INS MethodInvocation@@finalName.endsWith(".war") @TO@ PrefixExpression@@!finalName.endsWith(".war") @AT@ 2549 @LENGTH@ 28
------------INS SimpleName@@Name:finalName @TO@ MethodInvocation@@finalName.endsWith(".war") @AT@ 2549 @LENGTH@ 9
------------INS SimpleName@@MethodName:endsWith:[".war"] @TO@ MethodInvocation@@finalName.endsWith(".war") @AT@ 2559 @LENGTH@ 18
---------------INS StringLiteral@@".war" @TO@ SimpleName@@MethodName:endsWith:[".war"] @AT@ 2569 @LENGTH@ 6
------INS Block@@ThenBody:{  finalName=finalName + ".war";} @TO@ IfStatement@@if (!finalName.endsWith(".war")) {  finalName=finalName + ".war";} @AT@ 2580 @LENGTH@ 63
---------INS ExpressionStatement@@Assignment:finalName=finalName + ".war" @TO@ Block@@ThenBody:{  finalName=finalName + ".war";} @AT@ 2598 @LENGTH@ 31
------------INS Assignment@@finalName=finalName + ".war" @TO@ ExpressionStatement@@Assignment:finalName=finalName + ".war" @AT@ 2598 @LENGTH@ 30
---------------INS SimpleName@@finalName @TO@ Assignment@@finalName=finalName + ".war" @AT@ 2598 @LENGTH@ 9
---------------INS Operator@@= @TO@ Assignment@@finalName=finalName + ".war" @AT@ 2607 @LENGTH@ 1
---------------INS InfixExpression@@finalName + ".war" @TO@ Assignment@@finalName=finalName + ".war" @AT@ 2610 @LENGTH@ 18
------------------INS SimpleName@@finalName @TO@ InfixExpression@@finalName + ".war" @AT@ 2610 @LENGTH@ 9
------------------INS Operator@@+ @TO@ InfixExpression@@finalName + ".war" @AT@ 2619 @LENGTH@ 1
------------------INS StringLiteral@@".war" @TO@ InfixExpression@@finalName + ".war" @AT@ 2622 @LENGTH@ 6


UPD TypeDeclaration@@[@Configuration, @ComponentScan({"org.springframework.data.neo4j.examples.friends.*"}), @EnableTransactionManagement, public]FriendContext, Neo4jConfiguration @TO@ [@Configuration, @ComponentScan("org.springframework.data.neo4j.examples.friends"), @EnableTransactionManagement, public]FriendContext, Neo4jConfiguration @AT@ 1226 @LENGTH@ 499
---UPD SingleMemberAnnotation@@@ComponentScan({"org.springframework.data.neo4j.examples.friends.*"}) @TO@ @ComponentScan("org.springframework.data.neo4j.examples.friends") @AT@ 1241 @LENGTH@ 69


UPD ExpressionStatement@@MethodInvocation:pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema " + "with Spring Security 3.2. Please update your schema declarations to the 3.2 schema.",element) @TO@ MethodInvocation:pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema " + "with Spring Security 4.0. Please update your schema declarations to the 4.0 schema.",element) @AT@ 4294 @LENGTH@ 251
---UPD MethodInvocation@@pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema " + "with Spring Security 3.2. Please update your schema declarations to the 3.2 schema.",element) @TO@ pc.getReaderContext().fatal("You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema " + "with Spring Security 4.0. Please update your schema declarations to the 4.0 schema.",element) @AT@ 4294 @LENGTH@ 250
------UPD SimpleName@@MethodName:fatal:["You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema " + "with Spring Security 3.2. Please update your schema declarations to the 3.2 schema.", element] @TO@ MethodName:fatal:["You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema " + "with Spring Security 4.0. Please update your schema declarations to the 4.0 schema.", element] @AT@ 4322 @LENGTH@ 222
---------UPD InfixExpression@@"You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema " + "with Spring Security 3.2. Please update your schema declarations to the 3.2 schema." @TO@ "You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema " + "with Spring Security 4.0. Please update your schema declarations to the 4.0 schema." @AT@ 4328 @LENGTH@ 199
------------UPD StringLiteral@@"You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema " @TO@ "You cannot use a spring-security-2.0.xsd or spring-security-3.0.xsd or spring-security-3.1.xsd schema or spring-security-3.2.xsd schema " @AT@ 4328 @LENGTH@ 104
------------UPD StringLiteral@@"with Spring Security 3.2. Please update your schema declarations to the 3.2 schema." @TO@ "with Spring Security 4.0. Please update your schema declarations to the 4.0 schema." @AT@ 4442 @LENGTH@ 85


DEL MethodDeclaration@@public, boolean, MethodName:isReady,  @AT@ 11587 @LENGTH@ 60
---DEL Modifier@@public @AT@ 11587 @LENGTH@ 6
---DEL PrimitiveType@@boolean @AT@ 11594 @LENGTH@ 7
---DEL SimpleName@@MethodName:isReady @AT@ 11602 @LENGTH@ 7
---DEL ReturnStatement@@MethodInvocation:delegate.isReady() @AT@ 11617 @LENGTH@ 26
------DEL MethodInvocation@@delegate.isReady() @AT@ 11624 @LENGTH@ 18
---------DEL SimpleName@@Name:delegate @AT@ 11624 @LENGTH@ 8
---------DEL SimpleName@@MethodName:isReady:[] @AT@ 11633 @LENGTH@ 9


UPD IfStatement@@if (client.isAutoApprove(scope) || client.isAutoApprove("all")) {  approvedScopes.add(scope);} @TO@ if (client.isAutoApprove(scope)) {  approvedScopes.add(scope);} @AT@ 4046 @LENGTH@ 105
---DEL InfixExpression@@client.isAutoApprove(scope) || client.isAutoApprove("all") @AT@ 4050 @LENGTH@ 58
------DEL Operator@@|| @AT@ 4077 @LENGTH@ 2
------DEL MethodInvocation@@client.isAutoApprove("all") @AT@ 4081 @LENGTH@ 27
---------DEL SimpleName@@Name:client @AT@ 4081 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isAutoApprove:["all"] @AT@ 4088 @LENGTH@ 20
------------DEL StringLiteral@@"all" @AT@ 4102 @LENGTH@ 5
---MOV MethodInvocation@@client.isAutoApprove(scope) @TO@ IfStatement@@if (client.isAutoApprove(scope) || client.isAutoApprove("all")) {  approvedScopes.add(scope);} @AT@ 4050 @LENGTH@ 27


INS MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @TO@ TypeDeclaration@@[public]TypedResourceDescription, SimpleResourceDescription @AT@ 1759 @LENGTH@ 159
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1759 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1766 @LENGTH@ 6
---INS SimpleType@@ResourceDescription @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1773 @LENGTH@ 19
---INS SimpleName@@MethodName:defaultFor @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1793 @LENGTH@ 10
---INS SingleVariableDeclaration@@String rel @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1804 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String rel @AT@ 1804 @LENGTH@ 6
------INS SimpleName@@rel @TO@ SingleVariableDeclaration@@String rel @AT@ 1811 @LENGTH@ 3
---MOV SingleVariableDeclaration@@PersistentProperty<?> property @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1816 @LENGTH@ 30
---INS ReturnStatement@@MethodInvocation:defaultFor(rel,property.getName(),property.getType()) @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1852 @LENGTH@ 63
------INS MethodInvocation@@defaultFor(rel,property.getName(),property.getType()) @TO@ ReturnStatement@@MethodInvocation:defaultFor(rel,property.getName(),property.getType()) @AT@ 1859 @LENGTH@ 55
---------INS SimpleName@@MethodName:defaultFor:[rel, property.getName(), property.getType()] @TO@ MethodInvocation@@defaultFor(rel,property.getName(),property.getType()) @AT@ 1859 @LENGTH@ 55
------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:defaultFor:[rel, property.getName(), property.getType()] @AT@ 1870 @LENGTH@ 3
------------INS MethodInvocation@@property.getName() @TO@ SimpleName@@MethodName:defaultFor:[rel, property.getName(), property.getType()] @AT@ 1875 @LENGTH@ 18
---------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getName() @AT@ 1875 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@property.getName() @AT@ 1884 @LENGTH@ 9
------------INS MethodInvocation@@property.getType() @TO@ SimpleName@@MethodName:defaultFor:[rel, property.getName(), property.getType()] @AT@ 1895 @LENGTH@ 18
---------------INS SimpleName@@Name:property @TO@ MethodInvocation@@property.getType() @AT@ 1895 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@property.getType() @AT@ 1904 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(DEFAULT_LEVEL,"PATTERN").rootLogger("CONSOLE",DEFAULT_LEVEL) @TO@ MethodInvocation:new LoggingFraction().formatter("COLOR_PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(DEFAULT_LEVEL,"COLOR_PATTERN").rootLogger("CONSOLE",DEFAULT_LEVEL) @AT@ 1352 @LENGTH@ 232
---UPD MethodInvocation@@new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(DEFAULT_LEVEL,"PATTERN").rootLogger("CONSOLE",DEFAULT_LEVEL) @TO@ new LoggingFraction().formatter("COLOR_PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(DEFAULT_LEVEL,"COLOR_PATTERN").rootLogger("CONSOLE",DEFAULT_LEVEL) @AT@ 1359 @LENGTH@ 224
------UPD MethodInvocation@@MethodName:consoleHandler:[DEFAULT_LEVEL, "PATTERN"] @TO@ MethodName:consoleHandler:[DEFAULT_LEVEL, "COLOR_PATTERN"] @AT@ 1359 @LENGTH@ 170
---------UPD StringLiteral@@"PATTERN" @TO@ "COLOR_PATTERN" @AT@ 1519 @LENGTH@ 9
------UPD MethodInvocation@@MethodName:formatter:["PATTERN", "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"] @TO@ MethodName:formatter:["COLOR_PATTERN", "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"] @AT@ 1359 @LENGTH@ 112
---------UPD StringLiteral@@"PATTERN" @TO@ "COLOR_PATTERN" @AT@ 1408 @LENGTH@ 9


INS MethodDeclaration@@void, MethodName:updateAllNamesToUpperCase,  @TO@ TypeDeclaration@@[public]AuditableUserRepository, [JpaRepository<AuditableUser,Long>] @AT@ 1564 @LENGTH@ 28
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:updateAllNamesToUpperCase,  @AT@ 1559 @LENGTH@ 4
---INS SimpleName@@MethodName:updateAllNamesToUpperCase @TO@ MethodDeclaration@@void, MethodName:updateAllNamesToUpperCase,  @AT@ 1564 @LENGTH@ 25


INS VariableDeclarationStatement@@Bootstrap bootstrap=null; @TO@ MethodDeclaration@@public, void, MethodName:start, ServerStartException,  @AT@ 10970 @LENGTH@ 27
---INS SimpleType@@Bootstrap @TO@ VariableDeclarationStatement@@Bootstrap bootstrap=null; @AT@ 10970 @LENGTH@ 9
---INS VariableDeclarationFragment@@bootstrap=null @TO@ VariableDeclarationStatement@@Bootstrap bootstrap=null; @AT@ 10980 @LENGTH@ 16
------INS SimpleName@@bootstrap @TO@ VariableDeclarationFragment@@bootstrap=null @AT@ 10980 @LENGTH@ 9
------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@bootstrap=null @AT@ 10992 @LENGTH@ 4


INS MethodDeclaration@@void, MethodName:errorDuringRecoveryShutdown, @Cause Throwable cause,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYJCA",length=4), public]ConnectorLogger, [BasicLogger] @AT@ 33307 @LENGTH@ 52
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:errorDuringRecoveryShutdown, @Cause Throwable cause,  @AT@ 33302 @LENGTH@ 4
---INS SimpleName@@MethodName:errorDuringRecoveryShutdown @TO@ MethodDeclaration@@void, MethodName:errorDuringRecoveryShutdown, @Cause Throwable cause,  @AT@ 33307 @LENGTH@ 27
---INS SingleVariableDeclaration@@@Cause Throwable cause @TO@ MethodDeclaration@@void, MethodName:errorDuringRecoveryShutdown, @Cause Throwable cause,  @AT@ 33335 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 33342 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 33352 @LENGTH@ 5


UPD VariableDeclarationStatement@@int randomNum=random.nextInt((max - min)) + min; @TO@ int randomNum=random.nextInt(max - min) + min; @AT@ 66680 @LENGTH@ 50
---UPD VariableDeclarationFragment@@randomNum=random.nextInt((max - min)) + min @TO@ randomNum=random.nextInt(max - min) + min @AT@ 66684 @LENGTH@ 45
------UPD InfixExpression@@random.nextInt((max - min)) + min @TO@ random.nextInt(max - min) + min @AT@ 66696 @LENGTH@ 33
---------UPD MethodInvocation@@random.nextInt((max - min)) @TO@ random.nextInt(max - min) @AT@ 66696 @LENGTH@ 27
------------UPD SimpleName@@MethodName:nextInt:[(max - min)] @TO@ MethodName:nextInt:[max - min] @AT@ 66703 @LENGTH@ 20
---------------DEL ParenthesizedExpression@@(max - min) @AT@ 66711 @LENGTH@ 11
------------------DEL InfixExpression@@max - min @AT@ 66712 @LENGTH@ 9
---------------INS InfixExpression@@max - min @TO@ SimpleName@@MethodName:nextInt:[(max - min)] @AT@ 66711 @LENGTH@ 9
------------------MOV SimpleName@@max @TO@ InfixExpression@@max - min @AT@ 66712 @LENGTH@ 3
------------------MOV Operator@@- @TO@ InfixExpression@@max - min @AT@ 66715 @LENGTH@ 1
------------------MOV SimpleName@@min @TO@ InfixExpression@@max - min @AT@ 66718 @LENGTH@ 3


INS IfStatement@@if (endpoint.getBrokers() != null) {  props.put("metadata.broker.list",endpoint.getBrokers());} @TO@ MethodDeclaration@@Properties, MethodName:getProps,  @AT@ 1693 @LENGTH@ 116
---INS InfixExpression@@endpoint.getBrokers() != null @TO@ IfStatement@@if (endpoint.getBrokers() != null) {  props.put("metadata.broker.list",endpoint.getBrokers());} @AT@ 1697 @LENGTH@ 29
------INS MethodInvocation@@endpoint.getBrokers() @TO@ InfixExpression@@endpoint.getBrokers() != null @AT@ 1697 @LENGTH@ 21
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getBrokers() @AT@ 1697 @LENGTH@ 8
---------INS SimpleName@@MethodName:getBrokers:[] @TO@ MethodInvocation@@endpoint.getBrokers() @AT@ 1706 @LENGTH@ 12
------INS Operator@@!= @TO@ InfixExpression@@endpoint.getBrokers() != null @AT@ 1718 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@endpoint.getBrokers() != null @AT@ 1722 @LENGTH@ 4
---INS Block@@ThenBody:{  props.put("metadata.broker.list",endpoint.getBrokers());} @TO@ IfStatement@@if (endpoint.getBrokers() != null) {  props.put("metadata.broker.list",endpoint.getBrokers());} @AT@ 1728 @LENGTH@ 81
------MOV ExpressionStatement@@MethodInvocation:props.put("metadata.broker.list",endpoint.getBrokers()) @TO@ Block@@ThenBody:{  props.put("metadata.broker.list",endpoint.getBrokers());} @AT@ 1693 @LENGTH@ 57


INS ExpressionStatement@@MethodInvocation:validateParameters(uri,parameters,null) @TO@ MethodDeclaration@@protected, Endpoint, MethodName:createEndpoint, String uri, String remaining, Map<String,Object> parameters, Exception,  @AT@ 2453 @LENGTH@ 42
---INS MethodInvocation@@validateParameters(uri,parameters,null) @TO@ ExpressionStatement@@MethodInvocation:validateParameters(uri,parameters,null) @AT@ 2453 @LENGTH@ 41
------INS SimpleName@@MethodName:validateParameters:[uri, parameters, null] @TO@ MethodInvocation@@validateParameters(uri,parameters,null) @AT@ 2453 @LENGTH@ 41
---------INS SimpleName@@uri @TO@ SimpleName@@MethodName:validateParameters:[uri, parameters, null] @AT@ 2472 @LENGTH@ 3
---------INS SimpleName@@parameters @TO@ SimpleName@@MethodName:validateParameters:[uri, parameters, null] @AT@ 2477 @LENGTH@ 10
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:validateParameters:[uri, parameters, null] @AT@ 2489 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(inner.getMessage(),inner);
 @TO@ super(makeMsg(db,table) + ": " + inner.getMessage(),inner);
 @AT@ 1273 @LENGTH@ 33
---DEL MethodInvocation@@inner.getMessage() @AT@ 1279 @LENGTH@ 18
---INS InfixExpression@@makeMsg(db,table) + ": " + inner.getMessage() @TO@ SuperConstructorInvocation@@super(inner.getMessage(),inner);
 @AT@ 1313 @LENGTH@ 46
------INS MethodInvocation@@makeMsg(db,table) @TO@ InfixExpression@@makeMsg(db,table) + ": " + inner.getMessage() @AT@ 1313 @LENGTH@ 18
---------INS SimpleName@@MethodName:makeMsg:[db, table] @TO@ MethodInvocation@@makeMsg(db,table) @AT@ 1313 @LENGTH@ 18
------------INS SimpleName@@db @TO@ SimpleName@@MethodName:makeMsg:[db, table] @AT@ 1321 @LENGTH@ 2
------------INS SimpleName@@table @TO@ SimpleName@@MethodName:makeMsg:[db, table] @AT@ 1325 @LENGTH@ 5
------INS Operator@@+ @TO@ InfixExpression@@makeMsg(db,table) + ": " + inner.getMessage() @AT@ 1331 @LENGTH@ 1
------INS StringLiteral@@": " @TO@ InfixExpression@@makeMsg(db,table) + ": " + inner.getMessage() @AT@ 1334 @LENGTH@ 4
------INS MethodInvocation@@inner.getMessage() @TO@ InfixExpression@@makeMsg(db,table) + ": " + inner.getMessage() @AT@ 1341 @LENGTH@ 18
---------MOV SimpleName@@Name:inner @TO@ MethodInvocation@@inner.getMessage() @AT@ 1279 @LENGTH@ 5
---------MOV SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@inner.getMessage() @AT@ 1285 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:map.put("path",(Object)request.getContextPath()) @TO@ MethodInvocation:map.put("path",(Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()) @AT@ 2313 @LENGTH@ 51
---UPD MethodInvocation@@map.put("path",(Object)request.getContextPath()) @TO@ map.put("path",(Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()) @AT@ 2313 @LENGTH@ 50
------UPD SimpleName@@MethodName:put:["path", (Object)request.getContextPath()] @TO@ MethodName:put:["path", (Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()] @AT@ 2317 @LENGTH@ 46
---------UPD CastExpression@@(Object)request.getContextPath() @TO@ (Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @AT@ 2329 @LENGTH@ 33
------------UPD MethodInvocation@@request.getContextPath() @TO@ ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @AT@ 2338 @LENGTH@ 24
---------------UPD SimpleName@@Name:request @TO@ request @AT@ 2338 @LENGTH@ 7
---------------UPD SimpleName@@MethodName:getContextPath:[] @TO@ MethodName:getPath:[] @AT@ 2346 @LENGTH@ 16
---------------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@request.getContextPath() @AT@ 2414 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:fromContextPath:[request] @TO@ MethodInvocation@@request.getContextPath() @AT@ 2414 @LENGTH@ 52
------------------MOV SimpleName@@Name:request @TO@ MethodInvocation@@MethodName:fromContextPath:[request] @AT@ 2338 @LENGTH@ 7
---------------INS SimpleName@@Name:ServletUriComponentsBuilder @TO@ MethodInvocation@@request.getContextPath() @AT@ 2414 @LENGTH@ 27


UPD FieldDeclaration@@private, static, final, int, [MANAGEMENT_API_MINOR_VERSION=1] @TO@ private, static, final, int, [MANAGEMENT_API_MINOR_VERSION=0] @AT@ 2227 @LENGTH@ 58
---UPD VariableDeclarationFragment@@MANAGEMENT_API_MINOR_VERSION=1 @TO@ MANAGEMENT_API_MINOR_VERSION=0 @AT@ 2252 @LENGTH@ 32
------UPD NumberLiteral@@1 @TO@ 0 @AT@ 2283 @LENGTH@ 1


UPD FieldDeclaration@@static, final, RuntimeCapability<Void>, [REMOTE_JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY.getName()).addOptionalRequirements(REMOTING_CAPABILITY).build()] @TO@ static, final, RuntimeCapability<Void>, [REMOTE_JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.management.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY_NAME).addOptionalRequirements(REMOTING_CAPABILITY).build()] @AT@ 2473 @LENGTH@ 285
---UPD VariableDeclarationFragment@@REMOTE_JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY.getName()).addOptionalRequirements(REMOTING_CAPABILITY).build() @TO@ REMOTE_JMX_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.management.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY_NAME).addOptionalRequirements(REMOTING_CAPABILITY).build() @AT@ 2510 @LENGTH@ 247
------UPD MethodInvocation@@RuntimeCapability.Builder.of("org.wildfly.extension.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY.getName()).addOptionalRequirements(REMOTING_CAPABILITY).build() @TO@ RuntimeCapability.Builder.of("org.wildfly.management.jmx.remote").addRequirements(JMXSubsystemRootResource.JMX_CAPABILITY_NAME).addOptionalRequirements(REMOTING_CAPABILITY).build() @AT@ 2534 @LENGTH@ 223
---------UPD MethodInvocation@@MethodName:addRequirements:[JMXSubsystemRootResource.JMX_CAPABILITY.getName()] @TO@ MethodName:addRequirements:[JMXSubsystemRootResource.JMX_CAPABILITY_NAME] @AT@ 2534 @LENGTH@ 144
------------DEL MethodInvocation@@JMXSubsystemRootResource.JMX_CAPABILITY.getName() @AT@ 2628 @LENGTH@ 49
---------------DEL SimpleName@@MethodName:getName:[] @AT@ 2668 @LENGTH@ 9
------------MOV QualifiedName@@Name:JMXSubsystemRootResource.JMX_CAPABILITY @TO@ MethodInvocation@@MethodName:addRequirements:[JMXSubsystemRootResource.JMX_CAPABILITY.getName()] @AT@ 2628 @LENGTH@ 39
---------------INS SimpleName@@JMXSubsystemRootResource @TO@ QualifiedName@@Name:JMXSubsystemRootResource.JMX_CAPABILITY @AT@ 2619 @LENGTH@ 24
---------------INS SimpleName@@JMX_CAPABILITY_NAME @TO@ QualifiedName@@Name:JMXSubsystemRootResource.JMX_CAPABILITY @AT@ 2644 @LENGTH@ 19
---------UPD MethodInvocation@@MethodName:of:["org.wildfly.extension.jmx.remote"] @TO@ MethodName:of:["org.wildfly.management.jmx.remote"] @AT@ 2534 @LENGTH@ 64
------------UPD StringLiteral@@"org.wildfly.extension.jmx.remote" @TO@ "org.wildfly.management.jmx.remote" @AT@ 2563 @LENGTH@ 34


MOV MethodDeclaration@@public, voidMethodName:FacebookComponentPageIdProducerTest, Exception,  @TO@ TypeDeclaration@@[public]FacebookComponentPageIdProducerTest, CamelFacebookTestSupport @AT@ 1265 @LENGTH@ 69


INS MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @TO@ TypeDeclaration@@[public]QuerydslPredicateArgumentResolverUnitTests,  @AT@ 7062 @LENGTH@ 354
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @AT@ 7062 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @AT@ 7069 @LENGTH@ 4
---INS SimpleName@@MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated @TO@ MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @AT@ 7074 @LENGTH@ 87
---INS VariableDeclarationStatement@@TypeInformation<?> type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @TO@ MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @AT@ 7169 @LENGTH@ 162
------INS ParameterizedType@@TypeInformation<?> @TO@ VariableDeclarationStatement@@TypeInformation<?> type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @AT@ 7169 @LENGTH@ 18
---------INS SimpleType@@TypeInformation @TO@ ParameterizedType@@TypeInformation<?> @AT@ 7169 @LENGTH@ 15
---------INS WildcardType@@? @TO@ ParameterizedType@@TypeInformation<?> @AT@ 7185 @LENGTH@ 1
------INS VariableDeclarationFragment@@type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @TO@ VariableDeclarationStatement@@TypeInformation<?> type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @AT@ 7188 @LENGTH@ 142
---------INS SimpleName@@type @TO@ VariableDeclarationFragment@@type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 7188 @LENGTH@ 4
---------INS MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @TO@ VariableDeclarationFragment@@type=ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 7195 @LENGTH@ 135
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 7195 @LENGTH@ 19
------------INS SimpleName@@MethodName:invokeMethod:[resolver, "extractTypeInfo", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @TO@ MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"extractTypeInfo",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 7215 @LENGTH@ 115
---------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "extractTypeInfo", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 7228 @LENGTH@ 8
---------------INS StringLiteral@@"extractTypeInfo" @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "extractTypeInfo", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 7238 @LENGTH@ 17
---------------INS MethodInvocation@@getMethodParameterFor("predicateWithoutAnnotation",Predicate.class) @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "extractTypeInfo", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 7261 @LENGTH@ 68
------------------INS SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @TO@ MethodInvocation@@getMethodParameterFor("predicateWithoutAnnotation",Predicate.class) @AT@ 7261 @LENGTH@ 68
---------------------INS StringLiteral@@"predicateWithoutAnnotation" @TO@ SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @AT@ 7283 @LENGTH@ 28
---------------------INS TypeLiteral@@Predicate.class @TO@ SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @AT@ 7313 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(type,is((TypeInformation)ClassTypeInformation.from(User.class))) @TO@ MethodDeclaration@@public, void, MethodName:extractTypeInformationShouldUseTypeExtractedFromMethodReturnTypeIfPredicateNotAnnotated,  @AT@ 7335 @LENGTH@ 78
------INS MethodInvocation@@assertThat(type,is((TypeInformation)ClassTypeInformation.from(User.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(type,is((TypeInformation)ClassTypeInformation.from(User.class))) @AT@ 7335 @LENGTH@ 77
---------INS SimpleName@@MethodName:assertThat:[type, is((TypeInformation)ClassTypeInformation.from(User.class))] @TO@ MethodInvocation@@assertThat(type,is((TypeInformation)ClassTypeInformation.from(User.class))) @AT@ 7335 @LENGTH@ 77
------------INS SimpleName@@type @TO@ SimpleName@@MethodName:assertThat:[type, is((TypeInformation)ClassTypeInformation.from(User.class))] @AT@ 7346 @LENGTH@ 4
------------INS MethodInvocation@@is((TypeInformation)ClassTypeInformation.from(User.class)) @TO@ SimpleName@@MethodName:assertThat:[type, is((TypeInformation)ClassTypeInformation.from(User.class))] @AT@ 7352 @LENGTH@ 59
---------------INS SimpleName@@MethodName:is:[(TypeInformation)ClassTypeInformation.from(User.class)] @TO@ MethodInvocation@@is((TypeInformation)ClassTypeInformation.from(User.class)) @AT@ 7352 @LENGTH@ 59
------------------INS CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @TO@ SimpleName@@MethodName:is:[(TypeInformation)ClassTypeInformation.from(User.class)] @AT@ 7355 @LENGTH@ 55
---------------------INS SimpleType@@TypeInformation @TO@ CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @AT@ 7356 @LENGTH@ 15
---------------------INS MethodInvocation@@ClassTypeInformation.from(User.class) @TO@ CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @AT@ 7373 @LENGTH@ 37
------------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 7373 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:from:[User.class] @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 7394 @LENGTH@ 16
---------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:from:[User.class] @AT@ 7399 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[(TypeInformation)ClassTypeInformation.from(User.class)] @TO@ MethodInvocation@@is((TypeInformation)ClassTypeInformation.from(User.class)) @AT@ 7352 @LENGTH@ 59
------------------INS CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @TO@ SimpleName@@MethodName:is:[(TypeInformation)ClassTypeInformation.from(User.class)] @AT@ 7355 @LENGTH@ 55
---------------------INS SimpleType@@TypeInformation @TO@ CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @AT@ 7356 @LENGTH@ 15
---------------------INS MethodInvocation@@ClassTypeInformation.from(User.class) @TO@ CastExpression@@(TypeInformation)ClassTypeInformation.from(User.class) @AT@ 7373 @LENGTH@ 37
------------------------INS SimpleName@@Name:ClassTypeInformation @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 7373 @LENGTH@ 20
------------------------INS SimpleName@@MethodName:from:[User.class] @TO@ MethodInvocation@@ClassTypeInformation.from(User.class) @AT@ 7394 @LENGTH@ 16
---------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:from:[User.class] @AT@ 7399 @LENGTH@ 10


UPD MethodDeclaration@@private, static, RelNode, MethodName:renameTopLevelSelectInResultSchema, final RelNode rootRel, Pair<RelNode,RelNode> topSelparentPair, List<FieldSchema> resultSchema, CalciteSemanticException,  @TO@ public, static, RelNode, MethodName:renameTopLevelSelectInResultSchema, final RelNode rootRel, Pair<RelNode,RelNode> topSelparentPair, List<FieldSchema> resultSchema, CalciteSemanticException,  @AT@ 6568 @LENGTH@ 1493
---UPD Modifier@@private @TO@ public @AT@ 6568 @LENGTH@ 7


UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException("Unregonized Thrift TTypeId value: " + tType) @TO@ ClassInstanceCreation:new IllegalArgumentException("Unrecognized Thrift TTypeId value: " + tType) @AT@ 4275 @LENGTH@ 81
---UPD ClassInstanceCreation@@IllegalArgumentException["Unregonized Thrift TTypeId value: " + tType] @TO@ IllegalArgumentException["Unrecognized Thrift TTypeId value: " + tType] @AT@ 4281 @LENGTH@ 74
------UPD InfixExpression@@"Unregonized Thrift TTypeId value: " + tType @TO@ "Unrecognized Thrift TTypeId value: " + tType @AT@ 4310 @LENGTH@ 44
---------UPD StringLiteral@@"Unregonized Thrift TTypeId value: " @TO@ "Unrecognized Thrift TTypeId value: " @AT@ 4310 @LENGTH@ 36


UPD VariableDeclarationStatement@@HttpClient client1=HttpClients.createDefault(); @TO@ DefaultHttpClient client1=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 2688 @LENGTH@ 49
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 2688 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client1=HttpClients.createDefault() @TO@ client1=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2699 @LENGTH@ 37
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2709 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2680 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 2709 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 2721 @LENGTH@ 15


DEL MethodDeclaration@@protected, boolean, MethodName:isEnableJmx,  @AT@ 1146 @LENGTH@ 60
---DEL Modifier@@protected @AT@ 1146 @LENGTH@ 9
---DEL PrimitiveType@@boolean @AT@ 1156 @LENGTH@ 7
---DEL SimpleName@@MethodName:isEnableJmx @AT@ 1164 @LENGTH@ 11
---DEL ReturnStatement@@BooleanLiteral:true @AT@ 1188 @LENGTH@ 12
------DEL BooleanLiteral@@true @AT@ 1195 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor),transportBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(transportBuilderFactory,descriptor).register(registration) @AT@ 6395 @LENGTH@ 122
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor),transportBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(transportBuilderFactory,descriptor).register(registration) @AT@ 6395 @LENGTH@ 121
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor), transportBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[transportBuilderFactory, descriptor] @AT@ 6395 @LENGTH@ 98
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 6399 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 6399 @LENGTH@ 32
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor] @AT@ 6434 @LENGTH@ 33
------------DEL New@@new @AT@ 6434 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 6438 @LENGTH@ 17
---------MOV SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor), transportBuilderFactory] @AT@ 6456 @LENGTH@ 10
---------UPD SimpleName@@transportBuilderFactory @TO@ descriptor @AT@ 6469 @LENGTH@ 23


UPD Block@@ThenBody:{  dst.put(tmp,pos,n);  pos+=n;  total+=n;} @TO@ ThenBody:{  dst.put(tmp,0,n);  total+=n;} @AT@ 1567 @LENGTH@ 77
---UPD ExpressionStatement@@MethodInvocation:dst.put(tmp,pos,n) @TO@ MethodInvocation:dst.put(tmp,0,n) @AT@ 1577 @LENGTH@ 21
------UPD MethodInvocation@@dst.put(tmp,pos,n) @TO@ dst.put(tmp,0,n) @AT@ 1577 @LENGTH@ 20
---------UPD SimpleName@@MethodName:put:[tmp, pos, n] @TO@ MethodName:put:[tmp, 0, n] @AT@ 1581 @LENGTH@ 16
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:put:[tmp, pos, n] @AT@ 1560 @LENGTH@ 1
------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:put:[tmp, pos, n] @AT@ 1560 @LENGTH@ 1
------------DEL SimpleName@@pos @AT@ 1590 @LENGTH@ 3
---DEL ExpressionStatement@@Assignment:pos+=n @AT@ 1607 @LENGTH@ 9
------DEL Assignment@@pos+=n @AT@ 1607 @LENGTH@ 8
---------DEL SimpleName@@pos @AT@ 1607 @LENGTH@ 3
---------DEL Operator@@+= @AT@ 1610 @LENGTH@ 2
---------DEL SimpleName@@n @AT@ 1614 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @TO@ TypeDeclaration@@[public]PageableHandlerMethodArgumentResolverUnitTests, PageableDefaultUnitTests @AT@ 7831 @LENGTH@ 437
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 7831 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 7838 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsCorrectPageSizeForOneIndexParameters @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 7843 @LENGTH@ 43
---INS VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 7894 @LENGTH@ 63
------INS SimpleType@@PageableHandlerMethodArgumentResolver @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 7894 @LENGTH@ 37
------INS VariableDeclarationFragment@@resolver=getResolver() @TO@ VariableDeclarationStatement@@PageableHandlerMethodArgumentResolver resolver=getResolver(); @AT@ 7932 @LENGTH@ 24
---------INS SimpleName@@resolver @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 7932 @LENGTH@ 8
---------INS MethodInvocation@@MethodName:getResolver:[] @TO@ VariableDeclarationFragment@@resolver=getResolver() @AT@ 7943 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:resolver.setOneIndexedParameters(true) @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 7960 @LENGTH@ 39
------INS MethodInvocation@@resolver.setOneIndexedParameters(true) @TO@ ExpressionStatement@@MethodInvocation:resolver.setOneIndexedParameters(true) @AT@ 7960 @LENGTH@ 38
---------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.setOneIndexedParameters(true) @AT@ 7960 @LENGTH@ 8
---------INS SimpleName@@MethodName:setOneIndexedParameters:[true] @TO@ MethodInvocation@@resolver.setOneIndexedParameters(true) @AT@ 7969 @LENGTH@ 29
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setOneIndexedParameters:[true] @AT@ 7993 @LENGTH@ 4
---INS VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 8003 @LENGTH@ 62
------INS SimpleType@@MockHttpServletRequest @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 8003 @LENGTH@ 22
------INS VariableDeclarationFragment@@request=new MockHttpServletRequest() @TO@ VariableDeclarationStatement@@MockHttpServletRequest request=new MockHttpServletRequest(); @AT@ 8026 @LENGTH@ 38
---------INS SimpleName@@request @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 8026 @LENGTH@ 7
---------INS ClassInstanceCreation@@MockHttpServletRequest[] @TO@ VariableDeclarationFragment@@request=new MockHttpServletRequest() @AT@ 8036 @LENGTH@ 28
------------INS New@@new @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 8036 @LENGTH@ 3
------------INS SimpleType@@MockHttpServletRequest @TO@ ClassInstanceCreation@@MockHttpServletRequest[] @AT@ 8040 @LENGTH@ 22
---INS ExpressionStatement@@MethodInvocation:request.addParameter("size","10") @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 8068 @LENGTH@ 35
------INS MethodInvocation@@request.addParameter("size","10") @TO@ ExpressionStatement@@MethodInvocation:request.addParameter("size","10") @AT@ 8068 @LENGTH@ 34
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.addParameter("size","10") @AT@ 8068 @LENGTH@ 7
---------INS SimpleName@@MethodName:addParameter:["size", "10"] @TO@ MethodInvocation@@request.addParameter("size","10") @AT@ 8076 @LENGTH@ 26
------------INS StringLiteral@@"size" @TO@ SimpleName@@MethodName:addParameter:["size", "10"] @AT@ 8089 @LENGTH@ 6
------------INS StringLiteral@@"10" @TO@ SimpleName@@MethodName:addParameter:["size", "10"] @AT@ 8097 @LENGTH@ 4
---INS VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 8107 @LENGTH@ 113
------INS SimpleType@@Pageable @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 8107 @LENGTH@ 8
------INS VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationStatement@@Pageable result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null); @AT@ 8116 @LENGTH@ 103
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 8116 @LENGTH@ 6
---------INS MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @TO@ VariableDeclarationFragment@@result=resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 8125 @LENGTH@ 94
------------INS SimpleName@@Name:resolver @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 8125 @LENGTH@ 8
------------INS SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @TO@ MethodInvocation@@resolver.resolveArgument(supportedMethodParameter,null,new ServletWebRequest(request),null) @AT@ 8134 @LENGTH@ 85
---------------INS SimpleName@@supportedMethodParameter @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 8150 @LENGTH@ 24
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 8176 @LENGTH@ 4
---------------INS ClassInstanceCreation@@ServletWebRequest[request] @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 8182 @LENGTH@ 30
------------------INS New@@new @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 8182 @LENGTH@ 3
------------------INS SimpleType@@ServletWebRequest @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 8186 @LENGTH@ 17
------------------INS SimpleName@@request @TO@ ClassInstanceCreation@@ServletWebRequest[request] @AT@ 8204 @LENGTH@ 7
---------------INS NullLiteral@@null @TO@ SimpleName@@MethodName:resolveArgument:[supportedMethodParameter, null, new ServletWebRequest(request), null] @AT@ 8214 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getPageSize(),is(10)) @TO@ MethodDeclaration@@public, void, MethodName:returnsCorrectPageSizeForOneIndexParameters,  @AT@ 8224 @LENGTH@ 41
------INS MethodInvocation@@assertThat(result.getPageSize(),is(10)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getPageSize(),is(10)) @AT@ 8224 @LENGTH@ 40
---------INS SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @TO@ MethodInvocation@@assertThat(result.getPageSize(),is(10)) @AT@ 8224 @LENGTH@ 40
------------INS MethodInvocation@@result.getPageSize() @TO@ SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @AT@ 8235 @LENGTH@ 20
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getPageSize() @AT@ 8235 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getPageSize:[] @TO@ MethodInvocation@@result.getPageSize() @AT@ 8242 @LENGTH@ 13
------------INS MethodInvocation@@is(10) @TO@ SimpleName@@MethodName:assertThat:[result.getPageSize(), is(10)] @AT@ 8257 @LENGTH@ 6
---------------INS SimpleName@@MethodName:is:[10] @TO@ MethodInvocation@@is(10) @AT@ 8257 @LENGTH@ 6
------------------INS NumberLiteral@@10 @TO@ SimpleName@@MethodName:is:[10] @AT@ 8260 @LENGTH@ 2


INS MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @TO@ TypeDeclaration@@[public]RepositoryMethodResourceMappingUnitTests,  @AT@ 4587 @LENGTH@ 331
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4587 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4594 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotIncludePageableAsParameter @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4599 @LENGTH@ 33
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4642 @LENGTH@ 9
---INS VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class); @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4657 @LENGTH@ 97
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class); @AT@ 4657 @LENGTH@ 6
------INS VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @TO@ VariableDeclarationStatement@@Method method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class); @AT@ 4664 @LENGTH@ 89
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @AT@ 4664 @LENGTH@ 6
---------INS MethodInvocation@@PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @TO@ VariableDeclarationFragment@@method=PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @AT@ 4673 @LENGTH@ 80
------------INS TypeLiteral@@PersonRepository.class @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @AT@ 4673 @LENGTH@ 22
------------INS SimpleName@@MethodName:getMethod:["findByLastname", String.class, Pageable.class] @TO@ MethodInvocation@@PersonRepository.class.getMethod("findByLastname",String.class,Pageable.class) @AT@ 4696 @LENGTH@ 57
---------------INS StringLiteral@@"findByLastname" @TO@ SimpleName@@MethodName:getMethod:["findByLastname", String.class, Pageable.class] @AT@ 4706 @LENGTH@ 16
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getMethod:["findByLastname", String.class, Pageable.class] @AT@ 4724 @LENGTH@ 12
---------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getMethod:["findByLastname", String.class, Pageable.class] @AT@ 4738 @LENGTH@ 14
---INS VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=getMappingFor(method); @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4757 @LENGTH@ 64
------INS SimpleType@@RepositoryMethodResourceMapping @TO@ VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=getMappingFor(method); @AT@ 4757 @LENGTH@ 31
------INS VariableDeclarationFragment@@mapping=getMappingFor(method) @TO@ VariableDeclarationStatement@@RepositoryMethodResourceMapping mapping=getMappingFor(method); @AT@ 4789 @LENGTH@ 31
---------INS SimpleName@@mapping @TO@ VariableDeclarationFragment@@mapping=getMappingFor(method) @AT@ 4789 @LENGTH@ 7
---------INS MethodInvocation@@getMappingFor(method) @TO@ VariableDeclarationFragment@@mapping=getMappingFor(method) @AT@ 4799 @LENGTH@ 21
------------INS SimpleName@@MethodName:getMappingFor:[method] @TO@ MethodInvocation@@getMappingFor(method) @AT@ 4799 @LENGTH@ 21
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:getMappingFor:[method] @AT@ 4813 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(mapping.getParametersMetadata().getParameterNames(),not(hasItem("pageable"))) @TO@ MethodDeclaration@@public, void, MethodName:doesNotIncludePageableAsParameter, Exception,  @AT@ 4825 @LENGTH@ 90
------INS MethodInvocation@@assertThat(mapping.getParametersMetadata().getParameterNames(),not(hasItem("pageable"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(mapping.getParametersMetadata().getParameterNames(),not(hasItem("pageable"))) @AT@ 4825 @LENGTH@ 89
---------INS SimpleName@@MethodName:assertThat:[mapping.getParametersMetadata().getParameterNames(), not(hasItem("pageable"))] @TO@ MethodInvocation@@assertThat(mapping.getParametersMetadata().getParameterNames(),not(hasItem("pageable"))) @AT@ 4825 @LENGTH@ 89
------------INS MethodInvocation@@mapping.getParametersMetadata().getParameterNames() @TO@ SimpleName@@MethodName:assertThat:[mapping.getParametersMetadata().getParameterNames(), not(hasItem("pageable"))] @AT@ 4836 @LENGTH@ 51
---------------INS MethodInvocation@@MethodName:getParametersMetadata:[] @TO@ MethodInvocation@@mapping.getParametersMetadata().getParameterNames() @AT@ 4836 @LENGTH@ 31
---------------INS SimpleName@@Name:mapping @TO@ MethodInvocation@@mapping.getParametersMetadata().getParameterNames() @AT@ 4836 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getParameterNames:[] @TO@ MethodInvocation@@mapping.getParametersMetadata().getParameterNames() @AT@ 4868 @LENGTH@ 19
------------INS MethodInvocation@@not(hasItem("pageable")) @TO@ SimpleName@@MethodName:assertThat:[mapping.getParametersMetadata().getParameterNames(), not(hasItem("pageable"))] @AT@ 4889 @LENGTH@ 24
---------------INS SimpleName@@MethodName:not:[hasItem("pageable")] @TO@ MethodInvocation@@not(hasItem("pageable")) @AT@ 4889 @LENGTH@ 24
------------------INS MethodInvocation@@hasItem("pageable") @TO@ SimpleName@@MethodName:not:[hasItem("pageable")] @AT@ 4893 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------INS SimpleName@@MethodName:not:[hasItem("pageable")] @TO@ MethodInvocation@@not(hasItem("pageable")) @AT@ 4889 @LENGTH@ 24
------------------INS MethodInvocation@@hasItem("pageable") @TO@ SimpleName@@MethodName:not:[hasItem("pageable")] @AT@ 4893 @LENGTH@ 19
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:hasItem:["pageable"] @TO@ MethodInvocation@@hasItem("pageable") @AT@ 4893 @LENGTH@ 19
------------------------INS StringLiteral@@"pageable" @TO@ SimpleName@@MethodName:hasItem:["pageable"] @AT@ 4901 @LENGTH@ 10


INS MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @TO@ TypeDeclaration@@[public]ServletComponent, HttpCommonComponent[RestConsumerFactory, RestApiConsumerFactory] @AT@ 5774 @LENGTH@ 67
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 5774 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 5784 @LENGTH@ 7
---INS SimpleName@@MethodName:lenientContextPath @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 5792 @LENGTH@ 18
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 5823 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 5830 @LENGTH@ 4


INS MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @TO@ TypeDeclaration@@[public, static]MyService,  @AT@ 7865 @LENGTH@ 97
---INS Modifier@@public @TO@ MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @AT@ 7865 @LENGTH@ 6
---INS SimpleType@@String @TO@ MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @AT@ 7872 @LENGTH@ 6
---INS SimpleName@@MethodName:handleWithFanout @TO@ MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @AT@ 7879 @LENGTH@ 16
---INS SingleVariableDeclaration@@String foo @TO@ MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @AT@ 7896 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String foo @AT@ 7896 @LENGTH@ 6
------INS SimpleName@@foo @TO@ SingleVariableDeclaration@@String foo @AT@ 7903 @LENGTH@ 3
---INS ReturnStatement@@InfixExpression:foo.toUpperCase() + foo.toUpperCase() @TO@ MethodDeclaration@@public, String, MethodName:handleWithFanout, String foo,  @AT@ 7913 @LENGTH@ 45
------INS InfixExpression@@foo.toUpperCase() + foo.toUpperCase() @TO@ ReturnStatement@@InfixExpression:foo.toUpperCase() + foo.toUpperCase() @AT@ 7920 @LENGTH@ 37
---------INS MethodInvocation@@foo.toUpperCase() @TO@ InfixExpression@@foo.toUpperCase() + foo.toUpperCase() @AT@ 7920 @LENGTH@ 17
------------INS SimpleName@@Name:foo @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 7920 @LENGTH@ 3
------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 7924 @LENGTH@ 13
---------INS Operator@@+ @TO@ InfixExpression@@foo.toUpperCase() + foo.toUpperCase() @AT@ 7937 @LENGTH@ 1
---------INS MethodInvocation@@foo.toUpperCase() @TO@ InfixExpression@@foo.toUpperCase() + foo.toUpperCase() @AT@ 7940 @LENGTH@ 17
------------INS SimpleName@@Name:foo @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 7940 @LENGTH@ 3
------------INS SimpleName@@MethodName:toUpperCase:[] @TO@ MethodInvocation@@foo.toUpperCase() @AT@ 7944 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")) @AT@ 1846 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue(json.contains("\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")) @AT@ 1846 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")] @AT@ 1846 @LENGTH@ 88
---------UPD MethodInvocation@@json.contains("\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\"") @TO@ json.contains("\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"") @AT@ 1857 @LENGTH@ 76
------------UPD SimpleName@@MethodName:contains:["\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\""] @AT@ 1862 @LENGTH@ 71
---------------UPD StringLiteral@@"\"cache\": { \"kind\": \"parameter\", \"type\": \"boolean\"" @TO@ "\"cache\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"" @AT@ 1871 @LENGTH@ 61


UPD ThrowStatement@@ClassInstanceCreation:new InvalidDataAccessApiUsageException("No Persitent Entity information found for the class " + entityClass.getName()) @TO@ ClassInstanceCreation:new InvalidDataAccessApiUsageException("No Persistent Entity information found for the class " + entityClass.getName()) @AT@ 74925 @LENGTH@ 130
---UPD ClassInstanceCreation@@InvalidDataAccessApiUsageException["No Persitent Entity information found for the class " + entityClass.getName()] @TO@ InvalidDataAccessApiUsageException["No Persistent Entity information found for the class " + entityClass.getName()] @AT@ 74931 @LENGTH@ 123
------UPD InfixExpression@@"No Persitent Entity information found for the class " + entityClass.getName() @TO@ "No Persistent Entity information found for the class " + entityClass.getName() @AT@ 74970 @LENGTH@ 83
---------UPD StringLiteral@@"No Persitent Entity information found for the class " @TO@ "No Persistent Entity information found for the class " @AT@ 74970 @LENGTH@ 54


UPD VariableDeclarationStatement@@final BeanWrapper<Object> wrapper=BeanWrapper.create(instance,getConversionService()); @TO@ final PersistentPropertyAccessor wrapper=BeanPropertyAccessor.create(instance,getConversionService()); @AT@ 5235 @LENGTH@ 89
---DEL ParameterizedType@@BeanWrapper<Object> @AT@ 5241 @LENGTH@ 19
------DEL SimpleType@@BeanWrapper @AT@ 5241 @LENGTH@ 11
------DEL SimpleType@@Object @AT@ 5253 @LENGTH@ 6
---INS SimpleType@@PersistentPropertyAccessor @TO@ VariableDeclarationStatement@@final BeanWrapper<Object> wrapper=BeanWrapper.create(instance,getConversionService()); @AT@ 5250 @LENGTH@ 26
---UPD VariableDeclarationFragment@@wrapper=BeanWrapper.create(instance,getConversionService()) @TO@ wrapper=BeanPropertyAccessor.create(instance,getConversionService()) @AT@ 5261 @LENGTH@ 62
------UPD MethodInvocation@@BeanWrapper.create(instance,getConversionService()) @TO@ BeanPropertyAccessor.create(instance,getConversionService()) @AT@ 5271 @LENGTH@ 52
---------UPD SimpleName@@Name:BeanWrapper @TO@ Name:BeanPropertyAccessor @AT@ 5271 @LENGTH@ 11


UPD IfStatement@@if (metadata == null) {  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType());  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ if (metadata == null) {  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));  } else {    MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);    MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);    returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;    MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);  }} @AT@ 3883 @LENGTH@ 661
---UPD Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType());  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ ElseBody:{  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @AT@ 3905 @LENGTH@ 639
---INS Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));  } else {    MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);    MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);    returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;    MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);  }} @TO@ IfStatement@@if (metadata == null) {  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType());  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @AT@ 3949 @LENGTH@ 871
------MOV VariableDeclarationStatement@@Class<?> returnedObjectType=getReturnedObjectType(); @TO@ Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));  } else {    MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);    MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);    returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;    MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);  }} @AT@ 3911 @LENGTH@ 54
------MOV VariableDeclarationStatement@@Class<?> domainClass=getDomainClass(); @TO@ Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));  } else {    MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);    MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);    returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;    MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);  }} @AT@ 3969 @LENGTH@ 40
------INS IfStatement@@if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} else {  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));  } else {    MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);    MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);    returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;    MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;    this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);  }} @AT@ 4058 @LENGTH@ 758
---------MOV Block@@ThenBody:{  Class<?> returnedObjectType=getReturnedObjectType();  Class<?> domainClass=getDomainClass();  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType());  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @TO@ IfStatement@@if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} else {  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @AT@ 3905 @LENGTH@ 639
------------UPD VariableDeclarationStatement@@MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType()); @TO@ MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType); @AT@ 4014 @LENGTH@ 102
---------------UPD VariableDeclarationFragment@@returnedEntity=mappingContext.getPersistentEntity(getReturnedObjectType()) @TO@ returnedEntity=mappingContext.getPersistentEntity(returnedObjectType) @AT@ 4039 @LENGTH@ 76
------------------UPD MethodInvocation@@mappingContext.getPersistentEntity(getReturnedObjectType()) @TO@ mappingContext.getPersistentEntity(returnedObjectType) @AT@ 4056 @LENGTH@ 59
---------------------UPD SimpleName@@MethodName:getPersistentEntity:[getReturnedObjectType()] @TO@ MethodName:getPersistentEntity:[returnedObjectType] @AT@ 4071 @LENGTH@ 44
------------------------DEL MethodInvocation@@MethodName:getReturnedObjectType:[] @AT@ 4091 @LENGTH@ 23
------------------------INS SimpleName@@returnedObjectType @TO@ SimpleName@@MethodName:getPersistentEntity:[getReturnedObjectType()] @AT@ 4356 @LENGTH@ 18
---------INS MethodInvocation@@ClassUtils.isPrimitiveOrWrapper(returnedObjectType) @TO@ IfStatement@@if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} else {  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @AT@ 4062 @LENGTH@ 51
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.isPrimitiveOrWrapper(returnedObjectType) @AT@ 4062 @LENGTH@ 10
------------INS SimpleName@@MethodName:isPrimitiveOrWrapper:[returnedObjectType] @TO@ MethodInvocation@@ClassUtils.isPrimitiveOrWrapper(returnedObjectType) @AT@ 4073 @LENGTH@ 40
---------------INS SimpleName@@returnedObjectType @TO@ SimpleName@@MethodName:isPrimitiveOrWrapper:[returnedObjectType] @AT@ 4094 @LENGTH@ 18
---------INS Block@@ThenBody:{  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} @TO@ IfStatement@@if (ClassUtils.isPrimitiveOrWrapper(returnedObjectType)) {  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} else {  MongoPersistentEntity<?> returnedEntity=mappingContext.getPersistentEntity(returnedObjectType);  MongoPersistentEntity<?> managedEntity=mappingContext.getPersistentEntity(domainClass);  returnedEntity=returnedEntity == null ? managedEntity : returnedEntity;  MongoPersistentEntity<?> collectionEntity=domainClass.isAssignableFrom(returnedObjectType) ? returnedEntity : managedEntity;  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)returnedEntity.getType(),collectionEntity);} @AT@ 4115 @LENGTH@ 151
------------INS ExpressionStatement@@Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @TO@ Block@@ThenBody:{  this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass));} @AT@ 4122 @LENGTH@ 138
---------------INS Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @TO@ ExpressionStatement@@Assignment:this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @AT@ 4122 @LENGTH@ 137
------------------INS FieldAccess@@this.metadata @TO@ Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @AT@ 4122 @LENGTH@ 13
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.metadata @AT@ 4122 @LENGTH@ 4
---------------------INS SimpleName@@metadata @TO@ FieldAccess@@this.metadata @AT@ 4127 @LENGTH@ 8
------------------INS Operator@@= @TO@ Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @AT@ 4135 @LENGTH@ 1
------------------INS ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @TO@ Assignment@@this.metadata=new SimpleMongoEntityMetadata<Object>((Class<Object>)domainClass,mappingContext.getPersistentEntity(domainClass)) @AT@ 4138 @LENGTH@ 121
---------------------INS New@@new @TO@ ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @AT@ 4138 @LENGTH@ 3
---------------------INS ParameterizedType@@SimpleMongoEntityMetadata<Object> @TO@ ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @AT@ 4142 @LENGTH@ 33
------------------------INS SimpleType@@SimpleMongoEntityMetadata @TO@ ParameterizedType@@SimpleMongoEntityMetadata<Object> @AT@ 4142 @LENGTH@ 25
------------------------INS SimpleType@@Object @TO@ ParameterizedType@@SimpleMongoEntityMetadata<Object> @AT@ 4168 @LENGTH@ 6
---------------------INS CastExpression@@(Class<Object>)domainClass @TO@ ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @AT@ 4176 @LENGTH@ 27
------------------------INS ParameterizedType@@Class<Object> @TO@ CastExpression@@(Class<Object>)domainClass @AT@ 4177 @LENGTH@ 13
---------------------------INS SimpleType@@Class @TO@ ParameterizedType@@Class<Object> @AT@ 4177 @LENGTH@ 5
---------------------------INS SimpleType@@Object @TO@ ParameterizedType@@Class<Object> @AT@ 4183 @LENGTH@ 6
------------------------INS SimpleName@@domainClass @TO@ CastExpression@@(Class<Object>)domainClass @AT@ 4192 @LENGTH@ 11
---------------------INS MethodInvocation@@mappingContext.getPersistentEntity(domainClass) @TO@ ClassInstanceCreation@@SimpleMongoEntityMetadata<Object>[(Class<Object>)domainClass, mappingContext.getPersistentEntity(domainClass)] @AT@ 4211 @LENGTH@ 47
------------------------INS SimpleName@@Name:mappingContext @TO@ MethodInvocation@@mappingContext.getPersistentEntity(domainClass) @AT@ 4211 @LENGTH@ 14
------------------------INS SimpleName@@MethodName:getPersistentEntity:[domainClass] @TO@ MethodInvocation@@mappingContext.getPersistentEntity(domainClass) @AT@ 4226 @LENGTH@ 32
---------------------------INS SimpleName@@domainClass @TO@ SimpleName@@MethodName:getPersistentEntity:[domainClass] @AT@ 4246 @LENGTH@ 11


INS WhileStatement@@while (!delegate.hasNext() && !CursorState.FINISHED.equals(state)) {  scan(cursorId);} @TO@ MethodDeclaration@@public, boolean, MethodName:hasNext,  @AT@ 4012 @LENGTH@ 91
---MOV InfixExpression@@!delegate.hasNext() && !CursorState.FINISHED.equals(state) @TO@ WhileStatement@@while (!delegate.hasNext() && !CursorState.FINISHED.equals(state)) {  scan(cursorId);} @AT@ 3989 @LENGTH@ 58
---MOV Block@@ThenBody:{  scan(cursorId);} @TO@ WhileStatement@@while (!delegate.hasNext() && !CursorState.FINISHED.equals(state)) {  scan(cursorId);} @AT@ 4049 @LENGTH@ 24


INS MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @TO@ TypeDeclaration@@[public]QueryUtilsUnitTests,  @AT@ 8864 @LENGTH@ 248
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 8864 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 8871 @LENGTH@ 4
---INS SimpleName@@MethodName:doesPrefixPropertyWith @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 8876 @LENGTH@ 22
---INS VariableDeclarationStatement@@String query="from Cat c join Dog d"; @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 8906 @LENGTH@ 39
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String query="from Cat c join Dog d"; @AT@ 8906 @LENGTH@ 6
------INS VariableDeclarationFragment@@query="from Cat c join Dog d" @TO@ VariableDeclarationStatement@@String query="from Cat c join Dog d"; @AT@ 8913 @LENGTH@ 31
---------INS SimpleName@@query @TO@ VariableDeclarationFragment@@query="from Cat c join Dog d" @AT@ 8913 @LENGTH@ 5
---------INS StringLiteral@@"from Cat c join Dog d" @TO@ VariableDeclarationFragment@@query="from Cat c join Dog d" @AT@ 8921 @LENGTH@ 23
---INS VariableDeclarationStatement@@Sort sort=new Sort("dPropertyStartingWithJoinAlias"); @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 8948 @LENGTH@ 55
------INS SimpleType@@Sort @TO@ VariableDeclarationStatement@@Sort sort=new Sort("dPropertyStartingWithJoinAlias"); @AT@ 8948 @LENGTH@ 4
------INS VariableDeclarationFragment@@sort=new Sort("dPropertyStartingWithJoinAlias") @TO@ VariableDeclarationStatement@@Sort sort=new Sort("dPropertyStartingWithJoinAlias"); @AT@ 8953 @LENGTH@ 49
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new Sort("dPropertyStartingWithJoinAlias") @AT@ 8953 @LENGTH@ 4
---------INS ClassInstanceCreation@@Sort["dPropertyStartingWithJoinAlias"] @TO@ VariableDeclarationFragment@@sort=new Sort("dPropertyStartingWithJoinAlias") @AT@ 8960 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@Sort["dPropertyStartingWithJoinAlias"] @AT@ 8960 @LENGTH@ 3
------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["dPropertyStartingWithJoinAlias"] @AT@ 8964 @LENGTH@ 4
------------INS StringLiteral@@"dPropertyStartingWithJoinAlias" @TO@ ClassInstanceCreation@@Sort["dPropertyStartingWithJoinAlias"] @AT@ 8969 @LENGTH@ 32
---INS ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"c"),endsWith("order by c.dPropertyStartingWithJoinAlias asc")) @TO@ MethodDeclaration@@public, void, MethodName:doesPrefixPropertyWith,  @AT@ 9007 @LENGTH@ 102
------INS MethodInvocation@@assertThat(applySorting(query,sort,"c"),endsWith("order by c.dPropertyStartingWithJoinAlias asc")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(applySorting(query,sort,"c"),endsWith("order by c.dPropertyStartingWithJoinAlias asc")) @AT@ 9007 @LENGTH@ 101
---------INS SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by c.dPropertyStartingWithJoinAlias asc")] @TO@ MethodInvocation@@assertThat(applySorting(query,sort,"c"),endsWith("order by c.dPropertyStartingWithJoinAlias asc")) @AT@ 9007 @LENGTH@ 101
------------INS MethodInvocation@@applySorting(query,sort,"c") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by c.dPropertyStartingWithJoinAlias asc")] @AT@ 9018 @LENGTH@ 30
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "c"] @TO@ MethodInvocation@@applySorting(query,sort,"c") @AT@ 9018 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9031 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9038 @LENGTH@ 4
------------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9044 @LENGTH@ 3
---------------INS SimpleName@@MethodName:applySorting:[query, sort, "c"] @TO@ MethodInvocation@@applySorting(query,sort,"c") @AT@ 9018 @LENGTH@ 30
------------------INS SimpleName@@query @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9031 @LENGTH@ 5
------------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9038 @LENGTH@ 4
------------------INS StringLiteral@@"c" @TO@ SimpleName@@MethodName:applySorting:[query, sort, "c"] @AT@ 9044 @LENGTH@ 3
------------INS MethodInvocation@@endsWith("order by c.dPropertyStartingWithJoinAlias asc") @TO@ SimpleName@@MethodName:assertThat:[applySorting(query,sort,"c"), endsWith("order by c.dPropertyStartingWithJoinAlias asc")] @AT@ 9050 @LENGTH@ 57
---------------INS SimpleName@@MethodName:endsWith:["order by c.dPropertyStartingWithJoinAlias asc"] @TO@ MethodInvocation@@endsWith("order by c.dPropertyStartingWithJoinAlias asc") @AT@ 9050 @LENGTH@ 57
------------------INS StringLiteral@@"order by c.dPropertyStartingWithJoinAlias asc" @TO@ SimpleName@@MethodName:endsWith:["order by c.dPropertyStartingWithJoinAlias asc"] @AT@ 9059 @LENGTH@ 47
---------------INS SimpleName@@MethodName:endsWith:["order by c.dPropertyStartingWithJoinAlias asc"] @TO@ MethodInvocation@@endsWith("order by c.dPropertyStartingWithJoinAlias asc") @AT@ 9050 @LENGTH@ 57
------------------INS StringLiteral@@"order by c.dPropertyStartingWithJoinAlias asc" @TO@ SimpleName@@MethodName:endsWith:["order by c.dPropertyStartingWithJoinAlias asc"] @AT@ 9059 @LENGTH@ 47


UPD TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,false);  } else {    old.setBody(newBody);  }} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newBody=expression.evaluate(exchange,Object.class);  if (exchange.getException() != null) {    callback.done(true);    return true;  }  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,false);  } else {    old.setBody(newBody);  }} catch (Throwable e) {  exchange.setException(e);} @AT@ 1861 @LENGTH@ 949
---INS IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,false);  } else {    old.setBody(newBody);  }} catch (Exception e) {  exchange.setException(e);} @AT@ 1954 @LENGTH@ 194
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 1958 @LENGTH@ 31
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 1958 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 1958 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 1967 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getException() != null @AT@ 1981 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 1985 @LENGTH@ 4
------INS Block@@ThenBody:{  callback.done(true);  return true;} @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 1991 @LENGTH@ 157
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2085 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 2085 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 2085 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 2094 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 2099 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2122 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2129 @LENGTH@ 4
---UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Throwable e) {  exchange.setException(e);} @AT@ 2741 @LENGTH@ 69
------UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 2748 @LENGTH@ 11
---------UPD SimpleType@@Exception @TO@ Throwable @AT@ 2748 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @TO@ TypeDeclaration@@[public]NettyHttpProducerQueryParamTest, BaseNettyTest @AT@ 2988 @LENGTH@ 718
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 2988 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 2995 @LENGTH@ 4
---INS SimpleName@@MethodName:testQueryParametersInUriWithDynamicPath @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3000 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3049 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3165 @LENGTH@ 280
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @AT@ 3165 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @AT@ 3174 @LENGTH@ 270
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3174 @LENGTH@ 8
---------INS MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3185 @LENGTH@ 259
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3185 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @TO@ MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3194 @LENGTH@ 250
---------------INS MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @TO@ SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @AT@ 3202 @LENGTH@ 53
------------------INS ParenthesizedExpression@@(url + "&quote=Camel%20rocks") @TO@ MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @AT@ 3202 @LENGTH@ 30
---------------------INS InfixExpression@@url + "&quote=Camel%20rocks" @TO@ ParenthesizedExpression@@(url + "&quote=Camel%20rocks") @AT@ 3203 @LENGTH@ 28
------------------------INS SimpleName@@url @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3203 @LENGTH@ 3
------------------------INS Operator@@+ @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3206 @LENGTH@ 1
------------------------INS StringLiteral@@"&quote=Camel%20rocks" @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3209 @LENGTH@ 22
------------------INS SimpleName@@MethodName:replace:["/cheese", ""] @TO@ MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @AT@ 3233 @LENGTH@ 22
---------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 3241 @LENGTH@ 9
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 3252 @LENGTH@ 2
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @AT@ 3257 @LENGTH@ 186
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 3257 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 3261 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 3273 @LENGTH@ 170
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3287 @LENGTH@ 146
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3287 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3294 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3299 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3307 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3307 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3316 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3333 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3361 @LENGTH@ 58
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3361 @LENGTH@ 57
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3361 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3361 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3378 @LENGTH@ 40
---------------------------------INS QualifiedName@@Exchange.HTTP_PATH @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 3388 @LENGTH@ 18
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 3388 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_PATH @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 3397 @LENGTH@ 9
---------------------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 3408 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3454 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @AT@ 3454 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[exchange] @TO@ MethodInvocation@@assertNotNull(exchange) @AT@ 3454 @LENGTH@ 23
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertNotNull:[exchange] @AT@ 3468 @LENGTH@ 8
---INS VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3488 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 3488 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 3495 @LENGTH@ 46
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 3495 @LENGTH@ 4
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 3502 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3502 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3502 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3520 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 3528 @LENGTH@ 12
---INS VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3551 @LENGTH@ 51
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 3551 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 3551 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 3555 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 3558 @LENGTH@ 1
------INS VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 3561 @LENGTH@ 40
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 3561 @LENGTH@ 7
---------INS MethodInvocation@@exchange.getOut().getHeaders() @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 3571 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3571 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3571 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3589 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3612 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("Bye World",body) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @AT@ 3612 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["Bye World", body] @TO@ MethodInvocation@@assertEquals("Bye World",body) @AT@ 3612 @LENGTH@ 31
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 3625 @LENGTH@ 11
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 3638 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3653 @LENGTH@ 47
------INS MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @AT@ 3653 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @TO@ MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @AT@ 3653 @LENGTH@ 46
------------INS StringLiteral@@"Carlsberg" @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 3666 @LENGTH@ 11
------------INS MethodInvocation@@headers.get("beer") @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 3679 @LENGTH@ 19
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("beer") @AT@ 3679 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["beer"] @TO@ MethodInvocation@@headers.get("beer") @AT@ 3687 @LENGTH@ 11
------------------INS StringLiteral@@"beer" @TO@ SimpleName@@MethodName:get:["beer"] @AT@ 3691 @LENGTH@ 6


UPD ExpressionStatement@@Assignment:this.scanner=new Scanner(results) @TO@ Assignment:this.scanner=new Scanner(results,"UTF-8") @AT@ 1336 @LENGTH@ 36
---UPD Assignment@@this.scanner=new Scanner(results) @TO@ this.scanner=new Scanner(results,"UTF-8") @AT@ 1336 @LENGTH@ 35
------UPD ClassInstanceCreation@@Scanner[results] @TO@ Scanner[results, "UTF-8"] @AT@ 1351 @LENGTH@ 20
---------INS StringLiteral@@"UTF-8" @TO@ ClassInstanceCreation@@Scanner[results] @AT@ 1372 @LENGTH@ 7


UPD EnhancedForStatement@@for (final ParseResult parseResult : parseResults) {  for (  final JmsDestination topic : parseResult.getTopics()) {    final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(topic.getServer());    String[] jndiBindings=null;    if (topic.getDestination().hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {      final ModelNode entries=topic.getDestination().resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());      jndiBindings=JMSServices.getJndiBindings(entries);    }    JMSTopicService.installService(topic.getName(),serverServiceName,phaseContext.getServiceTarget(),jndiBindings);    final PathElement serverElement=PathElement.pathElement(SERVER,topic.getServer());    final PathElement destination=PathElement.pathElement(JMS_TOPIC,topic.getName());    deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);    PathAddress registration=PathAddress.pathAddress(serverElement,destination);    createDeploymentSubModel(registration,deploymentUnit);    JMSTopicConfigurationRuntimeHandler.INSTANCE.registerResource(topic.getServer(),topic.getName(),topic.getDestination());  }  for (  final JmsDestination queue : parseResult.getQueues()) {    final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(queue.getServer());    String[] jndiBindings=null;    final ModelNode destination=queue.getDestination();    if (destination.hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {      final ModelNode entries=destination.resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());      jndiBindings=JMSServices.getJndiBindings(entries);    }    final String selector=destination.hasDefined(SELECTOR.getName()) ? destination.get(SELECTOR.getName()).resolve().asString() : null;    final boolean durable=destination.hasDefined(DURABLE.getName()) ? destination.get(DURABLE.getName()).resolve().asBoolean() : false;    JMSQueueService.installService(queue.getName(),phaseContext.getServiceTarget(),serverServiceName,selector,durable,jndiBindings);    final PathElement serverElement=PathElement.pathElement(SERVER,queue.getServer());    final PathElement dest=PathElement.pathElement(JMS_QUEUE,queue.getName());    deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);    PathAddress registration=PathAddress.pathAddress(serverElement,dest);    createDeploymentSubModel(registration,deploymentUnit);    JMSQueueConfigurationRuntimeHandler.INSTANCE.registerResource(queue.getServer(),queue.getName(),destination);  }} @TO@ for (final ParseResult parseResult : parseResults) {  for (  final JmsDestination topic : parseResult.getTopics()) {    final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(topic.getServer());    String[] jndiBindings=null;    if (topic.getDestination().hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {      final ModelNode entries=topic.getDestination().resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());      jndiBindings=JMSServices.getJndiBindings(entries);    }    JMSTopicService.installService(topic.getName(),serverServiceName,phaseContext.getServiceTarget(),jndiBindings);    final PathElement serverElement=PathElement.pathElement(SERVER,topic.getServer());    final PathElement destination=PathElement.pathElement(JMS_TOPIC,topic.getName());    deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);    PathAddress registration=PathAddress.pathAddress(serverElement,destination);    createDeploymentSubModel(registration,deploymentUnit);    JMSTopicConfigurationRuntimeHandler.INSTANCE.registerResource(topic.getServer(),topic.getName(),topic.getDestination());  }  for (  final JmsDestination queue : parseResult.getQueues()) {    final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(queue.getServer());    String[] jndiBindings=null;    final ModelNode destination=queue.getDestination();    if (destination.hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {      final ModelNode entries=destination.resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());      jndiBindings=JMSServices.getJndiBindings(entries);    }    final String selector=destination.hasDefined(SELECTOR.getName()) ? destination.get(SELECTOR.getName()).resolve().asString() : null;    final boolean durable=destination.hasDefined(DURABLE.getName()) ? destination.get(DURABLE.getName()).resolve().asBoolean() : false;    JMSQueueService.installService(queue.getName(),phaseContext.getServiceTarget(),serverServiceName,selector,durable,jndiBindings);    final PathElement serverElement=PathElement.pathElement(SERVER,queue.getServer());    final PathElement dest=PathElement.pathElement(JMS_QUEUE,queue.getName());    deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);    PathAddress registration=PathAddress.pathAddress(serverElement,dest);    createDeploymentSubModel(registration,deploymentUnit);    JMSQueueConfigurationRuntimeHandler.INSTANCE.registerResource(queue.getServer(),queue.getName(),destination);  }} @AT@ 3337 @LENGTH@ 3165
---UPD EnhancedForStatement@@for (final JmsDestination topic : parseResult.getTopics()) {  final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(topic.getServer());  String[] jndiBindings=null;  if (topic.getDestination().hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {    final ModelNode entries=topic.getDestination().resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());    jndiBindings=JMSServices.getJndiBindings(entries);  }  JMSTopicService.installService(topic.getName(),serverServiceName,phaseContext.getServiceTarget(),jndiBindings);  final PathElement serverElement=PathElement.pathElement(SERVER,topic.getServer());  final PathElement destination=PathElement.pathElement(JMS_TOPIC,topic.getName());  deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);  PathAddress registration=PathAddress.pathAddress(serverElement,destination);  createDeploymentSubModel(registration,deploymentUnit);  JMSTopicConfigurationRuntimeHandler.INSTANCE.registerResource(topic.getServer(),topic.getName(),topic.getDestination());} @TO@ for (final JmsDestination topic : parseResult.getTopics()) {  final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(topic.getServer());  String[] jndiBindings=null;  if (topic.getDestination().hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {    final ModelNode entries=topic.getDestination().resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());    jndiBindings=JMSServices.getJndiBindings(entries);  }  JMSTopicService.installService(topic.getName(),serverServiceName,phaseContext.getServiceTarget(),jndiBindings);  final PathElement serverElement=PathElement.pathElement(SERVER,topic.getServer());  final PathElement destination=PathElement.pathElement(JMS_TOPIC,topic.getName());  deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);  PathAddress registration=PathAddress.pathAddress(serverElement,destination);  createDeploymentSubModel(registration,deploymentUnit);  JMSTopicConfigurationRuntimeHandler.INSTANCE.registerResource(topic.getServer(),topic.getName(),topic.getDestination());} @AT@ 3403 @LENGTH@ 1366
------UPD ExpressionStatement@@MethodInvocation:deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ MethodInvocation:deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 4357 @LENGTH@ 90
---------UPD MethodInvocation@@deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 4357 @LENGTH@ 89
------------UPD SimpleName@@Name:deploymentUnit @TO@ Name:deploymentResourceSupport @AT@ 4357 @LENGTH@ 14
------------UPD SimpleName@@MethodName:createDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @TO@ MethodName:getDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @AT@ 4372 @LENGTH@ 74
---UPD EnhancedForStatement@@for (final JmsDestination queue : parseResult.getQueues()) {  final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(queue.getServer());  String[] jndiBindings=null;  final ModelNode destination=queue.getDestination();  if (destination.hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {    final ModelNode entries=destination.resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());    jndiBindings=JMSServices.getJndiBindings(entries);  }  final String selector=destination.hasDefined(SELECTOR.getName()) ? destination.get(SELECTOR.getName()).resolve().asString() : null;  final boolean durable=destination.hasDefined(DURABLE.getName()) ? destination.get(DURABLE.getName()).resolve().asBoolean() : false;  JMSQueueService.installService(queue.getName(),phaseContext.getServiceTarget(),serverServiceName,selector,durable,jndiBindings);  final PathElement serverElement=PathElement.pathElement(SERVER,queue.getServer());  final PathElement dest=PathElement.pathElement(JMS_QUEUE,queue.getName());  deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);  PathAddress registration=PathAddress.pathAddress(serverElement,dest);  createDeploymentSubModel(registration,deploymentUnit);  JMSQueueConfigurationRuntimeHandler.INSTANCE.registerResource(queue.getServer(),queue.getName(),destination);} @TO@ for (final JmsDestination queue : parseResult.getQueues()) {  final ServiceName serverServiceName=MessagingServices.getActiveMQServiceName(queue.getServer());  String[] jndiBindings=null;  final ModelNode destination=queue.getDestination();  if (destination.hasDefined(CommonAttributes.DESTINATION_ENTRIES.getName())) {    final ModelNode entries=destination.resolve().get(CommonAttributes.DESTINATION_ENTRIES.getName());    jndiBindings=JMSServices.getJndiBindings(entries);  }  final String selector=destination.hasDefined(SELECTOR.getName()) ? destination.get(SELECTOR.getName()).resolve().asString() : null;  final boolean durable=destination.hasDefined(DURABLE.getName()) ? destination.get(DURABLE.getName()).resolve().asBoolean() : false;  JMSQueueService.installService(queue.getName(),phaseContext.getServiceTarget(),serverServiceName,selector,durable,jndiBindings);  final PathElement serverElement=PathElement.pathElement(SERVER,queue.getServer());  final PathElement dest=PathElement.pathElement(JMS_QUEUE,queue.getName());  deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement);  PathAddress registration=PathAddress.pathAddress(serverElement,dest);  createDeploymentSubModel(registration,deploymentUnit);  JMSQueueConfigurationRuntimeHandler.INSTANCE.registerResource(queue.getServer(),queue.getName(),destination);} @AT@ 4783 @LENGTH@ 1709
------UPD ExpressionStatement@@MethodInvocation:deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ MethodInvocation:deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 6099 @LENGTH@ 90
---------UPD MethodInvocation@@deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 6099 @LENGTH@ 89
------------UPD SimpleName@@Name:deploymentUnit @TO@ Name:deploymentResourceSupport @AT@ 6099 @LENGTH@ 14
------------UPD SimpleName@@MethodName:createDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @TO@ MethodName:getDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @AT@ 6114 @LENGTH@ 74


UPD SuperConstructorInvocation@@super(modelElement,addHandler,attributes);
 @TO@ super(modelElement,addHandler,IdentityStoreRemoveStepHandler.INSTANCE,attributes);
 @AT@ 2231 @LENGTH@ 44
---INS QualifiedName@@IdentityStoreRemoveStepHandler.INSTANCE @TO@ SuperConstructorInvocation@@super(modelElement,addHandler,attributes);
 @AT@ 2263 @LENGTH@ 39
------INS SimpleName@@IdentityStoreRemoveStepHandler @TO@ QualifiedName@@IdentityStoreRemoveStepHandler.INSTANCE @AT@ 2263 @LENGTH@ 30
------INS SimpleName@@INSTANCE @TO@ QualifiedName@@IdentityStoreRemoveStepHandler.INSTANCE @AT@ 2294 @LENGTH@ 8


DEL FieldDeclaration@@private, static, String, [payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>"] @AT@ 3647 @LENGTH@ 161
---DEL VariableDeclarationFragment@@payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 3669 @LENGTH@ 138
------DEL InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 3679 @LENGTH@ 128


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"action\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1859 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue(json.contains("\"action\": { \"kind\": \"parameter\", \"type\": \"string\"")) @TO@ assertTrue(json.contains("\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1859 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"action\": { \"kind\": \"parameter\", \"type\": \"string\"")] @TO@ MethodName:assertTrue:[json.contains("\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")] @AT@ 1859 @LENGTH@ 88
---------UPD MethodInvocation@@json.contains("\"action\": { \"kind\": \"parameter\", \"type\": \"string\"") @TO@ json.contains("\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"") @AT@ 1870 @LENGTH@ 76
------------UPD SimpleName@@MethodName:contains:["\"action\": { \"kind\": \"parameter\", \"type\": \"string\""] @TO@ MethodName:contains:["\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\""] @AT@ 1875 @LENGTH@ 71
---------------UPD StringLiteral@@"\"action\": { \"kind\": \"parameter\", \"type\": \"string\"" @TO@ "\"action\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"" @AT@ 1884 @LENGTH@ 61


UPD Block@@SyncBody:{  if (buffer == null) {    buffer="";  }  StringBuilder sb=new StringBuilder();  final Collection<MethodTarget> matchingTargets=locateTargets(buffer,false,false);  if (matchingTargets.size() == 1) {    MethodTarget methodTarget=matchingTargets.iterator().next();    Annotation[][] parameterAnnotations=methodTarget.getMethod().getParameterAnnotations();    if (parameterAnnotations.length > 0) {      CliCommand cmd=methodTarget.getMethod().getAnnotation(CliCommand.class);      Assert.notNull(cmd,"CliCommand not found");      for (      String value : cmd.value()) {        sb.append("Keyword:                   ").append(value).append(OsUtils.LINE_SEPARATOR);      }      sb.append("Description:               ").append(cmd.help()).append(OsUtils.LINE_SEPARATOR);      for (      Annotation[] annotations : parameterAnnotations) {        CliOption cliOption=null;        for (        Annotation a : annotations) {          if (a instanceof CliOption) {            cliOption=(CliOption)a;            for (            String key : cliOption.key()) {              if ("".equals(key)) {                key="** default **";              }              sb.append(" Keyword:                  ").append(key).append(OsUtils.LINE_SEPARATOR);            }            sb.append("   Help:                   ").append(cliOption.help()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Mandatory:              ").append(cliOption.mandatory()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if specified:   '").append(cliOption.specifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if unspecified: '").append(cliOption.unspecifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append(OsUtils.LINE_SEPARATOR);          }        }        Assert.notNull(cliOption,"CliOption not found for parameter '" + Arrays.toString(annotations) + "'");      }    }  }  SortedSet<String> result=new TreeSet<String>(COMPARATOR);  for (  MethodTarget mt : matchingTargets) {    CliCommand cmd=mt.getMethod().getAnnotation(CliCommand.class);    if (cmd != null) {      for (      String value : cmd.value()) {        if ("".equals(cmd.help())) {          result.add("* " + value);        } else {          result.add("* " + value + " - "+ cmd.help());        }      }    }  }  for (  String s : result) {    sb.append(s).append(OsUtils.LINE_SEPARATOR);  }  LOGGER.info(sb.toString());} @TO@ SyncBody:{  if (buffer == null) {    buffer="";  }  StringBuilder sb=new StringBuilder();  Collection<MethodTarget> matchingTargets=locateTargets(buffer,false,false);  for (  MethodTarget candidate : matchingTargets) {    if (buffer.equals(candidate.getKey())) {      matchingTargets=Collections.singleton(candidate);      break;    }  }  if (matchingTargets.size() == 1) {    MethodTarget methodTarget=matchingTargets.iterator().next();    Annotation[][] parameterAnnotations=methodTarget.getMethod().getParameterAnnotations();    if (parameterAnnotations.length > 0) {      CliCommand cmd=methodTarget.getMethod().getAnnotation(CliCommand.class);      Assert.notNull(cmd,"CliCommand not found");      for (      String value : cmd.value()) {        sb.append("Keyword:                   ").append(value).append(OsUtils.LINE_SEPARATOR);      }      sb.append("Description:               ").append(cmd.help()).append(OsUtils.LINE_SEPARATOR);      for (      Annotation[] annotations : parameterAnnotations) {        CliOption cliOption=null;        for (        Annotation a : annotations) {          if (a instanceof CliOption) {            cliOption=(CliOption)a;            for (            String key : cliOption.key()) {              if ("".equals(key)) {                key="** default **";              }              sb.append(" Keyword:                  ").append(key).append(OsUtils.LINE_SEPARATOR);            }            sb.append("   Help:                   ").append(cliOption.help()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Mandatory:              ").append(cliOption.mandatory()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if specified:   '").append(cliOption.specifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if unspecified: '").append(cliOption.unspecifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append(OsUtils.LINE_SEPARATOR);          }        }        Assert.notNull(cliOption,"CliOption not found for parameter '" + Arrays.toString(annotations) + "'");      }    }  }  SortedSet<String> result=new TreeSet<String>(COMPARATOR);  for (  MethodTarget mt : matchingTargets) {    CliCommand cmd=mt.getMethod().getAnnotation(CliCommand.class);    if (cmd != null) {      for (      String value : cmd.value()) {        if ("".equals(cmd.help())) {          result.add("* " + value);        } else {          result.add("* " + value + " - "+ cmd.help());        }      }    }  }  for (  String s : result) {    sb.append(s).append(OsUtils.LINE_SEPARATOR);  }  LOGGER.info(sb.toString());} @AT@ 36906 @LENGTH@ 2855
---UPD VariableDeclarationStatement@@final Collection<MethodTarget> matchingTargets=locateTargets(buffer,false,false); @TO@ Collection<MethodTarget> matchingTargets=locateTargets(buffer,false,false); @AT@ 37070 @LENGTH@ 85
------DEL Modifier@@final @AT@ 37070 @LENGTH@ 5
---INS EnhancedForStatement@@for (MethodTarget candidate : matchingTargets) {  if (buffer.equals(candidate.getKey())) {    matchingTargets=Collections.singleton(candidate);    break;  }} @TO@ Block@@SyncBody:{  if (buffer == null) {    buffer="";  }  StringBuilder sb=new StringBuilder();  final Collection<MethodTarget> matchingTargets=locateTargets(buffer,false,false);  if (matchingTargets.size() == 1) {    MethodTarget methodTarget=matchingTargets.iterator().next();    Annotation[][] parameterAnnotations=methodTarget.getMethod().getParameterAnnotations();    if (parameterAnnotations.length > 0) {      CliCommand cmd=methodTarget.getMethod().getAnnotation(CliCommand.class);      Assert.notNull(cmd,"CliCommand not found");      for (      String value : cmd.value()) {        sb.append("Keyword:                   ").append(value).append(OsUtils.LINE_SEPARATOR);      }      sb.append("Description:               ").append(cmd.help()).append(OsUtils.LINE_SEPARATOR);      for (      Annotation[] annotations : parameterAnnotations) {        CliOption cliOption=null;        for (        Annotation a : annotations) {          if (a instanceof CliOption) {            cliOption=(CliOption)a;            for (            String key : cliOption.key()) {              if ("".equals(key)) {                key="** default **";              }              sb.append(" Keyword:                  ").append(key).append(OsUtils.LINE_SEPARATOR);            }            sb.append("   Help:                   ").append(cliOption.help()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Mandatory:              ").append(cliOption.mandatory()).append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if specified:   '").append(cliOption.specifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append("   Default if unspecified: '").append(cliOption.unspecifiedDefaultValue()).append("'").append(OsUtils.LINE_SEPARATOR);            sb.append(OsUtils.LINE_SEPARATOR);          }        }        Assert.notNull(cliOption,"CliOption not found for parameter '" + Arrays.toString(annotations) + "'");      }    }  }  SortedSet<String> result=new TreeSet<String>(COMPARATOR);  for (  MethodTarget mt : matchingTargets) {    CliCommand cmd=mt.getMethod().getAnnotation(CliCommand.class);    if (cmd != null) {      for (      String value : cmd.value()) {        if ("".equals(cmd.help())) {          result.add("* " + value);        } else {          result.add("* " + value + " - "+ cmd.help());        }      }    }  }  for (  String s : result) {    sb.append(s).append(OsUtils.LINE_SEPARATOR);  }  LOGGER.info(sb.toString());} @AT@ 37121 @LENGTH@ 173
------INS SingleVariableDeclaration@@MethodTarget candidate @TO@ EnhancedForStatement@@for (MethodTarget candidate : matchingTargets) {  if (buffer.equals(candidate.getKey())) {    matchingTargets=Collections.singleton(candidate);    break;  }} @AT@ 37126 @LENGTH@ 22
---------INS SimpleType@@MethodTarget @TO@ SingleVariableDeclaration@@MethodTarget candidate @AT@ 37126 @LENGTH@ 12
---------INS SimpleName@@candidate @TO@ SingleVariableDeclaration@@MethodTarget candidate @AT@ 37139 @LENGTH@ 9
------INS SimpleName@@matchingTargets @TO@ EnhancedForStatement@@for (MethodTarget candidate : matchingTargets) {  if (buffer.equals(candidate.getKey())) {    matchingTargets=Collections.singleton(candidate);    break;  }} @AT@ 37151 @LENGTH@ 15
------INS IfStatement@@if (buffer.equals(candidate.getKey())) {  matchingTargets=Collections.singleton(candidate);  break;} @TO@ EnhancedForStatement@@for (MethodTarget candidate : matchingTargets) {  if (buffer.equals(candidate.getKey())) {    matchingTargets=Collections.singleton(candidate);    break;  }} @AT@ 37174 @LENGTH@ 115
---------INS MethodInvocation@@buffer.equals(candidate.getKey()) @TO@ IfStatement@@if (buffer.equals(candidate.getKey())) {  matchingTargets=Collections.singleton(candidate);  break;} @AT@ 37178 @LENGTH@ 33
------------INS SimpleName@@Name:buffer @TO@ MethodInvocation@@buffer.equals(candidate.getKey()) @AT@ 37178 @LENGTH@ 6
------------INS SimpleName@@MethodName:equals:[candidate.getKey()] @TO@ MethodInvocation@@buffer.equals(candidate.getKey()) @AT@ 37185 @LENGTH@ 26
---------------INS MethodInvocation@@candidate.getKey() @TO@ SimpleName@@MethodName:equals:[candidate.getKey()] @AT@ 37192 @LENGTH@ 18
------------------INS SimpleName@@Name:candidate @TO@ MethodInvocation@@candidate.getKey() @AT@ 37192 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getKey:[] @TO@ MethodInvocation@@candidate.getKey() @AT@ 37202 @LENGTH@ 8
---------INS Block@@ThenBody:{  matchingTargets=Collections.singleton(candidate);  break;} @TO@ IfStatement@@if (buffer.equals(candidate.getKey())) {  matchingTargets=Collections.singleton(candidate);  break;} @AT@ 37213 @LENGTH@ 76
------------INS ExpressionStatement@@Assignment:matchingTargets=Collections.singleton(candidate) @TO@ Block@@ThenBody:{  matchingTargets=Collections.singleton(candidate);  break;} @AT@ 37220 @LENGTH@ 51
---------------INS Assignment@@matchingTargets=Collections.singleton(candidate) @TO@ ExpressionStatement@@Assignment:matchingTargets=Collections.singleton(candidate) @AT@ 37220 @LENGTH@ 50
------------------INS SimpleName@@matchingTargets @TO@ Assignment@@matchingTargets=Collections.singleton(candidate) @AT@ 37220 @LENGTH@ 15
------------------INS Operator@@= @TO@ Assignment@@matchingTargets=Collections.singleton(candidate) @AT@ 37235 @LENGTH@ 1
------------------INS MethodInvocation@@Collections.singleton(candidate) @TO@ Assignment@@matchingTargets=Collections.singleton(candidate) @AT@ 37238 @LENGTH@ 32
---------------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton(candidate) @AT@ 37238 @LENGTH@ 11
---------------------INS SimpleName@@MethodName:singleton:[candidate] @TO@ MethodInvocation@@Collections.singleton(candidate) @AT@ 37250 @LENGTH@ 20
------------------------INS SimpleName@@candidate @TO@ SimpleName@@MethodName:singleton:[candidate] @AT@ 37260 @LENGTH@ 9
------------INS BreakStatement@@ @TO@ Block@@ThenBody:{  matchingTargets=Collections.singleton(candidate);  break;} @AT@ 37277 @LENGTH@ 6


INS MethodDeclaration@@public, boolean, MethodName:isOrderedChild,  @TO@ EnumDeclaration@@[public]ThreadPoolResourceDefinition, [ResourceDefinition] @AT@ 8215 @LENGTH@ 61
---INS Modifier@@public @TO@ MethodDeclaration@@public, boolean, MethodName:isOrderedChild,  @AT@ 8215 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@public, boolean, MethodName:isOrderedChild,  @AT@ 8222 @LENGTH@ 7
---INS SimpleName@@MethodName:isOrderedChild @TO@ MethodDeclaration@@public, boolean, MethodName:isOrderedChild,  @AT@ 8230 @LENGTH@ 14
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@public, boolean, MethodName:isOrderedChild,  @AT@ 8257 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 8264 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:registrar.register(property.withFormat(JsonSchemaFormat.URI),null) @TO@ MethodInvocation:registrar.register(property.asAssociation(),null) @AT@ 9586 @LENGTH@ 68
---UPD MethodInvocation@@registrar.register(property.withFormat(JsonSchemaFormat.URI),null) @TO@ registrar.register(property.asAssociation(),null) @AT@ 9586 @LENGTH@ 67
------UPD SimpleName@@MethodName:register:[property.withFormat(JsonSchemaFormat.URI), null] @TO@ MethodName:register:[property.asAssociation(), null] @AT@ 9596 @LENGTH@ 57
---------UPD MethodInvocation@@property.withFormat(JsonSchemaFormat.URI) @TO@ property.asAssociation() @AT@ 9605 @LENGTH@ 41
------------UPD SimpleName@@MethodName:withFormat:[JsonSchemaFormat.URI] @TO@ MethodName:asAssociation:[] @AT@ 9614 @LENGTH@ 32
---------------DEL QualifiedName@@JsonSchemaFormat.URI @AT@ 9625 @LENGTH@ 20
------------------DEL SimpleName@@JsonSchemaFormat @AT@ 9625 @LENGTH@ 16
------------------DEL SimpleName@@URI @AT@ 9642 @LENGTH@ 3


INS EnhancedForStatement@@for (String additionalModule : additionalModules) {  File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule);  if (source.exists()) {    this.tool.additionnalModules().add(source.getAbsolutePath());  }} @TO@ MethodDeclaration@@public, void, MethodName:execute, MojoExecutionException, MojoFailureException,  @AT@ 5481 @LENGTH@ 306
---INS SingleVariableDeclaration@@String additionalModule @TO@ EnhancedForStatement@@for (String additionalModule : additionalModules) {  File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule);  if (source.exists()) {    this.tool.additionnalModules().add(source.getAbsolutePath());  }} @AT@ 5486 @LENGTH@ 23
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String additionalModule @AT@ 5486 @LENGTH@ 6
------INS SimpleName@@additionalModule @TO@ SingleVariableDeclaration@@String additionalModule @AT@ 5493 @LENGTH@ 16
---INS SimpleName@@additionalModules @TO@ EnhancedForStatement@@for (String additionalModule : additionalModules) {  File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule);  if (source.exists()) {    this.tool.additionnalModules().add(source.getAbsolutePath());  }} @AT@ 5512 @LENGTH@ 17
---INS VariableDeclarationStatement@@File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule); @TO@ EnhancedForStatement@@for (String additionalModule : additionalModules) {  File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule);  if (source.exists()) {    this.tool.additionnalModules().add(source.getAbsolutePath());  }} @AT@ 5545 @LENGTH@ 105
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule); @AT@ 5545 @LENGTH@ 4
------INS VariableDeclarationFragment@@source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule) @TO@ VariableDeclarationStatement@@File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule); @AT@ 5550 @LENGTH@ 99
---------INS SimpleName@@source @TO@ VariableDeclarationFragment@@source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule) @AT@ 5550 @LENGTH@ 6
---------INS ClassInstanceCreation@@File[this.project.getBuild().getOutputDirectory() + File.separator + additionalModule] @TO@ VariableDeclarationFragment@@source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule) @AT@ 5559 @LENGTH@ 90
------------INS New@@new @TO@ ClassInstanceCreation@@File[this.project.getBuild().getOutputDirectory() + File.separator + additionalModule] @AT@ 5559 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[this.project.getBuild().getOutputDirectory() + File.separator + additionalModule] @AT@ 5563 @LENGTH@ 4
------------INS InfixExpression@@this.project.getBuild().getOutputDirectory() + File.separator + additionalModule @TO@ ClassInstanceCreation@@File[this.project.getBuild().getOutputDirectory() + File.separator + additionalModule] @AT@ 5568 @LENGTH@ 80
---------------INS MethodInvocation@@this.project.getBuild().getOutputDirectory() @TO@ InfixExpression@@this.project.getBuild().getOutputDirectory() + File.separator + additionalModule @AT@ 5568 @LENGTH@ 44
------------------INS MethodInvocation@@MethodName:getBuild:[] @TO@ MethodInvocation@@this.project.getBuild().getOutputDirectory() @AT@ 5568 @LENGTH@ 23
------------------INS FieldAccess@@this.project @TO@ MethodInvocation@@this.project.getBuild().getOutputDirectory() @AT@ 5568 @LENGTH@ 12
---------------------INS ThisExpression@@this @TO@ FieldAccess@@this.project @AT@ 5568 @LENGTH@ 4
---------------------INS SimpleName@@project @TO@ FieldAccess@@this.project @AT@ 5573 @LENGTH@ 7
------------------INS SimpleName@@MethodName:getOutputDirectory:[] @TO@ MethodInvocation@@this.project.getBuild().getOutputDirectory() @AT@ 5592 @LENGTH@ 20
---------------INS Operator@@+ @TO@ InfixExpression@@this.project.getBuild().getOutputDirectory() + File.separator + additionalModule @AT@ 5612 @LENGTH@ 1
---------------INS QualifiedName@@File.separator @TO@ InfixExpression@@this.project.getBuild().getOutputDirectory() + File.separator + additionalModule @AT@ 5615 @LENGTH@ 14
------------------INS SimpleName@@File @TO@ QualifiedName@@File.separator @AT@ 5615 @LENGTH@ 4
------------------INS SimpleName@@separator @TO@ QualifiedName@@File.separator @AT@ 5620 @LENGTH@ 9
---------------INS SimpleName@@additionalModule @TO@ InfixExpression@@this.project.getBuild().getOutputDirectory() + File.separator + additionalModule @AT@ 5632 @LENGTH@ 16
---INS IfStatement@@if (source.exists()) {  this.tool.additionnalModules().add(source.getAbsolutePath());} @TO@ EnhancedForStatement@@for (String additionalModule : additionalModules) {  File source=new File(this.project.getBuild().getOutputDirectory() + File.separator + additionalModule);  if (source.exists()) {    this.tool.additionnalModules().add(source.getAbsolutePath());  }} @AT@ 5663 @LENGTH@ 114
------INS MethodInvocation@@source.exists() @TO@ IfStatement@@if (source.exists()) {  this.tool.additionnalModules().add(source.getAbsolutePath());} @AT@ 5667 @LENGTH@ 15
---------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.exists() @AT@ 5667 @LENGTH@ 6
---------INS SimpleName@@MethodName:exists:[] @TO@ MethodInvocation@@source.exists() @AT@ 5674 @LENGTH@ 8
------INS Block@@ThenBody:{  this.tool.additionnalModules().add(source.getAbsolutePath());} @TO@ IfStatement@@if (source.exists()) {  this.tool.additionnalModules().add(source.getAbsolutePath());} @AT@ 5684 @LENGTH@ 93
---------INS ExpressionStatement@@MethodInvocation:this.tool.additionnalModules().add(source.getAbsolutePath()) @TO@ Block@@ThenBody:{  this.tool.additionnalModules().add(source.getAbsolutePath());} @AT@ 5702 @LENGTH@ 61
------------INS MethodInvocation@@this.tool.additionnalModules().add(source.getAbsolutePath()) @TO@ ExpressionStatement@@MethodInvocation:this.tool.additionnalModules().add(source.getAbsolutePath()) @AT@ 5702 @LENGTH@ 60
---------------INS MethodInvocation@@MethodName:additionnalModules:[] @TO@ MethodInvocation@@this.tool.additionnalModules().add(source.getAbsolutePath()) @AT@ 5702 @LENGTH@ 30
---------------INS FieldAccess@@this.tool @TO@ MethodInvocation@@this.tool.additionnalModules().add(source.getAbsolutePath()) @AT@ 5702 @LENGTH@ 9
------------------INS ThisExpression@@this @TO@ FieldAccess@@this.tool @AT@ 5702 @LENGTH@ 4
------------------INS SimpleName@@tool @TO@ FieldAccess@@this.tool @AT@ 5707 @LENGTH@ 4
---------------INS SimpleName@@MethodName:add:[source.getAbsolutePath()] @TO@ MethodInvocation@@this.tool.additionnalModules().add(source.getAbsolutePath()) @AT@ 5733 @LENGTH@ 29
------------------INS MethodInvocation@@source.getAbsolutePath() @TO@ SimpleName@@MethodName:add:[source.getAbsolutePath()] @AT@ 5737 @LENGTH@ 24
---------------------INS SimpleName@@Name:source @TO@ MethodInvocation@@source.getAbsolutePath() @AT@ 5737 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:getAbsolutePath:[] @TO@ MethodInvocation@@source.getAbsolutePath() @AT@ 5744 @LENGTH@ 17


INS TryStatement@@try {  this.conf=TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload());} catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @TO@ MethodDeclaration@@public, voidMethodName:LlapTaskSchedulerService, TaskSchedulerContext taskSchedulerContext, Clock clock,  @AT@ 6683 @LENGTH@ 280
---INS ExpressionStatement@@Assignment:this.conf=TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload()) @TO@ TryStatement@@try {  this.conf=TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload());} catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @AT@ 6695 @LENGTH@ 93
------MOV Assignment@@this.conf=taskSchedulerContext.getInitialConfiguration() @TO@ ExpressionStatement@@Assignment:this.conf=TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload()) @AT@ 6591 @LENGTH@ 58
---------DEL MethodInvocation@@taskSchedulerContext.getInitialConfiguration() @AT@ 6603 @LENGTH@ 46
---------INS MethodInvocation@@TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload()) @TO@ Assignment@@this.conf=taskSchedulerContext.getInitialConfiguration() @AT@ 6707 @LENGTH@ 80
------------INS SimpleName@@Name:TezUtils @TO@ MethodInvocation@@TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload()) @AT@ 6707 @LENGTH@ 8
------------INS SimpleName@@MethodName:createConfFromUserPayload:[taskSchedulerContext.getInitialUserPayload()] @TO@ MethodInvocation@@TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload()) @AT@ 6716 @LENGTH@ 71
---------------INS MethodInvocation@@taskSchedulerContext.getInitialUserPayload() @TO@ SimpleName@@MethodName:createConfFromUserPayload:[taskSchedulerContext.getInitialUserPayload()] @AT@ 6742 @LENGTH@ 44
------------------MOV SimpleName@@Name:taskSchedulerContext @TO@ MethodInvocation@@taskSchedulerContext.getInitialUserPayload() @AT@ 6603 @LENGTH@ 20
------------------MOV SimpleName@@Name:taskSchedulerContext @TO@ MethodInvocation@@taskSchedulerContext.getInitialUserPayload() @AT@ 6603 @LENGTH@ 20
------------------MOV SimpleName@@MethodName:getInitialConfiguration:[] @TO@ MethodInvocation@@taskSchedulerContext.getInitialUserPayload() @AT@ 6624 @LENGTH@ 25
------------------MOV SimpleName@@MethodName:getInitialConfiguration:[] @TO@ MethodInvocation@@taskSchedulerContext.getInitialUserPayload() @AT@ 6624 @LENGTH@ 25
---INS CatchClause@@catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @TO@ TryStatement@@try {  this.conf=TezUtils.createConfFromUserPayload(taskSchedulerContext.getInitialUserPayload());} catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @AT@ 6795 @LENGTH@ 168
------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @AT@ 6802 @LENGTH@ 13
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 6802 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 6814 @LENGTH@ 1
------INS ThrowStatement@@ClassInstanceCreation:new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e) @TO@ CatchClause@@catch (IOException e) {  throw new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e);} @AT@ 6825 @LENGTH@ 132
---------INS ClassInstanceCreation@@TezUncheckedException["Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(), e] @TO@ ThrowStatement@@ClassInstanceCreation:new TezUncheckedException("Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(),e) @AT@ 6831 @LENGTH@ 125
------------INS New@@new @TO@ ClassInstanceCreation@@TezUncheckedException["Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(), e] @AT@ 6831 @LENGTH@ 3
------------INS SimpleType@@TezUncheckedException @TO@ ClassInstanceCreation@@TezUncheckedException["Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(), e] @AT@ 6835 @LENGTH@ 21
------------INS InfixExpression@@"Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName() @TO@ ClassInstanceCreation@@TezUncheckedException["Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(), e] @AT@ 6868 @LENGTH@ 84
---------------INS StringLiteral@@"Failed to parse user payload for " @TO@ InfixExpression@@"Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName() @AT@ 6868 @LENGTH@ 35
---------------INS Operator@@+ @TO@ InfixExpression@@"Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName() @AT@ 6903 @LENGTH@ 1
---------------INS MethodInvocation@@LlapTaskSchedulerService.class.getSimpleName() @TO@ InfixExpression@@"Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName() @AT@ 6906 @LENGTH@ 46
------------------INS TypeLiteral@@LlapTaskSchedulerService.class @TO@ MethodInvocation@@LlapTaskSchedulerService.class.getSimpleName() @AT@ 6906 @LENGTH@ 30
------------------INS SimpleName@@MethodName:getSimpleName:[] @TO@ MethodInvocation@@LlapTaskSchedulerService.class.getSimpleName() @AT@ 6937 @LENGTH@ 15
------------INS SimpleName@@e @TO@ ClassInstanceCreation@@TezUncheckedException["Failed to parse user payload for " + LlapTaskSchedulerService.class.getSimpleName(), e] @AT@ 6954 @LENGTH@ 1


UPD VariableDeclarationStatement@@Object out=template.requestBody("http://www.google.com/search?q=Camel",""); @TO@ Object out=template.requestBodyAndHeader("http://www.google.com/search?q=Camel","",Exchange.HTTP_METHOD,constant("GET")); @AT@ 1269 @LENGTH@ 78
---UPD VariableDeclarationFragment@@out=template.requestBody("http://www.google.com/search?q=Camel","") @TO@ out=template.requestBodyAndHeader("http://www.google.com/search?q=Camel","",Exchange.HTTP_METHOD,constant("GET")) @AT@ 1276 @LENGTH@ 70
------UPD MethodInvocation@@template.requestBody("http://www.google.com/search?q=Camel","") @TO@ template.requestBodyAndHeader("http://www.google.com/search?q=Camel","",Exchange.HTTP_METHOD,constant("GET")) @AT@ 1282 @LENGTH@ 64
---------UPD SimpleName@@MethodName:requestBody:["http://www.google.com/search?q=Camel", ""] @TO@ MethodName:requestBodyAndHeader:["http://www.google.com/search?q=Camel", "", Exchange.HTTP_METHOD, constant("GET")] @AT@ 1291 @LENGTH@ 55
------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:requestBody:["http://www.google.com/search?q=Camel", ""] @AT@ 1467 @LENGTH@ 20
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1467 @LENGTH@ 8
---------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1476 @LENGTH@ 11
------------INS MethodInvocation@@constant("GET") @TO@ SimpleName@@MethodName:requestBody:["http://www.google.com/search?q=Camel", ""] @AT@ 1489 @LENGTH@ 15
---------------INS SimpleName@@MethodName:constant:["GET"] @TO@ MethodInvocation@@constant("GET") @AT@ 1489 @LENGTH@ 15
------------------INS StringLiteral@@"GET" @TO@ SimpleName@@MethodName:constant:["GET"] @AT@ 1498 @LENGTH@ 5


INS MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration("classpath:infrastructure.xml"), public]ParameterMetadataProviderIntegrationTests,  @AT@ 2696 @LENGTH@ 345
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2696 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2703 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotApplyLikeExpansionOnNonStringProperties @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2708 @LENGTH@ 46
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2764 @LENGTH@ 9
---INS VariableDeclarationStatement@@ParameterMetadataProvider provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)); @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2779 @LENGTH@ 114
------INS SimpleType@@ParameterMetadataProvider @TO@ VariableDeclarationStatement@@ParameterMetadataProvider provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)); @AT@ 2779 @LENGTH@ 25
------INS VariableDeclarationFragment@@provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)) @TO@ VariableDeclarationStatement@@ParameterMetadataProvider provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)); @AT@ 2805 @LENGTH@ 87
---------INS SimpleName@@provider @TO@ VariableDeclarationFragment@@provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)) @AT@ 2805 @LENGTH@ 8
---------INS MethodInvocation@@createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)) @TO@ VariableDeclarationFragment@@provider=createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)) @AT@ 2816 @LENGTH@ 76
------------INS SimpleName@@MethodName:createProvider:[Sample.class.getMethod("findByAgeContaining",Integer.class)] @TO@ MethodInvocation@@createProvider(Sample.class.getMethod("findByAgeContaining",Integer.class)) @AT@ 2816 @LENGTH@ 76
---------------INS MethodInvocation@@Sample.class.getMethod("findByAgeContaining",Integer.class) @TO@ SimpleName@@MethodName:createProvider:[Sample.class.getMethod("findByAgeContaining",Integer.class)] @AT@ 2831 @LENGTH@ 60
------------------INS TypeLiteral@@Sample.class @TO@ MethodInvocation@@Sample.class.getMethod("findByAgeContaining",Integer.class) @AT@ 2831 @LENGTH@ 12
------------------INS SimpleName@@MethodName:getMethod:["findByAgeContaining", Integer.class] @TO@ MethodInvocation@@Sample.class.getMethod("findByAgeContaining",Integer.class) @AT@ 2844 @LENGTH@ 47
---------------------INS StringLiteral@@"findByAgeContaining" @TO@ SimpleName@@MethodName:getMethod:["findByAgeContaining", Integer.class] @AT@ 2854 @LENGTH@ 21
---------------------INS TypeLiteral@@Integer.class @TO@ SimpleName@@MethodName:getMethod:["findByAgeContaining", Integer.class] @AT@ 2877 @LENGTH@ 13
---INS VariableDeclarationStatement@@ParameterMetadata<Object> metadata=provider.next(new Part("ageContaining",User.class)); @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2896 @LENGTH@ 90
------INS ParameterizedType@@ParameterMetadata<Object> @TO@ VariableDeclarationStatement@@ParameterMetadata<Object> metadata=provider.next(new Part("ageContaining",User.class)); @AT@ 2896 @LENGTH@ 25
---------INS SimpleType@@ParameterMetadata @TO@ ParameterizedType@@ParameterMetadata<Object> @AT@ 2896 @LENGTH@ 17
---------INS SimpleType@@Object @TO@ ParameterizedType@@ParameterMetadata<Object> @AT@ 2914 @LENGTH@ 6
------INS VariableDeclarationFragment@@metadata=provider.next(new Part("ageContaining",User.class)) @TO@ VariableDeclarationStatement@@ParameterMetadata<Object> metadata=provider.next(new Part("ageContaining",User.class)); @AT@ 2922 @LENGTH@ 63
---------INS SimpleName@@metadata @TO@ VariableDeclarationFragment@@metadata=provider.next(new Part("ageContaining",User.class)) @AT@ 2922 @LENGTH@ 8
---------INS MethodInvocation@@provider.next(new Part("ageContaining",User.class)) @TO@ VariableDeclarationFragment@@metadata=provider.next(new Part("ageContaining",User.class)) @AT@ 2933 @LENGTH@ 52
------------INS SimpleName@@Name:provider @TO@ MethodInvocation@@provider.next(new Part("ageContaining",User.class)) @AT@ 2933 @LENGTH@ 8
------------INS SimpleName@@MethodName:next:[new Part("ageContaining",User.class)] @TO@ MethodInvocation@@provider.next(new Part("ageContaining",User.class)) @AT@ 2942 @LENGTH@ 43
---------------INS ClassInstanceCreation@@Part["ageContaining", User.class] @TO@ SimpleName@@MethodName:next:[new Part("ageContaining",User.class)] @AT@ 2947 @LENGTH@ 37
------------------INS New@@new @TO@ ClassInstanceCreation@@Part["ageContaining", User.class] @AT@ 2947 @LENGTH@ 3
------------------INS SimpleType@@Part @TO@ ClassInstanceCreation@@Part["ageContaining", User.class] @AT@ 2951 @LENGTH@ 4
------------------INS StringLiteral@@"ageContaining" @TO@ ClassInstanceCreation@@Part["ageContaining", User.class] @AT@ 2956 @LENGTH@ 15
------------------INS TypeLiteral@@User.class @TO@ ClassInstanceCreation@@Part["ageContaining", User.class] @AT@ 2973 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(metadata.prepare(1),is((Object)1)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotApplyLikeExpansionOnNonStringProperties, Exception,  @AT@ 2990 @LENGTH@ 48
------INS MethodInvocation@@assertThat(metadata.prepare(1),is((Object)1)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(metadata.prepare(1),is((Object)1)) @AT@ 2990 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertThat:[metadata.prepare(1), is((Object)1)] @TO@ MethodInvocation@@assertThat(metadata.prepare(1),is((Object)1)) @AT@ 2990 @LENGTH@ 47
------------INS MethodInvocation@@metadata.prepare(1) @TO@ SimpleName@@MethodName:assertThat:[metadata.prepare(1), is((Object)1)] @AT@ 3001 @LENGTH@ 19
---------------INS SimpleName@@Name:metadata @TO@ MethodInvocation@@metadata.prepare(1) @AT@ 3001 @LENGTH@ 8
---------------INS SimpleName@@MethodName:prepare:[1] @TO@ MethodInvocation@@metadata.prepare(1) @AT@ 3010 @LENGTH@ 10
------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:prepare:[1] @AT@ 3018 @LENGTH@ 1
------------INS MethodInvocation@@is((Object)1) @TO@ SimpleName@@MethodName:assertThat:[metadata.prepare(1), is((Object)1)] @AT@ 3022 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[(Object)1] @TO@ MethodInvocation@@is((Object)1) @AT@ 3022 @LENGTH@ 14
------------------INS CastExpression@@(Object)1 @TO@ SimpleName@@MethodName:is:[(Object)1] @AT@ 3025 @LENGTH@ 10
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)1 @AT@ 3026 @LENGTH@ 6
---------------------INS NumberLiteral@@1 @TO@ CastExpression@@(Object)1 @AT@ 3034 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[(Object)1] @TO@ MethodInvocation@@is((Object)1) @AT@ 3022 @LENGTH@ 14
------------------INS CastExpression@@(Object)1 @TO@ SimpleName@@MethodName:is:[(Object)1] @AT@ 3025 @LENGTH@ 10
---------------------INS SimpleType@@Object @TO@ CastExpression@@(Object)1 @AT@ 3026 @LENGTH@ 6
---------------------INS NumberLiteral@@1 @TO@ CastExpression@@(Object)1 @AT@ 3034 @LENGTH@ 1


UPD FieldDeclaration@@static, final, String, [IO_WORKER_CAPABILITY="org.wildfly.extension.io.worker"] @TO@ static, final, String, [IO_WORKER_CAPABILITY="org.wildfly.io.worker"] @AT@ 3771 @LENGTH@ 77
---UPD VariableDeclarationFragment@@IO_WORKER_CAPABILITY="org.wildfly.extension.io.worker" @TO@ IO_WORKER_CAPABILITY="org.wildfly.io.worker" @AT@ 3791 @LENGTH@ 56
------UPD StringLiteral@@"org.wildfly.extension.io.worker" @TO@ "org.wildfly.io.worker" @AT@ 3814 @LENGTH@ 33


UPD IfStatement@@if (connectors.isDefined()) {  List<String> connectorNames=new ArrayList<>(connectors.keys());  haPolicyConfiguration.setExcludedConnectors(connectorNames);} @TO@ if (!connectors.isEmpty()) {  haPolicyConfiguration.setExcludedConnectors(connectors);} @AT@ 5701 @LENGTH@ 190
---INS PrefixExpression@@!connectors.isEmpty() @TO@ IfStatement@@if (connectors.isDefined()) {  List<String> connectorNames=new ArrayList<>(connectors.keys());  haPolicyConfiguration.setExcludedConnectors(connectorNames);} @AT@ 5665 @LENGTH@ 21
------INS Operator@@! @TO@ PrefixExpression@@!connectors.isEmpty() @AT@ 5665 @LENGTH@ 1
------INS MethodInvocation@@connectors.isEmpty() @TO@ PrefixExpression@@!connectors.isEmpty() @AT@ 5666 @LENGTH@ 20
---------MOV SimpleName@@Name:connectors @TO@ MethodInvocation@@connectors.isEmpty() @AT@ 5705 @LENGTH@ 10
---------MOV SimpleName@@MethodName:isDefined:[] @TO@ MethodInvocation@@connectors.isEmpty() @AT@ 5716 @LENGTH@ 11
---DEL MethodInvocation@@connectors.isDefined() @AT@ 5705 @LENGTH@ 22
---UPD Block@@ThenBody:{  List<String> connectorNames=new ArrayList<>(connectors.keys());  haPolicyConfiguration.setExcludedConnectors(connectorNames);} @TO@ ThenBody:{  haPolicyConfiguration.setExcludedConnectors(connectors);} @AT@ 5729 @LENGTH@ 162
------DEL VariableDeclarationStatement@@List<String> connectorNames=new ArrayList<>(connectors.keys()); @AT@ 5743 @LENGTH@ 65
---------DEL ParameterizedType@@List<String> @AT@ 5743 @LENGTH@ 12
------------DEL SimpleType@@List @AT@ 5743 @LENGTH@ 4
------------DEL SimpleType@@String @AT@ 5748 @LENGTH@ 6
---------DEL VariableDeclarationFragment@@connectorNames=new ArrayList<>(connectors.keys()) @AT@ 5756 @LENGTH@ 51
------------DEL SimpleName@@connectorNames @AT@ 5756 @LENGTH@ 14
------------DEL ClassInstanceCreation@@ArrayList<>[connectors.keys()] @AT@ 5773 @LENGTH@ 34
---------------DEL New@@new @AT@ 5773 @LENGTH@ 3
---------------DEL ParameterizedType@@ArrayList<> @AT@ 5777 @LENGTH@ 11
------------------DEL SimpleType@@ArrayList @AT@ 5777 @LENGTH@ 9
---------------DEL MethodInvocation@@connectors.keys() @AT@ 5789 @LENGTH@ 17
------------------DEL SimpleName@@Name:connectors @AT@ 5789 @LENGTH@ 10
------------------DEL SimpleName@@MethodName:keys:[] @AT@ 5800 @LENGTH@ 6
------UPD ExpressionStatement@@MethodInvocation:haPolicyConfiguration.setExcludedConnectors(connectorNames) @TO@ MethodInvocation:haPolicyConfiguration.setExcludedConnectors(connectors) @AT@ 5821 @LENGTH@ 60
---------UPD MethodInvocation@@haPolicyConfiguration.setExcludedConnectors(connectorNames) @TO@ haPolicyConfiguration.setExcludedConnectors(connectors) @AT@ 5821 @LENGTH@ 59
------------UPD SimpleName@@MethodName:setExcludedConnectors:[connectorNames] @TO@ MethodName:setExcludedConnectors:[connectors] @AT@ 5843 @LENGTH@ 37
---------------UPD SimpleName@@connectorNames @TO@ connectors @AT@ 5865 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:MessagingLogger.MESSAGING_LOGGER.startedService("JMS Bridge",bridgeName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.startedService("JMS Bridge",bridgeName) @AT@ 4452 @LENGTH@ 74
---UPD MethodInvocation@@MessagingLogger.MESSAGING_LOGGER.startedService("JMS Bridge",bridgeName) @TO@ MessagingLogger.ROOT_LOGGER.startedService("JMS Bridge",bridgeName) @AT@ 4452 @LENGTH@ 73
------UPD QualifiedName@@Name:MessagingLogger.MESSAGING_LOGGER @TO@ Name:MessagingLogger.ROOT_LOGGER @AT@ 4452 @LENGTH@ 32


UPD IfStatement@@if (startPos1 > startPos1) {  return 1;} else if (startPos1 < startPos2) {  return -1;} else {  return 0;} @TO@ if (startPos1 > startPos2) {  return 1;} else if (startPos1 < startPos2) {  return -1;} else {  return 0;} @AT@ 12345 @LENGTH@ 208
---UPD InfixExpression@@startPos1 > startPos1 @TO@ startPos1 > startPos2 @AT@ 12349 @LENGTH@ 21
------UPD SimpleName@@startPos1 @TO@ startPos2 @AT@ 12361 @LENGTH@ 9


UPD ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=null;  if (tokens.length > i) {    token=tokens[i];  }  if (properties.containsKey(key)) {    if (!first && token != null) {      sb.append(token);    }    hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));    sb.append(key2);    first=false;  }  range++;} @TO@ for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=null;  if (tokens.length > i) {    token=tokens[i];  }  boolean contains=properties.containsKey(key);  if (!contains) {    if (isPropertyRequired(rows,key)) {      String value=getPropertyDefaultValue(rows,key);      if (value != null) {        properties.put(key,value);        key2=value;      }    }  }  if (properties.containsKey(key)) {    if (!first && token != null) {      sb.append(token);    }    hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));    sb.append(key2);    first=false;  }  range++;} @AT@ 26010 @LENGTH@ 641
---INS VariableDeclarationStatement@@boolean contains=properties.containsKey(key); @TO@ ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=null;  if (tokens.length > i) {    token=tokens[i];  }  if (properties.containsKey(key)) {    if (!first && token != null) {      sb.append(token);    }    hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));    sb.append(key2);    first=false;  }  range++;} @AT@ 26345 @LENGTH@ 47
------INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean contains=properties.containsKey(key); @AT@ 26345 @LENGTH@ 7
------INS VariableDeclarationFragment@@contains=properties.containsKey(key) @TO@ VariableDeclarationStatement@@boolean contains=properties.containsKey(key); @AT@ 26353 @LENGTH@ 38
---------INS SimpleName@@contains @TO@ VariableDeclarationFragment@@contains=properties.containsKey(key) @AT@ 26353 @LENGTH@ 8
---------INS MethodInvocation@@properties.containsKey(key) @TO@ VariableDeclarationFragment@@contains=properties.containsKey(key) @AT@ 26364 @LENGTH@ 27
------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.containsKey(key) @AT@ 26364 @LENGTH@ 10
------------INS SimpleName@@MethodName:containsKey:[key] @TO@ MethodInvocation@@properties.containsKey(key) @AT@ 26375 @LENGTH@ 16
---------------INS SimpleName@@key @TO@ SimpleName@@MethodName:containsKey:[key] @AT@ 26387 @LENGTH@ 3
---INS IfStatement@@if (!contains) {  if (isPropertyRequired(rows,key)) {    String value=getPropertyDefaultValue(rows,key);    if (value != null) {      properties.put(key,value);      key2=value;    }  }} @TO@ ForStatement@@for (int i=0; i < options.size(); i++) {  String key=options.get(i);  String key2=options2.get(i);  String token=null;  if (tokens.length > i) {    token=tokens[i];  }  if (properties.containsKey(key)) {    if (!first && token != null) {      sb.append(token);    }    hasQuestionmark|=key.contains("?") || (token != null && token.contains("?"));    sb.append(key2);    first=false;  }  range++;} @AT@ 26405 @LENGTH@ 455
------INS PrefixExpression@@!contains @TO@ IfStatement@@if (!contains) {  if (isPropertyRequired(rows,key)) {    String value=getPropertyDefaultValue(rows,key);    if (value != null) {      properties.put(key,value);      key2=value;    }  }} @AT@ 26409 @LENGTH@ 9
---------INS Operator@@! @TO@ PrefixExpression@@!contains @AT@ 26409 @LENGTH@ 1
---------INS SimpleName@@contains @TO@ PrefixExpression@@!contains @AT@ 26410 @LENGTH@ 8
------INS Block@@ThenBody:{  if (isPropertyRequired(rows,key)) {    String value=getPropertyDefaultValue(rows,key);    if (value != null) {      properties.put(key,value);      key2=value;    }  }} @TO@ IfStatement@@if (!contains) {  if (isPropertyRequired(rows,key)) {    String value=getPropertyDefaultValue(rows,key);    if (value != null) {      properties.put(key,value);      key2=value;    }  }} @AT@ 26420 @LENGTH@ 440
---------INS IfStatement@@if (isPropertyRequired(rows,key)) {  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @TO@ Block@@ThenBody:{  if (isPropertyRequired(rows,key)) {    String value=getPropertyDefaultValue(rows,key);    if (value != null) {      properties.put(key,value);      key2=value;    }  }} @AT@ 26568 @LENGTH@ 278
------------INS MethodInvocation@@isPropertyRequired(rows,key) @TO@ IfStatement@@if (isPropertyRequired(rows,key)) {  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @AT@ 26572 @LENGTH@ 29
---------------INS SimpleName@@MethodName:isPropertyRequired:[rows, key] @TO@ MethodInvocation@@isPropertyRequired(rows,key) @AT@ 26572 @LENGTH@ 29
------------------INS SimpleName@@rows @TO@ SimpleName@@MethodName:isPropertyRequired:[rows, key] @AT@ 26591 @LENGTH@ 4
------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:isPropertyRequired:[rows, key] @AT@ 26597 @LENGTH@ 3
------------INS Block@@ThenBody:{  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @TO@ IfStatement@@if (isPropertyRequired(rows,key)) {  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @AT@ 26603 @LENGTH@ 243
---------------INS VariableDeclarationStatement@@String value=getPropertyDefaultValue(rows,key); @TO@ Block@@ThenBody:{  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @AT@ 26625 @LENGTH@ 50
------------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=getPropertyDefaultValue(rows,key); @AT@ 26625 @LENGTH@ 6
------------------INS VariableDeclarationFragment@@value=getPropertyDefaultValue(rows,key) @TO@ VariableDeclarationStatement@@String value=getPropertyDefaultValue(rows,key); @AT@ 26632 @LENGTH@ 42
---------------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=getPropertyDefaultValue(rows,key) @AT@ 26632 @LENGTH@ 5
---------------------INS MethodInvocation@@getPropertyDefaultValue(rows,key) @TO@ VariableDeclarationFragment@@value=getPropertyDefaultValue(rows,key) @AT@ 26640 @LENGTH@ 34
------------------------INS SimpleName@@MethodName:getPropertyDefaultValue:[rows, key] @TO@ MethodInvocation@@getPropertyDefaultValue(rows,key) @AT@ 26640 @LENGTH@ 34
---------------------------INS SimpleName@@rows @TO@ SimpleName@@MethodName:getPropertyDefaultValue:[rows, key] @AT@ 26664 @LENGTH@ 4
---------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:getPropertyDefaultValue:[rows, key] @AT@ 26670 @LENGTH@ 3
---------------INS IfStatement@@if (value != null) {  properties.put(key,value);  key2=value;} @TO@ Block@@ThenBody:{  String value=getPropertyDefaultValue(rows,key);  if (value != null) {    properties.put(key,value);    key2=value;  }} @AT@ 26696 @LENGTH@ 132
------------------INS InfixExpression@@value != null @TO@ IfStatement@@if (value != null) {  properties.put(key,value);  key2=value;} @AT@ 26700 @LENGTH@ 13
---------------------INS SimpleName@@value @TO@ InfixExpression@@value != null @AT@ 26700 @LENGTH@ 5
---------------------INS Operator@@!= @TO@ InfixExpression@@value != null @AT@ 26705 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@value != null @AT@ 26709 @LENGTH@ 4
------------------INS Block@@ThenBody:{  properties.put(key,value);  key2=value;} @TO@ IfStatement@@if (value != null) {  properties.put(key,value);  key2=value;} @AT@ 26715 @LENGTH@ 113
---------------------INS ExpressionStatement@@MethodInvocation:properties.put(key,value) @TO@ Block@@ThenBody:{  properties.put(key,value);  key2=value;} @AT@ 26741 @LENGTH@ 27
------------------------INS MethodInvocation@@properties.put(key,value) @TO@ ExpressionStatement@@MethodInvocation:properties.put(key,value) @AT@ 26741 @LENGTH@ 26
---------------------------INS SimpleName@@Name:properties @TO@ MethodInvocation@@properties.put(key,value) @AT@ 26741 @LENGTH@ 10
---------------------------INS SimpleName@@MethodName:put:[key, value] @TO@ MethodInvocation@@properties.put(key,value) @AT@ 26752 @LENGTH@ 15
------------------------------INS SimpleName@@key @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 26756 @LENGTH@ 3
------------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:put:[key, value] @AT@ 26761 @LENGTH@ 5
---------------------INS ExpressionStatement@@Assignment:key2=value @TO@ Block@@ThenBody:{  properties.put(key,value);  key2=value;} @AT@ 26793 @LENGTH@ 13
------------------------INS Assignment@@key2=value @TO@ ExpressionStatement@@Assignment:key2=value @AT@ 26793 @LENGTH@ 12
---------------------------INS SimpleName@@key2 @TO@ Assignment@@key2=value @AT@ 26793 @LENGTH@ 4
---------------------------INS Operator@@= @TO@ Assignment@@key2=value @AT@ 26797 @LENGTH@ 1
---------------------------INS SimpleName@@value @TO@ Assignment@@key2=value @AT@ 26800 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\"")) @AT@ 1859 @LENGTH@ 91
---UPD MethodInvocation@@assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\"")) @AT@ 1859 @LENGTH@ 90
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @TO@ MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\"")] @AT@ 1859 @LENGTH@ 90
---------UPD MethodInvocation@@json.contains("\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\"") @TO@ json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\"") @AT@ 1870 @LENGTH@ 78
------------UPD SimpleName@@MethodName:contains:["\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\""] @TO@ MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\""] @AT@ 1875 @LENGTH@ 73
---------------UPD StringLiteral@@"\"timeout\": { \"kind\": \"parameter\", \"type\": \"integer\"" @TO@ "\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\"" @AT@ 1884 @LENGTH@ 63


UPD ReturnStatement@@StringLiteral:"unknown" @TO@ StringLiteral:"jar" @AT@ 17832 @LENGTH@ 17
---UPD StringLiteral@@"unknown" @TO@ "jar" @AT@ 17839 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:headers.put(VelocityConstants.VELOCITY_TEMPLATE,"#set( $headers.body = ${body} )\n" + "#set( $headers['in.body'] = $in.body )\n" + "bar") @TO@ MethodInvocation:headers.put(VelocityConstants.VELOCITY_TEMPLATE,"#set( $headers.body = ${body} )\n#set( $headers['in.body'] = $in.body )\n" + "bar") @AT@ 1007 @LENGTH@ 171
---UPD MethodInvocation@@headers.put(VelocityConstants.VELOCITY_TEMPLATE,"#set( $headers.body = ${body} )\n" + "#set( $headers['in.body'] = $in.body )\n" + "bar") @TO@ headers.put(VelocityConstants.VELOCITY_TEMPLATE,"#set( $headers.body = ${body} )\n#set( $headers['in.body'] = $in.body )\n" + "bar") @AT@ 1007 @LENGTH@ 170
------UPD SimpleName@@MethodName:put:[VelocityConstants.VELOCITY_TEMPLATE, "#set( $headers.body = ${body} )\n" + "#set( $headers['in.body'] = $in.body )\n" + "bar"] @TO@ MethodName:put:[VelocityConstants.VELOCITY_TEMPLATE, "#set( $headers.body = ${body} )\n#set( $headers['in.body'] = $in.body )\n" + "bar"] @AT@ 1015 @LENGTH@ 162
---------UPD InfixExpression@@"#set( $headers.body = ${body} )\n" + "#set( $headers['in.body'] = $in.body )\n" + "bar" @TO@ "#set( $headers.body = ${body} )\n#set( $headers['in.body'] = $in.body )\n" + "bar" @AT@ 1072 @LENGTH@ 104
------------UPD StringLiteral@@"#set( $headers.body = ${body} )\n" @TO@ "#set( $headers.body = ${body} )\n#set( $headers['in.body'] = $in.body )\n" @AT@ 1072 @LENGTH@ 35
------------DEL StringLiteral@@"#set( $headers['in.body'] = $in.body )\n" @AT@ 1126 @LENGTH@ 42


INS ExpressionStatement@@MethodInvocation:Assert.assertTrue(newSubsystem.get("confidentiality").equals(new ModelNode("required"))) @TO@ MethodDeclaration@@public, void, MethodName:migrateTest, Exception,  @AT@ 4060 @LENGTH@ 89
---INS MethodInvocation@@Assert.assertTrue(newSubsystem.get("confidentiality").equals(new ModelNode("required"))) @TO@ ExpressionStatement@@MethodInvocation:Assert.assertTrue(newSubsystem.get("confidentiality").equals(new ModelNode("required"))) @AT@ 4060 @LENGTH@ 88
------INS SimpleName@@Name:Assert @TO@ MethodInvocation@@Assert.assertTrue(newSubsystem.get("confidentiality").equals(new ModelNode("required"))) @AT@ 4060 @LENGTH@ 6
------INS SimpleName@@MethodName:assertTrue:[newSubsystem.get("confidentiality").equals(new ModelNode("required"))] @TO@ MethodInvocation@@Assert.assertTrue(newSubsystem.get("confidentiality").equals(new ModelNode("required"))) @AT@ 4067 @LENGTH@ 81
---------INS MethodInvocation@@newSubsystem.get("confidentiality").equals(new ModelNode("required")) @TO@ SimpleName@@MethodName:assertTrue:[newSubsystem.get("confidentiality").equals(new ModelNode("required"))] @AT@ 4078 @LENGTH@ 69
------------INS MethodInvocation@@MethodName:get:["confidentiality"] @TO@ MethodInvocation@@newSubsystem.get("confidentiality").equals(new ModelNode("required")) @AT@ 4078 @LENGTH@ 35
---------------INS StringLiteral@@"confidentiality" @TO@ MethodInvocation@@MethodName:get:["confidentiality"] @AT@ 4095 @LENGTH@ 17
------------INS SimpleName@@Name:newSubsystem @TO@ MethodInvocation@@newSubsystem.get("confidentiality").equals(new ModelNode("required")) @AT@ 4078 @LENGTH@ 12
------------INS SimpleName@@MethodName:equals:[new ModelNode("required")] @TO@ MethodInvocation@@newSubsystem.get("confidentiality").equals(new ModelNode("required")) @AT@ 4114 @LENGTH@ 33
---------------INS ClassInstanceCreation@@ModelNode["required"] @TO@ SimpleName@@MethodName:equals:[new ModelNode("required")] @AT@ 4121 @LENGTH@ 25
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode["required"] @AT@ 4121 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode["required"] @AT@ 4125 @LENGTH@ 9
------------------INS StringLiteral@@"required" @TO@ ClassInstanceCreation@@ModelNode["required"] @AT@ 4135 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 14625 @LENGTH@ 130
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 14625 @LENGTH@ 129
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 14625 @LENGTH@ 106
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 14629 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 14629 @LENGTH@ 32
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor, handler] @AT@ 14664 @LENGTH@ 39
------------DEL New@@new @AT@ 14664 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 14668 @LENGTH@ 14
------------DEL SimpleName@@descriptor @AT@ 14683 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 14695 @LENGTH@ 7
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 14720 @LENGTH@ 10
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 14732 @LENGTH@ 7


UPD IfStatement@@if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {  try {    MetricsFactory.getMetricsInstance().deInit();  } catch (  Exception e) {    LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);  }} @TO@ if (MetricsFactory.getInstance() != null) {  try {    MetricsFactory.close();  } catch (  Exception e) {    LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);  }} @AT@ 12521 @LENGTH@ 284
---DEL MethodInvocation@@hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED) @AT@ 12525 @LENGTH@ 58
---INS InfixExpression@@MetricsFactory.getInstance() != null @TO@ IfStatement@@if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_METRICS_ENABLED)) {  try {    MetricsFactory.getMetricsInstance().deInit();  } catch (  Exception e) {    LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);  }} @AT@ 12525 @LENGTH@ 36
------INS MethodInvocation@@MetricsFactory.getInstance() @TO@ InfixExpression@@MetricsFactory.getInstance() != null @AT@ 12525 @LENGTH@ 28
---------MOV SimpleName@@Name:hiveConf @TO@ MethodInvocation@@MetricsFactory.getInstance() @AT@ 12525 @LENGTH@ 8
---------MOV SimpleName@@MethodName:getBoolVar:[ConfVars.HIVE_SERVER2_METRICS_ENABLED] @TO@ MethodInvocation@@MetricsFactory.getInstance() @AT@ 12534 @LENGTH@ 49
------INS Operator@@!= @TO@ InfixExpression@@MetricsFactory.getInstance() != null @AT@ 12553 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@MetricsFactory.getInstance() != null @AT@ 12557 @LENGTH@ 4
---UPD Block@@ThenBody:{  try {    MetricsFactory.getMetricsInstance().deInit();  } catch (  Exception e) {    LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);  }} @TO@ ThenBody:{  try {    MetricsFactory.close();  } catch (  Exception e) {    LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);  }} @AT@ 12585 @LENGTH@ 220
------UPD TryStatement@@try {  MetricsFactory.getMetricsInstance().deInit();} catch (Exception e) {  LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);} @TO@ try {  MetricsFactory.close();} catch (Exception e) {  LOG.error("error in Metrics deinit: " + e.getClass().getName() + " "+ e.getMessage(),e);} @AT@ 12593 @LENGTH@ 206
---------UPD ExpressionStatement@@MethodInvocation:MetricsFactory.getMetricsInstance().deInit() @TO@ MethodInvocation:MetricsFactory.close() @AT@ 12607 @LENGTH@ 45
------------UPD MethodInvocation@@MetricsFactory.getMetricsInstance().deInit() @TO@ MetricsFactory.close() @AT@ 12607 @LENGTH@ 44
---------------DEL MethodInvocation@@MethodName:getMetricsInstance:[] @AT@ 12607 @LENGTH@ 35
---------------UPD SimpleName@@MethodName:deInit:[] @TO@ MethodName:close:[] @AT@ 12643 @LENGTH@ 8


UPD ReturnStatement@@InfixExpression:this.artifactId + (this.classifier == null ? "" : "-classifier") + "-"+ this.version+ "."+ this.packaging @TO@ InfixExpression:this.artifactId + (this.classifier == null ? "" : "-" + classifier) + "-"+ this.version+ "."+ this.packaging @AT@ 804 @LENGTH@ 118
---UPD InfixExpression@@this.artifactId + (this.classifier == null ? "" : "-classifier") + "-"+ this.version+ "."+ this.packaging @TO@ this.artifactId + (this.classifier == null ? "" : "-" + classifier) + "-"+ this.version+ "."+ this.packaging @AT@ 811 @LENGTH@ 110
------UPD ParenthesizedExpression@@(this.classifier == null ? "" : "-classifier") @TO@ (this.classifier == null ? "" : "-" + classifier) @AT@ 829 @LENGTH@ 48
---------UPD ConditionalExpression@@this.classifier == null ? "" : "-classifier" @TO@ this.classifier == null ? "" : "-" + classifier @AT@ 831 @LENGTH@ 44
------------INS InfixExpression@@"-" + classifier @TO@ ConditionalExpression@@this.classifier == null ? "" : "-classifier" @AT@ 862 @LENGTH@ 16
---------------INS StringLiteral@@"-" @TO@ InfixExpression@@"-" + classifier @AT@ 862 @LENGTH@ 3
---------------INS Operator@@+ @TO@ InfixExpression@@"-" + classifier @AT@ 865 @LENGTH@ 1
---------------INS SimpleName@@classifier @TO@ InfixExpression@@"-" + classifier @AT@ 868 @LENGTH@ 10
------------DEL StringLiteral@@"-classifier" @AT@ 862 @LENGTH@ 13


UPD FieldDeclaration@@public, static, final, int, [GET_AND_ADD=25] @TO@ public, static, final, int, [GET_AND_ADD_OPERATION=25] @AT@ 3829 @LENGTH@ 41
---UPD VariableDeclarationFragment@@GET_AND_ADD=25 @TO@ GET_AND_ADD_OPERATION=25 @AT@ 3853 @LENGTH@ 16
------UPD SimpleName@@GET_AND_ADD @TO@ GET_AND_ADD_OPERATION @AT@ 3853 @LENGTH@ 11


UPD TryStatement@@try {  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));}  finally {  HttpClientUtils.closeQuietly(response);} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 3068 @LENGTH@ 411


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")) @TO@ MethodInvocation:assertTrue(json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")) @AT@ 3179 @LENGTH@ 224
---UPD MethodInvocation@@assertTrue(json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")) @TO@ assertTrue(json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")) @AT@ 3179 @LENGTH@ 223
------UPD SimpleName@@MethodName:assertTrue:[json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")] @TO@ MethodName:assertTrue:[json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"")] @AT@ 3179 @LENGTH@ 223
---------UPD MethodInvocation@@json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"") @TO@ json.contains(" \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"") @AT@ 3190 @LENGTH@ 211
------------UPD SimpleName@@MethodName:contains:[" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\""] @TO@ MethodName:contains:[" \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\""] @AT@ 3195 @LENGTH@ 206
---------------UPD InfixExpression@@" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"" @TO@ " \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," + " \"deprecated\": \"false\", \"value\": \"mock:result\"" @AT@ 3204 @LENGTH@ 196
------------------UPD StringLiteral@@" \"uri\": { \"kind\": \"attribute\", \"required\": \"false\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," @TO@ " \"uri\": { \"kind\": \"attribute\", \"required\": \"true\", \"type\": \"string\", \"javaType\": \"java.lang.String\"," @AT@ 3204 @LENGTH@ 121


INS IfStatement@@if (type == ModelType.INT) {  attribute.setUndefinedMetricValue(new ModelNode(-1));} @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createMetric, String name, ModelType type, String groupName,  @AT@ 4103 @LENGTH@ 104
---INS InfixExpression@@type == ModelType.INT @TO@ IfStatement@@if (type == ModelType.INT) {  attribute.setUndefinedMetricValue(new ModelNode(-1));} @AT@ 4107 @LENGTH@ 21
------INS SimpleName@@type @TO@ InfixExpression@@type == ModelType.INT @AT@ 4107 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@type == ModelType.INT @AT@ 4111 @LENGTH@ 2
------INS QualifiedName@@ModelType.INT @TO@ InfixExpression@@type == ModelType.INT @AT@ 4115 @LENGTH@ 13
---------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.INT @AT@ 4115 @LENGTH@ 9
---------INS SimpleName@@INT @TO@ QualifiedName@@ModelType.INT @AT@ 4125 @LENGTH@ 3
---INS Block@@ThenBody:{  attribute.setUndefinedMetricValue(new ModelNode(-1));} @TO@ IfStatement@@if (type == ModelType.INT) {  attribute.setUndefinedMetricValue(new ModelNode(-1));} @AT@ 4130 @LENGTH@ 77
------INS ExpressionStatement@@MethodInvocation:attribute.setUndefinedMetricValue(new ModelNode(-1)) @TO@ Block@@ThenBody:{  attribute.setUndefinedMetricValue(new ModelNode(-1));} @AT@ 4144 @LENGTH@ 53
---------INS MethodInvocation@@attribute.setUndefinedMetricValue(new ModelNode(-1)) @TO@ ExpressionStatement@@MethodInvocation:attribute.setUndefinedMetricValue(new ModelNode(-1)) @AT@ 4144 @LENGTH@ 52
------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.setUndefinedMetricValue(new ModelNode(-1)) @AT@ 4144 @LENGTH@ 9
------------INS SimpleName@@MethodName:setUndefinedMetricValue:[new ModelNode(-1)] @TO@ MethodInvocation@@attribute.setUndefinedMetricValue(new ModelNode(-1)) @AT@ 4154 @LENGTH@ 42
---------------INS ClassInstanceCreation@@ModelNode[-1] @TO@ SimpleName@@MethodName:setUndefinedMetricValue:[new ModelNode(-1)] @AT@ 4178 @LENGTH@ 17
------------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[-1] @AT@ 4178 @LENGTH@ 3
------------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[-1] @AT@ 4182 @LENGTH@ 9
------------------INS PrefixExpression@@-1 @TO@ ClassInstanceCreation@@ModelNode[-1] @AT@ 4192 @LENGTH@ 2
---------------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 4192 @LENGTH@ 1
---------------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 4193 @LENGTH@ 1


UPD TypeDeclaration@@[@Order(1000), public]WithSecurityContextTestExecutionListener, AbstractTestExecutionListener @TO@ [public]WithSecurityContextTestExecutionListener, AbstractTestExecutionListener @AT@ 2406 @LENGTH@ 2440
---DEL SingleMemberAnnotation@@@Order(1000) @AT@ 2406 @LENGTH@ 12


DEL FieldDeclaration@@private, Environment, [environment] @AT@ 1417 @LENGTH@ 32
---DEL Modifier@@private @AT@ 1417 @LENGTH@ 7
---DEL SimpleType@@Environment @AT@ 1425 @LENGTH@ 11
---DEL VariableDeclarationFragment@@environment @AT@ 1437 @LENGTH@ 11
------DEL SimpleName@@environment @AT@ 1437 @LENGTH@ 11


UPD IfStatement@@if (location.getProtocol().equals("file")) {  Path path=Paths.get(location.getPath());  return path;} @TO@ if (location.getProtocol().equals("file")) {  try {    return Paths.get(location.toURI());  } catch (  URISyntaxException e) {    throw new IOException(e);  }} @AT@ 1681 @LENGTH@ 138
---UPD Block@@ThenBody:{  Path path=Paths.get(location.getPath());  return path;} @TO@ ThenBody:{  try {    return Paths.get(location.toURI());  } catch (  URISyntaxException e) {    throw new IOException(e);  }} @AT@ 1728 @LENGTH@ 91
------INS TryStatement@@try {  return Paths.get(location.toURI());} catch (URISyntaxException e) {  throw new IOException(e);} @TO@ Block@@ThenBody:{  Path path=Paths.get(location.getPath());  return path;} @AT@ 1695 @LENGTH@ 158
---------INS ReturnStatement@@MethodInvocation:Paths.get(location.toURI()) @TO@ TryStatement@@try {  return Paths.get(location.toURI());} catch (URISyntaxException e) {  throw new IOException(e);} @AT@ 1717 @LENGTH@ 35
------------INS MethodInvocation@@Paths.get(location.toURI()) @TO@ ReturnStatement@@MethodInvocation:Paths.get(location.toURI()) @AT@ 1724 @LENGTH@ 27
---------------MOV SimpleName@@Name:Paths @TO@ MethodInvocation@@Paths.get(location.toURI()) @AT@ 1754 @LENGTH@ 5
---------------MOV SimpleName@@MethodName:get:[location.getPath()] @TO@ MethodInvocation@@Paths.get(location.toURI()) @AT@ 1760 @LENGTH@ 23
---------INS CatchClause@@catch (URISyntaxException e) {  throw new IOException(e);} @TO@ TryStatement@@try {  return Paths.get(location.toURI());} catch (URISyntaxException e) {  throw new IOException(e);} @AT@ 1767 @LENGTH@ 86
------------INS SingleVariableDeclaration@@URISyntaxException e @TO@ CatchClause@@catch (URISyntaxException e) {  throw new IOException(e);} @AT@ 1774 @LENGTH@ 20
---------------INS SimpleType@@URISyntaxException @TO@ SingleVariableDeclaration@@URISyntaxException e @AT@ 1774 @LENGTH@ 18
---------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@URISyntaxException e @AT@ 1793 @LENGTH@ 1
------------INS ThrowStatement@@ClassInstanceCreation:new IOException(e) @TO@ CatchClause@@catch (URISyntaxException e) {  throw new IOException(e);} @AT@ 1814 @LENGTH@ 25
---------------INS ClassInstanceCreation@@IOException[e] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException(e) @AT@ 1820 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@IOException[e] @AT@ 1820 @LENGTH@ 3
------------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException[e] @AT@ 1824 @LENGTH@ 11
------------------INS SimpleName@@e @TO@ ClassInstanceCreation@@IOException[e] @AT@ 1836 @LENGTH@ 1
------DEL VariableDeclarationStatement@@Path path=Paths.get(location.getPath()); @AT@ 1742 @LENGTH@ 42
---------DEL SimpleType@@Path @AT@ 1742 @LENGTH@ 4
---------DEL VariableDeclarationFragment@@path=Paths.get(location.getPath()) @AT@ 1747 @LENGTH@ 36
------------DEL SimpleName@@path @AT@ 1747 @LENGTH@ 4
------------DEL MethodInvocation@@Paths.get(location.getPath()) @AT@ 1754 @LENGTH@ 29
------DEL ReturnStatement@@SimpleName:path @AT@ 1797 @LENGTH@ 12
---------DEL SimpleName@@path @AT@ 1804 @LENGTH@ 4


UPD IfStatement@@if (propertyField == null) {  FieldInfo fieldInfo=owningClassInfo.propertyFieldByName(descriptor.getName());  if (fieldInfo == null) {    fieldInfo=owningClassInfo.relationshipFieldByName(descriptor.getName());  }  if (fieldInfo != null) {    propertyField=owningClassInfo.getField(fieldInfo);  } else {    logger.debug("Couldn't resolve a concrete field corresponding to property {} on {} ",descriptor.getName(),owningClassInfo.name());  }} @TO@ if (propertyField == null && owningClassInfo != null && descriptor != null) {  FieldInfo fieldInfo=owningClassInfo.propertyFieldByName(descriptor.getName());  if (fieldInfo == null) {    fieldInfo=owningClassInfo.relationshipFieldByName(descriptor.getName());  }  if (fieldInfo != null) {    propertyField=owningClassInfo.getField(fieldInfo);  } else {    logger.debug("Couldn't resolve a concrete field corresponding to property {} on {} ",descriptor.getName(),owningClassInfo.name());  }} @AT@ 3175 @LENGTH@ 696
---INS InfixExpression@@propertyField == null && owningClassInfo != null && descriptor != null @TO@ IfStatement@@if (propertyField == null) {  FieldInfo fieldInfo=owningClassInfo.propertyFieldByName(descriptor.getName());  if (fieldInfo == null) {    fieldInfo=owningClassInfo.relationshipFieldByName(descriptor.getName());  }  if (fieldInfo != null) {    propertyField=owningClassInfo.getField(fieldInfo);  } else {    logger.debug("Couldn't resolve a concrete field corresponding to property {} on {} ",descriptor.getName(),owningClassInfo.name());  }} @AT@ 3179 @LENGTH@ 70
------INS InfixExpression@@propertyField == null && owningClassInfo != null @TO@ InfixExpression@@propertyField == null && owningClassInfo != null && descriptor != null @AT@ 3179 @LENGTH@ 48
---------INS InfixExpression@@propertyField == null @TO@ InfixExpression@@propertyField == null && owningClassInfo != null @AT@ 3179 @LENGTH@ 21
------------MOV SimpleName@@propertyField @TO@ InfixExpression@@propertyField == null @AT@ 3179 @LENGTH@ 13
------------MOV Operator@@== @TO@ InfixExpression@@propertyField == null @AT@ 3192 @LENGTH@ 2
------------MOV NullLiteral@@null @TO@ InfixExpression@@propertyField == null @AT@ 3196 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@propertyField == null && owningClassInfo != null @AT@ 3200 @LENGTH@ 2
---------INS InfixExpression@@owningClassInfo != null @TO@ InfixExpression@@propertyField == null && owningClassInfo != null @AT@ 3204 @LENGTH@ 23
------------INS SimpleName@@owningClassInfo @TO@ InfixExpression@@owningClassInfo != null @AT@ 3204 @LENGTH@ 15
------------INS Operator@@!= @TO@ InfixExpression@@owningClassInfo != null @AT@ 3219 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@owningClassInfo != null @AT@ 3223 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@propertyField == null && owningClassInfo != null && descriptor != null @AT@ 3227 @LENGTH@ 2
------INS InfixExpression@@descriptor != null @TO@ InfixExpression@@propertyField == null && owningClassInfo != null && descriptor != null @AT@ 3231 @LENGTH@ 18
---------INS SimpleName@@descriptor @TO@ InfixExpression@@descriptor != null @AT@ 3231 @LENGTH@ 10
---------INS Operator@@!= @TO@ InfixExpression@@descriptor != null @AT@ 3241 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@descriptor != null @AT@ 3245 @LENGTH@ 4
---DEL InfixExpression@@propertyField == null @AT@ 3179 @LENGTH@ 21


UPD TypeDeclaration@@[private, static]InputSplitComparator, [Comparator<InputSplit>] @TO@ [static]InputSplitComparator, [Comparator<InputSplit>] @AT@ 11472 @LENGTH@ 1441
---DEL Modifier@@private @AT@ 11472 @LENGTH@ 7


INS FieldDeclaration@@private, String, [contextPath] @TO@ TypeDeclaration@@[@Mojo(name="package",defaultPhase=LifecyclePhase.PACKAGE,requiresDependencyCollection=ResolutionScope.COMPILE_PLUS_RUNTIME,requiresDependencyResolution=ResolutionScope.COMPILE_PLUS_RUNTIME), public]PackageMojo, AbstractMojo @AT@ 3643 @LENGTH@ 27
---INS Modifier@@private @TO@ FieldDeclaration@@private, String, [contextPath] @AT@ 3643 @LENGTH@ 7
---INS SimpleType@@String @TO@ FieldDeclaration@@private, String, [contextPath] @AT@ 3651 @LENGTH@ 6
---INS VariableDeclarationFragment@@contextPath @TO@ FieldDeclaration@@private, String, [contextPath] @AT@ 3658 @LENGTH@ 11
------INS SimpleName@@contextPath @TO@ VariableDeclarationFragment@@contextPath @AT@ 3658 @LENGTH@ 11


UPD FieldDeclaration@@private, static, final, String, [INVALID_FORMAT="Expected two doubles separated by a semicolon but got '%s'!"] @TO@ private, static, final, String, [INVALID_FORMAT="Expected two doubles separated by a comma but got '%s'!"] @AT@ 1311 @LENGTH@ 107
---UPD VariableDeclarationFragment@@INVALID_FORMAT="Expected two doubles separated by a semicolon but got '%s'!" @TO@ INVALID_FORMAT="Expected two doubles separated by a comma but got '%s'!" @AT@ 1339 @LENGTH@ 78
------UPD StringLiteral@@"Expected two doubles separated by a semicolon but got '%s'!" @TO@ "Expected two doubles separated by a comma but got '%s'!" @AT@ 1356 @LENGTH@ 61


UPD TypeDeclaration@@[private, static]TestTailerListener, [TailerListener] @TO@ [private, static]TestTailerListener, TailerListenerAdapter @AT@ 17216 @LENGTH@ 1288
---UPD SimpleType@@TailerListener @TO@ TailerListenerAdapter @AT@ 17267 @LENGTH@ 14


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ HttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 4401 @LENGTH@ 48
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4412 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4421 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 4373 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 4421 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 4433 @LENGTH@ 15


INS ExpressionStatement@@Assignment:rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @TO@ MethodDeclaration@@private, String, MethodName:doAsEndpointUri, String scheme, Map<String,String> properties, String ampersand, boolean encode, URISyntaxException,  @AT@ 24472 @LENGTH@ 66
---INS Assignment@@rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @TO@ ExpressionStatement@@Assignment:rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24472 @LENGTH@ 65
------INS SimpleName@@rows @TO@ Assignment@@rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24472 @LENGTH@ 4
------INS Operator@@= @TO@ Assignment@@rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24476 @LENGTH@ 1
------INS MethodInvocation@@JSonSchemaHelper.parseJsonSchema("properties",json,true) @TO@ Assignment@@rows=JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24479 @LENGTH@ 58
---------INS SimpleName@@Name:JSonSchemaHelper @TO@ MethodInvocation@@JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24479 @LENGTH@ 16
---------INS SimpleName@@MethodName:parseJsonSchema:["properties", json, true] @TO@ MethodInvocation@@JSonSchemaHelper.parseJsonSchema("properties",json,true) @AT@ 24496 @LENGTH@ 41
------------INS StringLiteral@@"properties" @TO@ SimpleName@@MethodName:parseJsonSchema:["properties", json, true] @AT@ 24512 @LENGTH@ 12
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:parseJsonSchema:["properties", json, true] @AT@ 24526 @LENGTH@ 4
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:parseJsonSchema:["properties", json, true] @AT@ 24532 @LENGTH@ 4


UPD IfStatement@@if (address.getExchangeName() == "") {  replyQueue=Collections.singletonList(address.getRoutingKey());} else {  logger.debug("Cannot verify reply queue because it has the form 'exchange/routingKey'");} @TO@ if ("".equals(address.getExchangeName())) {  replyQueue=Collections.singletonList(address.getRoutingKey());} else {  logger.debug("Cannot verify reply queue because it has the form 'exchange/routingKey'");} @AT@ 22240 @LENGTH@ 220
---INS MethodInvocation@@"".equals(address.getExchangeName()) @TO@ IfStatement@@if (address.getExchangeName() == "") {  replyQueue=Collections.singletonList(address.getRoutingKey());} else {  logger.debug("Cannot verify reply queue because it has the form 'exchange/routingKey'");} @AT@ 22244 @LENGTH@ 36
------INS StringLiteral@@"" @TO@ MethodInvocation@@"".equals(address.getExchangeName()) @AT@ 22244 @LENGTH@ 2
------INS SimpleName@@MethodName:equals:[address.getExchangeName()] @TO@ MethodInvocation@@"".equals(address.getExchangeName()) @AT@ 22247 @LENGTH@ 33
---------INS MethodInvocation@@address.getExchangeName() @TO@ SimpleName@@MethodName:equals:[address.getExchangeName()] @AT@ 22254 @LENGTH@ 25
------------MOV SimpleName@@Name:address @TO@ MethodInvocation@@address.getExchangeName() @AT@ 22244 @LENGTH@ 7
------------MOV SimpleName@@MethodName:getExchangeName:[] @TO@ MethodInvocation@@address.getExchangeName() @AT@ 22252 @LENGTH@ 17
---DEL InfixExpression@@address.getExchangeName() == "" @AT@ 22244 @LENGTH@ 31
------DEL MethodInvocation@@address.getExchangeName() @AT@ 22244 @LENGTH@ 25
------DEL Operator@@== @AT@ 22269 @LENGTH@ 2
------DEL StringLiteral@@"" @AT@ 22273 @LENGTH@ 2


UPD EnhancedForStatement@@for (ExpectedBsonContent expectation : expectations) {  Object o=getValue(item,expectation.path);  if (o == null && expectation.not) {    return true;  }  if (o == null) {    return false;  }  if (expectation.type != null && !ClassUtils.isAssignable(expectation.type,o.getClass())) {    return false;  }  if (expectation.value != null && !new IsEqual<Object>(expectation.value).matches(o)) {    return false;  }} @TO@ for (ExpectedBsonContent expectation : expectations) {  Object o=getValue(item,expectation.path);  if (o == null && expectation.not) {    return true;  }  if (o == null) {    return false;  }  if (expectation.type != null && !ClassUtils.isAssignable(expectation.type,o.getClass())) {    return false;  }  if (expectation.value != null && !new IsEqual<Object>(expectation.value).matches(o)) {    return false;  }  if (o != null && expectation.not) {    return false;  }} @AT@ 2243 @LENGTH@ 447
---INS IfStatement@@if (o != null && expectation.not) {  return false;} @TO@ EnhancedForStatement@@for (ExpectedBsonContent expectation : expectations) {  Object o=getValue(item,expectation.path);  if (o == null && expectation.not) {    return true;  }  if (o == null) {    return false;  }  if (expectation.type != null && !ClassUtils.isAssignable(expectation.type,o.getClass())) {    return false;  }  if (expectation.value != null && !new IsEqual<Object>(expectation.value).matches(o)) {    return false;  }} @AT@ 2690 @LENGTH@ 58
------INS InfixExpression@@o != null && expectation.not @TO@ IfStatement@@if (o != null && expectation.not) {  return false;} @AT@ 2694 @LENGTH@ 28
---------INS InfixExpression@@o != null @TO@ InfixExpression@@o != null && expectation.not @AT@ 2694 @LENGTH@ 9
------------INS SimpleName@@o @TO@ InfixExpression@@o != null @AT@ 2694 @LENGTH@ 1
------------INS Operator@@!= @TO@ InfixExpression@@o != null @AT@ 2695 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@o != null @AT@ 2699 @LENGTH@ 4
---------INS Operator@@&& @TO@ InfixExpression@@o != null && expectation.not @AT@ 2703 @LENGTH@ 2
---------INS QualifiedName@@expectation.not @TO@ InfixExpression@@o != null && expectation.not @AT@ 2707 @LENGTH@ 15
------------INS SimpleName@@expectation @TO@ QualifiedName@@expectation.not @AT@ 2707 @LENGTH@ 11
------------INS SimpleName@@not @TO@ QualifiedName@@expectation.not @AT@ 2719 @LENGTH@ 3
------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (o != null && expectation.not) {  return false;} @AT@ 2724 @LENGTH@ 24
---------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 2730 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 2737 @LENGTH@ 5


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(ManagedRoute.class)] @TO@ TypeDeclaration@@[@ManagedResource(description="Managed Route"), public]ManagedRoute, ManagedPerformanceCounter[TimerListener, ManagedRouteMBean] @AT@ 2294 @LENGTH@ 78


INS VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @TO@ MethodDeclaration@@private, void, MethodName:startedPooledConnectionFactory, ResolutionContext context, String name, ServiceBuilder<?> serviceBuilder, ServiceTarget serviceTarget, DeploymentUnit deploymentUnit, Injector<ManagedReferenceFactory> injector, DeploymentUnitProcessingException, OperationFailedException,  @AT@ 9473 @LENGTH@ 130
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 9473 @LENGTH@ 5
---INS SimpleType@@DeploymentResourceSupport @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 9479 @LENGTH@ 25
---INS VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @TO@ VariableDeclarationStatement@@final DeploymentResourceSupport deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT); @AT@ 9505 @LENGTH@ 97
------INS SimpleName@@deploymentResourceSupport @TO@ VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 9505 @LENGTH@ 25
------INS MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @TO@ VariableDeclarationFragment@@deploymentResourceSupport=deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 9533 @LENGTH@ 69
---------INS SimpleName@@Name:deploymentUnit @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 9533 @LENGTH@ 14
---------INS SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_RESOURCE_SUPPORT] @TO@ MethodInvocation@@deploymentUnit.getAttachment(Attachments.DEPLOYMENT_RESOURCE_SUPPORT) @AT@ 9548 @LENGTH@ 54
------------INS QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @TO@ SimpleName@@MethodName:getAttachment:[Attachments.DEPLOYMENT_RESOURCE_SUPPORT] @AT@ 9562 @LENGTH@ 39
---------------INS SimpleName@@Attachments @TO@ QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @AT@ 9562 @LENGTH@ 11
---------------INS SimpleName@@DEPLOYMENT_RESOURCE_SUPPORT @TO@ QualifiedName@@Attachments.DEPLOYMENT_RESOURCE_SUPPORT @AT@ 9574 @LENGTH@ 27


UPD FieldDeclaration@@SimpleRegistry, [registry] @TO@ Registry, [registry] @AT@ 1289 @LENGTH@ 24
---UPD SimpleType@@SimpleRegistry @TO@ Registry @AT@ 1289 @LENGTH@ 14


UPD VariableDeclarationStatement@@final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar"); @TO@ final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"MessageDestinationTestCase.jar"); @AT@ 3277 @LENGTH@ 75
---UPD VariableDeclarationFragment@@ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ejbJar=ShrinkWrap.create(JavaArchive.class,"MessageDestinationTestCase.jar") @AT@ 3295 @LENGTH@ 56
------UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ShrinkWrap.create(JavaArchive.class,"MessageDestinationTestCase.jar") @AT@ 3304 @LENGTH@ 47
---------UPD SimpleName@@MethodName:create:[JavaArchive.class, "mdb.jar"] @TO@ MethodName:create:[JavaArchive.class, "MessageDestinationTestCase.jar"] @AT@ 3315 @LENGTH@ 36
------------UPD StringLiteral@@"mdb.jar" @TO@ "MessageDestinationTestCase.jar" @AT@ 3341 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new CompositeType("endpoints","Endpoints",new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"},new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}) @TO@ ClassInstanceCreation:new CompositeType("endpoints","Endpoints",new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"},new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}) @AT@ 6607 @LENGTH@ 535
---UPD ClassInstanceCreation@@CompositeType["endpoints", "Endpoints", new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"}, new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"}, new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}] @TO@ CompositeType["endpoints", "Endpoints", new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"}, new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"}, new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}] @AT@ 6614 @LENGTH@ 527
------UPD ArrayCreation@@new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 6658 @LENGTH@ 115
---------UPD ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ {"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 6670 @LENGTH@ 103
------------INS StringLiteral@@"group" @TO@ ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @AT@ 6726 @LENGTH@ 7
------UPD ArrayCreation@@new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @TO@ new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 6791 @LENGTH@ 115
---------UPD ArrayInitializer@@{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @TO@ {"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 6803 @LENGTH@ 103
------------INS StringLiteral@@"Group" @TO@ ArrayInitializer@@{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 6868 @LENGTH@ 7
------UPD ArrayCreation@@new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @TO@ new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 6924 @LENGTH@ 216
---------UPD ArrayInitializer@@{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @TO@ {SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 6938 @LENGTH@ 202
------------INS QualifiedName@@SimpleType.STRING @TO@ ArrayInitializer@@{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 7196 @LENGTH@ 17
---------------INS SimpleName@@SimpleType @TO@ QualifiedName@@SimpleType.STRING @AT@ 7196 @LENGTH@ 10
---------------INS SimpleName@@STRING @TO@ QualifiedName@@SimpleType.STRING @AT@ 7207 @LENGTH@ 6


INS VariableDeclarationStatement@@Elements elementUtils=processingEnv.getElementUtils(); @TO@ MethodDeclaration@@private, void, MethodName:processVerbs, RoundEnvironment roundEnv, TypeElement originalClassType, XmlElementRef elementRef, VariableElement fieldElement, String fieldName, Set<EipOption> eipOptions, String prefix,  @AT@ 34020 @LENGTH@ 56
---INS SimpleType@@Elements @TO@ VariableDeclarationStatement@@Elements elementUtils=processingEnv.getElementUtils(); @AT@ 34020 @LENGTH@ 8
---INS VariableDeclarationFragment@@elementUtils=processingEnv.getElementUtils() @TO@ VariableDeclarationStatement@@Elements elementUtils=processingEnv.getElementUtils(); @AT@ 34029 @LENGTH@ 46
------INS SimpleName@@elementUtils @TO@ VariableDeclarationFragment@@elementUtils=processingEnv.getElementUtils() @AT@ 34029 @LENGTH@ 12
------INS MethodInvocation@@processingEnv.getElementUtils() @TO@ VariableDeclarationFragment@@elementUtils=processingEnv.getElementUtils() @AT@ 34044 @LENGTH@ 31
---------INS SimpleName@@Name:processingEnv @TO@ MethodInvocation@@processingEnv.getElementUtils() @AT@ 34044 @LENGTH@ 13
---------INS SimpleName@@MethodName:getElementUtils:[] @TO@ MethodInvocation@@processingEnv.getElementUtils() @AT@ 34058 @LENGTH@ 17


UPD CatchClause@@catch (Exception e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ catch (Throwable e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 3151 @LENGTH@ 127
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 3158 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 3158 @LENGTH@ 9


UPD MethodDeclaration@@private, void, MethodName:loadXmlRoutes, ApplicationContext applicationContext, CamelContext camelContext,  @TO@ private, void, MethodName:loadXmlRoutes, ApplicationContext applicationContext, CamelContext camelContext, Exception,  @AT@ 3717 @LENGTH@ 787
---INS SimpleType@@Exception @TO@ MethodDeclaration@@private, void, MethodName:loadXmlRoutes, ApplicationContext applicationContext, CamelContext camelContext,  @AT@ 3814 @LENGTH@ 9
---UPD TryStatement@@try {  Resource[] xmlRoutes=applicationContext.getResources("classpath:camel/*.xml");  for (  Resource xmlRoute : xmlRoutes) {    RoutesDefinition xmlDefinition=camelContext.loadRoutesDefinition(xmlRoute.getInputStream());    camelContext.addRouteDefinitions(xmlDefinition.getRoutes());  }} catch (FileNotFoundException e) {  LOG.debug("No XMl routes found in the classpath (/camel/*.xml). Skipping XML routes detection.");}catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  Resource[] xmlRoutes=applicationContext.getResources("classpath:camel/*.xml");  for (  Resource xmlRoute : xmlRoutes) {    RoutesDefinition xmlDefinition=camelContext.loadRoutesDefinition(xmlRoute.getInputStream());    camelContext.addRouteDefinitions(xmlDefinition.getRoutes());  }} catch (FileNotFoundException e) {  LOG.debug("No XMl routes found in the classpath (/camel/*.xml). Skipping XML routes detection.");} @AT@ 3909 @LENGTH@ 589
------DEL CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @AT@ 4424 @LENGTH@ 74
---------DEL SingleVariableDeclaration@@Exception e @AT@ 4431 @LENGTH@ 11
------------DEL SimpleType@@Exception @AT@ 4431 @LENGTH@ 9
------------DEL SimpleName@@e @AT@ 4441 @LENGTH@ 1
---------DEL ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @AT@ 4458 @LENGTH@ 30
------------DEL ClassInstanceCreation@@RuntimeException[e] @AT@ 4464 @LENGTH@ 23
---------------DEL New@@new @AT@ 4464 @LENGTH@ 3
---------------DEL SimpleType@@RuntimeException @AT@ 4468 @LENGTH@ 16
---------------DEL SimpleName@@e @AT@ 4485 @LENGTH@ 1


UPD ReturnStatement@@MethodInvocation:candidate.substring(0,candidate.indexOf(keyword)) @TO@ MethodInvocation:candidate.substring(0,candidate.length() - keyword.length()) @AT@ 8551 @LENGTH@ 58
---UPD MethodInvocation@@candidate.substring(0,candidate.indexOf(keyword)) @TO@ candidate.substring(0,candidate.length() - keyword.length()) @AT@ 8558 @LENGTH@ 50
------UPD SimpleName@@MethodName:substring:[0, candidate.indexOf(keyword)] @TO@ MethodName:substring:[0, candidate.length() - keyword.length()] @AT@ 8568 @LENGTH@ 40
---------INS InfixExpression@@candidate.length() - keyword.length() @TO@ SimpleName@@MethodName:substring:[0, candidate.indexOf(keyword)] @AT@ 8581 @LENGTH@ 37
------------INS MethodInvocation@@candidate.length() @TO@ InfixExpression@@candidate.length() - keyword.length() @AT@ 8581 @LENGTH@ 18
---------------MOV SimpleName@@Name:candidate @TO@ MethodInvocation@@candidate.length() @AT@ 8581 @LENGTH@ 9
---------------MOV SimpleName@@MethodName:indexOf:[keyword] @TO@ MethodInvocation@@candidate.length() @AT@ 8591 @LENGTH@ 16
------------INS Operator@@- @TO@ InfixExpression@@candidate.length() - keyword.length() @AT@ 8599 @LENGTH@ 1
------------INS MethodInvocation@@keyword.length() @TO@ InfixExpression@@candidate.length() - keyword.length() @AT@ 8602 @LENGTH@ 16
---------------INS SimpleName@@Name:keyword @TO@ MethodInvocation@@keyword.length() @AT@ 8602 @LENGTH@ 7
---------------INS SimpleName@@MethodName:length:[] @TO@ MethodInvocation@@keyword.length() @AT@ 8610 @LENGTH@ 8
---------DEL MethodInvocation@@candidate.indexOf(keyword) @AT@ 8581 @LENGTH@ 26


UPD ExpressionStatement@@MethodInvocation:from("netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @TO@ MethodInvocation:from("netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @AT@ 1513 @LENGTH@ 251
---UPD MethodInvocation@@from("netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @TO@ from("netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @AT@ 1513 @LENGTH@ 250
------UPD MethodInvocation@@MethodName:from:["netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @TO@ MethodName:from:["netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @AT@ 1513 @LENGTH@ 207
---------INS InfixExpression@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ MethodInvocation@@MethodName:from:["netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @AT@ 1518 @LENGTH@ 230
------------INS StringLiteral@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1518 @LENGTH@ 88
------------INS Operator@@+ @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1606 @LENGTH@ 1
------------INS StringLiteral@@"&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1633 @LENGTH@ 115
---------DEL StringLiteral@@"netty4-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1518 @LENGTH@ 201


INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1777 @LENGTH@ 129
---INS MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1777 @LENGTH@ 128
------INS SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")) @AT@ 1777 @LENGTH@ 128
---------INS MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"")] @AT@ 1788 @LENGTH@ 116
------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"") @AT@ 1788 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\""] @TO@ MethodInvocation@@json.contains("\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"") @AT@ 1793 @LENGTH@ 111
---------------INS StringLiteral@@"\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\"" @TO@ SimpleName@@MethodName:contains:["\"name\": { \"kind\": \"path\", \"group\": \"common\", \"required\": \"true\", \"type\": \"string\""] @AT@ 1802 @LENGTH@ 101


UPD EnhancedForStatement@@for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainEndpointsCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @TO@ for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String group=row.get("group") != null ? row.get("group") : "";  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainEndpointsCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @AT@ 3475 @LENGTH@ 1157
---INS VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainEndpointsCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @AT@ 3624 @LENGTH@ 64
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @AT@ 3624 @LENGTH@ 6
------INS VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @TO@ VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @AT@ 3631 @LENGTH@ 56
---------INS SimpleName@@group @TO@ VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @AT@ 3631 @LENGTH@ 5
---------INS ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @TO@ VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @AT@ 3639 @LENGTH@ 48
------------INS InfixExpression@@row.get("group") != null @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 3639 @LENGTH@ 24
---------------INS MethodInvocation@@row.get("group") @TO@ InfixExpression@@row.get("group") != null @AT@ 3639 @LENGTH@ 16
------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("group") @AT@ 3639 @LENGTH@ 3
------------------INS SimpleName@@MethodName:get:["group"] @TO@ MethodInvocation@@row.get("group") @AT@ 3643 @LENGTH@ 12
---------------------INS StringLiteral@@"group" @TO@ SimpleName@@MethodName:get:["group"] @AT@ 3647 @LENGTH@ 7
---------------INS Operator@@!= @TO@ InfixExpression@@row.get("group") != null @AT@ 3655 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@row.get("group") != null @AT@ 3659 @LENGTH@ 4
------------INS MethodInvocation@@row.get("group") @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 3666 @LENGTH@ 16
---------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("group") @AT@ 3666 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["group"] @TO@ MethodInvocation@@row.get("group") @AT@ 3670 @LENGTH@ 12
------------------INS StringLiteral@@"group" @TO@ SimpleName@@MethodName:get:["group"] @AT@ 3674 @LENGTH@ 7
------------INS StringLiteral@@"" @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 3685 @LENGTH@ 2
---UPD VariableDeclarationStatement@@CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}); @TO@ CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}); @AT@ 4274 @LENGTH@ 310
------UPD VariableDeclarationFragment@@data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}) @TO@ data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}) @AT@ 4288 @LENGTH@ 295
---------UPD ClassInstanceCreation@@CompositeDataSupport[ct, new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"}, new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}] @TO@ CompositeDataSupport[ct, new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"}, new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}] @AT@ 4295 @LENGTH@ 288
------------UPD ArrayCreation@@new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 4348 @LENGTH@ 115
---------------UPD ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ {"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 4360 @LENGTH@ 103
------------------INS StringLiteral@@"group" @TO@ ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @AT@ 4460 @LENGTH@ 7
------------UPD ArrayCreation@@new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @TO@ new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 4489 @LENGTH@ 93
---------------UPD ArrayInitializer@@{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @TO@ {name,kind,group,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 4501 @LENGTH@ 81
------------------INS SimpleName@@group @TO@ ArrayInitializer@@{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 4604 @LENGTH@ 5


UPD TryStatement@@try {  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.wildfly.swarm.bootstrap"));  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} catch (ModuleLoadException e) {} @TO@ try {  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.wildfly.swarm.bootstrap"));  if (base != null) {    cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);  } else {    cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);  }} catch (ModuleLoadException e) {} @AT@ 1863 @LENGTH@ 319
---INS IfStatement@@if (base != null) {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} else {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @TO@ TryStatement@@try {  Module module=Module.getBootModuleLoader().loadModule(ModuleIdentifier.create("org.wildfly.swarm.bootstrap"));  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} catch (ModuleLoadException e) {} @AT@ 2022 @LENGTH@ 312
------INS InfixExpression@@base != null @TO@ IfStatement@@if (base != null) {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} else {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @AT@ 2027 @LENGTH@ 12
---------INS SimpleName@@base @TO@ InfixExpression@@base != null @AT@ 2027 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@base != null @AT@ 2031 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@base != null @AT@ 2035 @LENGTH@ 4
------INS Block@@ThenBody:{  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} @TO@ IfStatement@@if (base != null) {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} else {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @AT@ 2042 @LENGTH@ 146
---------INS ExpressionStatement@@Assignment:cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @TO@ Block@@ThenBody:{  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} @AT@ 2068 @LENGTH@ 98
------------INS Assignment@@cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @TO@ ExpressionStatement@@Assignment:cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @AT@ 2068 @LENGTH@ 97
---------------INS SimpleName@@cur @TO@ Assignment@@cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @AT@ 2068 @LENGTH@ 3
---------------INS Operator@@= @TO@ Assignment@@cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @AT@ 2071 @LENGTH@ 1
---------------INS ClassInstanceCreation@@StaticResourceHandler[new ClassPathResourceManager(module.getClassLoader(),base), cur] @TO@ Assignment@@cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur) @AT@ 2074 @LENGTH@ 91
------------------INS New@@new @TO@ ClassInstanceCreation@@StaticResourceHandler[new ClassPathResourceManager(module.getClassLoader(),base), cur] @AT@ 2074 @LENGTH@ 3
------------------INS SimpleType@@StaticResourceHandler @TO@ ClassInstanceCreation@@StaticResourceHandler[new ClassPathResourceManager(module.getClassLoader(),base), cur] @AT@ 2078 @LENGTH@ 21
------------------INS ClassInstanceCreation@@ClassPathResourceManager[module.getClassLoader(), base] @TO@ ClassInstanceCreation@@StaticResourceHandler[new ClassPathResourceManager(module.getClassLoader(),base), cur] @AT@ 2100 @LENGTH@ 59
---------------------INS New@@new @TO@ ClassInstanceCreation@@ClassPathResourceManager[module.getClassLoader(), base] @AT@ 2100 @LENGTH@ 3
---------------------INS SimpleType@@ClassPathResourceManager @TO@ ClassInstanceCreation@@ClassPathResourceManager[module.getClassLoader(), base] @AT@ 2104 @LENGTH@ 24
---------------------INS MethodInvocation@@module.getClassLoader() @TO@ ClassInstanceCreation@@ClassPathResourceManager[module.getClassLoader(), base] @AT@ 2129 @LENGTH@ 23
------------------------INS SimpleName@@Name:module @TO@ MethodInvocation@@module.getClassLoader() @AT@ 2129 @LENGTH@ 6
------------------------INS SimpleName@@MethodName:getClassLoader:[] @TO@ MethodInvocation@@module.getClassLoader() @AT@ 2136 @LENGTH@ 16
---------------------INS SimpleName@@base @TO@ ClassInstanceCreation@@ClassPathResourceManager[module.getClassLoader(), base] @AT@ 2154 @LENGTH@ 4
------------------INS SimpleName@@cur @TO@ ClassInstanceCreation@@StaticResourceHandler[new ClassPathResourceManager(module.getClassLoader(),base), cur] @AT@ 2161 @LENGTH@ 3
------INS Block@@ElseBody:{  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @TO@ IfStatement@@if (base != null) {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader(),base),cur);} else {  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @AT@ 2194 @LENGTH@ 140
---------MOV ExpressionStatement@@Assignment:cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur) @TO@ Block@@ElseBody:{  cur=new StaticResourceHandler(new ClassPathResourceManager(module.getClassLoader()),cur);} @AT@ 2022 @LENGTH@ 92


INS MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @TO@ TypeDeclaration@@[public]FlowJobBuilderTests,  @AT@ 5427 @LENGTH@ 629
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5427 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5434 @LENGTH@ 4
---INS SimpleName@@MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346 @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5439 @LENGTH@ 41
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5490 @LENGTH@ 9
---INS VariableDeclarationStatement@@Flow subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end(); @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5504 @LENGTH@ 68
------INS SimpleType@@Flow @TO@ VariableDeclarationStatement@@Flow subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end(); @AT@ 5504 @LENGTH@ 4
------INS VariableDeclarationFragment@@subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end() @TO@ VariableDeclarationStatement@@Flow subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end(); @AT@ 5509 @LENGTH@ 62
---------INS SimpleName@@subflow1 @TO@ VariableDeclarationFragment@@subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end() @AT@ 5509 @LENGTH@ 8
---------INS MethodInvocation@@new FlowBuilder<Flow>("subflow1").from(step2).end() @TO@ VariableDeclarationFragment@@subflow1=new FlowBuilder<Flow>("subflow1").from(step2).end() @AT@ 5520 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:from:[step2] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow1").from(step2).end() @AT@ 5520 @LENGTH@ 45
---------------INS SimpleName@@step2 @TO@ MethodInvocation@@MethodName:from:[step2] @AT@ 5559 @LENGTH@ 5
------------INS ClassInstanceCreation@@FlowBuilder<Flow>["subflow1"] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow1").from(step2).end() @AT@ 5520 @LENGTH@ 33
---------------INS New@@new @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow1"] @AT@ 5520 @LENGTH@ 3
---------------INS ParameterizedType@@FlowBuilder<Flow> @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow1"] @AT@ 5524 @LENGTH@ 17
------------------INS SimpleType@@FlowBuilder @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5524 @LENGTH@ 11
------------------INS SimpleType@@Flow @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5536 @LENGTH@ 4
---------------INS StringLiteral@@"subflow1" @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow1"] @AT@ 5542 @LENGTH@ 10
------------INS SimpleName@@MethodName:end:[] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow1").from(step2).end() @AT@ 5566 @LENGTH@ 5
---INS VariableDeclarationStatement@@Flow subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end(); @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5575 @LENGTH@ 68
------INS SimpleType@@Flow @TO@ VariableDeclarationStatement@@Flow subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end(); @AT@ 5575 @LENGTH@ 4
------INS VariableDeclarationFragment@@subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end() @TO@ VariableDeclarationStatement@@Flow subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end(); @AT@ 5580 @LENGTH@ 62
---------INS SimpleName@@subflow2 @TO@ VariableDeclarationFragment@@subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end() @AT@ 5580 @LENGTH@ 8
---------INS MethodInvocation@@new FlowBuilder<Flow>("subflow2").from(step3).end() @TO@ VariableDeclarationFragment@@subflow2=new FlowBuilder<Flow>("subflow2").from(step3).end() @AT@ 5591 @LENGTH@ 51
------------INS MethodInvocation@@MethodName:from:[step3] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow2").from(step3).end() @AT@ 5591 @LENGTH@ 45
---------------INS SimpleName@@step3 @TO@ MethodInvocation@@MethodName:from:[step3] @AT@ 5630 @LENGTH@ 5
------------INS ClassInstanceCreation@@FlowBuilder<Flow>["subflow2"] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow2").from(step3).end() @AT@ 5591 @LENGTH@ 33
---------------INS New@@new @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow2"] @AT@ 5591 @LENGTH@ 3
---------------INS ParameterizedType@@FlowBuilder<Flow> @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow2"] @AT@ 5595 @LENGTH@ 17
------------------INS SimpleType@@FlowBuilder @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5595 @LENGTH@ 11
------------------INS SimpleType@@Flow @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5607 @LENGTH@ 4
---------------INS StringLiteral@@"subflow2" @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["subflow2"] @AT@ 5613 @LENGTH@ 10
------------INS SimpleName@@MethodName:end:[] @TO@ MethodInvocation@@new FlowBuilder<Flow>("subflow2").from(step3).end() @AT@ 5637 @LENGTH@ 5
---INS VariableDeclarationStatement@@Flow splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build(); @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5646 @LENGTH@ 132
------INS SimpleType@@Flow @TO@ VariableDeclarationStatement@@Flow splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build(); @AT@ 5646 @LENGTH@ 4
------INS VariableDeclarationFragment@@splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @TO@ VariableDeclarationStatement@@Flow splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build(); @AT@ 5651 @LENGTH@ 126
---------INS SimpleName@@splitflow @TO@ VariableDeclarationFragment@@splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5651 @LENGTH@ 9
---------INS MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @TO@ VariableDeclarationFragment@@splitflow=new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5663 @LENGTH@ 114
------------INS MethodInvocation@@MethodName:add:[subflow2] @TO@ MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5663 @LENGTH@ 106
---------------INS SimpleName@@subflow2 @TO@ MethodInvocation@@MethodName:add:[subflow2] @AT@ 5760 @LENGTH@ 8
------------INS MethodInvocation@@MethodName:split:[new SimpleAsyncTaskExecutor()] @TO@ MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5663 @LENGTH@ 87
---------------INS ClassInstanceCreation@@SimpleAsyncTaskExecutor[] @TO@ MethodInvocation@@MethodName:split:[new SimpleAsyncTaskExecutor()] @AT@ 5720 @LENGTH@ 29
------------------INS New@@new @TO@ ClassInstanceCreation@@SimpleAsyncTaskExecutor[] @AT@ 5720 @LENGTH@ 3
------------------INS SimpleType@@SimpleAsyncTaskExecutor @TO@ ClassInstanceCreation@@SimpleAsyncTaskExecutor[] @AT@ 5724 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:start:[subflow1] @TO@ MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5663 @LENGTH@ 50
---------------INS SimpleName@@subflow1 @TO@ MethodInvocation@@MethodName:start:[subflow1] @AT@ 5704 @LENGTH@ 8
------------INS ClassInstanceCreation@@FlowBuilder<Flow>["splitflow"] @TO@ MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5663 @LENGTH@ 34
---------------INS New@@new @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["splitflow"] @AT@ 5663 @LENGTH@ 3
---------------INS ParameterizedType@@FlowBuilder<Flow> @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["splitflow"] @AT@ 5667 @LENGTH@ 17
------------------INS SimpleType@@FlowBuilder @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5667 @LENGTH@ 11
------------------INS SimpleType@@Flow @TO@ ParameterizedType@@FlowBuilder<Flow> @AT@ 5679 @LENGTH@ 4
---------------INS StringLiteral@@"splitflow" @TO@ ClassInstanceCreation@@FlowBuilder<Flow>["splitflow"] @AT@ 5685 @LENGTH@ 11
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@new FlowBuilder<Flow>("splitflow").start(subflow1).split(new SimpleAsyncTaskExecutor()).add(subflow2).build() @AT@ 5770 @LENGTH@ 7
---INS VariableDeclarationStatement@@FlowJobBuilder builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end(); @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5782 @LENGTH@ 97
------INS SimpleType@@FlowJobBuilder @TO@ VariableDeclarationStatement@@FlowJobBuilder builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end(); @AT@ 5782 @LENGTH@ 14
------INS VariableDeclarationFragment@@builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @TO@ VariableDeclarationStatement@@FlowJobBuilder builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end(); @AT@ 5797 @LENGTH@ 81
---------INS SimpleName@@builder @TO@ VariableDeclarationFragment@@builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5797 @LENGTH@ 7
---------INS MethodInvocation@@new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @TO@ VariableDeclarationFragment@@builder=new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5807 @LENGTH@ 71
------------INS MethodInvocation@@MethodName:start:[splitflow] @TO@ MethodInvocation@@new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5807 @LENGTH@ 65
---------------INS SimpleName@@splitflow @TO@ MethodInvocation@@MethodName:start:[splitflow] @AT@ 5862 @LENGTH@ 9
------------INS MethodInvocation@@MethodName:repository:[jobRepository] @TO@ MethodInvocation@@new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5807 @LENGTH@ 48
---------------INS SimpleName@@jobRepository @TO@ MethodInvocation@@MethodName:repository:[jobRepository] @AT@ 5841 @LENGTH@ 13
------------INS ClassInstanceCreation@@JobBuilder["flow"] @TO@ MethodInvocation@@new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5807 @LENGTH@ 22
---------------INS New@@new @TO@ ClassInstanceCreation@@JobBuilder["flow"] @AT@ 5807 @LENGTH@ 3
---------------INS SimpleType@@JobBuilder @TO@ ClassInstanceCreation@@JobBuilder["flow"] @AT@ 5811 @LENGTH@ 10
---------------INS StringLiteral@@"flow" @TO@ ClassInstanceCreation@@JobBuilder["flow"] @AT@ 5822 @LENGTH@ 6
------------INS SimpleName@@MethodName:end:[] @TO@ MethodInvocation@@new JobBuilder("flow").repository(jobRepository).start(splitflow).end() @AT@ 5873 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:builder.preventRestart().build().execute(execution) @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5882 @LENGTH@ 52
------INS MethodInvocation@@builder.preventRestart().build().execute(execution) @TO@ ExpressionStatement@@MethodInvocation:builder.preventRestart().build().execute(execution) @AT@ 5882 @LENGTH@ 51
---------INS MethodInvocation@@MethodName:build:[] @TO@ MethodInvocation@@builder.preventRestart().build().execute(execution) @AT@ 5882 @LENGTH@ 32
---------INS MethodInvocation@@MethodName:preventRestart:[] @TO@ MethodInvocation@@builder.preventRestart().build().execute(execution) @AT@ 5882 @LENGTH@ 24
---------INS SimpleName@@Name:builder @TO@ MethodInvocation@@builder.preventRestart().build().execute(execution) @AT@ 5882 @LENGTH@ 7
---------INS SimpleName@@MethodName:execute:[execution] @TO@ MethodInvocation@@builder.preventRestart().build().execute(execution) @AT@ 5915 @LENGTH@ 18
------------INS SimpleName@@execution @TO@ SimpleName@@MethodName:execute:[execution] @AT@ 5923 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.COMPLETED,execution.getStatus()) @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5937 @LENGTH@ 59
------INS MethodInvocation@@assertEquals(BatchStatus.COMPLETED,execution.getStatus()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(BatchStatus.COMPLETED,execution.getStatus()) @AT@ 5937 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertEquals:[BatchStatus.COMPLETED, execution.getStatus()] @TO@ MethodInvocation@@assertEquals(BatchStatus.COMPLETED,execution.getStatus()) @AT@ 5937 @LENGTH@ 58
------------INS QualifiedName@@BatchStatus.COMPLETED @TO@ SimpleName@@MethodName:assertEquals:[BatchStatus.COMPLETED, execution.getStatus()] @AT@ 5950 @LENGTH@ 21
---------------INS SimpleName@@BatchStatus @TO@ QualifiedName@@BatchStatus.COMPLETED @AT@ 5950 @LENGTH@ 11
---------------INS SimpleName@@COMPLETED @TO@ QualifiedName@@BatchStatus.COMPLETED @AT@ 5962 @LENGTH@ 9
------------INS MethodInvocation@@execution.getStatus() @TO@ SimpleName@@MethodName:assertEquals:[BatchStatus.COMPLETED, execution.getStatus()] @AT@ 5973 @LENGTH@ 21
---------------INS SimpleName@@Name:execution @TO@ MethodInvocation@@execution.getStatus() @AT@ 5973 @LENGTH@ 9
---------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@execution.getStatus() @AT@ 5983 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals(2,execution.getStepExecutions().size()) @TO@ MethodDeclaration@@public, void, MethodName:testBuildSplitUsingStartAndAdd_BATCH_2346, Exception,  @AT@ 5999 @LENGTH@ 54
------INS MethodInvocation@@assertEquals(2,execution.getStepExecutions().size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(2,execution.getStepExecutions().size()) @AT@ 5999 @LENGTH@ 53
---------INS SimpleName@@MethodName:assertEquals:[2, execution.getStepExecutions().size()] @TO@ MethodInvocation@@assertEquals(2,execution.getStepExecutions().size()) @AT@ 5999 @LENGTH@ 53
------------INS NumberLiteral@@2 @TO@ SimpleName@@MethodName:assertEquals:[2, execution.getStepExecutions().size()] @AT@ 6012 @LENGTH@ 1
------------INS MethodInvocation@@execution.getStepExecutions().size() @TO@ SimpleName@@MethodName:assertEquals:[2, execution.getStepExecutions().size()] @AT@ 6015 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getStepExecutions:[] @TO@ MethodInvocation@@execution.getStepExecutions().size() @AT@ 6015 @LENGTH@ 29
---------------INS SimpleName@@Name:execution @TO@ MethodInvocation@@execution.getStepExecutions().size() @AT@ 6015 @LENGTH@ 9
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@execution.getStepExecutions().size() @AT@ 6045 @LENGTH@ 6


UPD CatchClause@@catch (Exception e) {  beeLine.handleException(e);} @TO@ catch (Exception e) {  beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false);  beeLine.handleException(e);} @AT@ 18858 @LENGTH@ 65
---INS ExpressionStatement@@MethodInvocation:beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false) @TO@ CatchClause@@catch (Exception e) {  beeLine.handleException(e);} @AT@ 18888 @LENGTH@ 66
------INS MethodInvocation@@beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false) @TO@ ExpressionStatement@@MethodInvocation:beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false) @AT@ 18888 @LENGTH@ 65
---------INS SimpleName@@Name:beeLine @TO@ MethodInvocation@@beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false) @AT@ 18888 @LENGTH@ 7
---------INS SimpleName@@MethodName:output:[beeLine.getColorBuffer().pad(m[i],padlen), false] @TO@ MethodInvocation@@beeLine.output(beeLine.getColorBuffer().pad(m[i],padlen),false) @AT@ 18896 @LENGTH@ 57
------------INS MethodInvocation@@beeLine.getColorBuffer().pad(m[i],padlen) @TO@ SimpleName@@MethodName:output:[beeLine.getColorBuffer().pad(m[i],padlen), false] @AT@ 18903 @LENGTH@ 42
---------------INS MethodInvocation@@MethodName:getColorBuffer:[] @TO@ MethodInvocation@@beeLine.getColorBuffer().pad(m[i],padlen) @AT@ 18903 @LENGTH@ 24
---------------INS SimpleName@@Name:beeLine @TO@ MethodInvocation@@beeLine.getColorBuffer().pad(m[i],padlen) @AT@ 18903 @LENGTH@ 7
---------------INS SimpleName@@MethodName:pad:[m[i], padlen] @TO@ MethodInvocation@@beeLine.getColorBuffer().pad(m[i],padlen) @AT@ 18928 @LENGTH@ 17
------------------INS ArrayAccess@@m[i] @TO@ SimpleName@@MethodName:pad:[m[i], padlen] @AT@ 18932 @LENGTH@ 4
---------------------INS SimpleName@@m @TO@ ArrayAccess@@m[i] @AT@ 18932 @LENGTH@ 1
---------------------INS SimpleName@@i @TO@ ArrayAccess@@m[i] @AT@ 18934 @LENGTH@ 1
------------------INS SimpleName@@padlen @TO@ SimpleName@@MethodName:pad:[m[i], padlen] @AT@ 18938 @LENGTH@ 6
------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:output:[beeLine.getColorBuffer().pad(m[i],padlen), false] @AT@ 18947 @LENGTH@ 5


INS VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2354 @LENGTH@ 57
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @AT@ 2354 @LENGTH@ 6
---INS VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @TO@ VariableDeclarationStatement@@String charset=IOHelper.getCharsetName(exchange,true); @AT@ 2361 @LENGTH@ 49
------INS SimpleName@@charset @TO@ VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @AT@ 2361 @LENGTH@ 7
------INS MethodInvocation@@IOHelper.getCharsetName(exchange,true) @TO@ VariableDeclarationFragment@@charset=IOHelper.getCharsetName(exchange,true) @AT@ 2371 @LENGTH@ 39
---------INS SimpleName@@Name:IOHelper @TO@ MethodInvocation@@IOHelper.getCharsetName(exchange,true) @AT@ 2371 @LENGTH@ 8
---------INS SimpleName@@MethodName:getCharsetName:[exchange, true] @TO@ MethodInvocation@@IOHelper.getCharsetName(exchange,true) @AT@ 2380 @LENGTH@ 30
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 2395 @LENGTH@ 8
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:getCharsetName:[exchange, true] @AT@ 2405 @LENGTH@ 4


DEL MethodDeclaration@@public, void, MethodName:setWriteListener, WriteListener writeListener,  @AT@ 11663 @LENGTH@ 108
---DEL Modifier@@public @AT@ 11663 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 11670 @LENGTH@ 4
---DEL SimpleName@@MethodName:setWriteListener @AT@ 11675 @LENGTH@ 16
---DEL SingleVariableDeclaration@@WriteListener writeListener @AT@ 11692 @LENGTH@ 27
------DEL SimpleType@@WriteListener @AT@ 11692 @LENGTH@ 13
------DEL SimpleName@@writeListener @AT@ 11706 @LENGTH@ 13
---DEL ExpressionStatement@@MethodInvocation:delegate.setWriteListener(writeListener) @AT@ 11726 @LENGTH@ 41
------DEL MethodInvocation@@delegate.setWriteListener(writeListener) @AT@ 11726 @LENGTH@ 40
---------DEL SimpleName@@Name:delegate @AT@ 11726 @LENGTH@ 8
---------DEL SimpleName@@MethodName:setWriteListener:[writeListener] @AT@ 11735 @LENGTH@ 31
------------DEL SimpleName@@writeListener @AT@ 11752 @LENGTH@ 13


UPD VariableDeclarationStatement@@StringEntity body=new StringEntity(json); @TO@ StringEntity body=new StringEntity(json,charset); @AT@ 2316 @LENGTH@ 43
---UPD VariableDeclarationFragment@@body=new StringEntity(json) @TO@ body=new StringEntity(json,charset) @AT@ 2329 @LENGTH@ 29
------UPD ClassInstanceCreation@@StringEntity[json] @TO@ StringEntity[json, charset] @AT@ 2336 @LENGTH@ 22
---------INS SimpleName@@charset @TO@ ClassInstanceCreation@@StringEntity[json] @AT@ 2537 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 1678 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 1678 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 1689 @LENGTH@ 9


INS ThrowStatement@@MethodInvocation:reader.unexpectedDocumentEnd() @TO@ MethodDeclaration@@public, static, SecurityFactory<KeyStore.Entry>, MethodName:parseKeyStoreRefType, ConfigurationXMLStreamReader reader, final Map<String,SecurityFactory<KeyStore>> keyStoresMap, ConfigXMLParseException,  @AT@ 32885 @LENGTH@ 37
---INS MethodInvocation@@reader.unexpectedDocumentEnd() @TO@ ThrowStatement@@MethodInvocation:reader.unexpectedDocumentEnd() @AT@ 32891 @LENGTH@ 30
------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.unexpectedDocumentEnd() @AT@ 32891 @LENGTH@ 6
------INS SimpleName@@MethodName:unexpectedDocumentEnd:[] @TO@ MethodInvocation@@reader.unexpectedDocumentEnd() @AT@ 32898 @LENGTH@ 23


INS FieldDeclaration@@private, RatingRepository, [ratingRepository] @TO@ TypeDeclaration@@[@ContextConfiguration(classes={MoviesContext.class}), @RunWith(SpringJUnit4ClassRunner.class), @DirtiesContext(classMode=DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD), public]MoviesIntegrationTest,  @AT@ 2904 @LENGTH@ 42
---INS Modifier@@private @TO@ FieldDeclaration@@private, RatingRepository, [ratingRepository] @AT@ 2904 @LENGTH@ 7
---INS SimpleType@@RatingRepository @TO@ FieldDeclaration@@private, RatingRepository, [ratingRepository] @AT@ 2912 @LENGTH@ 16
---INS VariableDeclarationFragment@@ratingRepository @TO@ FieldDeclaration@@private, RatingRepository, [ratingRepository] @AT@ 2929 @LENGTH@ 16
------INS SimpleName@@ratingRepository @TO@ VariableDeclarationFragment@@ratingRepository @AT@ 2929 @LENGTH@ 16


INS MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @TO@ TypeDeclaration@@[@MessageLogger(projectCode="WFLYEJB",length=4), public]EjbLogger, [BasicLogger] @AT@ 141098 @LENGTH@ 88
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @AT@ 141093 @LENGTH@ 4
---INS SimpleName@@MethodName:couldNotSendClusterRemovalMessage @TO@ MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @AT@ 141098 @LENGTH@ 33
---INS SingleVariableDeclaration@@@Cause Throwable cause @TO@ MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @AT@ 141132 @LENGTH@ 22
------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 141139 @LENGTH@ 9
------INS SimpleName@@cause @TO@ SingleVariableDeclaration@@@Cause Throwable cause @AT@ 141149 @LENGTH@ 5
---INS SingleVariableDeclaration@@Group group @TO@ MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @AT@ 141156 @LENGTH@ 11
------INS SimpleType@@Group @TO@ SingleVariableDeclaration@@Group group @AT@ 141156 @LENGTH@ 5
------INS SimpleName@@group @TO@ SingleVariableDeclaration@@Group group @AT@ 141162 @LENGTH@ 5
---INS SingleVariableDeclaration@@Channel channel @TO@ MethodDeclaration@@void, MethodName:couldNotSendClusterRemovalMessage, @Cause Throwable cause, Group group, Channel channel,  @AT@ 141169 @LENGTH@ 15
------INS SimpleType@@Channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 141169 @LENGTH@ 7
------INS SimpleName@@channel @TO@ SingleVariableDeclaration@@Channel channel @AT@ 141177 @LENGTH@ 7


INS FieldDeclaration@@public, ExpectedException, [exception=ExpectedException.none()] @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JsonPatchHandlerUnitTests,  @AT@ 1882 @LENGTH@ 68
---INS Modifier@@public @TO@ FieldDeclaration@@public, ExpectedException, [exception=ExpectedException.none()] @AT@ 1882 @LENGTH@ 6
---INS SimpleType@@ExpectedException @TO@ FieldDeclaration@@public, ExpectedException, [exception=ExpectedException.none()] @AT@ 1895 @LENGTH@ 17
---INS VariableDeclarationFragment@@exception=ExpectedException.none() @TO@ FieldDeclaration@@public, ExpectedException, [exception=ExpectedException.none()] @AT@ 1913 @LENGTH@ 36
------INS SimpleName@@exception @TO@ VariableDeclarationFragment@@exception=ExpectedException.none() @AT@ 1913 @LENGTH@ 9
------INS MethodInvocation@@ExpectedException.none() @TO@ VariableDeclarationFragment@@exception=ExpectedException.none() @AT@ 1925 @LENGTH@ 24
---------INS SimpleName@@Name:ExpectedException @TO@ MethodInvocation@@ExpectedException.none() @AT@ 1925 @LENGTH@ 17
---------INS SimpleName@@MethodName:none:[] @TO@ MethodInvocation@@ExpectedException.none() @AT@ 1943 @LENGTH@ 6


DEL FieldDeclaration@@private, static, String, [payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>"] @AT@ 1818 @LENGTH@ 157
---DEL VariableDeclarationFragment@@payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 1840 @LENGTH@ 134
------DEL InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 1850 @LENGTH@ 124


INS ExpressionStatement@@MethodInvocation:copyAttachments(that) @TO@ MethodDeclaration@@public, void, MethodName:copyFrom, Message that,  @AT@ 5208 @LENGTH@ 22
---INS MethodInvocation@@copyAttachments(that) @TO@ ExpressionStatement@@MethodInvocation:copyAttachments(that) @AT@ 5208 @LENGTH@ 21
------INS SimpleName@@MethodName:copyAttachments:[that] @TO@ MethodInvocation@@copyAttachments(that) @AT@ 5208 @LENGTH@ 21
---------INS SimpleName@@that @TO@ SimpleName@@MethodName:copyAttachments:[that] @AT@ 5224 @LENGTH@ 4


UPD ForStatement@@for (Iterator iterator=subject.getPrincipals().iterator(); iterator.hasNext(); ) {  Principal principal=(Principal)iterator.next();  if (principal instanceof X500Principal) {    return principal.getName();  }} @TO@ for (Iterator<Principal> iterator=subject.getPrincipals().iterator(); iterator.hasNext(); ) {  Principal principal=iterator.next();  if (principal instanceof X500Principal) {    return principal.getName();  }} @AT@ 2002 @LENGTH@ 223
---UPD VariableDeclarationExpression@@Iterator iterator=subject.getPrincipals().iterator() @TO@ Iterator<Principal> iterator=subject.getPrincipals().iterator() @AT@ 2007 @LENGTH@ 54
------DEL SimpleType@@Iterator @AT@ 2007 @LENGTH@ 8
------INS ParameterizedType@@Iterator<Principal> @TO@ VariableDeclarationExpression@@Iterator iterator=subject.getPrincipals().iterator() @AT@ 2030 @LENGTH@ 19
---------INS SimpleType@@Iterator @TO@ ParameterizedType@@Iterator<Principal> @AT@ 2030 @LENGTH@ 8
---------INS SimpleType@@Principal @TO@ ParameterizedType@@Iterator<Principal> @AT@ 2039 @LENGTH@ 9
---UPD VariableDeclarationStatement@@Principal principal=(Principal)iterator.next(); @TO@ Principal principal=iterator.next(); @AT@ 2089 @LENGTH@ 50
------UPD VariableDeclarationFragment@@principal=(Principal)iterator.next() @TO@ principal=iterator.next() @AT@ 2099 @LENGTH@ 39
---------DEL CastExpression@@(Principal)iterator.next() @AT@ 2111 @LENGTH@ 27
------------DEL SimpleType@@Principal @AT@ 2112 @LENGTH@ 9
------------DEL MethodInvocation@@iterator.next() @AT@ 2123 @LENGTH@ 15
---------INS MethodInvocation@@iterator.next() @TO@ VariableDeclarationFragment@@principal=(Principal)iterator.next() @AT@ 2145 @LENGTH@ 15
------------MOV SimpleName@@Name:iterator @TO@ MethodInvocation@@iterator.next() @AT@ 2123 @LENGTH@ 8
------------MOV SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@iterator.next() @AT@ 2132 @LENGTH@ 6


UPD Block@@ElseBody:if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep));} @TO@ ElseBody:if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep));} @AT@ 5535 @LENGTH@ 175
---UPD IfStatement@@if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep));} @TO@ if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep));} @AT@ 5535 @LENGTH@ 175
------UPD Block@@ThenBody:{  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep));} @TO@ ThenBody:{  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep));} @AT@ 5553 @LENGTH@ 157
---------UPD ExpressionStatement@@MethodInvocation:builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)) @TO@ MethodInvocation:builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)) @AT@ 5567 @LENGTH@ 133
------------UPD MethodInvocation@@builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)) @TO@ builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)) @AT@ 5567 @LENGTH@ 132
---------------UPD SimpleName@@MethodName:add:[AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)] @TO@ MethodName:add:[AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)] @AT@ 5596 @LENGTH@ 103
------------------UPD MethodInvocation@@AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep) @TO@ AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep) @AT@ 5600 @LENGTH@ 98
---------------------UPD SimpleName@@MethodName:removeByType:[route, type, selectFirst, selectFirst, selectFrom, selectTo, maxDeep] @TO@ MethodName:removeByType:[route, type, selectFirst, selectLast, selectFrom, selectTo, maxDeep] @AT@ 5616 @LENGTH@ 82
------------------------UPD SimpleName@@selectFirst @TO@ selectLast @AT@ 5655 @LENGTH@ 11
---UPD IfStatement@@if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep));} @TO@ if (type != null) {  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep));} @AT@ 5535 @LENGTH@ 175
------UPD Block@@ThenBody:{  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep));} @TO@ ThenBody:{  builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep));} @AT@ 5553 @LENGTH@ 157
---------UPD ExpressionStatement@@MethodInvocation:builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)) @TO@ MethodInvocation:builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)) @AT@ 5567 @LENGTH@ 133
------------UPD MethodInvocation@@builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)) @TO@ builder.getAdviceWithTasks().add(AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)) @AT@ 5567 @LENGTH@ 132
---------------UPD SimpleName@@MethodName:add:[AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep)] @TO@ MethodName:add:[AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep)] @AT@ 5596 @LENGTH@ 103
------------------UPD MethodInvocation@@AdviceWithTasks.removeByType(route,type,selectFirst,selectFirst,selectFrom,selectTo,maxDeep) @TO@ AdviceWithTasks.removeByType(route,type,selectFirst,selectLast,selectFrom,selectTo,maxDeep) @AT@ 5600 @LENGTH@ 98
---------------------UPD SimpleName@@MethodName:removeByType:[route, type, selectFirst, selectFirst, selectFrom, selectTo, maxDeep] @TO@ MethodName:removeByType:[route, type, selectFirst, selectLast, selectFrom, selectTo, maxDeep] @AT@ 5616 @LENGTH@ 82
------------------------UPD SimpleName@@selectFirst @TO@ selectLast @AT@ 5655 @LENGTH@ 11


UPD VariableDeclarationStatement@@final Archive<?> deployment=ShrinkWrap.create(JavaArchive.class,"ejb3mdb.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class); @TO@ final Archive<?> deployment=ShrinkWrap.create(JavaArchive.class,"JMSMessageDrivenBeanTestCase.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class); @AT@ 2239 @LENGTH@ 206
---UPD VariableDeclarationFragment@@deployment=ShrinkWrap.create(JavaArchive.class,"ejb3mdb.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class) @TO@ deployment=ShrinkWrap.create(JavaArchive.class,"JMSMessageDrivenBeanTestCase.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class) @AT@ 2256 @LENGTH@ 188
------UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"ejb3mdb.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class) @TO@ ShrinkWrap.create(JavaArchive.class,"JMSMessageDrivenBeanTestCase.jar").addClasses(ReplyingMDB.class,JMSMessagingUtil.class).addClass(CreateQueueSetupTask.class) @AT@ 2269 @LENGTH@ 175
---------UPD MethodInvocation@@MethodName:create:[JavaArchive.class, "ejb3mdb.jar"] @TO@ MethodName:create:[JavaArchive.class, "JMSMessageDrivenBeanTestCase.jar"] @AT@ 2269 @LENGTH@ 51
------------UPD StringLiteral@@"ejb3mdb.jar" @TO@ "JMSMessageDrivenBeanTestCase.jar" @AT@ 2306 @LENGTH@ 13


INS MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @TO@ TypeDeclaration@@[public]KafkaProducerTest,  @AT@ 4679 @LENGTH@ 441
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4679 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4686 @LENGTH@ 4
---INS SimpleName@@MethodName:processSendMessageWithBridgeEndpoint @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4691 @LENGTH@ 36
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4737 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:endpoint.setTopic("someTopic") @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4757 @LENGTH@ 31
------INS MethodInvocation@@endpoint.setTopic("someTopic") @TO@ ExpressionStatement@@MethodInvocation:endpoint.setTopic("someTopic") @AT@ 4757 @LENGTH@ 30
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setTopic("someTopic") @AT@ 4757 @LENGTH@ 8
---------INS SimpleName@@MethodName:setTopic:["someTopic"] @TO@ MethodInvocation@@endpoint.setTopic("someTopic") @AT@ 4766 @LENGTH@ 21
------------INS StringLiteral@@"someTopic" @TO@ SimpleName@@MethodName:setTopic:["someTopic"] @AT@ 4775 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:endpoint.setBridgeEndpoint(true) @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4797 @LENGTH@ 33
------INS MethodInvocation@@endpoint.setBridgeEndpoint(true) @TO@ ExpressionStatement@@MethodInvocation:endpoint.setBridgeEndpoint(true) @AT@ 4797 @LENGTH@ 32
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.setBridgeEndpoint(true) @AT@ 4797 @LENGTH@ 8
---------INS SimpleName@@MethodName:setBridgeEndpoint:[true] @TO@ MethodInvocation@@endpoint.setBridgeEndpoint(true) @AT@ 4806 @LENGTH@ 23
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setBridgeEndpoint:[true] @AT@ 4824 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getIn()).thenReturn(in) @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4839 @LENGTH@ 46
------INS MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(in) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(exchange.getIn()).thenReturn(in) @AT@ 4839 @LENGTH@ 45
---------INS MethodInvocation@@MethodName:when:[exchange.getIn()] @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(in) @AT@ 4839 @LENGTH@ 30
------------INS MethodInvocation@@exchange.getIn() @TO@ MethodInvocation@@MethodName:when:[exchange.getIn()] @AT@ 4852 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn() @AT@ 4852 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn() @AT@ 4861 @LENGTH@ 7
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(in) @AT@ 4839 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[in] @TO@ MethodInvocation@@Mockito.when(exchange.getIn()).thenReturn(in) @AT@ 4870 @LENGTH@ 14
------------INS SimpleName@@in @TO@ SimpleName@@MethodName:thenReturn:[in] @AT@ 4881 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:in.setHeader(KafkaConstants.TOPIC,"anotherTopic") @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4894 @LENGTH@ 51
------INS MethodInvocation@@in.setHeader(KafkaConstants.TOPIC,"anotherTopic") @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(KafkaConstants.TOPIC,"anotherTopic") @AT@ 4894 @LENGTH@ 50
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(KafkaConstants.TOPIC,"anotherTopic") @AT@ 4894 @LENGTH@ 2
---------INS SimpleName@@MethodName:setHeader:[KafkaConstants.TOPIC, "anotherTopic"] @TO@ MethodInvocation@@in.setHeader(KafkaConstants.TOPIC,"anotherTopic") @AT@ 4897 @LENGTH@ 47
------------INS QualifiedName@@KafkaConstants.TOPIC @TO@ SimpleName@@MethodName:setHeader:[KafkaConstants.TOPIC, "anotherTopic"] @AT@ 4907 @LENGTH@ 20
---------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4907 @LENGTH@ 14
---------------INS SimpleName@@TOPIC @TO@ QualifiedName@@KafkaConstants.TOPIC @AT@ 4922 @LENGTH@ 5
------------INS StringLiteral@@"anotherTopic" @TO@ SimpleName@@MethodName:setHeader:[KafkaConstants.TOPIC, "anotherTopic"] @AT@ 4929 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:in.setHeader(KafkaConstants.KEY,"someKey") @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 4954 @LENGTH@ 44
------INS MethodInvocation@@in.setHeader(KafkaConstants.KEY,"someKey") @TO@ ExpressionStatement@@MethodInvocation:in.setHeader(KafkaConstants.KEY,"someKey") @AT@ 4954 @LENGTH@ 43
---------INS SimpleName@@Name:in @TO@ MethodInvocation@@in.setHeader(KafkaConstants.KEY,"someKey") @AT@ 4954 @LENGTH@ 2
---------INS SimpleName@@MethodName:setHeader:[KafkaConstants.KEY, "someKey"] @TO@ MethodInvocation@@in.setHeader(KafkaConstants.KEY,"someKey") @AT@ 4957 @LENGTH@ 40
------------INS QualifiedName@@KafkaConstants.KEY @TO@ SimpleName@@MethodName:setHeader:[KafkaConstants.KEY, "someKey"] @AT@ 4967 @LENGTH@ 18
---------------INS SimpleName@@KafkaConstants @TO@ QualifiedName@@KafkaConstants.KEY @AT@ 4967 @LENGTH@ 14
---------------INS SimpleName@@KEY @TO@ QualifiedName@@KafkaConstants.KEY @AT@ 4982 @LENGTH@ 3
------------INS StringLiteral@@"someKey" @TO@ SimpleName@@MethodName:setHeader:[KafkaConstants.KEY, "someKey"] @AT@ 4987 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:producer.process(exchange) @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 5016 @LENGTH@ 27
------INS MethodInvocation@@producer.process(exchange) @TO@ ExpressionStatement@@MethodInvocation:producer.process(exchange) @AT@ 5016 @LENGTH@ 26
---------INS SimpleName@@Name:producer @TO@ MethodInvocation@@producer.process(exchange) @AT@ 5016 @LENGTH@ 8
---------INS SimpleName@@MethodName:process:[exchange] @TO@ MethodInvocation@@producer.process(exchange) @AT@ 5025 @LENGTH@ 17
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:process:[exchange] @AT@ 5033 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:verifySendMessage("someKey","someTopic","someKey") @TO@ MethodDeclaration@@public, void, MethodName:processSendMessageWithBridgeEndpoint, Exception,  @AT@ 5061 @LENGTH@ 53
------INS MethodInvocation@@verifySendMessage("someKey","someTopic","someKey") @TO@ ExpressionStatement@@MethodInvocation:verifySendMessage("someKey","someTopic","someKey") @AT@ 5061 @LENGTH@ 52
---------INS SimpleName@@MethodName:verifySendMessage:["someKey", "someTopic", "someKey"] @TO@ MethodInvocation@@verifySendMessage("someKey","someTopic","someKey") @AT@ 5061 @LENGTH@ 52
------------INS StringLiteral@@"someKey" @TO@ SimpleName@@MethodName:verifySendMessage:["someKey", "someTopic", "someKey"] @AT@ 5079 @LENGTH@ 9
------------INS StringLiteral@@"someTopic" @TO@ SimpleName@@MethodName:verifySendMessage:["someKey", "someTopic", "someKey"] @AT@ 5090 @LENGTH@ 11
------------INS StringLiteral@@"someKey" @TO@ SimpleName@@MethodName:verifySendMessage:["someKey", "someTopic", "someKey"] @AT@ 5103 @LENGTH@ 9


UPD MethodDeclaration@@public, voidMethodName:PerfLogger,  @TO@ private, voidMethodName:PerfLogger,  @AT@ 4346 @LENGTH@ 83
---UPD Modifier@@public @TO@ private @AT@ 4346 @LENGTH@ 6


UPD IfStatement@@if (restype.equals("javax.jms.Queue")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-queue",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ if (restype.equals("javax.jms.Queue")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-queue",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 4931 @LENGTH@ 2031
---UPD Block@@ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-queue",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @TO@ ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-queue",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @AT@ 4969 @LENGTH@ 543
------UPD ExpressionStatement@@MethodInvocation:builder.addNode("subsystem","messaging") @TO@ MethodInvocation:builder.addNode("subsystem","messaging-activemq") @AT@ 5075 @LENGTH@ 42
---------UPD MethodInvocation@@builder.addNode("subsystem","messaging") @TO@ builder.addNode("subsystem","messaging-activemq") @AT@ 5075 @LENGTH@ 41
------------UPD SimpleName@@MethodName:addNode:["subsystem", "messaging"] @TO@ MethodName:addNode:["subsystem", "messaging-activemq"] @AT@ 5083 @LENGTH@ 33
---------------UPD StringLiteral@@"messaging" @TO@ "messaging-activemq" @AT@ 5104 @LENGTH@ 11
------UPD ExpressionStatement@@MethodInvocation:builder.addNode("hornetq-server",serverName) @TO@ MethodInvocation:builder.addNode("server",serverName) @AT@ 5130 @LENGTH@ 46
---------UPD MethodInvocation@@builder.addNode("hornetq-server",serverName) @TO@ builder.addNode("server",serverName) @AT@ 5130 @LENGTH@ 45
------------UPD SimpleName@@MethodName:addNode:["hornetq-server", serverName] @TO@ MethodName:addNode:["server", serverName] @AT@ 5138 @LENGTH@ 37
---------------UPD StringLiteral@@"hornetq-server" @TO@ "server" @AT@ 5146 @LENGTH@ 16
---UPD Block@@ElseBody:if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ ElseBody:if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 5518 @LENGTH@ 1444
------UPD IfStatement@@if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ if (restype.equals("javax.jms.Topic")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 5518 @LENGTH@ 1444
---------UPD Block@@ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @TO@ ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("jms-topic",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @AT@ 5556 @LENGTH@ 543
------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("subsystem","messaging") @TO@ MethodInvocation:builder.addNode("subsystem","messaging-activemq") @AT@ 5662 @LENGTH@ 42
---------------UPD MethodInvocation@@builder.addNode("subsystem","messaging") @TO@ builder.addNode("subsystem","messaging-activemq") @AT@ 5662 @LENGTH@ 41
------------------UPD SimpleName@@MethodName:addNode:["subsystem", "messaging"] @TO@ MethodName:addNode:["subsystem", "messaging-activemq"] @AT@ 5670 @LENGTH@ 33
---------------------UPD StringLiteral@@"messaging" @TO@ "messaging-activemq" @AT@ 5691 @LENGTH@ 11
------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("hornetq-server",serverName) @TO@ MethodInvocation:builder.addNode("server",serverName) @AT@ 5717 @LENGTH@ 46
---------------UPD MethodInvocation@@builder.addNode("hornetq-server",serverName) @TO@ builder.addNode("server",serverName) @AT@ 5717 @LENGTH@ 45
------------------UPD SimpleName@@MethodName:addNode:["hornetq-server", serverName] @TO@ MethodName:addNode:["server", serverName] @AT@ 5725 @LENGTH@ 37
---------------------UPD StringLiteral@@"hornetq-server" @TO@ "server" @AT@ 5733 @LENGTH@ 16
---------UPD Block@@ElseBody:if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ ElseBody:if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 6105 @LENGTH@ 857
------------UPD IfStatement@@if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 6105 @LENGTH@ 857
---------------UPD Block@@ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @TO@ ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @AT@ 6295 @LENGTH@ 552
------------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("subsystem","messaging") @TO@ MethodInvocation:builder.addNode("subsystem","messaging-activemq") @AT@ 6401 @LENGTH@ 42
---------------------UPD MethodInvocation@@builder.addNode("subsystem","messaging") @TO@ builder.addNode("subsystem","messaging-activemq") @AT@ 6401 @LENGTH@ 41
------------------------UPD SimpleName@@MethodName:addNode:["subsystem", "messaging"] @TO@ MethodName:addNode:["subsystem", "messaging-activemq"] @AT@ 6409 @LENGTH@ 33
---------------------------UPD StringLiteral@@"messaging" @TO@ "messaging-activemq" @AT@ 6430 @LENGTH@ 11
------------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("hornetq-server",serverName) @TO@ MethodInvocation:builder.addNode("server",serverName) @AT@ 6456 @LENGTH@ 46
---------------------UPD MethodInvocation@@builder.addNode("hornetq-server",serverName) @TO@ builder.addNode("server",serverName) @AT@ 6456 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:addNode:["hornetq-server", serverName] @TO@ MethodName:addNode:["server", serverName] @AT@ 6464 @LENGTH@ 37
---------------------------UPD StringLiteral@@"hornetq-server" @TO@ "server" @AT@ 6472 @LENGTH@ 16
------------UPD IfStatement@@if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @TO@ if (restype.equals("javax.jms.ConnectionFactory") || restype.equals("javax.jms.TopicConnectionFactory") || restype.equals("javax.jms.QueueConnectionFactory")) {  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} else {  throw new OperationFormatException("Resource type " + restype + " isn't supported.");} @AT@ 6105 @LENGTH@ 857
---------------UPD Block@@ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging");  builder.addNode("hornetq-server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @TO@ ThenBody:{  DefaultOperationRequestBuilder builder=new DefaultOperationRequestBuilder();  builder.addNode("subsystem","messaging-activemq");  builder.addNode("server",serverName);  builder.addNode("connection-factory",name);  builder.setOperationName("add");  builder.getModelNode().get("entries").add(jndiName);  for (  String prop : props.keySet()) {    builder.addProperty(prop,props.get(prop));  }  return builder.buildRequest();} @AT@ 6295 @LENGTH@ 552
------------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("subsystem","messaging") @TO@ MethodInvocation:builder.addNode("subsystem","messaging-activemq") @AT@ 6401 @LENGTH@ 42
---------------------UPD MethodInvocation@@builder.addNode("subsystem","messaging") @TO@ builder.addNode("subsystem","messaging-activemq") @AT@ 6401 @LENGTH@ 41
------------------------UPD SimpleName@@MethodName:addNode:["subsystem", "messaging"] @TO@ MethodName:addNode:["subsystem", "messaging-activemq"] @AT@ 6409 @LENGTH@ 33
---------------------------UPD StringLiteral@@"messaging" @TO@ "messaging-activemq" @AT@ 6430 @LENGTH@ 11
------------------UPD ExpressionStatement@@MethodInvocation:builder.addNode("hornetq-server",serverName) @TO@ MethodInvocation:builder.addNode("server",serverName) @AT@ 6456 @LENGTH@ 46
---------------------UPD MethodInvocation@@builder.addNode("hornetq-server",serverName) @TO@ builder.addNode("server",serverName) @AT@ 6456 @LENGTH@ 45
------------------------UPD SimpleName@@MethodName:addNode:["hornetq-server", serverName] @TO@ MethodName:addNode:["server", serverName] @AT@ 6464 @LENGTH@ 37
---------------------------UPD StringLiteral@@"hornetq-server" @TO@ "server" @AT@ 6472 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @TO@ TypeDeclaration@@[public]QuerydslPredicateArgumentResolverUnitTests,  @AT@ 6661 @LENGTH@ 328
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @AT@ 6661 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @AT@ 6668 @LENGTH@ 4
---INS SimpleName@@MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated @TO@ MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @AT@ 6673 @LENGTH@ 87
---INS VariableDeclarationStatement@@Object bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @TO@ MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @AT@ 6768 @LENGTH@ 153
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @AT@ 6768 @LENGTH@ 6
------INS VariableDeclarationFragment@@bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @TO@ VariableDeclarationStatement@@Object bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)); @AT@ 6775 @LENGTH@ 145
---------INS SimpleName@@bindings @TO@ VariableDeclarationFragment@@bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 6775 @LENGTH@ 8
---------INS MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @TO@ VariableDeclarationFragment@@bindings=ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 6786 @LENGTH@ 134
------------INS SimpleName@@Name:ReflectionTestUtils @TO@ MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 6786 @LENGTH@ 19
------------INS SimpleName@@MethodName:invokeMethod:[resolver, "createBindings", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @TO@ MethodInvocation@@ReflectionTestUtils.invokeMethod(resolver,"createBindings",getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)) @AT@ 6806 @LENGTH@ 114
---------------INS SimpleName@@resolver @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "createBindings", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 6819 @LENGTH@ 8
---------------INS StringLiteral@@"createBindings" @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "createBindings", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 6829 @LENGTH@ 16
---------------INS MethodInvocation@@getMethodParameterFor("predicateWithoutAnnotation",Predicate.class) @TO@ SimpleName@@MethodName:invokeMethod:[resolver, "createBindings", getMethodParameterFor("predicateWithoutAnnotation",Predicate.class)] @AT@ 6851 @LENGTH@ 68
------------------INS SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @TO@ MethodInvocation@@getMethodParameterFor("predicateWithoutAnnotation",Predicate.class) @AT@ 6851 @LENGTH@ 68
---------------------INS StringLiteral@@"predicateWithoutAnnotation" @TO@ SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @AT@ 6873 @LENGTH@ 28
---------------------INS TypeLiteral@@Predicate.class @TO@ SimpleName@@MethodName:getMethodParameterFor:["predicateWithoutAnnotation", Predicate.class] @AT@ 6903 @LENGTH@ 15
---INS ExpressionStatement@@MethodInvocation:assertThat(bindings,is(instanceOf(QuerydslBindings.class))) @TO@ MethodDeclaration@@public, void, MethodName:createBindingContextShouldUseQuerydslPredicationAnntotationDefaultBindingIfNotAnnotated,  @AT@ 6925 @LENGTH@ 61
------INS MethodInvocation@@assertThat(bindings,is(instanceOf(QuerydslBindings.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(bindings,is(instanceOf(QuerydslBindings.class))) @AT@ 6925 @LENGTH@ 60
---------INS SimpleName@@MethodName:assertThat:[bindings, is(instanceOf(QuerydslBindings.class))] @TO@ MethodInvocation@@assertThat(bindings,is(instanceOf(QuerydslBindings.class))) @AT@ 6925 @LENGTH@ 60
------------INS SimpleName@@bindings @TO@ SimpleName@@MethodName:assertThat:[bindings, is(instanceOf(QuerydslBindings.class))] @AT@ 6936 @LENGTH@ 8
------------INS MethodInvocation@@is(instanceOf(QuerydslBindings.class)) @TO@ SimpleName@@MethodName:assertThat:[bindings, is(instanceOf(QuerydslBindings.class))] @AT@ 6946 @LENGTH@ 38
---------------INS SimpleName@@MethodName:is:[instanceOf(QuerydslBindings.class)] @TO@ MethodInvocation@@is(instanceOf(QuerydslBindings.class)) @AT@ 6946 @LENGTH@ 38
------------------INS MethodInvocation@@instanceOf(QuerydslBindings.class) @TO@ SimpleName@@MethodName:is:[instanceOf(QuerydslBindings.class)] @AT@ 6949 @LENGTH@ 34
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------INS SimpleName@@MethodName:is:[instanceOf(QuerydslBindings.class)] @TO@ MethodInvocation@@is(instanceOf(QuerydslBindings.class)) @AT@ 6946 @LENGTH@ 38
------------------INS MethodInvocation@@instanceOf(QuerydslBindings.class) @TO@ SimpleName@@MethodName:is:[instanceOf(QuerydslBindings.class)] @AT@ 6949 @LENGTH@ 34
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22
---------------------INS SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @TO@ MethodInvocation@@instanceOf(QuerydslBindings.class) @AT@ 6949 @LENGTH@ 34
------------------------INS TypeLiteral@@QuerydslBindings.class @TO@ SimpleName@@MethodName:instanceOf:[QuerydslBindings.class] @AT@ 6960 @LENGTH@ 22


INS MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @TO@ TypeDeclaration@@[public]BaseClientDetailsTests,  @AT@ 2966 @LENGTH@ 211
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @AT@ 2966 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @AT@ 2973 @LENGTH@ 4
---INS SimpleName@@MethodName:testBaseClientDetailsNullAutoApprove @TO@ MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @AT@ 2978 @LENGTH@ 36
---INS VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER"); @TO@ MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @AT@ 3021 @LENGTH@ 107
------INS SimpleType@@BaseClientDetails @TO@ VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER"); @AT@ 3021 @LENGTH@ 17
------INS VariableDeclarationFragment@@details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER") @TO@ VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER"); @AT@ 3039 @LENGTH@ 88
---------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER") @AT@ 3039 @LENGTH@ 7
---------INS ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @TO@ VariableDeclarationFragment@@details=new BaseClientDetails("foo","","foo,bar","authorization_code","ROLE_USER") @AT@ 3049 @LENGTH@ 78
------------INS New@@new @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3049 @LENGTH@ 3
------------INS SimpleType@@BaseClientDetails @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3053 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3071 @LENGTH@ 5
------------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3078 @LENGTH@ 2
------------INS StringLiteral@@"foo,bar" @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3082 @LENGTH@ 9
------------INS StringLiteral@@"authorization_code" @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3093 @LENGTH@ 20
------------INS StringLiteral@@"ROLE_USER" @TO@ ClassInstanceCreation@@BaseClientDetails["foo", "", "foo,bar", "authorization_code", "ROLE_USER"] @AT@ 3115 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertFalse(details.isAutoApprove("read")) @TO@ MethodDeclaration@@public, void, MethodName:testBaseClientDetailsNullAutoApprove,  @AT@ 3131 @LENGTH@ 43
------INS MethodInvocation@@assertFalse(details.isAutoApprove("read")) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(details.isAutoApprove("read")) @AT@ 3131 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertFalse:[details.isAutoApprove("read")] @TO@ MethodInvocation@@assertFalse(details.isAutoApprove("read")) @AT@ 3131 @LENGTH@ 42
------------INS MethodInvocation@@details.isAutoApprove("read") @TO@ SimpleName@@MethodName:assertFalse:[details.isAutoApprove("read")] @AT@ 3143 @LENGTH@ 29
---------------INS SimpleName@@Name:details @TO@ MethodInvocation@@details.isAutoApprove("read") @AT@ 3143 @LENGTH@ 7
---------------INS SimpleName@@MethodName:isAutoApprove:["read"] @TO@ MethodInvocation@@details.isAutoApprove("read") @AT@ 3151 @LENGTH@ 21
------------------INS StringLiteral@@"read" @TO@ SimpleName@@MethodName:isAutoApprove:["read"] @AT@ 3165 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @TO@ public, voidMethodName:AuditableUser, Integer id, String firstname,  @AT@ 1643 @LENGTH@ 56
---UPD ExpressionStatement@@MethodInvocation:this.setId(id) @TO@ MethodInvocation:setId(id) @AT@ 1681 @LENGTH@ 15
------UPD MethodInvocation@@this.setId(id) @TO@ setId(id) @AT@ 1681 @LENGTH@ 14
---------DEL ThisExpression@@this @AT@ 1681 @LENGTH@ 4
---INS SingleVariableDeclaration@@String firstname @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1760 @LENGTH@ 16
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String firstname @AT@ 1760 @LENGTH@ 6
------INS SimpleName@@firstname @TO@ SingleVariableDeclaration@@String firstname @AT@ 1767 @LENGTH@ 9
---INS ExpressionStatement@@Assignment:this.firstname=firstname @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1795 @LENGTH@ 27
------INS Assignment@@this.firstname=firstname @TO@ ExpressionStatement@@Assignment:this.firstname=firstname @AT@ 1795 @LENGTH@ 26
---------INS FieldAccess@@this.firstname @TO@ Assignment@@this.firstname=firstname @AT@ 1795 @LENGTH@ 14
------------INS ThisExpression@@this @TO@ FieldAccess@@this.firstname @AT@ 1795 @LENGTH@ 4
------------INS SimpleName@@firstname @TO@ FieldAccess@@this.firstname @AT@ 1800 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@this.firstname=firstname @AT@ 1809 @LENGTH@ 1
---------INS SimpleName@@firstname @TO@ Assignment@@this.firstname=firstname @AT@ 1812 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:domainInfo.getClassInfoForInterface(name) @TO@ NullLiteral:null @AT@ 1969 @LENGTH@ 49
---DEL MethodInvocation@@domainInfo.getClassInfoForInterface(name) @AT@ 1976 @LENGTH@ 41
------DEL SimpleName@@Name:domainInfo @AT@ 1976 @LENGTH@ 10
------DEL SimpleName@@MethodName:getClassInfoForInterface:[name] @AT@ 1987 @LENGTH@ 30
---------DEL SimpleName@@name @AT@ 2012 @LENGTH@ 4
---INS NullLiteral@@null @TO@ ReturnStatement@@MethodInvocation:domainInfo.getClassInfoForInterface(name) @AT@ 2094 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:LOGGER.info(String.format("Potentially invald index structure discovered. Breaking operation for %s.",entity.getName()),e) @TO@ MethodInvocation:LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e) @AT@ 10722 @LENGTH@ 146
---UPD MethodInvocation@@LOGGER.info(String.format("Potentially invald index structure discovered. Breaking operation for %s.",entity.getName()),e) @TO@ LOGGER.info(String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()),e) @AT@ 10722 @LENGTH@ 145
------UPD SimpleName@@MethodName:info:[String.format("Potentially invald index structure discovered. Breaking operation for %s.",entity.getName()), e] @TO@ MethodName:info:[String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()), e] @AT@ 10729 @LENGTH@ 138
---------UPD MethodInvocation@@String.format("Potentially invald index structure discovered. Breaking operation for %s.",entity.getName()) @TO@ String.format("Potentially invalid index structure discovered. Breaking operation for %s.",entity.getName()) @AT@ 10744 @LENGTH@ 119
------------UPD SimpleName@@MethodName:format:["Potentially invald index structure discovered. Breaking operation for %s.", entity.getName()] @TO@ MethodName:format:["Potentially invalid index structure discovered. Breaking operation for %s.", entity.getName()] @AT@ 10751 @LENGTH@ 112
---------------UPD StringLiteral@@"Potentially invald index structure discovered. Breaking operation for %s." @TO@ "Potentially invalid index structure discovered. Breaking operation for %s." @AT@ 10758 @LENGTH@ 75


INS MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]DomainObjectReaderUnitTests,  @AT@ 3186 @LENGTH@ 663
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3186 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3193 @LENGTH@ 4
---INS SimpleName@@MethodName:mergesMapCorrectly @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3198 @LENGTH@ 18
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3226 @LENGTH@ 9
---INS VariableDeclarationStatement@@SampleUser user=new SampleUser("firstname","password"); @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3241 @LENGTH@ 58
------INS SimpleType@@SampleUser @TO@ VariableDeclarationStatement@@SampleUser user=new SampleUser("firstname","password"); @AT@ 3241 @LENGTH@ 10
------INS VariableDeclarationFragment@@user=new SampleUser("firstname","password") @TO@ VariableDeclarationStatement@@SampleUser user=new SampleUser("firstname","password"); @AT@ 3252 @LENGTH@ 46
---------INS SimpleName@@user @TO@ VariableDeclarationFragment@@user=new SampleUser("firstname","password") @AT@ 3252 @LENGTH@ 4
---------INS ClassInstanceCreation@@SampleUser["firstname", "password"] @TO@ VariableDeclarationFragment@@user=new SampleUser("firstname","password") @AT@ 3259 @LENGTH@ 39
------------INS New@@new @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3259 @LENGTH@ 3
------------INS SimpleType@@SampleUser @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3263 @LENGTH@ 10
------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3274 @LENGTH@ 11
------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3287 @LENGTH@ 10
---INS ExpressionStatement@@Assignment:user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3302 @LENGTH@ 96
------INS Assignment@@user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @TO@ ExpressionStatement@@Assignment:user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3302 @LENGTH@ 95
---------INS QualifiedName@@user.relatedUsers @TO@ Assignment@@user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3302 @LENGTH@ 17
------------INS SimpleName@@user @TO@ QualifiedName@@user.relatedUsers @AT@ 3302 @LENGTH@ 4
------------INS SimpleName@@relatedUsers @TO@ QualifiedName@@user.relatedUsers @AT@ 3307 @LENGTH@ 12
---------INS Operator@@= @TO@ Assignment@@user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3319 @LENGTH@ 1
---------INS MethodInvocation@@Collections.singletonMap("parent",new SampleUser("firstname","password")) @TO@ Assignment@@user.relatedUsers=Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3322 @LENGTH@ 75
------------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3322 @LENGTH@ 11
------------INS SimpleName@@MethodName:singletonMap:["parent", new SampleUser("firstname","password")] @TO@ MethodInvocation@@Collections.singletonMap("parent",new SampleUser("firstname","password")) @AT@ 3334 @LENGTH@ 63
---------------INS StringLiteral@@"parent" @TO@ SimpleName@@MethodName:singletonMap:["parent", new SampleUser("firstname","password")] @AT@ 3347 @LENGTH@ 8
---------------INS ClassInstanceCreation@@SampleUser["firstname", "password"] @TO@ SimpleName@@MethodName:singletonMap:["parent", new SampleUser("firstname","password")] @AT@ 3357 @LENGTH@ 39
------------------INS New@@new @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3357 @LENGTH@ 3
------------------INS SimpleType@@SampleUser @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3361 @LENGTH@ 10
------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3372 @LENGTH@ 11
------------------INS StringLiteral@@"password" @TO@ ClassInstanceCreation@@SampleUser["firstname", "password"] @AT@ 3385 @LENGTH@ 10
---INS VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }"); @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3402 @LENGTH@ 145
------INS SimpleType@@JsonNode @TO@ VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }"); @AT@ 3402 @LENGTH@ 8
------INS VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @TO@ VariableDeclarationStatement@@JsonNode node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }"); @AT@ 3411 @LENGTH@ 135
---------INS SimpleName@@node @TO@ VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @AT@ 3411 @LENGTH@ 4
---------INS MethodInvocation@@new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @TO@ VariableDeclarationFragment@@node=new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @AT@ 3418 @LENGTH@ 128
------------INS ClassInstanceCreation@@ObjectMapper[] @TO@ MethodInvocation@@new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @AT@ 3418 @LENGTH@ 18
---------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3418 @LENGTH@ 3
---------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3422 @LENGTH@ 12
------------INS SimpleName@@MethodName:readTree:["{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }"] @TO@ MethodInvocation@@new ObjectMapper().readTree("{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }") @AT@ 3442 @LENGTH@ 104
---------------INS StringLiteral@@"{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }" @TO@ SimpleName@@MethodName:readTree:["{ \"relatedUsers\" : { \"parent\" : { \"password\" : \"sneeky\", \"name\" : \"Oliver\" } } }"] @AT@ 3451 @LENGTH@ 94
---INS VariableDeclarationStatement@@SampleUser result=reader.readPut((ObjectNode)node,user,new ObjectMapper()); @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3551 @LENGTH@ 80
------INS SimpleType@@SampleUser @TO@ VariableDeclarationStatement@@SampleUser result=reader.readPut((ObjectNode)node,user,new ObjectMapper()); @AT@ 3551 @LENGTH@ 10
------INS VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,user,new ObjectMapper()) @TO@ VariableDeclarationStatement@@SampleUser result=reader.readPut((ObjectNode)node,user,new ObjectMapper()); @AT@ 3562 @LENGTH@ 68
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,user,new ObjectMapper()) @AT@ 3562 @LENGTH@ 6
---------INS MethodInvocation@@reader.readPut((ObjectNode)node,user,new ObjectMapper()) @TO@ VariableDeclarationFragment@@result=reader.readPut((ObjectNode)node,user,new ObjectMapper()) @AT@ 3571 @LENGTH@ 59
------------INS SimpleName@@Name:reader @TO@ MethodInvocation@@reader.readPut((ObjectNode)node,user,new ObjectMapper()) @AT@ 3571 @LENGTH@ 6
------------INS SimpleName@@MethodName:readPut:[(ObjectNode)node, user, new ObjectMapper()] @TO@ MethodInvocation@@reader.readPut((ObjectNode)node,user,new ObjectMapper()) @AT@ 3578 @LENGTH@ 52
---------------INS CastExpression@@(ObjectNode)node @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, user, new ObjectMapper()] @AT@ 3586 @LENGTH@ 17
------------------INS SimpleType@@ObjectNode @TO@ CastExpression@@(ObjectNode)node @AT@ 3587 @LENGTH@ 10
------------------INS SimpleName@@node @TO@ CastExpression@@(ObjectNode)node @AT@ 3599 @LENGTH@ 4
---------------INS SimpleName@@user @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, user, new ObjectMapper()] @AT@ 3605 @LENGTH@ 4
---------------INS ClassInstanceCreation@@ObjectMapper[] @TO@ SimpleName@@MethodName:readPut:[(ObjectNode)node, user, new ObjectMapper()] @AT@ 3611 @LENGTH@ 18
------------------INS New@@new @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3611 @LENGTH@ 3
------------------INS SimpleType@@ObjectMapper @TO@ ClassInstanceCreation@@ObjectMapper[] @AT@ 3615 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(result.relatedUsers.get("parent").password,is("password")) @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3707 @LENGTH@ 71
------INS MethodInvocation@@assertThat(result.relatedUsers.get("parent").password,is("password")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.relatedUsers.get("parent").password,is("password")) @AT@ 3707 @LENGTH@ 70
---------INS SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").password, is("password")] @TO@ MethodInvocation@@assertThat(result.relatedUsers.get("parent").password,is("password")) @AT@ 3707 @LENGTH@ 70
------------INS FieldAccess@@result.relatedUsers.get("parent").password @TO@ SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").password, is("password")] @AT@ 3718 @LENGTH@ 42
---------------INS MethodInvocation@@result.relatedUsers.get("parent") @TO@ FieldAccess@@result.relatedUsers.get("parent").password @AT@ 3718 @LENGTH@ 33
------------------INS QualifiedName@@Name:result.relatedUsers @TO@ MethodInvocation@@result.relatedUsers.get("parent") @AT@ 3718 @LENGTH@ 19
------------------INS SimpleName@@MethodName:get:["parent"] @TO@ MethodInvocation@@result.relatedUsers.get("parent") @AT@ 3738 @LENGTH@ 13
---------------------INS StringLiteral@@"parent" @TO@ SimpleName@@MethodName:get:["parent"] @AT@ 3742 @LENGTH@ 8
---------------INS SimpleName@@password @TO@ FieldAccess@@result.relatedUsers.get("parent").password @AT@ 3752 @LENGTH@ 8
------------INS MethodInvocation@@is("password") @TO@ SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").password, is("password")] @AT@ 3762 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:["password"] @TO@ MethodInvocation@@is("password") @AT@ 3762 @LENGTH@ 14
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:is:["password"] @AT@ 3765 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:["password"] @TO@ MethodInvocation@@is("password") @AT@ 3762 @LENGTH@ 14
------------------INS StringLiteral@@"password" @TO@ SimpleName@@MethodName:is:["password"] @AT@ 3765 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(result.relatedUsers.get("parent").name,is("Oliver")) @TO@ MethodDeclaration@@public, void, MethodName:mergesMapCorrectly, Exception,  @AT@ 3781 @LENGTH@ 65
------INS MethodInvocation@@assertThat(result.relatedUsers.get("parent").name,is("Oliver")) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.relatedUsers.get("parent").name,is("Oliver")) @AT@ 3781 @LENGTH@ 64
---------INS SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").name, is("Oliver")] @TO@ MethodInvocation@@assertThat(result.relatedUsers.get("parent").name,is("Oliver")) @AT@ 3781 @LENGTH@ 64
------------INS FieldAccess@@result.relatedUsers.get("parent").name @TO@ SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").name, is("Oliver")] @AT@ 3792 @LENGTH@ 38
---------------INS MethodInvocation@@result.relatedUsers.get("parent") @TO@ FieldAccess@@result.relatedUsers.get("parent").name @AT@ 3792 @LENGTH@ 33
------------------INS QualifiedName@@Name:result.relatedUsers @TO@ MethodInvocation@@result.relatedUsers.get("parent") @AT@ 3792 @LENGTH@ 19
------------------INS SimpleName@@MethodName:get:["parent"] @TO@ MethodInvocation@@result.relatedUsers.get("parent") @AT@ 3812 @LENGTH@ 13
---------------------INS StringLiteral@@"parent" @TO@ SimpleName@@MethodName:get:["parent"] @AT@ 3816 @LENGTH@ 8
---------------INS SimpleName@@name @TO@ FieldAccess@@result.relatedUsers.get("parent").name @AT@ 3826 @LENGTH@ 4
------------INS MethodInvocation@@is("Oliver") @TO@ SimpleName@@MethodName:assertThat:[result.relatedUsers.get("parent").name, is("Oliver")] @AT@ 3832 @LENGTH@ 12
---------------INS SimpleName@@MethodName:is:["Oliver"] @TO@ MethodInvocation@@is("Oliver") @AT@ 3832 @LENGTH@ 12
------------------INS StringLiteral@@"Oliver" @TO@ SimpleName@@MethodName:is:["Oliver"] @AT@ 3835 @LENGTH@ 8


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 8189 @LENGTH@ 133
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 8189 @LENGTH@ 132
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 8189 @LENGTH@ 109
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 8193 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 8193 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 8210 @LENGTH@ 10
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 8222 @LENGTH@ 7
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor, handler] @AT@ 8228 @LENGTH@ 42
------------DEL New@@new @AT@ 8228 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 8232 @LENGTH@ 17
------------DEL SimpleName@@descriptor @AT@ 8250 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 8262 @LENGTH@ 7


INS FieldDeclaration@@private, static, String, [payload] @TO@ TypeDeclaration@@[public]SignatureDigestMethodTest, CamelTestSupport @AT@ 3547 @LENGTH@ 30
---MOV Modifier@@private @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3547 @LENGTH@ 7
---MOV Modifier@@static @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3555 @LENGTH@ 6
---MOV SimpleType@@String @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3562 @LENGTH@ 6
---INS VariableDeclarationFragment@@payload @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 3569 @LENGTH@ 7
------MOV SimpleName@@payload @TO@ VariableDeclarationFragment@@payload @AT@ 3569 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @TO@ TypeDeclaration@@[public, abstract]CommonWebTests, AbstractWebIntegrationTests @AT@ 7222 @LENGTH@ 577
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7222 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7229 @LENGTH@ 4
---INS SimpleName@@MethodName:patchToNonExistingResourceReturnsNotFound @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7234 @LENGTH@ 41
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7285 @LENGTH@ 9
---INS VariableDeclarationStatement@@String rel=expectedRootLinkRels().iterator().next(); @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7300 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String rel=expectedRootLinkRels().iterator().next(); @AT@ 7300 @LENGTH@ 6
------INS VariableDeclarationFragment@@rel=expectedRootLinkRels().iterator().next() @TO@ VariableDeclarationStatement@@String rel=expectedRootLinkRels().iterator().next(); @AT@ 7307 @LENGTH@ 46
---------INS SimpleName@@rel @TO@ VariableDeclarationFragment@@rel=expectedRootLinkRels().iterator().next() @AT@ 7307 @LENGTH@ 3
---------INS MethodInvocation@@expectedRootLinkRels().iterator().next() @TO@ VariableDeclarationFragment@@rel=expectedRootLinkRels().iterator().next() @AT@ 7313 @LENGTH@ 40
------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@expectedRootLinkRels().iterator().next() @AT@ 7313 @LENGTH@ 33
------------INS MethodInvocation@@MethodName:expectedRootLinkRels:[] @TO@ MethodInvocation@@expectedRootLinkRels().iterator().next() @AT@ 7313 @LENGTH@ 22
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@expectedRootLinkRels().iterator().next() @AT@ 7347 @LENGTH@ 6
---INS VariableDeclarationStatement@@String uri=client.discoverUnique(rel).expand().getHref().concat("/"); @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7357 @LENGTH@ 71
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri=client.discoverUnique(rel).expand().getHref().concat("/"); @AT@ 7357 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri=client.discoverUnique(rel).expand().getHref().concat("/") @TO@ VariableDeclarationStatement@@String uri=client.discoverUnique(rel).expand().getHref().concat("/"); @AT@ 7364 @LENGTH@ 63
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7364 @LENGTH@ 3
---------INS MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @TO@ VariableDeclarationFragment@@uri=client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7370 @LENGTH@ 57
------------INS MethodInvocation@@MethodName:getHref:[] @TO@ MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7370 @LENGTH@ 45
------------INS MethodInvocation@@MethodName:expand:[] @TO@ MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7370 @LENGTH@ 35
------------INS MethodInvocation@@MethodName:discoverUnique:[rel] @TO@ MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7370 @LENGTH@ 26
---------------INS SimpleName@@rel @TO@ MethodInvocation@@MethodName:discoverUnique:[rel] @AT@ 7392 @LENGTH@ 3
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7370 @LENGTH@ 6
------------INS SimpleName@@MethodName:concat:["/"] @TO@ MethodInvocation@@client.discoverUnique(rel).expand().getHref().concat("/") @AT@ 7416 @LENGTH@ 11
---------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:concat:["/"] @AT@ 7423 @LENGTH@ 3
---INS VariableDeclarationStatement@@String id="4711"; @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7431 @LENGTH@ 19
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String id="4711"; @AT@ 7431 @LENGTH@ 6
------INS VariableDeclarationFragment@@id="4711" @TO@ VariableDeclarationStatement@@String id="4711"; @AT@ 7438 @LENGTH@ 11
---------INS SimpleName@@id @TO@ VariableDeclarationFragment@@id="4711" @AT@ 7438 @LENGTH@ 2
---------INS StringLiteral@@"4711" @TO@ VariableDeclarationFragment@@id="4711" @AT@ 7443 @LENGTH@ 6
---INS VariableDeclarationStatement@@Integer status=null; @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7453 @LENGTH@ 22
------INS SimpleType@@Integer @TO@ VariableDeclarationStatement@@Integer status=null; @AT@ 7453 @LENGTH@ 7
------INS VariableDeclarationFragment@@status=null @TO@ VariableDeclarationStatement@@Integer status=null; @AT@ 7461 @LENGTH@ 13
---------INS SimpleName@@status @TO@ VariableDeclarationFragment@@status=null @AT@ 7461 @LENGTH@ 6
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@status=null @AT@ 7470 @LENGTH@ 4
---INS DoStatement@@do {  uri=uri.concat(id);  status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus();} while (status != HttpStatus.NOT_FOUND.value()); @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7479 @LENGTH@ 208
------INS ExpressionStatement@@Assignment:uri=uri.concat(id) @TO@ DoStatement@@do {  uri=uri.concat(id);  status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus();} while (status != HttpStatus.NOT_FOUND.value()); @AT@ 7528 @LENGTH@ 21
---------INS Assignment@@uri=uri.concat(id) @TO@ ExpressionStatement@@Assignment:uri=uri.concat(id) @AT@ 7528 @LENGTH@ 20
------------INS SimpleName@@uri @TO@ Assignment@@uri=uri.concat(id) @AT@ 7528 @LENGTH@ 3
------------INS Operator@@= @TO@ Assignment@@uri=uri.concat(id) @AT@ 7531 @LENGTH@ 1
------------INS MethodInvocation@@uri.concat(id) @TO@ Assignment@@uri=uri.concat(id) @AT@ 7534 @LENGTH@ 14
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.concat(id) @AT@ 7534 @LENGTH@ 3
---------------INS SimpleName@@MethodName:concat:[id] @TO@ MethodInvocation@@uri.concat(id) @AT@ 7538 @LENGTH@ 10
------------------INS SimpleName@@id @TO@ SimpleName@@MethodName:concat:[id] @AT@ 7545 @LENGTH@ 2
------INS ExpressionStatement@@Assignment:status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @TO@ DoStatement@@do {  uri=uri.concat(id);  status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus();} while (status != HttpStatus.NOT_FOUND.value()); @AT@ 7553 @LENGTH@ 81
---------INS Assignment@@status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @TO@ ExpressionStatement@@Assignment:status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7553 @LENGTH@ 80
------------INS SimpleName@@status @TO@ Assignment@@status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7553 @LENGTH@ 6
------------INS Operator@@= @TO@ Assignment@@status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7559 @LENGTH@ 1
------------INS MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @TO@ Assignment@@status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7562 @LENGTH@ 71
---------------INS MethodInvocation@@MethodName:getResponse:[] @TO@ MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7562 @LENGTH@ 59
---------------INS MethodInvocation@@MethodName:andReturn:[] @TO@ MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7562 @LENGTH@ 45
---------------INS MethodInvocation@@MethodName:perform:[get(URI.create(uri))] @TO@ MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7562 @LENGTH@ 33
------------------INS MethodInvocation@@get(URI.create(uri)) @TO@ MethodInvocation@@MethodName:perform:[get(URI.create(uri))] @AT@ 7574 @LENGTH@ 20
---------------------INS SimpleName@@MethodName:get:[URI.create(uri)] @TO@ MethodInvocation@@get(URI.create(uri)) @AT@ 7574 @LENGTH@ 20
------------------------INS MethodInvocation@@URI.create(uri) @TO@ SimpleName@@MethodName:get:[URI.create(uri)] @AT@ 7578 @LENGTH@ 15
---------------------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(uri) @AT@ 7578 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:create:[uri] @TO@ MethodInvocation@@URI.create(uri) @AT@ 7582 @LENGTH@ 11
------------------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:create:[uri] @AT@ 7589 @LENGTH@ 3
---------------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7562 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getStatus:[] @TO@ MethodInvocation@@mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus() @AT@ 7622 @LENGTH@ 11
------INS InfixExpression@@status != HttpStatus.NOT_FOUND.value() @TO@ DoStatement@@do {  uri=uri.concat(id);  status=mvc.perform(get(URI.create(uri))).andReturn().getResponse().getStatus();} while (status != HttpStatus.NOT_FOUND.value()); @AT@ 7647 @LENGTH@ 38
---------INS SimpleName@@status @TO@ InfixExpression@@status != HttpStatus.NOT_FOUND.value() @AT@ 7647 @LENGTH@ 6
---------INS Operator@@!= @TO@ InfixExpression@@status != HttpStatus.NOT_FOUND.value() @AT@ 7653 @LENGTH@ 2
---------INS MethodInvocation@@HttpStatus.NOT_FOUND.value() @TO@ InfixExpression@@status != HttpStatus.NOT_FOUND.value() @AT@ 7657 @LENGTH@ 28
------------INS QualifiedName@@Name:HttpStatus.NOT_FOUND @TO@ MethodInvocation@@HttpStatus.NOT_FOUND.value() @AT@ 7657 @LENGTH@ 20
------------INS SimpleName@@MethodName:value:[] @TO@ MethodInvocation@@HttpStatus.NOT_FOUND.value() @AT@ 7678 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @TO@ MethodDeclaration@@public, void, MethodName:patchToNonExistingResourceReturnsNotFound, Exception,  @AT@ 7727 @LENGTH@ 69
------INS MethodInvocation@@mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @TO@ ExpressionStatement@@MethodInvocation:mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @AT@ 7727 @LENGTH@ 68
---------INS MethodInvocation@@MethodName:perform:[patch(URI.create(uri))] @TO@ MethodInvocation@@mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @AT@ 7727 @LENGTH@ 35
------------INS MethodInvocation@@patch(URI.create(uri)) @TO@ MethodInvocation@@MethodName:perform:[patch(URI.create(uri))] @AT@ 7739 @LENGTH@ 22
---------------INS SimpleName@@MethodName:patch:[URI.create(uri)] @TO@ MethodInvocation@@patch(URI.create(uri)) @AT@ 7739 @LENGTH@ 22
------------------INS MethodInvocation@@URI.create(uri) @TO@ SimpleName@@MethodName:patch:[URI.create(uri)] @AT@ 7745 @LENGTH@ 15
---------------------INS SimpleName@@Name:URI @TO@ MethodInvocation@@URI.create(uri) @AT@ 7745 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:create:[uri] @TO@ MethodInvocation@@URI.create(uri) @AT@ 7749 @LENGTH@ 11
------------------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:create:[uri] @AT@ 7756 @LENGTH@ 3
---------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @AT@ 7727 @LENGTH@ 3
---------INS SimpleName@@MethodName:andExpect:[status().isNotFound()] @TO@ MethodInvocation@@mvc.perform(patch(URI.create(uri))).andExpect(status().isNotFound()) @AT@ 7763 @LENGTH@ 32
------------INS MethodInvocation@@status().isNotFound() @TO@ SimpleName@@MethodName:andExpect:[status().isNotFound()] @AT@ 7773 @LENGTH@ 21
---------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isNotFound() @AT@ 7773 @LENGTH@ 8
---------------INS SimpleName@@MethodName:isNotFound:[] @TO@ MethodInvocation@@status().isNotFound() @AT@ 7782 @LENGTH@ 12


INS VariableDeclarationStatement@@List<Transform> transforms=Collections.emptyList(); @TO@ MethodDeclaration@@public, Output, MethodName:get, Input input, Exception,  @AT@ 23507 @LENGTH@ 53
---INS ParameterizedType@@List<Transform> @TO@ VariableDeclarationStatement@@List<Transform> transforms=Collections.emptyList(); @AT@ 23507 @LENGTH@ 15
------INS SimpleType@@List @TO@ ParameterizedType@@List<Transform> @AT@ 23507 @LENGTH@ 4
------INS SimpleType@@Transform @TO@ ParameterizedType@@List<Transform> @AT@ 23512 @LENGTH@ 9
---INS VariableDeclarationFragment@@transforms=Collections.emptyList() @TO@ VariableDeclarationStatement@@List<Transform> transforms=Collections.emptyList(); @AT@ 23523 @LENGTH@ 36
------INS SimpleName@@transforms @TO@ VariableDeclarationFragment@@transforms=Collections.emptyList() @AT@ 23523 @LENGTH@ 10
------INS MethodInvocation@@Collections.emptyList() @TO@ VariableDeclarationFragment@@transforms=Collections.emptyList() @AT@ 23536 @LENGTH@ 23
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.emptyList() @AT@ 23536 @LENGTH@ 11
---------INS SimpleName@@MethodName:emptyList:[] @TO@ MethodInvocation@@Collections.emptyList() @AT@ 23548 @LENGTH@ 11


UPD MethodDeclaration@@public, voidMethodName:ListenerContainerConsumerFailedEvent, SimpleMessageListenerContainer source, String reason, Throwable throwable, boolean fatal,  @TO@ public, voidMethodName:ListenerContainerConsumerFailedEvent, Object source, String reason, Throwable throwable, boolean fatal,  @AT@ 1304 @LENGTH@ 234
---UPD SingleVariableDeclaration@@SimpleMessageListenerContainer source @TO@ Object source @AT@ 1348 @LENGTH@ 37
------UPD SimpleType@@SimpleMessageListenerContainer @TO@ Object @AT@ 1348 @LENGTH@ 30


INS IfStatement@@if (localName == null) return null; @TO@ MethodDeclaration@@public, static, BindingType, MethodName:forName, String localName,  @AT@ 1880 @LENGTH@ 35
---INS InfixExpression@@localName == null @TO@ IfStatement@@if (localName == null) return null; @AT@ 1884 @LENGTH@ 17
------INS SimpleName@@localName @TO@ InfixExpression@@localName == null @AT@ 1884 @LENGTH@ 9
------INS Operator@@== @TO@ InfixExpression@@localName == null @AT@ 1893 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@localName == null @AT@ 1897 @LENGTH@ 4
---INS Block@@ThenBody:return null; @TO@ IfStatement@@if (localName == null) return null; @AT@ 1903 @LENGTH@ 12
------INS ReturnStatement@@NullLiteral:null @TO@ Block@@ThenBody:return null; @AT@ 1903 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 1910 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertEquals("UTF8",out.getHeader(Exchange.CONTENT_ENCODING)) @TO@ MethodInvocation:assertEquals("iso8859-1",out.getHeader(Exchange.CONTENT_ENCODING)) @AT@ 6733 @LENGTH@ 63
---UPD MethodInvocation@@assertEquals("UTF8",out.getHeader(Exchange.CONTENT_ENCODING)) @TO@ assertEquals("iso8859-1",out.getHeader(Exchange.CONTENT_ENCODING)) @AT@ 6733 @LENGTH@ 62
------UPD SimpleName@@MethodName:assertEquals:["UTF8", out.getHeader(Exchange.CONTENT_ENCODING)] @TO@ MethodName:assertEquals:["iso8859-1", out.getHeader(Exchange.CONTENT_ENCODING)] @AT@ 6733 @LENGTH@ 62
---------UPD StringLiteral@@"UTF8" @TO@ "iso8859-1" @AT@ 6746 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:dataformate.setPackages(new String[]{"Dummy"}) @TO@ MethodInvocation:dataformate.setClassType(String.class) @AT@ 1448 @LENGTH@ 47
---UPD MethodInvocation@@dataformate.setPackages(new String[]{"Dummy"}) @TO@ dataformate.setClassType(String.class) @AT@ 1448 @LENGTH@ 46
------UPD SimpleName@@MethodName:setPackages:[new String[]{"Dummy"}] @TO@ MethodName:setClassType:[String.class] @AT@ 1460 @LENGTH@ 34
---------DEL ArrayCreation@@new String[]{"Dummy"} @AT@ 1472 @LENGTH@ 21
------------DEL ArrayType@@String[] @AT@ 1476 @LENGTH@ 8
---------------DEL SimpleType@@String @AT@ 1476 @LENGTH@ 6
------------DEL ArrayInitializer@@{"Dummy"} @AT@ 1484 @LENGTH@ 9
---------------DEL StringLiteral@@"Dummy" @AT@ 1485 @LENGTH@ 7
---------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:setPackages:[new String[]{"Dummy"}] @AT@ 1473 @LENGTH@ 12


UPD Block@@ThenBody:{  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new RuntimeException(e);    }  }  loadXmlRoutes(applicationContext,camelContext);  if (camelContextConfigurations != null) {    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }  }  try {    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @TO@ ThenBody:{  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @AT@ 2466 @LENGTH@ 1138
---UPD EnhancedForStatement@@for (RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {  try {    LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);    camelContext.addRoutes(routesBuilder);  } catch (  Exception e) {    throw new RuntimeException(e);  }} @TO@ for (RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {  try {    LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);    camelContext.addRoutes(routesBuilder);  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @AT@ 2568 @LENGTH@ 406
------UPD TryStatement@@try {  LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);  camelContext.addRoutes(routesBuilder);} catch (Exception e) {  throw new RuntimeException(e);} @TO@ try {  LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);  camelContext.addRoutes(routesBuilder);} catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @AT@ 2686 @LENGTH@ 274
---------UPD CatchClause@@catch (Exception e) {  throw new RuntimeException(e);} @TO@ catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @AT@ 2870 @LENGTH@ 90
------------UPD ThrowStatement@@ClassInstanceCreation:new RuntimeException(e) @TO@ ClassInstanceCreation:new CamelSpringBootInitializationException(e) @AT@ 2912 @LENGTH@ 30
---------------UPD ClassInstanceCreation@@RuntimeException[e] @TO@ CamelSpringBootInitializationException[e] @AT@ 2918 @LENGTH@ 23
------------------UPD SimpleType@@RuntimeException @TO@ CamelSpringBootInitializationException @AT@ 2922 @LENGTH@ 16
---DEL IfStatement@@if (camelContextConfigurations != null) {  for (  CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {    LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);    camelContextConfiguration.beforeApplicationStart(camelContext);  }} @AT@ 3050 @LENGTH@ 369
------DEL InfixExpression@@camelContextConfigurations != null @AT@ 3054 @LENGTH@ 34
---------DEL SimpleName@@camelContextConfigurations @AT@ 3054 @LENGTH@ 26
---------DEL Operator@@!= @AT@ 3080 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 3084 @LENGTH@ 4
------DEL Block@@ThenBody:{  for (  CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {    LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);    camelContextConfiguration.beforeApplicationStart(camelContext);  }} @AT@ 3090 @LENGTH@ 329
---UPD TryStatement@@try {  camelContext.start();} catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @TO@ try {  loadXmlRoutes(applicationContext,camelContext);  for (  CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {    LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);    camelContextConfiguration.beforeApplicationStart(camelContext);  }  camelContext.start();} catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @AT@ 3432 @LENGTH@ 162
------MOV ExpressionStatement@@MethodInvocation:loadXmlRoutes(applicationContext,camelContext) @TO@ TryStatement@@try {  camelContext.start();} catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @AT@ 2988 @LENGTH@ 48
------MOV EnhancedForStatement@@for (CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {  LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);  camelContextConfiguration.beforeApplicationStart(camelContext);} @TO@ TryStatement@@try {  camelContext.start();} catch (Exception e) {  throw new CamelSpringBootInitializationException(e);} @AT@ 3108 @LENGTH@ 297


UPD ExpressionStatement@@MethodInvocation:ConnectorLogger.SUBSYSTEM_DATASOURCES_LOGGER.error("Error during recovery shutdown",e) @TO@ MethodInvocation:ConnectorLogger.SUBSYSTEM_DATASOURCES_LOGGER.errorDuringRecoveryShutdown(e) @AT@ 2753 @LENGTH@ 88
---UPD MethodInvocation@@ConnectorLogger.SUBSYSTEM_DATASOURCES_LOGGER.error("Error during recovery shutdown",e) @TO@ ConnectorLogger.SUBSYSTEM_DATASOURCES_LOGGER.errorDuringRecoveryShutdown(e) @AT@ 2753 @LENGTH@ 87
------UPD SimpleName@@MethodName:error:["Error during recovery shutdown", e] @TO@ MethodName:errorDuringRecoveryShutdown:[e] @AT@ 2798 @LENGTH@ 42
---------DEL StringLiteral@@"Error during recovery shutdown" @AT@ 2804 @LENGTH@ 32


INS MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest, TestCase @AT@ 5907 @LENGTH@ 309
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 5907 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 5914 @LENGTH@ 4
---INS SimpleName@@MethodName:testAsEndpointUriTimer @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 5919 @LENGTH@ 22
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 5951 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 5971 @LENGTH@ 56
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5971 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5971 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5975 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5983 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5991 @LENGTH@ 35
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5991 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5997 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 5997 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 6001 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 6001 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 6009 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 6017 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("timerName","foo") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 6036 @LENGTH@ 28
------INS MethodInvocation@@map.put("timerName","foo") @TO@ ExpressionStatement@@MethodInvocation:map.put("timerName","foo") @AT@ 6036 @LENGTH@ 27
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("timerName","foo") @AT@ 6036 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["timerName", "foo"] @TO@ MethodInvocation@@map.put("timerName","foo") @AT@ 6040 @LENGTH@ 23
------------INS StringLiteral@@"timerName" @TO@ SimpleName@@MethodName:put:["timerName", "foo"] @AT@ 6044 @LENGTH@ 11
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:put:["timerName", "foo"] @AT@ 6057 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:map.put("period","5000") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 6073 @LENGTH@ 26
------INS MethodInvocation@@map.put("period","5000") @TO@ ExpressionStatement@@MethodInvocation:map.put("period","5000") @AT@ 6073 @LENGTH@ 25
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("period","5000") @AT@ 6073 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["period", "5000"] @TO@ MethodInvocation@@map.put("period","5000") @AT@ 6077 @LENGTH@ 21
------------INS StringLiteral@@"period" @TO@ SimpleName@@MethodName:put:["period", "5000"] @AT@ 6081 @LENGTH@ 8
------------INS StringLiteral@@"5000" @TO@ SimpleName@@MethodName:put:["period", "5000"] @AT@ 6091 @LENGTH@ 6
---INS VariableDeclarationStatement@@String uri=catalog.asEndpointUri("timer",map); @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 6109 @LENGTH@ 49
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri=catalog.asEndpointUri("timer",map); @AT@ 6109 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri=catalog.asEndpointUri("timer",map) @TO@ VariableDeclarationStatement@@String uri=catalog.asEndpointUri("timer",map); @AT@ 6116 @LENGTH@ 41
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=catalog.asEndpointUri("timer",map) @AT@ 6116 @LENGTH@ 3
---------INS MethodInvocation@@catalog.asEndpointUri("timer",map) @TO@ VariableDeclarationFragment@@uri=catalog.asEndpointUri("timer",map) @AT@ 6122 @LENGTH@ 35
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("timer",map) @AT@ 6122 @LENGTH@ 7
------------INS SimpleName@@MethodName:asEndpointUri:["timer", map] @TO@ MethodInvocation@@catalog.asEndpointUri("timer",map) @AT@ 6130 @LENGTH@ 27
---------------INS StringLiteral@@"timer" @TO@ SimpleName@@MethodName:asEndpointUri:["timer", map] @AT@ 6144 @LENGTH@ 7
---------------INS SimpleName@@map @TO@ SimpleName@@MethodName:asEndpointUri:["timer", map] @AT@ 6153 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("timer:foo?period=5000",uri) @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriTimer, Exception,  @AT@ 6167 @LENGTH@ 43
------INS MethodInvocation@@assertEquals("timer:foo?period=5000",uri) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("timer:foo?period=5000",uri) @AT@ 6167 @LENGTH@ 42
---------INS SimpleName@@MethodName:assertEquals:["timer:foo?period=5000", uri] @TO@ MethodInvocation@@assertEquals("timer:foo?period=5000",uri) @AT@ 6167 @LENGTH@ 42
------------INS StringLiteral@@"timer:foo?period=5000" @TO@ SimpleName@@MethodName:assertEquals:["timer:foo?period=5000", uri] @AT@ 6180 @LENGTH@ 23
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:assertEquals:["timer:foo?period=5000", uri] @AT@ 6205 @LENGTH@ 3


UPD VariableDeclarationStatement@@String line=null; @TO@ String line; @AT@ 1313 @LENGTH@ 19
---UPD VariableDeclarationFragment@@line=null @TO@ line @AT@ 1320 @LENGTH@ 11
------DEL NullLiteral@@null @AT@ 1327 @LENGTH@ 4


UPD IfStatement@@if (line.startsWith("gav:")) {  line=line.substring(4).trim();  File artifact=MavenArtifactUtil.resolveJarArtifact(line);  builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(artifact.getName(),new JarFile(artifact))));} else if (line.startsWith("path:")) {  line=line.substring(5).trim();  int slashLoc=line.lastIndexOf('/');  String name=line;  if (slashLoc > 0) {    name=line.substring(slashLoc + 1);  }  String ext=".jar";  int dotLoc=name.lastIndexOf('.');  if (dotLoc > 0) {    ext=name.substring(dotLoc);    name=name.substring(0,dotLoc);  }  Path tmp=Files.createTempFile(name,ext);  try (InputStream artifactIn=getClass().getClassLoader().getResourceAsStream(line)){    Files.copy(artifactIn,tmp,StandardCopyOption.REPLACE_EXISTING);  }   builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(tmp.getFileName().toString(),new JarFile(tmp.toFile()))));} @TO@ if (line.startsWith("gav:")) {  line=line.substring(4).trim();  File artifact=MavenArtifactUtil.resolveJarArtifact(line);  if (artifact == null) {    throw new IOException("Unable to locate artifact: " + line);  }  builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(artifact.getName(),new JarFile(artifact))));} else if (line.startsWith("path:")) {  line=line.substring(5).trim();  int slashLoc=line.lastIndexOf('/');  String name=line;  if (slashLoc > 0) {    name=line.substring(slashLoc + 1);  }  String ext=".jar";  int dotLoc=name.lastIndexOf('.');  if (dotLoc > 0) {    ext=name.substring(dotLoc);    name=name.substring(0,dotLoc);  }  Path tmp=Files.createTempFile(name,ext);  try (InputStream artifactIn=getClass().getClassLoader().getResourceAsStream(line)){    Files.copy(artifactIn,tmp,StandardCopyOption.REPLACE_EXISTING);  }   builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(tmp.getFileName().toString(),new JarFile(tmp.toFile()))));} @AT@ 1981 @LENGTH@ 1908
---UPD Block@@ThenBody:{  line=line.substring(4).trim();  File artifact=MavenArtifactUtil.resolveJarArtifact(line);  builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(artifact.getName(),new JarFile(artifact))));} @TO@ ThenBody:{  line=line.substring(4).trim();  File artifact=MavenArtifactUtil.resolveJarArtifact(line);  if (artifact == null) {    throw new IOException("Unable to locate artifact: " + line);  }  builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(artifact.getName(),new JarFile(artifact))));} @AT@ 2010 @LENGTH@ 508
------INS IfStatement@@if (artifact == null) {  throw new IOException("Unable to locate artifact: " + line);} @TO@ Block@@ThenBody:{  line=line.substring(4).trim();  File artifact=MavenArtifactUtil.resolveJarArtifact(line);  builder.addResourceRoot(ResourceLoaderSpec.createResourceLoaderSpec(ResourceLoaders.createJarResourceLoader(artifact.getName(),new JarFile(artifact))));} @AT@ 2191 @LENGTH@ 150
---------INS InfixExpression@@artifact == null @TO@ IfStatement@@if (artifact == null) {  throw new IOException("Unable to locate artifact: " + line);} @AT@ 2196 @LENGTH@ 16
------------INS SimpleName@@artifact @TO@ InfixExpression@@artifact == null @AT@ 2196 @LENGTH@ 8
------------INS Operator@@== @TO@ InfixExpression@@artifact == null @AT@ 2204 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@artifact == null @AT@ 2208 @LENGTH@ 4
---------INS Block@@ThenBody:{  throw new IOException("Unable to locate artifact: " + line);} @TO@ IfStatement@@if (artifact == null) {  throw new IOException("Unable to locate artifact: " + line);} @AT@ 2215 @LENGTH@ 126
------------INS ThrowStatement@@ClassInstanceCreation:new IOException("Unable to locate artifact: " + line) @TO@ Block@@ThenBody:{  throw new IOException("Unable to locate artifact: " + line);} @AT@ 2249 @LENGTH@ 62
---------------INS ClassInstanceCreation@@IOException["Unable to locate artifact: " + line] @TO@ ThrowStatement@@ClassInstanceCreation:new IOException("Unable to locate artifact: " + line) @AT@ 2255 @LENGTH@ 55
------------------INS New@@new @TO@ ClassInstanceCreation@@IOException["Unable to locate artifact: " + line] @AT@ 2255 @LENGTH@ 3
------------------INS SimpleType@@IOException @TO@ ClassInstanceCreation@@IOException["Unable to locate artifact: " + line] @AT@ 2259 @LENGTH@ 11
------------------INS InfixExpression@@"Unable to locate artifact: " + line @TO@ ClassInstanceCreation@@IOException["Unable to locate artifact: " + line] @AT@ 2272 @LENGTH@ 36
---------------------INS StringLiteral@@"Unable to locate artifact: " @TO@ InfixExpression@@"Unable to locate artifact: " + line @AT@ 2272 @LENGTH@ 29
---------------------INS Operator@@+ @TO@ InfixExpression@@"Unable to locate artifact: " + line @AT@ 2301 @LENGTH@ 1
---------------------INS SimpleName@@line @TO@ InfixExpression@@"Unable to locate artifact: " + line @AT@ 2304 @LENGTH@ 4


INS MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @TO@ TypeDeclaration@@[public]ErrorHandlerBuilderRef, ErrorHandlerBuilderSupport @AT@ 3502 @LENGTH@ 173
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3502 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3509 @LENGTH@ 6
---INS SimpleType@@ErrorHandlerFactory @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3516 @LENGTH@ 19
---INS SimpleName@@MethodName:lookupErrorHandlerBuilder @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3536 @LENGTH@ 25
---INS SingleVariableDeclaration@@RouteContext routeContext @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3562 @LENGTH@ 25
------INS SimpleType@@RouteContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 3562 @LENGTH@ 12
------INS SimpleName@@routeContext @TO@ SingleVariableDeclaration@@RouteContext routeContext @AT@ 3575 @LENGTH@ 12
---INS SingleVariableDeclaration@@String ref @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3589 @LENGTH@ 10
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String ref @AT@ 3589 @LENGTH@ 6
------INS SimpleName@@ref @TO@ SingleVariableDeclaration@@String ref @AT@ 3596 @LENGTH@ 3
---INS ReturnStatement@@MethodInvocation:lookupErrorHandlerBuilder(routeContext,ref,true) @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 3611 @LENGTH@ 58
------INS MethodInvocation@@lookupErrorHandlerBuilder(routeContext,ref,true) @TO@ ReturnStatement@@MethodInvocation:lookupErrorHandlerBuilder(routeContext,ref,true) @AT@ 3618 @LENGTH@ 50
---------INS SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, ref, true] @TO@ MethodInvocation@@lookupErrorHandlerBuilder(routeContext,ref,true) @AT@ 3618 @LENGTH@ 50
------------INS SimpleName@@routeContext @TO@ SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, ref, true] @AT@ 3644 @LENGTH@ 12
------------INS SimpleName@@ref @TO@ SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, ref, true] @AT@ 3658 @LENGTH@ 3
------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, ref, true] @AT@ 3663 @LENGTH@ 4


UPD FieldDeclaration@@public, static, final, AttributeDefinition, [STATUS=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,false).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,false)).build()] @TO@ public, static, final, AttributeDefinition, [STATUS=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,true).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,true)).build()] @AT@ 6298 @LENGTH@ 315
---UPD VariableDeclarationFragment@@STATUS=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,false).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,false)).build() @TO@ STATUS=SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,true).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,true)).build() @AT@ 6338 @LENGTH@ 274
------UPD MethodInvocation@@SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,false).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,false)).build() @TO@ SimpleAttributeDefinitionBuilder.create(ModelDescriptionConstants.STATUS,ModelType.STRING,true).setValidator(new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,true)).build() @AT@ 6347 @LENGTH@ 265
---------UPD MethodInvocation@@MethodName:setValidator:[new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,false)] @TO@ MethodName:setValidator:[new EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>(AbstractDeploymentUnitService.DeploymentStatus.class,true)] @AT@ 6347 @LENGTH@ 248
------------UPD ClassInstanceCreation@@EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>[AbstractDeploymentUnitService.DeploymentStatus.class, false] @TO@ EnumValidator<AbstractDeploymentUnitService.DeploymentStatus>[AbstractDeploymentUnitService.DeploymentStatus.class, true] @AT@ 6468 @LENGTH@ 126
---------------UPD BooleanLiteral@@false @TO@ true @AT@ 6588 @LENGTH@ 5
---------UPD MethodInvocation@@MethodName:create:[ModelDescriptionConstants.STATUS, ModelType.STRING, false] @TO@ MethodName:create:[ModelDescriptionConstants.STATUS, ModelType.STRING, true] @AT@ 6347 @LENGTH@ 98
------------UPD BooleanLiteral@@false @TO@ true @AT@ 6439 @LENGTH@ 5


DEL ExpressionStatement@@MethodInvocation:assertTrue(entities.containsAll(Arrays.asList(daniela,michal,adam))) @AT@ 22994 @LENGTH@ 71
---DEL MethodInvocation@@assertTrue(entities.containsAll(Arrays.asList(daniela,michal,adam))) @AT@ 22994 @LENGTH@ 70
------DEL SimpleName@@MethodName:assertTrue:[entities.containsAll(Arrays.asList(daniela,michal,adam))] @AT@ 22994 @LENGTH@ 70
---------DEL MethodInvocation@@entities.containsAll(Arrays.asList(daniela,michal,adam)) @AT@ 23005 @LENGTH@ 58
------------DEL SimpleName@@Name:entities @AT@ 23005 @LENGTH@ 8
------------DEL SimpleName@@MethodName:containsAll:[Arrays.asList(daniela,michal,adam)] @AT@ 23014 @LENGTH@ 49
---------------DEL MethodInvocation@@Arrays.asList(daniela,michal,adam) @AT@ 23026 @LENGTH@ 36
------------------DEL SimpleName@@Name:Arrays @AT@ 23026 @LENGTH@ 6
------------------DEL SimpleName@@MethodName:asList:[daniela, michal, adam] @AT@ 23033 @LENGTH@ 29
---------------------DEL SimpleName@@daniela @AT@ 23040 @LENGTH@ 7
---------------------DEL SimpleName@@michal @AT@ 23049 @LENGTH@ 6
---------------------DEL SimpleName@@adam @AT@ 23057 @LENGTH@ 4


UPD VariableDeclarationStatement@@final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar"); @TO@ final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"MDBTestCase.jar"); @AT@ 4299 @LENGTH@ 75
---UPD VariableDeclarationFragment@@ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ejbJar=ShrinkWrap.create(JavaArchive.class,"MDBTestCase.jar") @AT@ 4317 @LENGTH@ 56
------UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ShrinkWrap.create(JavaArchive.class,"MDBTestCase.jar") @AT@ 4326 @LENGTH@ 47
---------UPD SimpleName@@MethodName:create:[JavaArchive.class, "mdb.jar"] @TO@ MethodName:create:[JavaArchive.class, "MDBTestCase.jar"] @AT@ 4337 @LENGTH@ 36
------------UPD StringLiteral@@"mdb.jar" @TO@ "MDBTestCase.jar" @AT@ 4363 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(3,entities.size()) @TO@ MethodInvocation:assertTrue("Shouldn't be able to load by non-annotated, abstract classes",entities.isEmpty()) @AT@ 22952 @LENGTH@ 33
---UPD MethodInvocation@@assertEquals(3,entities.size()) @TO@ assertTrue("Shouldn't be able to load by non-annotated, abstract classes",entities.isEmpty()) @AT@ 22952 @LENGTH@ 32
------UPD SimpleName@@MethodName:assertEquals:[3, entities.size()] @TO@ MethodName:assertTrue:["Shouldn't be able to load by non-annotated, abstract classes", entities.isEmpty()] @AT@ 22952 @LENGTH@ 32
---------INS StringLiteral@@"Shouldn't be able to load by non-annotated, abstract classes" @TO@ SimpleName@@MethodName:assertEquals:[3, entities.size()] @AT@ 22963 @LENGTH@ 62
---------DEL NumberLiteral@@3 @AT@ 22965 @LENGTH@ 1
---------UPD MethodInvocation@@entities.size() @TO@ entities.isEmpty() @AT@ 22968 @LENGTH@ 15
------------UPD SimpleName@@MethodName:size:[] @TO@ MethodName:isEmpty:[] @AT@ 22977 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 1893 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 1893 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 1904 @LENGTH@ 9


INS FieldDeclaration@@private, static, String, [payload] @TO@ TypeDeclaration@@[public]ECDSASignatureTest, CamelTestSupport @AT@ 1818 @LENGTH@ 30
---MOV Modifier@@private @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 1818 @LENGTH@ 7
---MOV Modifier@@static @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 1826 @LENGTH@ 6
---MOV SimpleType@@String @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 1833 @LENGTH@ 6
---INS VariableDeclarationFragment@@payload @TO@ FieldDeclaration@@private, static, String, [payload] @AT@ 1840 @LENGTH@ 7
------MOV SimpleName@@payload @TO@ VariableDeclarationFragment@@payload @AT@ 1840 @LENGTH@ 7


INS MethodDeclaration@@Page<Person>, MethodName:findByLastname, @Param("lastname") String lastname, @Param("pageable") Pageable pageable,  @TO@ TypeDeclaration@@PersonRepository, [Repository<Person,Long>] @AT@ 5684 @LENGTH@ 89
---INS ParameterizedType@@Page<Person> @TO@ MethodDeclaration@@Page<Person>, MethodName:findByLastname, @Param("lastname") String lastname, @Param("pageable") Pageable pageable,  @AT@ 5671 @LENGTH@ 12
------INS SimpleType@@Page @TO@ ParameterizedType@@Page<Person> @AT@ 5671 @LENGTH@ 4
------INS SimpleType@@Person @TO@ ParameterizedType@@Page<Person> @AT@ 5676 @LENGTH@ 6
---INS SimpleName@@MethodName:findByLastname @TO@ MethodDeclaration@@Page<Person>, MethodName:findByLastname, @Param("lastname") String lastname, @Param("pageable") Pageable pageable,  @AT@ 5684 @LENGTH@ 14
---INS SingleVariableDeclaration@@@Param("lastname") String lastname @TO@ MethodDeclaration@@Page<Person>, MethodName:findByLastname, @Param("lastname") String lastname, @Param("pageable") Pageable pageable,  @AT@ 5699 @LENGTH@ 34
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@@Param("lastname") String lastname @AT@ 5718 @LENGTH@ 6
------INS SimpleName@@lastname @TO@ SingleVariableDeclaration@@@Param("lastname") String lastname @AT@ 5725 @LENGTH@ 8
---INS SingleVariableDeclaration@@@Param("pageable") Pageable pageable @TO@ MethodDeclaration@@Page<Person>, MethodName:findByLastname, @Param("lastname") String lastname, @Param("pageable") Pageable pageable,  @AT@ 5735 @LENGTH@ 36
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@@Param("pageable") Pageable pageable @AT@ 5754 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@@Param("pageable") Pageable pageable @AT@ 5763 @LENGTH@ 8


UPD VariableDeclarationStatement@@ChannelFuture channelFuture=bootstrap.bind(hostAddress); @TO@ ChannelFuture channelFuture=bootstrap.bind(configuration.getPort()); @AT@ 6694 @LENGTH@ 58
---UPD VariableDeclarationFragment@@channelFuture=bootstrap.bind(hostAddress) @TO@ channelFuture=bootstrap.bind(configuration.getPort()) @AT@ 6708 @LENGTH@ 43
------UPD MethodInvocation@@bootstrap.bind(hostAddress) @TO@ bootstrap.bind(configuration.getPort()) @AT@ 6724 @LENGTH@ 27
---------UPD SimpleName@@MethodName:bind:[hostAddress] @TO@ MethodName:bind:[configuration.getPort()] @AT@ 6734 @LENGTH@ 17
------------INS MethodInvocation@@configuration.getPort() @TO@ SimpleName@@MethodName:bind:[hostAddress] @AT@ 6739 @LENGTH@ 23
---------------INS SimpleName@@Name:configuration @TO@ MethodInvocation@@configuration.getPort() @AT@ 6739 @LENGTH@ 13
---------------INS SimpleName@@MethodName:getPort:[] @TO@ MethodInvocation@@configuration.getPort() @AT@ 6753 @LENGTH@ 9
------------DEL SimpleName@@hostAddress @AT@ 6739 @LENGTH@ 11


UPD VariableDeclarationStatement@@String out=template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",null,String.class); @TO@ String out=template.requestBody("undertow:http://localhost:{{port}}/users/lives",null,String.class); @AT@ 1555 @LENGTH@ 113
---UPD VariableDeclarationFragment@@out=template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",null,String.class) @TO@ out=template.requestBody("undertow:http://localhost:{{port}}/users/lives",null,String.class) @AT@ 1562 @LENGTH@ 105
------UPD MethodInvocation@@template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",null,String.class) @TO@ template.requestBody("undertow:http://localhost:{{port}}/users/lives",null,String.class) @AT@ 1568 @LENGTH@ 99
---------UPD SimpleName@@MethodName:requestBody:["undertow:http://localhost:" + getPort() + "/users/lives", null, String.class] @TO@ MethodName:requestBody:["undertow:http://localhost:{{port}}/users/lives", null, String.class] @AT@ 1577 @LENGTH@ 90
------------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/lives" @TO@ SimpleName@@MethodName:requestBody:["undertow:http://localhost:" + getPort() + "/users/lives", null, String.class] @AT@ 1580 @LENGTH@ 48
------------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/lives" @AT@ 1589 @LENGTH@ 57
---------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1589 @LENGTH@ 28
---------------DEL Operator@@+ @AT@ 1617 @LENGTH@ 1
---------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1620 @LENGTH@ 9
---------------DEL StringLiteral@@"/users/lives" @AT@ 1632 @LENGTH@ 14


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1480 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1480 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1489 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1498 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1498 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1526 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1529 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1541 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1498 @LENGTH@ 46


UPD SuperConstructorInvocation@@super(name,name,null,ModelType.OBJECT,allowNull,false,null,null,new MapValidator(elementValidator,allowNull,0,Integer.MAX_VALUE),false,null,null,null,false,null,null,null,null);
 @TO@ super(name,name,null,ModelType.OBJECT,allowNull,false,null,null,new MapValidator(elementValidator,allowNull,0,Integer.MAX_VALUE),false,null,null,null,false,null,null,null,null,null);
 @AT@ 2467 @LENGTH@ 213
---INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(name,name,null,ModelType.OBJECT,allowNull,false,null,null,new MapValidator(elementValidator,allowNull,0,Integer.MAX_VALUE),false,null,null,null,false,null,null,null,null);
 @AT@ 2682 @LENGTH@ 4


UPD MethodDeclaration@@public, static, SynchronizedMultiSet<E>, E, MethodName:synchronizedBag, final MultiSet<E> multiset,  @TO@ public, static, SynchronizedMultiSet<E>, E, MethodName:synchronizedMultiSet, final MultiSet<E> multiset,  @AT@ 1787 @LENGTH@ 147
---UPD SimpleName@@MethodName:synchronizedBag @TO@ MethodName:synchronizedMultiSet @AT@ 1829 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:HiveConf.setLongVar(conf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,preferredSplitSize) @TO@ MethodInvocation:HiveConf.setLongVar(jobConf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,preferredSplitSize) @AT@ 6502 @LENGTH@ 84
---UPD MethodInvocation@@HiveConf.setLongVar(conf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,preferredSplitSize) @TO@ HiveConf.setLongVar(jobConf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,preferredSplitSize) @AT@ 6502 @LENGTH@ 83
------UPD SimpleName@@MethodName:setLongVar:[conf, HiveConf.ConfVars.MAPREDMINSPLITSIZE, preferredSplitSize] @TO@ MethodName:setLongVar:[jobConf, HiveConf.ConfVars.MAPREDMINSPLITSIZE, preferredSplitSize] @AT@ 6511 @LENGTH@ 74
---------UPD SimpleName@@conf @TO@ jobConf @AT@ 6522 @LENGTH@ 4


UPD TypeDeclaration@@[public]LoginToken,  @TO@ [@JsonIgnoreProperties(ignoreUnknown=true), public]LoginToken,  @AT@ 953 @LENGTH@ 1676
---INS NormalAnnotation@@@JsonIgnoreProperties(ignoreUnknown=true) @TO@ TypeDeclaration@@[public]LoginToken,  @AT@ 1012 @LENGTH@ 41


MOV FieldDeclaration@@protected, Bus, [bus] @TO@ TypeDeclaration@@[@UriEndpoint(scheme="cxfrs",title="CXF-RS",syntax="cxfrs:beanId:address",consumerClass=CxfRsConsumer.class,label="rest"), public]CxfRsEndpoint, DefaultEndpoint[HeaderFilterStrategyAware, Service] @AT@ 4181 @LENGTH@ 18


UPD ExpressionStatement@@MethodInvocation:BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,jmsTopicService) @TO@ MethodInvocation:BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,jmsTopicService,jmsTopicServiceName) @AT@ 3278 @LENGTH@ 84
---UPD MethodInvocation@@BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,jmsTopicService) @TO@ BinderServiceUtil.installBinderService(serviceTarget,jndiBinding,jmsTopicService,jmsTopicServiceName) @AT@ 3278 @LENGTH@ 83
------UPD SimpleName@@MethodName:installBinderService:[serviceTarget, jndiBinding, jmsTopicService] @TO@ MethodName:installBinderService:[serviceTarget, jndiBinding, jmsTopicService, jmsTopicServiceName] @AT@ 3296 @LENGTH@ 65
---------INS SimpleName@@jmsTopicServiceName @TO@ SimpleName@@MethodName:installBinderService:[serviceTarget, jndiBinding, jmsTopicService] @AT@ 3555 @LENGTH@ 19


DEL MethodDeclaration@@public, SimpleMessageListenerContainer, MethodName:getContainer,  @AT@ 1541 @LENGTH@ 112
---DEL Modifier@@public @AT@ 1541 @LENGTH@ 6
---DEL SimpleType@@SimpleMessageListenerContainer @AT@ 1548 @LENGTH@ 30
---DEL SimpleName@@MethodName:getContainer @AT@ 1579 @LENGTH@ 12
---DEL ReturnStatement@@CastExpression:(SimpleMessageListenerContainer)this.source @AT@ 1598 @LENGTH@ 52
------DEL CastExpression@@(SimpleMessageListenerContainer)this.source @AT@ 1605 @LENGTH@ 44
---------DEL SimpleType@@SimpleMessageListenerContainer @AT@ 1606 @LENGTH@ 30
---------DEL FieldAccess@@this.source @AT@ 1638 @LENGTH@ 11
------------DEL ThisExpression@@this @AT@ 1638 @LENGTH@ 4
------------DEL SimpleName@@source @AT@ 1643 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:ObjectHelper.notNull(connectionFactory,"connectionFactory is null") @TO@ MethodInvocation:ObjectHelper.notNull(connectionFactory,"connectionFactory") @AT@ 1402 @LENGTH@ 69
---UPD MethodInvocation@@ObjectHelper.notNull(connectionFactory,"connectionFactory is null") @TO@ ObjectHelper.notNull(connectionFactory,"connectionFactory") @AT@ 1402 @LENGTH@ 68
------UPD SimpleName@@MethodName:notNull:[connectionFactory, "connectionFactory is null"] @TO@ MethodName:notNull:[connectionFactory, "connectionFactory"] @AT@ 1415 @LENGTH@ 55
---------UPD StringLiteral@@"connectionFactory is null" @TO@ "connectionFactory" @AT@ 1442 @LENGTH@ 27


UPD IfStatement@@if (verbose) {  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int nameLen=Math.min(columnWidths.get(NAME_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int labelLen=Math.min(columnWidths.get(LABEL_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int mavenLen=Math.min(columnWidths.get(MAVEN_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  nameLen=Math.max(MIN_COLUMN_WIDTH,nameLen);  labelLen=Math.max(MIN_COLUMN_WIDTH,labelLen);  mavenLen=Math.max(MIN_COLUMN_WIDTH,mavenLen);  descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(nameLen).append('.').append(nameLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(labelLen).append('.').append(labelLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(mavenLen).append('.').append(mavenLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} else {  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} @TO@ if (verbose) {  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int nameLen=Math.min(columnWidths.get(NAME_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int labelLen=Math.min(columnWidths.get(LABEL_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int mavenLen=Math.min(columnWidths.get(MAVEN_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  nameLen=Math.max(MIN_COLUMN_WIDTH,nameLen);  labelLen=Math.max(MIN_COLUMN_WIDTH,labelLen);  mavenLen=Math.max(MIN_COLUMN_WIDTH,mavenLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(nameLen).append('.').append(nameLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(labelLen).append('.').append(labelLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(mavenLen).append('.').append(mavenLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} else {  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} @AT@ 6916 @LENGTH@ 2663
---UPD Block@@ThenBody:{  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int nameLen=Math.min(columnWidths.get(NAME_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int labelLen=Math.min(columnWidths.get(LABEL_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int mavenLen=Math.min(columnWidths.get(MAVEN_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  nameLen=Math.max(MIN_COLUMN_WIDTH,nameLen);  labelLen=Math.max(MIN_COLUMN_WIDTH,labelLen);  mavenLen=Math.max(MIN_COLUMN_WIDTH,mavenLen);  descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(nameLen).append('.').append(nameLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(labelLen).append('.').append(labelLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(mavenLen).append('.').append(mavenLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} @TO@ ThenBody:{  int titleLen=Math.min(columnWidths.get(TITLE_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int nameLen=Math.min(columnWidths.get(NAME_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int labelLen=Math.min(columnWidths.get(LABEL_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  int mavenLen=Math.min(columnWidths.get(MAVEN_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth());  titleLen=Math.max(MIN_COLUMN_WIDTH,titleLen);  nameLen=Math.max(MIN_COLUMN_WIDTH,nameLen);  labelLen=Math.max(MIN_COLUMN_WIDTH,labelLen);  mavenLen=Math.max(MIN_COLUMN_WIDTH,mavenLen);  final StringBuilder retval=new StringBuilder(DEFAULT_FORMAT_BUFFER_LENGTH);  retval.append(fieldPreamble).append("%-").append(titleLen).append('.').append(titleLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(nameLen).append('.').append(nameLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(labelLen).append('.').append(labelLen).append('s').append(fieldPostamble).append(' ');  retval.append(fieldPreamble).append("%-").append(mavenLen).append('.').append(mavenLen).append('s').append(fieldPostamble).append(' ');  return retval.toString();} @AT@ 6929 @LENGTH@ 1811
------DEL VariableDeclarationStatement@@int descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth()); @AT@ 7417 @LENGTH@ 118
---------DEL PrimitiveType@@int @AT@ 7417 @LENGTH@ 3
---------DEL VariableDeclarationFragment@@descriptionLen=Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth()) @AT@ 7421 @LENGTH@ 113
------------DEL SimpleName@@descriptionLen @AT@ 7421 @LENGTH@ 14
------------DEL MethodInvocation@@Math.min(columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement,getMaxColumnWidth()) @AT@ 7438 @LENGTH@ 96
---------------DEL SimpleName@@Name:Math @AT@ 7438 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:min:[columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement, getMaxColumnWidth()] @AT@ 7443 @LENGTH@ 91
------------------DEL InfixExpression@@columnWidths.get(DESCRIPTION_COLUMN_LABEL) + columnWidthIncrement @AT@ 7447 @LENGTH@ 65
---------------------DEL MethodInvocation@@columnWidths.get(DESCRIPTION_COLUMN_LABEL) @AT@ 7447 @LENGTH@ 42
------------------------DEL SimpleName@@Name:columnWidths @AT@ 7447 @LENGTH@ 12
------------------------DEL SimpleName@@MethodName:get:[DESCRIPTION_COLUMN_LABEL] @AT@ 7460 @LENGTH@ 29
---------------------------DEL SimpleName@@DESCRIPTION_COLUMN_LABEL @AT@ 7464 @LENGTH@ 24
---------------------DEL Operator@@+ @AT@ 7489 @LENGTH@ 1
---------------------DEL SimpleName@@columnWidthIncrement @AT@ 7492 @LENGTH@ 20
------------------DEL MethodInvocation@@MethodName:getMaxColumnWidth:[] @AT@ 7514 @LENGTH@ 19
------DEL ExpressionStatement@@Assignment:descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen) @AT@ 7791 @LENGTH@ 60
---------DEL Assignment@@descriptionLen=Math.max(MIN_COLUMN_WIDTH,descriptionLen) @AT@ 7791 @LENGTH@ 59
------------DEL SimpleName@@descriptionLen @AT@ 7791 @LENGTH@ 14
------------DEL Operator@@= @AT@ 7805 @LENGTH@ 1
------------DEL MethodInvocation@@Math.max(MIN_COLUMN_WIDTH,descriptionLen) @AT@ 7808 @LENGTH@ 42
---------------DEL SimpleName@@Name:Math @AT@ 7808 @LENGTH@ 4
---------------DEL SimpleName@@MethodName:max:[MIN_COLUMN_WIDTH, descriptionLen] @AT@ 7813 @LENGTH@ 37
------------------DEL SimpleName@@MIN_COLUMN_WIDTH @AT@ 7817 @LENGTH@ 16
------------------DEL SimpleName@@descriptionLen @AT@ 7835 @LENGTH@ 14
------DEL ExpressionStatement@@MethodInvocation:retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ') @AT@ 8545 @LENGTH@ 147
---------DEL MethodInvocation@@retval.append(fieldPreamble).append("%-").append(descriptionLen).append('.').append(descriptionLen).append('s').append(fieldPostamble).append(' ') @AT@ 8545 @LENGTH@ 146
------------DEL MethodInvocation@@MethodName:append:[fieldPostamble] @AT@ 8545 @LENGTH@ 134
---------------DEL SimpleName@@fieldPostamble @AT@ 8664 @LENGTH@ 14
------------DEL MethodInvocation@@MethodName:append:['s'] @AT@ 8545 @LENGTH@ 111
---------------DEL CharacterLiteral@@'s' @AT@ 8652 @LENGTH@ 3
------------DEL MethodInvocation@@MethodName:append:[descriptionLen] @AT@ 8545 @LENGTH@ 99
---------------DEL SimpleName@@descriptionLen @AT@ 8629 @LENGTH@ 14
------------DEL MethodInvocation@@MethodName:append:['.'] @AT@ 8545 @LENGTH@ 76
---------------DEL CharacterLiteral@@'.' @AT@ 8617 @LENGTH@ 3
------------DEL MethodInvocation@@MethodName:append:[descriptionLen] @AT@ 8545 @LENGTH@ 64
---------------DEL SimpleName@@descriptionLen @AT@ 8594 @LENGTH@ 14
------------DEL MethodInvocation@@MethodName:append:["%-"] @AT@ 8545 @LENGTH@ 41
---------------DEL StringLiteral@@"%-" @AT@ 8581 @LENGTH@ 4
------------DEL MethodInvocation@@MethodName:append:[fieldPreamble] @AT@ 8545 @LENGTH@ 28
---------------DEL SimpleName@@fieldPreamble @AT@ 8559 @LENGTH@ 13
------------DEL SimpleName@@Name:retval @AT@ 8545 @LENGTH@ 6
------------DEL SimpleName@@MethodName:append:[' '] @AT@ 8680 @LENGTH@ 11
---------------DEL CharacterLiteral@@' ' @AT@ 8687 @LENGTH@ 3


MOV MethodDeclaration@@public, void, MethodName:doesNotReturnNullWhenAnnotatedWithSortDefault, Exception,  @TO@ TypeDeclaration@@[public]SortHandlerMethodArgumentResolverUnitTests, SortDefaultUnitTests @AT@ 5219 @LENGTH@ 359
---UPD ExpressionStatement@@MethodInvocation:assertNotNull(resolveSort(request,getParameterOfMethod("simpleDefault"))) @TO@ MethodInvocation:assertThat(resolveSort(request,getParameterOfMethod("simpleDefault")),is(new Sort("firstname","lastname"))) @AT@ 5417 @LENGTH@ 75
------UPD MethodInvocation@@assertNotNull(resolveSort(request,getParameterOfMethod("simpleDefault"))) @TO@ assertThat(resolveSort(request,getParameterOfMethod("simpleDefault")),is(new Sort("firstname","lastname"))) @AT@ 5417 @LENGTH@ 74
---------UPD SimpleName@@MethodName:assertNotNull:[resolveSort(request,getParameterOfMethod("simpleDefault"))] @TO@ MethodName:assertThat:[resolveSort(request,getParameterOfMethod("simpleDefault")), is(new Sort("firstname","lastname"))] @AT@ 5417 @LENGTH@ 74
------------INS MethodInvocation@@is(new Sort("firstname","lastname")) @TO@ SimpleName@@MethodName:assertNotNull:[resolveSort(request,getParameterOfMethod("simpleDefault"))] @AT@ 6672 @LENGTH@ 37
---------------INS SimpleName@@MethodName:is:[new Sort("firstname","lastname")] @TO@ MethodInvocation@@is(new Sort("firstname","lastname")) @AT@ 6672 @LENGTH@ 37
------------------INS ClassInstanceCreation@@Sort["firstname", "lastname"] @TO@ SimpleName@@MethodName:is:[new Sort("firstname","lastname")] @AT@ 6675 @LENGTH@ 33
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6675 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6679 @LENGTH@ 4
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6684 @LENGTH@ 11
---------------------INS StringLiteral@@"lastname" @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6697 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[new Sort("firstname","lastname")] @TO@ MethodInvocation@@is(new Sort("firstname","lastname")) @AT@ 6672 @LENGTH@ 37
------------------INS ClassInstanceCreation@@Sort["firstname", "lastname"] @TO@ SimpleName@@MethodName:is:[new Sort("firstname","lastname")] @AT@ 6675 @LENGTH@ 33
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6675 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6679 @LENGTH@ 4
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6684 @LENGTH@ 11
---------------------INS StringLiteral@@"lastname" @TO@ ClassInstanceCreation@@Sort["firstname", "lastname"] @AT@ 6697 @LENGTH@ 10
---UPD ExpressionStatement@@MethodInvocation:assertNotNull(resolveSort(request,getParameterOfMethod("containeredDefault"))) @TO@ MethodInvocation:assertThat(resolveSort(request,getParameterOfMethod("containeredDefault")),is(new Sort("foo","bar"))) @AT@ 5495 @LENGTH@ 80
------UPD MethodInvocation@@assertNotNull(resolveSort(request,getParameterOfMethod("containeredDefault"))) @TO@ assertThat(resolveSort(request,getParameterOfMethod("containeredDefault")),is(new Sort("foo","bar"))) @AT@ 5495 @LENGTH@ 79
---------UPD SimpleName@@MethodName:assertNotNull:[resolveSort(request,getParameterOfMethod("containeredDefault"))] @TO@ MethodName:assertThat:[resolveSort(request,getParameterOfMethod("containeredDefault")), is(new Sort("foo","bar"))] @AT@ 5495 @LENGTH@ 79
------------INS MethodInvocation@@is(new Sort("foo","bar")) @TO@ SimpleName@@MethodName:assertNotNull:[resolveSort(request,getParameterOfMethod("containeredDefault"))] @AT@ 6791 @LENGTH@ 26
---------------INS SimpleName@@MethodName:is:[new Sort("foo","bar")] @TO@ MethodInvocation@@is(new Sort("foo","bar")) @AT@ 6791 @LENGTH@ 26
------------------INS ClassInstanceCreation@@Sort["foo", "bar"] @TO@ SimpleName@@MethodName:is:[new Sort("foo","bar")] @AT@ 6794 @LENGTH@ 22
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6794 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6798 @LENGTH@ 4
---------------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6803 @LENGTH@ 5
---------------------INS StringLiteral@@"bar" @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6810 @LENGTH@ 5
---------------INS SimpleName@@MethodName:is:[new Sort("foo","bar")] @TO@ MethodInvocation@@is(new Sort("foo","bar")) @AT@ 6791 @LENGTH@ 26
------------------INS ClassInstanceCreation@@Sort["foo", "bar"] @TO@ SimpleName@@MethodName:is:[new Sort("foo","bar")] @AT@ 6794 @LENGTH@ 22
---------------------INS New@@new @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6794 @LENGTH@ 3
---------------------INS SimpleType@@Sort @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6798 @LENGTH@ 4
---------------------INS StringLiteral@@"foo" @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6803 @LENGTH@ 5
---------------------INS StringLiteral@@"bar" @TO@ ClassInstanceCreation@@Sort["foo", "bar"] @AT@ 6810 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:staticContent(contextPath,base) @TO@ MethodInvocation:staticContent("/",base) @AT@ 762 @LENGTH@ 35
---UPD MethodInvocation@@staticContent(contextPath,base) @TO@ staticContent("/",base) @AT@ 762 @LENGTH@ 34
------UPD SimpleName@@MethodName:staticContent:[contextPath, base] @TO@ MethodName:staticContent:["/", base] @AT@ 762 @LENGTH@ 34
---------DEL SimpleName@@contextPath @AT@ 777 @LENGTH@ 11
---------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:staticContent:[contextPath, base] @AT@ 777 @LENGTH@ 3


UPD TypeDeclaration@@[@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]ManagedMDB, [MessageListener] @TO@ [@JMSDestinationDefinition(name="java:/queue/ManagedMDB-queue",interfaceName="javax.jms.Queue"), @MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/ManagedMDB-queue")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]ManagedMDB, [MessageListener] @AT@ 1560 @LENGTH@ 601
---UPD NormalAnnotation@@@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}) @TO@ @MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/ManagedMDB-queue")}) @AT@ 1560 @LENGTH@ 242
---INS NormalAnnotation@@@JMSDestinationDefinition(name="java:/queue/ManagedMDB-queue",interfaceName="javax.jms.Queue") @TO@ TypeDeclaration@@[@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]ManagedMDB, [MessageListener] @AT@ 1603 @LENGTH@ 115


UPD ExpressionStatement@@MethodInvocation:worldRepository.touchOnlyWorldsReachableByRocket() @TO@ MethodInvocation:worldRepository.touchAllWorlds() @AT@ 1624 @LENGTH@ 51
---UPD MethodInvocation@@worldRepository.touchOnlyWorldsReachableByRocket() @TO@ worldRepository.touchAllWorlds() @AT@ 1624 @LENGTH@ 50
------UPD SimpleName@@MethodName:touchOnlyWorldsReachableByRocket:[] @TO@ MethodName:touchAllWorlds:[] @AT@ 1640 @LENGTH@ 34


DEL ExpressionStatement@@MethodInvocation:testComponent("rng") @AT@ 1266 @LENGTH@ 21
---DEL MethodInvocation@@testComponent("rng") @AT@ 1266 @LENGTH@ 20
------DEL SimpleName@@MethodName:testComponent:["rng"] @AT@ 1266 @LENGTH@ 20
---------DEL StringLiteral@@"rng" @AT@ 1280 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 1719 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 1719 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 1730 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:serverAuthenticationContext.authorize(principalName) @TO@ MethodInvocation:assertTrue("Authorization failed",serverAuthenticationContext.authorize(principalName)) @AT@ 3496 @LENGTH@ 53
---INS MethodInvocation@@assertTrue("Authorization failed",serverAuthenticationContext.authorize(principalName)) @TO@ ExpressionStatement@@MethodInvocation:serverAuthenticationContext.authorize(principalName) @AT@ 3496 @LENGTH@ 88
------INS SimpleName@@MethodName:assertTrue:["Authorization failed", serverAuthenticationContext.authorize(principalName)] @TO@ MethodInvocation@@assertTrue("Authorization failed",serverAuthenticationContext.authorize(principalName)) @AT@ 3496 @LENGTH@ 88
---------MOV MethodInvocation@@serverAuthenticationContext.authorize(principalName) @TO@ SimpleName@@MethodName:assertTrue:["Authorization failed", serverAuthenticationContext.authorize(principalName)] @AT@ 3496 @LENGTH@ 52
---------INS StringLiteral@@"Authorization failed" @TO@ SimpleName@@MethodName:assertTrue:["Authorization failed", serverAuthenticationContext.authorize(principalName)] @AT@ 3507 @LENGTH@ 22


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3063 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3063 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3074 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3083 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3054 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 3083 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3095 @LENGTH@ 15


UPD VariableDeclarationStatement@@URI u=new URI(uri); @TO@ URI u=normalizeUri(uri); @AT@ 16516 @LENGTH@ 21
---UPD VariableDeclarationFragment@@u=new URI(uri) @TO@ u=normalizeUri(uri) @AT@ 16520 @LENGTH@ 16
------DEL ClassInstanceCreation@@URI[uri] @AT@ 16524 @LENGTH@ 12
---------DEL New@@new @AT@ 16524 @LENGTH@ 3
---------DEL SimpleType@@URI @AT@ 16528 @LENGTH@ 3
---------DEL SimpleName@@uri @AT@ 16532 @LENGTH@ 3
------INS MethodInvocation@@normalizeUri(uri) @TO@ VariableDeclarationFragment@@u=new URI(uri) @AT@ 16628 @LENGTH@ 17
---------INS SimpleName@@MethodName:normalizeUri:[uri] @TO@ MethodInvocation@@normalizeUri(uri) @AT@ 16628 @LENGTH@ 17
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:normalizeUri:[uri] @AT@ 16641 @LENGTH@ 3


UPD MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @TO@ public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref, boolean mandatory,  @AT@ 3502 @LENGTH@ 2538
---UPD IfStatement@@if (!isErrorHandlerBuilderConfigured(ref)) {  answer=routeContext.getRoute().getErrorHandlerBuilder();  if (answer == null && routeContext.getRoute().getErrorHandlerRef() != null) {    answer=routeContext.lookup(routeContext.getRoute().getErrorHandlerRef(),ErrorHandlerBuilder.class);  }  if (answer == null) {    answer=new DefaultErrorHandlerBuilder();  }  if (answer instanceof ErrorHandlerBuilderRef) {    ErrorHandlerBuilderRef other=(ErrorHandlerBuilderRef)answer;    String otherRef=other.getRef();    if (!isErrorHandlerBuilderConfigured(otherRef)) {      answer=lookupErrorHandlerBuilder((ModelCamelContext)routeContext.getCamelContext());    }    if (answer == null) {      answer=new DefaultErrorHandlerBuilder();    }    ((ErrorHandlerBuilder)answer).setErrorHandlers(routeContext,other.getErrorHandlers(routeContext));  }} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @TO@ if (!isErrorHandlerBuilderConfigured(ref)) {  answer=routeContext.getRoute().getErrorHandlerBuilder();  if (answer == null && routeContext.getRoute().getErrorHandlerRef() != null) {    answer=routeContext.lookup(routeContext.getRoute().getErrorHandlerRef(),ErrorHandlerBuilder.class);  }  if (answer == null) {    answer=new DefaultErrorHandlerBuilder();  }  if (answer instanceof ErrorHandlerBuilderRef) {    ErrorHandlerBuilderRef other=(ErrorHandlerBuilderRef)answer;    String otherRef=other.getRef();    if (!isErrorHandlerBuilderConfigured(otherRef)) {      answer=lookupErrorHandlerBuilder((ModelCamelContext)routeContext.getCamelContext());    }    if (answer == null) {      answer=new DefaultErrorHandlerBuilder();    }    ((ErrorHandlerBuilder)answer).setErrorHandlers(routeContext,other.getErrorHandlers(routeContext));  }} else {  if (mandatory) {    answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);  } else {    answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);  }} @AT@ 3945 @LENGTH@ 2065
------INS Block@@ElseBody:{  if (mandatory) {    answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);  } else {    answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);  }} @TO@ IfStatement@@if (!isErrorHandlerBuilderConfigured(ref)) {  answer=routeContext.getRoute().getErrorHandlerBuilder();  if (answer == null && routeContext.getRoute().getErrorHandlerRef() != null) {    answer=routeContext.lookup(routeContext.getRoute().getErrorHandlerRef(),ErrorHandlerBuilder.class);  }  if (answer == null) {    answer=new DefaultErrorHandlerBuilder();  }  if (answer instanceof ErrorHandlerBuilderRef) {    ErrorHandlerBuilderRef other=(ErrorHandlerBuilderRef)answer;    String otherRef=other.getRef();    if (!isErrorHandlerBuilderConfigured(otherRef)) {      answer=lookupErrorHandlerBuilder((ModelCamelContext)routeContext.getCamelContext());    }    if (answer == null) {      answer=new DefaultErrorHandlerBuilder();    }    ((ErrorHandlerBuilder)answer).setErrorHandlers(routeContext,other.getErrorHandlers(routeContext));  }} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @AT@ 6412 @LENGTH@ 293
---------INS IfStatement@@if (mandatory) {  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @TO@ Block@@ElseBody:{  if (mandatory) {    answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);  } else {    answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);  }} @AT@ 6479 @LENGTH@ 216
------------MOV Block@@ElseBody:{  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @TO@ IfStatement@@if (mandatory) {  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @AT@ 5872 @LENGTH@ 138
------------INS SimpleName@@mandatory @TO@ IfStatement@@if (mandatory) {  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @AT@ 6483 @LENGTH@ 9
------------INS Block@@ThenBody:{  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} @TO@ IfStatement@@if (mandatory) {  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} else {  answer=routeContext.lookup(ref,ErrorHandlerBuilder.class);} @AT@ 6494 @LENGTH@ 102
---------------INS ExpressionStatement@@Assignment:answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ Block@@ThenBody:{  answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class);} @AT@ 6512 @LENGTH@ 70
------------------INS Assignment@@answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ ExpressionStatement@@Assignment:answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6512 @LENGTH@ 69
---------------------INS SimpleName@@answer @TO@ Assignment@@answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6512 @LENGTH@ 6
---------------------INS Operator@@= @TO@ Assignment@@answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6518 @LENGTH@ 1
---------------------INS MethodInvocation@@routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @TO@ Assignment@@answer=routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6521 @LENGTH@ 60
------------------------INS SimpleName@@Name:routeContext @TO@ MethodInvocation@@routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6521 @LENGTH@ 12
------------------------INS SimpleName@@MethodName:mandatoryLookup:[ref, ErrorHandlerBuilder.class] @TO@ MethodInvocation@@routeContext.mandatoryLookup(ref,ErrorHandlerBuilder.class) @AT@ 6534 @LENGTH@ 47
---------------------------INS SimpleName@@ref @TO@ SimpleName@@MethodName:mandatoryLookup:[ref, ErrorHandlerBuilder.class] @AT@ 6550 @LENGTH@ 3
---------------------------INS TypeLiteral@@ErrorHandlerBuilder.class @TO@ SimpleName@@MethodName:mandatoryLookup:[ref, ErrorHandlerBuilder.class] @AT@ 6555 @LENGTH@ 25
---INS SingleVariableDeclaration@@boolean mandatory @TO@ MethodDeclaration@@public, static, ErrorHandlerFactory, MethodName:lookupErrorHandlerBuilder, RouteContext routeContext, String ref,  @AT@ 4122 @LENGTH@ 17
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean mandatory @AT@ 4122 @LENGTH@ 7
------INS SimpleName@@mandatory @TO@ SingleVariableDeclaration@@boolean mandatory @AT@ 4130 @LENGTH@ 9


INS ExpressionStatement@@MethodInvocation:constraints.add(new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")) @TO@ MethodDeclaration@@public, void, MethodName:fulfillsConstraintsForUser, Exception,  @AT@ 7447 @LENGTH@ 140
---INS MethodInvocation@@constraints.add(new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")) @TO@ ExpressionStatement@@MethodInvocation:constraints.add(new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")) @AT@ 7447 @LENGTH@ 139
------INS SimpleName@@Name:constraints @TO@ MethodInvocation@@constraints.add(new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")) @AT@ 7447 @LENGTH@ 11
------INS SimpleName@@MethodName:add:[new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")] @TO@ MethodInvocation@@constraints.add(new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")) @AT@ 7459 @LENGTH@ 127
---------INS ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @TO@ SimpleName@@MethodName:add:[new Constraint("$.properties.colleagues.items",is(nullValue()),"Items must not appear for collection associations.")] @AT@ 7463 @LENGTH@ 122
------------INS New@@new @TO@ ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @AT@ 7463 @LENGTH@ 3
------------INS SimpleType@@Constraint @TO@ ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @AT@ 7467 @LENGTH@ 10
------------INS StringLiteral@@"$.properties.colleagues.items" @TO@ ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @AT@ 7478 @LENGTH@ 31
------------INS MethodInvocation@@is(nullValue()) @TO@ ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @AT@ 7511 @LENGTH@ 15
---------------INS SimpleName@@MethodName:is:[nullValue()] @TO@ MethodInvocation@@is(nullValue()) @AT@ 7511 @LENGTH@ 15
------------------INS MethodInvocation@@MethodName:nullValue:[] @TO@ SimpleName@@MethodName:is:[nullValue()] @AT@ 7514 @LENGTH@ 11
------------INS StringLiteral@@"Items must not appear for collection associations." @TO@ ClassInstanceCreation@@Constraint["$.properties.colleagues.items", is(nullValue()), "Items must not appear for collection associations."] @AT@ 7532 @LENGTH@ 52


MOV FieldDeclaration@@private, final, Pattern, [includePattern] @TO@ TypeDeclaration@@[public, abstract]GenericFileConsumer, ScheduledBatchPollingConsumer @AT@ 1644 @LENGTH@ 37


UPD TryStatement@@try {  final UndertowClient client=UndertowClient.getInstance();  XnioWorker worker=Xnio.getInstance().createWorker(OptionMap.EMPTY);  IoFuture<ClientConnection> connect=client.connect(endpoint.getHttpURI(),worker,new ByteBufferSlicePool(BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR,8192,8192 * 8192),OptionMap.EMPTY);  ClientRequest request=new ClientRequest();  request.setProtocol(Protocols.HTTP_1_1);  Object body=getRequestBody(request,exchange);  TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  ByteBuffer bodyAsByte=tc.convertTo(ByteBuffer.class,body);  if (body != null) {    request.getRequestHeaders().put(Headers.CONTENT_LENGTH,bodyAsByte.array().length);  }  connect.get().sendRequest(request,new UndertowProducerCallback(bodyAsByte,exchange,callback));} catch (IOException e) {  exchange.setException(e);  callback.done(true);  return true;} @TO@ try {  final UndertowClient client=UndertowClient.getInstance();  XnioWorker worker=Xnio.getInstance().createWorker(OptionMap.EMPTY);  IoFuture<ClientConnection> connect=client.connect(endpoint.getHttpURI(),worker,new ByteBufferSlicePool(BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR,8192,8192 * 8192),OptionMap.EMPTY);  ClientRequest request=new ClientRequest();  request.setProtocol(Protocols.HTTP_1_1);  request.setPath(endpoint.getHttpURI().getPath());  Object body=getRequestBody(request,exchange);  TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  ByteBuffer bodyAsByte=tc.convertTo(ByteBuffer.class,body);  if (body != null) {    request.getRequestHeaders().put(Headers.CONTENT_LENGTH,bodyAsByte.array().length);  }  connect.get().sendRequest(request,new UndertowProducerCallback(bodyAsByte,exchange,callback));} catch (IOException e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 2522 @LENGTH@ 1088
---INS ExpressionStatement@@MethodInvocation:request.setPath(endpoint.getHttpURI().getPath()) @TO@ TryStatement@@try {  final UndertowClient client=UndertowClient.getInstance();  XnioWorker worker=Xnio.getInstance().createWorker(OptionMap.EMPTY);  IoFuture<ClientConnection> connect=client.connect(endpoint.getHttpURI(),worker,new ByteBufferSlicePool(BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR,8192,8192 * 8192),OptionMap.EMPTY);  ClientRequest request=new ClientRequest();  request.setProtocol(Protocols.HTTP_1_1);  Object body=getRequestBody(request,exchange);  TypeConverter tc=endpoint.getCamelContext().getTypeConverter();  ByteBuffer bodyAsByte=tc.convertTo(ByteBuffer.class,body);  if (body != null) {    request.getRequestHeaders().put(Headers.CONTENT_LENGTH,bodyAsByte.array().length);  }  connect.get().sendRequest(request,new UndertowProducerCallback(bodyAsByte,exchange,callback));} catch (IOException e) {  exchange.setException(e);  callback.done(true);  return true;} @AT@ 3004 @LENGTH@ 49
------INS MethodInvocation@@request.setPath(endpoint.getHttpURI().getPath()) @TO@ ExpressionStatement@@MethodInvocation:request.setPath(endpoint.getHttpURI().getPath()) @AT@ 3004 @LENGTH@ 48
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setPath(endpoint.getHttpURI().getPath()) @AT@ 3004 @LENGTH@ 7
---------INS SimpleName@@MethodName:setPath:[endpoint.getHttpURI().getPath()] @TO@ MethodInvocation@@request.setPath(endpoint.getHttpURI().getPath()) @AT@ 3012 @LENGTH@ 40
------------INS MethodInvocation@@endpoint.getHttpURI().getPath() @TO@ SimpleName@@MethodName:setPath:[endpoint.getHttpURI().getPath()] @AT@ 3020 @LENGTH@ 31
---------------INS MethodInvocation@@MethodName:getHttpURI:[] @TO@ MethodInvocation@@endpoint.getHttpURI().getPath() @AT@ 3020 @LENGTH@ 21
---------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.getHttpURI().getPath() @AT@ 3020 @LENGTH@ 8
---------------INS SimpleName@@MethodName:getPath:[] @TO@ MethodInvocation@@endpoint.getHttpURI().getPath() @AT@ 3042 @LENGTH@ 9


INS MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @TO@ TypeDeclaration@@[public]Base64Test,  @AT@ 3987 @LENGTH@ 248
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 3987 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 3994 @LENGTH@ 4
---INS SimpleName@@MethodName:testEncodeByteStartingWithOne @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 3999 @LENGTH@ 29
---INS VariableDeclarationStatement@@ByteStringBuilder bsb=new ByteStringBuilder(); @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 4041 @LENGTH@ 48
------INS SimpleType@@ByteStringBuilder @TO@ VariableDeclarationStatement@@ByteStringBuilder bsb=new ByteStringBuilder(); @AT@ 4041 @LENGTH@ 17
------INS VariableDeclarationFragment@@bsb=new ByteStringBuilder() @TO@ VariableDeclarationStatement@@ByteStringBuilder bsb=new ByteStringBuilder(); @AT@ 4059 @LENGTH@ 29
---------INS SimpleName@@bsb @TO@ VariableDeclarationFragment@@bsb=new ByteStringBuilder() @AT@ 4059 @LENGTH@ 3
---------INS ClassInstanceCreation@@ByteStringBuilder[] @TO@ VariableDeclarationFragment@@bsb=new ByteStringBuilder() @AT@ 4065 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@ByteStringBuilder[] @AT@ 4065 @LENGTH@ 3
------------INS SimpleType@@ByteStringBuilder @TO@ ClassInstanceCreation@@ByteStringBuilder[] @AT@ 4069 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:bsb.append((byte)0x00) @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 4098 @LENGTH@ 23
------INS MethodInvocation@@bsb.append((byte)0x00) @TO@ ExpressionStatement@@MethodInvocation:bsb.append((byte)0x00) @AT@ 4098 @LENGTH@ 22
---------INS SimpleName@@Name:bsb @TO@ MethodInvocation@@bsb.append((byte)0x00) @AT@ 4098 @LENGTH@ 3
---------INS SimpleName@@MethodName:append:[(byte)0x00] @TO@ MethodInvocation@@bsb.append((byte)0x00) @AT@ 4102 @LENGTH@ 18
------------INS CastExpression@@(byte)0x00 @TO@ SimpleName@@MethodName:append:[(byte)0x00] @AT@ 4109 @LENGTH@ 10
---------------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)0x00 @AT@ 4110 @LENGTH@ 4
---------------INS NumberLiteral@@0x00 @TO@ CastExpression@@(byte)0x00 @AT@ 4115 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:bsb.append((byte)0xB8) @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 4130 @LENGTH@ 23
------INS MethodInvocation@@bsb.append((byte)0xB8) @TO@ ExpressionStatement@@MethodInvocation:bsb.append((byte)0xB8) @AT@ 4130 @LENGTH@ 22
---------INS SimpleName@@Name:bsb @TO@ MethodInvocation@@bsb.append((byte)0xB8) @AT@ 4130 @LENGTH@ 3
---------INS SimpleName@@MethodName:append:[(byte)0xB8] @TO@ MethodInvocation@@bsb.append((byte)0xB8) @AT@ 4134 @LENGTH@ 18
------------INS CastExpression@@(byte)0xB8 @TO@ SimpleName@@MethodName:append:[(byte)0xB8] @AT@ 4141 @LENGTH@ 10
---------------INS PrimitiveType@@byte @TO@ CastExpression@@(byte)0xB8 @AT@ 4142 @LENGTH@ 4
---------------INS NumberLiteral@@0xB8 @TO@ CastExpression@@(byte)0xB8 @AT@ 4147 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("ALg=",bsb.iterate().base64Encode().drainToString()) @TO@ MethodDeclaration@@public, void, MethodName:testEncodeByteStartingWithOne,  @AT@ 4162 @LENGTH@ 67
------INS MethodInvocation@@assertEquals("ALg=",bsb.iterate().base64Encode().drainToString()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("ALg=",bsb.iterate().base64Encode().drainToString()) @AT@ 4162 @LENGTH@ 66
---------INS SimpleName@@MethodName:assertEquals:["ALg=", bsb.iterate().base64Encode().drainToString()] @TO@ MethodInvocation@@assertEquals("ALg=",bsb.iterate().base64Encode().drainToString()) @AT@ 4162 @LENGTH@ 66
------------INS StringLiteral@@"ALg=" @TO@ SimpleName@@MethodName:assertEquals:["ALg=", bsb.iterate().base64Encode().drainToString()] @AT@ 4175 @LENGTH@ 6
------------INS MethodInvocation@@bsb.iterate().base64Encode().drainToString() @TO@ SimpleName@@MethodName:assertEquals:["ALg=", bsb.iterate().base64Encode().drainToString()] @AT@ 4183 @LENGTH@ 44
---------------INS MethodInvocation@@MethodName:base64Encode:[] @TO@ MethodInvocation@@bsb.iterate().base64Encode().drainToString() @AT@ 4183 @LENGTH@ 28
---------------INS MethodInvocation@@MethodName:iterate:[] @TO@ MethodInvocation@@bsb.iterate().base64Encode().drainToString() @AT@ 4183 @LENGTH@ 13
---------------INS SimpleName@@Name:bsb @TO@ MethodInvocation@@bsb.iterate().base64Encode().drainToString() @AT@ 4183 @LENGTH@ 3
---------------INS SimpleName@@MethodName:drainToString:[] @TO@ MethodInvocation@@bsb.iterate().base64Encode().drainToString() @AT@ 4212 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:numPartitions=HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE),nwayConf) @TO@ Assignment:numPartitions=HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE)) @AT@ 5805 @LENGTH@ 299
---UPD Assignment@@numPartitions=HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE),nwayConf) @TO@ numPartitions=HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE)) @AT@ 5805 @LENGTH@ 298
------UPD MethodInvocation@@HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE),nwayConf) @TO@ HybridHashTableContainer.calcNumPartitions(memory,maxSize,HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS),HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE)) @AT@ 5821 @LENGTH@ 282
---------UPD SimpleName@@MethodName:calcNumPartitions:[memory, maxSize, HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS), HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE), nwayConf] @TO@ MethodName:calcNumPartitions:[memory, maxSize, HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINNUMPARTITIONS), HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEHYBRIDGRACEHASHJOINMINWBSIZE)] @AT@ 5846 @LENGTH@ 257
------------DEL SimpleName@@nwayConf @AT@ 6094 @LENGTH@ 8


UPD MethodDeclaration@@public, static, RelNode, MethodName:convertOpTree, RelNode rel, List<FieldSchema> resultSchema, CalciteSemanticException,  @TO@ public, static, RelNode, MethodName:convertOpTree, RelNode rel, List<FieldSchema> resultSchema, boolean isCTAS, CalciteSemanticException,  @AT@ 1220 @LENGTH@ 364
---INS SingleVariableDeclaration@@boolean isCTAS @TO@ MethodDeclaration@@public, static, RelNode, MethodName:convertOpTree, RelNode rel, List<FieldSchema> resultSchema, CalciteSemanticException,  @AT@ 1301 @LENGTH@ 14
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@boolean isCTAS @AT@ 1301 @LENGTH@ 7
------INS SimpleName@@isCTAS @TO@ SingleVariableDeclaration@@boolean isCTAS @AT@ 1309 @LENGTH@ 6
---INS IfStatement@@if (isCTAS) {  newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);} @TO@ MethodDeclaration@@public, static, RelNode, MethodName:convertOpTree, RelNode rel, List<FieldSchema> resultSchema, CalciteSemanticException,  @AT@ 1577 @LENGTH@ 151
------INS SimpleName@@isCTAS @TO@ IfStatement@@if (isCTAS) {  newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);} @AT@ 1581 @LENGTH@ 6
------INS Block@@ThenBody:{  newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);} @TO@ IfStatement@@if (isCTAS) {  newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);} @AT@ 1589 @LENGTH@ 139
---------INS ExpressionStatement@@Assignment:newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @TO@ Block@@ThenBody:{  newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);} @AT@ 1597 @LENGTH@ 125
------------INS Assignment@@newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @TO@ ExpressionStatement@@Assignment:newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1597 @LENGTH@ 124
---------------INS SimpleName@@newTopNode @TO@ Assignment@@newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1597 @LENGTH@ 10
---------------INS Operator@@= @TO@ Assignment@@newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1607 @LENGTH@ 1
---------------INS MethodInvocation@@PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @TO@ Assignment@@newTopNode=PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1610 @LENGTH@ 111
------------------INS SimpleName@@Name:PlanModifierForASTConv @TO@ MethodInvocation@@PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1610 @LENGTH@ 22
------------------INS SimpleName@@MethodName:renameTopLevelSelectInResultSchema:[newTopNode, topSelparentPair, resultSchema] @TO@ MethodInvocation@@PlanModifierForASTConv.renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema) @AT@ 1633 @LENGTH@ 88
---------------------INS SimpleName@@newTopNode @TO@ SimpleName@@MethodName:renameTopLevelSelectInResultSchema:[newTopNode, topSelparentPair, resultSchema] @AT@ 1668 @LENGTH@ 10
---------------------INS SimpleName@@topSelparentPair @TO@ SimpleName@@MethodName:renameTopLevelSelectInResultSchema:[newTopNode, topSelparentPair, resultSchema] @AT@ 1690 @LENGTH@ 16
---------------------INS SimpleName@@resultSchema @TO@ SimpleName@@MethodName:renameTopLevelSelectInResultSchema:[newTopNode, topSelparentPair, resultSchema] @AT@ 1708 @LENGTH@ 12


UPD ExpressionStatement@@MethodInvocation:executeUpdate("CREATE " + "(dh:Movie {title:'Die Hard'}), " + "(fe:Movie {title: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)") @TO@ MethodInvocation:executeUpdate("CREATE " + "(dh:Movie {name:'Die Hard'}), " + "(fe:Movie {name: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)") @AT@ 2481 @LENGTH@ 573
---UPD MethodInvocation@@executeUpdate("CREATE " + "(dh:Movie {title:'Die Hard'}), " + "(fe:Movie {title: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)") @TO@ executeUpdate("CREATE " + "(dh:Movie {name:'Die Hard'}), " + "(fe:Movie {name: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)") @AT@ 2481 @LENGTH@ 572
------UPD SimpleName@@MethodName:executeUpdate:["CREATE " + "(dh:Movie {title:'Die Hard'}), " + "(fe:Movie {title: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)"] @TO@ MethodName:executeUpdate:["CREATE " + "(dh:Movie {name:'Die Hard'}), " + "(fe:Movie {name: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)"] @AT@ 2481 @LENGTH@ 572
---------UPD InfixExpression@@"CREATE " + "(dh:Movie {title:'Die Hard'}), " + "(fe:Movie {title: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)" @TO@ "CREATE " + "(dh:Movie {name:'Die Hard'}), " + "(fe:Movie {name: 'The Fifth Element'}), "+ "(bw:User {name: 'Bruce Willis'}), "+ "(ar:User {name: 'Alan Rickman'}), "+ "(mj:User {name: 'Milla Jovovich'}), "+ "(mj)-[:ACTED_IN]->(fe), "+ "(ar)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(dh), "+ "(bw)-[:ACTED_IN]->(fe)" @AT@ 2512 @LENGTH@ 540
------------UPD StringLiteral@@"(dh:Movie {title:'Die Hard'}), " @TO@ "(dh:Movie {name:'Die Hard'}), " @AT@ 2548 @LENGTH@ 33
------------UPD StringLiteral@@"(fe:Movie {title: 'The Fifth Element'}), " @TO@ "(fe:Movie {name: 'The Fifth Element'}), " @AT@ 2608 @LENGTH@ 43


UPD ReturnStatement@@ParenthesizedExpression:(!method.isSynthetic() && !method.isBridge() && method.getDeclaringClass() != Object.class && !method.getName().contains("$")) @TO@ InfixExpression:!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 534 @LENGTH@ 140
---DEL ParenthesizedExpression@@(!method.isSynthetic() && !method.isBridge() && method.getDeclaringClass() != Object.class && !method.getName().contains("$")) @AT@ 541 @LENGTH@ 132
------DEL InfixExpression@@!method.isSynthetic() && !method.isBridge() && method.getDeclaringClass() != Object.class && !method.getName().contains("$") @AT@ 542 @LENGTH@ 130
---------DEL InfixExpression@@!method.isSynthetic() && !method.isBridge() && method.getDeclaringClass() != Object.class @AT@ 542 @LENGTH@ 89
------------DEL InfixExpression@@method.getDeclaringClass() != Object.class @AT@ 589 @LENGTH@ 42
---------------DEL MethodInvocation@@method.getDeclaringClass() @AT@ 589 @LENGTH@ 26
---------------DEL Operator@@!= @AT@ 615 @LENGTH@ 2
---------------DEL TypeLiteral@@Object.class @AT@ 619 @LENGTH@ 12
---------DEL Operator@@&& @AT@ 631 @LENGTH@ 2
---INS InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @TO@ ReturnStatement@@ParenthesizedExpression:(!method.isSynthetic() && !method.isBridge() && method.getDeclaringClass() != Object.class && !method.getName().contains("$")) @AT@ 1276 @LENGTH@ 228
------MOV PrefixExpression@@!method.isSynthetic() @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 542 @LENGTH@ 21
------MOV Operator@@&& @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 563 @LENGTH@ 2
------MOV PrefixExpression@@!method.isBridge() @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 567 @LENGTH@ 18
------MOV PrefixExpression@@!method.getName().contains("$") @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 635 @LENGTH@ 37
---------UPD MethodInvocation@@method.getName().contains("$") @TO@ ReflectionUtils.isCglibRenamedMethod(method) @AT@ 636 @LENGTH@ 36
------------DEL MethodInvocation@@MethodName:getName:[] @AT@ 636 @LENGTH@ 22
------------UPD SimpleName@@Name:method @TO@ Name:ReflectionUtils @AT@ 636 @LENGTH@ 6
------------UPD SimpleName@@MethodName:contains:["$"] @TO@ MethodName:isCglibRenamedMethod:[method] @AT@ 659 @LENGTH@ 13
---------------DEL StringLiteral@@"$" @AT@ 668 @LENGTH@ 3
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:contains:["$"] @AT@ 1497 @LENGTH@ 6
------INS PrefixExpression@@!ReflectionUtils.isObjectMethod(method) @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 1339 @LENGTH@ 39
---------INS Operator@@! @TO@ PrefixExpression@@!ReflectionUtils.isObjectMethod(method) @AT@ 1339 @LENGTH@ 1
---------INS MethodInvocation@@ReflectionUtils.isObjectMethod(method) @TO@ PrefixExpression@@!ReflectionUtils.isObjectMethod(method) @AT@ 1340 @LENGTH@ 38
------------INS SimpleName@@Name:ReflectionUtils @TO@ MethodInvocation@@ReflectionUtils.isObjectMethod(method) @AT@ 1340 @LENGTH@ 15
------------INS SimpleName@@MethodName:isObjectMethod:[method] @TO@ MethodInvocation@@ReflectionUtils.isObjectMethod(method) @AT@ 1356 @LENGTH@ 22
---------------INS SimpleName@@method @TO@ SimpleName@@MethodName:isObjectMethod:[method] @AT@ 1371 @LENGTH@ 6
------INS PrefixExpression@@!ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @TO@ InfixExpression@@!method.isSynthetic() && !method.isBridge() && !ReflectionUtils.isObjectMethod(method)&& !ClassUtils.isCglibProxyClass(method.getDeclaringClass())&& !ReflectionUtils.isCglibRenamedMethod(method) @AT@ 1390 @LENGTH@ 57
---------INS Operator@@! @TO@ PrefixExpression@@!ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @AT@ 1390 @LENGTH@ 1
---------INS MethodInvocation@@ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @TO@ PrefixExpression@@!ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @AT@ 1391 @LENGTH@ 56
------------INS SimpleName@@Name:ClassUtils @TO@ MethodInvocation@@ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @AT@ 1391 @LENGTH@ 10
------------INS SimpleName@@MethodName:isCglibProxyClass:[method.getDeclaringClass()] @TO@ MethodInvocation@@ClassUtils.isCglibProxyClass(method.getDeclaringClass()) @AT@ 1402 @LENGTH@ 45
---------------INS MethodInvocation@@method.getDeclaringClass() @TO@ SimpleName@@MethodName:isCglibProxyClass:[method.getDeclaringClass()] @AT@ 1420 @LENGTH@ 26
------------------MOV SimpleName@@Name:method @TO@ MethodInvocation@@method.getDeclaringClass() @AT@ 589 @LENGTH@ 6
------------------MOV SimpleName@@MethodName:getDeclaringClass:[] @TO@ MethodInvocation@@method.getDeclaringClass() @AT@ 596 @LENGTH@ 19


INS MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @TO@ TypeDeclaration@@[public]BaseClientDetailsTests,  @AT@ 5357 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5357 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5364 @LENGTH@ 4
---INS SimpleName@@MethodName:testEqualityOfValidity @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5369 @LENGTH@ 22
---INS VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails(); @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5398 @LENGTH@ 52
------INS SimpleType@@BaseClientDetails @TO@ VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails(); @AT@ 5398 @LENGTH@ 17
------INS VariableDeclarationFragment@@details=new BaseClientDetails() @TO@ VariableDeclarationStatement@@BaseClientDetails details=new BaseClientDetails(); @AT@ 5416 @LENGTH@ 33
---------INS SimpleName@@details @TO@ VariableDeclarationFragment@@details=new BaseClientDetails() @AT@ 5416 @LENGTH@ 7
---------INS ClassInstanceCreation@@BaseClientDetails[] @TO@ VariableDeclarationFragment@@details=new BaseClientDetails() @AT@ 5426 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@BaseClientDetails[] @AT@ 5426 @LENGTH@ 3
------------INS SimpleType@@BaseClientDetails @TO@ ClassInstanceCreation@@BaseClientDetails[] @AT@ 5430 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:details.setAccessTokenValiditySeconds(100) @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5453 @LENGTH@ 43
------INS MethodInvocation@@details.setAccessTokenValiditySeconds(100) @TO@ ExpressionStatement@@MethodInvocation:details.setAccessTokenValiditySeconds(100) @AT@ 5453 @LENGTH@ 42
---------INS SimpleName@@Name:details @TO@ MethodInvocation@@details.setAccessTokenValiditySeconds(100) @AT@ 5453 @LENGTH@ 7
---------INS SimpleName@@MethodName:setAccessTokenValiditySeconds:[100] @TO@ MethodInvocation@@details.setAccessTokenValiditySeconds(100) @AT@ 5461 @LENGTH@ 34
------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:setAccessTokenValiditySeconds:[100] @AT@ 5491 @LENGTH@ 3
---INS VariableDeclarationStatement@@BaseClientDetails other=new BaseClientDetails(); @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5499 @LENGTH@ 50
------INS SimpleType@@BaseClientDetails @TO@ VariableDeclarationStatement@@BaseClientDetails other=new BaseClientDetails(); @AT@ 5499 @LENGTH@ 17
------INS VariableDeclarationFragment@@other=new BaseClientDetails() @TO@ VariableDeclarationStatement@@BaseClientDetails other=new BaseClientDetails(); @AT@ 5517 @LENGTH@ 31
---------INS SimpleName@@other @TO@ VariableDeclarationFragment@@other=new BaseClientDetails() @AT@ 5517 @LENGTH@ 5
---------INS ClassInstanceCreation@@BaseClientDetails[] @TO@ VariableDeclarationFragment@@other=new BaseClientDetails() @AT@ 5525 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@BaseClientDetails[] @AT@ 5525 @LENGTH@ 3
------------INS SimpleType@@BaseClientDetails @TO@ ClassInstanceCreation@@BaseClientDetails[] @AT@ 5529 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:other.setAccessTokenValiditySeconds(100) @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5552 @LENGTH@ 41
------INS MethodInvocation@@other.setAccessTokenValiditySeconds(100) @TO@ ExpressionStatement@@MethodInvocation:other.setAccessTokenValiditySeconds(100) @AT@ 5552 @LENGTH@ 40
---------INS SimpleName@@Name:other @TO@ MethodInvocation@@other.setAccessTokenValiditySeconds(100) @AT@ 5552 @LENGTH@ 5
---------INS SimpleName@@MethodName:setAccessTokenValiditySeconds:[100] @TO@ MethodInvocation@@other.setAccessTokenValiditySeconds(100) @AT@ 5558 @LENGTH@ 34
------------INS NumberLiteral@@100 @TO@ SimpleName@@MethodName:setAccessTokenValiditySeconds:[100] @AT@ 5588 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(details,other) @TO@ MethodDeclaration@@public, void, MethodName:testEqualityOfValidity,  @AT@ 5596 @LENGTH@ 29
------INS MethodInvocation@@assertEquals(details,other) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(details,other) @AT@ 5596 @LENGTH@ 28
---------INS SimpleName@@MethodName:assertEquals:[details, other] @TO@ MethodInvocation@@assertEquals(details,other) @AT@ 5596 @LENGTH@ 28
------------INS SimpleName@@details @TO@ SimpleName@@MethodName:assertEquals:[details, other] @AT@ 5609 @LENGTH@ 7
------------INS SimpleName@@other @TO@ SimpleName@@MethodName:assertEquals:[details, other] @AT@ 5618 @LENGTH@ 5


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 4580 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 4580 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4591 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4600 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 4571 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 4600 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 4612 @LENGTH@ 15


UPD TryStatement@@try {  shutdownRunningTask=null;  pendingExchanges=0;  Queue<Exchange> queue=new LinkedList<Exchange>();  Scan scan=new Scan();  List<Filter> filters=new LinkedList<Filter>();  if (endpoint.getFilters() != null) {    filters.addAll(endpoint.getFilters());  }  if (maxMessagesPerPoll > 0) {    filters.add(new PageFilter(maxMessagesPerPoll));  }  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);  if (rowModel != null && rowModel.getCells() != null) {    Set<HBaseCell> cellModels=rowModel.getCells();    for (    HBaseCell cellModel : cellModels) {      scan.addColumn(HBaseHelper.getHBaseFieldAsBytes(cellModel.getFamily()),HBaseHelper.getHBaseFieldAsBytes(cellModel.getQualifier()));    }  }  ResultScanner scanner=table.getScanner(scan);  int exchangeCount=0;  Exchange exchange=endpoint.createExchange();  exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);  CellMappingStrategy mappingStrategy=endpoint.getCellMappingStrategyFactory().getStrategy(exchange.getIn());  for (Result result=scanner.next(); (exchangeCount < maxMessagesPerPoll || maxMessagesPerPoll <= 0) && result != null; result=scanner.next()) {    HBaseData data=new HBaseData();    HBaseRow resultRow=new HBaseRow();    resultRow.apply(rowModel);    byte[] row=result.getRow();    resultRow.setId(endpoint.getCamelContext().getTypeConverter().convertTo(rowModel.getRowType(),row));    List<KeyValue> keyValues=result.list();    if (keyValues != null) {      Set<HBaseCell> cellModels=rowModel.getCells();      if (cellModels.size() > 0) {        for (        HBaseCell modelCell : cellModels) {          HBaseCell resultCell=new HBaseCell();          String family=modelCell.getFamily();          String column=modelCell.getQualifier();          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(modelCell.getValueType(),result.getValue(HBaseHelper.getHBaseFieldAsBytes(family),HBaseHelper.getHBaseFieldAsBytes(column))));          resultCell.setFamily(modelCell.getFamily());          resultCell.setQualifier(modelCell.getQualifier());          resultRow.getCells().add(resultCell);        }      } else {        for (        KeyValue keyValue : keyValues) {          String qualifier=new String(keyValue.getQualifier());          String family=new String(keyValue.getFamily());          HBaseCell resultCell=new HBaseCell();          resultCell.setFamily(family);          resultCell.setQualifier(qualifier);          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(String.class,keyValue.getValue()));          resultRow.getCells().add(resultCell);        }      }      data.getRows().add(resultRow);      exchange=endpoint.createExchange();      exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);      mappingStrategy.applyScanResults(exchange.getIn(),data);      exchange.getIn().setHeader(HbaseAttribute.HBASE_MARKED_ROW_ID.asHeader(),result.getRow());      queue.add(exchange);      exchangeCount++;    }  }  scanner.close();  return queue.isEmpty() ? 0 : processBatch(CastUtils.cast(queue));}  finally {  table.close();} @TO@ try {  shutdownRunningTask=null;  pendingExchanges=0;  Queue<Exchange> queue=new LinkedList<Exchange>();  Scan scan=new Scan();  List<Filter> filters=new LinkedList<Filter>();  if (endpoint.getFilters() != null) {    filters.addAll(endpoint.getFilters());  }  if (maxMessagesPerPoll > 0) {    filters.add(new PageFilter(maxMessagesPerPoll));  }  if (!filters.isEmpty()) {    Filter compoundFilter=new FilterList(filters);    scan.setFilter(compoundFilter);  }  if (rowModel != null && rowModel.getCells() != null) {    Set<HBaseCell> cellModels=rowModel.getCells();    for (    HBaseCell cellModel : cellModels) {      scan.addColumn(HBaseHelper.getHBaseFieldAsBytes(cellModel.getFamily()),HBaseHelper.getHBaseFieldAsBytes(cellModel.getQualifier()));    }  }  ResultScanner scanner=table.getScanner(scan);  int exchangeCount=0;  Exchange exchange=endpoint.createExchange();  exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);  CellMappingStrategy mappingStrategy=endpoint.getCellMappingStrategyFactory().getStrategy(exchange.getIn());  for (Result result=scanner.next(); (exchangeCount < maxMessagesPerPoll || maxMessagesPerPoll <= 0) && result != null; result=scanner.next()) {    HBaseData data=new HBaseData();    HBaseRow resultRow=new HBaseRow();    resultRow.apply(rowModel);    byte[] row=result.getRow();    resultRow.setId(endpoint.getCamelContext().getTypeConverter().convertTo(rowModel.getRowType(),row));    List<KeyValue> keyValues=result.list();    if (keyValues != null) {      Set<HBaseCell> cellModels=rowModel.getCells();      if (cellModels.size() > 0) {        for (        HBaseCell modelCell : cellModels) {          HBaseCell resultCell=new HBaseCell();          String family=modelCell.getFamily();          String column=modelCell.getQualifier();          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(modelCell.getValueType(),result.getValue(HBaseHelper.getHBaseFieldAsBytes(family),HBaseHelper.getHBaseFieldAsBytes(column))));          resultCell.setFamily(modelCell.getFamily());          resultCell.setQualifier(modelCell.getQualifier());          resultRow.getCells().add(resultCell);        }      } else {        for (        KeyValue keyValue : keyValues) {          String qualifier=new String(keyValue.getQualifier());          String family=new String(keyValue.getFamily());          HBaseCell resultCell=new HBaseCell();          resultCell.setFamily(family);          resultCell.setQualifier(qualifier);          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(String.class,keyValue.getValue()));          resultRow.getCells().add(resultCell);        }      }      data.getRows().add(resultRow);      exchange=endpoint.createExchange();      exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);      mappingStrategy.applyScanResults(exchange.getIn(),data);      exchange.getIn().setHeader(HbaseAttribute.HBASE_MARKED_ROW_ID.asHeader(),result.getRow());      queue.add(exchange);      exchangeCount++;    }  }  scanner.close();  return queue.isEmpty() ? 0 : processBatch(CastUtils.cast(queue));}  finally {  table.close();} @AT@ 2753 @LENGTH@ 4612
---INS IfStatement@@if (!filters.isEmpty()) {  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @TO@ TryStatement@@try {  shutdownRunningTask=null;  pendingExchanges=0;  Queue<Exchange> queue=new LinkedList<Exchange>();  Scan scan=new Scan();  List<Filter> filters=new LinkedList<Filter>();  if (endpoint.getFilters() != null) {    filters.addAll(endpoint.getFilters());  }  if (maxMessagesPerPoll > 0) {    filters.add(new PageFilter(maxMessagesPerPoll));  }  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);  if (rowModel != null && rowModel.getCells() != null) {    Set<HBaseCell> cellModels=rowModel.getCells();    for (    HBaseCell cellModel : cellModels) {      scan.addColumn(HBaseHelper.getHBaseFieldAsBytes(cellModel.getFamily()),HBaseHelper.getHBaseFieldAsBytes(cellModel.getQualifier()));    }  }  ResultScanner scanner=table.getScanner(scan);  int exchangeCount=0;  Exchange exchange=endpoint.createExchange();  exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);  CellMappingStrategy mappingStrategy=endpoint.getCellMappingStrategyFactory().getStrategy(exchange.getIn());  for (Result result=scanner.next(); (exchangeCount < maxMessagesPerPoll || maxMessagesPerPoll <= 0) && result != null; result=scanner.next()) {    HBaseData data=new HBaseData();    HBaseRow resultRow=new HBaseRow();    resultRow.apply(rowModel);    byte[] row=result.getRow();    resultRow.setId(endpoint.getCamelContext().getTypeConverter().convertTo(rowModel.getRowType(),row));    List<KeyValue> keyValues=result.list();    if (keyValues != null) {      Set<HBaseCell> cellModels=rowModel.getCells();      if (cellModels.size() > 0) {        for (        HBaseCell modelCell : cellModels) {          HBaseCell resultCell=new HBaseCell();          String family=modelCell.getFamily();          String column=modelCell.getQualifier();          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(modelCell.getValueType(),result.getValue(HBaseHelper.getHBaseFieldAsBytes(family),HBaseHelper.getHBaseFieldAsBytes(column))));          resultCell.setFamily(modelCell.getFamily());          resultCell.setQualifier(modelCell.getQualifier());          resultRow.getCells().add(resultCell);        }      } else {        for (        KeyValue keyValue : keyValues) {          String qualifier=new String(keyValue.getQualifier());          String family=new String(keyValue.getFamily());          HBaseCell resultCell=new HBaseCell();          resultCell.setFamily(family);          resultCell.setQualifier(qualifier);          resultCell.setValue(endpoint.getCamelContext().getTypeConverter().convertTo(String.class,keyValue.getValue()));          resultRow.getCells().add(resultCell);        }      }      data.getRows().add(resultRow);      exchange=endpoint.createExchange();      exchange.getIn().setHeader(CellMappingStrategyFactory.STRATEGY,CellMappingStrategyFactory.BODY);      mappingStrategy.applyScanResults(exchange.getIn(),data);      exchange.getIn().setHeader(HbaseAttribute.HBASE_MARKED_ROW_ID.asHeader(),result.getRow());      queue.add(exchange);      exchangeCount++;    }  }  scanner.close();  return queue.isEmpty() ? 0 : processBatch(CastUtils.cast(queue));}  finally {  table.close();} @AT@ 3249 @LENGTH@ 147
------INS PrefixExpression@@!filters.isEmpty() @TO@ IfStatement@@if (!filters.isEmpty()) {  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @AT@ 3253 @LENGTH@ 18
---------INS Operator@@! @TO@ PrefixExpression@@!filters.isEmpty() @AT@ 3253 @LENGTH@ 1
---------INS MethodInvocation@@filters.isEmpty() @TO@ PrefixExpression@@!filters.isEmpty() @AT@ 3254 @LENGTH@ 17
------------INS SimpleName@@Name:filters @TO@ MethodInvocation@@filters.isEmpty() @AT@ 3254 @LENGTH@ 7
------------INS SimpleName@@MethodName:isEmpty:[] @TO@ MethodInvocation@@filters.isEmpty() @AT@ 3262 @LENGTH@ 9
------INS Block@@ThenBody:{  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @TO@ IfStatement@@if (!filters.isEmpty()) {  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @AT@ 3272 @LENGTH@ 124
---------MOV VariableDeclarationStatement@@Filter compoundFilter=new FilterList(filters); @TO@ Block@@ThenBody:{  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @AT@ 3248 @LENGTH@ 48
---------MOV ExpressionStatement@@MethodInvocation:scan.setFilter(compoundFilter) @TO@ Block@@ThenBody:{  Filter compoundFilter=new FilterList(filters);  scan.setFilter(compoundFilter);} @AT@ 3309 @LENGTH@ 31


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"")) @AT@ 1901 @LENGTH@ 114
---UPD MethodInvocation@@assertTrue(json.contains("\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"")) @AT@ 1901 @LENGTH@ 113
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"")] @AT@ 1901 @LENGTH@ 113
---------UPD MethodInvocation@@json.contains("\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\"") @TO@ json.contains("\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"") @AT@ 1912 @LENGTH@ 101
------------UPD SimpleName@@MethodName:contains:["\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\""] @AT@ 1917 @LENGTH@ 96
---------------UPD StringLiteral@@"\"block\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"boolean\"" @TO@ "\"timeout\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"" @AT@ 1926 @LENGTH@ 86


UPD FieldDeclaration@@private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.http_interface"] @TO@ private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.http-interface"] @AT@ 3142 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RUNTIME_CAPABILITY_NAME="org.wildfly.management.http_interface" @TO@ RUNTIME_CAPABILITY_NAME="org.wildfly.management.http-interface" @AT@ 3170 @LENGTH@ 65
------UPD StringLiteral@@"org.wildfly.management.http_interface" @TO@ "org.wildfly.management.http-interface" @AT@ 3196 @LENGTH@ 39


INS MethodDeclaration@@Future<Page<User>>, MethodName:findAsync, Pageable pageable,  @TO@ TypeDeclaration@@[static]UserRepository, [Repository<User,Integer>] @AT@ 2187 @LENGTH@ 29
---INS ParameterizedType@@Future<Page<User>> @TO@ MethodDeclaration@@Future<Page<User>>, MethodName:findAsync, Pageable pageable,  @AT@ 2168 @LENGTH@ 18
------INS SimpleType@@Future @TO@ ParameterizedType@@Future<Page<User>> @AT@ 2168 @LENGTH@ 6
------INS ParameterizedType@@Page<User> @TO@ ParameterizedType@@Future<Page<User>> @AT@ 2175 @LENGTH@ 10
---------INS SimpleType@@Page @TO@ ParameterizedType@@Page<User> @AT@ 2175 @LENGTH@ 4
---------INS SimpleType@@User @TO@ ParameterizedType@@Page<User> @AT@ 2180 @LENGTH@ 4
---INS SimpleName@@MethodName:findAsync @TO@ MethodDeclaration@@Future<Page<User>>, MethodName:findAsync, Pageable pageable,  @AT@ 2187 @LENGTH@ 9
---INS SingleVariableDeclaration@@Pageable pageable @TO@ MethodDeclaration@@Future<Page<User>>, MethodName:findAsync, Pageable pageable,  @AT@ 2197 @LENGTH@ 17
------INS SimpleType@@Pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 2197 @LENGTH@ 8
------INS SimpleName@@pageable @TO@ SingleVariableDeclaration@@Pageable pageable @AT@ 2206 @LENGTH@ 8


INS FieldDeclaration@@Map<String,SampleUser>, [relatedUsers] @TO@ TypeDeclaration@@[@JsonAutoDetect(fieldVisibility=Visibility.ANY), static]SampleUser,  @AT@ 3978 @LENGTH@ 37
---INS ParameterizedType@@Map<String,SampleUser> @TO@ FieldDeclaration@@Map<String,SampleUser>, [relatedUsers] @AT@ 3978 @LENGTH@ 23
------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,SampleUser> @AT@ 3978 @LENGTH@ 3
------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,SampleUser> @AT@ 3982 @LENGTH@ 6
------INS SimpleType@@SampleUser @TO@ ParameterizedType@@Map<String,SampleUser> @AT@ 3990 @LENGTH@ 10
---INS VariableDeclarationFragment@@relatedUsers @TO@ FieldDeclaration@@Map<String,SampleUser>, [relatedUsers] @AT@ 4002 @LENGTH@ 12
------INS SimpleName@@relatedUsers @TO@ VariableDeclarationFragment@@relatedUsers @AT@ 4002 @LENGTH@ 12


INS TryStatement@@try {  memoryOutputStream.writeTo(fos);} catch (IOException e) {  fos.close();  throw e;} @TO@ MethodDeclaration@@protected, void, MethodName:thresholdReached, IOException,  @AT@ 6036 @LENGTH@ 139
---MOV ExpressionStatement@@MethodInvocation:memoryOutputStream.writeTo(fos) @TO@ TryStatement@@try {  memoryOutputStream.writeTo(fos);} catch (IOException e) {  fos.close();  throw e;} @AT@ 5999 @LENGTH@ 32
---INS CatchClause@@catch (IOException e) {  fos.close();  throw e;} @TO@ TryStatement@@try {  memoryOutputStream.writeTo(fos);} catch (IOException e) {  fos.close();  throw e;} @AT@ 6097 @LENGTH@ 78
------INS SingleVariableDeclaration@@IOException e @TO@ CatchClause@@catch (IOException e) {  fos.close();  throw e;} @AT@ 6104 @LENGTH@ 13
---------INS SimpleType@@IOException @TO@ SingleVariableDeclaration@@IOException e @AT@ 6104 @LENGTH@ 11
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@IOException e @AT@ 6116 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:fos.close() @TO@ CatchClause@@catch (IOException e) {  fos.close();  throw e;} @AT@ 6132 @LENGTH@ 12
---------INS MethodInvocation@@fos.close() @TO@ ExpressionStatement@@MethodInvocation:fos.close() @AT@ 6132 @LENGTH@ 11
------------INS SimpleName@@Name:fos @TO@ MethodInvocation@@fos.close() @AT@ 6132 @LENGTH@ 3
------------INS SimpleName@@MethodName:close:[] @TO@ MethodInvocation@@fos.close() @AT@ 6136 @LENGTH@ 7
------INS ThrowStatement@@SimpleName:e @TO@ CatchClause@@catch (IOException e) {  fos.close();  throw e;} @AT@ 6157 @LENGTH@ 8
---------INS SimpleName@@e @TO@ ThrowStatement@@SimpleName:e @AT@ 6163 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue("result List must be empty",((List)result).isEmpty()) @TO@ MethodInvocation:assertTrue("result List must be empty",((List<?>)result).isEmpty()) @AT@ 4976 @LENGTH@ 67
---UPD MethodInvocation@@assertTrue("result List must be empty",((List)result).isEmpty()) @TO@ assertTrue("result List must be empty",((List<?>)result).isEmpty()) @AT@ 4976 @LENGTH@ 66
------UPD SimpleName@@MethodName:assertTrue:["result List must be empty", ((List)result).isEmpty()] @TO@ MethodName:assertTrue:["result List must be empty", ((List<?>)result).isEmpty()] @AT@ 4976 @LENGTH@ 66
---------UPD MethodInvocation@@((List)result).isEmpty() @TO@ ((List<?>)result).isEmpty() @AT@ 5016 @LENGTH@ 25
------------UPD ParenthesizedExpression@@((List)result) @TO@ ((List<?>)result) @AT@ 5016 @LENGTH@ 15
---------------UPD CastExpression@@(List)result @TO@ (List<?>)result @AT@ 5017 @LENGTH@ 13
------------------INS ParameterizedType@@List<?> @TO@ CastExpression@@(List)result @AT@ 5018 @LENGTH@ 7
---------------------INS SimpleType@@List @TO@ ParameterizedType@@List<?> @AT@ 5018 @LENGTH@ 4
---------------------INS WildcardType@@? @TO@ ParameterizedType@@List<?> @AT@ 5023 @LENGTH@ 1
------------------DEL SimpleType@@List @AT@ 5018 @LENGTH@ 4


UPD IfStatement@@if (part.getProperty().getType() != String.class) {  throw new IllegalArgumentException(String.format("part %s must be of type String but was %s",part.getProperty(),part.getType()));} @TO@ if (path.getType() != String.class) {  throw new IllegalArgumentException(String.format("Part %s must be of type String but was %s",path,path.getType()));} @AT@ 9423 @LENGTH@ 201
---UPD InfixExpression@@part.getProperty().getType() != String.class @TO@ path.getType() != String.class @AT@ 9427 @LENGTH@ 44
------UPD MethodInvocation@@part.getProperty().getType() @TO@ path.getType() @AT@ 9427 @LENGTH@ 28
---------DEL MethodInvocation@@MethodName:getProperty:[] @AT@ 9427 @LENGTH@ 18
---------UPD SimpleName@@Name:part @TO@ Name:path @AT@ 9427 @LENGTH@ 4
---UPD Block@@ThenBody:{  throw new IllegalArgumentException(String.format("part %s must be of type String but was %s",part.getProperty(),part.getType()));} @TO@ ThenBody:{  throw new IllegalArgumentException(String.format("Part %s must be of type String but was %s",path,path.getType()));} @AT@ 9473 @LENGTH@ 151
------UPD ThrowStatement@@ClassInstanceCreation:new IllegalArgumentException(String.format("part %s must be of type String but was %s",part.getProperty(),part.getType())) @TO@ ClassInstanceCreation:new IllegalArgumentException(String.format("Part %s must be of type String but was %s",path,path.getType())) @AT@ 9480 @LENGTH@ 138
---------UPD ClassInstanceCreation@@IllegalArgumentException[String.format("part %s must be of type String but was %s",part.getProperty(),part.getType())] @TO@ IllegalArgumentException[String.format("Part %s must be of type String but was %s",path,path.getType())] @AT@ 9486 @LENGTH@ 131
------------UPD MethodInvocation@@String.format("part %s must be of type String but was %s",part.getProperty(),part.getType()) @TO@ String.format("Part %s must be of type String but was %s",path,path.getType()) @AT@ 9515 @LENGTH@ 101
---------------UPD SimpleName@@MethodName:format:["part %s must be of type String but was %s", part.getProperty(), part.getType()] @TO@ MethodName:format:["Part %s must be of type String but was %s", path, path.getType()] @AT@ 9522 @LENGTH@ 94
------------------UPD StringLiteral@@"part %s must be of type String but was %s" @TO@ "Part %s must be of type String but was %s" @AT@ 9529 @LENGTH@ 43
------------------DEL MethodInvocation@@part.getProperty() @AT@ 9581 @LENGTH@ 18
---------------------DEL SimpleName@@Name:part @AT@ 9581 @LENGTH@ 4
---------------------DEL SimpleName@@MethodName:getProperty:[] @AT@ 9586 @LENGTH@ 13
------------------UPD MethodInvocation@@part.getType() @TO@ path.getType() @AT@ 9601 @LENGTH@ 14
---------------------UPD SimpleName@@Name:part @TO@ Name:path @AT@ 9601 @LENGTH@ 4
------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:format:["part %s must be of type String but was %s", part.getProperty(), part.getType()] @AT@ 9683 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:MessagingLogger.MESSAGING_LOGGER.noMatchingExpiryAddress(expiryAddress.asString(),addressSetting) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.noMatchingExpiryAddress(expiryAddress.asString(),addressSetting) @AT@ 4321 @LENGTH@ 99
---UPD MethodInvocation@@MessagingLogger.MESSAGING_LOGGER.noMatchingExpiryAddress(expiryAddress.asString(),addressSetting) @TO@ MessagingLogger.ROOT_LOGGER.noMatchingExpiryAddress(expiryAddress.asString(),addressSetting) @AT@ 4321 @LENGTH@ 98
------UPD QualifiedName@@Name:MessagingLogger.MESSAGING_LOGGER @TO@ Name:MessagingLogger.ROOT_LOGGER @AT@ 4321 @LENGTH@ 32


UPD MethodDeclaration@@List<Cinema>, MethodName:findByVisitedNameOrBlockbusterOfTheWeekTitle, String location, String title,  @TO@ List<Cinema>, MethodName:findByVisitedNameOrBlockbusterOfTheWeekName, String location, String name,  @AT@ 1949 @LENGTH@ 76
---UPD SimpleName@@MethodName:findByVisitedNameOrBlockbusterOfTheWeekTitle @TO@ MethodName:findByVisitedNameOrBlockbusterOfTheWeekName @AT@ 1949 @LENGTH@ 44
---UPD SingleVariableDeclaration@@String title @TO@ String name @AT@ 2011 @LENGTH@ 12
------UPD SimpleName@@title @TO@ name @AT@ 2018 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:ControllerLogger.MGMT_OP_LOGGER.infof("Adding remove step for child at %s",child) @TO@ MethodInvocation:ControllerLogger.MGMT_OP_LOGGER.debugf("Adding remove step for child at %s",child) @AT@ 7000 @LENGTH@ 83
---UPD MethodInvocation@@ControllerLogger.MGMT_OP_LOGGER.infof("Adding remove step for child at %s",child) @TO@ ControllerLogger.MGMT_OP_LOGGER.debugf("Adding remove step for child at %s",child) @AT@ 7000 @LENGTH@ 82
------UPD SimpleName@@MethodName:infof:["Adding remove step for child at %s", child] @TO@ MethodName:debugf:["Adding remove step for child at %s", child] @AT@ 7032 @LENGTH@ 50


INS IfStatement@@if (file == null) {  throw new RuntimeException("Artifact not found.");} @TO@ MethodDeclaration@@public, JavaArchive, MethodName:artifact, String gav, IOException, ModuleLoadException,  @AT@ 2190 @LENGTH@ 92
---INS InfixExpression@@file == null @TO@ IfStatement@@if (file == null) {  throw new RuntimeException("Artifact not found.");} @AT@ 2194 @LENGTH@ 12
------INS SimpleName@@file @TO@ InfixExpression@@file == null @AT@ 2194 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@file == null @AT@ 2198 @LENGTH@ 2
------INS NullLiteral@@null @TO@ InfixExpression@@file == null @AT@ 2202 @LENGTH@ 4
---INS Block@@ThenBody:{  throw new RuntimeException("Artifact not found.");} @TO@ IfStatement@@if (file == null) {  throw new RuntimeException("Artifact not found.");} @AT@ 2208 @LENGTH@ 74
------INS ThrowStatement@@ClassInstanceCreation:new RuntimeException("Artifact not found.") @TO@ Block@@ThenBody:{  throw new RuntimeException("Artifact not found.");} @AT@ 2222 @LENGTH@ 50
---------INS ClassInstanceCreation@@RuntimeException["Artifact not found."] @TO@ ThrowStatement@@ClassInstanceCreation:new RuntimeException("Artifact not found.") @AT@ 2228 @LENGTH@ 43
------------INS New@@new @TO@ ClassInstanceCreation@@RuntimeException["Artifact not found."] @AT@ 2228 @LENGTH@ 3
------------INS SimpleType@@RuntimeException @TO@ ClassInstanceCreation@@RuntimeException["Artifact not found."] @AT@ 2232 @LENGTH@ 16
------------INS StringLiteral@@"Artifact not found." @TO@ ClassInstanceCreation@@RuntimeException["Artifact not found."] @AT@ 2249 @LENGTH@ 21


UPD TryStatement@@try {  Object newProperty=expression.evaluate(exchange,Object.class);  exchange.setProperty(propertyName,newProperty);} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newProperty=expression.evaluate(exchange,Object.class);  if (exchange.getException() != null) {    callback.done(true);    return true;  }  exchange.setProperty(propertyName,newProperty);} catch (Exception e) {  exchange.setException(e);} @AT@ 1860 @LENGTH@ 224
---INS IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @TO@ TryStatement@@try {  Object newProperty=expression.evaluate(exchange,Object.class);  exchange.setProperty(propertyName,newProperty);} catch (Exception e) {  exchange.setException(e);} @AT@ 1957 @LENGTH@ 194
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 1961 @LENGTH@ 31
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 1961 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 1961 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 1970 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getException() != null @AT@ 1984 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 1988 @LENGTH@ 4
------INS Block@@ThenBody:{  callback.done(true);  return true;} @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 1994 @LENGTH@ 157
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2088 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 2088 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 2088 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 2097 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 2102 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2125 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2132 @LENGTH@ 4


UPD ExpressionStatement@@Assignment:found=s.startsWith("\"" + group + "\":") @TO@ Assignment:found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2155 @LENGTH@ 43
---UPD Assignment@@found=s.startsWith("\"" + group + "\":") @TO@ found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2155 @LENGTH@ 42
------INS InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @TO@ Assignment@@found=s.startsWith("\"" + group + "\":") @AT@ 2163 @LENGTH@ 53
---------MOV MethodInvocation@@s.startsWith("\"" + group + "\":") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2163 @LENGTH@ 34
---------INS Operator@@&& @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2197 @LENGTH@ 2
---------INS MethodInvocation@@s.endsWith("{") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2201 @LENGTH@ 15
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.endsWith("{") @AT@ 2201 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["{"] @TO@ MethodInvocation@@s.endsWith("{") @AT@ 2203 @LENGTH@ 13
---------------INS StringLiteral@@"{" @TO@ SimpleName@@MethodName:endsWith:["{"] @AT@ 2212 @LENGTH@ 3


INS MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @TO@ TypeDeclaration@@[public, static]JsonSchemaProperty, AbstractJsonSchemaProperty<JsonSchemaProperty> @AT@ 11245 @LENGTH@ 143
---INS Modifier@@public @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11245 @LENGTH@ 6
---INS SimpleType@@JsonSchemaProperty @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11252 @LENGTH@ 18
---INS SimpleName@@MethodName:asAssociation @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11271 @LENGTH@ 13
---INS ExpressionStatement@@Assignment:this.items=null @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11293 @LENGTH@ 18
------INS Assignment@@this.items=null @TO@ ExpressionStatement@@Assignment:this.items=null @AT@ 11293 @LENGTH@ 17
---------INS FieldAccess@@this.items @TO@ Assignment@@this.items=null @AT@ 11293 @LENGTH@ 10
------------INS ThisExpression@@this @TO@ FieldAccess@@this.items @AT@ 11293 @LENGTH@ 4
------------INS SimpleName@@items @TO@ FieldAccess@@this.items @AT@ 11298 @LENGTH@ 5
---------INS Operator@@= @TO@ Assignment@@this.items=null @AT@ 11303 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@this.items=null @AT@ 11306 @LENGTH@ 4
---INS ExpressionStatement@@Assignment:this.uniqueItems=null @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11315 @LENGTH@ 24
------INS Assignment@@this.uniqueItems=null @TO@ ExpressionStatement@@Assignment:this.uniqueItems=null @AT@ 11315 @LENGTH@ 23
---------INS FieldAccess@@this.uniqueItems @TO@ Assignment@@this.uniqueItems=null @AT@ 11315 @LENGTH@ 16
------------INS ThisExpression@@this @TO@ FieldAccess@@this.uniqueItems @AT@ 11315 @LENGTH@ 4
------------INS SimpleName@@uniqueItems @TO@ FieldAccess@@this.uniqueItems @AT@ 11320 @LENGTH@ 11
---------INS Operator@@= @TO@ Assignment@@this.uniqueItems=null @AT@ 11331 @LENGTH@ 1
---------INS NullLiteral@@null @TO@ Assignment@@this.uniqueItems=null @AT@ 11334 @LENGTH@ 4
---INS ReturnStatement@@MethodInvocation:withFormat(JsonSchemaFormat.URI) @TO@ MethodDeclaration@@public, JsonSchemaProperty, MethodName:asAssociation,  @AT@ 11344 @LENGTH@ 40
------INS MethodInvocation@@withFormat(JsonSchemaFormat.URI) @TO@ ReturnStatement@@MethodInvocation:withFormat(JsonSchemaFormat.URI) @AT@ 11351 @LENGTH@ 32
---------INS SimpleName@@MethodName:withFormat:[JsonSchemaFormat.URI] @TO@ MethodInvocation@@withFormat(JsonSchemaFormat.URI) @AT@ 11351 @LENGTH@ 32
------------INS QualifiedName@@JsonSchemaFormat.URI @TO@ SimpleName@@MethodName:withFormat:[JsonSchemaFormat.URI] @AT@ 11362 @LENGTH@ 20
---------------INS SimpleName@@JsonSchemaFormat @TO@ QualifiedName@@JsonSchemaFormat.URI @AT@ 11362 @LENGTH@ 16
---------------INS SimpleName@@URI @TO@ QualifiedName@@JsonSchemaFormat.URI @AT@ 11379 @LENGTH@ 3


INS IfStatement@@if (type == ModelType.STRING) {  attribute.setAllowNull(true);} @TO@ MethodDeclaration@@public, static, AttributeDefinition, MethodName:createMetric, String name, ModelType type, String groupName,  @AT@ 4216 @LENGTH@ 83
---INS InfixExpression@@type == ModelType.STRING @TO@ IfStatement@@if (type == ModelType.STRING) {  attribute.setAllowNull(true);} @AT@ 4220 @LENGTH@ 24
------INS SimpleName@@type @TO@ InfixExpression@@type == ModelType.STRING @AT@ 4220 @LENGTH@ 4
------INS Operator@@== @TO@ InfixExpression@@type == ModelType.STRING @AT@ 4224 @LENGTH@ 2
------INS QualifiedName@@ModelType.STRING @TO@ InfixExpression@@type == ModelType.STRING @AT@ 4228 @LENGTH@ 16
---------INS SimpleName@@ModelType @TO@ QualifiedName@@ModelType.STRING @AT@ 4228 @LENGTH@ 9
---------INS SimpleName@@STRING @TO@ QualifiedName@@ModelType.STRING @AT@ 4238 @LENGTH@ 6
---INS Block@@ThenBody:{  attribute.setAllowNull(true);} @TO@ IfStatement@@if (type == ModelType.STRING) {  attribute.setAllowNull(true);} @AT@ 4246 @LENGTH@ 53
------INS ExpressionStatement@@MethodInvocation:attribute.setAllowNull(true) @TO@ Block@@ThenBody:{  attribute.setAllowNull(true);} @AT@ 4260 @LENGTH@ 29
---------INS MethodInvocation@@attribute.setAllowNull(true) @TO@ ExpressionStatement@@MethodInvocation:attribute.setAllowNull(true) @AT@ 4260 @LENGTH@ 28
------------INS SimpleName@@Name:attribute @TO@ MethodInvocation@@attribute.setAllowNull(true) @AT@ 4260 @LENGTH@ 9
------------INS SimpleName@@MethodName:setAllowNull:[true] @TO@ MethodInvocation@@attribute.setAllowNull(true) @AT@ 4270 @LENGTH@ 18
---------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:setAllowNull:[true] @AT@ 4283 @LENGTH@ 4


INS VariableDeclarationStatement@@final ServiceName jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name); @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 3148 @LENGTH@ 105
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceName jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name); @AT@ 3148 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@final ServiceName jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name); @AT@ 3154 @LENGTH@ 11
---INS VariableDeclarationFragment@@jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @TO@ VariableDeclarationStatement@@final ServiceName jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name); @AT@ 3166 @LENGTH@ 86
------INS SimpleName@@jmsTopicServiceName @TO@ VariableDeclarationFragment@@jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @AT@ 3166 @LENGTH@ 19
------INS MethodInvocation@@JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @TO@ VariableDeclarationFragment@@jmsTopicServiceName=JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @AT@ 3188 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:getJmsTopicBaseServiceName:[serviceName] @TO@ MethodInvocation@@JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @AT@ 3188 @LENGTH@ 51
------------INS SimpleName@@serviceName @TO@ MethodInvocation@@MethodName:getJmsTopicBaseServiceName:[serviceName] @AT@ 3227 @LENGTH@ 11
---------INS SimpleName@@Name:JMSServices @TO@ MethodInvocation@@JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @AT@ 3188 @LENGTH@ 11
---------INS SimpleName@@MethodName:append:[name] @TO@ MethodInvocation@@JMSServices.getJmsTopicBaseServiceName(serviceName).append(name) @AT@ 3240 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:append:[name] @AT@ 3247 @LENGTH@ 4


INS ExpressionStatement@@MethodInvocation:Thread.sleep(500) @TO@ MethodDeclaration@@public, void, MethodName:testStreamCacheToFileShouldBeDeletedInCaseOfResponse, Exception,  @AT@ 1726 @LENGTH@ 18
---INS MethodInvocation@@Thread.sleep(500) @TO@ ExpressionStatement@@MethodInvocation:Thread.sleep(500) @AT@ 1726 @LENGTH@ 17
------INS SimpleName@@Name:Thread @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 1726 @LENGTH@ 6
------INS SimpleName@@MethodName:sleep:[500] @TO@ MethodInvocation@@Thread.sleep(500) @AT@ 1733 @LENGTH@ 10
---------INS NumberLiteral@@500 @TO@ SimpleName@@MethodName:sleep:[500] @AT@ 1739 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\"")) @AT@ 1957 @LENGTH@ 89
---UPD MethodInvocation@@assertTrue(json.contains("\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\"")) @AT@ 1957 @LENGTH@ 88
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\"")] @AT@ 1957 @LENGTH@ 88
---------UPD MethodInvocation@@json.contains("\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\"") @TO@ json.contains("\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\"") @AT@ 1968 @LENGTH@ 76
------------UPD SimpleName@@MethodName:contains:["\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\""] @AT@ 1973 @LENGTH@ 71
---------------UPD StringLiteral@@"\"async\": { \"kind\": \"parameter\", \"type\": \"boolean\"" @TO@ "\"async\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"boolean\"" @AT@ 1982 @LENGTH@ 61


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor).register(registration) @AT@ 6651 @LENGTH@ 124
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor).register(registration) @AT@ 6651 @LENGTH@ 123
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor), this.parentBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[this.parentBuilderFactory, descriptor] @AT@ 6651 @LENGTH@ 100
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 6655 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 6655 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor), this.parentBuilderFactory] @AT@ 6672 @LENGTH@ 10
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor] @AT@ 6690 @LENGTH@ 33
------------DEL New@@new @AT@ 6690 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 6694 @LENGTH@ 17
------------DEL SimpleName@@descriptor @AT@ 6712 @LENGTH@ 10


UPD VariableDeclarationStatement@@String name=artifact.getArtifactId() + "-" + artifact.getVersion()+ "-swarm.jar"; @TO@ String name=this.project.getBuild().getFinalName() + "-swarm.jar"; @AT@ 16245 @LENGTH@ 84
---UPD VariableDeclarationFragment@@name=artifact.getArtifactId() + "-" + artifact.getVersion()+ "-swarm.jar" @TO@ name=this.project.getBuild().getFinalName() + "-swarm.jar" @AT@ 16252 @LENGTH@ 76
------UPD InfixExpression@@artifact.getArtifactId() + "-" + artifact.getVersion()+ "-swarm.jar" @TO@ this.project.getBuild().getFinalName() + "-swarm.jar" @AT@ 16259 @LENGTH@ 69
---------UPD MethodInvocation@@artifact.getArtifactId() @TO@ this.project.getBuild().getFinalName() @AT@ 16259 @LENGTH@ 24
------------INS MethodInvocation@@MethodName:getBuild:[] @TO@ MethodInvocation@@artifact.getArtifactId() @AT@ 16258 @LENGTH@ 23
------------INS FieldAccess@@this.project @TO@ MethodInvocation@@artifact.getArtifactId() @AT@ 16258 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.project @AT@ 16258 @LENGTH@ 4
---------------INS SimpleName@@project @TO@ FieldAccess@@this.project @AT@ 16263 @LENGTH@ 7
------------DEL SimpleName@@Name:artifact @AT@ 16259 @LENGTH@ 8
------------UPD SimpleName@@MethodName:getArtifactId:[] @TO@ MethodName:getFinalName:[] @AT@ 16268 @LENGTH@ 15
---------DEL StringLiteral@@"-" @AT@ 16286 @LENGTH@ 3
---------DEL MethodInvocation@@artifact.getVersion() @AT@ 16292 @LENGTH@ 21
------------DEL SimpleName@@Name:artifact @AT@ 16292 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getVersion:[] @AT@ 16301 @LENGTH@ 12


INS MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @TO@ TypeDeclaration@@[public]Activator, [BundleActivator, BundleTrackerCustomizer] @AT@ 12162 @LENGTH@ 322
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12162 @LENGTH@ 9
---INS Modifier@@static @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12172 @LENGTH@ 6
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12179 @LENGTH@ 7
---INS SimpleName@@MethodName:checkCompat @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12187 @LENGTH@ 11
---INS SingleVariableDeclaration@@Bundle bundle @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12199 @LENGTH@ 13
------INS SimpleType@@Bundle @TO@ SingleVariableDeclaration@@Bundle bundle @AT@ 12199 @LENGTH@ 6
------INS SimpleName@@bundle @TO@ SingleVariableDeclaration@@Bundle bundle @AT@ 12206 @LENGTH@ 6
---INS SingleVariableDeclaration@@Class<?> clazz @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12214 @LENGTH@ 14
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> clazz @AT@ 12214 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 12214 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 12220 @LENGTH@ 1
------INS SimpleName@@clazz @TO@ SingleVariableDeclaration@@Class<?> clazz @AT@ 12223 @LENGTH@ 5
---INS TryStatement@@try {  if (bundle.loadClass(clazz.getName()) != clazz) {    return false;  }} catch (Throwable t) {  return false;} @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12278 @LENGTH@ 179
------INS IfStatement@@if (bundle.loadClass(clazz.getName()) != clazz) {  return false;} @TO@ TryStatement@@try {  if (bundle.loadClass(clazz.getName()) != clazz) {    return false;  }} catch (Throwable t) {  return false;} @AT@ 12296 @LENGTH@ 93
---------INS InfixExpression@@bundle.loadClass(clazz.getName()) != clazz @TO@ IfStatement@@if (bundle.loadClass(clazz.getName()) != clazz) {  return false;} @AT@ 12300 @LENGTH@ 42
------------INS MethodInvocation@@bundle.loadClass(clazz.getName()) @TO@ InfixExpression@@bundle.loadClass(clazz.getName()) != clazz @AT@ 12300 @LENGTH@ 33
---------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.loadClass(clazz.getName()) @AT@ 12300 @LENGTH@ 6
---------------INS SimpleName@@MethodName:loadClass:[clazz.getName()] @TO@ MethodInvocation@@bundle.loadClass(clazz.getName()) @AT@ 12307 @LENGTH@ 26
------------------INS MethodInvocation@@clazz.getName() @TO@ SimpleName@@MethodName:loadClass:[clazz.getName()] @AT@ 12317 @LENGTH@ 15
---------------------INS SimpleName@@Name:clazz @TO@ MethodInvocation@@clazz.getName() @AT@ 12317 @LENGTH@ 5
---------------------INS SimpleName@@MethodName:getName:[] @TO@ MethodInvocation@@clazz.getName() @AT@ 12323 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@bundle.loadClass(clazz.getName()) != clazz @AT@ 12333 @LENGTH@ 2
------------INS SimpleName@@clazz @TO@ InfixExpression@@bundle.loadClass(clazz.getName()) != clazz @AT@ 12337 @LENGTH@ 5
---------INS Block@@ThenBody:{  return false;} @TO@ IfStatement@@if (bundle.loadClass(clazz.getName()) != clazz) {  return false;} @AT@ 12344 @LENGTH@ 45
------------INS ReturnStatement@@BooleanLiteral:false @TO@ Block@@ThenBody:{  return false;} @AT@ 12362 @LENGTH@ 13
---------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 12369 @LENGTH@ 5
------INS CatchClause@@catch (Throwable t) {  return false;} @TO@ TryStatement@@try {  if (bundle.loadClass(clazz.getName()) != clazz) {    return false;  }} catch (Throwable t) {  return false;} @AT@ 12400 @LENGTH@ 57
---------INS SingleVariableDeclaration@@Throwable t @TO@ CatchClause@@catch (Throwable t) {  return false;} @AT@ 12407 @LENGTH@ 11
------------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable t @AT@ 12407 @LENGTH@ 9
------------INS SimpleName@@t @TO@ SingleVariableDeclaration@@Throwable t @AT@ 12417 @LENGTH@ 1
---------INS ReturnStatement@@BooleanLiteral:false @TO@ CatchClause@@catch (Throwable t) {  return false;} @AT@ 12434 @LENGTH@ 13
------------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 12441 @LENGTH@ 5
---INS ReturnStatement@@BooleanLiteral:true @TO@ MethodDeclaration@@protected, static, boolean, MethodName:checkCompat, Bundle bundle, Class<?> clazz,  @AT@ 12466 @LENGTH@ 12
------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 12473 @LENGTH@ 4


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 4154 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 4154 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4165 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 4174 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 4145 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 4174 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 4186 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:template.sendBodyAndHeader("undertow:http://localhost:" + getPort() + "/users/new",body,Exchange.CONTENT_TYPE,"text/xml") @TO@ MethodInvocation:template.sendBodyAndHeader("undertow:http://localhost:{{port}}/users/new",body,Exchange.CONTENT_TYPE,"text/xml") @AT@ 1508 @LENGTH@ 125
---UPD MethodInvocation@@template.sendBodyAndHeader("undertow:http://localhost:" + getPort() + "/users/new",body,Exchange.CONTENT_TYPE,"text/xml") @TO@ template.sendBodyAndHeader("undertow:http://localhost:{{port}}/users/new",body,Exchange.CONTENT_TYPE,"text/xml") @AT@ 1508 @LENGTH@ 124
------UPD SimpleName@@MethodName:sendBodyAndHeader:["undertow:http://localhost:" + getPort() + "/users/new", body, Exchange.CONTENT_TYPE, "text/xml"] @TO@ MethodName:sendBodyAndHeader:["undertow:http://localhost:{{port}}/users/new", body, Exchange.CONTENT_TYPE, "text/xml"] @AT@ 1517 @LENGTH@ 115
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1535 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1535 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1563 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1566 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1578 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBodyAndHeader:["undertow:http://localhost:" + getPort() + "/users/new", body, Exchange.CONTENT_TYPE, "text/xml"] @AT@ 1535 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")) @AT@ 1777 @LENGTH@ 120
---UPD MethodInvocation@@assertTrue(json.contains("\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")) @AT@ 1777 @LENGTH@ 119
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"")] @AT@ 1777 @LENGTH@ 119
---------UPD MethodInvocation@@json.contains("\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\"") @TO@ json.contains("\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"") @AT@ 1788 @LENGTH@ 107
------------UPD SimpleName@@MethodName:contains:["\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\""] @AT@ 1793 @LENGTH@ 102
---------------UPD StringLiteral@@"\"synchronous\": { \"kind\": \"parameter\", \"label\": \"advanced\", \"type\": \"boolean\"" @TO@ "\"synchronous\": { \"kind\": \"parameter\", \"group\": \"advanced\", \"label\": \"advanced\", \"type\": \"boolean\"" @AT@ 1802 @LENGTH@ 92


UPD ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(client) @TO@ MethodInvocation:client.getConnectionManager().shutdown() @AT@ 4961 @LENGTH@ 37
---UPD MethodInvocation@@HttpClientUtils.closeQuietly(client) @TO@ client.getConnectionManager().shutdown() @AT@ 4961 @LENGTH@ 36
------UPD SimpleName@@Name:HttpClientUtils @TO@ Name:client @AT@ 4961 @LENGTH@ 15
------UPD SimpleName@@MethodName:closeQuietly:[client] @TO@ MethodName:shutdown:[] @AT@ 4977 @LENGTH@ 20
---------DEL SimpleName@@client @AT@ 4990 @LENGTH@ 6
------INS MethodInvocation@@MethodName:getConnectionManager:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(client) @AT@ 5016 @LENGTH@ 29


INS ExpressionStatement@@MethodInvocation:buildTask.dependsOn(t) @TO@ MethodDeclaration@@public, void, MethodName:execute, Project project,  @AT@ 955 @LENGTH@ 25
---INS MethodInvocation@@buildTask.dependsOn(t) @TO@ ExpressionStatement@@MethodInvocation:buildTask.dependsOn(t) @AT@ 955 @LENGTH@ 24
------INS SimpleName@@Name:buildTask @TO@ MethodInvocation@@buildTask.dependsOn(t) @AT@ 955 @LENGTH@ 9
------INS SimpleName@@MethodName:dependsOn:[t] @TO@ MethodInvocation@@buildTask.dependsOn(t) @AT@ 965 @LENGTH@ 14
---------INS SimpleName@@t @TO@ SimpleName@@MethodName:dependsOn:[t] @AT@ 976 @LENGTH@ 1


INS ExpressionStatement@@MethodInvocation:assertFalse(event.isFatal()) @TO@ MethodDeclaration@@public, void, MethodName:testDeleteOneQueue, Exception,  @AT@ 7719 @LENGTH@ 29
---INS MethodInvocation@@assertFalse(event.isFatal()) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(event.isFatal()) @AT@ 7719 @LENGTH@ 28
------INS SimpleName@@MethodName:assertFalse:[event.isFatal()] @TO@ MethodInvocation@@assertFalse(event.isFatal()) @AT@ 7719 @LENGTH@ 28
---------INS MethodInvocation@@event.isFatal() @TO@ SimpleName@@MethodName:assertFalse:[event.isFatal()] @AT@ 7731 @LENGTH@ 15
------------INS SimpleName@@Name:event @TO@ MethodInvocation@@event.isFatal() @AT@ 7731 @LENGTH@ 5
------------INS SimpleName@@MethodName:isFatal:[] @TO@ MethodInvocation@@event.isFatal() @AT@ 7737 @LENGTH@ 9


UPD VariableDeclarationStatement@@boolean parentIsRoute=this.getClass().isAssignableFrom(RouteDefinition.class); @TO@ boolean parentIsRoute=RouteDefinition.class.isAssignableFrom(this.getClass()); @AT@ 8408 @LENGTH@ 80
---UPD VariableDeclarationFragment@@parentIsRoute=this.getClass().isAssignableFrom(RouteDefinition.class) @TO@ parentIsRoute=RouteDefinition.class.isAssignableFrom(this.getClass()) @AT@ 8416 @LENGTH@ 71
------UPD MethodInvocation@@this.getClass().isAssignableFrom(RouteDefinition.class) @TO@ RouteDefinition.class.isAssignableFrom(this.getClass()) @AT@ 8432 @LENGTH@ 55
---------INS TypeLiteral@@RouteDefinition.class @TO@ MethodInvocation@@this.getClass().isAssignableFrom(RouteDefinition.class) @AT@ 8432 @LENGTH@ 21
---------DEL MethodInvocation@@MethodName:getClass:[] @AT@ 8432 @LENGTH@ 15
---------UPD SimpleName@@MethodName:isAssignableFrom:[RouteDefinition.class] @TO@ MethodName:getClass:[] @AT@ 8448 @LENGTH@ 39
---------INS SimpleName@@MethodName:isAssignableFrom:[this.getClass()] @TO@ MethodInvocation@@this.getClass().isAssignableFrom(RouteDefinition.class) @AT@ 8454 @LENGTH@ 33
------------INS MethodInvocation@@this.getClass() @TO@ SimpleName@@MethodName:isAssignableFrom:[this.getClass()] @AT@ 8471 @LENGTH@ 15
---------------MOV ThisExpression@@this @TO@ MethodInvocation@@this.getClass() @AT@ 8432 @LENGTH@ 4
---------------MOV SimpleName@@MethodName:isAssignableFrom:[RouteDefinition.class] @TO@ MethodInvocation@@this.getClass() @AT@ 8448 @LENGTH@ 39
------------------DEL TypeLiteral@@RouteDefinition.class @AT@ 8465 @LENGTH@ 21


UPD FieldDeclaration@@final, static, String, [ALLOWS="HEAD,GET,PUT,POST,DELETE,OPTIONS"] @TO@ static, final, String, [ALLOWS="HEAD,GET,PUT,POST,DELETE,OPTIONS"] @AT@ 1419 @LENGTH@ 64
---INS Modifier@@static @TO@ FieldDeclaration@@final, static, String, [ALLOWS="HEAD,GET,PUT,POST,DELETE,OPTIONS"] @AT@ 1419 @LENGTH@ 6
---DEL Modifier@@static @AT@ 1425 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:map.put("path",(Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()) @TO@ MethodInvocation:map.put("path",(Object)path == null ? "" : path) @AT@ 2389 @LENGTH@ 102
---UPD MethodInvocation@@map.put("path",(Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()) @TO@ map.put("path",(Object)path == null ? "" : path) @AT@ 2389 @LENGTH@ 101
------UPD SimpleName@@MethodName:put:["path", (Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()] @TO@ MethodName:put:["path", (Object)path == null ? "" : path] @AT@ 2393 @LENGTH@ 97
---------DEL CastExpression@@(Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @AT@ 2405 @LENGTH@ 84
---------INS ConditionalExpression@@(Object)path == null ? "" : path @TO@ SimpleName@@MethodName:put:["path", (Object)ServletUriComponentsBuilder.fromContextPath(request).build().getPath()] @AT@ 2498 @LENGTH@ 31
------------INS InfixExpression@@(Object)path == null @TO@ ConditionalExpression@@(Object)path == null ? "" : path @AT@ 2498 @LENGTH@ 19
---------------INS CastExpression@@(Object)path @TO@ InfixExpression@@(Object)path == null @AT@ 2498 @LENGTH@ 13
------------------MOV SimpleType@@Object @TO@ CastExpression@@(Object)path @AT@ 2406 @LENGTH@ 6
------------------INS SimpleName@@path @TO@ CastExpression@@(Object)path @AT@ 2507 @LENGTH@ 4
---------------INS Operator@@== @TO@ InfixExpression@@(Object)path == null @AT@ 2511 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@(Object)path == null @AT@ 2513 @LENGTH@ 4
------------INS StringLiteral@@"" @TO@ ConditionalExpression@@(Object)path == null ? "" : path @AT@ 2520 @LENGTH@ 2
------------INS SimpleName@@path @TO@ ConditionalExpression@@(Object)path == null ? "" : path @AT@ 2525 @LENGTH@ 4


INS IfStatement@@if (bundle.getBundleId() > 0) {  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @TO@ MethodDeclaration@@protected, boolean, MethodName:canSee, Bundle bundle, Class<?> clazz,  @AT@ 11770 @LENGTH@ 265
---INS InfixExpression@@bundle.getBundleId() > 0 @TO@ IfStatement@@if (bundle.getBundleId() > 0) {  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @AT@ 11774 @LENGTH@ 24
------INS MethodInvocation@@bundle.getBundleId() @TO@ InfixExpression@@bundle.getBundleId() > 0 @AT@ 11774 @LENGTH@ 20
---------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 11774 @LENGTH@ 6
---------INS SimpleName@@MethodName:getBundleId:[] @TO@ MethodInvocation@@bundle.getBundleId() @AT@ 11781 @LENGTH@ 13
------INS Operator@@> @TO@ InfixExpression@@bundle.getBundleId() > 0 @AT@ 11794 @LENGTH@ 1
------INS NumberLiteral@@0 @TO@ InfixExpression@@bundle.getBundleId() > 0 @AT@ 11797 @LENGTH@ 1
---INS Block@@ThenBody:{  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @TO@ IfStatement@@if (bundle.getBundleId() > 0) {  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @AT@ 11800 @LENGTH@ 235
------INS VariableDeclarationStatement@@Bundle root=bundle.getBundleContext().getBundle(0); @TO@ Block@@ThenBody:{  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @AT@ 11814 @LENGTH@ 53
---------INS SimpleType@@Bundle @TO@ VariableDeclarationStatement@@Bundle root=bundle.getBundleContext().getBundle(0); @AT@ 11814 @LENGTH@ 6
---------INS VariableDeclarationFragment@@root=bundle.getBundleContext().getBundle(0) @TO@ VariableDeclarationStatement@@Bundle root=bundle.getBundleContext().getBundle(0); @AT@ 11821 @LENGTH@ 45
------------INS SimpleName@@root @TO@ VariableDeclarationFragment@@root=bundle.getBundleContext().getBundle(0) @AT@ 11821 @LENGTH@ 4
------------INS MethodInvocation@@bundle.getBundleContext().getBundle(0) @TO@ VariableDeclarationFragment@@root=bundle.getBundleContext().getBundle(0) @AT@ 11828 @LENGTH@ 38
---------------INS MethodInvocation@@MethodName:getBundleContext:[] @TO@ MethodInvocation@@bundle.getBundleContext().getBundle(0) @AT@ 11828 @LENGTH@ 25
---------------INS SimpleName@@Name:bundle @TO@ MethodInvocation@@bundle.getBundleContext().getBundle(0) @AT@ 11828 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBundle:[0] @TO@ MethodInvocation@@bundle.getBundleContext().getBundle(0) @AT@ 11854 @LENGTH@ 12
------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:getBundle:[0] @AT@ 11864 @LENGTH@ 1
------INS IfStatement@@if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {  return checkCompat(bundle,clazz);} @TO@ Block@@ThenBody:{  Bundle root=bundle.getBundleContext().getBundle(0);  if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {    return checkCompat(bundle,clazz);  }} @AT@ 11880 @LENGTH@ 145
---------INS InfixExpression@@root != null && "org.apache.felix.connect".equals(root.getSymbolicName()) @TO@ IfStatement@@if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {  return checkCompat(bundle,clazz);} @AT@ 11884 @LENGTH@ 73
------------INS InfixExpression@@root != null @TO@ InfixExpression@@root != null && "org.apache.felix.connect".equals(root.getSymbolicName()) @AT@ 11884 @LENGTH@ 12
---------------INS SimpleName@@root @TO@ InfixExpression@@root != null @AT@ 11884 @LENGTH@ 4
---------------INS Operator@@!= @TO@ InfixExpression@@root != null @AT@ 11888 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@root != null @AT@ 11892 @LENGTH@ 4
------------INS Operator@@&& @TO@ InfixExpression@@root != null && "org.apache.felix.connect".equals(root.getSymbolicName()) @AT@ 11896 @LENGTH@ 2
------------INS MethodInvocation@@"org.apache.felix.connect".equals(root.getSymbolicName()) @TO@ InfixExpression@@root != null && "org.apache.felix.connect".equals(root.getSymbolicName()) @AT@ 11900 @LENGTH@ 57
---------------INS StringLiteral@@"org.apache.felix.connect" @TO@ MethodInvocation@@"org.apache.felix.connect".equals(root.getSymbolicName()) @AT@ 11900 @LENGTH@ 26
---------------INS SimpleName@@MethodName:equals:[root.getSymbolicName()] @TO@ MethodInvocation@@"org.apache.felix.connect".equals(root.getSymbolicName()) @AT@ 11927 @LENGTH@ 30
------------------INS MethodInvocation@@root.getSymbolicName() @TO@ SimpleName@@MethodName:equals:[root.getSymbolicName()] @AT@ 11934 @LENGTH@ 22
---------------------INS SimpleName@@Name:root @TO@ MethodInvocation@@root.getSymbolicName() @AT@ 11934 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:getSymbolicName:[] @TO@ MethodInvocation@@root.getSymbolicName() @AT@ 11939 @LENGTH@ 17
---------INS Block@@ThenBody:{  return checkCompat(bundle,clazz);} @TO@ IfStatement@@if (root != null && "org.apache.felix.connect".equals(root.getSymbolicName())) {  return checkCompat(bundle,clazz);} @AT@ 11959 @LENGTH@ 66
------------INS ReturnStatement@@MethodInvocation:checkCompat(bundle,clazz) @TO@ Block@@ThenBody:{  return checkCompat(bundle,clazz);} @AT@ 11977 @LENGTH@ 34
---------------INS MethodInvocation@@checkCompat(bundle,clazz) @TO@ ReturnStatement@@MethodInvocation:checkCompat(bundle,clazz) @AT@ 11984 @LENGTH@ 26
------------------INS SimpleName@@MethodName:checkCompat:[bundle, clazz] @TO@ MethodInvocation@@checkCompat(bundle,clazz) @AT@ 11984 @LENGTH@ 26
---------------------INS SimpleName@@bundle @TO@ SimpleName@@MethodName:checkCompat:[bundle, clazz] @AT@ 11996 @LENGTH@ 6
---------------------INS SimpleName@@clazz @TO@ SimpleName@@MethodName:checkCompat:[bundle, clazz] @AT@ 12004 @LENGTH@ 5


UPD ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Assignment:uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 7706 @LENGTH@ 16


UPD FieldDeclaration@@private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.native_interface"] @TO@ private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.native-interface"] @AT@ 2928 @LENGTH@ 96
---UPD VariableDeclarationFragment@@RUNTIME_CAPABILITY_NAME="org.wildfly.management.native_interface" @TO@ RUNTIME_CAPABILITY_NAME="org.wildfly.management.native-interface" @AT@ 2956 @LENGTH@ 67
------UPD StringLiteral@@"org.wildfly.management.native_interface" @TO@ "org.wildfly.management.native-interface" @AT@ 2982 @LENGTH@ 41


UPD ExpressionStatement@@MethodInvocation:log.info("after write, rollever state is true") @TO@ MethodInvocation:log.info("After write, rollover state is true") @AT@ 3089 @LENGTH@ 48
---UPD MethodInvocation@@log.info("after write, rollever state is true") @TO@ log.info("After write, rollover state is true") @AT@ 3089 @LENGTH@ 47
------UPD SimpleName@@MethodName:info:["after write, rollever state is true"] @TO@ MethodName:info:["After write, rollover state is true"] @AT@ 3093 @LENGTH@ 43
---------UPD StringLiteral@@"after write, rollever state is true" @TO@ "After write, rollover state is true" @AT@ 3098 @LENGTH@ 37


UPD ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(client) @TO@ MethodInvocation:client.getConnectionManager().shutdown() @AT@ 6466 @LENGTH@ 37
---UPD MethodInvocation@@HttpClientUtils.closeQuietly(client) @TO@ client.getConnectionManager().shutdown() @AT@ 6466 @LENGTH@ 36
------UPD SimpleName@@Name:HttpClientUtils @TO@ Name:client @AT@ 6466 @LENGTH@ 15
------UPD SimpleName@@MethodName:closeQuietly:[client] @TO@ MethodName:shutdown:[] @AT@ 6482 @LENGTH@ 20
---------DEL SimpleName@@client @AT@ 6495 @LENGTH@ 6
------INS MethodInvocation@@MethodName:getConnectionManager:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(client) @AT@ 6520 @LENGTH@ 29


UPD ExpressionStatement@@MethodInvocation:MetricsFactory.getMetricsInstance().init(hiveConf) @TO@ MethodInvocation:MetricsFactory.init(hiveConf) @AT@ 14552 @LENGTH@ 51
---UPD MethodInvocation@@MetricsFactory.getMetricsInstance().init(hiveConf) @TO@ MetricsFactory.init(hiveConf) @AT@ 14552 @LENGTH@ 50
------DEL MethodInvocation@@MethodName:getMetricsInstance:[] @AT@ 14552 @LENGTH@ 35


INS MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @TO@ TypeDeclaration@@[@Transactional, @ContextConfiguration(classes=JpaRepositoryConfig.class), public]JpaWebTests, CommonWebTests @AT@ 21333 @LENGTH@ 554
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21333 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21340 @LENGTH@ 4
---INS SimpleName@@MethodName:returnsLinkHeadersForHeadRequestToItemResource @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21345 @LENGTH@ 46
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21401 @LENGTH@ 9
---INS VariableDeclarationStatement@@MockHttpServletResponse response=client.request(client.discoverUnique("people")); @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21416 @LENGTH@ 83
------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=client.request(client.discoverUnique("people")); @AT@ 21416 @LENGTH@ 23
------INS VariableDeclarationFragment@@response=client.request(client.discoverUnique("people")) @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=client.request(client.discoverUnique("people")); @AT@ 21440 @LENGTH@ 58
---------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=client.request(client.discoverUnique("people")) @AT@ 21440 @LENGTH@ 8
---------INS MethodInvocation@@client.request(client.discoverUnique("people")) @TO@ VariableDeclarationFragment@@response=client.request(client.discoverUnique("people")) @AT@ 21451 @LENGTH@ 47
------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.request(client.discoverUnique("people")) @AT@ 21451 @LENGTH@ 6
------------INS SimpleName@@MethodName:request:[client.discoverUnique("people")] @TO@ MethodInvocation@@client.request(client.discoverUnique("people")) @AT@ 21458 @LENGTH@ 40
---------------INS MethodInvocation@@client.discoverUnique("people") @TO@ SimpleName@@MethodName:request:[client.discoverUnique("people")] @AT@ 21466 @LENGTH@ 31
------------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.discoverUnique("people") @AT@ 21466 @LENGTH@ 6
------------------INS SimpleName@@MethodName:discoverUnique:["people"] @TO@ MethodInvocation@@client.discoverUnique("people") @AT@ 21473 @LENGTH@ 24
---------------------INS StringLiteral@@"people" @TO@ SimpleName@@MethodName:discoverUnique:["people"] @AT@ 21488 @LENGTH@ 8
---INS VariableDeclarationStatement@@String personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href"); @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21502 @LENGTH@ 107
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href"); @AT@ 21502 @LENGTH@ 6
------INS VariableDeclarationFragment@@personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @TO@ VariableDeclarationStatement@@String personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href"); @AT@ 21509 @LENGTH@ 99
---------INS SimpleName@@personHref @TO@ VariableDeclarationFragment@@personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @AT@ 21509 @LENGTH@ 10
---------INS MethodInvocation@@JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @TO@ VariableDeclarationFragment@@personHref=JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @AT@ 21522 @LENGTH@ 86
------------INS SimpleName@@Name:JsonPath @TO@ MethodInvocation@@JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @AT@ 21522 @LENGTH@ 8
------------INS SimpleName@@MethodName:read:[response.getContentAsString(), "$._embedded.people[0]._links.self.href"] @TO@ MethodInvocation@@JsonPath.read(response.getContentAsString(),"$._embedded.people[0]._links.self.href") @AT@ 21531 @LENGTH@ 77
---------------INS MethodInvocation@@response.getContentAsString() @TO@ SimpleName@@MethodName:read:[response.getContentAsString(), "$._embedded.people[0]._links.self.href"] @AT@ 21536 @LENGTH@ 29
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 21536 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 21545 @LENGTH@ 20
---------------INS StringLiteral@@"$._embedded.people[0]._links.self.href" @TO@ SimpleName@@MethodName:read:[response.getContentAsString(), "$._embedded.people[0]._links.self.href"] @AT@ 21567 @LENGTH@ 40
---INS ExpressionStatement@@Assignment:response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21613 @LENGTH@ 115
------INS Assignment@@response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @TO@ ExpressionStatement@@Assignment:response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21613 @LENGTH@ 114
---------INS SimpleName@@response @TO@ Assignment@@response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21613 @LENGTH@ 8
---------INS Operator@@= @TO@ Assignment@@response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21621 @LENGTH@ 1
---------INS MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @TO@ Assignment@@response=mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21624 @LENGTH@ 103
------------INS MethodInvocation@@MethodName:andReturn:[] @TO@ MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21624 @LENGTH@ 89
------------INS MethodInvocation@@MethodName:andExpect:[status().isNoContent()] @TO@ MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21624 @LENGTH@ 70
---------------INS MethodInvocation@@status().isNoContent() @TO@ MethodInvocation@@MethodName:andExpect:[status().isNoContent()] @AT@ 21671 @LENGTH@ 22
------------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isNoContent() @AT@ 21671 @LENGTH@ 8
------------------INS SimpleName@@MethodName:isNoContent:[] @TO@ MethodInvocation@@status().isNoContent() @AT@ 21680 @LENGTH@ 13
------------INS MethodInvocation@@MethodName:perform:[head(personHref)] @TO@ MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21624 @LENGTH@ 29
---------------INS MethodInvocation@@head(personHref) @TO@ MethodInvocation@@MethodName:perform:[head(personHref)] @AT@ 21636 @LENGTH@ 16
------------------INS SimpleName@@MethodName:head:[personHref] @TO@ MethodInvocation@@head(personHref) @AT@ 21636 @LENGTH@ 16
---------------------INS SimpleName@@personHref @TO@ SimpleName@@MethodName:head:[personHref] @AT@ 21641 @LENGTH@ 10
------------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21624 @LENGTH@ 3
------------INS SimpleName@@MethodName:getResponse:[] @TO@ MethodInvocation@@mvc.perform(head(personHref)).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 21714 @LENGTH@ 13
---INS VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21732 @LENGTH@ 56
------INS SimpleType@@Links @TO@ VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @AT@ 21732 @LENGTH@ 5
------INS VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @TO@ VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @AT@ 21738 @LENGTH@ 49
---------INS SimpleName@@links @TO@ VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @AT@ 21738 @LENGTH@ 5
---------INS MethodInvocation@@Links.valueOf(response.getHeader("Link")) @TO@ VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @AT@ 21746 @LENGTH@ 41
------------INS SimpleName@@Name:Links @TO@ MethodInvocation@@Links.valueOf(response.getHeader("Link")) @AT@ 21746 @LENGTH@ 5
------------INS SimpleName@@MethodName:valueOf:[response.getHeader("Link")] @TO@ MethodInvocation@@Links.valueOf(response.getHeader("Link")) @AT@ 21752 @LENGTH@ 35
---------------INS MethodInvocation@@response.getHeader("Link") @TO@ SimpleName@@MethodName:valueOf:[response.getHeader("Link")] @AT@ 21760 @LENGTH@ 26
------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeader("Link") @AT@ 21760 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getHeader:["Link"] @TO@ MethodInvocation@@response.getHeader("Link") @AT@ 21769 @LENGTH@ 17
---------------------INS StringLiteral@@"Link" @TO@ SimpleName@@MethodName:getHeader:["Link"] @AT@ 21779 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("self"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21791 @LENGTH@ 44
------INS MethodInvocation@@assertThat(links.hasLink("self"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("self"),is(true)) @AT@ 21791 @LENGTH@ 43
---------INS SimpleName@@MethodName:assertThat:[links.hasLink("self"), is(true)] @TO@ MethodInvocation@@assertThat(links.hasLink("self"),is(true)) @AT@ 21791 @LENGTH@ 43
------------INS MethodInvocation@@links.hasLink("self") @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("self"), is(true)] @AT@ 21802 @LENGTH@ 21
---------------INS SimpleName@@Name:links @TO@ MethodInvocation@@links.hasLink("self") @AT@ 21802 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasLink:["self"] @TO@ MethodInvocation@@links.hasLink("self") @AT@ 21808 @LENGTH@ 15
------------------INS StringLiteral@@"self" @TO@ SimpleName@@MethodName:hasLink:["self"] @AT@ 21816 @LENGTH@ 6
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("self"), is(true)] @AT@ 21825 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21825 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21828 @LENGTH@ 4
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21825 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21828 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("person"),is(true)) @TO@ MethodDeclaration@@public, void, MethodName:returnsLinkHeadersForHeadRequestToItemResource, Exception,  @AT@ 21838 @LENGTH@ 46
------INS MethodInvocation@@assertThat(links.hasLink("person"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("person"),is(true)) @AT@ 21838 @LENGTH@ 45
---------INS SimpleName@@MethodName:assertThat:[links.hasLink("person"), is(true)] @TO@ MethodInvocation@@assertThat(links.hasLink("person"),is(true)) @AT@ 21838 @LENGTH@ 45
------------INS MethodInvocation@@links.hasLink("person") @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("person"), is(true)] @AT@ 21849 @LENGTH@ 23
---------------INS SimpleName@@Name:links @TO@ MethodInvocation@@links.hasLink("person") @AT@ 21849 @LENGTH@ 5
---------------INS SimpleName@@MethodName:hasLink:["person"] @TO@ MethodInvocation@@links.hasLink("person") @AT@ 21855 @LENGTH@ 17
------------------INS StringLiteral@@"person" @TO@ SimpleName@@MethodName:hasLink:["person"] @AT@ 21863 @LENGTH@ 8
------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("person"), is(true)] @AT@ 21874 @LENGTH@ 8
---------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 21874 @LENGTH@ 8
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 21877 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @TO@ TypeDeclaration@@[public]FileUtilsDirectoryContainsTestCase, FileBasedTestCase @AT@ 5002 @LENGTH@ 204
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5002 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5009 @LENGTH@ 4
---INS SimpleName@@MethodName:testIO466 @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5014 @LENGTH@ 9
---INS SimpleType@@IOException @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5033 @LENGTH@ 11
---INS VariableDeclarationStatement@@File fooFile=new File(directory1.getParent(),"directory1.txt"); @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5059 @LENGTH@ 66
------INS SimpleType@@File @TO@ VariableDeclarationStatement@@File fooFile=new File(directory1.getParent(),"directory1.txt"); @AT@ 5059 @LENGTH@ 4
------INS VariableDeclarationFragment@@fooFile=new File(directory1.getParent(),"directory1.txt") @TO@ VariableDeclarationStatement@@File fooFile=new File(directory1.getParent(),"directory1.txt"); @AT@ 5064 @LENGTH@ 60
---------INS SimpleName@@fooFile @TO@ VariableDeclarationFragment@@fooFile=new File(directory1.getParent(),"directory1.txt") @AT@ 5064 @LENGTH@ 7
---------INS ClassInstanceCreation@@File[directory1.getParent(), "directory1.txt"] @TO@ VariableDeclarationFragment@@fooFile=new File(directory1.getParent(),"directory1.txt") @AT@ 5074 @LENGTH@ 50
------------INS New@@new @TO@ ClassInstanceCreation@@File[directory1.getParent(), "directory1.txt"] @AT@ 5074 @LENGTH@ 3
------------INS SimpleType@@File @TO@ ClassInstanceCreation@@File[directory1.getParent(), "directory1.txt"] @AT@ 5078 @LENGTH@ 4
------------INS MethodInvocation@@directory1.getParent() @TO@ ClassInstanceCreation@@File[directory1.getParent(), "directory1.txt"] @AT@ 5083 @LENGTH@ 22
---------------INS SimpleName@@Name:directory1 @TO@ MethodInvocation@@directory1.getParent() @AT@ 5083 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getParent:[] @TO@ MethodInvocation@@directory1.getParent() @AT@ 5094 @LENGTH@ 11
------------INS StringLiteral@@"directory1.txt" @TO@ ClassInstanceCreation@@File[directory1.getParent(), "directory1.txt"] @AT@ 5107 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:assertFalse(FileUtils.directoryContains(directory1,fooFile)) @TO@ MethodDeclaration@@public, void, MethodName:testIO466, IOException,  @AT@ 5138 @LENGTH@ 62
------INS MethodInvocation@@assertFalse(FileUtils.directoryContains(directory1,fooFile)) @TO@ ExpressionStatement@@MethodInvocation:assertFalse(FileUtils.directoryContains(directory1,fooFile)) @AT@ 5138 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertFalse:[FileUtils.directoryContains(directory1,fooFile)] @TO@ MethodInvocation@@assertFalse(FileUtils.directoryContains(directory1,fooFile)) @AT@ 5138 @LENGTH@ 61
------------INS MethodInvocation@@FileUtils.directoryContains(directory1,fooFile) @TO@ SimpleName@@MethodName:assertFalse:[FileUtils.directoryContains(directory1,fooFile)] @AT@ 5150 @LENGTH@ 48
---------------INS SimpleName@@Name:FileUtils @TO@ MethodInvocation@@FileUtils.directoryContains(directory1,fooFile) @AT@ 5150 @LENGTH@ 9
---------------INS SimpleName@@MethodName:directoryContains:[directory1, fooFile] @TO@ MethodInvocation@@FileUtils.directoryContains(directory1,fooFile) @AT@ 5160 @LENGTH@ 38
------------------INS SimpleName@@directory1 @TO@ SimpleName@@MethodName:directoryContains:[directory1, fooFile] @AT@ 5178 @LENGTH@ 10
------------------INS SimpleName@@fooFile @TO@ SimpleName@@MethodName:directoryContains:[directory1, fooFile] @AT@ 5190 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @TO@ TypeDeclaration@@[public]PartTreeUnitTests,  @AT@ 19819 @LENGTH@ 412
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 19819 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 19826 @LENGTH@ 4
---INS SimpleName@@MethodName:doesNotFailOnPropertiesContainingAKeyword @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 19831 @LENGTH@ 41
---INS VariableDeclarationStatement@@PartTree partTree=new PartTree("findBySomeInfoIn",Category.class); @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 19880 @LENGTH@ 69
------INS SimpleType@@PartTree @TO@ VariableDeclarationStatement@@PartTree partTree=new PartTree("findBySomeInfoIn",Category.class); @AT@ 19880 @LENGTH@ 8
------INS VariableDeclarationFragment@@partTree=new PartTree("findBySomeInfoIn",Category.class) @TO@ VariableDeclarationStatement@@PartTree partTree=new PartTree("findBySomeInfoIn",Category.class); @AT@ 19889 @LENGTH@ 59
---------INS SimpleName@@partTree @TO@ VariableDeclarationFragment@@partTree=new PartTree("findBySomeInfoIn",Category.class) @AT@ 19889 @LENGTH@ 8
---------INS ClassInstanceCreation@@PartTree["findBySomeInfoIn", Category.class] @TO@ VariableDeclarationFragment@@partTree=new PartTree("findBySomeInfoIn",Category.class) @AT@ 19900 @LENGTH@ 48
------------INS New@@new @TO@ ClassInstanceCreation@@PartTree["findBySomeInfoIn", Category.class] @AT@ 19900 @LENGTH@ 3
------------INS SimpleType@@PartTree @TO@ ClassInstanceCreation@@PartTree["findBySomeInfoIn", Category.class] @AT@ 19904 @LENGTH@ 8
------------INS StringLiteral@@"findBySomeInfoIn" @TO@ ClassInstanceCreation@@PartTree["findBySomeInfoIn", Category.class] @AT@ 19913 @LENGTH@ 18
------------INS TypeLiteral@@Category.class @TO@ ClassInstanceCreation@@PartTree["findBySomeInfoIn", Category.class] @AT@ 19933 @LENGTH@ 14
---INS VariableDeclarationStatement@@Iterable<Part> parts=partTree.getParts(); @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 19953 @LENGTH@ 43
------INS ParameterizedType@@Iterable<Part> @TO@ VariableDeclarationStatement@@Iterable<Part> parts=partTree.getParts(); @AT@ 19953 @LENGTH@ 14
---------INS SimpleType@@Iterable @TO@ ParameterizedType@@Iterable<Part> @AT@ 19953 @LENGTH@ 8
---------INS SimpleType@@Part @TO@ ParameterizedType@@Iterable<Part> @AT@ 19962 @LENGTH@ 4
------INS VariableDeclarationFragment@@parts=partTree.getParts() @TO@ VariableDeclarationStatement@@Iterable<Part> parts=partTree.getParts(); @AT@ 19968 @LENGTH@ 27
---------INS SimpleName@@parts @TO@ VariableDeclarationFragment@@parts=partTree.getParts() @AT@ 19968 @LENGTH@ 5
---------INS MethodInvocation@@partTree.getParts() @TO@ VariableDeclarationFragment@@parts=partTree.getParts() @AT@ 19976 @LENGTH@ 19
------------INS SimpleName@@Name:partTree @TO@ MethodInvocation@@partTree.getParts() @AT@ 19976 @LENGTH@ 8
------------INS SimpleName@@MethodName:getParts:[] @TO@ MethodInvocation@@partTree.getParts() @AT@ 19985 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(parts,is(Matchers.<Part>iterableWithSize(1))) @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 20000 @LENGTH@ 59
------INS MethodInvocation@@assertThat(parts,is(Matchers.<Part>iterableWithSize(1))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(parts,is(Matchers.<Part>iterableWithSize(1))) @AT@ 20000 @LENGTH@ 58
---------INS SimpleName@@MethodName:assertThat:[parts, is(Matchers.<Part>iterableWithSize(1))] @TO@ MethodInvocation@@assertThat(parts,is(Matchers.<Part>iterableWithSize(1))) @AT@ 20000 @LENGTH@ 58
------------INS SimpleName@@parts @TO@ SimpleName@@MethodName:assertThat:[parts, is(Matchers.<Part>iterableWithSize(1))] @AT@ 20011 @LENGTH@ 5
------------INS MethodInvocation@@is(Matchers.<Part>iterableWithSize(1)) @TO@ SimpleName@@MethodName:assertThat:[parts, is(Matchers.<Part>iterableWithSize(1))] @AT@ 20018 @LENGTH@ 39
---------------INS SimpleName@@MethodName:is:[Matchers.<Part>iterableWithSize(1)] @TO@ MethodInvocation@@is(Matchers.<Part>iterableWithSize(1)) @AT@ 20018 @LENGTH@ 39
------------------INS MethodInvocation@@Matchers.<Part>iterableWithSize(1) @TO@ SimpleName@@MethodName:is:[Matchers.<Part>iterableWithSize(1)] @AT@ 20021 @LENGTH@ 35
---------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.<Part>iterableWithSize(1) @AT@ 20021 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:iterableWithSize:[1] @TO@ MethodInvocation@@Matchers.<Part>iterableWithSize(1) @AT@ 20037 @LENGTH@ 19
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:iterableWithSize:[1] @AT@ 20054 @LENGTH@ 1
---------------INS SimpleName@@MethodName:is:[Matchers.<Part>iterableWithSize(1)] @TO@ MethodInvocation@@is(Matchers.<Part>iterableWithSize(1)) @AT@ 20018 @LENGTH@ 39
------------------INS MethodInvocation@@Matchers.<Part>iterableWithSize(1) @TO@ SimpleName@@MethodName:is:[Matchers.<Part>iterableWithSize(1)] @AT@ 20021 @LENGTH@ 35
---------------------INS SimpleName@@Name:Matchers @TO@ MethodInvocation@@Matchers.<Part>iterableWithSize(1) @AT@ 20021 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:iterableWithSize:[1] @TO@ MethodInvocation@@Matchers.<Part>iterableWithSize(1) @AT@ 20037 @LENGTH@ 19
------------------------INS NumberLiteral@@1 @TO@ SimpleName@@MethodName:iterableWithSize:[1] @AT@ 20054 @LENGTH@ 1
---INS VariableDeclarationStatement@@Part part=parts.iterator().next(); @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 20063 @LENGTH@ 36
------INS SimpleType@@Part @TO@ VariableDeclarationStatement@@Part part=parts.iterator().next(); @AT@ 20063 @LENGTH@ 4
------INS VariableDeclarationFragment@@part=parts.iterator().next() @TO@ VariableDeclarationStatement@@Part part=parts.iterator().next(); @AT@ 20068 @LENGTH@ 30
---------INS SimpleName@@part @TO@ VariableDeclarationFragment@@part=parts.iterator().next() @AT@ 20068 @LENGTH@ 4
---------INS MethodInvocation@@parts.iterator().next() @TO@ VariableDeclarationFragment@@part=parts.iterator().next() @AT@ 20075 @LENGTH@ 23
------------INS MethodInvocation@@MethodName:iterator:[] @TO@ MethodInvocation@@parts.iterator().next() @AT@ 20075 @LENGTH@ 16
------------INS SimpleName@@Name:parts @TO@ MethodInvocation@@parts.iterator().next() @AT@ 20075 @LENGTH@ 5
------------INS SimpleName@@MethodName:next:[] @TO@ MethodInvocation@@parts.iterator().next() @AT@ 20092 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(part.getType(),is(Type.IN)) @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 20103 @LENGTH@ 40
------INS MethodInvocation@@assertThat(part.getType(),is(Type.IN)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(part.getType(),is(Type.IN)) @AT@ 20103 @LENGTH@ 39
---------INS SimpleName@@MethodName:assertThat:[part.getType(), is(Type.IN)] @TO@ MethodInvocation@@assertThat(part.getType(),is(Type.IN)) @AT@ 20103 @LENGTH@ 39
------------INS MethodInvocation@@part.getType() @TO@ SimpleName@@MethodName:assertThat:[part.getType(), is(Type.IN)] @AT@ 20114 @LENGTH@ 14
---------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getType() @AT@ 20114 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@part.getType() @AT@ 20119 @LENGTH@ 9
------------INS MethodInvocation@@is(Type.IN) @TO@ SimpleName@@MethodName:assertThat:[part.getType(), is(Type.IN)] @AT@ 20130 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:[Type.IN] @TO@ MethodInvocation@@is(Type.IN) @AT@ 20130 @LENGTH@ 11
------------------INS QualifiedName@@Type.IN @TO@ SimpleName@@MethodName:is:[Type.IN] @AT@ 20133 @LENGTH@ 7
---------------------INS SimpleName@@Type @TO@ QualifiedName@@Type.IN @AT@ 20133 @LENGTH@ 4
---------------------INS SimpleName@@IN @TO@ QualifiedName@@Type.IN @AT@ 20138 @LENGTH@ 2
---------------INS SimpleName@@MethodName:is:[Type.IN] @TO@ MethodInvocation@@is(Type.IN) @AT@ 20130 @LENGTH@ 11
------------------INS QualifiedName@@Type.IN @TO@ SimpleName@@MethodName:is:[Type.IN] @AT@ 20133 @LENGTH@ 7
---------------------INS SimpleName@@Type @TO@ QualifiedName@@Type.IN @AT@ 20133 @LENGTH@ 4
---------------------INS SimpleName@@IN @TO@ QualifiedName@@Type.IN @AT@ 20138 @LENGTH@ 2
---INS ExpressionStatement@@MethodInvocation:assertThat(part.getProperty(),is(PropertyPath.from("someInfo",Category.class))) @TO@ MethodDeclaration@@public, void, MethodName:doesNotFailOnPropertiesContainingAKeyword,  @AT@ 20146 @LENGTH@ 82
------INS MethodInvocation@@assertThat(part.getProperty(),is(PropertyPath.from("someInfo",Category.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(part.getProperty(),is(PropertyPath.from("someInfo",Category.class))) @AT@ 20146 @LENGTH@ 81
---------INS SimpleName@@MethodName:assertThat:[part.getProperty(), is(PropertyPath.from("someInfo",Category.class))] @TO@ MethodInvocation@@assertThat(part.getProperty(),is(PropertyPath.from("someInfo",Category.class))) @AT@ 20146 @LENGTH@ 81
------------INS MethodInvocation@@part.getProperty() @TO@ SimpleName@@MethodName:assertThat:[part.getProperty(), is(PropertyPath.from("someInfo",Category.class))] @AT@ 20157 @LENGTH@ 18
---------------INS SimpleName@@Name:part @TO@ MethodInvocation@@part.getProperty() @AT@ 20157 @LENGTH@ 4
---------------INS SimpleName@@MethodName:getProperty:[] @TO@ MethodInvocation@@part.getProperty() @AT@ 20162 @LENGTH@ 13
------------INS MethodInvocation@@is(PropertyPath.from("someInfo",Category.class)) @TO@ SimpleName@@MethodName:assertThat:[part.getProperty(), is(PropertyPath.from("someInfo",Category.class))] @AT@ 20177 @LENGTH@ 49
---------------INS SimpleName@@MethodName:is:[PropertyPath.from("someInfo",Category.class)] @TO@ MethodInvocation@@is(PropertyPath.from("someInfo",Category.class)) @AT@ 20177 @LENGTH@ 49
------------------INS MethodInvocation@@PropertyPath.from("someInfo",Category.class) @TO@ SimpleName@@MethodName:is:[PropertyPath.from("someInfo",Category.class)] @AT@ 20180 @LENGTH@ 45
---------------------INS SimpleName@@Name:PropertyPath @TO@ MethodInvocation@@PropertyPath.from("someInfo",Category.class) @AT@ 20180 @LENGTH@ 12
---------------------INS SimpleName@@MethodName:from:["someInfo", Category.class] @TO@ MethodInvocation@@PropertyPath.from("someInfo",Category.class) @AT@ 20193 @LENGTH@ 32
------------------------INS StringLiteral@@"someInfo" @TO@ SimpleName@@MethodName:from:["someInfo", Category.class] @AT@ 20198 @LENGTH@ 10
------------------------INS TypeLiteral@@Category.class @TO@ SimpleName@@MethodName:from:["someInfo", Category.class] @AT@ 20210 @LENGTH@ 14


UPD VariableDeclarationStatement@@String out=template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class); @TO@ String out=template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class); @AT@ 1721 @LENGTH@ 105
---UPD VariableDeclarationFragment@@out=template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class) @TO@ out=template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1728 @LENGTH@ 97
------UPD MethodInvocation@@template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class) @TO@ template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1734 @LENGTH@ 91
---------UPD SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @TO@ MethodName:requestBodyAndHeader:["http://localhost:{{port}}/foo?beer=yes", "Hello World", Exchange.HTTP_METHOD, "POST", String.class] @AT@ 1743 @LENGTH@ 82
------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @AT@ 1821 @LENGTH@ 20
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1821 @LENGTH@ 8
---------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1830 @LENGTH@ 11
------------INS StringLiteral@@"POST" @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @AT@ 1843 @LENGTH@ 6


INS VariableDeclarationStatement@@String path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath(); @TO@ MethodDeclaration@@public, void, MethodName:render, Map<String,?> model, HttpServletRequest request, HttpServletResponse response, Exception,  @AT@ 2389 @LENGTH@ 90
---INS SimpleType@@String @TO@ VariableDeclarationStatement@@String path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath(); @AT@ 2389 @LENGTH@ 6
---INS VariableDeclarationFragment@@path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @TO@ VariableDeclarationStatement@@String path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath(); @AT@ 2396 @LENGTH@ 82
------INS SimpleName@@path @TO@ VariableDeclarationFragment@@path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @AT@ 2396 @LENGTH@ 4
------MOV MethodInvocation@@ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @TO@ VariableDeclarationFragment@@path=ServletUriComponentsBuilder.fromContextPath(request).build().getPath() @AT@ 2414 @LENGTH@ 75


UPD VariableDeclarationStatement@@Exchange response=template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange); @TO@ Exchange response=template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange); @AT@ 1891 @LENGTH@ 278
---UPD VariableDeclarationFragment@@response=template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @TO@ response=template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @AT@ 1900 @LENGTH@ 268
------UPD MethodInvocation@@template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @TO@ template.send("netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks",exchange) @AT@ 1911 @LENGTH@ 257
---------UPD SimpleName@@MethodName:send:["netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @TO@ MethodName:send:["netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @AT@ 1920 @LENGTH@ 248
------------DEL StringLiteral@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1925 @LENGTH@ 232
------------INS InfixExpression@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ SimpleName@@MethodName:send:["netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks", exchange] @AT@ 1954 @LENGTH@ 253
---------------INS StringLiteral@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1954 @LENGTH@ 91
---------------INS Operator@@+ @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 2045 @LENGTH@ 1
---------------INS StringLiteral@@"&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ InfixExpression@@"netty4-http:https://localhost:{{port}}?requestTimeout=10000&throwExceptionOnFailure=false" + "&ssl=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/client-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 2064 @LENGTH@ 143


UPD ExpressionStatement@@MethodInvocation:assertEquals("getJobGroup","Camel",jobDetail.getKey().getGroup()) @TO@ MethodInvocation:assertEquals("getJobGroup","Camel_" + context.getManagementName(),jobDetail.getKey().getGroup()) @AT@ 2788 @LENGTH@ 68
---UPD MethodInvocation@@assertEquals("getJobGroup","Camel",jobDetail.getKey().getGroup()) @TO@ assertEquals("getJobGroup","Camel_" + context.getManagementName(),jobDetail.getKey().getGroup()) @AT@ 2788 @LENGTH@ 67
------UPD SimpleName@@MethodName:assertEquals:["getJobGroup", "Camel", jobDetail.getKey().getGroup()] @TO@ MethodName:assertEquals:["getJobGroup", "Camel_" + context.getManagementName(), jobDetail.getKey().getGroup()] @AT@ 2788 @LENGTH@ 67
---------DEL StringLiteral@@"Camel" @AT@ 2816 @LENGTH@ 7
---------INS InfixExpression@@"Camel_" + context.getManagementName() @TO@ SimpleName@@MethodName:assertEquals:["getJobGroup", "Camel", jobDetail.getKey().getGroup()] @AT@ 2847 @LENGTH@ 38
------------INS StringLiteral@@"Camel_" @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2847 @LENGTH@ 8
------------INS Operator@@+ @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2855 @LENGTH@ 1
------------INS MethodInvocation@@context.getManagementName() @TO@ InfixExpression@@"Camel_" + context.getManagementName() @AT@ 2858 @LENGTH@ 27
---------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getManagementName() @AT@ 2858 @LENGTH@ 7
---------------INS SimpleName@@MethodName:getManagementName:[] @TO@ MethodInvocation@@context.getManagementName() @AT@ 2866 @LENGTH@ 19


UPD VariableDeclarationStatement@@final BindingType directoryGrouping=localName != null ? MAP.get(localName.toLowerCase()) : null; @TO@ final BindingType directoryGrouping=MAP.get(localName.toLowerCase()); @AT@ 1880 @LENGTH@ 98
---UPD VariableDeclarationFragment@@directoryGrouping=localName != null ? MAP.get(localName.toLowerCase()) : null @TO@ directoryGrouping=MAP.get(localName.toLowerCase()) @AT@ 1898 @LENGTH@ 79
------DEL ConditionalExpression@@localName != null ? MAP.get(localName.toLowerCase()) : null @AT@ 1918 @LENGTH@ 59
---------DEL InfixExpression@@localName != null @AT@ 1918 @LENGTH@ 17
------------DEL SimpleName@@localName @AT@ 1918 @LENGTH@ 9
------------DEL Operator@@!= @AT@ 1927 @LENGTH@ 2
------------DEL NullLiteral@@null @AT@ 1931 @LENGTH@ 4
---------DEL NullLiteral@@null @AT@ 1973 @LENGTH@ 4
------MOV MethodInvocation@@MAP.get(localName.toLowerCase()) @TO@ VariableDeclarationFragment@@directoryGrouping=localName != null ? MAP.get(localName.toLowerCase()) : null @AT@ 1938 @LENGTH@ 32


UPD MethodDeclaration@@public, void, MethodName:testSessionPersistence, @ArquillianResource(SimpleServlet.class) @OperateOnDeployment(DEPLOYMENT_1) URL baseURL, IOException, URISyntaxException,  @TO@ public, void, MethodName:testSessionPersistence, @ArquillianResource(SimpleServlet.class) @OperateOnDeployment(DEPLOYMENT_1) URL baseURL, IOException,  @AT@ 3351 @LENGTH@ 1694
---DEL SimpleType@@URISyntaxException @AT@ 3495 @LENGTH@ 18
---UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=new DefaultHttpClient(); @AT@ 3524 @LENGTH@ 48
------UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3524 @LENGTH@ 10
------UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=new DefaultHttpClient() @AT@ 3535 @LENGTH@ 36
---------INS ClassInstanceCreation@@DefaultHttpClient[] @TO@ VariableDeclarationFragment@@client=HttpClients.createDefault() @AT@ 3385 @LENGTH@ 23
------------INS New@@new @TO@ ClassInstanceCreation@@DefaultHttpClient[] @AT@ 3385 @LENGTH@ 3
------------INS SimpleType@@DefaultHttpClient @TO@ ClassInstanceCreation@@DefaultHttpClient[] @AT@ 3389 @LENGTH@ 17
---------DEL MethodInvocation@@HttpClients.createDefault() @AT@ 3544 @LENGTH@ 27
------------DEL SimpleName@@Name:HttpClients @AT@ 3544 @LENGTH@ 11
------------DEL SimpleName@@MethodName:createDefault:[] @AT@ 3556 @LENGTH@ 15
---UPD VariableDeclarationStatement@@URI url=SimpleServlet.createURI(baseURL); @TO@ String url=baseURL.toString() + "simple"; @AT@ 3582 @LENGTH@ 43
------UPD SimpleType@@URI @TO@ String @AT@ 3582 @LENGTH@ 3
------UPD VariableDeclarationFragment@@url=SimpleServlet.createURI(baseURL) @TO@ url=baseURL.toString() + "simple" @AT@ 3586 @LENGTH@ 38
---------INS InfixExpression@@baseURL.toString() + "simple" @TO@ VariableDeclarationFragment@@url=SimpleServlet.createURI(baseURL) @AT@ 3432 @LENGTH@ 29
------------INS MethodInvocation@@baseURL.toString() @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 3432 @LENGTH@ 18
---------------MOV SimpleName@@Name:SimpleServlet @TO@ MethodInvocation@@baseURL.toString() @AT@ 3592 @LENGTH@ 13
---------------MOV SimpleName@@MethodName:createURI:[baseURL] @TO@ MethodInvocation@@baseURL.toString() @AT@ 3606 @LENGTH@ 18
------------INS Operator@@+ @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 3450 @LENGTH@ 1
------------INS StringLiteral@@"simple" @TO@ InfixExpression@@baseURL.toString() + "simple" @AT@ 3453 @LENGTH@ 8
---------DEL MethodInvocation@@SimpleServlet.createURI(baseURL) @AT@ 3592 @LENGTH@ 32
---UPD TryStatement@@try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  stop(CONTAINER_SINGLE);  start(CONTAINER_SINGLE);  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session passivation was configured but session was lost after restart.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  HttpClientUtils.closeQuietly(client);} @TO@ try {  HttpResponse response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(1,Integer.parseInt(response.getFirstHeader("value").getValue()));  response.getEntity().getContent().close();  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals(2,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();  stop(CONTAINER_SINGLE);  start(CONTAINER_SINGLE);  response=client.execute(new HttpGet(url));  Assert.assertEquals(HttpServletResponse.SC_OK,response.getStatusLine().getStatusCode());  Assert.assertEquals("Session passivation was configured but session was lost after restart.",3,Integer.parseInt(response.getFirstHeader("value").getValue()));  Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()));  response.getEntity().getContent().close();}  finally {  client.getConnectionManager().shutdown();} @AT@ 3635 @LENGTH@ 1404
------UPD Block@@FinallyBody:{  HttpClientUtils.closeQuietly(client);} @TO@ FinallyBody:{  client.getConnectionManager().shutdown();} @AT@ 4978 @LENGTH@ 61
---------UPD ExpressionStatement@@MethodInvocation:HttpClientUtils.closeQuietly(client) @TO@ MethodInvocation:client.getConnectionManager().shutdown() @AT@ 4992 @LENGTH@ 37
------------UPD MethodInvocation@@HttpClientUtils.closeQuietly(client) @TO@ client.getConnectionManager().shutdown() @AT@ 4992 @LENGTH@ 36
---------------INS MethodInvocation@@MethodName:getConnectionManager:[] @TO@ MethodInvocation@@HttpClientUtils.closeQuietly(client) @AT@ 4829 @LENGTH@ 29
---------------UPD SimpleName@@Name:HttpClientUtils @TO@ Name:client @AT@ 4992 @LENGTH@ 15
---------------UPD SimpleName@@MethodName:closeQuietly:[client] @TO@ MethodName:shutdown:[] @AT@ 5008 @LENGTH@ 20
------------------DEL SimpleName@@client @AT@ 5021 @LENGTH@ 6


DEL FieldDeclaration@@private, static, String, [payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>"] @AT@ 3547 @LENGTH@ 161
---DEL VariableDeclarationFragment@@payload="<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 3569 @LENGTH@ 138
------DEL InfixExpression@@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<root xmlns=\"http://test/test\"><test>Test Message</test></root>" @AT@ 3579 @LENGTH@ 128


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor),transportBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(transportBuilderFactory,descriptor).register(registration) @AT@ 6267 @LENGTH@ 119
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor),transportBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(transportBuilderFactory,descriptor).register(registration) @AT@ 6267 @LENGTH@ 118
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor), transportBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[transportBuilderFactory, descriptor] @AT@ 6267 @LENGTH@ 95
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 6271 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 6271 @LENGTH@ 32
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor] @AT@ 6306 @LENGTH@ 30
------------DEL New@@new @AT@ 6306 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 6310 @LENGTH@ 14
---------MOV SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor), transportBuilderFactory] @AT@ 6325 @LENGTH@ 10
---------UPD SimpleName@@transportBuilderFactory @TO@ descriptor @AT@ 6338 @LENGTH@ 23


UPD TypeDeclaration@@[@UriEndpoint(scheme="netty-http",extendsScheme="netty",title="Netty HTTP",syntax="netty-http:host:port/path",consumerClass=NettyHttpConsumer.class,label="http"), public]NettyHttpEndpoint, NettyEndpoint[HeaderFilterStrategyAware] @TO@ [@UriEndpoint(scheme="netty-http",extendsScheme="netty",title="Netty HTTP",syntax="netty-http:protocol:host:port/path",consumerClass=NettyHttpConsumer.class,label="http"), public]NettyHttpEndpoint, NettyEndpoint[HeaderFilterStrategyAware] @AT@ 1719 @LENGTH@ 7431
---UPD NormalAnnotation@@@UriEndpoint(scheme="netty-http",extendsScheme="netty",title="Netty HTTP",syntax="netty-http:host:port/path",consumerClass=NettyHttpConsumer.class,label="http") @TO@ @UriEndpoint(scheme="netty-http",extendsScheme="netty",title="Netty HTTP",syntax="netty-http:protocol:host:port/path",consumerClass=NettyHttpConsumer.class,label="http") @AT@ 1719 @LENGTH@ 185


UPD EnhancedForStatement@@for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainComponentCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @TO@ for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String group=row.get("group") != null ? row.get("group") : "";  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainComponentCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @AT@ 4402 @LENGTH@ 1157
---INS VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @TO@ EnhancedForStatement@@for (Map<String,String> row : rows) {  String name=row.get("name");  String kind=row.get("kind");  String label=row.get("label") != null ? row.get("label") : "";  String type=row.get("type");  String javaType=row.get("javaType");  String deprecated=row.get("deprecated") != null ? row.get("deprecated") : "";  String value=row.get("value") != null ? row.get("value") : "";  String defaultValue=row.get("defaultValue") != null ? row.get("defaultValue") : "";  String description=row.get("description") != null ? row.get("description") : "";  CompositeType ct=CamelOpenMBeanTypes.explainComponentCompositeType();  CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description});  answer.put(data);} @AT@ 4551 @LENGTH@ 64
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @AT@ 4551 @LENGTH@ 6
------INS VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @TO@ VariableDeclarationStatement@@String group=row.get("group") != null ? row.get("group") : ""; @AT@ 4558 @LENGTH@ 56
---------INS SimpleName@@group @TO@ VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @AT@ 4558 @LENGTH@ 5
---------INS ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @TO@ VariableDeclarationFragment@@group=row.get("group") != null ? row.get("group") : "" @AT@ 4566 @LENGTH@ 48
------------INS InfixExpression@@row.get("group") != null @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 4566 @LENGTH@ 24
---------------INS MethodInvocation@@row.get("group") @TO@ InfixExpression@@row.get("group") != null @AT@ 4566 @LENGTH@ 16
------------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("group") @AT@ 4566 @LENGTH@ 3
------------------INS SimpleName@@MethodName:get:["group"] @TO@ MethodInvocation@@row.get("group") @AT@ 4570 @LENGTH@ 12
---------------------INS StringLiteral@@"group" @TO@ SimpleName@@MethodName:get:["group"] @AT@ 4574 @LENGTH@ 7
---------------INS Operator@@!= @TO@ InfixExpression@@row.get("group") != null @AT@ 4582 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@row.get("group") != null @AT@ 4586 @LENGTH@ 4
------------INS MethodInvocation@@row.get("group") @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 4593 @LENGTH@ 16
---------------INS SimpleName@@Name:row @TO@ MethodInvocation@@row.get("group") @AT@ 4593 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["group"] @TO@ MethodInvocation@@row.get("group") @AT@ 4597 @LENGTH@ 12
------------------INS StringLiteral@@"group" @TO@ SimpleName@@MethodName:get:["group"] @AT@ 4601 @LENGTH@ 7
------------INS StringLiteral@@"" @TO@ ConditionalExpression@@row.get("group") != null ? row.get("group") : "" @AT@ 4612 @LENGTH@ 2
---UPD VariableDeclarationStatement@@CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}); @TO@ CompositeData data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}); @AT@ 5201 @LENGTH@ 310
------UPD VariableDeclarationFragment@@data=new CompositeDataSupport(ct,new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}) @TO@ data=new CompositeDataSupport(ct,new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}) @AT@ 5215 @LENGTH@ 295
---------UPD ClassInstanceCreation@@CompositeDataSupport[ct, new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"}, new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description}] @TO@ CompositeDataSupport[ct, new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"}, new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description}] @AT@ 5222 @LENGTH@ 288
------------UPD ArrayCreation@@new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 5275 @LENGTH@ 115
---------------UPD ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ {"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 5287 @LENGTH@ 103
------------------INS StringLiteral@@"group" @TO@ ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @AT@ 5387 @LENGTH@ 7
------------UPD ArrayCreation@@new Object[]{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @TO@ new Object[]{name,kind,group,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 5416 @LENGTH@ 93
---------------UPD ArrayInitializer@@{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @TO@ {name,kind,group,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 5428 @LENGTH@ 81
------------------INS SimpleName@@group @TO@ ArrayInitializer@@{name,kind,label,type,javaType,deprecated,value,defaultValue,description} @AT@ 5531 @LENGTH@ 5


UPD TryStatement@@try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }}  @TO@ try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }  Enumeration<String> names=(Enumeration<String>)props.propertyNames();  while (names.hasMoreElements()) {    String name=names.nextElement();    String value=props.getProperty(name);    if (System.getProperty(name) == null) {      System.setProperty(name,value);    }  }}  @AT@ 945 @LENGTH@ 410
---INS VariableDeclarationStatement@@Enumeration<String> names=(Enumeration<String>)props.propertyNames(); @TO@ TryStatement@@try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }}  @AT@ 1389 @LENGTH@ 72
------INS ParameterizedType@@Enumeration<String> @TO@ VariableDeclarationStatement@@Enumeration<String> names=(Enumeration<String>)props.propertyNames(); @AT@ 1389 @LENGTH@ 19
---------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<String> @AT@ 1389 @LENGTH@ 11
---------INS SimpleType@@String @TO@ ParameterizedType@@Enumeration<String> @AT@ 1401 @LENGTH@ 6
------INS VariableDeclarationFragment@@names=(Enumeration<String>)props.propertyNames() @TO@ VariableDeclarationStatement@@Enumeration<String> names=(Enumeration<String>)props.propertyNames(); @AT@ 1409 @LENGTH@ 51
---------INS SimpleName@@names @TO@ VariableDeclarationFragment@@names=(Enumeration<String>)props.propertyNames() @AT@ 1409 @LENGTH@ 5
---------INS CastExpression@@(Enumeration<String>)props.propertyNames() @TO@ VariableDeclarationFragment@@names=(Enumeration<String>)props.propertyNames() @AT@ 1417 @LENGTH@ 43
------------INS ParameterizedType@@Enumeration<String> @TO@ CastExpression@@(Enumeration<String>)props.propertyNames() @AT@ 1418 @LENGTH@ 19
---------------INS SimpleType@@Enumeration @TO@ ParameterizedType@@Enumeration<String> @AT@ 1418 @LENGTH@ 11
---------------INS SimpleType@@String @TO@ ParameterizedType@@Enumeration<String> @AT@ 1430 @LENGTH@ 6
------------INS MethodInvocation@@props.propertyNames() @TO@ CastExpression@@(Enumeration<String>)props.propertyNames() @AT@ 1439 @LENGTH@ 21
---------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.propertyNames() @AT@ 1439 @LENGTH@ 5
---------------INS SimpleName@@MethodName:propertyNames:[] @TO@ MethodInvocation@@props.propertyNames() @AT@ 1445 @LENGTH@ 15
---INS WhileStatement@@while (names.hasMoreElements()) {  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @TO@ TryStatement@@try (InputStream in=jar.getInputStream(propsEntry)){  Properties props=new Properties();  props.load(in);  if (props.containsKey("wildfly.swarm.app.artifact")) {    System.setProperty("wildfly.swarm.app.artifact",props.getProperty("wildfly.swarm.app.artifact"));  }}  @AT@ 1486 @LENGTH@ 359
------INS MethodInvocation@@names.hasMoreElements() @TO@ WhileStatement@@while (names.hasMoreElements()) {  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 1494 @LENGTH@ 23
---------INS SimpleName@@Name:names @TO@ MethodInvocation@@names.hasMoreElements() @AT@ 1494 @LENGTH@ 5
---------INS SimpleName@@MethodName:hasMoreElements:[] @TO@ MethodInvocation@@names.hasMoreElements() @AT@ 1500 @LENGTH@ 17
------INS Block@@WhileBody:{  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @TO@ WhileStatement@@while (names.hasMoreElements()) {  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 1520 @LENGTH@ 325
---------INS VariableDeclarationStatement@@String name=names.nextElement(); @TO@ Block@@WhileBody:{  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 1550 @LENGTH@ 34
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String name=names.nextElement(); @AT@ 1550 @LENGTH@ 6
------------INS VariableDeclarationFragment@@name=names.nextElement() @TO@ VariableDeclarationStatement@@String name=names.nextElement(); @AT@ 1557 @LENGTH@ 26
---------------INS SimpleName@@name @TO@ VariableDeclarationFragment@@name=names.nextElement() @AT@ 1557 @LENGTH@ 4
---------------INS MethodInvocation@@names.nextElement() @TO@ VariableDeclarationFragment@@name=names.nextElement() @AT@ 1564 @LENGTH@ 19
------------------INS SimpleName@@Name:names @TO@ MethodInvocation@@names.nextElement() @AT@ 1564 @LENGTH@ 5
------------------INS SimpleName@@MethodName:nextElement:[] @TO@ MethodInvocation@@names.nextElement() @AT@ 1570 @LENGTH@ 13
---------INS VariableDeclarationStatement@@String value=props.getProperty(name); @TO@ Block@@WhileBody:{  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 1613 @LENGTH@ 39
------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String value=props.getProperty(name); @AT@ 1613 @LENGTH@ 6
------------INS VariableDeclarationFragment@@value=props.getProperty(name) @TO@ VariableDeclarationStatement@@String value=props.getProperty(name); @AT@ 1620 @LENGTH@ 31
---------------INS SimpleName@@value @TO@ VariableDeclarationFragment@@value=props.getProperty(name) @AT@ 1620 @LENGTH@ 5
---------------INS MethodInvocation@@props.getProperty(name) @TO@ VariableDeclarationFragment@@value=props.getProperty(name) @AT@ 1628 @LENGTH@ 23
------------------INS SimpleName@@Name:props @TO@ MethodInvocation@@props.getProperty(name) @AT@ 1628 @LENGTH@ 5
------------------INS SimpleName@@MethodName:getProperty:[name] @TO@ MethodInvocation@@props.getProperty(name) @AT@ 1634 @LENGTH@ 17
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getProperty:[name] @AT@ 1646 @LENGTH@ 4
---------INS IfStatement@@if (System.getProperty(name) == null) {  System.setProperty(name,value);} @TO@ Block@@WhileBody:{  String name=names.nextElement();  String value=props.getProperty(name);  if (System.getProperty(name) == null) {    System.setProperty(name,value);  }} @AT@ 1681 @LENGTH@ 138
------------INS InfixExpression@@System.getProperty(name) == null @TO@ IfStatement@@if (System.getProperty(name) == null) {  System.setProperty(name,value);} @AT@ 1686 @LENGTH@ 34
---------------INS MethodInvocation@@System.getProperty(name) @TO@ InfixExpression@@System.getProperty(name) == null @AT@ 1686 @LENGTH@ 26
------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.getProperty(name) @AT@ 1686 @LENGTH@ 6
------------------INS SimpleName@@MethodName:getProperty:[name] @TO@ MethodInvocation@@System.getProperty(name) @AT@ 1693 @LENGTH@ 19
---------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:getProperty:[name] @AT@ 1706 @LENGTH@ 4
---------------INS Operator@@== @TO@ InfixExpression@@System.getProperty(name) == null @AT@ 1712 @LENGTH@ 2
---------------INS NullLiteral@@null @TO@ InfixExpression@@System.getProperty(name) == null @AT@ 1716 @LENGTH@ 4
------------INS Block@@ThenBody:{  System.setProperty(name,value);} @TO@ IfStatement@@if (System.getProperty(name) == null) {  System.setProperty(name,value);} @AT@ 1723 @LENGTH@ 96
---------------INS ExpressionStatement@@MethodInvocation:System.setProperty(name,value) @TO@ Block@@ThenBody:{  System.setProperty(name,value);} @AT@ 1757 @LENGTH@ 32
------------------INS MethodInvocation@@System.setProperty(name,value) @TO@ ExpressionStatement@@MethodInvocation:System.setProperty(name,value) @AT@ 1757 @LENGTH@ 31
---------------------INS SimpleName@@Name:System @TO@ MethodInvocation@@System.setProperty(name,value) @AT@ 1757 @LENGTH@ 6
---------------------INS SimpleName@@MethodName:setProperty:[name, value] @TO@ MethodInvocation@@System.setProperty(name,value) @AT@ 1764 @LENGTH@ 24
------------------------INS SimpleName@@name @TO@ SimpleName@@MethodName:setProperty:[name, value] @AT@ 1776 @LENGTH@ 4
------------------------INS SimpleName@@value @TO@ SimpleName@@MethodName:setProperty:[name, value] @AT@ 1782 @LENGTH@ 5


UPD VariableDeclarationStatement@@String response=template.requestBody("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",String.class); @TO@ String response=template.requestBodyAndHeader("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",Exchange.HTTP_METHOD,"POST",String.class); @AT@ 1495 @LENGTH@ 111
---UPD VariableDeclarationFragment@@response=template.requestBody("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",String.class) @TO@ response=template.requestBodyAndHeader("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1502 @LENGTH@ 103
------UPD MethodInvocation@@template.requestBody("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",String.class) @TO@ template.requestBodyAndHeader("http://localhost:" + port1 + "/foo?phrase=Bye","Camel",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1513 @LENGTH@ 92
---------UPD SimpleName@@MethodName:requestBody:["http://localhost:" + port1 + "/foo?phrase=Bye", "Camel", String.class] @TO@ MethodName:requestBodyAndHeader:["http://localhost:" + port1 + "/foo?phrase=Bye", "Camel", Exchange.HTTP_METHOD, "POST", String.class] @AT@ 1522 @LENGTH@ 83
------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:requestBody:["http://localhost:" + port1 + "/foo?phrase=Bye", "Camel", String.class] @AT@ 1635 @LENGTH@ 20
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1635 @LENGTH@ 8
---------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1644 @LENGTH@ 11
------------INS StringLiteral@@"POST" @TO@ SimpleName@@MethodName:requestBody:["http://localhost:" + port1 + "/foo?phrase=Bye", "Camel", String.class] @AT@ 1657 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @TO@ TypeDeclaration@@[public]RepositoryRestExceptionHandlerUnitTests,  @AT@ 2497 @LENGTH@ 302
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2497 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2504 @LENGTH@ 4
---INS SimpleName@@MethodName:forwardsExceptionForMiscellaneousFailure @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2509 @LENGTH@ 40
---INS VariableDeclarationStatement@@String message="My Message!"; @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2557 @LENGTH@ 31
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String message="My Message!"; @AT@ 2557 @LENGTH@ 6
------INS VariableDeclarationFragment@@message="My Message!" @TO@ VariableDeclarationStatement@@String message="My Message!"; @AT@ 2564 @LENGTH@ 23
---------INS SimpleName@@message @TO@ VariableDeclarationFragment@@message="My Message!" @AT@ 2564 @LENGTH@ 7
---------INS StringLiteral@@"My Message!" @TO@ VariableDeclarationFragment@@message="My Message!" @AT@ 2574 @LENGTH@ 13
---INS VariableDeclarationStatement@@ResponseEntity<ExceptionMessage> result=HANDLER.handleMiscFailures(new Exception(message)); @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2592 @LENGTH@ 93
------INS ParameterizedType@@ResponseEntity<ExceptionMessage> @TO@ VariableDeclarationStatement@@ResponseEntity<ExceptionMessage> result=HANDLER.handleMiscFailures(new Exception(message)); @AT@ 2592 @LENGTH@ 32
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<ExceptionMessage> @AT@ 2592 @LENGTH@ 14
---------INS SimpleType@@ExceptionMessage @TO@ ParameterizedType@@ResponseEntity<ExceptionMessage> @AT@ 2607 @LENGTH@ 16
------INS VariableDeclarationFragment@@result=HANDLER.handleMiscFailures(new Exception(message)) @TO@ VariableDeclarationStatement@@ResponseEntity<ExceptionMessage> result=HANDLER.handleMiscFailures(new Exception(message)); @AT@ 2625 @LENGTH@ 59
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=HANDLER.handleMiscFailures(new Exception(message)) @AT@ 2625 @LENGTH@ 6
---------INS MethodInvocation@@HANDLER.handleMiscFailures(new Exception(message)) @TO@ VariableDeclarationFragment@@result=HANDLER.handleMiscFailures(new Exception(message)) @AT@ 2634 @LENGTH@ 50
------------INS SimpleName@@Name:HANDLER @TO@ MethodInvocation@@HANDLER.handleMiscFailures(new Exception(message)) @AT@ 2634 @LENGTH@ 7
------------INS SimpleName@@MethodName:handleMiscFailures:[new Exception(message)] @TO@ MethodInvocation@@HANDLER.handleMiscFailures(new Exception(message)) @AT@ 2642 @LENGTH@ 42
---------------INS ClassInstanceCreation@@Exception[message] @TO@ SimpleName@@MethodName:handleMiscFailures:[new Exception(message)] @AT@ 2661 @LENGTH@ 22
------------------INS New@@new @TO@ ClassInstanceCreation@@Exception[message] @AT@ 2661 @LENGTH@ 3
------------------INS SimpleType@@Exception @TO@ ClassInstanceCreation@@Exception[message] @AT@ 2665 @LENGTH@ 9
------------------INS SimpleName@@message @TO@ ClassInstanceCreation@@Exception[message] @AT@ 2675 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getBody(),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2689 @LENGTH@ 49
------INS MethodInvocation@@assertThat(result.getBody(),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getBody(),is(notNullValue())) @AT@ 2689 @LENGTH@ 48
---------INS SimpleName@@MethodName:assertThat:[result.getBody(), is(notNullValue())] @TO@ MethodInvocation@@assertThat(result.getBody(),is(notNullValue())) @AT@ 2689 @LENGTH@ 48
------------INS MethodInvocation@@result.getBody() @TO@ SimpleName@@MethodName:assertThat:[result.getBody(), is(notNullValue())] @AT@ 2700 @LENGTH@ 16
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getBody() @AT@ 2700 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getBody:[] @TO@ MethodInvocation@@result.getBody() @AT@ 2707 @LENGTH@ 9
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[result.getBody(), is(notNullValue())] @AT@ 2718 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 2718 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 2721 @LENGTH@ 14
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 2718 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 2721 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertThat(result.getBody().getMessage(),is(message)) @TO@ MethodDeclaration@@public, void, MethodName:forwardsExceptionForMiscellaneousFailure,  @AT@ 2741 @LENGTH@ 55
------INS MethodInvocation@@assertThat(result.getBody().getMessage(),is(message)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(result.getBody().getMessage(),is(message)) @AT@ 2741 @LENGTH@ 54
---------INS SimpleName@@MethodName:assertThat:[result.getBody().getMessage(), is(message)] @TO@ MethodInvocation@@assertThat(result.getBody().getMessage(),is(message)) @AT@ 2741 @LENGTH@ 54
------------INS MethodInvocation@@result.getBody().getMessage() @TO@ SimpleName@@MethodName:assertThat:[result.getBody().getMessage(), is(message)] @AT@ 2752 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:getBody:[] @TO@ MethodInvocation@@result.getBody().getMessage() @AT@ 2752 @LENGTH@ 16
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getBody().getMessage() @AT@ 2752 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getMessage:[] @TO@ MethodInvocation@@result.getBody().getMessage() @AT@ 2769 @LENGTH@ 12
------------INS MethodInvocation@@is(message) @TO@ SimpleName@@MethodName:assertThat:[result.getBody().getMessage(), is(message)] @AT@ 2783 @LENGTH@ 11
---------------INS SimpleName@@MethodName:is:[message] @TO@ MethodInvocation@@is(message) @AT@ 2783 @LENGTH@ 11
------------------INS SimpleName@@message @TO@ SimpleName@@MethodName:is:[message] @AT@ 2786 @LENGTH@ 7


UPD MethodDeclaration@@public, void, MethodName:testGetShortName_nullDestinationName, Exception,  @TO@ public, void, MethodName:testGetShortNameNullDestinationName, Exception,  @AT@ 1848 @LENGTH@ 178
---UPD SimpleName@@MethodName:testGetShortName_nullDestinationName @TO@ MethodName:testGetShortNameNullDestinationName @AT@ 1860 @LENGTH@ 36


UPD VariableDeclarationStatement@@Reference ref=input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),Collections.emptyList(),"http://uri.etsi.org/01903#SignedProperties",null); @TO@ Reference ref=input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),transforms,"http://uri.etsi.org/01903#SignedProperties",null); @AT@ 23468 @LENGTH@ 278
---UPD VariableDeclarationFragment@@ref=input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),Collections.emptyList(),"http://uri.etsi.org/01903#SignedProperties",null) @TO@ ref=input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),transforms,"http://uri.etsi.org/01903#SignedProperties",null) @AT@ 23478 @LENGTH@ 267
------UPD MethodInvocation@@input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),Collections.emptyList(),"http://uri.etsi.org/01903#SignedProperties",null) @TO@ input.getSignatureFactory().newReference("#" + signedPropertiesId,input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null),transforms,"http://uri.etsi.org/01903#SignedProperties",null) @AT@ 23484 @LENGTH@ 261
---------UPD SimpleName@@MethodName:newReference:["#" + signedPropertiesId, input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null), Collections.emptyList(), "http://uri.etsi.org/01903#SignedProperties", null] @TO@ MethodName:newReference:["#" + signedPropertiesId, input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null), transforms, "http://uri.etsi.org/01903#SignedProperties", null] @AT@ 23512 @LENGTH@ 233
------------DEL MethodInvocation@@Collections.emptyList() @AT@ 23653 @LENGTH@ 23
---------------DEL SimpleName@@Name:Collections @AT@ 23653 @LENGTH@ 11
---------------DEL SimpleName@@MethodName:emptyList:[] @AT@ 23665 @LENGTH@ 11
------------INS SimpleName@@transforms @TO@ SimpleName@@MethodName:newReference:["#" + signedPropertiesId, input.getSignatureFactory().newDigestMethod(input.getContentDigestAlgorithm(),null), Collections.emptyList(), "http://uri.etsi.org/01903#SignedProperties", null] @AT@ 23754 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @TO@ TypeDeclaration@@[public]StaticContentDeploymentTest, AbstractWildFlySwarmTestCase @AT@ 1281 @LENGTH@ 826
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1281 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1288 @LENGTH@ 4
---INS SimpleName@@MethodName:testStaticContentWithContext @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1293 @LENGTH@ 28
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1331 @LENGTH@ 9
---INS VariableDeclarationStatement@@Container container=newContainer(); @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1351 @LENGTH@ 37
------INS SimpleType@@Container @TO@ VariableDeclarationStatement@@Container container=newContainer(); @AT@ 1351 @LENGTH@ 9
------INS VariableDeclarationFragment@@container=newContainer() @TO@ VariableDeclarationStatement@@Container container=newContainer(); @AT@ 1361 @LENGTH@ 26
---------INS SimpleName@@container @TO@ VariableDeclarationFragment@@container=newContainer() @AT@ 1361 @LENGTH@ 9
---------INS MethodInvocation@@MethodName:newContainer:[] @TO@ VariableDeclarationFragment@@container=newContainer() @AT@ 1373 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:container.start() @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1397 @LENGTH@ 18
------INS MethodInvocation@@container.start() @TO@ ExpressionStatement@@MethodInvocation:container.start() @AT@ 1397 @LENGTH@ 17
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.start() @AT@ 1397 @LENGTH@ 9
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@container.start() @AT@ 1407 @LENGTH@ 7
---INS VariableDeclarationStatement@@StaticDeployment deployment=new StaticDeployment(container,"/static"); @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1424 @LENGTH@ 73
------INS SimpleType@@StaticDeployment @TO@ VariableDeclarationStatement@@StaticDeployment deployment=new StaticDeployment(container,"/static"); @AT@ 1424 @LENGTH@ 16
------INS VariableDeclarationFragment@@deployment=new StaticDeployment(container,"/static") @TO@ VariableDeclarationStatement@@StaticDeployment deployment=new StaticDeployment(container,"/static"); @AT@ 1441 @LENGTH@ 55
---------INS SimpleName@@deployment @TO@ VariableDeclarationFragment@@deployment=new StaticDeployment(container,"/static") @AT@ 1441 @LENGTH@ 10
---------INS ClassInstanceCreation@@StaticDeployment[container, "/static"] @TO@ VariableDeclarationFragment@@deployment=new StaticDeployment(container,"/static") @AT@ 1454 @LENGTH@ 42
------------INS New@@new @TO@ ClassInstanceCreation@@StaticDeployment[container, "/static"] @AT@ 1454 @LENGTH@ 3
------------INS SimpleType@@StaticDeployment @TO@ ClassInstanceCreation@@StaticDeployment[container, "/static"] @AT@ 1458 @LENGTH@ 16
------------INS SimpleName@@container @TO@ ClassInstanceCreation@@StaticDeployment[container, "/static"] @AT@ 1475 @LENGTH@ 9
------------INS StringLiteral@@"/static" @TO@ ClassInstanceCreation@@StaticDeployment[container, "/static"] @AT@ 1486 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:container.deploy(deployment) @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1506 @LENGTH@ 31
------INS MethodInvocation@@container.deploy(deployment) @TO@ ExpressionStatement@@MethodInvocation:container.deploy(deployment) @AT@ 1506 @LENGTH@ 30
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.deploy(deployment) @AT@ 1506 @LENGTH@ 9
---------INS SimpleName@@MethodName:deploy:[deployment] @TO@ MethodInvocation@@container.deploy(deployment) @AT@ 1516 @LENGTH@ 20
------------INS SimpleName@@deployment @TO@ SimpleName@@MethodName:deploy:[deployment] @AT@ 1524 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/static-content.txt")).contains("This is static.") @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1546 @LENGTH@ 103
------INS MethodInvocation@@assertThat(fetch("http://localhost:8080/static/static-content.txt")).contains("This is static.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/static-content.txt")).contains("This is static.") @AT@ 1546 @LENGTH@ 102
---------INS MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/static-content.txt")] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/static-content.txt")).contains("This is static.") @AT@ 1546 @LENGTH@ 72
------------INS MethodInvocation@@fetch("http://localhost:8080/static/static-content.txt") @TO@ MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/static-content.txt")] @AT@ 1558 @LENGTH@ 58
---------------INS SimpleName@@MethodName:fetch:["http://localhost:8080/static/static-content.txt"] @TO@ MethodInvocation@@fetch("http://localhost:8080/static/static-content.txt") @AT@ 1558 @LENGTH@ 58
------------------INS StringLiteral@@"http://localhost:8080/static/static-content.txt" @TO@ SimpleName@@MethodName:fetch:["http://localhost:8080/static/static-content.txt"] @AT@ 1565 @LENGTH@ 49
---------INS SimpleName@@MethodName:contains:["This is static."] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/static-content.txt")).contains("This is static.") @AT@ 1619 @LENGTH@ 29
------------INS StringLiteral@@"This is static." @TO@ SimpleName@@MethodName:contains:["This is static."] @AT@ 1629 @LENGTH@ 17
---INS ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/index.html")).contains("This is index.html.") @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1658 @LENGTH@ 99
------INS MethodInvocation@@assertThat(fetch("http://localhost:8080/static/index.html")).contains("This is index.html.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/index.html")).contains("This is index.html.") @AT@ 1658 @LENGTH@ 98
---------INS MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/index.html")] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/index.html")).contains("This is index.html.") @AT@ 1658 @LENGTH@ 64
------------INS MethodInvocation@@fetch("http://localhost:8080/static/index.html") @TO@ MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/index.html")] @AT@ 1670 @LENGTH@ 50
---------------INS SimpleName@@MethodName:fetch:["http://localhost:8080/static/index.html"] @TO@ MethodInvocation@@fetch("http://localhost:8080/static/index.html") @AT@ 1670 @LENGTH@ 50
------------------INS StringLiteral@@"http://localhost:8080/static/index.html" @TO@ SimpleName@@MethodName:fetch:["http://localhost:8080/static/index.html"] @AT@ 1677 @LENGTH@ 41
---------INS SimpleName@@MethodName:contains:["This is index.html."] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/index.html")).contains("This is index.html.") @AT@ 1723 @LENGTH@ 33
------------INS StringLiteral@@"This is index.html." @TO@ SimpleName@@MethodName:contains:["This is index.html."] @AT@ 1733 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/foo/index.html")).contains("This is foo/index.html.") @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1766 @LENGTH@ 107
------INS MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo/index.html")).contains("This is foo/index.html.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/foo/index.html")).contains("This is foo/index.html.") @AT@ 1766 @LENGTH@ 106
---------INS MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/foo/index.html")] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo/index.html")).contains("This is foo/index.html.") @AT@ 1766 @LENGTH@ 68
------------INS MethodInvocation@@fetch("http://localhost:8080/static/foo/index.html") @TO@ MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/foo/index.html")] @AT@ 1778 @LENGTH@ 54
---------------INS SimpleName@@MethodName:fetch:["http://localhost:8080/static/foo/index.html"] @TO@ MethodInvocation@@fetch("http://localhost:8080/static/foo/index.html") @AT@ 1778 @LENGTH@ 54
------------------INS StringLiteral@@"http://localhost:8080/static/foo/index.html" @TO@ SimpleName@@MethodName:fetch:["http://localhost:8080/static/foo/index.html"] @AT@ 1785 @LENGTH@ 45
---------INS SimpleName@@MethodName:contains:["This is foo/index.html."] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo/index.html")).contains("This is foo/index.html.") @AT@ 1835 @LENGTH@ 37
------------INS StringLiteral@@"This is foo/index.html." @TO@ SimpleName@@MethodName:contains:["This is foo/index.html."] @AT@ 1845 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static")).contains("This is index.html.") @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1882 @LENGTH@ 88
------INS MethodInvocation@@assertThat(fetch("http://localhost:8080/static")).contains("This is index.html.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static")).contains("This is index.html.") @AT@ 1882 @LENGTH@ 87
---------INS MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static")] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static")).contains("This is index.html.") @AT@ 1882 @LENGTH@ 53
------------INS MethodInvocation@@fetch("http://localhost:8080/static") @TO@ MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static")] @AT@ 1894 @LENGTH@ 39
---------------INS SimpleName@@MethodName:fetch:["http://localhost:8080/static"] @TO@ MethodInvocation@@fetch("http://localhost:8080/static") @AT@ 1894 @LENGTH@ 39
------------------INS StringLiteral@@"http://localhost:8080/static" @TO@ SimpleName@@MethodName:fetch:["http://localhost:8080/static"] @AT@ 1901 @LENGTH@ 30
---------INS SimpleName@@MethodName:contains:["This is index.html."] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static")).contains("This is index.html.") @AT@ 1936 @LENGTH@ 33
------------INS StringLiteral@@"This is index.html." @TO@ SimpleName@@MethodName:contains:["This is index.html."] @AT@ 1946 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/foo")).contains("This is foo/index.html.") @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 1979 @LENGTH@ 96
------INS MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo")).contains("This is foo/index.html.") @TO@ ExpressionStatement@@MethodInvocation:assertThat(fetch("http://localhost:8080/static/foo")).contains("This is foo/index.html.") @AT@ 1979 @LENGTH@ 95
---------INS MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/foo")] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo")).contains("This is foo/index.html.") @AT@ 1979 @LENGTH@ 57
------------INS MethodInvocation@@fetch("http://localhost:8080/static/foo") @TO@ MethodInvocation@@MethodName:assertThat:[fetch("http://localhost:8080/static/foo")] @AT@ 1991 @LENGTH@ 43
---------------INS SimpleName@@MethodName:fetch:["http://localhost:8080/static/foo"] @TO@ MethodInvocation@@fetch("http://localhost:8080/static/foo") @AT@ 1991 @LENGTH@ 43
------------------INS StringLiteral@@"http://localhost:8080/static/foo" @TO@ SimpleName@@MethodName:fetch:["http://localhost:8080/static/foo"] @AT@ 1998 @LENGTH@ 34
---------INS SimpleName@@MethodName:contains:["This is foo/index.html."] @TO@ MethodInvocation@@assertThat(fetch("http://localhost:8080/static/foo")).contains("This is foo/index.html.") @AT@ 2037 @LENGTH@ 37
------------INS StringLiteral@@"This is foo/index.html." @TO@ SimpleName@@MethodName:contains:["This is foo/index.html."] @AT@ 2047 @LENGTH@ 25
---INS ExpressionStatement@@MethodInvocation:container.stop() @TO@ MethodDeclaration@@public, void, MethodName:testStaticContentWithContext, Exception,  @AT@ 2084 @LENGTH@ 17
------INS MethodInvocation@@container.stop() @TO@ ExpressionStatement@@MethodInvocation:container.stop() @AT@ 2084 @LENGTH@ 16
---------INS SimpleName@@Name:container @TO@ MethodInvocation@@container.stop() @AT@ 2084 @LENGTH@ 9
---------INS SimpleName@@MethodName:stop:[] @TO@ MethodInvocation@@container.stop() @AT@ 2094 @LENGTH@ 6


INS MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @TO@ TypeDeclaration@@[public, abstract]CommonWebTests, AbstractWebIntegrationTests @AT@ 6604 @LENGTH@ 511
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @AT@ 6604 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @AT@ 6611 @LENGTH@ 4
---INS SimpleName@@MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest @TO@ MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @AT@ 6616 @LENGTH@ 53
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @AT@ 6679 @LENGTH@ 9
---INS EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @TO@ MethodDeclaration@@public, void, MethodName:collectionResourcesExposeLinksAsHeadersForHeadRequest, Exception,  @AT@ 6694 @LENGTH@ 418
------INS SingleVariableDeclaration@@String rel @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 6699 @LENGTH@ 10
---------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String rel @AT@ 6699 @LENGTH@ 6
---------INS SimpleName@@rel @TO@ SingleVariableDeclaration@@String rel @AT@ 6706 @LENGTH@ 3
------INS MethodInvocation@@MethodName:expectedRootLinkRels:[] @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 6712 @LENGTH@ 22
------INS VariableDeclarationStatement@@Link link=client.discoverUnique(rel); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 6742 @LENGTH@ 39
---------INS SimpleType@@Link @TO@ VariableDeclarationStatement@@Link link=client.discoverUnique(rel); @AT@ 6742 @LENGTH@ 4
---------INS VariableDeclarationFragment@@link=client.discoverUnique(rel) @TO@ VariableDeclarationStatement@@Link link=client.discoverUnique(rel); @AT@ 6747 @LENGTH@ 33
------------INS SimpleName@@link @TO@ VariableDeclarationFragment@@link=client.discoverUnique(rel) @AT@ 6747 @LENGTH@ 4
------------INS MethodInvocation@@client.discoverUnique(rel) @TO@ VariableDeclarationFragment@@link=client.discoverUnique(rel) @AT@ 6754 @LENGTH@ 26
---------------INS SimpleName@@Name:client @TO@ MethodInvocation@@client.discoverUnique(rel) @AT@ 6754 @LENGTH@ 6
---------------INS SimpleName@@MethodName:discoverUnique:[rel] @TO@ MethodInvocation@@client.discoverUnique(rel) @AT@ 6761 @LENGTH@ 19
------------------INS SimpleName@@rel @TO@ SimpleName@@MethodName:discoverUnique:[rel] @AT@ 6776 @LENGTH@ 3
------INS VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse(); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 6786 @LENGTH@ 154
---------INS SimpleType@@MockHttpServletResponse @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse(); @AT@ 6786 @LENGTH@ 23
---------INS VariableDeclarationFragment@@response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @TO@ VariableDeclarationStatement@@MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse(); @AT@ 6810 @LENGTH@ 129
------------INS SimpleName@@response @TO@ VariableDeclarationFragment@@response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6810 @LENGTH@ 8
------------INS MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @TO@ VariableDeclarationFragment@@response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6821 @LENGTH@ 118
---------------INS MethodInvocation@@MethodName:andReturn:[] @TO@ MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6821 @LENGTH@ 104
---------------INS MethodInvocation@@MethodName:andExpect:[status().isNoContent()] @TO@ MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6821 @LENGTH@ 84
------------------INS MethodInvocation@@status().isNoContent() @TO@ MethodInvocation@@MethodName:andExpect:[status().isNoContent()] @AT@ 6882 @LENGTH@ 22
---------------------INS MethodInvocation@@MethodName:status:[] @TO@ MethodInvocation@@status().isNoContent() @AT@ 6882 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:isNoContent:[] @TO@ MethodInvocation@@status().isNoContent() @AT@ 6891 @LENGTH@ 13
---------------INS MethodInvocation@@MethodName:perform:[head(link.expand().getHref())] @TO@ MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6821 @LENGTH@ 42
------------------INS MethodInvocation@@head(link.expand().getHref()) @TO@ MethodInvocation@@MethodName:perform:[head(link.expand().getHref())] @AT@ 6833 @LENGTH@ 29
---------------------INS SimpleName@@MethodName:head:[link.expand().getHref()] @TO@ MethodInvocation@@head(link.expand().getHref()) @AT@ 6833 @LENGTH@ 29
------------------------INS MethodInvocation@@link.expand().getHref() @TO@ SimpleName@@MethodName:head:[link.expand().getHref()] @AT@ 6838 @LENGTH@ 23
---------------------------INS MethodInvocation@@MethodName:expand:[] @TO@ MethodInvocation@@link.expand().getHref() @AT@ 6838 @LENGTH@ 13
---------------------------INS SimpleName@@Name:link @TO@ MethodInvocation@@link.expand().getHref() @AT@ 6838 @LENGTH@ 4
---------------------------INS SimpleName@@MethodName:getHref:[] @TO@ MethodInvocation@@link.expand().getHref() @AT@ 6852 @LENGTH@ 9
---------------INS SimpleName@@Name:mvc @TO@ MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6821 @LENGTH@ 3
---------------INS SimpleName@@MethodName:getResponse:[] @TO@ MethodInvocation@@mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse() @AT@ 6926 @LENGTH@ 13
------INS VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 6945 @LENGTH@ 56
---------INS SimpleType@@Links @TO@ VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @AT@ 6945 @LENGTH@ 5
---------INS VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @TO@ VariableDeclarationStatement@@Links links=Links.valueOf(response.getHeader("Link")); @AT@ 6951 @LENGTH@ 49
------------INS SimpleName@@links @TO@ VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @AT@ 6951 @LENGTH@ 5
------------INS MethodInvocation@@Links.valueOf(response.getHeader("Link")) @TO@ VariableDeclarationFragment@@links=Links.valueOf(response.getHeader("Link")) @AT@ 6959 @LENGTH@ 41
---------------INS SimpleName@@Name:Links @TO@ MethodInvocation@@Links.valueOf(response.getHeader("Link")) @AT@ 6959 @LENGTH@ 5
---------------INS SimpleName@@MethodName:valueOf:[response.getHeader("Link")] @TO@ MethodInvocation@@Links.valueOf(response.getHeader("Link")) @AT@ 6965 @LENGTH@ 35
------------------INS MethodInvocation@@response.getHeader("Link") @TO@ SimpleName@@MethodName:valueOf:[response.getHeader("Link")] @AT@ 6973 @LENGTH@ 26
---------------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getHeader("Link") @AT@ 6973 @LENGTH@ 8
---------------------INS SimpleName@@MethodName:getHeader:["Link"] @TO@ MethodInvocation@@response.getHeader("Link") @AT@ 6982 @LENGTH@ 17
------------------------INS StringLiteral@@"Link" @TO@ SimpleName@@MethodName:getHeader:["Link"] @AT@ 6992 @LENGTH@ 6
------INS ExpressionStatement@@MethodInvocation:assertThat(links.hasLink(Link.REL_SELF),is(true)) @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 7006 @LENGTH@ 51
---------INS MethodInvocation@@assertThat(links.hasLink(Link.REL_SELF),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(links.hasLink(Link.REL_SELF),is(true)) @AT@ 7006 @LENGTH@ 50
------------INS SimpleName@@MethodName:assertThat:[links.hasLink(Link.REL_SELF), is(true)] @TO@ MethodInvocation@@assertThat(links.hasLink(Link.REL_SELF),is(true)) @AT@ 7006 @LENGTH@ 50
---------------INS MethodInvocation@@links.hasLink(Link.REL_SELF) @TO@ SimpleName@@MethodName:assertThat:[links.hasLink(Link.REL_SELF), is(true)] @AT@ 7017 @LENGTH@ 28
------------------INS SimpleName@@Name:links @TO@ MethodInvocation@@links.hasLink(Link.REL_SELF) @AT@ 7017 @LENGTH@ 5
------------------INS SimpleName@@MethodName:hasLink:[Link.REL_SELF] @TO@ MethodInvocation@@links.hasLink(Link.REL_SELF) @AT@ 7023 @LENGTH@ 22
---------------------INS QualifiedName@@Link.REL_SELF @TO@ SimpleName@@MethodName:hasLink:[Link.REL_SELF] @AT@ 7031 @LENGTH@ 13
------------------------INS SimpleName@@Link @TO@ QualifiedName@@Link.REL_SELF @AT@ 7031 @LENGTH@ 4
------------------------INS SimpleName@@REL_SELF @TO@ QualifiedName@@Link.REL_SELF @AT@ 7036 @LENGTH@ 8
---------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[links.hasLink(Link.REL_SELF), is(true)] @AT@ 7047 @LENGTH@ 8
------------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 7047 @LENGTH@ 8
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 7050 @LENGTH@ 4
------------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 7047 @LENGTH@ 8
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 7050 @LENGTH@ 4
------INS ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("profile"),is(true)) @TO@ EnhancedForStatement@@for (String rel : expectedRootLinkRels()) {  Link link=client.discoverUnique(rel);  MockHttpServletResponse response=mvc.perform(head(link.expand().getHref())).andExpect(status().isNoContent()).andReturn().getResponse();  Links links=Links.valueOf(response.getHeader("Link"));  assertThat(links.hasLink(Link.REL_SELF),is(true));  assertThat(links.hasLink("profile"),is(true));} @AT@ 7061 @LENGTH@ 47
---------INS MethodInvocation@@assertThat(links.hasLink("profile"),is(true)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(links.hasLink("profile"),is(true)) @AT@ 7061 @LENGTH@ 46
------------INS SimpleName@@MethodName:assertThat:[links.hasLink("profile"), is(true)] @TO@ MethodInvocation@@assertThat(links.hasLink("profile"),is(true)) @AT@ 7061 @LENGTH@ 46
---------------INS MethodInvocation@@links.hasLink("profile") @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("profile"), is(true)] @AT@ 7072 @LENGTH@ 24
------------------INS SimpleName@@Name:links @TO@ MethodInvocation@@links.hasLink("profile") @AT@ 7072 @LENGTH@ 5
------------------INS SimpleName@@MethodName:hasLink:["profile"] @TO@ MethodInvocation@@links.hasLink("profile") @AT@ 7078 @LENGTH@ 18
---------------------INS StringLiteral@@"profile" @TO@ SimpleName@@MethodName:hasLink:["profile"] @AT@ 7086 @LENGTH@ 9
---------------INS MethodInvocation@@is(true) @TO@ SimpleName@@MethodName:assertThat:[links.hasLink("profile"), is(true)] @AT@ 7098 @LENGTH@ 8
------------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 7098 @LENGTH@ 8
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 7101 @LENGTH@ 4
------------------INS SimpleName@@MethodName:is:[true] @TO@ MethodInvocation@@is(true) @AT@ 7098 @LENGTH@ 8
---------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:is:[true] @AT@ 7101 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @TO@ TypeDeclaration@@[public]WhitelabelErrorEndpointTests,  @AT@ 1796 @LENGTH@ 409
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1796 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1803 @LENGTH@ 4
---INS SimpleName@@MethodName:testErrorPageNoError @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1808 @LENGTH@ 20
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1838 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:request.setContextPath("/foo") @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1852 @LENGTH@ 31
------INS MethodInvocation@@request.setContextPath("/foo") @TO@ ExpressionStatement@@MethodInvocation:request.setContextPath("/foo") @AT@ 1852 @LENGTH@ 30
---------INS SimpleName@@Name:request @TO@ MethodInvocation@@request.setContextPath("/foo") @AT@ 1852 @LENGTH@ 7
---------INS SimpleName@@MethodName:setContextPath:["/foo"] @TO@ MethodInvocation@@request.setContextPath("/foo") @AT@ 1860 @LENGTH@ 22
------------INS StringLiteral@@"/foo" @TO@ SimpleName@@MethodName:setContextPath:["/foo"] @AT@ 1875 @LENGTH@ 6
---INS VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1886 @LENGTH@ 52
------INS SimpleType@@ModelAndView @TO@ VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @AT@ 1886 @LENGTH@ 12
------INS VariableDeclarationFragment@@result=endpoint.handleError(request) @TO@ VariableDeclarationStatement@@ModelAndView result=endpoint.handleError(request); @AT@ 1899 @LENGTH@ 38
---------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=endpoint.handleError(request) @AT@ 1899 @LENGTH@ 6
---------INS MethodInvocation@@endpoint.handleError(request) @TO@ VariableDeclarationFragment@@result=endpoint.handleError(request) @AT@ 1908 @LENGTH@ 29
------------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.handleError(request) @AT@ 1908 @LENGTH@ 8
------------INS SimpleName@@MethodName:handleError:[request] @TO@ MethodInvocation@@endpoint.handleError(request) @AT@ 1917 @LENGTH@ 20
---------------INS SimpleName@@request @TO@ SimpleName@@MethodName:handleError:[request] @AT@ 1929 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:result.getView().render(result.getModel(),request,response) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 1941 @LENGTH@ 63
------INS MethodInvocation@@result.getView().render(result.getModel(),request,response) @TO@ ExpressionStatement@@MethodInvocation:result.getView().render(result.getModel(),request,response) @AT@ 1941 @LENGTH@ 62
---------INS MethodInvocation@@MethodName:getView:[] @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 1941 @LENGTH@ 16
---------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 1941 @LENGTH@ 6
---------INS SimpleName@@MethodName:render:[result.getModel(), request, response] @TO@ MethodInvocation@@result.getView().render(result.getModel(),request,response) @AT@ 1958 @LENGTH@ 45
------------INS MethodInvocation@@result.getModel() @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 1965 @LENGTH@ 17
---------------INS SimpleName@@Name:result @TO@ MethodInvocation@@result.getModel() @AT@ 1965 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getModel:[] @TO@ MethodInvocation@@result.getModel() @AT@ 1972 @LENGTH@ 10
------------INS SimpleName@@request @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 1984 @LENGTH@ 7
------------INS SimpleName@@response @TO@ SimpleName@@MethodName:render:[result.getModel(), request, response] @AT@ 1994 @LENGTH@ 8
---INS VariableDeclarationStatement@@String content=response.getContentAsString(); @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 2007 @LENGTH@ 47
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String content=response.getContentAsString(); @AT@ 2007 @LENGTH@ 6
------INS VariableDeclarationFragment@@content=response.getContentAsString() @TO@ VariableDeclarationStatement@@String content=response.getContentAsString(); @AT@ 2014 @LENGTH@ 39
---------INS SimpleName@@content @TO@ VariableDeclarationFragment@@content=response.getContentAsString() @AT@ 2014 @LENGTH@ 7
---------INS MethodInvocation@@response.getContentAsString() @TO@ VariableDeclarationFragment@@content=response.getContentAsString() @AT@ 2024 @LENGTH@ 29
------------INS SimpleName@@Name:response @TO@ MethodInvocation@@response.getContentAsString() @AT@ 2024 @LENGTH@ 8
------------INS SimpleName@@MethodName:getContentAsString:[] @TO@ MethodInvocation@@response.getContentAsString() @AT@ 2033 @LENGTH@ 20
---INS ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains("OAuth Error")) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 2057 @LENGTH@ 73
------INS MethodInvocation@@assertTrue("Wrong content: " + content,content.contains("OAuth Error")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains("OAuth Error")) @AT@ 2057 @LENGTH@ 72
---------INS SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("OAuth Error")] @TO@ MethodInvocation@@assertTrue("Wrong content: " + content,content.contains("OAuth Error")) @AT@ 2057 @LENGTH@ 72
------------INS InfixExpression@@"Wrong content: " + content @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("OAuth Error")] @AT@ 2068 @LENGTH@ 27
---------------INS StringLiteral@@"Wrong content: " @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2068 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2085 @LENGTH@ 1
---------------INS SimpleName@@content @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2088 @LENGTH@ 7
------------INS MethodInvocation@@content.contains("OAuth Error") @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("OAuth Error")] @AT@ 2097 @LENGTH@ 31
---------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains("OAuth Error") @AT@ 2097 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["OAuth Error"] @TO@ MethodInvocation@@content.contains("OAuth Error") @AT@ 2105 @LENGTH@ 23
------------------INS StringLiteral@@"OAuth Error" @TO@ SimpleName@@MethodName:contains:["OAuth Error"] @AT@ 2114 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains("Unknown")) @TO@ MethodDeclaration@@public, void, MethodName:testErrorPageNoError, Exception,  @AT@ 2133 @LENGTH@ 69
------INS MethodInvocation@@assertTrue("Wrong content: " + content,content.contains("Unknown")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("Wrong content: " + content,content.contains("Unknown")) @AT@ 2133 @LENGTH@ 68
---------INS SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("Unknown")] @TO@ MethodInvocation@@assertTrue("Wrong content: " + content,content.contains("Unknown")) @AT@ 2133 @LENGTH@ 68
------------INS InfixExpression@@"Wrong content: " + content @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("Unknown")] @AT@ 2144 @LENGTH@ 27
---------------INS StringLiteral@@"Wrong content: " @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2144 @LENGTH@ 17
---------------INS Operator@@+ @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2161 @LENGTH@ 1
---------------INS SimpleName@@content @TO@ InfixExpression@@"Wrong content: " + content @AT@ 2164 @LENGTH@ 7
------------INS MethodInvocation@@content.contains("Unknown") @TO@ SimpleName@@MethodName:assertTrue:["Wrong content: " + content, content.contains("Unknown")] @AT@ 2173 @LENGTH@ 27
---------------INS SimpleName@@Name:content @TO@ MethodInvocation@@content.contains("Unknown") @AT@ 2173 @LENGTH@ 7
---------------INS SimpleName@@MethodName:contains:["Unknown"] @TO@ MethodInvocation@@content.contains("Unknown") @AT@ 2181 @LENGTH@ 19
------------------INS StringLiteral@@"Unknown" @TO@ SimpleName@@MethodName:contains:["Unknown"] @AT@ 2190 @LENGTH@ 9


INS MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @TO@ TypeDeclaration@@[@Entity, @NamedQuery(name="AuditableUser.findByFirstname",query="SELECT u FROM AuditableUser u WHERE u.firstname = ?1"), public]AuditableUser, AbstractAuditable<AuditableUser,Integer> @AT@ 1669 @LENGTH@ 55
---INS Modifier@@public @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1669 @LENGTH@ 6
---INS SimpleName@@MethodName:AuditableUser @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1676 @LENGTH@ 13
---INS SingleVariableDeclaration@@Integer id @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1690 @LENGTH@ 10
------INS SimpleType@@Integer @TO@ SingleVariableDeclaration@@Integer id @AT@ 1690 @LENGTH@ 7
------INS SimpleName@@id @TO@ SingleVariableDeclaration@@Integer id @AT@ 1698 @LENGTH@ 2
---INS ConstructorInvocation@@this(id,null); @TO@ MethodDeclaration@@public, voidMethodName:AuditableUser, Integer id,  @AT@ 1706 @LENGTH@ 15
------INS SimpleName@@id @TO@ ConstructorInvocation@@this(id,null); @AT@ 1711 @LENGTH@ 2
------INS NullLiteral@@null @TO@ ConstructorInvocation@@this(id,null); @AT@ 1715 @LENGTH@ 4


UPD MethodDeclaration@@public, void, MethodName:addSessionListener,  @TO@ public, void, MethodName:addSessionListener, ServletException,  @AT@ 4372 @LENGTH@ 1046
---INS SimpleType@@ServletException @TO@ MethodDeclaration@@public, void, MethodName:addSessionListener,  @AT@ 4463 @LENGTH@ 16
---INS ExpressionStatement@@MethodInvocation:listeners.start() @TO@ MethodDeclaration@@public, void, MethodName:addSessionListener,  @AT@ 5042 @LENGTH@ 18
------INS MethodInvocation@@listeners.start() @TO@ ExpressionStatement@@MethodInvocation:listeners.start() @AT@ 5042 @LENGTH@ 17
---------INS SimpleName@@Name:listeners @TO@ MethodInvocation@@listeners.start() @AT@ 5042 @LENGTH@ 9
---------INS SimpleName@@MethodName:start:[] @TO@ MethodInvocation@@listeners.start() @AT@ 5052 @LENGTH@ 7


UPD Block@@ThenBody:{  exchange.getIn().setBody(getIn().getBody());  if (getIn().hasHeaders()) {    exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));  }  if (hasOut()) {    exchange.getOut().setBody(getOut().getBody());    if (getOut().hasHeaders()) {      exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));    }  }} @TO@ ThenBody:{  exchange.getIn().setBody(getIn().getBody());  if (getIn().hasHeaders()) {    exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));    exchange.getIn().copyAttachments(getIn());  }  if (hasOut()) {    exchange.getOut().setBody(getOut().getBody());    if (getOut().hasHeaders()) {      exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));    }    exchange.getOut().copyAttachments(getOut());  }} @AT@ 3241 @LENGTH@ 464
---UPD IfStatement@@if (getIn().hasHeaders()) {  exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));} @TO@ if (getIn().hasHeaders()) {  exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));  exchange.getIn().copyAttachments(getIn());} @AT@ 3312 @LENGTH@ 125
------UPD Block@@ThenBody:{  exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));} @TO@ ThenBody:{  exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));  exchange.getIn().copyAttachments(getIn());} @AT@ 3338 @LENGTH@ 99
---------INS ExpressionStatement@@MethodInvocation:exchange.getIn().copyAttachments(getIn()) @TO@ Block@@ThenBody:{  exchange.getIn().setHeaders(safeCopyHeaders(getIn().getHeaders()));} @AT@ 3490 @LENGTH@ 42
------------INS MethodInvocation@@exchange.getIn().copyAttachments(getIn()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().copyAttachments(getIn()) @AT@ 3490 @LENGTH@ 41
---------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().copyAttachments(getIn()) @AT@ 3490 @LENGTH@ 16
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().copyAttachments(getIn()) @AT@ 3490 @LENGTH@ 8
---------------INS SimpleName@@MethodName:copyAttachments:[getIn()] @TO@ MethodInvocation@@exchange.getIn().copyAttachments(getIn()) @AT@ 3507 @LENGTH@ 24
------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ SimpleName@@MethodName:copyAttachments:[getIn()] @AT@ 3523 @LENGTH@ 7
---UPD IfStatement@@if (hasOut()) {  exchange.getOut().setBody(getOut().getBody());  if (getOut().hasHeaders()) {    exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));  }} @TO@ if (hasOut()) {  exchange.getOut().setBody(getOut().getBody());  if (getOut().hasHeaders()) {    exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));  }  exchange.getOut().copyAttachments(getOut());} @AT@ 3450 @LENGTH@ 245
------UPD Block@@ThenBody:{  exchange.getOut().setBody(getOut().getBody());  if (getOut().hasHeaders()) {    exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));  }} @TO@ ThenBody:{  exchange.getOut().setBody(getOut().getBody());  if (getOut().hasHeaders()) {    exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));  }  exchange.getOut().copyAttachments(getOut());} @AT@ 3464 @LENGTH@ 231
---------INS ExpressionStatement@@MethodInvocation:exchange.getOut().copyAttachments(getOut()) @TO@ Block@@ThenBody:{  exchange.getOut().setBody(getOut().getBody());  if (getOut().hasHeaders()) {    exchange.getOut().setHeaders(safeCopyHeaders(getOut().getHeaders()));  }} @AT@ 3857 @LENGTH@ 44
------------INS MethodInvocation@@exchange.getOut().copyAttachments(getOut()) @TO@ ExpressionStatement@@MethodInvocation:exchange.getOut().copyAttachments(getOut()) @AT@ 3857 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().copyAttachments(getOut()) @AT@ 3857 @LENGTH@ 17
---------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().copyAttachments(getOut()) @AT@ 3857 @LENGTH@ 8
---------------INS SimpleName@@MethodName:copyAttachments:[getOut()] @TO@ MethodInvocation@@exchange.getOut().copyAttachments(getOut()) @AT@ 3875 @LENGTH@ 25
------------------INS MethodInvocation@@MethodName:getOut:[] @TO@ SimpleName@@MethodName:copyAttachments:[getOut()] @AT@ 3891 @LENGTH@ 8


UPD FieldDeclaration@@static, final, RuntimeCapability<Void>, [REMOTING_ENDPOINT_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.remoting.endpoint",Endpoint.class).build()] @TO@ static, final, RuntimeCapability<Void>, [REMOTING_ENDPOINT_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.remoting.endpoint",Endpoint.class).build()] @AT@ 3853 @LENGTH@ 176
---UPD VariableDeclarationFragment@@REMOTING_ENDPOINT_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.remoting.endpoint",Endpoint.class).build() @TO@ REMOTING_ENDPOINT_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.remoting.endpoint",Endpoint.class).build() @AT@ 3890 @LENGTH@ 138
------UPD MethodInvocation@@RuntimeCapability.Builder.of("org.wildfly.extension.remoting.endpoint",Endpoint.class).build() @TO@ RuntimeCapability.Builder.of("org.wildfly.remoting.endpoint",Endpoint.class).build() @AT@ 3933 @LENGTH@ 95
---------UPD MethodInvocation@@MethodName:of:["org.wildfly.extension.remoting.endpoint", Endpoint.class] @TO@ MethodName:of:["org.wildfly.remoting.endpoint", Endpoint.class] @AT@ 3933 @LENGTH@ 87
------------UPD StringLiteral@@"org.wildfly.extension.remoting.endpoint" @TO@ "org.wildfly.remoting.endpoint" @AT@ 3962 @LENGTH@ 41


UPD ThrowStatement@@ClassInstanceCreation:new IllegalStateException("Unexpected CharBuffer postion: actual=" + cbuf.position() + " expected="+ this.mark_cbuf) @TO@ ClassInstanceCreation:new IllegalStateException("Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf) @AT@ 9524 @LENGTH@ 122
---UPD ClassInstanceCreation@@IllegalStateException["Unexpected CharBuffer postion: actual=" + cbuf.position() + " expected="+ this.mark_cbuf] @TO@ IllegalStateException["Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf] @AT@ 9530 @LENGTH@ 115
------UPD InfixExpression@@"Unexpected CharBuffer postion: actual=" + cbuf.position() + " expected="+ this.mark_cbuf @TO@ "Unexpected CharBuffer postion: actual=" + cbuf.position() + " "+ "expected="+ this.mark_cbuf @AT@ 9556 @LENGTH@ 88
---------UPD StringLiteral@@" expected=" @TO@ "expected=" @AT@ 9615 @LENGTH@ 12
---------INS StringLiteral@@" " @TO@ InfixExpression@@"Unexpected CharBuffer postion: actual=" + cbuf.position() + " expected="+ this.mark_cbuf @AT@ 9648 @LENGTH@ 3


MOV ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testWriteAppendReopen, IOException,  @AT@ 2951 @LENGTH@ 15


UPD ExpressionStatement@@Assignment:actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,null,null) @TO@ Assignment:actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,"",null) @AT@ 18519 @LENGTH@ 88
---UPD Assignment@@actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,null,null) @TO@ actualBinding=new Binding(queueName,DestinationType.QUEUE,exchangeName,"",null) @AT@ 18519 @LENGTH@ 87
------UPD ClassInstanceCreation@@Binding[queueName, DestinationType.QUEUE, exchangeName, null, null] @TO@ Binding[queueName, DestinationType.QUEUE, exchangeName, "", null] @AT@ 18535 @LENGTH@ 71
---------INS StringLiteral@@"" @TO@ ClassInstanceCreation@@Binding[queueName, DestinationType.QUEUE, exchangeName, null, null] @AT@ 18595 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 18601 @LENGTH@ 4


DEL FieldDeclaration@@private, Logger, [log=LoggerFactory.getLogger(CamelCompleter.class)] @AT@ 1384 @LENGTH@ 67
---DEL Modifier@@private @AT@ 1384 @LENGTH@ 7
---DEL SimpleType@@Logger @AT@ 1392 @LENGTH@ 6
---DEL VariableDeclarationFragment@@log=LoggerFactory.getLogger(CamelCompleter.class) @AT@ 1399 @LENGTH@ 51
------DEL SimpleName@@log @AT@ 1399 @LENGTH@ 3
------DEL MethodInvocation@@LoggerFactory.getLogger(CamelCompleter.class) @AT@ 1405 @LENGTH@ 45
---------DEL SimpleName@@Name:LoggerFactory @AT@ 1405 @LENGTH@ 13
---------DEL SimpleName@@MethodName:getLogger:[CamelCompleter.class] @AT@ 1419 @LENGTH@ 31
------------DEL TypeLiteral@@CamelCompleter.class @AT@ 1429 @LENGTH@ 20


UPD FieldDeclaration@@public, boolean, [shouldGather=false] @TO@ public, boolean, [shouldGather=true] @AT@ 349 @LENGTH@ 36
---UPD VariableDeclarationFragment@@shouldGather=false @TO@ shouldGather=true @AT@ 364 @LENGTH@ 20
------UPD BooleanLiteral@@false @TO@ true @AT@ 379 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:context.stopRoute("test",0,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:context.stopRoute("test",1000,TimeUnit.MILLISECONDS) @AT@ 2629 @LENGTH@ 52
---UPD MethodInvocation@@context.stopRoute("test",0,TimeUnit.MILLISECONDS) @TO@ context.stopRoute("test",1000,TimeUnit.MILLISECONDS) @AT@ 2629 @LENGTH@ 51
------UPD SimpleName@@MethodName:stopRoute:["test", 0, TimeUnit.MILLISECONDS] @TO@ MethodName:stopRoute:["test", 1000, TimeUnit.MILLISECONDS] @AT@ 2637 @LENGTH@ 43
---------UPD NumberLiteral@@0 @TO@ 1000 @AT@ 2655 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")) @TO@ MethodInvocation:assertTrue(xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")) @AT@ 2523 @LENGTH@ 223
---UPD MethodInvocation@@assertTrue(xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")) @TO@ assertTrue(xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")) @AT@ 2523 @LENGTH@ 222
------UPD SimpleName@@MethodName:assertTrue:[xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")] @TO@ MethodName:assertTrue:[xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">")] @AT@ 2523 @LENGTH@ 222
---------UPD MethodInvocation@@xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">") @TO@ xml.contains("<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">") @AT@ 2534 @LENGTH@ 210
------------UPD SimpleName@@MethodName:contains:["<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">"] @TO@ MethodName:contains:["<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">"] @AT@ 2538 @LENGTH@ 206
---------------INS InfixExpression@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @TO@ SimpleName@@MethodName:contains:["<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">"] @AT@ 2547 @LENGTH@ 217
------------------INS StringLiteral@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" @TO@ InfixExpression@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @AT@ 2547 @LENGTH@ 93
------------------INS Operator@@+ @TO@ InfixExpression@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @AT@ 2640 @LENGTH@ 1
------------------INS StringLiteral@@" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @TO@ InfixExpression@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\"" + " defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @AT@ 2659 @LENGTH@ 105
---------------DEL StringLiteral@@"<param paramType=\"query\" name=\"header_letter\" description=\"header param description2\" defaultValue=\"b\" required=\"false\" allowMultiple=\"true\" dataType=\"string\" paramAccess=\"acc2\">" @AT@ 2547 @LENGTH@ 196


DEL MethodDeclaration@@public, static, URI, MethodName:createURI, URL baseURL, int requestDuration, URISyntaxException,  @AT@ 2173 @LENGTH@ 258
---DEL Modifier@@public @AT@ 2173 @LENGTH@ 6
---DEL Modifier@@static @AT@ 2180 @LENGTH@ 6
---DEL SimpleType@@URI @AT@ 2187 @LENGTH@ 3
---DEL SimpleName@@MethodName:createURI @AT@ 2191 @LENGTH@ 9
---DEL SingleVariableDeclaration@@URL baseURL @AT@ 2201 @LENGTH@ 11
------DEL SimpleType@@URL @AT@ 2201 @LENGTH@ 3
------DEL SimpleName@@baseURL @AT@ 2205 @LENGTH@ 7
---DEL SingleVariableDeclaration@@int requestDuration @AT@ 2214 @LENGTH@ 19
------DEL PrimitiveType@@int @AT@ 2214 @LENGTH@ 3
------DEL SimpleName@@requestDuration @AT@ 2218 @LENGTH@ 15
---DEL SimpleType@@URISyntaxException @AT@ 2242 @LENGTH@ 18
---DEL ReturnStatement@@MethodInvocation:baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2271 @LENGTH@ 154
------DEL MethodInvocation@@baseURL.toURI().resolve(new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()) @AT@ 2278 @LENGTH@ 146
---------DEL MethodInvocation@@MethodName:toURI:[] @AT@ 2278 @LENGTH@ 15
---------DEL SimpleName@@Name:baseURL @AT@ 2278 @LENGTH@ 7
---------DEL SimpleName@@MethodName:resolve:[new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString()] @AT@ 2294 @LENGTH@ 130
------------DEL MethodInvocation@@new StringBuilder(SERVLET_NAME).append('?').append(REQUEST_DURATION_PARAM).append('=').append(requestDuration).toString() @AT@ 2302 @LENGTH@ 121
---------------DEL MethodInvocation@@MethodName:append:[requestDuration] @AT@ 2302 @LENGTH@ 110
------------------DEL SimpleName@@requestDuration @AT@ 2396 @LENGTH@ 15
---------------DEL MethodInvocation@@MethodName:append:['='] @AT@ 2302 @LENGTH@ 86
------------------DEL CharacterLiteral@@'=' @AT@ 2384 @LENGTH@ 3
---------------DEL MethodInvocation@@MethodName:append:[REQUEST_DURATION_PARAM] @AT@ 2302 @LENGTH@ 74
------------------DEL SimpleName@@REQUEST_DURATION_PARAM @AT@ 2353 @LENGTH@ 22
---------------DEL MethodInvocation@@MethodName:append:['?'] @AT@ 2302 @LENGTH@ 43
------------------DEL CharacterLiteral@@'?' @AT@ 2341 @LENGTH@ 3
---------------DEL ClassInstanceCreation@@StringBuilder[SERVLET_NAME] @AT@ 2302 @LENGTH@ 31
------------------DEL New@@new @AT@ 2302 @LENGTH@ 3
------------------DEL SimpleType@@StringBuilder @AT@ 2306 @LENGTH@ 13
------------------DEL SimpleName@@SERVLET_NAME @AT@ 2320 @LENGTH@ 12
---------------DEL SimpleName@@MethodName:toString:[] @AT@ 2413 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @TO@ TypeDeclaration@@[@RunWith(MockitoJUnitRunner.class), public]JsonPatchHandlerUnitTests,  @AT@ 3830 @LENGTH@ 268
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3830 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3837 @LENGTH@ 4
---INS SimpleName@@MethodName:hintsToMediaTypeIfBodyCantBeRead @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3842 @LENGTH@ 32
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3884 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:exception.expect(HttpMessageNotReadableException.class) @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3899 @LENGTH@ 56
------INS MethodInvocation@@exception.expect(HttpMessageNotReadableException.class) @TO@ ExpressionStatement@@MethodInvocation:exception.expect(HttpMessageNotReadableException.class) @AT@ 3899 @LENGTH@ 55
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expect(HttpMessageNotReadableException.class) @AT@ 3899 @LENGTH@ 9
---------INS SimpleName@@MethodName:expect:[HttpMessageNotReadableException.class] @TO@ MethodInvocation@@exception.expect(HttpMessageNotReadableException.class) @AT@ 3909 @LENGTH@ 45
------------INS TypeLiteral@@HttpMessageNotReadableException.class @TO@ SimpleName@@MethodName:expect:[HttpMessageNotReadableException.class] @AT@ 3916 @LENGTH@ 37
---INS ExpressionStatement@@MethodInvocation:exception.expectMessage(RestMediaTypes.JSON_PATCH_JSON.toString()) @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 3958 @LENGTH@ 67
------INS MethodInvocation@@exception.expectMessage(RestMediaTypes.JSON_PATCH_JSON.toString()) @TO@ ExpressionStatement@@MethodInvocation:exception.expectMessage(RestMediaTypes.JSON_PATCH_JSON.toString()) @AT@ 3958 @LENGTH@ 66
---------INS SimpleName@@Name:exception @TO@ MethodInvocation@@exception.expectMessage(RestMediaTypes.JSON_PATCH_JSON.toString()) @AT@ 3958 @LENGTH@ 9
---------INS SimpleName@@MethodName:expectMessage:[RestMediaTypes.JSON_PATCH_JSON.toString()] @TO@ MethodInvocation@@exception.expectMessage(RestMediaTypes.JSON_PATCH_JSON.toString()) @AT@ 3968 @LENGTH@ 56
------------INS MethodInvocation@@RestMediaTypes.JSON_PATCH_JSON.toString() @TO@ SimpleName@@MethodName:expectMessage:[RestMediaTypes.JSON_PATCH_JSON.toString()] @AT@ 3982 @LENGTH@ 41
---------------INS QualifiedName@@Name:RestMediaTypes.JSON_PATCH_JSON @TO@ MethodInvocation@@RestMediaTypes.JSON_PATCH_JSON.toString() @AT@ 3982 @LENGTH@ 30
---------------INS SimpleName@@MethodName:toString:[] @TO@ MethodInvocation@@RestMediaTypes.JSON_PATCH_JSON.toString() @AT@ 4013 @LENGTH@ 10
---INS ExpressionStatement@@MethodInvocation:handler.applyPatch(asStream("{ \"foo\" : \"bar\" }"),new User()) @TO@ MethodDeclaration@@public, void, MethodName:hintsToMediaTypeIfBodyCantBeRead, Exception,  @AT@ 4029 @LENGTH@ 66
------INS MethodInvocation@@handler.applyPatch(asStream("{ \"foo\" : \"bar\" }"),new User()) @TO@ ExpressionStatement@@MethodInvocation:handler.applyPatch(asStream("{ \"foo\" : \"bar\" }"),new User()) @AT@ 4029 @LENGTH@ 65
---------INS SimpleName@@Name:handler @TO@ MethodInvocation@@handler.applyPatch(asStream("{ \"foo\" : \"bar\" }"),new User()) @AT@ 4029 @LENGTH@ 7
---------INS SimpleName@@MethodName:applyPatch:[asStream("{ \"foo\" : \"bar\" }"), new User()] @TO@ MethodInvocation@@handler.applyPatch(asStream("{ \"foo\" : \"bar\" }"),new User()) @AT@ 4037 @LENGTH@ 57
------------INS MethodInvocation@@asStream("{ \"foo\" : \"bar\" }") @TO@ SimpleName@@MethodName:applyPatch:[asStream("{ \"foo\" : \"bar\" }"), new User()] @AT@ 4048 @LENGTH@ 33
---------------INS SimpleName@@MethodName:asStream:["{ \"foo\" : \"bar\" }"] @TO@ MethodInvocation@@asStream("{ \"foo\" : \"bar\" }") @AT@ 4048 @LENGTH@ 33
------------------INS StringLiteral@@"{ \"foo\" : \"bar\" }" @TO@ SimpleName@@MethodName:asStream:["{ \"foo\" : \"bar\" }"] @AT@ 4057 @LENGTH@ 23
------------INS ClassInstanceCreation@@User[] @TO@ SimpleName@@MethodName:applyPatch:[asStream("{ \"foo\" : \"bar\" }"), new User()] @AT@ 4083 @LENGTH@ 10
---------------INS New@@new @TO@ ClassInstanceCreation@@User[] @AT@ 4083 @LENGTH@ 3
---------------INS SimpleType@@User @TO@ ClassInstanceCreation@@User[] @AT@ 4087 @LENGTH@ 4


UPD FieldDeclaration@@static, final, String, [REMOTING_CAPABILITY="org.wildfly.extension.remoting.endpoint"] @TO@ static, final, String, [REMOTING_CAPABILITY="org.wildfly.remoting.endpoint"] @AT@ 2384 @LENGTH@ 84
---UPD VariableDeclarationFragment@@REMOTING_CAPABILITY="org.wildfly.extension.remoting.endpoint" @TO@ REMOTING_CAPABILITY="org.wildfly.remoting.endpoint" @AT@ 2404 @LENGTH@ 63
------UPD StringLiteral@@"org.wildfly.extension.remoting.endpoint" @TO@ "org.wildfly.remoting.endpoint" @AT@ 2426 @LENGTH@ 41


INS VariableDeclarationStatement@@Task buildTask=p.getTasks().getByName("build"); @TO@ MethodDeclaration@@public, void, MethodName:execute, Project project,  @AT@ 889 @LENGTH@ 49
---INS SimpleType@@Task @TO@ VariableDeclarationStatement@@Task buildTask=p.getTasks().getByName("build"); @AT@ 889 @LENGTH@ 4
---INS VariableDeclarationFragment@@buildTask=p.getTasks().getByName("build") @TO@ VariableDeclarationStatement@@Task buildTask=p.getTasks().getByName("build"); @AT@ 894 @LENGTH@ 43
------INS SimpleName@@buildTask @TO@ VariableDeclarationFragment@@buildTask=p.getTasks().getByName("build") @AT@ 894 @LENGTH@ 9
------INS MethodInvocation@@p.getTasks().getByName("build") @TO@ VariableDeclarationFragment@@buildTask=p.getTasks().getByName("build") @AT@ 906 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:getTasks:[] @TO@ MethodInvocation@@p.getTasks().getByName("build") @AT@ 906 @LENGTH@ 12
---------INS SimpleName@@Name:p @TO@ MethodInvocation@@p.getTasks().getByName("build") @AT@ 906 @LENGTH@ 1
---------INS SimpleName@@MethodName:getByName:["build"] @TO@ MethodInvocation@@p.getTasks().getByName("build") @AT@ 919 @LENGTH@ 18
------------INS StringLiteral@@"build" @TO@ SimpleName@@MethodName:getByName:["build"] @AT@ 929 @LENGTH@ 7


UPD SuperConstructorInvocation@@super(modelElement,addHandler,IDMConfigRemoveStepHandler.INSTANCE,IDMExtension.getResourceDescriptionResolver(modelElement.getName()),attributes);
 @TO@ super(modelElement,addHandler,DefaultRemoveStepHandler.INSTANCE,IDMExtension.getResourceDescriptionResolver(modelElement.getName()),attributes);
 @AT@ 2712 @LENGTH@ 150
---UPD QualifiedName@@IDMConfigRemoveStepHandler.INSTANCE @TO@ DefaultRemoveStepHandler.INSTANCE @AT@ 2744 @LENGTH@ 35
------UPD SimpleName@@IDMConfigRemoveStepHandler @TO@ DefaultRemoveStepHandler @AT@ 2744 @LENGTH@ 26


UPD ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Assignment:uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 10941 @LENGTH@ 16


UPD VariableDeclarationStatement@@String host=""; @TO@ String host="localhost"; @AT@ 5570 @LENGTH@ 17
---UPD VariableDeclarationFragment@@host="" @TO@ host="localhost" @AT@ 5577 @LENGTH@ 9
------UPD StringLiteral@@"" @TO@ "localhost" @AT@ 5584 @LENGTH@ 2


INS ConstructorInvocation@@this(); @TO@ MethodDeclaration@@public, voidMethodName:PropertiesComponent, boolean isDefaultCreated,  @AT@ 4520 @LENGTH@ 7


UPD TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,true);  } else {    old.setBody(newBody);    if (!exchange.hasOut()) {      exchange.setOut(exchange.getIn());    }  }} catch (Exception e) {  exchange.setException(e);} @TO@ try {  Object newBody=expression.evaluate(exchange,Object.class);  if (exchange.getException() != null) {    callback.done(true);    return true;  }  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,true);  } else {    old.setBody(newBody);    if (!exchange.hasOut()) {      exchange.setOut(exchange.getIn());    }  }} catch (Throwable e) {  exchange.setException(e);} @AT@ 1950 @LENGTH@ 1132
---INS IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @TO@ TryStatement@@try {  Object newBody=expression.evaluate(exchange,Object.class);  boolean out=exchange.hasOut();  Message old=out ? exchange.getOut() : exchange.getIn();  boolean copyNeeded=!(old.getClass().equals(DefaultMessage.class));  if (copyNeeded) {    Message msg=new DefaultMessage();    msg.copyFrom(old);    msg.setBody(newBody);    ExchangeHelper.replaceMessage(exchange,msg,true);  } else {    old.setBody(newBody);    if (!exchange.hasOut()) {      exchange.setOut(exchange.getIn());    }  }} catch (Exception e) {  exchange.setException(e);} @AT@ 2043 @LENGTH@ 194
------INS InfixExpression@@exchange.getException() != null @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 2047 @LENGTH@ 31
---------INS MethodInvocation@@exchange.getException() @TO@ InfixExpression@@exchange.getException() != null @AT@ 2047 @LENGTH@ 23
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getException() @AT@ 2047 @LENGTH@ 8
------------INS SimpleName@@MethodName:getException:[] @TO@ MethodInvocation@@exchange.getException() @AT@ 2056 @LENGTH@ 14
---------INS Operator@@!= @TO@ InfixExpression@@exchange.getException() != null @AT@ 2070 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@exchange.getException() != null @AT@ 2074 @LENGTH@ 4
------INS Block@@ThenBody:{  callback.done(true);  return true;} @TO@ IfStatement@@if (exchange.getException() != null) {  callback.done(true);  return true;} @AT@ 2080 @LENGTH@ 157
---------INS ExpressionStatement@@MethodInvocation:callback.done(true) @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2174 @LENGTH@ 20
------------INS MethodInvocation@@callback.done(true) @TO@ ExpressionStatement@@MethodInvocation:callback.done(true) @AT@ 2174 @LENGTH@ 19
---------------INS SimpleName@@Name:callback @TO@ MethodInvocation@@callback.done(true) @AT@ 2174 @LENGTH@ 8
---------------INS SimpleName@@MethodName:done:[true] @TO@ MethodInvocation@@callback.done(true) @AT@ 2183 @LENGTH@ 10
------------------INS BooleanLiteral@@true @TO@ SimpleName@@MethodName:done:[true] @AT@ 2188 @LENGTH@ 4
---------INS ReturnStatement@@BooleanLiteral:true @TO@ Block@@ThenBody:{  callback.done(true);  return true;} @AT@ 2211 @LENGTH@ 12
------------INS BooleanLiteral@@true @TO@ ReturnStatement@@BooleanLiteral:true @AT@ 2218 @LENGTH@ 4
---UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Throwable e) {  exchange.setException(e);} @AT@ 3013 @LENGTH@ 69
------UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 3020 @LENGTH@ 11
---------UPD SimpleType@@Exception @TO@ Throwable @AT@ 3020 @LENGTH@ 9


UPD FieldDeclaration@@private, final, Map<E,C>, [contexts=new HashMap<E,C>()] @TO@ private, final, Map<E,C>, [contexts=new ConcurrentHashMap<E,C>()] @AT@ 2116 @LENGTH@ 55
---UPD VariableDeclarationFragment@@contexts=new HashMap<E,C>() @TO@ contexts=new ConcurrentHashMap<E,C>() @AT@ 2140 @LENGTH@ 30
------UPD ClassInstanceCreation@@HashMap<E,C>[] @TO@ ConcurrentHashMap<E,C>[] @AT@ 2151 @LENGTH@ 19
---------UPD ParameterizedType@@HashMap<E,C> @TO@ ConcurrentHashMap<E,C> @AT@ 2155 @LENGTH@ 13
------------UPD SimpleType@@HashMap @TO@ ConcurrentHashMap @AT@ 2155 @LENGTH@ 7


UPD ExpressionStatement@@Assignment:applicationContext=new ClassPathXmlApplicationContext(SnapshotServiceImportExportIntegrationTest.class.getName().replaceAll("\\.",File.separator).concat("-context.xml")) @TO@ Assignment:applicationContext=new ClassPathXmlApplicationContext(SnapshotServiceImportExportIntegrationTest.class.getName().replace(".","/").concat("-context.xml")) @AT@ 4398 @LENGTH@ 182
---UPD Assignment@@applicationContext=new ClassPathXmlApplicationContext(SnapshotServiceImportExportIntegrationTest.class.getName().replaceAll("\\.",File.separator).concat("-context.xml")) @TO@ applicationContext=new ClassPathXmlApplicationContext(SnapshotServiceImportExportIntegrationTest.class.getName().replace(".","/").concat("-context.xml")) @AT@ 4398 @LENGTH@ 181
------UPD ClassInstanceCreation@@ClassPathXmlApplicationContext[SnapshotServiceImportExportIntegrationTest.class.getName().replaceAll("\\.",File.separator).concat("-context.xml")] @TO@ ClassPathXmlApplicationContext[SnapshotServiceImportExportIntegrationTest.class.getName().replace(".","/").concat("-context.xml")] @AT@ 4419 @LENGTH@ 160
---------UPD MethodInvocation@@SnapshotServiceImportExportIntegrationTest.class.getName().replaceAll("\\.",File.separator).concat("-context.xml") @TO@ SnapshotServiceImportExportIntegrationTest.class.getName().replace(".","/").concat("-context.xml") @AT@ 4458 @LENGTH@ 120
------------UPD MethodInvocation@@MethodName:replaceAll:["\\.", File.separator] @TO@ MethodName:replace:[".", "/"] @AT@ 4458 @LENGTH@ 92
---------------UPD StringLiteral@@"\\." @TO@ "." @AT@ 4528 @LENGTH@ 5
---------------INS StringLiteral@@"/" @TO@ MethodInvocation@@MethodName:replaceAll:["\\.", File.separator] @AT@ 4530 @LENGTH@ 3
---------------DEL QualifiedName@@File.separator @AT@ 4535 @LENGTH@ 14
------------------DEL SimpleName@@File @AT@ 4535 @LENGTH@ 4
------------------DEL SimpleName@@separator @AT@ 4540 @LENGTH@ 9


UPD MethodDeclaration@@protected, synchronized, TimeSlot, MethodName:nextSlot,  @TO@ protected, synchronized, TimeSlot, MethodName:nextSlot, ThrottlerRejectedExecutionException,  @AT@ 6083 @LENGTH@ 256
---INS SimpleType@@ThrottlerRejectedExecutionException @TO@ MethodDeclaration@@protected, synchronized, TimeSlot, MethodName:nextSlot,  @AT@ 6133 @LENGTH@ 35
---DEL IfStatement@@if (slot == null) {  slot=new TimeSlot();} @AT@ 6136 @LENGTH@ 64
------DEL InfixExpression@@slot == null @AT@ 6140 @LENGTH@ 12
---------DEL SimpleName@@slot @AT@ 6140 @LENGTH@ 4
---------DEL Operator@@== @AT@ 6144 @LENGTH@ 2
---------DEL NullLiteral@@null @AT@ 6148 @LENGTH@ 4
---UPD IfStatement@@if (slot.isFull() || !slot.isPast()) {  slot=slot.next();} @TO@ if (slot == null) {  slot=new TimeSlot();} else {  if (rejectExecution && slot.isFull() && !slot.isPast()) {    throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");  }  if (slot.isFull() || slot.isPast()) {    slot=slot.next();  }} @AT@ 6209 @LENGTH@ 80
------MOV Block@@ThenBody:{  slot=new TimeSlot();} @TO@ IfStatement@@if (slot.isFull() || !slot.isPast()) {  slot=slot.next();} @AT@ 6154 @LENGTH@ 46
------INS InfixExpression@@slot == null @TO@ IfStatement@@if (slot.isFull() || !slot.isPast()) {  slot=slot.next();} @AT@ 6183 @LENGTH@ 12
---------INS SimpleName@@slot @TO@ InfixExpression@@slot == null @AT@ 6183 @LENGTH@ 4
---------INS Operator@@== @TO@ InfixExpression@@slot == null @AT@ 6187 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@slot == null @AT@ 6191 @LENGTH@ 4
------UPD InfixExpression@@slot.isFull() || !slot.isPast() @TO@ rejectExecution && slot.isFull() && !slot.isPast() @AT@ 6213 @LENGTH@ 31
------INS Block@@ElseBody:{  if (rejectExecution && slot.isFull() && !slot.isPast()) {    throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");  }  if (slot.isFull() || slot.isPast()) {    slot=slot.next();  }} @TO@ IfStatement@@if (slot.isFull() || !slot.isPast()) {  slot=slot.next();} @AT@ 6249 @LENGTH@ 291
---------INS IfStatement@@if (rejectExecution && slot.isFull() && !slot.isPast()) {  throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");} @TO@ Block@@ElseBody:{  if (rejectExecution && slot.isFull() && !slot.isPast()) {    throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");  }  if (slot.isFull() || slot.isPast()) {    slot=slot.next();  }} @AT@ 6263 @LENGTH@ 167
------------MOV InfixExpression@@slot.isFull() || !slot.isPast() @TO@ IfStatement@@if (rejectExecution && slot.isFull() && !slot.isPast()) {  throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");} @AT@ 6213 @LENGTH@ 31
---------------DEL Operator@@|| @AT@ 6226 @LENGTH@ 2
---------------INS SimpleName@@rejectExecution @TO@ InfixExpression@@slot.isFull() || !slot.isPast() @AT@ 6267 @LENGTH@ 15
---------------INS Operator@@&& @TO@ InfixExpression@@slot.isFull() || !slot.isPast() @AT@ 6282 @LENGTH@ 2
------------INS Block@@ThenBody:{  throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");} @TO@ IfStatement@@if (rejectExecution && slot.isFull() && !slot.isPast()) {  throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");} @AT@ 6319 @LENGTH@ 111
---------------INS ThrowStatement@@ClassInstanceCreation:new ThrottlerRejectedExecutionException("Exceed the max request limit!") @TO@ Block@@ThenBody:{  throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");} @AT@ 6337 @LENGTH@ 79
------------------INS ClassInstanceCreation@@ThrottlerRejectedExecutionException["Exceed the max request limit!"] @TO@ ThrowStatement@@ClassInstanceCreation:new ThrottlerRejectedExecutionException("Exceed the max request limit!") @AT@ 6343 @LENGTH@ 72
---------------------INS New@@new @TO@ ClassInstanceCreation@@ThrottlerRejectedExecutionException["Exceed the max request limit!"] @AT@ 6343 @LENGTH@ 3
---------------------INS SimpleType@@ThrottlerRejectedExecutionException @TO@ ClassInstanceCreation@@ThrottlerRejectedExecutionException["Exceed the max request limit!"] @AT@ 6347 @LENGTH@ 35
---------------------INS StringLiteral@@"Exceed the max request limit!" @TO@ ClassInstanceCreation@@ThrottlerRejectedExecutionException["Exceed the max request limit!"] @AT@ 6383 @LENGTH@ 31
---------INS IfStatement@@if (slot.isFull() || slot.isPast()) {  slot=slot.next();} @TO@ Block@@ElseBody:{  if (rejectExecution && slot.isFull() && !slot.isPast()) {    throw new ThrottlerRejectedExecutionException("Exceed the max request limit!");  }  if (slot.isFull() || slot.isPast()) {    slot=slot.next();  }} @AT@ 6443 @LENGTH@ 87
------------MOV Block@@ThenBody:{  slot=slot.next();} @TO@ IfStatement@@if (slot.isFull() || slot.isPast()) {  slot=slot.next();} @AT@ 6246 @LENGTH@ 43
------------INS InfixExpression@@slot.isFull() || slot.isPast() @TO@ IfStatement@@if (slot.isFull() || slot.isPast()) {  slot=slot.next();} @AT@ 6447 @LENGTH@ 30
---------------INS MethodInvocation@@slot.isFull() @TO@ InfixExpression@@slot.isFull() || slot.isPast() @AT@ 6447 @LENGTH@ 13
------------------INS SimpleName@@Name:slot @TO@ MethodInvocation@@slot.isFull() @AT@ 6447 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isFull:[] @TO@ MethodInvocation@@slot.isFull() @AT@ 6452 @LENGTH@ 8
---------------INS Operator@@|| @TO@ InfixExpression@@slot.isFull() || slot.isPast() @AT@ 6460 @LENGTH@ 2
---------------INS MethodInvocation@@slot.isPast() @TO@ InfixExpression@@slot.isFull() || slot.isPast() @AT@ 6464 @LENGTH@ 13
------------------INS SimpleName@@Name:slot @TO@ MethodInvocation@@slot.isPast() @AT@ 6464 @LENGTH@ 4
------------------INS SimpleName@@MethodName:isPast:[] @TO@ MethodInvocation@@slot.isPast() @AT@ 6469 @LENGTH@ 8


INS MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 14505 @LENGTH@ 440
---INS Modifier@@public @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14505 @LENGTH@ 6
---INS ParameterizedType@@MultiSet<E> @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14512 @LENGTH@ 11
------INS SimpleType@@MultiSet @TO@ ParameterizedType@@MultiSet<E> @AT@ 14512 @LENGTH@ 8
------INS SimpleType@@E @TO@ ParameterizedType@@MultiSet<E> @AT@ 14521 @LENGTH@ 1
---INS SimpleName@@MethodName:createPredicatedMultiSet @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14524 @LENGTH@ 24
---INS SingleVariableDeclaration@@final MultiSet<E> multiset @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14549 @LENGTH@ 26
------INS Modifier@@final @TO@ SingleVariableDeclaration@@final MultiSet<E> multiset @AT@ 14549 @LENGTH@ 5
------INS ParameterizedType@@MultiSet<E> @TO@ SingleVariableDeclaration@@final MultiSet<E> multiset @AT@ 14555 @LENGTH@ 11
---------INS SimpleType@@MultiSet @TO@ ParameterizedType@@MultiSet<E> @AT@ 14555 @LENGTH@ 8
---------INS SimpleType@@E @TO@ ParameterizedType@@MultiSet<E> @AT@ 14564 @LENGTH@ 1
------INS SimpleName@@multiset @TO@ SingleVariableDeclaration@@final MultiSet<E> multiset @AT@ 14567 @LENGTH@ 8
---INS IfStatement@@if (multiset == null) {  throw new NullPointerException("MultiSet must not be null.");} @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14591 @LENGTH@ 115
------INS InfixExpression@@multiset == null @TO@ IfStatement@@if (multiset == null) {  throw new NullPointerException("MultiSet must not be null.");} @AT@ 14595 @LENGTH@ 16
---------INS SimpleName@@multiset @TO@ InfixExpression@@multiset == null @AT@ 14595 @LENGTH@ 8
---------INS Operator@@== @TO@ InfixExpression@@multiset == null @AT@ 14603 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@multiset == null @AT@ 14607 @LENGTH@ 4
------INS Block@@ThenBody:{  throw new NullPointerException("MultiSet must not be null.");} @TO@ IfStatement@@if (multiset == null) {  throw new NullPointerException("MultiSet must not be null.");} @AT@ 14613 @LENGTH@ 93
---------INS ThrowStatement@@ClassInstanceCreation:new NullPointerException("MultiSet must not be null.") @TO@ Block@@ThenBody:{  throw new NullPointerException("MultiSet must not be null.");} @AT@ 14631 @LENGTH@ 61
------------INS ClassInstanceCreation@@NullPointerException["MultiSet must not be null."] @TO@ ThrowStatement@@ClassInstanceCreation:new NullPointerException("MultiSet must not be null.") @AT@ 14637 @LENGTH@ 54
---------------INS New@@new @TO@ ClassInstanceCreation@@NullPointerException["MultiSet must not be null."] @AT@ 14637 @LENGTH@ 3
---------------INS SimpleType@@NullPointerException @TO@ ClassInstanceCreation@@NullPointerException["MultiSet must not be null."] @AT@ 14641 @LENGTH@ 20
---------------INS StringLiteral@@"MultiSet must not be null." @TO@ ClassInstanceCreation@@NullPointerException["MultiSet must not be null."] @AT@ 14662 @LENGTH@ 28
---INS VariableDeclarationStatement@@final PredicatedMultiSet<E> predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate); @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14719 @LENGTH@ 128
------INS Modifier@@final @TO@ VariableDeclarationStatement@@final PredicatedMultiSet<E> predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate); @AT@ 14719 @LENGTH@ 5
------INS ParameterizedType@@PredicatedMultiSet<E> @TO@ VariableDeclarationStatement@@final PredicatedMultiSet<E> predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate); @AT@ 14725 @LENGTH@ 21
---------INS SimpleType@@PredicatedMultiSet @TO@ ParameterizedType@@PredicatedMultiSet<E> @AT@ 14725 @LENGTH@ 18
---------INS SimpleType@@E @TO@ ParameterizedType@@PredicatedMultiSet<E> @AT@ 14744 @LENGTH@ 1
------INS VariableDeclarationFragment@@predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @TO@ VariableDeclarationStatement@@final PredicatedMultiSet<E> predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate); @AT@ 14747 @LENGTH@ 99
---------INS SimpleName@@predicatedMultiSet @TO@ VariableDeclarationFragment@@predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @AT@ 14747 @LENGTH@ 18
---------INS MethodInvocation@@PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @TO@ VariableDeclarationFragment@@predicatedMultiSet=PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @AT@ 14788 @LENGTH@ 58
------------INS SimpleName@@Name:PredicatedMultiSet @TO@ MethodInvocation@@PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @AT@ 14788 @LENGTH@ 18
------------INS SimpleName@@MethodName:predicatedMultiSet:[multiset, predicate] @TO@ MethodInvocation@@PredicatedMultiSet.predicatedMultiSet(multiset,predicate) @AT@ 14807 @LENGTH@ 39
---------------INS SimpleName@@multiset @TO@ SimpleName@@MethodName:predicatedMultiSet:[multiset, predicate] @AT@ 14826 @LENGTH@ 8
---------------INS SimpleName@@predicate @TO@ SimpleName@@MethodName:predicatedMultiSet:[multiset, predicate] @AT@ 14836 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:predicatedMultiSet.addAll(accepted) @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14860 @LENGTH@ 36
------INS MethodInvocation@@predicatedMultiSet.addAll(accepted) @TO@ ExpressionStatement@@MethodInvocation:predicatedMultiSet.addAll(accepted) @AT@ 14860 @LENGTH@ 35
---------INS SimpleName@@Name:predicatedMultiSet @TO@ MethodInvocation@@predicatedMultiSet.addAll(accepted) @AT@ 14860 @LENGTH@ 18
---------INS SimpleName@@MethodName:addAll:[accepted] @TO@ MethodInvocation@@predicatedMultiSet.addAll(accepted) @AT@ 14879 @LENGTH@ 16
------------INS SimpleName@@accepted @TO@ SimpleName@@MethodName:addAll:[accepted] @AT@ 14886 @LENGTH@ 8
---INS ReturnStatement@@SimpleName:predicatedMultiSet @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet, final MultiSet<E> multiset,  @AT@ 14909 @LENGTH@ 26
------INS SimpleName@@predicatedMultiSet @TO@ ReturnStatement@@SimpleName:predicatedMultiSet @AT@ 14916 @LENGTH@ 18


INS FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @TO@ TypeDeclaration@@RepositoryMethodResourceMapping, [MethodResourceMapping] @AT@ 1713 @LENGTH@ 111
---INS Modifier@@private @TO@ FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @AT@ 1713 @LENGTH@ 7
---INS Modifier@@static @TO@ FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @AT@ 1721 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @AT@ 1728 @LENGTH@ 5
---INS ParameterizedType@@Collection<Class<?>> @TO@ FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @AT@ 1734 @LENGTH@ 20
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<Class<?>> @AT@ 1734 @LENGTH@ 10
------INS ParameterizedType@@Class<?> @TO@ ParameterizedType@@Collection<Class<?>> @AT@ 1745 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1745 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1751 @LENGTH@ 1
---INS VariableDeclarationFragment@@IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class) @TO@ FieldDeclaration@@private, static, final, Collection<Class<?>>, [IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class)] @AT@ 1755 @LENGTH@ 68
------INS SimpleName@@IMPLICIT_PARAMETER_TYPES @TO@ VariableDeclarationFragment@@IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class) @AT@ 1755 @LENGTH@ 24
------INS MethodInvocation@@Arrays.asList(Pageable.class,Sort.class) @TO@ VariableDeclarationFragment@@IMPLICIT_PARAMETER_TYPES=Arrays.asList(Pageable.class,Sort.class) @AT@ 1782 @LENGTH@ 41
---------INS SimpleName@@Name:Arrays @TO@ MethodInvocation@@Arrays.asList(Pageable.class,Sort.class) @AT@ 1782 @LENGTH@ 6
---------INS SimpleName@@MethodName:asList:[Pageable.class, Sort.class] @TO@ MethodInvocation@@Arrays.asList(Pageable.class,Sort.class) @AT@ 1789 @LENGTH@ 34
------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:asList:[Pageable.class, Sort.class] @AT@ 1796 @LENGTH@ 14
------------INS TypeLiteral@@Sort.class @TO@ SimpleName@@MethodName:asList:[Pageable.class, Sort.class] @AT@ 1812 @LENGTH@ 10


UPD TryStatement@@try {  final long startTime=System.currentTimeMillis();  SystemExiter.initialize(new SystemExiter.Exiter(){    @Override public void exit(    int status){      StandaloneServerImpl.this.exit();    }  });  try {    StdioContext.install();    uninstallStdIo=true;  } catch (  IllegalStateException ignored) {  }  ServerEnvironment serverEnvironment=Main.determineEnvironment(cmdargs,systemProps,systemEnv,ServerEnvironment.LaunchType.EMBEDDED,startTime);  Bootstrap bootstrap=Bootstrap.Factory.newInstance();  Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);  configuration.setModuleLoader(moduleLoader);  Future<ServiceContainer> future=bootstrap.startup(configuration,Collections.<ServiceActivator>emptyList());  serviceContainer=future.get();  executorService=Executors.newCachedThreadPool();  @SuppressWarnings("unchecked") final Value<ControlledProcessStateService> processStateServiceValue=(Value<ControlledProcessStateService>)serviceContainer.getRequiredService(ControlledProcessStateService.SERVICE_NAME);  controlledProcessStateService=processStateServiceValue.getValue();  controlledProcessStateService.addPropertyChangeListener(processStateListener);  establishModelControllerClient(controlledProcessStateService.getCurrentState());} catch (RuntimeException rte) {  throw rte;}catch (Exception ex) {  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @TO@ try {  final long startTime=System.currentTimeMillis();  SystemExiter.initialize(new SystemExiter.Exiter(){    @Override public void exit(    int status){      StandaloneServerImpl.this.exit();    }  });  try {    StdioContext.install();    uninstallStdIo=true;  } catch (  IllegalStateException ignored) {  }  ServerEnvironment serverEnvironment=Main.determineEnvironment(cmdargs,systemProps,systemEnv,ServerEnvironment.LaunchType.EMBEDDED,startTime);  bootstrap=Bootstrap.Factory.newInstance();  Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);  configuration.setModuleLoader(moduleLoader);  Future<ServiceContainer> future=bootstrap.startup(configuration,Collections.<ServiceActivator>emptyList());  serviceContainer=future.get();  executorService=Executors.newCachedThreadPool();  @SuppressWarnings("unchecked") final Value<ControlledProcessStateService> processStateServiceValue=(Value<ControlledProcessStateService>)serviceContainer.getRequiredService(ControlledProcessStateService.SERVICE_NAME);  controlledProcessStateService=processStateServiceValue.getValue();  controlledProcessStateService.addPropertyChangeListener(processStateListener);  establishModelControllerClient(controlledProcessStateService.getCurrentState());} catch (RuntimeException rte) {  if (bootstrap != null) {    bootstrap.failed();  }  throw rte;}catch (Exception ex) {  if (bootstrap != null) {    bootstrap.failed();  }  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @AT@ 10970 @LENGTH@ 3779
---DEL VariableDeclarationStatement@@Bootstrap bootstrap=Bootstrap.Factory.newInstance(); @AT@ 11855 @LENGTH@ 54
------DEL SimpleType@@Bootstrap @AT@ 11855 @LENGTH@ 9
------DEL VariableDeclarationFragment@@bootstrap=Bootstrap.Factory.newInstance() @AT@ 11865 @LENGTH@ 43
---------DEL SimpleName@@bootstrap @AT@ 11865 @LENGTH@ 9
---------DEL MethodInvocation@@Bootstrap.Factory.newInstance() @AT@ 11877 @LENGTH@ 31
---INS ExpressionStatement@@Assignment:bootstrap=Bootstrap.Factory.newInstance() @TO@ TryStatement@@try {  final long startTime=System.currentTimeMillis();  SystemExiter.initialize(new SystemExiter.Exiter(){    @Override public void exit(    int status){      StandaloneServerImpl.this.exit();    }  });  try {    StdioContext.install();    uninstallStdIo=true;  } catch (  IllegalStateException ignored) {  }  ServerEnvironment serverEnvironment=Main.determineEnvironment(cmdargs,systemProps,systemEnv,ServerEnvironment.LaunchType.EMBEDDED,startTime);  Bootstrap bootstrap=Bootstrap.Factory.newInstance();  Bootstrap.Configuration configuration=new Bootstrap.Configuration(serverEnvironment);  configuration.setModuleLoader(moduleLoader);  Future<ServiceContainer> future=bootstrap.startup(configuration,Collections.<ServiceActivator>emptyList());  serviceContainer=future.get();  executorService=Executors.newCachedThreadPool();  @SuppressWarnings("unchecked") final Value<ControlledProcessStateService> processStateServiceValue=(Value<ControlledProcessStateService>)serviceContainer.getRequiredService(ControlledProcessStateService.SERVICE_NAME);  controlledProcessStateService=processStateServiceValue.getValue();  controlledProcessStateService.addPropertyChangeListener(processStateListener);  establishModelControllerClient(controlledProcessStateService.getCurrentState());} catch (RuntimeException rte) {  throw rte;}catch (Exception ex) {  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @AT@ 11895 @LENGTH@ 44
------INS Assignment@@bootstrap=Bootstrap.Factory.newInstance() @TO@ ExpressionStatement@@Assignment:bootstrap=Bootstrap.Factory.newInstance() @AT@ 11895 @LENGTH@ 43
---------INS SimpleName@@bootstrap @TO@ Assignment@@bootstrap=Bootstrap.Factory.newInstance() @AT@ 11895 @LENGTH@ 9
---------INS Operator@@= @TO@ Assignment@@bootstrap=Bootstrap.Factory.newInstance() @AT@ 11904 @LENGTH@ 1
---------INS MethodInvocation@@Bootstrap.Factory.newInstance() @TO@ Assignment@@bootstrap=Bootstrap.Factory.newInstance() @AT@ 11907 @LENGTH@ 31
------------MOV QualifiedName@@Name:Bootstrap.Factory @TO@ MethodInvocation@@Bootstrap.Factory.newInstance() @AT@ 11877 @LENGTH@ 17
------------MOV SimpleName@@MethodName:newInstance:[] @TO@ MethodInvocation@@Bootstrap.Factory.newInstance() @AT@ 11895 @LENGTH@ 13
---UPD CatchClause@@catch (RuntimeException rte) {  throw rte;} @TO@ catch (RuntimeException rte) {  if (bootstrap != null) {    bootstrap.failed();  }  throw rte;} @AT@ 14561 @LENGTH@ 71
------INS IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @TO@ CatchClause@@catch (RuntimeException rte) {  throw rte;} @AT@ 14638 @LENGTH@ 82
---------INS InfixExpression@@bootstrap != null @TO@ IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @AT@ 14642 @LENGTH@ 17
------------INS SimpleName@@bootstrap @TO@ InfixExpression@@bootstrap != null @AT@ 14642 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@bootstrap != null @AT@ 14651 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@bootstrap != null @AT@ 14655 @LENGTH@ 4
---------INS Block@@ThenBody:{  bootstrap.failed();} @TO@ IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @AT@ 14661 @LENGTH@ 59
------------INS ExpressionStatement@@MethodInvocation:bootstrap.failed() @TO@ Block@@ThenBody:{  bootstrap.failed();} @AT@ 14683 @LENGTH@ 19
---------------INS MethodInvocation@@bootstrap.failed() @TO@ ExpressionStatement@@MethodInvocation:bootstrap.failed() @AT@ 14683 @LENGTH@ 18
------------------INS SimpleName@@Name:bootstrap @TO@ MethodInvocation@@bootstrap.failed() @AT@ 14683 @LENGTH@ 9
------------------INS SimpleName@@MethodName:failed:[] @TO@ MethodInvocation@@bootstrap.failed() @AT@ 14693 @LENGTH@ 8
---UPD CatchClause@@catch (Exception ex) {  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @TO@ catch (Exception ex) {  if (bootstrap != null) {    bootstrap.failed();  }  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @AT@ 14633 @LENGTH@ 116
------INS IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @TO@ CatchClause@@catch (Exception ex) {  throw EmbeddedLogger.ROOT_LOGGER.cannotStartEmbeddedServer(ex);} @AT@ 14801 @LENGTH@ 82
---------INS InfixExpression@@bootstrap != null @TO@ IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @AT@ 14805 @LENGTH@ 17
------------INS SimpleName@@bootstrap @TO@ InfixExpression@@bootstrap != null @AT@ 14805 @LENGTH@ 9
------------INS Operator@@!= @TO@ InfixExpression@@bootstrap != null @AT@ 14814 @LENGTH@ 2
------------INS NullLiteral@@null @TO@ InfixExpression@@bootstrap != null @AT@ 14818 @LENGTH@ 4
---------INS Block@@ThenBody:{  bootstrap.failed();} @TO@ IfStatement@@if (bootstrap != null) {  bootstrap.failed();} @AT@ 14824 @LENGTH@ 59
------------INS ExpressionStatement@@MethodInvocation:bootstrap.failed() @TO@ Block@@ThenBody:{  bootstrap.failed();} @AT@ 14846 @LENGTH@ 19
---------------INS MethodInvocation@@bootstrap.failed() @TO@ ExpressionStatement@@MethodInvocation:bootstrap.failed() @AT@ 14846 @LENGTH@ 18
------------------INS SimpleName@@Name:bootstrap @TO@ MethodInvocation@@bootstrap.failed() @AT@ 14846 @LENGTH@ 9
------------------INS SimpleName@@MethodName:failed:[] @TO@ MethodInvocation@@bootstrap.failed() @AT@ 14856 @LENGTH@ 8


INS MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest,  @AT@ 8114 @LENGTH@ 407
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8114 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8121 @LENGTH@ 4
---INS SimpleName@@MethodName:testEndpointPropertiesPlaceholders @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8126 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8170 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,String> map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5"); @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8190 @LENGTH@ 100
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5"); @AT@ 8190 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 8190 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 8194 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 8202 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @TO@ VariableDeclarationStatement@@Map<String,String> map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5"); @AT@ 8210 @LENGTH@ 79
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @AT@ 8210 @LENGTH@ 3
---------INS MethodInvocation@@catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @TO@ VariableDeclarationFragment@@map=catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @AT@ 8216 @LENGTH@ 73
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @AT@ 8216 @LENGTH@ 7
------------INS SimpleName@@MethodName:endpointProperties:["timer:foo?period={{howoften}}&repeatCount=5"] @TO@ MethodInvocation@@catalog.endpointProperties("timer:foo?period={{howoften}}&repeatCount=5") @AT@ 8224 @LENGTH@ 65
---------------INS StringLiteral@@"timer:foo?period={{howoften}}&repeatCount=5" @TO@ SimpleName@@MethodName:endpointProperties:["timer:foo?period={{howoften}}&repeatCount=5"] @AT@ 8243 @LENGTH@ 45
---INS ExpressionStatement@@MethodInvocation:assertNotNull(map) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8299 @LENGTH@ 19
------INS MethodInvocation@@assertNotNull(map) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(map) @AT@ 8299 @LENGTH@ 18
---------INS SimpleName@@MethodName:assertNotNull:[map] @TO@ MethodInvocation@@assertNotNull(map) @AT@ 8299 @LENGTH@ 18
------------INS SimpleName@@map @TO@ SimpleName@@MethodName:assertNotNull:[map] @AT@ 8313 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals(3,map.size()) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8327 @LENGTH@ 28
------INS MethodInvocation@@assertEquals(3,map.size()) @TO@ ExpressionStatement@@MethodInvocation:assertEquals(3,map.size()) @AT@ 8327 @LENGTH@ 27
---------INS SimpleName@@MethodName:assertEquals:[3, map.size()] @TO@ MethodInvocation@@assertEquals(3,map.size()) @AT@ 8327 @LENGTH@ 27
------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:assertEquals:[3, map.size()] @AT@ 8340 @LENGTH@ 1
------------INS MethodInvocation@@map.size() @TO@ SimpleName@@MethodName:assertEquals:[3, map.size()] @AT@ 8343 @LENGTH@ 10
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.size() @AT@ 8343 @LENGTH@ 3
---------------INS SimpleName@@MethodName:size:[] @TO@ MethodInvocation@@map.size() @AT@ 8347 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertEquals("foo",map.get("timerName")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8365 @LENGTH@ 42
------INS MethodInvocation@@assertEquals("foo",map.get("timerName")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("foo",map.get("timerName")) @AT@ 8365 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertEquals:["foo", map.get("timerName")] @TO@ MethodInvocation@@assertEquals("foo",map.get("timerName")) @AT@ 8365 @LENGTH@ 41
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:assertEquals:["foo", map.get("timerName")] @AT@ 8378 @LENGTH@ 5
------------INS MethodInvocation@@map.get("timerName") @TO@ SimpleName@@MethodName:assertEquals:["foo", map.get("timerName")] @AT@ 8385 @LENGTH@ 20
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get("timerName") @AT@ 8385 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["timerName"] @TO@ MethodInvocation@@map.get("timerName") @AT@ 8389 @LENGTH@ 16
------------------INS StringLiteral@@"timerName" @TO@ SimpleName@@MethodName:get:["timerName"] @AT@ 8393 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertEquals("{{howoften}}",map.get("period")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8416 @LENGTH@ 48
------INS MethodInvocation@@assertEquals("{{howoften}}",map.get("period")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("{{howoften}}",map.get("period")) @AT@ 8416 @LENGTH@ 47
---------INS SimpleName@@MethodName:assertEquals:["{{howoften}}", map.get("period")] @TO@ MethodInvocation@@assertEquals("{{howoften}}",map.get("period")) @AT@ 8416 @LENGTH@ 47
------------INS StringLiteral@@"{{howoften}}" @TO@ SimpleName@@MethodName:assertEquals:["{{howoften}}", map.get("period")] @AT@ 8429 @LENGTH@ 14
------------INS MethodInvocation@@map.get("period") @TO@ SimpleName@@MethodName:assertEquals:["{{howoften}}", map.get("period")] @AT@ 8445 @LENGTH@ 17
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get("period") @AT@ 8445 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["period"] @TO@ MethodInvocation@@map.get("period") @AT@ 8449 @LENGTH@ 13
------------------INS StringLiteral@@"period" @TO@ SimpleName@@MethodName:get:["period"] @AT@ 8453 @LENGTH@ 8
---INS ExpressionStatement@@MethodInvocation:assertEquals("5",map.get("repeatCount")) @TO@ MethodDeclaration@@public, void, MethodName:testEndpointPropertiesPlaceholders, Exception,  @AT@ 8473 @LENGTH@ 42
------INS MethodInvocation@@assertEquals("5",map.get("repeatCount")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("5",map.get("repeatCount")) @AT@ 8473 @LENGTH@ 41
---------INS SimpleName@@MethodName:assertEquals:["5", map.get("repeatCount")] @TO@ MethodInvocation@@assertEquals("5",map.get("repeatCount")) @AT@ 8473 @LENGTH@ 41
------------INS StringLiteral@@"5" @TO@ SimpleName@@MethodName:assertEquals:["5", map.get("repeatCount")] @AT@ 8486 @LENGTH@ 3
------------INS MethodInvocation@@map.get("repeatCount") @TO@ SimpleName@@MethodName:assertEquals:["5", map.get("repeatCount")] @AT@ 8491 @LENGTH@ 22
---------------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.get("repeatCount") @AT@ 8491 @LENGTH@ 3
---------------INS SimpleName@@MethodName:get:["repeatCount"] @TO@ MethodInvocation@@map.get("repeatCount") @AT@ 8495 @LENGTH@ 18
------------------INS StringLiteral@@"repeatCount" @TO@ SimpleName@@MethodName:get:["repeatCount"] @AT@ 8499 @LENGTH@ 13


UPD ExpressionStatement@@Assignment:found=s.startsWith("\"" + group + "\":") @TO@ Assignment:found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2147 @LENGTH@ 43
---UPD Assignment@@found=s.startsWith("\"" + group + "\":") @TO@ found=s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2147 @LENGTH@ 42
------INS InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @TO@ Assignment@@found=s.startsWith("\"" + group + "\":") @AT@ 2155 @LENGTH@ 53
---------MOV MethodInvocation@@s.startsWith("\"" + group + "\":") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2155 @LENGTH@ 34
---------INS Operator@@&& @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2189 @LENGTH@ 2
---------INS MethodInvocation@@s.endsWith("{") @TO@ InfixExpression@@s.startsWith("\"" + group + "\":") && s.endsWith("{") @AT@ 2193 @LENGTH@ 15
------------INS SimpleName@@Name:s @TO@ MethodInvocation@@s.endsWith("{") @AT@ 2193 @LENGTH@ 1
------------INS SimpleName@@MethodName:endsWith:["{"] @TO@ MethodInvocation@@s.endsWith("{") @AT@ 2195 @LENGTH@ 13
---------------INS StringLiteral@@"{" @TO@ SimpleName@@MethodName:endsWith:["{"] @AT@ 2204 @LENGTH@ 3


INS ExpressionStatement@@MethodInvocation:assertTrue("body should contain: <html",body.contains("<html")) @TO@ MethodDeclaration@@public, void, MethodName:testHttpPostRecovery, Exception,  @AT@ 3621 @LENGTH@ 65
---INS MethodInvocation@@assertTrue("body should contain: <html",body.contains("<html")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue("body should contain: <html",body.contains("<html")) @AT@ 3621 @LENGTH@ 64
------INS SimpleName@@MethodName:assertTrue:["body should contain: <html", body.contains("<html")] @TO@ MethodInvocation@@assertTrue("body should contain: <html",body.contains("<html")) @AT@ 3621 @LENGTH@ 64
---------INS StringLiteral@@"body should contain: <html" @TO@ SimpleName@@MethodName:assertTrue:["body should contain: <html", body.contains("<html")] @AT@ 3632 @LENGTH@ 28
---------INS MethodInvocation@@body.contains("<html") @TO@ SimpleName@@MethodName:assertTrue:["body should contain: <html", body.contains("<html")] @AT@ 3662 @LENGTH@ 22
------------INS SimpleName@@Name:body @TO@ MethodInvocation@@body.contains("<html") @AT@ 3662 @LENGTH@ 4
------------INS SimpleName@@MethodName:contains:["<html"] @TO@ MethodInvocation@@body.contains("<html") @AT@ 3667 @LENGTH@ 17
---------------INS StringLiteral@@"<html" @TO@ SimpleName@@MethodName:contains:["<html"] @AT@ 3676 @LENGTH@ 7


INS MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @TO@ TypeDeclaration@@[public]QSortUnitTests,  @AT@ 6605 @LENGTH@ 239
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @AT@ 6605 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @AT@ 6612 @LENGTH@ 4
---INS SimpleName@@MethodName:handlesPlainStringPathsCorrectly @TO@ MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @AT@ 6617 @LENGTH@ 32
---INS VariableDeclarationStatement@@QSort sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))); @TO@ MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @AT@ 6657 @LENGTH@ 114
------INS SimpleType@@QSort @TO@ VariableDeclarationStatement@@QSort sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))); @AT@ 6657 @LENGTH@ 5
------INS VariableDeclarationFragment@@sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))) @TO@ VariableDeclarationStatement@@QSort sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))); @AT@ 6663 @LENGTH@ 107
---------INS SimpleName@@sort @TO@ VariableDeclarationFragment@@sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))) @AT@ 6663 @LENGTH@ 4
---------INS ClassInstanceCreation@@QSort[new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))] @TO@ VariableDeclarationFragment@@sort=new QSort(new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))) @AT@ 6670 @LENGTH@ 100
------------INS New@@new @TO@ ClassInstanceCreation@@QSort[new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))] @AT@ 6670 @LENGTH@ 3
------------INS SimpleType@@QSort @TO@ ClassInstanceCreation@@QSort[new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))] @AT@ 6674 @LENGTH@ 5
------------INS ClassInstanceCreation@@OrderSpecifier<String>[com.mysema.query.types.Order.ASC, new StringPath("firstname")] @TO@ ClassInstanceCreation@@QSort[new OrderSpecifier<String>(com.mysema.query.types.Order.ASC,new StringPath("firstname"))] @AT@ 6680 @LENGTH@ 89
---------------INS New@@new @TO@ ClassInstanceCreation@@OrderSpecifier<String>[com.mysema.query.types.Order.ASC, new StringPath("firstname")] @AT@ 6680 @LENGTH@ 3
---------------INS ParameterizedType@@OrderSpecifier<String> @TO@ ClassInstanceCreation@@OrderSpecifier<String>[com.mysema.query.types.Order.ASC, new StringPath("firstname")] @AT@ 6684 @LENGTH@ 22
------------------INS SimpleType@@OrderSpecifier @TO@ ParameterizedType@@OrderSpecifier<String> @AT@ 6684 @LENGTH@ 14
------------------INS SimpleType@@String @TO@ ParameterizedType@@OrderSpecifier<String> @AT@ 6699 @LENGTH@ 6
---------------INS QualifiedName@@com.mysema.query.types.Order.ASC @TO@ ClassInstanceCreation@@OrderSpecifier<String>[com.mysema.query.types.Order.ASC, new StringPath("firstname")] @AT@ 6707 @LENGTH@ 32
------------------INS QualifiedName@@com.mysema.query.types.Order @TO@ QualifiedName@@com.mysema.query.types.Order.ASC @AT@ 6707 @LENGTH@ 28
---------------------INS QualifiedName@@com.mysema.query.types @TO@ QualifiedName@@com.mysema.query.types.Order @AT@ 6707 @LENGTH@ 22
------------------------INS QualifiedName@@com.mysema.query @TO@ QualifiedName@@com.mysema.query.types @AT@ 6707 @LENGTH@ 16
---------------------------INS QualifiedName@@com.mysema @TO@ QualifiedName@@com.mysema.query @AT@ 6707 @LENGTH@ 10
------------------------------INS SimpleName@@com @TO@ QualifiedName@@com.mysema @AT@ 6707 @LENGTH@ 3
------------------------------INS SimpleName@@mysema @TO@ QualifiedName@@com.mysema @AT@ 6711 @LENGTH@ 6
---------------------------INS SimpleName@@query @TO@ QualifiedName@@com.mysema.query @AT@ 6718 @LENGTH@ 5
------------------------INS SimpleName@@types @TO@ QualifiedName@@com.mysema.query.types @AT@ 6724 @LENGTH@ 5
---------------------INS SimpleName@@Order @TO@ QualifiedName@@com.mysema.query.types.Order @AT@ 6730 @LENGTH@ 5
------------------INS SimpleName@@ASC @TO@ QualifiedName@@com.mysema.query.types.Order.ASC @AT@ 6736 @LENGTH@ 3
---------------INS ClassInstanceCreation@@StringPath["firstname"] @TO@ ClassInstanceCreation@@OrderSpecifier<String>[com.mysema.query.types.Order.ASC, new StringPath("firstname")] @AT@ 6741 @LENGTH@ 27
------------------INS New@@new @TO@ ClassInstanceCreation@@StringPath["firstname"] @AT@ 6741 @LENGTH@ 3
------------------INS SimpleType@@StringPath @TO@ ClassInstanceCreation@@StringPath["firstname"] @AT@ 6745 @LENGTH@ 10
------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@StringPath["firstname"] @AT@ 6756 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:assertThat(sort,hasItems(new Order(Direction.ASC,"firstname"))) @TO@ MethodDeclaration@@public, void, MethodName:handlesPlainStringPathsCorrectly,  @AT@ 6775 @LENGTH@ 66
------INS MethodInvocation@@assertThat(sort,hasItems(new Order(Direction.ASC,"firstname"))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(sort,hasItems(new Order(Direction.ASC,"firstname"))) @AT@ 6775 @LENGTH@ 65
---------INS SimpleName@@MethodName:assertThat:[sort, hasItems(new Order(Direction.ASC,"firstname"))] @TO@ MethodInvocation@@assertThat(sort,hasItems(new Order(Direction.ASC,"firstname"))) @AT@ 6775 @LENGTH@ 65
------------INS SimpleName@@sort @TO@ SimpleName@@MethodName:assertThat:[sort, hasItems(new Order(Direction.ASC,"firstname"))] @AT@ 6786 @LENGTH@ 4
------------INS MethodInvocation@@hasItems(new Order(Direction.ASC,"firstname")) @TO@ SimpleName@@MethodName:assertThat:[sort, hasItems(new Order(Direction.ASC,"firstname"))] @AT@ 6792 @LENGTH@ 47
---------------INS SimpleName@@MethodName:hasItems:[new Order(Direction.ASC,"firstname")] @TO@ MethodInvocation@@hasItems(new Order(Direction.ASC,"firstname")) @AT@ 6792 @LENGTH@ 47
------------------INS ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @TO@ SimpleName@@MethodName:hasItems:[new Order(Direction.ASC,"firstname")] @AT@ 6801 @LENGTH@ 37
---------------------INS New@@new @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6801 @LENGTH@ 3
---------------------INS SimpleType@@Order @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6805 @LENGTH@ 5
---------------------INS QualifiedName@@Direction.ASC @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6811 @LENGTH@ 13
------------------------INS SimpleName@@Direction @TO@ QualifiedName@@Direction.ASC @AT@ 6811 @LENGTH@ 9
------------------------INS SimpleName@@ASC @TO@ QualifiedName@@Direction.ASC @AT@ 6821 @LENGTH@ 3
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6826 @LENGTH@ 11
---------------INS SimpleName@@MethodName:hasItems:[new Order(Direction.ASC,"firstname")] @TO@ MethodInvocation@@hasItems(new Order(Direction.ASC,"firstname")) @AT@ 6792 @LENGTH@ 47
------------------INS ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @TO@ SimpleName@@MethodName:hasItems:[new Order(Direction.ASC,"firstname")] @AT@ 6801 @LENGTH@ 37
---------------------INS New@@new @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6801 @LENGTH@ 3
---------------------INS SimpleType@@Order @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6805 @LENGTH@ 5
---------------------INS QualifiedName@@Direction.ASC @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6811 @LENGTH@ 13
------------------------INS SimpleName@@Direction @TO@ QualifiedName@@Direction.ASC @AT@ 6811 @LENGTH@ 9
------------------------INS SimpleName@@ASC @TO@ QualifiedName@@Direction.ASC @AT@ 6821 @LENGTH@ 3
---------------------INS StringLiteral@@"firstname" @TO@ ClassInstanceCreation@@Order[Direction.ASC, "firstname"] @AT@ 6826 @LENGTH@ 11


UPD VariableDeclarationStatement@@LettuceConnection connection=new LettuceConnection(getSharedConnection(),timeout,client,pool); @TO@ LettuceConnection connection=new LettuceConnection(getSharedConnection(),timeout,client,pool,dbIndex); @AT@ 4899 @LENGTH@ 99
---UPD VariableDeclarationFragment@@connection=new LettuceConnection(getSharedConnection(),timeout,client,pool) @TO@ connection=new LettuceConnection(getSharedConnection(),timeout,client,pool,dbIndex) @AT@ 4917 @LENGTH@ 80
------UPD ClassInstanceCreation@@LettuceConnection[getSharedConnection(), timeout, client, pool] @TO@ LettuceConnection[getSharedConnection(), timeout, client, pool, dbIndex] @AT@ 4930 @LENGTH@ 67
---------INS SimpleName@@dbIndex @TO@ ClassInstanceCreation@@LettuceConnection[getSharedConnection(), timeout, client, pool] @AT@ 5116 @LENGTH@ 7


UPD IfStatement@@if (JsfRuntimeInformation.isMyFacesPresent()) {  return new MyFacesFlashFactory().newFlash(this);} else {  return new MojarraFlashFactory().newFlash(this);} @TO@ if (JsfRuntimeInformation.isMyFacesInUse()) {  return new MyFacesFlashFactory().newFlash(this);} else {  return new MojarraFlashFactory().newFlash(this);} @AT@ 3934 @LENGTH@ 166
---UPD MethodInvocation@@JsfRuntimeInformation.isMyFacesPresent() @TO@ JsfRuntimeInformation.isMyFacesInUse() @AT@ 3938 @LENGTH@ 40
------UPD SimpleName@@MethodName:isMyFacesPresent:[] @TO@ MethodName:isMyFacesInUse:[] @AT@ 3960 @LENGTH@ 18


UPD VariableDeclarationStatement@@String out=template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",body,String.class); @TO@ String out=template.requestBody("undertow:http://localhost:{{port}}/users/lives",body,String.class); @AT@ 1252 @LENGTH@ 113
---UPD VariableDeclarationFragment@@out=template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",body,String.class) @TO@ out=template.requestBody("undertow:http://localhost:{{port}}/users/lives",body,String.class) @AT@ 1259 @LENGTH@ 105
------UPD MethodInvocation@@template.requestBody("undertow:http://localhost:" + getPort() + "/users/lives",body,String.class) @TO@ template.requestBody("undertow:http://localhost:{{port}}/users/lives",body,String.class) @AT@ 1265 @LENGTH@ 99
---------UPD SimpleName@@MethodName:requestBody:["undertow:http://localhost:" + getPort() + "/users/lives", body, String.class] @TO@ MethodName:requestBody:["undertow:http://localhost:{{port}}/users/lives", body, String.class] @AT@ 1274 @LENGTH@ 90
------------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/lives" @AT@ 1286 @LENGTH@ 57
---------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1286 @LENGTH@ 28
---------------DEL Operator@@+ @AT@ 1314 @LENGTH@ 1
---------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1317 @LENGTH@ 9
---------------DEL StringLiteral@@"/users/lives" @AT@ 1329 @LENGTH@ 14
------------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/lives" @TO@ SimpleName@@MethodName:requestBody:["undertow:http://localhost:" + getPort() + "/users/lives", body, String.class] @AT@ 1286 @LENGTH@ 48


UPD IfStatement@@if (client.isAutoApprove(scope) || client.isAutoApprove("all")) {  approved=true;  break;} @TO@ if (client.isAutoApprove(scope)) {  approved=true;  break;} @AT@ 2936 @LENGTH@ 111
---DEL InfixExpression@@client.isAutoApprove(scope) || client.isAutoApprove("all") @AT@ 2940 @LENGTH@ 58
------DEL Operator@@|| @AT@ 2967 @LENGTH@ 2
------DEL MethodInvocation@@client.isAutoApprove("all") @AT@ 2971 @LENGTH@ 27
---------DEL SimpleName@@Name:client @AT@ 2971 @LENGTH@ 6
---------DEL SimpleName@@MethodName:isAutoApprove:["all"] @AT@ 2978 @LENGTH@ 20
------------DEL StringLiteral@@"all" @AT@ 2992 @LENGTH@ 5
---MOV MethodInvocation@@client.isAutoApprove(scope) @TO@ IfStatement@@if (client.isAutoApprove(scope) || client.isAutoApprove("all")) {  approved=true;  break;} @AT@ 2940 @LENGTH@ 27


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 4615 @LENGTH@ 130
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new AddStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceAddStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 4615 @LENGTH@ 129
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceAddStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 4615 @LENGTH@ 106
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceAddStepHandler<> @AT@ 4619 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceAddStepHandler @AT@ 4619 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 4650 @LENGTH@ 10
---------DEL ClassInstanceCreation@@AddStepHandler[descriptor, handler] @AT@ 4654 @LENGTH@ 39
------------DEL New@@new @AT@ 4654 @LENGTH@ 3
------------DEL SimpleType@@AddStepHandler @AT@ 4658 @LENGTH@ 14
------------DEL SimpleName@@descriptor @AT@ 4673 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 4685 @LENGTH@ 7
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new AddStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 4662 @LENGTH@ 7


INS ExpressionStatement@@MethodInvocation:LOG.info("Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable.") @TO@ MethodDeclaration@@public, void, MethodName:load, MapJoinTableContainer[] mapJoinTables, MapJoinTableContainerSerDe[] mapJoinTableSerdes, HiveException,  @AT@ 3768 @LENGTH@ 97
---INS MethodInvocation@@LOG.info("Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable.") @TO@ ExpressionStatement@@MethodInvocation:LOG.info("Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable.") @AT@ 3768 @LENGTH@ 96
------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.info("Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable.") @AT@ 3768 @LENGTH@ 3
------INS SimpleName@@MethodName:info:["Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable."] @TO@ MethodInvocation@@LOG.info("Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable.") @AT@ 3772 @LENGTH@ 92
---------INS InfixExpression@@"Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable." @TO@ SimpleName@@MethodName:info:["Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable."] @AT@ 3777 @LENGTH@ 86
------------INS StringLiteral@@"Memory manager allocates " @TO@ InfixExpression@@"Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable." @AT@ 3777 @LENGTH@ 27
------------INS Operator@@+ @TO@ InfixExpression@@"Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable." @AT@ 3804 @LENGTH@ 1
------------INS SimpleName@@totalMapJoinMemory @TO@ InfixExpression@@"Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable." @AT@ 3807 @LENGTH@ 18
------------INS StringLiteral@@" bytes for the loading hashtable." @TO@ InfixExpression@@"Memory manager allocates " + totalMapJoinMemory + " bytes for the loading hashtable." @AT@ 3828 @LENGTH@ 35


INS ExpressionStatement@@MethodInvocation:addConnectionFactory(server,list) @TO@ MethodDeclaration@@protected, void, MethodName:addServer, MessagingServer server, List<ModelNode> list,  @AT@ 3627 @LENGTH@ 35
---INS MethodInvocation@@addConnectionFactory(server,list) @TO@ ExpressionStatement@@MethodInvocation:addConnectionFactory(server,list) @AT@ 3627 @LENGTH@ 34
------INS SimpleName@@MethodName:addConnectionFactory:[server, list] @TO@ MethodInvocation@@addConnectionFactory(server,list) @AT@ 3627 @LENGTH@ 34
---------INS SimpleName@@server @TO@ SimpleName@@MethodName:addConnectionFactory:[server, list] @AT@ 3648 @LENGTH@ 6
---------INS SimpleName@@list @TO@ SimpleName@@MethodName:addConnectionFactory:[server, list] @AT@ 3656 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:log.info("after write, rollever state is true") @TO@ MethodInvocation:log.info("After write, rollover state is true") @AT@ 3052 @LENGTH@ 48
---UPD MethodInvocation@@log.info("after write, rollever state is true") @TO@ log.info("After write, rollover state is true") @AT@ 3052 @LENGTH@ 47
------UPD SimpleName@@MethodName:info:["after write, rollever state is true"] @TO@ MethodName:info:["After write, rollover state is true"] @AT@ 3056 @LENGTH@ 43
---------UPD StringLiteral@@"after write, rollever state is true" @TO@ "After write, rollover state is true" @AT@ 3061 @LENGTH@ 37


INS MethodDeclaration@@public, void, MethodName:worksWithNullPageable,  @TO@ TypeDeclaration@@[@RunWith(SpringJUnit4ClassRunner.class), @ContextConfiguration({"classpath:infrastructure.xml"}), @Transactional, public]QueryDslJpaRepositoryTests,  @AT@ 11192 @LENGTH@ 143
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:worksWithNullPageable,  @AT@ 11192 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:worksWithNullPageable,  @AT@ 11199 @LENGTH@ 4
---INS SimpleName@@MethodName:worksWithNullPageable @TO@ MethodDeclaration@@public, void, MethodName:worksWithNullPageable,  @AT@ 11204 @LENGTH@ 21
---INS ExpressionStatement@@MethodInvocation:assertThat(repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(),hasSize(3)) @TO@ MethodDeclaration@@public, void, MethodName:worksWithNullPageable,  @AT@ 11232 @LENGTH@ 100
------INS MethodInvocation@@assertThat(repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(),hasSize(3)) @TO@ ExpressionStatement@@MethodInvocation:assertThat(repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(),hasSize(3)) @AT@ 11232 @LENGTH@ 99
---------INS SimpleName@@MethodName:assertThat:[repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(), hasSize(3)] @TO@ MethodInvocation@@assertThat(repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(),hasSize(3)) @AT@ 11232 @LENGTH@ 99
------------INS MethodInvocation@@repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent() @TO@ SimpleName@@MethodName:assertThat:[repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(), hasSize(3)] @AT@ 11243 @LENGTH@ 75
---------------INS MethodInvocation@@MethodName:findAll:[user.dateOfBirth.isNull(), (Pageable)null] @TO@ MethodInvocation@@repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent() @AT@ 11243 @LENGTH@ 62
------------------INS MethodInvocation@@user.dateOfBirth.isNull() @TO@ MethodInvocation@@MethodName:findAll:[user.dateOfBirth.isNull(), (Pageable)null] @AT@ 11262 @LENGTH@ 25
---------------------INS QualifiedName@@Name:user.dateOfBirth @TO@ MethodInvocation@@user.dateOfBirth.isNull() @AT@ 11262 @LENGTH@ 16
---------------------INS SimpleName@@MethodName:isNull:[] @TO@ MethodInvocation@@user.dateOfBirth.isNull() @AT@ 11279 @LENGTH@ 8
------------------INS CastExpression@@(Pageable)null @TO@ MethodInvocation@@MethodName:findAll:[user.dateOfBirth.isNull(), (Pageable)null] @AT@ 11289 @LENGTH@ 15
---------------------INS SimpleType@@Pageable @TO@ CastExpression@@(Pageable)null @AT@ 11290 @LENGTH@ 8
---------------------INS NullLiteral@@null @TO@ CastExpression@@(Pageable)null @AT@ 11300 @LENGTH@ 4
---------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent() @AT@ 11243 @LENGTH@ 10
---------------INS SimpleName@@MethodName:getContent:[] @TO@ MethodInvocation@@repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent() @AT@ 11306 @LENGTH@ 12
------------INS MethodInvocation@@hasSize(3) @TO@ SimpleName@@MethodName:assertThat:[repository.findAll(user.dateOfBirth.isNull(),(Pageable)null).getContent(), hasSize(3)] @AT@ 11320 @LENGTH@ 10
---------------INS SimpleName@@MethodName:hasSize:[3] @TO@ MethodInvocation@@hasSize(3) @AT@ 11320 @LENGTH@ 10
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:hasSize:[3] @AT@ 11328 @LENGTH@ 1
---------------INS SimpleName@@MethodName:hasSize:[3] @TO@ MethodInvocation@@hasSize(3) @AT@ 11320 @LENGTH@ 10
------------------INS NumberLiteral@@3 @TO@ SimpleName@@MethodName:hasSize:[3] @AT@ 11328 @LENGTH@ 1


UPD SuperConstructorInvocation@@super(msg);
 @TO@ super(makeMsg(db,table) + ": " + msg,null);
 @AT@ 1186 @LENGTH@ 11
---INS InfixExpression@@makeMsg(db,table) + ": " + msg @TO@ SuperConstructorInvocation@@super(msg);
 @AT@ 1192 @LENGTH@ 31
------INS MethodInvocation@@makeMsg(db,table) @TO@ InfixExpression@@makeMsg(db,table) + ": " + msg @AT@ 1192 @LENGTH@ 18
---------INS SimpleName@@MethodName:makeMsg:[db, table] @TO@ MethodInvocation@@makeMsg(db,table) @AT@ 1192 @LENGTH@ 18
------------INS SimpleName@@db @TO@ SimpleName@@MethodName:makeMsg:[db, table] @AT@ 1200 @LENGTH@ 2
------------INS SimpleName@@table @TO@ SimpleName@@MethodName:makeMsg:[db, table] @AT@ 1204 @LENGTH@ 5
------INS Operator@@+ @TO@ InfixExpression@@makeMsg(db,table) + ": " + msg @AT@ 1210 @LENGTH@ 1
------INS StringLiteral@@": " @TO@ InfixExpression@@makeMsg(db,table) + ": " + msg @AT@ 1213 @LENGTH@ 4
------INS SimpleName@@msg @TO@ InfixExpression@@makeMsg(db,table) + ": " + msg @AT@ 1220 @LENGTH@ 3
---DEL SimpleName@@msg @AT@ 1192 @LENGTH@ 3
---INS NullLiteral@@null @TO@ SuperConstructorInvocation@@super(msg);
 @AT@ 1225 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 4482 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 4482 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 4493 @LENGTH@ 9


UPD IfStatement@@if (StringUtils.hasText(parameter.getParameterName())) {  result.add(new ParameterMetadata(parameter,baseRel));} @TO@ if (!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) && StringUtils.hasText(parameter.getParameterName())) {  result.add(new ParameterMetadata(parameter,baseRel));} @AT@ 3566 @LENGTH@ 120
---INS InfixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) && StringUtils.hasText(parameter.getParameterName()) @TO@ IfStatement@@if (StringUtils.hasText(parameter.getParameterName())) {  result.add(new ParameterMetadata(parameter,baseRel));} @AT@ 3746 @LENGTH@ 122
------MOV MethodInvocation@@StringUtils.hasText(parameter.getParameterName()) @TO@ InfixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) && StringUtils.hasText(parameter.getParameterName()) @AT@ 3570 @LENGTH@ 49
------INS PrefixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @TO@ InfixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) && StringUtils.hasText(parameter.getParameterName()) @AT@ 3746 @LENGTH@ 64
---------INS Operator@@! @TO@ PrefixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @AT@ 3746 @LENGTH@ 1
---------INS MethodInvocation@@IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @TO@ PrefixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @AT@ 3747 @LENGTH@ 63
------------INS SimpleName@@Name:IMPLICIT_PARAMETER_TYPES @TO@ MethodInvocation@@IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @AT@ 3747 @LENGTH@ 24
------------INS SimpleName@@MethodName:contains:[parameter.getParameterType()] @TO@ MethodInvocation@@IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) @AT@ 3772 @LENGTH@ 38
---------------INS MethodInvocation@@parameter.getParameterType() @TO@ SimpleName@@MethodName:contains:[parameter.getParameterType()] @AT@ 3781 @LENGTH@ 28
------------------INS SimpleName@@Name:parameter @TO@ MethodInvocation@@parameter.getParameterType() @AT@ 3781 @LENGTH@ 9
------------------INS SimpleName@@MethodName:getParameterType:[] @TO@ MethodInvocation@@parameter.getParameterType() @AT@ 3791 @LENGTH@ 18
------INS Operator@@&& @TO@ InfixExpression@@!IMPLICIT_PARAMETER_TYPES.contains(parameter.getParameterType()) && StringUtils.hasText(parameter.getParameterName()) @AT@ 3810 @LENGTH@ 2


UPD VariableDeclarationStatement@@List<JsonPatchOperation> readValue=mapper.readValue(source,listOfOperationsType); @TO@ List<JsonPatchOperation> readValue=getPatchOperations(source); @AT@ 3815 @LENGTH@ 84
---UPD VariableDeclarationFragment@@readValue=mapper.readValue(source,listOfOperationsType) @TO@ readValue=getPatchOperations(source) @AT@ 3840 @LENGTH@ 58
------INS MethodInvocation@@getPatchOperations(source) @TO@ VariableDeclarationFragment@@readValue=mapper.readValue(source,listOfOperationsType) @AT@ 3856 @LENGTH@ 26
---------INS SimpleName@@MethodName:getPatchOperations:[source] @TO@ MethodInvocation@@getPatchOperations(source) @AT@ 3856 @LENGTH@ 26
------------INS SimpleName@@source @TO@ SimpleName@@MethodName:getPatchOperations:[source] @AT@ 3875 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ MethodInvocation:deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 9357 @LENGTH@ 90
---UPD MethodInvocation@@deploymentUnit.createDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @TO@ deploymentResourceSupport.getDeploymentSubModel(MessagingExtension.SUBSYSTEM_NAME,serverElement) @AT@ 9357 @LENGTH@ 89
------UPD SimpleName@@Name:deploymentUnit @TO@ Name:deploymentResourceSupport @AT@ 9357 @LENGTH@ 14
------UPD SimpleName@@MethodName:createDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @TO@ MethodName:getDeploymentSubModel:[MessagingExtension.SUBSYSTEM_NAME, serverElement] @AT@ 9372 @LENGTH@ 74


UPD MethodDeclaration@@public, static, boolean, MethodName:exists, File file, IOException,  @TO@ private, static, boolean, MethodName:exists, File file, IOException,  @AT@ 3707 @LENGTH@ 476
---UPD Modifier@@public @TO@ private @AT@ 3707 @LENGTH@ 6


INS FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @TO@ TypeDeclaration@@[public, final]BytesBytesMultiHashMap,  @AT@ 8373 @LENGTH@ 69
---INS Modifier@@private @TO@ FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @AT@ 8373 @LENGTH@ 7
---INS Modifier@@final @TO@ FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @AT@ 8381 @LENGTH@ 5
---INS Modifier@@static @TO@ FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @AT@ 8387 @LENGTH@ 6
---INS PrimitiveType@@int @TO@ FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @AT@ 8394 @LENGTH@ 3
---INS VariableDeclarationFragment@@DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024 @TO@ FieldDeclaration@@private, final, static, int, [DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024] @AT@ 8398 @LENGTH@ 43
------INS SimpleName@@DEFAULT_MIN_MAX_CAPACITY @TO@ VariableDeclarationFragment@@DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024 @AT@ 8398 @LENGTH@ 24
------INS InfixExpression@@16 * 1024 * 1024 @TO@ VariableDeclarationFragment@@DEFAULT_MIN_MAX_CAPACITY=16 * 1024 * 1024 @AT@ 8425 @LENGTH@ 16
---------INS NumberLiteral@@16 @TO@ InfixExpression@@16 * 1024 * 1024 @AT@ 8425 @LENGTH@ 2
---------INS Operator@@* @TO@ InfixExpression@@16 * 1024 * 1024 @AT@ 8427 @LENGTH@ 1
---------INS NumberLiteral@@1024 @TO@ InfixExpression@@16 * 1024 * 1024 @AT@ 8430 @LENGTH@ 4
---------INS NumberLiteral@@1024 @TO@ InfixExpression@@16 * 1024 * 1024 @AT@ 8437 @LENGTH@ 4


UPD IfStatement@@if (legacyValue.isDefined()) {  final ModelNode value;switch (name) {case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:    name=Constants.ORB_GIOP_VERSION;  value=new ModelNode(new StringBuilder().append("1.").append(legacyValue).toString());break;case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(Constants.FULL);} else if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.ORB_INIT_SECURITY:if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(true);} else {value=new ModelNode(false);}break;default :value=legacyValue;}if (!value.asString().equals(JacORBSubsystemConstants.OFF)) {model.get(name).set(value);}} @TO@ if (legacyValue.isDefined()) {  if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) {    transformIorSettings(model,legacyValue);    continue;  }  final ModelNode value;switch (name) {case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:    name=Constants.ORB_GIOP_VERSION;  value=new ModelNode(new StringBuilder().append("1.").append(legacyValue).toString());break;case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(Constants.FULL);} else if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.ORB_INIT_SECURITY:if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(true);} else {value=new ModelNode(false);}break;default :value=legacyValue;}if (!value.asString().equals(JacORBSubsystemConstants.OFF)) {model.get(name).set(value);}} @AT@ 1560 @LENGTH@ 2053
---UPD Block@@ThenBody:{  final ModelNode value;switch (name) {case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:    name=Constants.ORB_GIOP_VERSION;  value=new ModelNode(new StringBuilder().append("1.").append(legacyValue).toString());break;case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(Constants.FULL);} else if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.ORB_INIT_SECURITY:if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(true);} else {value=new ModelNode(false);}break;default :value=legacyValue;}if (!value.asString().equals(JacORBSubsystemConstants.OFF)) {model.get(name).set(value);}} @TO@ ThenBody:{  if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) {    transformIorSettings(model,legacyValue);    continue;  }  final ModelNode value;switch (name) {case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:    name=Constants.ORB_GIOP_VERSION;  value=new ModelNode(new StringBuilder().append("1.").append(legacyValue).toString());break;case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(Constants.FULL);} else if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.ORB_INIT_SECURITY:if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(true);} else {value=new ModelNode(false);}break;default :value=legacyValue;}if (!value.asString().equals(JacORBSubsystemConstants.OFF)) {model.get(name).set(value);}} @AT@ 1589 @LENGTH@ 2024
------INS IfStatement@@if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) {  transformIorSettings(model,legacyValue);  continue;} @TO@ Block@@ThenBody:{  final ModelNode value;switch (name) {case JacORBSubsystemConstants.ORB_GIOP_MINOR_VERSION:    name=Constants.ORB_GIOP_VERSION;  value=new ModelNode(new StringBuilder().append("1.").append(legacyValue).toString());break;case JacORBSubsystemConstants.ORB_INIT_TRANSACTIONS:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(Constants.FULL);} else if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.ORB_INIT_SECURITY:if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) {value=new ModelNode(Constants.NONE);} else {value=legacyValue;}break;case JacORBSubsystemConstants.SECURITY_SUPPORT_SSL:case JacORBSubsystemConstants.SECURITY_ADD_COMP_VIA_INTERCEPTOR:case JacORBSubsystemConstants.NAMING_EXPORT_CORBALOC:if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) {value=new ModelNode(true);} else {value=new ModelNode(false);}break;default :value=legacyValue;}if (!value.asString().equals(JacORBSubsystemConstants.OFF)) {model.get(name).set(value);}} @AT@ 1607 @LENGTH@ 165
---------INS MethodInvocation@@name.equals(JacORBSubsystemConstants.IOR_SETTINGS) @TO@ IfStatement@@if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) {  transformIorSettings(model,legacyValue);  continue;} @AT@ 1610 @LENGTH@ 50
------------INS SimpleName@@Name:name @TO@ MethodInvocation@@name.equals(JacORBSubsystemConstants.IOR_SETTINGS) @AT@ 1610 @LENGTH@ 4
------------INS SimpleName@@MethodName:equals:[JacORBSubsystemConstants.IOR_SETTINGS] @TO@ MethodInvocation@@name.equals(JacORBSubsystemConstants.IOR_SETTINGS) @AT@ 1615 @LENGTH@ 45
---------------INS QualifiedName@@JacORBSubsystemConstants.IOR_SETTINGS @TO@ SimpleName@@MethodName:equals:[JacORBSubsystemConstants.IOR_SETTINGS] @AT@ 1622 @LENGTH@ 37
------------------INS SimpleName@@JacORBSubsystemConstants @TO@ QualifiedName@@JacORBSubsystemConstants.IOR_SETTINGS @AT@ 1622 @LENGTH@ 24
------------------INS SimpleName@@IOR_SETTINGS @TO@ QualifiedName@@JacORBSubsystemConstants.IOR_SETTINGS @AT@ 1647 @LENGTH@ 12
---------INS Block@@ThenBody:{  transformIorSettings(model,legacyValue);  continue;} @TO@ IfStatement@@if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) {  transformIorSettings(model,legacyValue);  continue;} @AT@ 1661 @LENGTH@ 111
------------INS ExpressionStatement@@MethodInvocation:transformIorSettings(model,legacyValue) @TO@ Block@@ThenBody:{  transformIorSettings(model,legacyValue);  continue;} @AT@ 1683 @LENGTH@ 41
---------------INS MethodInvocation@@transformIorSettings(model,legacyValue) @TO@ ExpressionStatement@@MethodInvocation:transformIorSettings(model,legacyValue) @AT@ 1683 @LENGTH@ 40
------------------INS SimpleName@@MethodName:transformIorSettings:[model, legacyValue] @TO@ MethodInvocation@@transformIorSettings(model,legacyValue) @AT@ 1683 @LENGTH@ 40
---------------------INS SimpleName@@model @TO@ SimpleName@@MethodName:transformIorSettings:[model, legacyValue] @AT@ 1704 @LENGTH@ 5
---------------------INS SimpleName@@legacyValue @TO@ SimpleName@@MethodName:transformIorSettings:[model, legacyValue] @AT@ 1711 @LENGTH@ 11
------------INS ContinueStatement@@ @TO@ Block@@ThenBody:{  transformIorSettings(model,legacyValue);  continue;} @AT@ 1745 @LENGTH@ 9


UPD ReturnStatement@@MethodInvocation:camelContext.getManagementNameStrategy().getName() @TO@ MethodInvocation:camelContext.getName() @AT@ 1503 @LENGTH@ 58
---UPD MethodInvocation@@camelContext.getManagementNameStrategy().getName() @TO@ camelContext.getName() @AT@ 1510 @LENGTH@ 50
------DEL MethodInvocation@@MethodName:getManagementNameStrategy:[] @AT@ 1510 @LENGTH@ 40


UPD VariableDeclarationStatement@@final BeanWrapper<Object> wrapper=BeanWrapper.create(value,getConversionService()); @TO@ final PersistentPropertyAccessor wrapper=BeanPropertyAccessor.create(value,getConversionService()); @AT@ 6415 @LENGTH@ 86
---DEL ParameterizedType@@BeanWrapper<Object> @AT@ 6421 @LENGTH@ 19
------DEL SimpleType@@BeanWrapper @AT@ 6421 @LENGTH@ 11
------DEL SimpleType@@Object @AT@ 6433 @LENGTH@ 6
---UPD VariableDeclarationFragment@@wrapper=BeanWrapper.create(value,getConversionService()) @TO@ wrapper=BeanPropertyAccessor.create(value,getConversionService()) @AT@ 6441 @LENGTH@ 59
------UPD MethodInvocation@@BeanWrapper.create(value,getConversionService()) @TO@ BeanPropertyAccessor.create(value,getConversionService()) @AT@ 6451 @LENGTH@ 49
---------UPD SimpleName@@Name:BeanWrapper @TO@ Name:BeanPropertyAccessor @AT@ 6451 @LENGTH@ 11
---INS SimpleType@@PersistentPropertyAccessor @TO@ VariableDeclarationStatement@@final BeanWrapper<Object> wrapper=BeanWrapper.create(value,getConversionService()); @AT@ 6446 @LENGTH@ 26


MOV FieldDeclaration@@private, static, final, Logger, [LOG=LoggerFactory.getLogger(AbstractGitConsumer.class)] @TO@ TypeDeclaration@@[public, abstract]AbstractGitConsumer, ScheduledPollConsumer @AT@ 1481 @LENGTH@ 85


INS MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @TO@ TypeDeclaration@@[@ContextConfiguration(classes=JpaRepositoryConfig.class), @Transactional, public]RepositoryEntityControllerIntegrationTests, AbstractControllerIntegrationTests @AT@ 8925 @LENGTH@ 839
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 8925 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 8932 @LENGTH@ 4
---INS SimpleName@@MethodName:createsEtagForProjectedEntityCorrectly @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 8937 @LENGTH@ 38
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 8985 @LENGTH@ 9
---INS VariableDeclarationStatement@@Address address=repository.save(new Address()); @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9000 @LENGTH@ 49
------INS SimpleType@@Address @TO@ VariableDeclarationStatement@@Address address=repository.save(new Address()); @AT@ 9000 @LENGTH@ 7
------INS VariableDeclarationFragment@@address=repository.save(new Address()) @TO@ VariableDeclarationStatement@@Address address=repository.save(new Address()); @AT@ 9008 @LENGTH@ 40
---------INS SimpleName@@address @TO@ VariableDeclarationFragment@@address=repository.save(new Address()) @AT@ 9008 @LENGTH@ 7
---------INS MethodInvocation@@repository.save(new Address()) @TO@ VariableDeclarationFragment@@address=repository.save(new Address()) @AT@ 9018 @LENGTH@ 30
------------INS SimpleName@@Name:repository @TO@ MethodInvocation@@repository.save(new Address()) @AT@ 9018 @LENGTH@ 10
------------INS SimpleName@@MethodName:save:[new Address()] @TO@ MethodInvocation@@repository.save(new Address()) @AT@ 9029 @LENGTH@ 19
---------------INS ClassInstanceCreation@@Address[] @TO@ SimpleName@@MethodName:save:[new Address()] @AT@ 9034 @LENGTH@ 13
------------------INS New@@new @TO@ ClassInstanceCreation@@Address[] @AT@ 9034 @LENGTH@ 3
------------------INS SimpleType@@Address @TO@ ClassInstanceCreation@@Address[] @AT@ 9038 @LENGTH@ 7
---INS VariableDeclarationStatement@@PersistentEntityResourceAssembler assembler=Mockito.mock(PersistentEntityResourceAssembler.class); @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9053 @LENGTH@ 100
------INS SimpleType@@PersistentEntityResourceAssembler @TO@ VariableDeclarationStatement@@PersistentEntityResourceAssembler assembler=Mockito.mock(PersistentEntityResourceAssembler.class); @AT@ 9053 @LENGTH@ 33
------INS VariableDeclarationFragment@@assembler=Mockito.mock(PersistentEntityResourceAssembler.class) @TO@ VariableDeclarationStatement@@PersistentEntityResourceAssembler assembler=Mockito.mock(PersistentEntityResourceAssembler.class); @AT@ 9087 @LENGTH@ 65
---------INS SimpleName@@assembler @TO@ VariableDeclarationFragment@@assembler=Mockito.mock(PersistentEntityResourceAssembler.class) @AT@ 9087 @LENGTH@ 9
---------INS MethodInvocation@@Mockito.mock(PersistentEntityResourceAssembler.class) @TO@ VariableDeclarationFragment@@assembler=Mockito.mock(PersistentEntityResourceAssembler.class) @AT@ 9099 @LENGTH@ 53
------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.mock(PersistentEntityResourceAssembler.class) @AT@ 9099 @LENGTH@ 7
------------INS SimpleName@@MethodName:mock:[PersistentEntityResourceAssembler.class] @TO@ MethodInvocation@@Mockito.mock(PersistentEntityResourceAssembler.class) @AT@ 9107 @LENGTH@ 45
---------------INS TypeLiteral@@PersistentEntityResourceAssembler.class @TO@ SimpleName@@MethodName:mock:[PersistentEntityResourceAssembler.class] @AT@ 9112 @LENGTH@ 39
---INS VariableDeclarationStatement@@AddressProjection addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class); @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9156 @LENGTH@ 123
------INS SimpleType@@AddressProjection @TO@ VariableDeclarationStatement@@AddressProjection addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class); @AT@ 9156 @LENGTH@ 17
------INS VariableDeclarationFragment@@addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @TO@ VariableDeclarationStatement@@AddressProjection addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class); @AT@ 9174 @LENGTH@ 104
---------INS SimpleName@@addressProjection @TO@ VariableDeclarationFragment@@addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @AT@ 9174 @LENGTH@ 17
---------INS MethodInvocation@@new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @TO@ VariableDeclarationFragment@@addressProjection=new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @AT@ 9194 @LENGTH@ 84
------------INS ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @TO@ MethodInvocation@@new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @AT@ 9194 @LENGTH@ 37
---------------INS New@@new @TO@ ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @AT@ 9194 @LENGTH@ 3
---------------INS SimpleType@@SpelAwareProxyProjectionFactory @TO@ ClassInstanceCreation@@SpelAwareProxyProjectionFactory[] @AT@ 9198 @LENGTH@ 31
------------INS SimpleName@@MethodName:createProjection:[AddressProjection.class] @TO@ MethodInvocation@@new SpelAwareProxyProjectionFactory().createProjection(AddressProjection.class) @AT@ 9237 @LENGTH@ 41
---------------INS TypeLiteral@@AddressProjection.class @TO@ SimpleName@@MethodName:createProjection:[AddressProjection.class] @AT@ 9254 @LENGTH@ 23
---INS VariableDeclarationStatement@@PersistentEntityResource resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build(); @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9283 @LENGTH@ 144
------INS SimpleType@@PersistentEntityResource @TO@ VariableDeclarationStatement@@PersistentEntityResource resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build(); @AT@ 9283 @LENGTH@ 24
------INS VariableDeclarationFragment@@resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @TO@ VariableDeclarationStatement@@PersistentEntityResource resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build(); @AT@ 9308 @LENGTH@ 118
---------INS SimpleName@@resource @TO@ VariableDeclarationFragment@@resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @AT@ 9308 @LENGTH@ 8
---------INS MethodInvocation@@PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @TO@ VariableDeclarationFragment@@resource=PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @AT@ 9319 @LENGTH@ 107
------------INS MethodInvocation@@MethodName:build:[addressProjection, entities.getPersistentEntity(Address.class)] @TO@ MethodInvocation@@PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @AT@ 9319 @LENGTH@ 99
---------------INS SimpleName@@addressProjection @TO@ MethodInvocation@@MethodName:build:[addressProjection, entities.getPersistentEntity(Address.class)] @AT@ 9355 @LENGTH@ 17
---------------INS MethodInvocation@@entities.getPersistentEntity(Address.class) @TO@ MethodInvocation@@MethodName:build:[addressProjection, entities.getPersistentEntity(Address.class)] @AT@ 9374 @LENGTH@ 43
------------------INS SimpleName@@Name:entities @TO@ MethodInvocation@@entities.getPersistentEntity(Address.class) @AT@ 9374 @LENGTH@ 8
------------------INS SimpleName@@MethodName:getPersistentEntity:[Address.class] @TO@ MethodInvocation@@entities.getPersistentEntity(Address.class) @AT@ 9383 @LENGTH@ 34
---------------------INS TypeLiteral@@Address.class @TO@ SimpleName@@MethodName:getPersistentEntity:[Address.class] @AT@ 9403 @LENGTH@ 13
------------INS SimpleName@@Name:PersistentEntityResource @TO@ MethodInvocation@@PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @AT@ 9319 @LENGTH@ 24
------------INS SimpleName@@MethodName:build:[] @TO@ MethodInvocation@@PersistentEntityResource.build(addressProjection,entities.getPersistentEntity(Address.class)).build() @AT@ 9419 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9431 @LENGTH@ 87
------INS MethodInvocation@@Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @TO@ ExpressionStatement@@MethodInvocation:Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @AT@ 9431 @LENGTH@ 86
---------INS MethodInvocation@@MethodName:when:[assembler.toFullResource(Mockito.any(Object.class))] @TO@ MethodInvocation@@Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @AT@ 9431 @LENGTH@ 65
------------INS MethodInvocation@@assembler.toFullResource(Mockito.any(Object.class)) @TO@ MethodInvocation@@MethodName:when:[assembler.toFullResource(Mockito.any(Object.class))] @AT@ 9444 @LENGTH@ 51
---------------INS SimpleName@@Name:assembler @TO@ MethodInvocation@@assembler.toFullResource(Mockito.any(Object.class)) @AT@ 9444 @LENGTH@ 9
---------------INS SimpleName@@MethodName:toFullResource:[Mockito.any(Object.class)] @TO@ MethodInvocation@@assembler.toFullResource(Mockito.any(Object.class)) @AT@ 9454 @LENGTH@ 41
------------------INS MethodInvocation@@Mockito.any(Object.class) @TO@ SimpleName@@MethodName:toFullResource:[Mockito.any(Object.class)] @AT@ 9469 @LENGTH@ 25
---------------------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.any(Object.class) @AT@ 9469 @LENGTH@ 7
---------------------INS SimpleName@@MethodName:any:[Object.class] @TO@ MethodInvocation@@Mockito.any(Object.class) @AT@ 9477 @LENGTH@ 17
------------------------INS TypeLiteral@@Object.class @TO@ SimpleName@@MethodName:any:[Object.class] @AT@ 9481 @LENGTH@ 12
---------INS SimpleName@@Name:Mockito @TO@ MethodInvocation@@Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @AT@ 9431 @LENGTH@ 7
---------INS SimpleName@@MethodName:thenReturn:[resource] @TO@ MethodInvocation@@Mockito.when(assembler.toFullResource(Mockito.any(Object.class))).thenReturn(resource) @AT@ 9497 @LENGTH@ 20
------------INS SimpleName@@resource @TO@ SimpleName@@MethodName:thenReturn:[resource] @AT@ 9508 @LENGTH@ 8
---INS VariableDeclarationStatement@@ResponseEntity<Resource<?>> entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()); @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9522 @LENGTH@ 173
------INS ParameterizedType@@ResponseEntity<Resource<?>> @TO@ VariableDeclarationStatement@@ResponseEntity<Resource<?>> entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()); @AT@ 9522 @LENGTH@ 27
---------INS SimpleType@@ResponseEntity @TO@ ParameterizedType@@ResponseEntity<Resource<?>> @AT@ 9522 @LENGTH@ 14
---------INS ParameterizedType@@Resource<?> @TO@ ParameterizedType@@ResponseEntity<Resource<?>> @AT@ 9537 @LENGTH@ 11
------------INS SimpleType@@Resource @TO@ ParameterizedType@@Resource<?> @AT@ 9537 @LENGTH@ 8
------------INS WildcardType@@? @TO@ ParameterizedType@@Resource<?> @AT@ 9546 @LENGTH@ 1
------INS VariableDeclarationFragment@@entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @TO@ VariableDeclarationStatement@@ResponseEntity<Resource<?>> entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()); @AT@ 9550 @LENGTH@ 144
---------INS SimpleName@@entity @TO@ VariableDeclarationFragment@@entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @AT@ 9550 @LENGTH@ 6
---------INS MethodInvocation@@controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @TO@ VariableDeclarationFragment@@entity=controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @AT@ 9559 @LENGTH@ 135
------------INS SimpleName@@Name:controller @TO@ MethodInvocation@@controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @AT@ 9559 @LENGTH@ 10
------------INS SimpleName@@MethodName:getItemResource:[getResourceInformation(Address.class), address.id, assembler, new LinkedMultiValueMap<String,String>()] @TO@ MethodInvocation@@controller.getItemResource(getResourceInformation(Address.class),address.id,assembler,new LinkedMultiValueMap<String,String>()) @AT@ 9570 @LENGTH@ 124
---------------INS MethodInvocation@@getResourceInformation(Address.class) @TO@ SimpleName@@MethodName:getItemResource:[getResourceInformation(Address.class), address.id, assembler, new LinkedMultiValueMap<String,String>()] @AT@ 9586 @LENGTH@ 37
------------------INS SimpleName@@MethodName:getResourceInformation:[Address.class] @TO@ MethodInvocation@@getResourceInformation(Address.class) @AT@ 9586 @LENGTH@ 37
---------------------INS TypeLiteral@@Address.class @TO@ SimpleName@@MethodName:getResourceInformation:[Address.class] @AT@ 9609 @LENGTH@ 13
---------------INS QualifiedName@@address.id @TO@ SimpleName@@MethodName:getItemResource:[getResourceInformation(Address.class), address.id, assembler, new LinkedMultiValueMap<String,String>()] @AT@ 9625 @LENGTH@ 10
------------------INS SimpleName@@address @TO@ QualifiedName@@address.id @AT@ 9625 @LENGTH@ 7
------------------INS SimpleName@@id @TO@ QualifiedName@@address.id @AT@ 9633 @LENGTH@ 2
---------------INS SimpleName@@assembler @TO@ SimpleName@@MethodName:getItemResource:[getResourceInformation(Address.class), address.id, assembler, new LinkedMultiValueMap<String,String>()] @AT@ 9641 @LENGTH@ 9
---------------INS ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @TO@ SimpleName@@MethodName:getItemResource:[getResourceInformation(Address.class), address.id, assembler, new LinkedMultiValueMap<String,String>()] @AT@ 9652 @LENGTH@ 41
------------------INS New@@new @TO@ ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @AT@ 9652 @LENGTH@ 3
------------------INS ParameterizedType@@LinkedMultiValueMap<String,String> @TO@ ClassInstanceCreation@@LinkedMultiValueMap<String,String>[] @AT@ 9656 @LENGTH@ 35
---------------------INS SimpleType@@LinkedMultiValueMap @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 9656 @LENGTH@ 19
---------------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 9676 @LENGTH@ 6
---------------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedMultiValueMap<String,String> @AT@ 9684 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:assertThat(entity.getHeaders().getETag(),is(notNullValue())) @TO@ MethodDeclaration@@public, void, MethodName:createsEtagForProjectedEntityCorrectly, Exception,  @AT@ 9699 @LENGTH@ 62
------INS MethodInvocation@@assertThat(entity.getHeaders().getETag(),is(notNullValue())) @TO@ ExpressionStatement@@MethodInvocation:assertThat(entity.getHeaders().getETag(),is(notNullValue())) @AT@ 9699 @LENGTH@ 61
---------INS SimpleName@@MethodName:assertThat:[entity.getHeaders().getETag(), is(notNullValue())] @TO@ MethodInvocation@@assertThat(entity.getHeaders().getETag(),is(notNullValue())) @AT@ 9699 @LENGTH@ 61
------------INS MethodInvocation@@entity.getHeaders().getETag() @TO@ SimpleName@@MethodName:assertThat:[entity.getHeaders().getETag(), is(notNullValue())] @AT@ 9710 @LENGTH@ 29
---------------INS MethodInvocation@@MethodName:getHeaders:[] @TO@ MethodInvocation@@entity.getHeaders().getETag() @AT@ 9710 @LENGTH@ 19
---------------INS SimpleName@@Name:entity @TO@ MethodInvocation@@entity.getHeaders().getETag() @AT@ 9710 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getETag:[] @TO@ MethodInvocation@@entity.getHeaders().getETag() @AT@ 9730 @LENGTH@ 9
------------INS MethodInvocation@@is(notNullValue()) @TO@ SimpleName@@MethodName:assertThat:[entity.getHeaders().getETag(), is(notNullValue())] @AT@ 9741 @LENGTH@ 18
---------------INS SimpleName@@MethodName:is:[notNullValue()] @TO@ MethodInvocation@@is(notNullValue()) @AT@ 9741 @LENGTH@ 18
------------------INS MethodInvocation@@MethodName:notNullValue:[] @TO@ SimpleName@@MethodName:is:[notNullValue()] @AT@ 9744 @LENGTH@ 14


INS MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @TO@ TypeDeclaration@@[public, final]JmsMessageHelper,  @AT@ 12268 @LENGTH@ 250
---INS Modifier@@public @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12268 @LENGTH@ 6
---INS Modifier@@static @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12275 @LENGTH@ 6
---INS SimpleType@@Destination @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12282 @LENGTH@ 11
---INS SimpleName@@MethodName:getJMSDestination @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12294 @LENGTH@ 17
---INS SingleVariableDeclaration@@Message message @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12312 @LENGTH@ 15
------INS SimpleType@@Message @TO@ SingleVariableDeclaration@@Message message @AT@ 12312 @LENGTH@ 7
------INS SimpleName@@message @TO@ SingleVariableDeclaration@@Message message @AT@ 12320 @LENGTH@ 7
---INS TryStatement@@try {  return message.getJMSDestination();} catch (Exception e) {} @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12339 @LENGTH@ 151
------INS ReturnStatement@@MethodInvocation:message.getJMSDestination() @TO@ TryStatement@@try {  return message.getJMSDestination();} catch (Exception e) {} @AT@ 12357 @LENGTH@ 35
---------INS MethodInvocation@@message.getJMSDestination() @TO@ ReturnStatement@@MethodInvocation:message.getJMSDestination() @AT@ 12364 @LENGTH@ 27
------------INS SimpleName@@Name:message @TO@ MethodInvocation@@message.getJMSDestination() @AT@ 12364 @LENGTH@ 7
------------INS SimpleName@@MethodName:getJMSDestination:[] @TO@ MethodInvocation@@message.getJMSDestination() @AT@ 12372 @LENGTH@ 19
------INS CatchClause@@catch (Exception e) {} @TO@ TryStatement@@try {  return message.getJMSDestination();} catch (Exception e) {} @AT@ 12403 @LENGTH@ 87
---------INS SingleVariableDeclaration@@Exception e @TO@ CatchClause@@catch (Exception e) {} @AT@ 12410 @LENGTH@ 11
------------INS SimpleType@@Exception @TO@ SingleVariableDeclaration@@Exception e @AT@ 12410 @LENGTH@ 9
------------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Exception e @AT@ 12420 @LENGTH@ 1
---INS ReturnStatement@@NullLiteral:null @TO@ MethodDeclaration@@public, static, Destination, MethodName:getJMSDestination, Message message,  @AT@ 12500 @LENGTH@ 12
------INS NullLiteral@@null @TO@ ReturnStatement@@NullLiteral:null @AT@ 12507 @LENGTH@ 4


UPD CatchClause@@catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,existingObject.getClass()),o_O);} @TO@ catch (Exception o_O) {  if (o_O instanceof HttpMessageNotReadableException) {    throw (HttpMessageNotReadableException)o_O;  }  throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,existingObject.getClass()),o_O);} @AT@ 7987 @LENGTH@ 135
---INS IfStatement@@if (o_O instanceof HttpMessageNotReadableException) {  throw (HttpMessageNotReadableException)o_O;} @TO@ CatchClause@@catch (Exception o_O) {  throw new HttpMessageNotReadableException(String.format(ERROR_MESSAGE,existingObject.getClass()),o_O);} @AT@ 8017 @LENGTH@ 107
------INS InstanceofExpression@@o_O instanceof HttpMessageNotReadableException @TO@ IfStatement@@if (o_O instanceof HttpMessageNotReadableException) {  throw (HttpMessageNotReadableException)o_O;} @AT@ 8021 @LENGTH@ 46
---------INS SimpleName@@o_O @TO@ InstanceofExpression@@o_O instanceof HttpMessageNotReadableException @AT@ 8021 @LENGTH@ 3
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@o_O instanceof HttpMessageNotReadableException @AT@ 8025 @LENGTH@ 10
---------INS SimpleType@@HttpMessageNotReadableException @TO@ InstanceofExpression@@o_O instanceof HttpMessageNotReadableException @AT@ 8036 @LENGTH@ 31
------INS Block@@ThenBody:{  throw (HttpMessageNotReadableException)o_O;} @TO@ IfStatement@@if (o_O instanceof HttpMessageNotReadableException) {  throw (HttpMessageNotReadableException)o_O;} @AT@ 8069 @LENGTH@ 55
---------INS ThrowStatement@@CastExpression:(HttpMessageNotReadableException)o_O @TO@ Block@@ThenBody:{  throw (HttpMessageNotReadableException)o_O;} @AT@ 8075 @LENGTH@ 44
------------INS CastExpression@@(HttpMessageNotReadableException)o_O @TO@ ThrowStatement@@CastExpression:(HttpMessageNotReadableException)o_O @AT@ 8081 @LENGTH@ 37
---------------INS SimpleType@@HttpMessageNotReadableException @TO@ CastExpression@@(HttpMessageNotReadableException)o_O @AT@ 8082 @LENGTH@ 31
---------------INS SimpleName@@o_O @TO@ CastExpression@@(HttpMessageNotReadableException)o_O @AT@ 8115 @LENGTH@ 3


UPD IfStatement@@if (tokens.length > 2) {  sharedKey=tokens[3].getBytes(StandardCharsets.UTF_8);} @TO@ if (tokens.length > 3) {  sharedKey=tokens[3].getBytes(StandardCharsets.UTF_8);} @AT@ 5254 @LENGTH@ 172
---UPD InfixExpression@@tokens.length > 2 @TO@ tokens.length > 3 @AT@ 5258 @LENGTH@ 17
------UPD NumberLiteral@@2 @TO@ 3 @AT@ 5274 @LENGTH@ 1


INS MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @TO@ TypeDeclaration@@[public]MongoQueryMethodUnitTests,  @AT@ 6561 @LENGTH@ 271
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6561 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6568 @LENGTH@ 4
---INS SimpleName@@MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6573 @LENGTH@ 63
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6646 @LENGTH@ 9
---INS VariableDeclarationStatement@@MongoQueryMethod method=queryMethod("deleteByUserName",String.class); @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6661 @LENGTH@ 72
------INS SimpleType@@MongoQueryMethod @TO@ VariableDeclarationStatement@@MongoQueryMethod method=queryMethod("deleteByUserName",String.class); @AT@ 6661 @LENGTH@ 16
------INS VariableDeclarationFragment@@method=queryMethod("deleteByUserName",String.class) @TO@ VariableDeclarationStatement@@MongoQueryMethod method=queryMethod("deleteByUserName",String.class); @AT@ 6678 @LENGTH@ 54
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=queryMethod("deleteByUserName",String.class) @AT@ 6678 @LENGTH@ 6
---------INS MethodInvocation@@queryMethod("deleteByUserName",String.class) @TO@ VariableDeclarationFragment@@method=queryMethod("deleteByUserName",String.class) @AT@ 6687 @LENGTH@ 45
------------INS SimpleName@@MethodName:queryMethod:["deleteByUserName", String.class] @TO@ MethodInvocation@@queryMethod("deleteByUserName",String.class) @AT@ 6687 @LENGTH@ 45
---------------INS StringLiteral@@"deleteByUserName" @TO@ SimpleName@@MethodName:queryMethod:["deleteByUserName", String.class] @AT@ 6699 @LENGTH@ 18
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:queryMethod:["deleteByUserName", String.class] @AT@ 6719 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertThat(method.getEntityInformation().getJavaType(),is(typeCompatibleWith(User.class))) @TO@ MethodDeclaration@@public, void, MethodName:fallsBackToRepositoryDomainTypeIfMethodDoesNotReturnADomainType, Exception,  @AT@ 6737 @LENGTH@ 92
------INS MethodInvocation@@assertThat(method.getEntityInformation().getJavaType(),is(typeCompatibleWith(User.class))) @TO@ ExpressionStatement@@MethodInvocation:assertThat(method.getEntityInformation().getJavaType(),is(typeCompatibleWith(User.class))) @AT@ 6737 @LENGTH@ 91
---------INS SimpleName@@MethodName:assertThat:[method.getEntityInformation().getJavaType(), is(typeCompatibleWith(User.class))] @TO@ MethodInvocation@@assertThat(method.getEntityInformation().getJavaType(),is(typeCompatibleWith(User.class))) @AT@ 6737 @LENGTH@ 91
------------INS MethodInvocation@@method.getEntityInformation().getJavaType() @TO@ SimpleName@@MethodName:assertThat:[method.getEntityInformation().getJavaType(), is(typeCompatibleWith(User.class))] @AT@ 6748 @LENGTH@ 43
---------------INS MethodInvocation@@MethodName:getEntityInformation:[] @TO@ MethodInvocation@@method.getEntityInformation().getJavaType() @AT@ 6748 @LENGTH@ 29
---------------INS SimpleName@@Name:method @TO@ MethodInvocation@@method.getEntityInformation().getJavaType() @AT@ 6748 @LENGTH@ 6
---------------INS SimpleName@@MethodName:getJavaType:[] @TO@ MethodInvocation@@method.getEntityInformation().getJavaType() @AT@ 6778 @LENGTH@ 13
------------INS MethodInvocation@@is(typeCompatibleWith(User.class)) @TO@ SimpleName@@MethodName:assertThat:[method.getEntityInformation().getJavaType(), is(typeCompatibleWith(User.class))] @AT@ 6793 @LENGTH@ 34
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(User.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(User.class)) @AT@ 6793 @LENGTH@ 34
------------------INS MethodInvocation@@typeCompatibleWith(User.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(User.class)] @AT@ 6796 @LENGTH@ 30
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------INS SimpleName@@MethodName:is:[typeCompatibleWith(User.class)] @TO@ MethodInvocation@@is(typeCompatibleWith(User.class)) @AT@ 6793 @LENGTH@ 34
------------------INS MethodInvocation@@typeCompatibleWith(User.class) @TO@ SimpleName@@MethodName:is:[typeCompatibleWith(User.class)] @AT@ 6796 @LENGTH@ 30
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10
---------------------INS SimpleName@@MethodName:typeCompatibleWith:[User.class] @TO@ MethodInvocation@@typeCompatibleWith(User.class) @AT@ 6796 @LENGTH@ 30
------------------------INS TypeLiteral@@User.class @TO@ SimpleName@@MethodName:typeCompatibleWith:[User.class] @AT@ 6815 @LENGTH@ 10


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.failedToDestroy("queue",queueConfiguration.getName()) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.failedToDestroy("queue",queueConfiguration.getName()) @AT@ 3220 @LENGTH@ 72
---UPD MethodInvocation@@MESSAGING_LOGGER.failedToDestroy("queue",queueConfiguration.getName()) @TO@ MessagingLogger.ROOT_LOGGER.failedToDestroy("queue",queueConfiguration.getName()) @AT@ 3220 @LENGTH@ 71
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.failedToDestroy("queue",queueConfiguration.getName()) @AT@ 3122 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 3220 @LENGTH@ 16


UPD MethodDeclaration@@List<Cinema>, MethodName:findByVisitedNameAndBlockbusterOfTheWeekTitle, String location, String title,  @TO@ List<Cinema>, MethodName:findByVisitedNameAndBlockbusterOfTheWeekName, String location, String name,  @AT@ 1856 @LENGTH@ 77
---UPD SimpleName@@MethodName:findByVisitedNameAndBlockbusterOfTheWeekTitle @TO@ MethodName:findByVisitedNameAndBlockbusterOfTheWeekName @AT@ 1856 @LENGTH@ 45
---UPD SingleVariableDeclaration@@String title @TO@ String name @AT@ 1919 @LENGTH@ 12
------UPD SimpleName@@title @TO@ name @AT@ 1926 @LENGTH@ 5


INS MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @TO@ TypeDeclaration@@[public]MessagingConfiguration, AbstractServerConfiguration<MessagingFraction> @AT@ 4676 @LENGTH@ 594
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4676 @LENGTH@ 9
---INS PrimitiveType@@void @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4686 @LENGTH@ 4
---INS SimpleName@@MethodName:addConnectionFactory @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4691 @LENGTH@ 20
---INS SingleVariableDeclaration@@MessagingServer server @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4712 @LENGTH@ 22
------INS SimpleType@@MessagingServer @TO@ SingleVariableDeclaration@@MessagingServer server @AT@ 4712 @LENGTH@ 15
------INS SimpleName@@server @TO@ SingleVariableDeclaration@@MessagingServer server @AT@ 4728 @LENGTH@ 6
---INS SingleVariableDeclaration@@List<ModelNode> list @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4736 @LENGTH@ 20
------INS ParameterizedType@@List<ModelNode> @TO@ SingleVariableDeclaration@@List<ModelNode> list @AT@ 4736 @LENGTH@ 15
---------INS SimpleType@@List @TO@ ParameterizedType@@List<ModelNode> @AT@ 4736 @LENGTH@ 4
---------INS SimpleType@@ModelNode @TO@ ParameterizedType@@List<ModelNode> @AT@ 4741 @LENGTH@ 9
------INS SimpleName@@list @TO@ SingleVariableDeclaration@@List<ModelNode> list @AT@ 4752 @LENGTH@ 4
---INS VariableDeclarationStatement@@PathAddress serverAddress=this.address.append("server",server.name()); @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4768 @LENGTH@ 73
------INS SimpleType@@PathAddress @TO@ VariableDeclarationStatement@@PathAddress serverAddress=this.address.append("server",server.name()); @AT@ 4768 @LENGTH@ 11
------INS VariableDeclarationFragment@@serverAddress=this.address.append("server",server.name()) @TO@ VariableDeclarationStatement@@PathAddress serverAddress=this.address.append("server",server.name()); @AT@ 4780 @LENGTH@ 60
---------INS SimpleName@@serverAddress @TO@ VariableDeclarationFragment@@serverAddress=this.address.append("server",server.name()) @AT@ 4780 @LENGTH@ 13
---------INS MethodInvocation@@this.address.append("server",server.name()) @TO@ VariableDeclarationFragment@@serverAddress=this.address.append("server",server.name()) @AT@ 4796 @LENGTH@ 44
------------INS FieldAccess@@this.address @TO@ MethodInvocation@@this.address.append("server",server.name()) @AT@ 4796 @LENGTH@ 12
---------------INS ThisExpression@@this @TO@ FieldAccess@@this.address @AT@ 4796 @LENGTH@ 4
---------------INS SimpleName@@address @TO@ FieldAccess@@this.address @AT@ 4801 @LENGTH@ 7
------------INS SimpleName@@MethodName:append:["server", server.name()] @TO@ MethodInvocation@@this.address.append("server",server.name()) @AT@ 4809 @LENGTH@ 31
---------------INS StringLiteral@@"server" @TO@ SimpleName@@MethodName:append:["server", server.name()] @AT@ 4816 @LENGTH@ 8
---------------INS MethodInvocation@@server.name() @TO@ SimpleName@@MethodName:append:["server", server.name()] @AT@ 4826 @LENGTH@ 13
------------------INS SimpleName@@Name:server @TO@ MethodInvocation@@server.name() @AT@ 4826 @LENGTH@ 6
------------------INS SimpleName@@MethodName:name:[] @TO@ MethodInvocation@@server.name() @AT@ 4833 @LENGTH@ 6
---INS VariableDeclarationStatement@@ModelNode node=new ModelNode(); @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4851 @LENGTH@ 33
------INS SimpleType@@ModelNode @TO@ VariableDeclarationStatement@@ModelNode node=new ModelNode(); @AT@ 4851 @LENGTH@ 9
------INS VariableDeclarationFragment@@node=new ModelNode() @TO@ VariableDeclarationStatement@@ModelNode node=new ModelNode(); @AT@ 4861 @LENGTH@ 22
---------INS SimpleName@@node @TO@ VariableDeclarationFragment@@node=new ModelNode() @AT@ 4861 @LENGTH@ 4
---------INS ClassInstanceCreation@@ModelNode[] @TO@ VariableDeclarationFragment@@node=new ModelNode() @AT@ 4868 @LENGTH@ 15
------------INS New@@new @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4868 @LENGTH@ 3
------------INS SimpleType@@ModelNode @TO@ ClassInstanceCreation@@ModelNode[] @AT@ 4872 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 4893 @LENGTH@ 102
------INS MethodInvocation@@node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @TO@ ExpressionStatement@@MethodInvocation:node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @AT@ 4893 @LENGTH@ 101
---------INS MethodInvocation@@MethodName:get:[OP_ADDR] @TO@ MethodInvocation@@node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @AT@ 4893 @LENGTH@ 17
------------INS SimpleName@@OP_ADDR @TO@ MethodInvocation@@MethodName:get:[OP_ADDR] @AT@ 4902 @LENGTH@ 7
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @AT@ 4893 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()] @TO@ MethodInvocation@@node.get(OP_ADDR).set(serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()) @AT@ 4911 @LENGTH@ 83
------------INS MethodInvocation@@serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode() @TO@ SimpleName@@MethodName:set:[serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode()] @AT@ 4915 @LENGTH@ 78
---------------INS MethodInvocation@@MethodName:append:["pooled-connection-factory", "activemq-ra"] @TO@ MethodInvocation@@serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode() @AT@ 4915 @LENGTH@ 64
------------------INS StringLiteral@@"pooled-connection-factory" @TO@ MethodInvocation@@MethodName:append:["pooled-connection-factory", "activemq-ra"] @AT@ 4936 @LENGTH@ 27
------------------INS StringLiteral@@"activemq-ra" @TO@ MethodInvocation@@MethodName:append:["pooled-connection-factory", "activemq-ra"] @AT@ 4965 @LENGTH@ 13
---------------INS SimpleName@@Name:serverAddress @TO@ MethodInvocation@@serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode() @AT@ 4915 @LENGTH@ 13
---------------INS SimpleName@@MethodName:toModelNode:[] @TO@ MethodInvocation@@serverAddress.append("pooled-connection-factory","activemq-ra").toModelNode() @AT@ 4980 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:node.get(OP).set(ADD) @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5004 @LENGTH@ 22
------INS MethodInvocation@@node.get(OP).set(ADD) @TO@ ExpressionStatement@@MethodInvocation:node.get(OP).set(ADD) @AT@ 5004 @LENGTH@ 21
---------INS MethodInvocation@@MethodName:get:[OP] @TO@ MethodInvocation@@node.get(OP).set(ADD) @AT@ 5004 @LENGTH@ 12
------------INS SimpleName@@OP @TO@ MethodInvocation@@MethodName:get:[OP] @AT@ 5013 @LENGTH@ 2
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get(OP).set(ADD) @AT@ 5004 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:[ADD] @TO@ MethodInvocation@@node.get(OP).set(ADD) @AT@ 5017 @LENGTH@ 8
------------INS SimpleName@@ADD @TO@ SimpleName@@MethodName:set:[ADD] @AT@ 5021 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:node.get("transaction").set("xa") @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5035 @LENGTH@ 34
------INS MethodInvocation@@node.get("transaction").set("xa") @TO@ ExpressionStatement@@MethodInvocation:node.get("transaction").set("xa") @AT@ 5035 @LENGTH@ 33
---------INS MethodInvocation@@MethodName:get:["transaction"] @TO@ MethodInvocation@@node.get("transaction").set("xa") @AT@ 5035 @LENGTH@ 23
------------INS StringLiteral@@"transaction" @TO@ MethodInvocation@@MethodName:get:["transaction"] @AT@ 5044 @LENGTH@ 13
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get("transaction").set("xa") @AT@ 5035 @LENGTH@ 4
---------INS SimpleName@@MethodName:set:["xa"] @TO@ MethodInvocation@@node.get("transaction").set("xa") @AT@ 5059 @LENGTH@ 9
------------INS StringLiteral@@"xa" @TO@ SimpleName@@MethodName:set:["xa"] @AT@ 5063 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:node.get("connectors").add("in-vm") @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5078 @LENGTH@ 36
------INS MethodInvocation@@node.get("connectors").add("in-vm") @TO@ ExpressionStatement@@MethodInvocation:node.get("connectors").add("in-vm") @AT@ 5078 @LENGTH@ 35
---------INS MethodInvocation@@MethodName:get:["connectors"] @TO@ MethodInvocation@@node.get("connectors").add("in-vm") @AT@ 5078 @LENGTH@ 22
------------INS StringLiteral@@"connectors" @TO@ MethodInvocation@@MethodName:get:["connectors"] @AT@ 5087 @LENGTH@ 12
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get("connectors").add("in-vm") @AT@ 5078 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:["in-vm"] @TO@ MethodInvocation@@node.get("connectors").add("in-vm") @AT@ 5101 @LENGTH@ 12
------------INS StringLiteral@@"in-vm" @TO@ SimpleName@@MethodName:add:["in-vm"] @AT@ 5105 @LENGTH@ 7
---INS ExpressionStatement@@MethodInvocation:node.get("entries").add("java:/JmsXA") @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5123 @LENGTH@ 39
------INS MethodInvocation@@node.get("entries").add("java:/JmsXA") @TO@ ExpressionStatement@@MethodInvocation:node.get("entries").add("java:/JmsXA") @AT@ 5123 @LENGTH@ 38
---------INS MethodInvocation@@MethodName:get:["entries"] @TO@ MethodInvocation@@node.get("entries").add("java:/JmsXA") @AT@ 5123 @LENGTH@ 19
------------INS StringLiteral@@"entries" @TO@ MethodInvocation@@MethodName:get:["entries"] @AT@ 5132 @LENGTH@ 9
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get("entries").add("java:/JmsXA") @AT@ 5123 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:["java:/JmsXA"] @TO@ MethodInvocation@@node.get("entries").add("java:/JmsXA") @AT@ 5143 @LENGTH@ 18
------------INS StringLiteral@@"java:/JmsXA" @TO@ SimpleName@@MethodName:add:["java:/JmsXA"] @AT@ 5147 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5171 @LENGTH@ 66
------INS MethodInvocation@@node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @TO@ ExpressionStatement@@MethodInvocation:node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @AT@ 5171 @LENGTH@ 65
---------INS MethodInvocation@@MethodName:get:["entries"] @TO@ MethodInvocation@@node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @AT@ 5171 @LENGTH@ 19
------------INS StringLiteral@@"entries" @TO@ MethodInvocation@@MethodName:get:["entries"] @AT@ 5180 @LENGTH@ 9
---------INS SimpleName@@Name:node @TO@ MethodInvocation@@node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @AT@ 5171 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:["java:jboss/DefaultJMSConnectionFactory"] @TO@ MethodInvocation@@node.get("entries").add("java:jboss/DefaultJMSConnectionFactory") @AT@ 5191 @LENGTH@ 45
------------INS StringLiteral@@"java:jboss/DefaultJMSConnectionFactory" @TO@ SimpleName@@MethodName:add:["java:jboss/DefaultJMSConnectionFactory"] @AT@ 5195 @LENGTH@ 40
---INS ExpressionStatement@@MethodInvocation:list.add(node) @TO@ MethodDeclaration@@protected, void, MethodName:addConnectionFactory, MessagingServer server, List<ModelNode> list,  @AT@ 5247 @LENGTH@ 17
------INS MethodInvocation@@list.add(node) @TO@ ExpressionStatement@@MethodInvocation:list.add(node) @AT@ 5247 @LENGTH@ 16
---------INS SimpleName@@Name:list @TO@ MethodInvocation@@list.add(node) @AT@ 5247 @LENGTH@ 4
---------INS SimpleName@@MethodName:add:[node] @TO@ MethodInvocation@@list.add(node) @AT@ 5252 @LENGTH@ 11
------------INS SimpleName@@node @TO@ SimpleName@@MethodName:add:[node] @AT@ 5257 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:testComponent("rnc") @TO@ MethodInvocation:testComponent(COMPONENT) @AT@ 1236 @LENGTH@ 21
---UPD MethodInvocation@@testComponent("rnc") @TO@ testComponent(COMPONENT) @AT@ 1236 @LENGTH@ 20
------UPD SimpleName@@MethodName:testComponent:["rnc"] @TO@ MethodName:testComponent:[COMPONENT] @AT@ 1236 @LENGTH@ 20
---------INS SimpleName@@COMPONENT @TO@ SimpleName@@MethodName:testComponent:["rnc"] @AT@ 1250 @LENGTH@ 9
---------DEL StringLiteral@@"rnc" @AT@ 1250 @LENGTH@ 5


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3716 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3716 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3727 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3736 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3706 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 3736 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3748 @LENGTH@ 15


UPD VariableDeclarationStatement@@String out=template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class); @TO@ String out=template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class); @AT@ 1712 @LENGTH@ 105
---UPD VariableDeclarationFragment@@out=template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class) @TO@ out=template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1719 @LENGTH@ 97
------UPD MethodInvocation@@template.requestBody("http://localhost:{{port}}/foo?beer=yes","Hello World",String.class) @TO@ template.requestBodyAndHeader("http://localhost:{{port}}/foo?beer=yes","Hello World",Exchange.HTTP_METHOD,"POST",String.class) @AT@ 1725 @LENGTH@ 91
---------UPD SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @TO@ MethodName:requestBodyAndHeader:["http://localhost:{{port}}/foo?beer=yes", "Hello World", Exchange.HTTP_METHOD, "POST", String.class] @AT@ 1734 @LENGTH@ 82
------------INS QualifiedName@@Exchange.HTTP_METHOD @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @AT@ 1812 @LENGTH@ 20
---------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1812 @LENGTH@ 8
---------------INS SimpleName@@HTTP_METHOD @TO@ QualifiedName@@Exchange.HTTP_METHOD @AT@ 1821 @LENGTH@ 11
------------INS StringLiteral@@"POST" @TO@ SimpleName@@MethodName:requestBody:["http://localhost:{{port}}/foo?beer=yes", "Hello World", String.class] @AT@ 1834 @LENGTH@ 6


MOV FieldDeclaration@@private, static, final, String, [GENERATED_CORRELATION_ID_PREFIX="Camel-"] @TO@ TypeDeclaration@@[public]RabbitMQProducer, DefaultAsyncProducer @AT@ 2069 @LENGTH@ 71


UPD ExpressionStatement@@MethodInvocation:from("direct:getAndAdd").setHeader(HazelcastConstants.OPERATION,constant(HazelcastConstants.GET_AND_ADD)).to(String.format("hazelcast:%sfoo",HazelcastConstants.ATOMICNUMBER_PREFIX)) @TO@ MethodInvocation:from("direct:getAndAdd").setHeader(HazelcastConstants.OPERATION,constant(HazelcastConstants.GET_AND_ADD_OPERATION)).to(String.format("hazelcast:%sfoo",HazelcastConstants.ATOMICNUMBER_PREFIX)) @AT@ 6321 @LENGTH@ 209
---UPD MethodInvocation@@from("direct:getAndAdd").setHeader(HazelcastConstants.OPERATION,constant(HazelcastConstants.GET_AND_ADD)).to(String.format("hazelcast:%sfoo",HazelcastConstants.ATOMICNUMBER_PREFIX)) @TO@ from("direct:getAndAdd").setHeader(HazelcastConstants.OPERATION,constant(HazelcastConstants.GET_AND_ADD_OPERATION)).to(String.format("hazelcast:%sfoo",HazelcastConstants.ATOMICNUMBER_PREFIX)) @AT@ 6321 @LENGTH@ 208
------UPD MethodInvocation@@MethodName:setHeader:[HazelcastConstants.OPERATION, constant(HazelcastConstants.GET_AND_ADD)] @TO@ MethodName:setHeader:[HazelcastConstants.OPERATION, constant(HazelcastConstants.GET_AND_ADD_OPERATION)] @AT@ 6321 @LENGTH@ 106
---------UPD MethodInvocation@@constant(HazelcastConstants.GET_AND_ADD) @TO@ constant(HazelcastConstants.GET_AND_ADD_OPERATION) @AT@ 6386 @LENGTH@ 40
------------UPD SimpleName@@MethodName:constant:[HazelcastConstants.GET_AND_ADD] @TO@ MethodName:constant:[HazelcastConstants.GET_AND_ADD_OPERATION] @AT@ 6386 @LENGTH@ 40
---------------UPD QualifiedName@@HazelcastConstants.GET_AND_ADD @TO@ HazelcastConstants.GET_AND_ADD_OPERATION @AT@ 6395 @LENGTH@ 30
------------------UPD SimpleName@@GET_AND_ADD @TO@ GET_AND_ADD_OPERATION @AT@ 6414 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\"")) @AT@ 1890 @LENGTH@ 126
---UPD MethodInvocation@@assertTrue(json.contains("\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\"")) @TO@ assertTrue(json.contains("\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\"")) @AT@ 1890 @LENGTH@ 125
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\"")] @TO@ MethodName:assertTrue:[json.contains("\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\"")] @AT@ 1890 @LENGTH@ 125
---------UPD MethodInvocation@@json.contains("\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\"") @TO@ json.contains("\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\"") @AT@ 1901 @LENGTH@ 113
------------UPD SimpleName@@MethodName:contains:["\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\""] @TO@ MethodName:contains:["\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\""] @AT@ 1906 @LENGTH@ 108
---------------UPD StringLiteral@@"\"kind\": \"parameter\", \"group\": \"consuner\", \"label\": \"consuner\", \"type\": \"integer\"" @TO@ "\"kind\": \"parameter\", \"group\": \"consumer\", \"label\": \"consumer\", \"type\": \"integer\"" @AT@ 1915 @LENGTH@ 98


UPD ReturnStatement@@MethodInvocation:camelContext.getManagementNameStrategy().getName() @TO@ MethodInvocation:camelContext.getName() @AT@ 1270 @LENGTH@ 58
---UPD MethodInvocation@@camelContext.getManagementNameStrategy().getName() @TO@ camelContext.getName() @AT@ 1277 @LENGTH@ 50
------DEL MethodInvocation@@MethodName:getManagementNameStrategy:[] @AT@ 1277 @LENGTH@ 40


UPD Block@@WhileBody:{  String token=tokens[range];  String key2=options2.get(range);  sb.append(token);  sb.append(key2);  hasQuestionmark|=token.contains("?") || key2.contains("?");  range++;} @TO@ WhileBody:{  String token=null;  if (tokens.length > range) {    token=tokens[range];  }  String key2=options2.get(range);  sb.append(token);  sb.append(key2);  hasQuestionmark|=key2.contains("?") || (token != null && token.contains("?"));  range++;} @AT@ 26247 @LENGTH@ 254
---DEL VariableDeclarationStatement@@String token=tokens[range]; @AT@ 26261 @LENGTH@ 29
------DEL VariableDeclarationFragment@@token=tokens[range] @AT@ 26268 @LENGTH@ 21
---------DEL ArrayAccess@@tokens[range] @AT@ 26276 @LENGTH@ 13
---INS VariableDeclarationStatement@@String token=null; @TO@ Block@@WhileBody:{  String token=tokens[range];  String key2=options2.get(range);  sb.append(token);  sb.append(key2);  hasQuestionmark|=token.contains("?") || key2.contains("?");  range++;} @AT@ 26378 @LENGTH@ 20
------MOV SimpleType@@String @TO@ VariableDeclarationStatement@@String token=null; @AT@ 26261 @LENGTH@ 6
------INS VariableDeclarationFragment@@token=null @TO@ VariableDeclarationStatement@@String token=null; @AT@ 26385 @LENGTH@ 12
---------MOV SimpleName@@token @TO@ VariableDeclarationFragment@@token=null @AT@ 26268 @LENGTH@ 5
---------INS NullLiteral@@null @TO@ VariableDeclarationFragment@@token=null @AT@ 26393 @LENGTH@ 4
---UPD ExpressionStatement@@Assignment:hasQuestionmark|=token.contains("?") || key2.contains("?") @TO@ Assignment:hasQuestionmark|=key2.contains("?") || (token != null && token.contains("?")) @AT@ 26409 @LENGTH@ 61
------UPD Assignment@@hasQuestionmark|=token.contains("?") || key2.contains("?") @TO@ hasQuestionmark|=key2.contains("?") || (token != null && token.contains("?")) @AT@ 26409 @LENGTH@ 60
---------UPD InfixExpression@@token.contains("?") || key2.contains("?") @TO@ key2.contains("?") || (token != null && token.contains("?")) @AT@ 26428 @LENGTH@ 41
------------MOV Operator@@|| @TO@ InfixExpression@@token.contains("?") || key2.contains("?") @AT@ 26447 @LENGTH@ 2
------------INS ParenthesizedExpression@@(token != null && token.contains("?")) @TO@ InfixExpression@@token.contains("?") || key2.contains("?") @AT@ 26652 @LENGTH@ 38
---------------INS InfixExpression@@token != null && token.contains("?") @TO@ ParenthesizedExpression@@(token != null && token.contains("?")) @AT@ 26653 @LENGTH@ 36
------------------MOV MethodInvocation@@token.contains("?") @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 26428 @LENGTH@ 19
------------------INS InfixExpression@@token != null @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 26653 @LENGTH@ 13
---------------------INS SimpleName@@token @TO@ InfixExpression@@token != null @AT@ 26653 @LENGTH@ 5
---------------------INS Operator@@!= @TO@ InfixExpression@@token != null @AT@ 26658 @LENGTH@ 2
---------------------INS NullLiteral@@null @TO@ InfixExpression@@token != null @AT@ 26662 @LENGTH@ 4
------------------INS Operator@@&& @TO@ InfixExpression@@token != null && token.contains("?") @AT@ 26666 @LENGTH@ 2
---INS IfStatement@@if (tokens.length > range) {  token=tokens[range];} @TO@ Block@@WhileBody:{  String token=tokens[range];  String key2=options2.get(range);  sb.append(token);  sb.append(key2);  hasQuestionmark|=token.contains("?") || key2.contains("?");  range++;} @AT@ 26411 @LENGTH@ 81
------INS InfixExpression@@tokens.length > range @TO@ IfStatement@@if (tokens.length > range) {  token=tokens[range];} @AT@ 26415 @LENGTH@ 21
---------INS QualifiedName@@tokens.length @TO@ InfixExpression@@tokens.length > range @AT@ 26415 @LENGTH@ 13
------------INS SimpleName@@tokens @TO@ QualifiedName@@tokens.length @AT@ 26415 @LENGTH@ 6
------------INS SimpleName@@length @TO@ QualifiedName@@tokens.length @AT@ 26422 @LENGTH@ 6
---------INS Operator@@> @TO@ InfixExpression@@tokens.length > range @AT@ 26428 @LENGTH@ 1
---------INS SimpleName@@range @TO@ InfixExpression@@tokens.length > range @AT@ 26431 @LENGTH@ 5
------INS Block@@ThenBody:{  token=tokens[range];} @TO@ IfStatement@@if (tokens.length > range) {  token=tokens[range];} @AT@ 26438 @LENGTH@ 54
---------INS ExpressionStatement@@Assignment:token=tokens[range] @TO@ Block@@ThenBody:{  token=tokens[range];} @AT@ 26456 @LENGTH@ 22
------------INS Assignment@@token=tokens[range] @TO@ ExpressionStatement@@Assignment:token=tokens[range] @AT@ 26456 @LENGTH@ 21
---------------INS SimpleName@@token @TO@ Assignment@@token=tokens[range] @AT@ 26456 @LENGTH@ 5
---------------INS Operator@@= @TO@ Assignment@@token=tokens[range] @AT@ 26461 @LENGTH@ 1
---------------INS ArrayAccess@@tokens[range] @TO@ Assignment@@token=tokens[range] @AT@ 26464 @LENGTH@ 13
------------------MOV SimpleName@@tokens @TO@ ArrayAccess@@tokens[range] @AT@ 26276 @LENGTH@ 6
------------------MOV SimpleName@@range @TO@ ArrayAccess@@tokens[range] @AT@ 26283 @LENGTH@ 5


UPD VariableDeclarationStatement@@final Class<?> beanType=bean.getClass(); @TO@ Class<?> beanType=ClassUtils.getUserClass(bean); @AT@ 4518 @LENGTH@ 42
---DEL Modifier@@final @AT@ 4518 @LENGTH@ 5
---UPD VariableDeclarationFragment@@beanType=bean.getClass() @TO@ beanType=ClassUtils.getUserClass(bean) @AT@ 4533 @LENGTH@ 26
------UPD MethodInvocation@@bean.getClass() @TO@ ClassUtils.getUserClass(bean) @AT@ 4544 @LENGTH@ 15
---------UPD SimpleName@@Name:bean @TO@ Name:ClassUtils @AT@ 4544 @LENGTH@ 4
---------UPD SimpleName@@MethodName:getClass:[] @TO@ MethodName:getUserClass:[bean] @AT@ 4549 @LENGTH@ 10
------------INS SimpleName@@bean @TO@ SimpleName@@MethodName:getClass:[] @AT@ 4565 @LENGTH@ 4


UPD MethodDeclaration@@protected, Container, MethodName:newContainer, String logLevel, Exception,  @TO@ protected, Container, MethodName:newContainer, boolean trace, Exception,  @AT@ 413 @LENGTH@ 373
---UPD SingleVariableDeclaration@@String logLevel @TO@ boolean trace @AT@ 446 @LENGTH@ 15
------INS PrimitiveType@@boolean @TO@ SingleVariableDeclaration@@String logLevel @AT@ 445 @LENGTH@ 7
------DEL SimpleType@@String @AT@ 446 @LENGTH@ 6
------UPD SimpleName@@logLevel @TO@ trace @AT@ 453 @LENGTH@ 8
---UPD ReturnStatement@@MethodInvocation:new Container().fraction(new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(logLevel,"PATTERN").rootLogger("CONSOLE",logLevel)) @TO@ MethodInvocation:new Container().fraction((trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction())) @AT@ 491 @LENGTH@ 289
------UPD MethodInvocation@@new Container().fraction(new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(logLevel,"PATTERN").rootLogger("CONSOLE",logLevel)) @TO@ new Container().fraction((trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction())) @AT@ 498 @LENGTH@ 281
---------UPD SimpleName@@MethodName:fraction:[new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(logLevel,"PATTERN").rootLogger("CONSOLE",logLevel)] @TO@ MethodName:fraction:[(trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction())] @AT@ 531 @LENGTH@ 248
------------INS ParenthesizedExpression@@(trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction()) @TO@ SimpleName@@MethodName:fraction:[new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(logLevel,"PATTERN").rootLogger("CONSOLE",logLevel)] @AT@ 536 @LENGTH@ 151
---------------INS ConditionalExpression@@trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction() @TO@ ParenthesizedExpression@@(trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction()) @AT@ 537 @LENGTH@ 149
------------------INS SimpleName@@trace @TO@ ConditionalExpression@@trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction() @AT@ 537 @LENGTH@ 5
------------------INS MethodInvocation@@LoggingFraction.createTraceLoggingFraction() @TO@ ConditionalExpression@@trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction() @AT@ 569 @LENGTH@ 44
---------------------INS SimpleName@@Name:LoggingFraction @TO@ MethodInvocation@@LoggingFraction.createTraceLoggingFraction() @AT@ 569 @LENGTH@ 15
---------------------INS SimpleName@@MethodName:createTraceLoggingFraction:[] @TO@ MethodInvocation@@LoggingFraction.createTraceLoggingFraction() @AT@ 585 @LENGTH@ 28
------------------INS MethodInvocation@@LoggingFraction.createDefaultLoggingFraction() @TO@ ConditionalExpression@@trace ? LoggingFraction.createTraceLoggingFraction() : LoggingFraction.createDefaultLoggingFraction() @AT@ 640 @LENGTH@ 46
---------------------MOV SimpleName@@logLevel @TO@ MethodInvocation@@LoggingFraction.createDefaultLoggingFraction() @AT@ 701 @LENGTH@ 8
---------------------MOV SimpleName@@MethodName:rootLogger:["CONSOLE", logLevel] @TO@ MethodInvocation@@LoggingFraction.createDefaultLoggingFraction() @AT@ 747 @LENGTH@ 31
------------DEL MethodInvocation@@new LoggingFraction().formatter("PATTERN","%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n").consoleHandler(logLevel,"PATTERN").rootLogger("CONSOLE",logLevel) @AT@ 540 @LENGTH@ 238
---------------DEL MethodInvocation@@MethodName:consoleHandler:[logLevel, "PATTERN"] @AT@ 540 @LENGTH@ 181
------------------DEL StringLiteral@@"PATTERN" @AT@ 711 @LENGTH@ 9
---------------DEL MethodInvocation@@MethodName:formatter:["PATTERN", "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"] @AT@ 540 @LENGTH@ 120
------------------DEL StringLiteral@@"PATTERN" @AT@ 597 @LENGTH@ 9
------------------DEL StringLiteral@@"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n" @AT@ 608 @LENGTH@ 51
---------------DEL ClassInstanceCreation@@LoggingFraction[] @AT@ 540 @LENGTH@ 21
------------------DEL New@@new @AT@ 540 @LENGTH@ 3
------------------DEL SimpleType@@LoggingFraction @AT@ 544 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1481 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1490 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1490 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1518 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1521 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1533 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1490 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"label\": \"language\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"label\": \"language,core,java\"")) @AT@ 2489 @LENGTH@ 53
---UPD MethodInvocation@@assertTrue(json.contains("\"label\": \"language\"")) @TO@ assertTrue(json.contains("\"label\": \"language,core,java\"")) @AT@ 2489 @LENGTH@ 52
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"label\": \"language\"")] @TO@ MethodName:assertTrue:[json.contains("\"label\": \"language,core,java\"")] @AT@ 2489 @LENGTH@ 52
---------UPD MethodInvocation@@json.contains("\"label\": \"language\"") @TO@ json.contains("\"label\": \"language,core,java\"") @AT@ 2500 @LENGTH@ 40
------------UPD SimpleName@@MethodName:contains:["\"label\": \"language\""] @TO@ MethodName:contains:["\"label\": \"language,core,java\""] @AT@ 2505 @LENGTH@ 35
---------------UPD StringLiteral@@"\"label\": \"language\"" @TO@ "\"label\": \"language,core,java\"" @AT@ 2514 @LENGTH@ 25


UPD VariableDeclarationStatement@@final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar"); @TO@ final JavaArchive ejbJar=ShrinkWrap.create(JavaArchive.class,"MDB20TopicTestCase.jar"); @AT@ 3447 @LENGTH@ 75
---UPD VariableDeclarationFragment@@ejbJar=ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ejbJar=ShrinkWrap.create(JavaArchive.class,"MDB20TopicTestCase.jar") @AT@ 3465 @LENGTH@ 56
------UPD MethodInvocation@@ShrinkWrap.create(JavaArchive.class,"mdb.jar") @TO@ ShrinkWrap.create(JavaArchive.class,"MDB20TopicTestCase.jar") @AT@ 3474 @LENGTH@ 47
---------UPD SimpleName@@MethodName:create:[JavaArchive.class, "mdb.jar"] @TO@ MethodName:create:[JavaArchive.class, "MDB20TopicTestCase.jar"] @AT@ 3485 @LENGTH@ 36
------------UPD StringLiteral@@"mdb.jar" @TO@ "MDB20TopicTestCase.jar" @AT@ 3511 @LENGTH@ 9


UPD ExpressionStatement@@MethodInvocation:assertEquals(300,rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()) @TO@ MethodInvocation:assertEquals("300",rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()) @AT@ 4063 @LENGTH@ 77
---UPD MethodInvocation@@assertEquals(300,rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()) @TO@ assertEquals("300",rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()) @AT@ 4063 @LENGTH@ 76
------UPD SimpleName@@MethodName:assertEquals:[300, rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()] @TO@ MethodName:assertEquals:["300", rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()] @AT@ 4063 @LENGTH@ 76
---------INS StringLiteral@@"300" @TO@ SimpleName@@MethodName:assertEquals:[300, rest.getVerbs().get(0).getResponseMsgs().get(0).getCode()] @AT@ 4076 @LENGTH@ 5
---------DEL NumberLiteral@@300 @AT@ 4076 @LENGTH@ 3


UPD VariableDeclarationStatement@@HttpClient client2=HttpClients.createDefault(); @TO@ DefaultHttpClient client2=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 2746 @LENGTH@ 49
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 2746 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client2=HttpClients.createDefault() @TO@ client2=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2757 @LENGTH@ 37
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 2767 @LENGTH@ 27
---------DEL SimpleName@@Name:HttpClients @AT@ 2767 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 2779 @LENGTH@ 15
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 2787 @LENGTH@ 43


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.failedToDestroy(e,"jms topic",name) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.failedToDestroy(e,"jms topic",name) @AT@ 3825 @LENGTH@ 55
---UPD MethodInvocation@@MESSAGING_LOGGER.failedToDestroy(e,"jms topic",name) @TO@ MessagingLogger.ROOT_LOGGER.failedToDestroy(e,"jms topic",name) @AT@ 3825 @LENGTH@ 54
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.failedToDestroy(e,"jms topic",name) @AT@ 3727 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 3825 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testWithMockUser,  @TO@ TypeDeclaration@@[static]FakeTest,  @AT@ 3025 @LENGTH@ 37
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testWithMockUser,  @AT@ 3025 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testWithMockUser,  @AT@ 3032 @LENGTH@ 4
---INS SimpleName@@MethodName:testWithMockUser @TO@ MethodDeclaration@@public, void, MethodName:testWithMockUser,  @AT@ 3037 @LENGTH@ 16


INS MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @TO@ TypeDeclaration@@[public]NettyHttpProducerQueryParamTest, BaseNettyTest @AT@ 2990 @LENGTH@ 718
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 2990 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 2997 @LENGTH@ 4
---INS SimpleName@@MethodName:testQueryParametersInUriWithDynamicPath @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3002 @LENGTH@ 39
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3051 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3167 @LENGTH@ 280
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @AT@ 3167 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
); @AT@ 3176 @LENGTH@ 270
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3176 @LENGTH@ 8
---------INS MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3187 @LENGTH@ 259
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3187 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @TO@ MethodInvocation@@template.request((url + "&quote=Camel%20rocks").replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
) @AT@ 3196 @LENGTH@ 250
---------------INS MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @TO@ SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @AT@ 3204 @LENGTH@ 53
------------------INS ParenthesizedExpression@@(url + "&quote=Camel%20rocks") @TO@ MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @AT@ 3204 @LENGTH@ 30
---------------------INS InfixExpression@@url + "&quote=Camel%20rocks" @TO@ ParenthesizedExpression@@(url + "&quote=Camel%20rocks") @AT@ 3205 @LENGTH@ 28
------------------------INS SimpleName@@url @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3205 @LENGTH@ 3
------------------------INS Operator@@+ @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3208 @LENGTH@ 1
------------------------INS StringLiteral@@"&quote=Camel%20rocks" @TO@ InfixExpression@@url + "&quote=Camel%20rocks" @AT@ 3211 @LENGTH@ 22
------------------INS SimpleName@@MethodName:replace:["/cheese", ""] @TO@ MethodInvocation@@(url + "&quote=Camel%20rocks").replace("/cheese","") @AT@ 3235 @LENGTH@ 22
---------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 3243 @LENGTH@ 9
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 3254 @LENGTH@ 2
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:[(url + "&quote=Camel%20rocks").replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
  }
}
] @AT@ 3259 @LENGTH@ 186
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 3259 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 3263 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 3275 @LENGTH@ 170
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 3289 @LENGTH@ 146
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3289 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3296 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3301 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3309 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3309 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 3318 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3335 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 3363 @LENGTH@ 58
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3363 @LENGTH@ 57
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3363 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3363 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 3380 @LENGTH@ 40
---------------------------------INS QualifiedName@@Exchange.HTTP_PATH @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 3390 @LENGTH@ 18
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 3390 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_PATH @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 3399 @LENGTH@ 9
---------------------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 3410 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3456 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @AT@ 3456 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[exchange] @TO@ MethodInvocation@@assertNotNull(exchange) @AT@ 3456 @LENGTH@ 23
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertNotNull:[exchange] @AT@ 3470 @LENGTH@ 8
---INS VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3490 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 3490 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 3497 @LENGTH@ 46
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 3497 @LENGTH@ 4
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 3504 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3504 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3504 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 3522 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 3530 @LENGTH@ 12
---INS VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3553 @LENGTH@ 51
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 3553 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 3553 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 3557 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 3560 @LENGTH@ 1
------INS VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 3563 @LENGTH@ 40
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 3563 @LENGTH@ 7
---------INS MethodInvocation@@exchange.getOut().getHeaders() @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 3573 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3573 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3573 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 3591 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3614 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("Bye World",body) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @AT@ 3614 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["Bye World", body] @TO@ MethodInvocation@@assertEquals("Bye World",body) @AT@ 3614 @LENGTH@ 31
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 3627 @LENGTH@ 11
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 3640 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersInUriWithDynamicPath, Exception,  @AT@ 3655 @LENGTH@ 47
------INS MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @AT@ 3655 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @TO@ MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @AT@ 3655 @LENGTH@ 46
------------INS StringLiteral@@"Carlsberg" @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 3668 @LENGTH@ 11
------------INS MethodInvocation@@headers.get("beer") @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 3681 @LENGTH@ 19
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("beer") @AT@ 3681 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["beer"] @TO@ MethodInvocation@@headers.get("beer") @AT@ 3689 @LENGTH@ 11
------------------INS StringLiteral@@"beer" @TO@ SimpleName@@MethodName:get:["beer"] @AT@ 3693 @LENGTH@ 6


UPD ReturnStatement@@InfixExpression:current < (startTime + duration) @TO@ InfixExpression:current > (startTime + duration) @AT@ 7332 @LENGTH@ 40
---UPD InfixExpression@@current < (startTime + duration) @TO@ current > (startTime + duration) @AT@ 7339 @LENGTH@ 32
------UPD Operator@@< @TO@ > @AT@ 7346 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:LOG.info("Cannot determine localhost name. Using default: " + DEFAULT_REGISTRY_PORT,uhe) @TO@ MethodInvocation:LOG.info("Cannot determine localhost name or address. Using default: " + DEFAULT_REGISTRY_PORT,uhe) @AT@ 19509 @LENGTH@ 90
---UPD MethodInvocation@@LOG.info("Cannot determine localhost name. Using default: " + DEFAULT_REGISTRY_PORT,uhe) @TO@ LOG.info("Cannot determine localhost name or address. Using default: " + DEFAULT_REGISTRY_PORT,uhe) @AT@ 19509 @LENGTH@ 89
------UPD SimpleName@@MethodName:info:["Cannot determine localhost name. Using default: " + DEFAULT_REGISTRY_PORT, uhe] @TO@ MethodName:info:["Cannot determine localhost name or address. Using default: " + DEFAULT_REGISTRY_PORT, uhe] @AT@ 19513 @LENGTH@ 85
---------UPD InfixExpression@@"Cannot determine localhost name. Using default: " + DEFAULT_REGISTRY_PORT @TO@ "Cannot determine localhost name or address. Using default: " + DEFAULT_REGISTRY_PORT @AT@ 19518 @LENGTH@ 74
------------UPD StringLiteral@@"Cannot determine localhost name. Using default: " @TO@ "Cannot determine localhost name or address. Using default: " @AT@ 19518 @LENGTH@ 50


UPD FieldDeclaration@@static, final, RuntimeCapability<Void>, [IO_POOL_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.io.buffer-pool",true,Pool.class).build()] @TO@ static, final, RuntimeCapability<Void>, [IO_POOL_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.io.buffer-pool",true,Pool.class).build()] @AT@ 2120 @LENGTH@ 173
---UPD VariableDeclarationFragment@@IO_POOL_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.extension.io.buffer-pool",true,Pool.class).build() @TO@ IO_POOL_RUNTIME_CAPABILITY=RuntimeCapability.Builder.of("org.wildfly.io.buffer-pool",true,Pool.class).build() @AT@ 2157 @LENGTH@ 135
------UPD MethodInvocation@@RuntimeCapability.Builder.of("org.wildfly.extension.io.buffer-pool",true,Pool.class).build() @TO@ RuntimeCapability.Builder.of("org.wildfly.io.buffer-pool",true,Pool.class).build() @AT@ 2198 @LENGTH@ 94
---------UPD MethodInvocation@@MethodName:of:["org.wildfly.extension.io.buffer-pool", true, Pool.class] @TO@ MethodName:of:["org.wildfly.io.buffer-pool", true, Pool.class] @AT@ 2198 @LENGTH@ 86
------------UPD StringLiteral@@"org.wildfly.extension.io.buffer-pool" @TO@ "org.wildfly.io.buffer-pool" @AT@ 2227 @LENGTH@ 38


UPD FieldDeclaration@@static, final, String, [IO_WORKER_RUNTIME_CAPABILITY_NAME="org.wildfly.extension.io.worker"] @TO@ static, final, String, [IO_WORKER_RUNTIME_CAPABILITY_NAME="org.wildfly.io.worker"] @AT@ 1687 @LENGTH@ 90
---UPD VariableDeclarationFragment@@IO_WORKER_RUNTIME_CAPABILITY_NAME="org.wildfly.extension.io.worker" @TO@ IO_WORKER_RUNTIME_CAPABILITY_NAME="org.wildfly.io.worker" @AT@ 1707 @LENGTH@ 69
------UPD StringLiteral@@"org.wildfly.extension.io.worker" @TO@ "org.wildfly.io.worker" @AT@ 1743 @LENGTH@ 33


UPD ExpressionStatement@@Assignment:mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader()) @TO@ Assignment:mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),clusterName,nodes,config,fs,this.getClass().getClassLoader()) @AT@ 4340 @LENGTH@ 132
---UPD Assignment@@mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader()) @TO@ mrClusterObject=MiniMRClusterCompat.instantiateCluster(this.getClass(),clusterName,nodes,config,fs,this.getClass().getClassLoader()) @AT@ 4340 @LENGTH@ 131
------UPD MethodInvocation@@MiniMRClusterCompat.instantiateCluster(this.getClass(),nodes,config,fs,this.getClass().getClassLoader()) @TO@ MiniMRClusterCompat.instantiateCluster(this.getClass(),clusterName,nodes,config,fs,this.getClass().getClassLoader()) @AT@ 4358 @LENGTH@ 113
---------UPD SimpleName@@MethodName:instantiateCluster:[this.getClass(), nodes, config, fs, this.getClass().getClassLoader()] @TO@ MethodName:instantiateCluster:[this.getClass(), clusterName, nodes, config, fs, this.getClass().getClassLoader()] @AT@ 4378 @LENGTH@ 93
------------INS SimpleName@@clusterName @TO@ SimpleName@@MethodName:instantiateCluster:[this.getClass(), nodes, config, fs, this.getClass().getClassLoader()] @AT@ 4419 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:log.error("error closing",e) @TO@ MethodInvocation:log.error("Error closing",e) @AT@ 3556 @LENGTH@ 30
---UPD MethodInvocation@@log.error("error closing",e) @TO@ log.error("Error closing",e) @AT@ 3556 @LENGTH@ 29
------UPD SimpleName@@MethodName:error:["error closing", e] @TO@ MethodName:error:["Error closing", e] @AT@ 3560 @LENGTH@ 25
---------UPD StringLiteral@@"error closing" @TO@ "Error closing" @AT@ 3566 @LENGTH@ 15


UPD ExpressionStatement@@MethodInvocation:assertTrue("body should contain: <html>",body.contains("<html>")) @TO@ MethodInvocation:assertTrue("body should contain: </html>",body.contains("</html>")) @AT@ 3621 @LENGTH@ 67
---UPD MethodInvocation@@assertTrue("body should contain: <html>",body.contains("<html>")) @TO@ assertTrue("body should contain: </html>",body.contains("</html>")) @AT@ 3621 @LENGTH@ 66
------UPD SimpleName@@MethodName:assertTrue:["body should contain: <html>", body.contains("<html>")] @TO@ MethodName:assertTrue:["body should contain: </html>", body.contains("</html>")] @AT@ 3621 @LENGTH@ 66
---------UPD StringLiteral@@"body should contain: <html>" @TO@ "body should contain: </html>" @AT@ 3632 @LENGTH@ 29
---------UPD MethodInvocation@@body.contains("<html>") @TO@ body.contains("</html>") @AT@ 3663 @LENGTH@ 23
------------UPD SimpleName@@MethodName:contains:["<html>"] @TO@ MethodName:contains:["</html>"] @AT@ 3668 @LENGTH@ 18
---------------UPD StringLiteral@@"<html>" @TO@ "</html>" @AT@ 3677 @LENGTH@ 8


MOV FieldDeclaration@@private, static, final, long, [serialVersionUID=7808703605527644487L] @TO@ TypeDeclaration@@[public]ExecException, RuntimeCamelException @AT@ 1164 @LENGTH@ 66


UPD ExpressionStatement@@MethodInvocation:MessagingLogger.MESSAGING_LOGGER.unknownPooledConnectionFactoryAttribute(entry.getKey()) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.unknownPooledConnectionFactoryAttribute(entry.getKey()) @AT@ 11201 @LENGTH@ 89
---UPD MethodInvocation@@MessagingLogger.MESSAGING_LOGGER.unknownPooledConnectionFactoryAttribute(entry.getKey()) @TO@ MessagingLogger.ROOT_LOGGER.unknownPooledConnectionFactoryAttribute(entry.getKey()) @AT@ 11201 @LENGTH@ 88
------UPD QualifiedName@@Name:MessagingLogger.MESSAGING_LOGGER @TO@ Name:MessagingLogger.ROOT_LOGGER @AT@ 11201 @LENGTH@ 32


INS MethodDeclaration@@private, voidMethodName:CdiBeanManagerHelper,  @TO@ TypeDeclaration@@[public, final]CdiBeanManagerHelper,  @AT@ 1099 @LENGTH@ 38
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:CdiBeanManagerHelper,  @AT@ 1099 @LENGTH@ 7
---INS SimpleName@@MethodName:CdiBeanManagerHelper @TO@ MethodDeclaration@@private, voidMethodName:CdiBeanManagerHelper,  @AT@ 1107 @LENGTH@ 20


UPD ExpressionStatement@@MethodInvocation:bootstrapGavs.add(each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getClassifier()+ ":"+ each.getVersion()) @TO@ MethodInvocation:bootstrapGavs.add(each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getVersion()+ ":"+ each.getClassifier()) @AT@ 5980 @LENGTH@ 121
---UPD MethodInvocation@@bootstrapGavs.add(each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getClassifier()+ ":"+ each.getVersion()) @TO@ bootstrapGavs.add(each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getVersion()+ ":"+ each.getClassifier()) @AT@ 5980 @LENGTH@ 120
------UPD SimpleName@@MethodName:add:[each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getClassifier()+ ":"+ each.getVersion()] @TO@ MethodName:add:[each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getVersion()+ ":"+ each.getClassifier()] @AT@ 5994 @LENGTH@ 106
---------UPD InfixExpression@@each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getClassifier()+ ":"+ each.getVersion() @TO@ each.getGroupId() + ":" + each.getArtifactId()+ ":"+ each.getVersion()+ ":"+ each.getClassifier() @AT@ 5998 @LENGTH@ 101
------------UPD MethodInvocation@@each.getClassifier() @TO@ each.getVersion() @AT@ 6053 @LENGTH@ 20
---------------UPD SimpleName@@MethodName:getClassifier:[] @TO@ MethodName:getVersion:[] @AT@ 6058 @LENGTH@ 15
------------UPD MethodInvocation@@each.getVersion() @TO@ each.getClassifier() @AT@ 6082 @LENGTH@ 17
---------------UPD SimpleName@@MethodName:getVersion:[] @TO@ MethodName:getClassifier:[] @AT@ 6087 @LENGTH@ 12


UPD IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ if (path.length() > 0) {  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 10745 @LENGTH@ 284
---INS Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @TO@ IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 10768 @LENGTH@ 793
------INS VariableDeclarationStatement@@int idx=uri.indexOf("?"); @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 10871 @LENGTH@ 27
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 10871 @LENGTH@ 3
---------INS VariableDeclarationFragment@@idx=uri.indexOf("?") @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 10875 @LENGTH@ 22
------------INS SimpleName@@idx @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 10875 @LENGTH@ 3
------------INS MethodInvocation@@uri.indexOf("?") @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 10881 @LENGTH@ 16
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 10881 @LENGTH@ 3
---------------INS SimpleName@@MethodName:indexOf:["?"] @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 10885 @LENGTH@ 12
------------------INS StringLiteral@@"?" @TO@ SimpleName@@MethodName:indexOf:["?"] @AT@ 10893 @LENGTH@ 3
------INS IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 10964 @LENGTH@ 583
---------MOV Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 10768 @LENGTH@ 261
------------DEL IfStatement@@if (!uri.endsWith("/")) {  uri=uri + "/";} @AT@ 10895 @LENGTH@ 80
---------------DEL PrefixExpression@@!uri.endsWith("/") @AT@ 10899 @LENGTH@ 18
------------------DEL Operator@@! @AT@ 10899 @LENGTH@ 1
---------------DEL Block@@ThenBody:{  uri=uri + "/";} @AT@ 10919 @LENGTH@ 56
------------MOV ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 10941 @LENGTH@ 16
---------------UPD Assignment@@uri=uri + "/" @TO@ uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 10941 @LENGTH@ 15
------------------DEL InfixExpression@@uri + "/" @AT@ 10947 @LENGTH@ 9
------------------INS ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @TO@ Assignment@@uri=uri + "/" @AT@ 11101 @LENGTH@ 35
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 10900 @LENGTH@ 17
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 10900 @LENGTH@ 17
---------------------INS SimpleName@@uri @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 11121 @LENGTH@ 3
---------------------INS InfixExpression@@uri + "/" @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 11127 @LENGTH@ 9
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 10947 @LENGTH@ 3
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 10947 @LENGTH@ 3
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 10950 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 10950 @LENGTH@ 1
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 10953 @LENGTH@ 3
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 10953 @LENGTH@ 3
---------INS InfixExpression@@idx == -1 @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 10968 @LENGTH@ 9
------------INS SimpleName@@idx @TO@ InfixExpression@@idx == -1 @AT@ 10968 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@idx == -1 @AT@ 10971 @LENGTH@ 2
------------INS PrefixExpression@@-1 @TO@ InfixExpression@@idx == -1 @AT@ 10975 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 10975 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 10976 @LENGTH@ 1
---------INS Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 11205 @LENGTH@ 342
------------INS VariableDeclarationStatement@@String base=uri.substring(0,idx); @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 11321 @LENGTH@ 36
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 11321 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@base=uri.substring(0,idx) @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 11328 @LENGTH@ 28
------------------INS SimpleName@@base @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 11328 @LENGTH@ 4
------------------INS MethodInvocation@@uri.substring(0,idx) @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 11335 @LENGTH@ 21
---------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 11335 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:substring:[0, idx] @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 11339 @LENGTH@ 17
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 11349 @LENGTH@ 1
------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 11352 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 11378 @LENGTH@ 46
---------------INS Assignment@@base=base.endsWith("/") ? base : base + "/" @TO@ ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @AT@ 11378 @LENGTH@ 45
------------------INS SimpleName@@base @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 11378 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 11382 @LENGTH@ 1
------------------INS ConditionalExpression@@base.endsWith("/") ? base : base + "/" @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 11385 @LENGTH@ 38
---------------------INS MethodInvocation@@base.endsWith("/") @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 11385 @LENGTH@ 18
------------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.endsWith("/") @AT@ 11385 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@base.endsWith("/") @AT@ 11390 @LENGTH@ 13
---------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 11399 @LENGTH@ 3
---------------------INS SimpleName@@base @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 11406 @LENGTH@ 4
---------------------INS InfixExpression@@base + "/" @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 11413 @LENGTH@ 10
------------------------INS SimpleName@@base @TO@ InfixExpression@@base + "/" @AT@ 11413 @LENGTH@ 4
------------------------INS Operator@@+ @TO@ InfixExpression@@base + "/" @AT@ 11417 @LENGTH@ 1
------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@base + "/" @AT@ 11420 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.concat(path) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 11445 @LENGTH@ 25
---------------INS Assignment@@base=base.concat(path) @TO@ ExpressionStatement@@Assignment:base=base.concat(path) @AT@ 11445 @LENGTH@ 24
------------------INS SimpleName@@base @TO@ Assignment@@base=base.concat(path) @AT@ 11445 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.concat(path) @AT@ 11449 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(path) @TO@ Assignment@@base=base.concat(path) @AT@ 11452 @LENGTH@ 17
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(path) @AT@ 11452 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[path] @TO@ MethodInvocation@@base.concat(path) @AT@ 11457 @LENGTH@ 12
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:concat:[path] @AT@ 11464 @LENGTH@ 4
------------INS ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 11491 @LENGTH@ 38
---------------INS Assignment@@uri=base.concat(uri.substring(idx)) @TO@ ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @AT@ 11491 @LENGTH@ 37
------------------INS SimpleName@@uri @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 11491 @LENGTH@ 3
------------------INS Operator@@= @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 11494 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(uri.substring(idx)) @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 11497 @LENGTH@ 31
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 11497 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[uri.substring(idx)] @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 11502 @LENGTH@ 26
------------------------INS MethodInvocation@@uri.substring(idx) @TO@ SimpleName@@MethodName:concat:[uri.substring(idx)] @AT@ 11509 @LENGTH@ 18
---------------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(idx) @AT@ 11509 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:substring:[idx] @TO@ MethodInvocation@@uri.substring(idx) @AT@ 11513 @LENGTH@ 14
------------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[idx] @AT@ 11523 @LENGTH@ 3
---UPD Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ ThenBody:{  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} @AT@ 10768 @LENGTH@ 261


UPD IfStatement@@if (property.startsWith(joinAlias)) {  qualifyReference=false;  break;} @TO@ if (property.startsWith(joinAlias.concat("."))) {  qualifyReference=false;  break;} @AT@ 8164 @LENGTH@ 83
---UPD MethodInvocation@@property.startsWith(joinAlias) @TO@ property.startsWith(joinAlias.concat(".")) @AT@ 8168 @LENGTH@ 30
------UPD SimpleName@@MethodName:startsWith:[joinAlias] @TO@ MethodName:startsWith:[joinAlias.concat(".")] @AT@ 8177 @LENGTH@ 21
---------DEL SimpleName@@joinAlias @AT@ 8188 @LENGTH@ 9
---------INS MethodInvocation@@joinAlias.concat(".") @TO@ SimpleName@@MethodName:startsWith:[joinAlias] @AT@ 8222 @LENGTH@ 21
------------INS SimpleName@@Name:joinAlias @TO@ MethodInvocation@@joinAlias.concat(".") @AT@ 8222 @LENGTH@ 9
------------INS SimpleName@@MethodName:concat:["."] @TO@ MethodInvocation@@joinAlias.concat(".") @AT@ 8232 @LENGTH@ 11
---------------INS StringLiteral@@"." @TO@ SimpleName@@MethodName:concat:["."] @AT@ 8239 @LENGTH@ 3


UPD IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ if (path.length() > 0) {  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7518 @LENGTH@ 284
---UPD Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ ThenBody:{  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} @AT@ 7541 @LENGTH@ 261
---INS Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @TO@ IfStatement@@if (path.length() > 0) {  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 7554 @LENGTH@ 793
------INS VariableDeclarationStatement@@int idx=uri.indexOf("?"); @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7657 @LENGTH@ 27
---------INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 7657 @LENGTH@ 3
---------INS VariableDeclarationFragment@@idx=uri.indexOf("?") @TO@ VariableDeclarationStatement@@int idx=uri.indexOf("?"); @AT@ 7661 @LENGTH@ 22
------------INS SimpleName@@idx @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 7661 @LENGTH@ 3
------------INS MethodInvocation@@uri.indexOf("?") @TO@ VariableDeclarationFragment@@idx=uri.indexOf("?") @AT@ 7667 @LENGTH@ 16
---------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 7667 @LENGTH@ 3
---------------INS SimpleName@@MethodName:indexOf:["?"] @TO@ MethodInvocation@@uri.indexOf("?") @AT@ 7671 @LENGTH@ 12
------------------INS StringLiteral@@"?" @TO@ SimpleName@@MethodName:indexOf:["?"] @AT@ 7679 @LENGTH@ 3
------INS IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ Block@@ThenBody:{  int idx=uri.indexOf("?");  if (idx == -1) {    uri=uri.endsWith("/") ? uri : uri + "/";    uri=uri.concat(path);  } else {    String base=uri.substring(0,idx);    base=base.endsWith("/") ? base : base + "/";    base=base.concat(path);    uri=base.concat(uri.substring(idx));  }} @AT@ 7750 @LENGTH@ 583
---------MOV Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7541 @LENGTH@ 261
------------DEL IfStatement@@if (!uri.endsWith("/")) {  uri=uri + "/";} @AT@ 7668 @LENGTH@ 80
---------------DEL PrefixExpression@@!uri.endsWith("/") @AT@ 7672 @LENGTH@ 18
------------------DEL Operator@@! @AT@ 7672 @LENGTH@ 1
---------------DEL Block@@ThenBody:{  uri=uri + "/";} @AT@ 7692 @LENGTH@ 56
------------MOV ExpressionStatement@@Assignment:uri=uri + "/" @TO@ Block@@ThenBody:{  if (!uri.endsWith("/")) {    uri=uri + "/";  }  uri=uri.concat(path);} @AT@ 7714 @LENGTH@ 16
---------------UPD Assignment@@uri=uri + "/" @TO@ uri=uri.endsWith("/") ? uri : uri + "/" @AT@ 7714 @LENGTH@ 15
------------------DEL InfixExpression@@uri + "/" @AT@ 7720 @LENGTH@ 9
------------------INS ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @TO@ Assignment@@uri=uri + "/" @AT@ 7887 @LENGTH@ 35
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7673 @LENGTH@ 17
---------------------MOV MethodInvocation@@uri.endsWith("/") @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7673 @LENGTH@ 17
---------------------INS SimpleName@@uri @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7907 @LENGTH@ 3
---------------------INS InfixExpression@@uri + "/" @TO@ ConditionalExpression@@uri.endsWith("/") ? uri : uri + "/" @AT@ 7913 @LENGTH@ 9
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 7720 @LENGTH@ 3
------------------------MOV SimpleName@@uri @TO@ InfixExpression@@uri + "/" @AT@ 7720 @LENGTH@ 3
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 7723 @LENGTH@ 1
------------------------MOV Operator@@+ @TO@ InfixExpression@@uri + "/" @AT@ 7723 @LENGTH@ 1
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 7726 @LENGTH@ 3
------------------------MOV StringLiteral@@"/" @TO@ InfixExpression@@uri + "/" @AT@ 7726 @LENGTH@ 3
---------INS InfixExpression@@idx == -1 @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7754 @LENGTH@ 9
------------INS SimpleName@@idx @TO@ InfixExpression@@idx == -1 @AT@ 7754 @LENGTH@ 3
------------INS Operator@@== @TO@ InfixExpression@@idx == -1 @AT@ 7757 @LENGTH@ 2
------------INS PrefixExpression@@-1 @TO@ InfixExpression@@idx == -1 @AT@ 7761 @LENGTH@ 2
---------------INS Operator@@- @TO@ PrefixExpression@@-1 @AT@ 7761 @LENGTH@ 1
---------------INS NumberLiteral@@1 @TO@ PrefixExpression@@-1 @AT@ 7762 @LENGTH@ 1
---------INS Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @TO@ IfStatement@@if (idx == -1) {  uri=uri.endsWith("/") ? uri : uri + "/";  uri=uri.concat(path);} else {  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 7991 @LENGTH@ 342
------------INS VariableDeclarationStatement@@String base=uri.substring(0,idx); @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8107 @LENGTH@ 36
---------------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 8107 @LENGTH@ 6
---------------INS VariableDeclarationFragment@@base=uri.substring(0,idx) @TO@ VariableDeclarationStatement@@String base=uri.substring(0,idx); @AT@ 8114 @LENGTH@ 28
------------------INS SimpleName@@base @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 8114 @LENGTH@ 4
------------------INS MethodInvocation@@uri.substring(0,idx) @TO@ VariableDeclarationFragment@@base=uri.substring(0,idx) @AT@ 8121 @LENGTH@ 21
---------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 8121 @LENGTH@ 3
---------------------INS SimpleName@@MethodName:substring:[0, idx] @TO@ MethodInvocation@@uri.substring(0,idx) @AT@ 8125 @LENGTH@ 17
------------------------INS NumberLiteral@@0 @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 8135 @LENGTH@ 1
------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[0, idx] @AT@ 8138 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8164 @LENGTH@ 46
---------------INS Assignment@@base=base.endsWith("/") ? base : base + "/" @TO@ ExpressionStatement@@Assignment:base=base.endsWith("/") ? base : base + "/" @AT@ 8164 @LENGTH@ 45
------------------INS SimpleName@@base @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8164 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8168 @LENGTH@ 1
------------------INS ConditionalExpression@@base.endsWith("/") ? base : base + "/" @TO@ Assignment@@base=base.endsWith("/") ? base : base + "/" @AT@ 8171 @LENGTH@ 38
---------------------INS MethodInvocation@@base.endsWith("/") @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8171 @LENGTH@ 18
------------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.endsWith("/") @AT@ 8171 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:endsWith:["/"] @TO@ MethodInvocation@@base.endsWith("/") @AT@ 8176 @LENGTH@ 13
---------------------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:endsWith:["/"] @AT@ 8185 @LENGTH@ 3
---------------------INS SimpleName@@base @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8192 @LENGTH@ 4
---------------------INS InfixExpression@@base + "/" @TO@ ConditionalExpression@@base.endsWith("/") ? base : base + "/" @AT@ 8199 @LENGTH@ 10
------------------------INS SimpleName@@base @TO@ InfixExpression@@base + "/" @AT@ 8199 @LENGTH@ 4
------------------------INS Operator@@+ @TO@ InfixExpression@@base + "/" @AT@ 8203 @LENGTH@ 1
------------------------INS StringLiteral@@"/" @TO@ InfixExpression@@base + "/" @AT@ 8206 @LENGTH@ 3
------------INS ExpressionStatement@@Assignment:base=base.concat(path) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8231 @LENGTH@ 25
---------------INS Assignment@@base=base.concat(path) @TO@ ExpressionStatement@@Assignment:base=base.concat(path) @AT@ 8231 @LENGTH@ 24
------------------INS SimpleName@@base @TO@ Assignment@@base=base.concat(path) @AT@ 8231 @LENGTH@ 4
------------------INS Operator@@= @TO@ Assignment@@base=base.concat(path) @AT@ 8235 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(path) @TO@ Assignment@@base=base.concat(path) @AT@ 8238 @LENGTH@ 17
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(path) @AT@ 8238 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[path] @TO@ MethodInvocation@@base.concat(path) @AT@ 8243 @LENGTH@ 12
------------------------INS SimpleName@@path @TO@ SimpleName@@MethodName:concat:[path] @AT@ 8250 @LENGTH@ 4
------------INS ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @TO@ Block@@ElseBody:{  String base=uri.substring(0,idx);  base=base.endsWith("/") ? base : base + "/";  base=base.concat(path);  uri=base.concat(uri.substring(idx));} @AT@ 8277 @LENGTH@ 38
---------------INS Assignment@@uri=base.concat(uri.substring(idx)) @TO@ ExpressionStatement@@Assignment:uri=base.concat(uri.substring(idx)) @AT@ 8277 @LENGTH@ 37
------------------INS SimpleName@@uri @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8277 @LENGTH@ 3
------------------INS Operator@@= @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8280 @LENGTH@ 1
------------------INS MethodInvocation@@base.concat(uri.substring(idx)) @TO@ Assignment@@uri=base.concat(uri.substring(idx)) @AT@ 8283 @LENGTH@ 31
---------------------INS SimpleName@@Name:base @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 8283 @LENGTH@ 4
---------------------INS SimpleName@@MethodName:concat:[uri.substring(idx)] @TO@ MethodInvocation@@base.concat(uri.substring(idx)) @AT@ 8288 @LENGTH@ 26
------------------------INS MethodInvocation@@uri.substring(idx) @TO@ SimpleName@@MethodName:concat:[uri.substring(idx)] @AT@ 8295 @LENGTH@ 18
---------------------------INS SimpleName@@Name:uri @TO@ MethodInvocation@@uri.substring(idx) @AT@ 8295 @LENGTH@ 3
---------------------------INS SimpleName@@MethodName:substring:[idx] @TO@ MethodInvocation@@uri.substring(idx) @AT@ 8299 @LENGTH@ 14
------------------------------INS SimpleName@@idx @TO@ SimpleName@@MethodName:substring:[idx] @AT@ 8309 @LENGTH@ 3


UPD IfStatement@@if (this.applicationContext.equals(applicationContext)) {  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @TO@ if (this.applicationContext.equals(applicationContext)) {  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  if (camelContext.getStatus().isStopped()) {    LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());    for (    RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {      try {        LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);        camelContext.addRoutes(routesBuilder);      } catch (      Exception e) {        throw new CamelSpringBootInitializationException(e);      }    }    try {      loadXmlRoutes(applicationContext,camelContext);      for (      CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {        LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);        camelContextConfiguration.beforeApplicationStart(camelContext);      }      camelContext.start();    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  } else {    LOG.debug("Camel already started, not adding routes.");  }} else {  LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent);} @AT@ 2489 @LENGTH@ 1353
---UPD Block@@ThenBody:{  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @TO@ ThenBody:{  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @AT@ 2545 @LENGTH@ 1212
---INS Block@@ThenBody:{  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  if (camelContext.getStatus().isStopped()) {    LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());    for (    RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {      try {        LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);        camelContext.addRoutes(routesBuilder);      } catch (      Exception e) {        throw new CamelSpringBootInitializationException(e);      }    }    try {      loadXmlRoutes(applicationContext,camelContext);      for (      CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {        LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);        camelContextConfiguration.beforeApplicationStart(camelContext);      }      camelContext.start();    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  } else {    LOG.debug("Camel already started, not adding routes.");  }} @TO@ IfStatement@@if (this.applicationContext.equals(applicationContext)) {  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @AT@ 2548 @LENGTH@ 1523
------MOV VariableDeclarationStatement@@CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class); @TO@ Block@@ThenBody:{  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  if (camelContext.getStatus().isStopped()) {    LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());    for (    RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {      try {        LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);        camelContext.addRoutes(routesBuilder);      } catch (      Exception e) {        throw new CamelSpringBootInitializationException(e);      }    }    try {      loadXmlRoutes(applicationContext,camelContext);      for (      CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {        LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);        camelContextConfiguration.beforeApplicationStart(camelContext);      }      camelContext.start();    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  } else {    LOG.debug("Camel already started, not adding routes.");  }} @AT@ 2559 @LENGTH@ 102
------INS IfStatement@@if (camelContext.getStatus().isStopped()) {  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @TO@ Block@@ThenBody:{  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  if (camelContext.getStatus().isStopped()) {    LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());    for (    RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {      try {        LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);        camelContext.addRoutes(routesBuilder);      } catch (      Exception e) {        throw new CamelSpringBootInitializationException(e);      }    }    try {      loadXmlRoutes(applicationContext,camelContext);      for (      CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {        LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);        camelContextConfiguration.beforeApplicationStart(camelContext);      }      camelContext.start();    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  } else {    LOG.debug("Camel already started, not adding routes.");  }} @AT@ 2749 @LENGTH@ 1312
---------MOV Block@@ThenBody:{  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} @TO@ IfStatement@@if (camelContext.getStatus().isStopped()) {  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @AT@ 2545 @LENGTH@ 1212
---------INS MethodInvocation@@camelContext.getStatus().isStopped() @TO@ IfStatement@@if (camelContext.getStatus().isStopped()) {  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @AT@ 2753 @LENGTH@ 36
------------INS MethodInvocation@@MethodName:getStatus:[] @TO@ MethodInvocation@@camelContext.getStatus().isStopped() @AT@ 2753 @LENGTH@ 24
------------INS SimpleName@@Name:camelContext @TO@ MethodInvocation@@camelContext.getStatus().isStopped() @AT@ 2753 @LENGTH@ 12
------------INS SimpleName@@MethodName:isStopped:[] @TO@ MethodInvocation@@camelContext.getStatus().isStopped() @AT@ 2778 @LENGTH@ 11
---------MOV Block@@ElseBody:{  LOG.debug("Camel already started, not adding routes.");} @TO@ IfStatement@@if (camelContext.getStatus().isStopped()) {  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @AT@ 3763 @LENGTH@ 79
---INS Block@@ElseBody:{  LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent);} @TO@ IfStatement@@if (this.applicationContext.equals(applicationContext)) {  CamelContext camelContext=contextRefreshedEvent.getApplicationContext().getBean(CamelContext.class);  LOG.debug("Post-processing CamelContext bean: {}",camelContext.getName());  for (  RoutesBuilder routesBuilder : applicationContext.getBeansOfType(RoutesBuilder.class).values()) {    try {      LOG.debug("Injecting following route into the CamelContext: {}",routesBuilder);      camelContext.addRoutes(routesBuilder);    } catch (    Exception e) {      throw new CamelSpringBootInitializationException(e);    }  }  try {    loadXmlRoutes(applicationContext,camelContext);    for (    CamelContextConfiguration camelContextConfiguration : camelContextConfigurations) {      LOG.debug("CamelContextConfiguration found. Invoking: {}",camelContextConfiguration);      camelContextConfiguration.beforeApplicationStart(camelContext);    }    camelContext.start();  } catch (  Exception e) {    throw new CamelSpringBootInitializationException(e);  }} else {  LOG.debug("Camel already started, not adding routes.");} @AT@ 4077 @LENGTH@ 93
------INS ExpressionStatement@@MethodInvocation:LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent) @TO@ Block@@ElseBody:{  LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent);} @AT@ 4091 @LENGTH@ 69
---------INS MethodInvocation@@LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent) @TO@ ExpressionStatement@@MethodInvocation:LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent) @AT@ 4091 @LENGTH@ 68
------------INS SimpleName@@Name:LOG @TO@ MethodInvocation@@LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent) @AT@ 4091 @LENGTH@ 3
------------INS SimpleName@@MethodName:debug:["Ignore ContextRefreshedEvent: {}", contextRefreshedEvent] @TO@ MethodInvocation@@LOG.debug("Ignore ContextRefreshedEvent: {}",contextRefreshedEvent) @AT@ 4095 @LENGTH@ 64
---------------INS StringLiteral@@"Ignore ContextRefreshedEvent: {}" @TO@ SimpleName@@MethodName:debug:["Ignore ContextRefreshedEvent: {}", contextRefreshedEvent] @AT@ 4101 @LENGTH@ 34
---------------INS SimpleName@@contextRefreshedEvent @TO@ SimpleName@@MethodName:debug:["Ignore ContextRefreshedEvent: {}", contextRefreshedEvent] @AT@ 4137 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1517 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1517 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1526 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1535 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1535 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1563 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1566 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1578 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1535 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1470 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1470 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1479 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1488 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1488 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1516 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1519 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1531 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1488 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:connection.flushDb() @TO@ MethodInvocation:connection.flushAll() @AT@ 2374 @LENGTH@ 21
---UPD MethodInvocation@@connection.flushDb() @TO@ connection.flushAll() @AT@ 2374 @LENGTH@ 20
------UPD SimpleName@@MethodName:flushDb:[] @TO@ MethodName:flushAll:[] @AT@ 2385 @LENGTH@ 9


UPD ReturnStatement@@ClassInstanceCreation:new CompositeType("components","Components",new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"},new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"},new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}) @TO@ ClassInstanceCreation:new CompositeType("components","Components",new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"},new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"},new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}) @AT@ 4756 @LENGTH@ 537
---UPD ClassInstanceCreation@@CompositeType["components", "Components", new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"}, new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"}, new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}] @TO@ CompositeType["components", "Components", new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"}, new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"}, new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING}] @AT@ 4763 @LENGTH@ 529
------UPD ArrayCreation@@new String[]{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ new String[]{"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 4809 @LENGTH@ 115
---------UPD ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @TO@ {"option","kind","group","label","type","java type","deprecated","value","default value","description"} @AT@ 4821 @LENGTH@ 103
------------INS StringLiteral@@"group" @TO@ ArrayInitializer@@{"option","kind","label","type","java type","deprecated","value","default value","description"} @AT@ 4840 @LENGTH@ 7
------UPD ArrayCreation@@new String[]{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @TO@ new String[]{"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 4942 @LENGTH@ 115
---------UPD ArrayInitializer@@{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @TO@ {"Option","Kind","Group","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 4954 @LENGTH@ 103
------------INS StringLiteral@@"Group" @TO@ ArrayInitializer@@{"Option","Kind","Label","Type","Java Type","Deprecated","Value","Default Value","Description"} @AT@ 4982 @LENGTH@ 7
------UPD ArrayCreation@@new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @TO@ new OpenType[]{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 5075 @LENGTH@ 216
---------UPD ArrayInitializer@@{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @TO@ {SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 5089 @LENGTH@ 202
------------INS QualifiedName@@SimpleType.STRING @TO@ ArrayInitializer@@{SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING,SimpleType.STRING} @AT@ 5310 @LENGTH@ 17
---------------INS SimpleName@@SimpleType @TO@ QualifiedName@@SimpleType.STRING @AT@ 5310 @LENGTH@ 10
---------------INS SimpleName@@STRING @TO@ QualifiedName@@SimpleType.STRING @AT@ 5321 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")) @AT@ 1755 @LENGTH@ 95
---UPD MethodInvocation@@assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")) @TO@ assertTrue(json.contains("\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")) @AT@ 1755 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"")] @TO@ MethodName:assertTrue:[json.contains("\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"")] @AT@ 1755 @LENGTH@ 94
---------UPD MethodInvocation@@json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"") @TO@ json.contains("\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"") @AT@ 1766 @LENGTH@ 82
------------UPD SimpleName@@MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\""] @TO@ MethodName:contains:["\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\""] @AT@ 1771 @LENGTH@ 77
---------------UPD StringLiteral@@"\"retainFirst\": { \"kind\": \"parameter\", \"type\": \"integer\"" @TO@ "\"name\": { \"kind\": \"path\", \"group\": \"producer\", \"required\": \"true\"" @AT@ 1780 @LENGTH@ 67


UPD IfStatement@@if (!JsfRuntimeInformation.isMyFacesPresent() && !JsfRuntimeInformation.isMyFacesInUse()) {  return new FlowResponseStateManager(wrapped);} @TO@ if (!JsfRuntimeInformation.isMyFacesInUse()) {  return new FlowResponseStateManager(wrapped);} @AT@ 1606 @LENGTH@ 144
---DEL InfixExpression@@!JsfRuntimeInformation.isMyFacesPresent() && !JsfRuntimeInformation.isMyFacesInUse() @AT@ 1610 @LENGTH@ 84
------DEL PrefixExpression@@!JsfRuntimeInformation.isMyFacesPresent() @AT@ 1610 @LENGTH@ 41
---------DEL Operator@@! @AT@ 1610 @LENGTH@ 1
---------DEL MethodInvocation@@JsfRuntimeInformation.isMyFacesPresent() @AT@ 1611 @LENGTH@ 40
------------DEL SimpleName@@Name:JsfRuntimeInformation @AT@ 1611 @LENGTH@ 21
------------DEL SimpleName@@MethodName:isMyFacesPresent:[] @AT@ 1633 @LENGTH@ 18
------DEL Operator@@&& @AT@ 1651 @LENGTH@ 2
---MOV PrefixExpression@@!JsfRuntimeInformation.isMyFacesInUse() @TO@ IfStatement@@if (!JsfRuntimeInformation.isMyFacesPresent() && !JsfRuntimeInformation.isMyFacesInUse()) {  return new FlowResponseStateManager(wrapped);} @AT@ 1655 @LENGTH@ 39


INS MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @TO@ TypeDeclaration@@[public]JmsComponentConfigurationAndDocumentationTest, CamelTestSupport @AT@ 1682 @LENGTH@ 273
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1682 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1689 @LENGTH@ 4
---INS SimpleName@@MethodName:testExplainComponentJson @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1694 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1728 @LENGTH@ 9
---INS VariableDeclarationStatement@@String json=context.explainComponentJson("jms",false); @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1748 @LENGTH@ 57
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String json=context.explainComponentJson("jms",false); @AT@ 1748 @LENGTH@ 6
------INS VariableDeclarationFragment@@json=context.explainComponentJson("jms",false) @TO@ VariableDeclarationStatement@@String json=context.explainComponentJson("jms",false); @AT@ 1755 @LENGTH@ 49
---------INS SimpleName@@json @TO@ VariableDeclarationFragment@@json=context.explainComponentJson("jms",false) @AT@ 1755 @LENGTH@ 4
---------INS MethodInvocation@@context.explainComponentJson("jms",false) @TO@ VariableDeclarationFragment@@json=context.explainComponentJson("jms",false) @AT@ 1762 @LENGTH@ 42
------------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.explainComponentJson("jms",false) @AT@ 1762 @LENGTH@ 7
------------INS SimpleName@@MethodName:explainComponentJson:["jms", false] @TO@ MethodInvocation@@context.explainComponentJson("jms",false) @AT@ 1770 @LENGTH@ 34
---------------INS StringLiteral@@"jms" @TO@ SimpleName@@MethodName:explainComponentJson:["jms", false] @AT@ 1791 @LENGTH@ 5
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:explainComponentJson:["jms", false] @AT@ 1798 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:assertNotNull(json) @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1814 @LENGTH@ 20
------INS MethodInvocation@@assertNotNull(json) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(json) @AT@ 1814 @LENGTH@ 19
---------INS SimpleName@@MethodName:assertNotNull:[json] @TO@ MethodInvocation@@assertNotNull(json) @AT@ 1814 @LENGTH@ 19
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:assertNotNull:[json] @AT@ 1828 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:log.info(json) @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1844 @LENGTH@ 15
------INS MethodInvocation@@log.info(json) @TO@ ExpressionStatement@@MethodInvocation:log.info(json) @AT@ 1844 @LENGTH@ 14
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.info(json) @AT@ 1844 @LENGTH@ 3
---------INS SimpleName@@MethodName:info:[json] @TO@ MethodInvocation@@log.info(json) @AT@ 1848 @LENGTH@ 10
------------INS SimpleName@@json @TO@ SimpleName@@MethodName:info:[json] @AT@ 1853 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"syntax\": \"jms:destinationType:destinationName\"")) @TO@ MethodDeclaration@@public, void, MethodName:testExplainComponentJson, Exception,  @AT@ 1868 @LENGTH@ 81
------INS MethodInvocation@@assertTrue(json.contains("\"syntax\": \"jms:destinationType:destinationName\"")) @TO@ ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"syntax\": \"jms:destinationType:destinationName\"")) @AT@ 1868 @LENGTH@ 80
---------INS SimpleName@@MethodName:assertTrue:[json.contains("\"syntax\": \"jms:destinationType:destinationName\"")] @TO@ MethodInvocation@@assertTrue(json.contains("\"syntax\": \"jms:destinationType:destinationName\"")) @AT@ 1868 @LENGTH@ 80
------------INS MethodInvocation@@json.contains("\"syntax\": \"jms:destinationType:destinationName\"") @TO@ SimpleName@@MethodName:assertTrue:[json.contains("\"syntax\": \"jms:destinationType:destinationName\"")] @AT@ 1879 @LENGTH@ 68
---------------INS SimpleName@@Name:json @TO@ MethodInvocation@@json.contains("\"syntax\": \"jms:destinationType:destinationName\"") @AT@ 1879 @LENGTH@ 4
---------------INS SimpleName@@MethodName:contains:["\"syntax\": \"jms:destinationType:destinationName\""] @TO@ MethodInvocation@@json.contains("\"syntax\": \"jms:destinationType:destinationName\"") @AT@ 1884 @LENGTH@ 63
------------------INS StringLiteral@@"\"syntax\": \"jms:destinationType:destinationName\"" @TO@ SimpleName@@MethodName:contains:["\"syntax\": \"jms:destinationType:destinationName\""] @AT@ 1893 @LENGTH@ 53


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ HttpClient client=new DefaultHttpClient(); @AT@ 2015 @LENGTH@ 48
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=new DefaultHttpClient() @AT@ 2026 @LENGTH@ 36
------DEL MethodInvocation@@HttpClients.createDefault() @AT@ 2035 @LENGTH@ 27
---------DEL SimpleName@@Name:HttpClients @AT@ 2035 @LENGTH@ 11
---------DEL SimpleName@@MethodName:createDefault:[] @AT@ 2047 @LENGTH@ 15
------INS ClassInstanceCreation@@DefaultHttpClient[] @TO@ VariableDeclarationFragment@@client=HttpClients.createDefault() @AT@ 2041 @LENGTH@ 23
---------INS New@@new @TO@ ClassInstanceCreation@@DefaultHttpClient[] @AT@ 2041 @LENGTH@ 3
---------INS SimpleType@@DefaultHttpClient @TO@ ClassInstanceCreation@@DefaultHttpClient[] @AT@ 2045 @LENGTH@ 17


DEL ReturnStatement@@NullLiteral:null @AT@ 32885 @LENGTH@ 12
---DEL NullLiteral@@null @AT@ 32892 @LENGTH@ 4


UPD TypeDeclaration@@[@RunWith(Arquillian.class), public]ClassFileTransformerTestCase,  @TO@ [@Ignore, @RunWith(Arquillian.class), public]ClassFileTransformerTestCase,  @AT@ 2070 @LENGTH@ 1387
---INS MarkerAnnotation@@@Ignore @TO@ TypeDeclaration@@[@RunWith(Arquillian.class), public]ClassFileTransformerTestCase,  @AT@ 2044 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:ts.deallocateTask(task,false,TaskAttemptEndReason.SERVICE_BUSY) @TO@ MethodInvocation:ts.deallocateTask(task,false,TaskAttemptEndReason.EXECUTOR_BUSY,null) @AT@ 14727 @LENGTH@ 66
---UPD MethodInvocation@@ts.deallocateTask(task,false,TaskAttemptEndReason.SERVICE_BUSY) @TO@ ts.deallocateTask(task,false,TaskAttemptEndReason.EXECUTOR_BUSY,null) @AT@ 14727 @LENGTH@ 65
------UPD SimpleName@@MethodName:deallocateTask:[task, false, TaskAttemptEndReason.SERVICE_BUSY] @TO@ MethodName:deallocateTask:[task, false, TaskAttemptEndReason.EXECUTOR_BUSY, null] @AT@ 14730 @LENGTH@ 62
---------UPD QualifiedName@@TaskAttemptEndReason.SERVICE_BUSY @TO@ TaskAttemptEndReason.EXECUTOR_BUSY @AT@ 14758 @LENGTH@ 33
------------UPD SimpleName@@SERVICE_BUSY @TO@ EXECUTOR_BUSY @AT@ 14779 @LENGTH@ 12
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:deallocateTask:[task, false, TaskAttemptEndReason.SERVICE_BUSY] @AT@ 14800 @LENGTH@ 4


UPD SuperConstructorInvocation@@super(modelElement,name,addHandler,IDMConfigRemoveStepHandler.INSTANCE,IDMExtension.getResourceDescriptionResolver(modelElement.getName()),attributes);
 @TO@ super(modelElement,name,addHandler,DefaultRemoveStepHandler.INSTANCE,IDMExtension.getResourceDescriptionResolver(modelElement.getName()),attributes);
 @AT@ 2393 @LENGTH@ 156
---UPD QualifiedName@@IDMConfigRemoveStepHandler.INSTANCE @TO@ DefaultRemoveStepHandler.INSTANCE @AT@ 2431 @LENGTH@ 35
------UPD SimpleName@@IDMConfigRemoveStepHandler @TO@ DefaultRemoveStepHandler @AT@ 2431 @LENGTH@ 26


UPD MethodDeclaration@@protected, void, MethodName:recreateParentService, OperationContext context, PathAddress parentAddress, ModelNode parentModel, ServiceVerificationHandler verificationHandler, OperationFailedException,  @TO@ protected, void, MethodName:recreateParentService, OperationContext context, PathAddress parentAddress, ModelNode parentModel, OperationFailedException,  @AT@ 2961 @LENGTH@ 570
---DEL SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 3074 @LENGTH@ 46
------DEL SimpleType@@ServiceVerificationHandler @AT@ 3074 @LENGTH@ 26
------DEL SimpleName@@verificationHandler @AT@ 3101 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,verificationHandler,null,false) @TO@ MethodInvocation:PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,false) @AT@ 3359 @LENGTH@ 165
------UPD MethodInvocation@@PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,verificationHandler,null,false) @TO@ PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,false) @AT@ 3359 @LENGTH@ 164
---------UPD SimpleName@@MethodName:createPartitionManagerService:[context, parentAddress.getLastElement().getValue(), parentModel, verificationHandler, null, false] @TO@ MethodName:createPartitionManagerService:[context, parentAddress.getLastElement().getValue(), parentModel, false] @AT@ 3395 @LENGTH@ 128
------------DEL SimpleName@@verificationHandler @AT@ 3490 @LENGTH@ 19
------------DEL NullLiteral@@null @AT@ 3511 @LENGTH@ 4


UPD MethodDeclaration@@public, boolean, MethodName:supports, Class clazz,  @TO@ public, boolean, MethodName:supports, Class<?> clazz,  @AT@ 1134 @LENGTH@ 86
---UPD SingleVariableDeclaration@@Class clazz @TO@ Class<?> clazz @AT@ 1158 @LENGTH@ 11
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class clazz @AT@ 1158 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1158 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1164 @LENGTH@ 1
------DEL SimpleType@@Class @AT@ 1158 @LENGTH@ 5


UPD ExpressionStatement@@MethodInvocation:Assert.isTrue(this.patternMatcher != null,"The 'fieldSetMappers' property must be non-empty") @TO@ MethodInvocation:Assert.isTrue(this.patternMatcher != null,"The 'patternMatcher' property must be non-null") @AT@ 2572 @LENGTH@ 95
---UPD MethodInvocation@@Assert.isTrue(this.patternMatcher != null,"The 'fieldSetMappers' property must be non-empty") @TO@ Assert.isTrue(this.patternMatcher != null,"The 'patternMatcher' property must be non-null") @AT@ 2572 @LENGTH@ 94
------UPD SimpleName@@MethodName:isTrue:[this.patternMatcher != null, "The 'fieldSetMappers' property must be non-empty"] @TO@ MethodName:isTrue:[this.patternMatcher != null, "The 'patternMatcher' property must be non-null"] @AT@ 2579 @LENGTH@ 87
---------UPD StringLiteral@@"The 'fieldSetMappers' property must be non-empty" @TO@ "The 'patternMatcher' property must be non-null" @AT@ 2615 @LENGTH@ 50


UPD VariableDeclarationStatement@@final Map<String,AtomicLong> references=new HashMap<>(); @TO@ final Map<String,AtomicLong> references=new HashMap<String,AtomicLong>(); @AT@ 4089 @LENGTH@ 59
---UPD VariableDeclarationFragment@@references=new HashMap<>() @TO@ references=new HashMap<String,AtomicLong>() @AT@ 4119 @LENGTH@ 28
------UPD ClassInstanceCreation@@HashMap<>[] @TO@ HashMap<String,AtomicLong>[] @AT@ 4132 @LENGTH@ 15
---------UPD ParameterizedType@@HashMap<> @TO@ HashMap<String,AtomicLong> @AT@ 4136 @LENGTH@ 9
------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<> @AT@ 4144 @LENGTH@ 6
------------INS SimpleType@@AtomicLong @TO@ ParameterizedType@@HashMap<> @AT@ 4152 @LENGTH@ 10


UPD ForStatement@@for (int i=0; i < commandArgs.length; i++) {  types[i]=commandArgs[i].getClass();  if (types[i] == Boolean.class)   types[i]=boolean.class;  if (types[i] == Integer.class)   types[i]=int.class;} @TO@ for (int i=0; i < commandArgs.length; i++) {  types[i]=commandArgs[i].getClass();  if (types[i] == Boolean.class) {    types[i]=boolean.class;  }  if (types[i] == Integer.class) {    types[i]=int.class;  }} @AT@ 2520 @LENGTH@ 284
---UPD IfStatement@@if (types[i] == Boolean.class) types[i]=boolean.class; @TO@ if (types[i] == Boolean.class) {  types[i]=boolean.class;} @AT@ 2673 @LENGTH@ 56
------UPD Block@@ThenBody:types[i]=boolean.class; @TO@ ThenBody:{  types[i]=boolean.class;} @AT@ 2704 @LENGTH@ 25
---UPD IfStatement@@if (types[i] == Integer.class) types[i]=int.class; @TO@ if (types[i] == Integer.class) {  types[i]=int.class;} @AT@ 2742 @LENGTH@ 52
------UPD Block@@ThenBody:types[i]=int.class; @TO@ ThenBody:{  types[i]=int.class;} @AT@ 2773 @LENGTH@ 21


UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.errorStoppingJmsServer(e) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.errorStoppingJmsServer(e) @AT@ 8545 @LENGTH@ 43
---UPD MethodInvocation@@MESSAGING_LOGGER.errorStoppingJmsServer(e) @TO@ MessagingLogger.ROOT_LOGGER.errorStoppingJmsServer(e) @AT@ 8545 @LENGTH@ 42
------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.errorStoppingJmsServer(e) @AT@ 8448 @LENGTH@ 27
------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 8545 @LENGTH@ 16


UPD CatchClause@@catch (Exception e) {  e.printStackTrace();} @TO@ catch (Exception e) {  log.error("Cannot write to byte Array");  e.printStackTrace();} @AT@ 5059 @LENGTH@ 87
---INS ExpressionStatement@@MethodInvocation:log.error("Cannot write to byte Array") @TO@ CatchClause@@catch (Exception e) {  e.printStackTrace();} @AT@ 5134 @LENGTH@ 40
------INS MethodInvocation@@log.error("Cannot write to byte Array") @TO@ ExpressionStatement@@MethodInvocation:log.error("Cannot write to byte Array") @AT@ 5134 @LENGTH@ 39
---------INS SimpleName@@Name:log @TO@ MethodInvocation@@log.error("Cannot write to byte Array") @AT@ 5134 @LENGTH@ 3
---------INS SimpleName@@MethodName:error:["Cannot write to byte Array"] @TO@ MethodInvocation@@log.error("Cannot write to byte Array") @AT@ 5138 @LENGTH@ 35
------------INS StringLiteral@@"Cannot write to byte Array" @TO@ SimpleName@@MethodName:error:["Cannot write to byte Array"] @AT@ 5144 @LENGTH@ 28


UPD ReturnStatement@@MethodInvocation:delegate.tokenize(token,regex) @TO@ MethodInvocation:delegate.tokenize(token,regex,group) @AT@ 14954 @LENGTH@ 39
---UPD MethodInvocation@@delegate.tokenize(token,regex) @TO@ delegate.tokenize(token,regex,group) @AT@ 14961 @LENGTH@ 31
------UPD SimpleName@@MethodName:tokenize:[token, regex] @TO@ MethodName:tokenize:[token, regex, group] @AT@ 14970 @LENGTH@ 22
---------INS SimpleName@@group @TO@ SimpleName@@MethodName:tokenize:[token, regex] @AT@ 14993 @LENGTH@ 5


UPD FieldDeclaration@@private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.native_interface"] @TO@ private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.native-interface"] @AT@ 2849 @LENGTH@ 96
---UPD VariableDeclarationFragment@@RUNTIME_CAPABILITY_NAME="org.wildfly.management.native_interface" @TO@ RUNTIME_CAPABILITY_NAME="org.wildfly.management.native-interface" @AT@ 2877 @LENGTH@ 67
------UPD StringLiteral@@"org.wildfly.management.native_interface" @TO@ "org.wildfly.management.native-interface" @AT@ 2903 @LENGTH@ 41


INS MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @TO@ TypeDeclaration@@[public]CamelCatalogTest, TestCase @AT@ 5130 @LENGTH@ 465
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5130 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5137 @LENGTH@ 4
---INS SimpleName@@MethodName:testAsEndpointUriNetty4http @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5142 @LENGTH@ 27
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5179 @LENGTH@ 9
---INS VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5199 @LENGTH@ 56
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5199 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 5199 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5203 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 5211 @LENGTH@ 6
------INS VariableDeclarationFragment@@map=new HashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> map=new HashMap<String,String>(); @AT@ 5219 @LENGTH@ 35
---------INS SimpleName@@map @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5219 @LENGTH@ 3
---------INS ClassInstanceCreation@@HashMap<String,String>[] @TO@ VariableDeclarationFragment@@map=new HashMap<String,String>() @AT@ 5225 @LENGTH@ 29
------------INS New@@new @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 5225 @LENGTH@ 3
------------INS ParameterizedType@@HashMap<String,String> @TO@ ClassInstanceCreation@@HashMap<String,String>[] @AT@ 5229 @LENGTH@ 23
---------------INS SimpleType@@HashMap @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5229 @LENGTH@ 7
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5237 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@HashMap<String,String> @AT@ 5245 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("protocol","http") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5264 @LENGTH@ 28
------INS MethodInvocation@@map.put("protocol","http") @TO@ ExpressionStatement@@MethodInvocation:map.put("protocol","http") @AT@ 5264 @LENGTH@ 27
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("protocol","http") @AT@ 5264 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["protocol", "http"] @TO@ MethodInvocation@@map.put("protocol","http") @AT@ 5268 @LENGTH@ 23
------------INS StringLiteral@@"protocol" @TO@ SimpleName@@MethodName:put:["protocol", "http"] @AT@ 5272 @LENGTH@ 10
------------INS StringLiteral@@"http" @TO@ SimpleName@@MethodName:put:["protocol", "http"] @AT@ 5284 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("host","localhost") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5301 @LENGTH@ 29
------INS MethodInvocation@@map.put("host","localhost") @TO@ ExpressionStatement@@MethodInvocation:map.put("host","localhost") @AT@ 5301 @LENGTH@ 28
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("host","localhost") @AT@ 5301 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["host", "localhost"] @TO@ MethodInvocation@@map.put("host","localhost") @AT@ 5305 @LENGTH@ 24
------------INS StringLiteral@@"host" @TO@ SimpleName@@MethodName:put:["host", "localhost"] @AT@ 5309 @LENGTH@ 6
------------INS StringLiteral@@"localhost" @TO@ SimpleName@@MethodName:put:["host", "localhost"] @AT@ 5317 @LENGTH@ 11
---INS ExpressionStatement@@MethodInvocation:map.put("port","8080") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5339 @LENGTH@ 24
------INS MethodInvocation@@map.put("port","8080") @TO@ ExpressionStatement@@MethodInvocation:map.put("port","8080") @AT@ 5339 @LENGTH@ 23
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("port","8080") @AT@ 5339 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["port", "8080"] @TO@ MethodInvocation@@map.put("port","8080") @AT@ 5343 @LENGTH@ 19
------------INS StringLiteral@@"port" @TO@ SimpleName@@MethodName:put:["port", "8080"] @AT@ 5347 @LENGTH@ 6
------------INS StringLiteral@@"8080" @TO@ SimpleName@@MethodName:put:["port", "8080"] @AT@ 5355 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:map.put("path","foo/bar") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5372 @LENGTH@ 27
------INS MethodInvocation@@map.put("path","foo/bar") @TO@ ExpressionStatement@@MethodInvocation:map.put("path","foo/bar") @AT@ 5372 @LENGTH@ 26
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("path","foo/bar") @AT@ 5372 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["path", "foo/bar"] @TO@ MethodInvocation@@map.put("path","foo/bar") @AT@ 5376 @LENGTH@ 22
------------INS StringLiteral@@"path" @TO@ SimpleName@@MethodName:put:["path", "foo/bar"] @AT@ 5380 @LENGTH@ 6
------------INS StringLiteral@@"foo/bar" @TO@ SimpleName@@MethodName:put:["path", "foo/bar"] @AT@ 5388 @LENGTH@ 9
---INS ExpressionStatement@@MethodInvocation:map.put("disconnect","true") @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5408 @LENGTH@ 30
------INS MethodInvocation@@map.put("disconnect","true") @TO@ ExpressionStatement@@MethodInvocation:map.put("disconnect","true") @AT@ 5408 @LENGTH@ 29
---------INS SimpleName@@Name:map @TO@ MethodInvocation@@map.put("disconnect","true") @AT@ 5408 @LENGTH@ 3
---------INS SimpleName@@MethodName:put:["disconnect", "true"] @TO@ MethodInvocation@@map.put("disconnect","true") @AT@ 5412 @LENGTH@ 25
------------INS StringLiteral@@"disconnect" @TO@ SimpleName@@MethodName:put:["disconnect", "true"] @AT@ 5416 @LENGTH@ 12
------------INS StringLiteral@@"true" @TO@ SimpleName@@MethodName:put:["disconnect", "true"] @AT@ 5430 @LENGTH@ 6
---INS VariableDeclarationStatement@@String uri=catalog.asEndpointUri("netty4-http",map); @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5448 @LENGTH@ 55
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String uri=catalog.asEndpointUri("netty4-http",map); @AT@ 5448 @LENGTH@ 6
------INS VariableDeclarationFragment@@uri=catalog.asEndpointUri("netty4-http",map) @TO@ VariableDeclarationStatement@@String uri=catalog.asEndpointUri("netty4-http",map); @AT@ 5455 @LENGTH@ 47
---------INS SimpleName@@uri @TO@ VariableDeclarationFragment@@uri=catalog.asEndpointUri("netty4-http",map) @AT@ 5455 @LENGTH@ 3
---------INS MethodInvocation@@catalog.asEndpointUri("netty4-http",map) @TO@ VariableDeclarationFragment@@uri=catalog.asEndpointUri("netty4-http",map) @AT@ 5461 @LENGTH@ 41
------------INS SimpleName@@Name:catalog @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",map) @AT@ 5461 @LENGTH@ 7
------------INS SimpleName@@MethodName:asEndpointUri:["netty4-http", map] @TO@ MethodInvocation@@catalog.asEndpointUri("netty4-http",map) @AT@ 5469 @LENGTH@ 33
---------------INS StringLiteral@@"netty4-http" @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", map] @AT@ 5483 @LENGTH@ 13
---------------INS SimpleName@@map @TO@ SimpleName@@MethodName:asEndpointUri:["netty4-http", map] @AT@ 5498 @LENGTH@ 3
---INS ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:localhost:8080/foo/bar?disconnect=true",uri) @TO@ MethodDeclaration@@public, void, MethodName:testAsEndpointUriNetty4http, Exception,  @AT@ 5512 @LENGTH@ 77
------INS MethodInvocation@@assertEquals("netty4-http:http:localhost:8080/foo/bar?disconnect=true",uri) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("netty4-http:http:localhost:8080/foo/bar?disconnect=true",uri) @AT@ 5512 @LENGTH@ 76
---------INS SimpleName@@MethodName:assertEquals:["netty4-http:http:localhost:8080/foo/bar?disconnect=true", uri] @TO@ MethodInvocation@@assertEquals("netty4-http:http:localhost:8080/foo/bar?disconnect=true",uri) @AT@ 5512 @LENGTH@ 76
------------INS StringLiteral@@"netty4-http:http:localhost:8080/foo/bar?disconnect=true" @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:localhost:8080/foo/bar?disconnect=true", uri] @AT@ 5525 @LENGTH@ 57
------------INS SimpleName@@uri @TO@ SimpleName@@MethodName:assertEquals:["netty4-http:http:localhost:8080/foo/bar?disconnect=true", uri] @AT@ 5584 @LENGTH@ 3


INS MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @TO@ TypeDeclaration@@[public]NettyHttpProducerQueryParamTest, BaseNettyTest @AT@ 2200 @LENGTH@ 772
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2200 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2207 @LENGTH@ 4
---INS SimpleName@@MethodName:testQueryParametersWithDynamicPath @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2212 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2256 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2372 @LENGTH@ 339
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @AT@ 2372 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @AT@ 2381 @LENGTH@ 329
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2381 @LENGTH@ 8
---------INS MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2392 @LENGTH@ 318
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2392 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @TO@ MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2401 @LENGTH@ 309
---------------INS MethodInvocation@@url.replace("/cheese","") @TO@ SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @AT@ 2409 @LENGTH@ 26
------------------INS SimpleName@@Name:url @TO@ MethodInvocation@@url.replace("/cheese","") @AT@ 2409 @LENGTH@ 3
------------------INS SimpleName@@MethodName:replace:["/cheese", ""] @TO@ MethodInvocation@@url.replace("/cheese","") @AT@ 2413 @LENGTH@ 22
---------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 2421 @LENGTH@ 9
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 2432 @LENGTH@ 2
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @AT@ 2437 @LENGTH@ 272
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2437 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2441 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2453 @LENGTH@ 256
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2467 @LENGTH@ 232
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2467 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2474 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2479 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2487 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2487 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2496 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2513 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2541 @LENGTH@ 58
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2541 @LENGTH@ 57
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2541 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2541 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2558 @LENGTH@ 40
---------------------------------INS QualifiedName@@Exchange.HTTP_PATH @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 2568 @LENGTH@ 18
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 2568 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_PATH @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 2577 @LENGTH@ 9
---------------------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 2588 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2616 @LENGTH@ 69
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2616 @LENGTH@ 68
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2616 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2616 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2633 @LENGTH@ 51
---------------------------------INS QualifiedName@@Exchange.HTTP_QUERY @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @AT@ 2643 @LENGTH@ 19
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 2643 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_QUERY @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 2652 @LENGTH@ 10
---------------------------------INS StringLiteral@@"quote=Camel rocks" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @AT@ 2664 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2720 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @AT@ 2720 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[exchange] @TO@ MethodInvocation@@assertNotNull(exchange) @AT@ 2720 @LENGTH@ 23
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertNotNull:[exchange] @AT@ 2734 @LENGTH@ 8
---INS VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2754 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 2754 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 2761 @LENGTH@ 46
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 2761 @LENGTH@ 4
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 2768 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2768 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2768 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2786 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 2794 @LENGTH@ 12
---INS VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2817 @LENGTH@ 51
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 2817 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 2817 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2821 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2824 @LENGTH@ 1
------INS VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 2827 @LENGTH@ 40
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 2827 @LENGTH@ 7
---------INS MethodInvocation@@exchange.getOut().getHeaders() @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 2837 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2837 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2837 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2855 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2878 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("Bye World",body) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @AT@ 2878 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["Bye World", body] @TO@ MethodInvocation@@assertEquals("Bye World",body) @AT@ 2878 @LENGTH@ 31
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 2891 @LENGTH@ 11
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 2904 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2919 @LENGTH@ 47
------INS MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @AT@ 2919 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @TO@ MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @AT@ 2919 @LENGTH@ 46
------------INS StringLiteral@@"Carlsberg" @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 2932 @LENGTH@ 11
------------INS MethodInvocation@@headers.get("beer") @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 2945 @LENGTH@ 19
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("beer") @AT@ 2945 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["beer"] @TO@ MethodInvocation@@headers.get("beer") @AT@ 2953 @LENGTH@ 11
------------------INS StringLiteral@@"beer" @TO@ SimpleName@@MethodName:get:["beer"] @AT@ 2957 @LENGTH@ 6


DEL ExpressionStatement@@MethodInvocation:TransformUtils.transformModel(legacyModel) @AT@ 2168 @LENGTH@ 43
---DEL MethodInvocation@@TransformUtils.transformModel(legacyModel) @AT@ 2168 @LENGTH@ 42
------DEL SimpleName@@Name:TransformUtils @AT@ 2168 @LENGTH@ 14
------DEL SimpleName@@MethodName:transformModel:[legacyModel] @AT@ 2183 @LENGTH@ 27
---------DEL SimpleName@@legacyModel @AT@ 2198 @LENGTH@ 11


INS IfStatement@@if (context.getRunningMode() == RunningMode.NORMAL) {  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @TO@ MethodDeclaration@@protected, void, MethodName:executeRuntimeStep, OperationContext context, ModelNode operation, OperationFailedException,  @AT@ 2740 @LENGTH@ 275
---INS InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @TO@ IfStatement@@if (context.getRunningMode() == RunningMode.NORMAL) {  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @AT@ 2744 @LENGTH@ 46
------INS MethodInvocation@@context.getRunningMode() @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2744 @LENGTH@ 24
---------INS SimpleName@@Name:context @TO@ MethodInvocation@@context.getRunningMode() @AT@ 2744 @LENGTH@ 7
---------INS SimpleName@@MethodName:getRunningMode:[] @TO@ MethodInvocation@@context.getRunningMode() @AT@ 2752 @LENGTH@ 16
------INS Operator@@== @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2768 @LENGTH@ 2
------INS QualifiedName@@RunningMode.NORMAL @TO@ InfixExpression@@context.getRunningMode() == RunningMode.NORMAL @AT@ 2772 @LENGTH@ 18
---------INS SimpleName@@RunningMode @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 2772 @LENGTH@ 11
---------INS SimpleName@@NORMAL @TO@ QualifiedName@@RunningMode.NORMAL @AT@ 2784 @LENGTH@ 6
---INS Block@@ThenBody:{  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @TO@ IfStatement@@if (context.getRunningMode() == RunningMode.NORMAL) {  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @AT@ 2792 @LENGTH@ 223
------MOV VariableDeclarationStatement@@ServiceController<?> serviceController=getService(context,operation); @TO@ Block@@ThenBody:{  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @AT@ 2696 @LENGTH@ 72
------MOV VariableDeclarationStatement@@final Service<?> service=serviceController.getService(); @TO@ Block@@ThenBody:{  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @AT@ 2777 @LENGTH@ 58
------MOV ExpressionStatement@@MethodInvocation:setResult(context,attributeName,service) @TO@ Block@@ThenBody:{  ServiceController<?> serviceController=getService(context,operation);  final Service<?> service=serviceController.getService();  setResult(context,attributeName,service);} @AT@ 2845 @LENGTH@ 43


INS FieldDeclaration@@static, final, String, [JMX_CAPABILITY_NAME="org.wildfly.management.jmx"] @TO@ TypeDeclaration@@[public]JMXSubsystemRootResource, SimpleResourceDefinition @AT@ 3807 @LENGTH@ 71
---INS Modifier@@static @TO@ FieldDeclaration@@static, final, String, [JMX_CAPABILITY_NAME="org.wildfly.management.jmx"] @AT@ 3807 @LENGTH@ 6
---INS Modifier@@final @TO@ FieldDeclaration@@static, final, String, [JMX_CAPABILITY_NAME="org.wildfly.management.jmx"] @AT@ 3814 @LENGTH@ 5
---INS SimpleType@@String @TO@ FieldDeclaration@@static, final, String, [JMX_CAPABILITY_NAME="org.wildfly.management.jmx"] @AT@ 3820 @LENGTH@ 6
---INS VariableDeclarationFragment@@JMX_CAPABILITY_NAME="org.wildfly.management.jmx" @TO@ FieldDeclaration@@static, final, String, [JMX_CAPABILITY_NAME="org.wildfly.management.jmx"] @AT@ 3827 @LENGTH@ 50
------INS SimpleName@@JMX_CAPABILITY_NAME @TO@ VariableDeclarationFragment@@JMX_CAPABILITY_NAME="org.wildfly.management.jmx" @AT@ 3827 @LENGTH@ 19
------INS StringLiteral@@"org.wildfly.management.jmx" @TO@ VariableDeclarationFragment@@JMX_CAPABILITY_NAME="org.wildfly.management.jmx" @AT@ 3849 @LENGTH@ 28


INS ExpressionStatement@@MethodInvocation:System.out.println(json) @TO@ MethodDeclaration@@public, void, MethodName:testComponentConfiguration, Exception,  @AT@ 1755 @LENGTH@ 25
---INS MethodInvocation@@System.out.println(json) @TO@ ExpressionStatement@@MethodInvocation:System.out.println(json) @AT@ 1755 @LENGTH@ 24
------INS QualifiedName@@Name:System.out @TO@ MethodInvocation@@System.out.println(json) @AT@ 1755 @LENGTH@ 10
------INS SimpleName@@MethodName:println:[json] @TO@ MethodInvocation@@System.out.println(json) @AT@ 1766 @LENGTH@ 13
---------INS SimpleName@@json @TO@ SimpleName@@MethodName:println:[json] @AT@ 1774 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:ts.deallocateTask(task,succeeded,endReason) @TO@ MethodInvocation:ts.deallocateTask(task,succeeded,endReason,null) @AT@ 14627 @LENGTH@ 46
---UPD MethodInvocation@@ts.deallocateTask(task,succeeded,endReason) @TO@ ts.deallocateTask(task,succeeded,endReason,null) @AT@ 14627 @LENGTH@ 45
------UPD SimpleName@@MethodName:deallocateTask:[task, succeeded, endReason] @TO@ MethodName:deallocateTask:[task, succeeded, endReason, null] @AT@ 14630 @LENGTH@ 42
---------INS NullLiteral@@null @TO@ SimpleName@@MethodName:deallocateTask:[task, succeeded, endReason] @AT@ 14673 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1887 @LENGTH@ 95
---UPD MethodInvocation@@assertTrue(json.contains("\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\"")) @TO@ assertTrue(json.contains("\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")) @AT@ 1887 @LENGTH@ 94
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\"")] @TO@ MethodName:assertTrue:[json.contains("\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"")] @AT@ 1887 @LENGTH@ 94
---------UPD MethodInvocation@@json.contains("\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\"") @TO@ json.contains("\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"") @AT@ 1898 @LENGTH@ 82
------------UPD SimpleName@@MethodName:contains:["\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\""] @TO@ MethodName:contains:["\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\""] @AT@ 1903 @LENGTH@ 77
---------------UPD StringLiteral@@"\"cacheScript\": { \"kind\": \"parameter\", \"type\": \"boolean\"" @TO@ "\"script\": { \"kind\": \"parameter\", \"group\": \"producer\", \"type\": \"string\"" @AT@ 1912 @LENGTH@ 67


UPD ExpressionStatement@@MethodInvocation:fb.setClusterId("hadoop-" + clusterInfo.hashCode()) @TO@ MethodInvocation:fb.setClusterId("hadoop-" + clusterInfo.getId() + "-"+ clusterInfo.hashCode()) @AT@ 2794 @LENGTH@ 52
---UPD MethodInvocation@@fb.setClusterId("hadoop-" + clusterInfo.hashCode()) @TO@ fb.setClusterId("hadoop-" + clusterInfo.getId() + "-"+ clusterInfo.hashCode()) @AT@ 2794 @LENGTH@ 51
------UPD SimpleName@@MethodName:setClusterId:["hadoop-" + clusterInfo.hashCode()] @TO@ MethodName:setClusterId:["hadoop-" + clusterInfo.getId() + "-"+ clusterInfo.hashCode()] @AT@ 2797 @LENGTH@ 48
---------UPD InfixExpression@@"hadoop-" + clusterInfo.hashCode() @TO@ "hadoop-" + clusterInfo.getId() + "-"+ clusterInfo.hashCode() @AT@ 2810 @LENGTH@ 34
------------INS MethodInvocation@@clusterInfo.getId() @TO@ InfixExpression@@"hadoop-" + clusterInfo.hashCode() @AT@ 2822 @LENGTH@ 19
---------------INS SimpleName@@Name:clusterInfo @TO@ MethodInvocation@@clusterInfo.getId() @AT@ 2822 @LENGTH@ 11
---------------INS SimpleName@@MethodName:getId:[] @TO@ MethodInvocation@@clusterInfo.getId() @AT@ 2834 @LENGTH@ 7
------------INS StringLiteral@@"-" @TO@ InfixExpression@@"hadoop-" + clusterInfo.hashCode() @AT@ 2844 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://http://www.google.com/search").to("mock:results") @TO@ MethodInvocation:from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://www.google.com/search").to("mock:results") @AT@ 2624 @LENGTH@ 165
---UPD MethodInvocation@@from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://http://www.google.com/search").to("mock:results") @TO@ from("direct:start").setHeader(Exchange.HTTP_QUERY,constant("hl=en&q=activemq")).to("http2://www.google.com/search").to("mock:results") @AT@ 2624 @LENGTH@ 164
------UPD MethodInvocation@@MethodName:to:["http2://http://www.google.com/search"] @TO@ MethodName:to:["http2://www.google.com/search"] @AT@ 2624 @LENGTH@ 145
---------UPD StringLiteral@@"http2://http://www.google.com/search" @TO@ "http2://www.google.com/search" @AT@ 2730 @LENGTH@ 38


DEL ExpressionStatement@@MethodInvocation:in.setHeader(Exchange.CONTENT_ENCODING,"UTF8") @AT@ 6332 @LENGTH@ 48
---DEL MethodInvocation@@in.setHeader(Exchange.CONTENT_ENCODING,"UTF8") @AT@ 6332 @LENGTH@ 47
------DEL SimpleName@@Name:in @AT@ 6332 @LENGTH@ 2
------DEL SimpleName@@MethodName:setHeader:[Exchange.CONTENT_ENCODING, "UTF8"] @AT@ 6335 @LENGTH@ 44
---------DEL QualifiedName@@Exchange.CONTENT_ENCODING @AT@ 6345 @LENGTH@ 25
------------DEL SimpleName@@Exchange @AT@ 6345 @LENGTH@ 8
------------DEL SimpleName@@CONTENT_ENCODING @AT@ 6354 @LENGTH@ 16
---------DEL StringLiteral@@"UTF8" @AT@ 6372 @LENGTH@ 6


UPD MethodDeclaration@@public, voidMethodName:BytesBytesMultiHashMap, int initialCapacity, float loadFactor, int wbSize, long memUsage,  @TO@ public, voidMethodName:BytesBytesMultiHashMap, int initialCapacity, float loadFactor, int wbSize, long maxProbeSize,  @AT@ 8325 @LENGTH@ 1191
---UPD SingleVariableDeclaration@@long memUsage @TO@ long maxProbeSize @AT@ 8412 @LENGTH@ 13
------UPD SimpleName@@memUsage @TO@ maxProbeSize @AT@ 8417 @LENGTH@ 8
---UPD VariableDeclarationStatement@@int maxCapacity=(memUsage <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,memUsage / 8); @TO@ int maxCapacity=(maxProbeSize <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,maxProbeSize / 8); @AT@ 8807 @LENGTH@ 124
------UPD VariableDeclarationFragment@@maxCapacity=(memUsage <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,memUsage / 8) @TO@ maxCapacity=(maxProbeSize <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,maxProbeSize / 8) @AT@ 8811 @LENGTH@ 119
---------UPD ConditionalExpression@@(memUsage <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,memUsage / 8) @TO@ (maxProbeSize <= 0) ? DEFAULT_MAX_CAPACITY : (int)Math.min((long)DEFAULT_MAX_CAPACITY,maxProbeSize / 8) @AT@ 8826 @LENGTH@ 104
------------UPD ParenthesizedExpression@@(memUsage <= 0) @TO@ (maxProbeSize <= 0) @AT@ 8826 @LENGTH@ 15
---------------UPD InfixExpression@@memUsage <= 0 @TO@ maxProbeSize <= 0 @AT@ 8827 @LENGTH@ 13
------------------UPD SimpleName@@memUsage @TO@ maxProbeSize @AT@ 8827 @LENGTH@ 8
------------UPD CastExpression@@(int)Math.min((long)DEFAULT_MAX_CAPACITY,memUsage / 8) @TO@ (int)Math.min((long)DEFAULT_MAX_CAPACITY,maxProbeSize / 8) @AT@ 8875 @LENGTH@ 55
---------------UPD MethodInvocation@@Math.min((long)DEFAULT_MAX_CAPACITY,memUsage / 8) @TO@ Math.min((long)DEFAULT_MAX_CAPACITY,maxProbeSize / 8) @AT@ 8880 @LENGTH@ 50
------------------UPD SimpleName@@MethodName:min:[(long)DEFAULT_MAX_CAPACITY, memUsage / 8] @TO@ MethodName:min:[(long)DEFAULT_MAX_CAPACITY, maxProbeSize / 8] @AT@ 8885 @LENGTH@ 45
---------------------UPD InfixExpression@@memUsage / 8 @TO@ maxProbeSize / 8 @AT@ 8917 @LENGTH@ 12
------------------------UPD SimpleName@@memUsage @TO@ maxProbeSize @AT@ 8917 @LENGTH@ 8
---INS IfStatement@@if (maxCapacity < DEFAULT_MIN_MAX_CAPACITY) {  maxCapacity=DEFAULT_MIN_MAX_CAPACITY;} @TO@ MethodDeclaration@@public, voidMethodName:BytesBytesMultiHashMap, int initialCapacity, float loadFactor, int wbSize, long memUsage,  @AT@ 9069 @LENGTH@ 97
------INS InfixExpression@@maxCapacity < DEFAULT_MIN_MAX_CAPACITY @TO@ IfStatement@@if (maxCapacity < DEFAULT_MIN_MAX_CAPACITY) {  maxCapacity=DEFAULT_MIN_MAX_CAPACITY;} @AT@ 9073 @LENGTH@ 38
---------INS SimpleName@@maxCapacity @TO@ InfixExpression@@maxCapacity < DEFAULT_MIN_MAX_CAPACITY @AT@ 9073 @LENGTH@ 11
---------INS Operator@@< @TO@ InfixExpression@@maxCapacity < DEFAULT_MIN_MAX_CAPACITY @AT@ 9084 @LENGTH@ 1
---------INS SimpleName@@DEFAULT_MIN_MAX_CAPACITY @TO@ InfixExpression@@maxCapacity < DEFAULT_MIN_MAX_CAPACITY @AT@ 9087 @LENGTH@ 24
------INS Block@@ThenBody:{  maxCapacity=DEFAULT_MIN_MAX_CAPACITY;} @TO@ IfStatement@@if (maxCapacity < DEFAULT_MIN_MAX_CAPACITY) {  maxCapacity=DEFAULT_MIN_MAX_CAPACITY;} @AT@ 9113 @LENGTH@ 53
---------INS ExpressionStatement@@Assignment:maxCapacity=DEFAULT_MIN_MAX_CAPACITY @TO@ Block@@ThenBody:{  maxCapacity=DEFAULT_MIN_MAX_CAPACITY;} @AT@ 9121 @LENGTH@ 39
------------INS Assignment@@maxCapacity=DEFAULT_MIN_MAX_CAPACITY @TO@ ExpressionStatement@@Assignment:maxCapacity=DEFAULT_MIN_MAX_CAPACITY @AT@ 9121 @LENGTH@ 38
---------------INS SimpleName@@maxCapacity @TO@ Assignment@@maxCapacity=DEFAULT_MIN_MAX_CAPACITY @AT@ 9121 @LENGTH@ 11
---------------INS Operator@@= @TO@ Assignment@@maxCapacity=DEFAULT_MIN_MAX_CAPACITY @AT@ 9132 @LENGTH@ 1
---------------INS SimpleName@@DEFAULT_MIN_MAX_CAPACITY @TO@ Assignment@@maxCapacity=DEFAULT_MIN_MAX_CAPACITY @AT@ 9135 @LENGTH@ 24


DEL MethodDeclaration@@public, void, MethodName:init, HiveConf conf, Exception,  @AT@ 1124 @LENGTH@ 49
---DEL Modifier@@public @AT@ 1124 @LENGTH@ 6
---DEL PrimitiveType@@void @AT@ 1131 @LENGTH@ 4
---DEL SimpleName@@MethodName:init @AT@ 1136 @LENGTH@ 4
---DEL SingleVariableDeclaration@@HiveConf conf @AT@ 1141 @LENGTH@ 13
------DEL SimpleType@@HiveConf @AT@ 1141 @LENGTH@ 8
------DEL SimpleName@@conf @AT@ 1150 @LENGTH@ 4
---DEL SimpleType@@Exception @AT@ 1163 @LENGTH@ 9


UPD TypeDeclaration@@[@UriEndpoint(scheme="netty4-http",extendsScheme="netty4",title="Netty4 HTTP",syntax="netty4-http:host:port/path",consumerClass=NettyHttpConsumer.class,label="http"), public]NettyHttpEndpoint, NettyEndpoint[HeaderFilterStrategyAware] @TO@ [@UriEndpoint(scheme="netty4-http",extendsScheme="netty4",title="Netty4 HTTP",syntax="netty4-http:protocol:host:port/path",consumerClass=NettyHttpConsumer.class,label="http"), public]NettyHttpEndpoint, NettyEndpoint[HeaderFilterStrategyAware] @AT@ 1667 @LENGTH@ 7378
---UPD NormalAnnotation@@@UriEndpoint(scheme="netty4-http",extendsScheme="netty4",title="Netty4 HTTP",syntax="netty4-http:host:port/path",consumerClass=NettyHttpConsumer.class,label="http") @TO@ @UriEndpoint(scheme="netty4-http",extendsScheme="netty4",title="Netty4 HTTP",syntax="netty4-http:protocol:host:port/path",consumerClass=NettyHttpConsumer.class,label="http") @AT@ 1667 @LENGTH@ 189


UPD ExpressionStatement@@MethodInvocation:context.stopRoute("test",0,TimeUnit.MILLISECONDS) @TO@ MethodInvocation:context.stopRoute("test",1000,TimeUnit.MILLISECONDS) @AT@ 2612 @LENGTH@ 52
---UPD MethodInvocation@@context.stopRoute("test",0,TimeUnit.MILLISECONDS) @TO@ context.stopRoute("test",1000,TimeUnit.MILLISECONDS) @AT@ 2612 @LENGTH@ 51
------UPD SimpleName@@MethodName:stopRoute:["test", 0, TimeUnit.MILLISECONDS] @TO@ MethodName:stopRoute:["test", 1000, TimeUnit.MILLISECONDS] @AT@ 2620 @LENGTH@ 43
---------UPD NumberLiteral@@0 @TO@ 1000 @AT@ 2638 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"")) @AT@ 2353 @LENGTH@ 200
---UPD MethodInvocation@@assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")) @TO@ assertTrue(json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"")) @AT@ 2353 @LENGTH@ 199
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"")] @TO@ MethodName:assertTrue:[json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"")] @AT@ 2353 @LENGTH@ 199
---------UPD MethodInvocation@@json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"") @TO@ json.contains("\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"") @AT@ 2364 @LENGTH@ 187
------------UPD SimpleName@@MethodName:contains:["\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\""] @TO@ MethodName:contains:["\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\""] @AT@ 2369 @LENGTH@ 182
---------------INS InfixExpression@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"" @TO@ SimpleName@@MethodName:contains:["\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\""] @AT@ 2378 @LENGTH@ 193
------------------INS StringLiteral@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " @TO@ InfixExpression@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"" @AT@ 2378 @LENGTH@ 154
------------------INS Operator@@+ @TO@ InfixExpression@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"" @AT@ 2532 @LENGTH@ 1
------------------INS StringLiteral@@"\"value\": \"foo\"" @TO@ InfixExpression@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", " + "\"value\": \"foo\"" @AT@ 2551 @LENGTH@ 20
---------------DEL StringLiteral@@"\"onConsume\": { \"kind\": \"parameter\", \"label\": \"consumer\", \"type\": \"string\", \"javaType\": \"java.lang.String\", \"deprecated\": \"false\", \"value\": \"foo\"" @AT@ 2378 @LENGTH@ 172


UPD MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @TO@ public, static, ResourceDescription, MethodName:defaultFor, String rel, String name, Class<?> type,  @AT@ 1759 @LENGTH@ 273
---UPD VariableDeclarationStatement@@String message=String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,property.getName()); @TO@ String message=String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,name); @AT@ 1853 @LENGTH@ 88
------UPD VariableDeclarationFragment@@message=String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,property.getName()) @TO@ message=String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,name) @AT@ 1860 @LENGTH@ 80
---------UPD MethodInvocation@@String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,property.getName()) @TO@ String.format("%s.%s.%s",DEFAULT_KEY_PREFIX,rel,name) @AT@ 1870 @LENGTH@ 70
------------UPD SimpleName@@MethodName:format:["%s.%s.%s", DEFAULT_KEY_PREFIX, rel, property.getName()] @TO@ MethodName:format:["%s.%s.%s", DEFAULT_KEY_PREFIX, rel, name] @AT@ 1877 @LENGTH@ 63
---------------DEL MethodInvocation@@property.getName() @AT@ 1921 @LENGTH@ 18
------------------DEL SimpleName@@Name:property @AT@ 1921 @LENGTH@ 8
------------------DEL SimpleName@@MethodName:getName:[] @AT@ 1930 @LENGTH@ 9
---------------INS SimpleName@@name @TO@ SimpleName@@MethodName:format:["%s.%s.%s", DEFAULT_KEY_PREFIX, rel, property.getName()] @AT@ 2079 @LENGTH@ 4
---UPD ReturnStatement@@ClassInstanceCreation:new TypedResourceDescription(message,DEFAULT_MEDIA_TYPE,property.getType()) @TO@ ClassInstanceCreation:new TypedResourceDescription(message,DEFAULT_MEDIA_TYPE,type) @AT@ 1944 @LENGTH@ 85
------UPD ClassInstanceCreation@@TypedResourceDescription[message, DEFAULT_MEDIA_TYPE, property.getType()] @TO@ TypedResourceDescription[message, DEFAULT_MEDIA_TYPE, type] @AT@ 1951 @LENGTH@ 77
---------DEL MethodInvocation@@property.getType() @AT@ 2009 @LENGTH@ 18
------------DEL SimpleName@@Name:property @AT@ 2009 @LENGTH@ 8
------------DEL SimpleName@@MethodName:getType:[] @AT@ 2018 @LENGTH@ 9
---------INS SimpleName@@type @TO@ ClassInstanceCreation@@TypedResourceDescription[message, DEFAULT_MEDIA_TYPE, property.getType()] @AT@ 2153 @LENGTH@ 4
---INS SingleVariableDeclaration@@String name @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1978 @LENGTH@ 11
------INS SimpleType@@String @TO@ SingleVariableDeclaration@@String name @AT@ 1978 @LENGTH@ 6
------INS SimpleName@@name @TO@ SingleVariableDeclaration@@String name @AT@ 1985 @LENGTH@ 4
---INS SingleVariableDeclaration@@Class<?> type @TO@ MethodDeclaration@@public, static, ResourceDescription, MethodName:defaultFor, String rel, PersistentProperty<?> property,  @AT@ 1991 @LENGTH@ 13
------INS ParameterizedType@@Class<?> @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 1991 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<?> @AT@ 1991 @LENGTH@ 5
---------INS WildcardType@@? @TO@ ParameterizedType@@Class<?> @AT@ 1997 @LENGTH@ 1
------INS SimpleName@@type @TO@ SingleVariableDeclaration@@Class<?> type @AT@ 2000 @LENGTH@ 4


UPD ExpressionStatement@@MethodInvocation:Assert.notNull(bean,"Targte bean must not be null!") @TO@ MethodInvocation:Assert.notNull(bean,"Target bean must not be null!") @AT@ 11995 @LENGTH@ 54
---UPD MethodInvocation@@Assert.notNull(bean,"Targte bean must not be null!") @TO@ Assert.notNull(bean,"Target bean must not be null!") @AT@ 11995 @LENGTH@ 53
------UPD SimpleName@@MethodName:notNull:[bean, "Targte bean must not be null!"] @TO@ MethodName:notNull:[bean, "Target bean must not be null!"] @AT@ 12002 @LENGTH@ 46
---------UPD StringLiteral@@"Targte bean must not be null!" @TO@ "Target bean must not be null!" @AT@ 12016 @LENGTH@ 31


INS MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @TO@ TypeDeclaration@@[public]NettyHttpProducerQueryParamTest, BaseNettyTest @AT@ 2202 @LENGTH@ 772
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2202 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2209 @LENGTH@ 4
---INS SimpleName@@MethodName:testQueryParametersWithDynamicPath @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2214 @LENGTH@ 34
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2258 @LENGTH@ 9
---INS VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2374 @LENGTH@ 339
------INS SimpleType@@Exchange @TO@ VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @AT@ 2374 @LENGTH@ 8
------INS VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @TO@ VariableDeclarationStatement@@Exchange exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
); @AT@ 2383 @LENGTH@ 329
---------INS SimpleName@@exchange @TO@ VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2383 @LENGTH@ 8
---------INS MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @TO@ VariableDeclarationFragment@@exchange=template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2394 @LENGTH@ 318
------------INS SimpleName@@Name:template @TO@ MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2394 @LENGTH@ 8
------------INS SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @TO@ MethodInvocation@@template.request(url.replace("/cheese",""),new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
) @AT@ 2403 @LENGTH@ 309
---------------INS MethodInvocation@@url.replace("/cheese","") @TO@ SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @AT@ 2411 @LENGTH@ 26
------------------INS SimpleName@@Name:url @TO@ MethodInvocation@@url.replace("/cheese","") @AT@ 2411 @LENGTH@ 3
------------------INS SimpleName@@MethodName:replace:["/cheese", ""] @TO@ MethodInvocation@@url.replace("/cheese","") @AT@ 2415 @LENGTH@ 22
---------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 2423 @LENGTH@ 9
---------------------INS StringLiteral@@"" @TO@ SimpleName@@MethodName:replace:["/cheese", ""] @AT@ 2434 @LENGTH@ 2
---------------INS ClassInstanceCreation@@Processor[] @TO@ SimpleName@@MethodName:request:[url.replace("/cheese",""), new Processor(){
  public void process(  Exchange exchange) throws Exception {
    exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese");
    exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks");
  }
}
] @AT@ 2439 @LENGTH@ 272
------------------INS New@@new @TO@ ClassInstanceCreation@@Processor[] @AT@ 2439 @LENGTH@ 3
------------------INS SimpleType@@Processor @TO@ ClassInstanceCreation@@Processor[] @AT@ 2443 @LENGTH@ 9
------------------INS AnonymousClassDeclaration@@AnonymousClass @TO@ ClassInstanceCreation@@Processor[] @AT@ 2455 @LENGTH@ 256
---------------------INS MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @TO@ AnonymousClassDeclaration@@AnonymousClass @AT@ 2469 @LENGTH@ 232
------------------------INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2469 @LENGTH@ 6
------------------------INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2476 @LENGTH@ 4
------------------------INS SimpleName@@MethodName:process @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2481 @LENGTH@ 7
------------------------INS SingleVariableDeclaration@@Exchange exchange @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2489 @LENGTH@ 17
---------------------------INS SimpleType@@Exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2489 @LENGTH@ 8
---------------------------INS SimpleName@@exchange @TO@ SingleVariableDeclaration@@Exchange exchange @AT@ 2498 @LENGTH@ 8
------------------------INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2515 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2543 @LENGTH@ 58
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2543 @LENGTH@ 57
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2543 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2543 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_PATH,"/cheese") @AT@ 2560 @LENGTH@ 40
---------------------------------INS QualifiedName@@Exchange.HTTP_PATH @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 2570 @LENGTH@ 18
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 2570 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_PATH @TO@ QualifiedName@@Exchange.HTTP_PATH @AT@ 2579 @LENGTH@ 9
---------------------------------INS StringLiteral@@"/cheese" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_PATH, "/cheese"] @AT@ 2590 @LENGTH@ 9
------------------------INS ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, Exception,  @AT@ 2618 @LENGTH@ 69
---------------------------INS MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @TO@ ExpressionStatement@@MethodInvocation:exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2618 @LENGTH@ 68
------------------------------INS MethodInvocation@@MethodName:getIn:[] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2618 @LENGTH@ 16
------------------------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2618 @LENGTH@ 8
------------------------------INS SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @TO@ MethodInvocation@@exchange.getIn().setHeader(Exchange.HTTP_QUERY,"quote=Camel rocks") @AT@ 2635 @LENGTH@ 51
---------------------------------INS QualifiedName@@Exchange.HTTP_QUERY @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @AT@ 2645 @LENGTH@ 19
------------------------------------INS SimpleName@@Exchange @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 2645 @LENGTH@ 8
------------------------------------INS SimpleName@@HTTP_QUERY @TO@ QualifiedName@@Exchange.HTTP_QUERY @AT@ 2654 @LENGTH@ 10
---------------------------------INS StringLiteral@@"quote=Camel rocks" @TO@ SimpleName@@MethodName:setHeader:[Exchange.HTTP_QUERY, "quote=Camel rocks"] @AT@ 2666 @LENGTH@ 19
---INS ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2722 @LENGTH@ 24
------INS MethodInvocation@@assertNotNull(exchange) @TO@ ExpressionStatement@@MethodInvocation:assertNotNull(exchange) @AT@ 2722 @LENGTH@ 23
---------INS SimpleName@@MethodName:assertNotNull:[exchange] @TO@ MethodInvocation@@assertNotNull(exchange) @AT@ 2722 @LENGTH@ 23
------------INS SimpleName@@exchange @TO@ SimpleName@@MethodName:assertNotNull:[exchange] @AT@ 2736 @LENGTH@ 8
---INS VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2756 @LENGTH@ 54
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 2756 @LENGTH@ 6
------INS VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @TO@ VariableDeclarationStatement@@String body=exchange.getOut().getBody(String.class); @AT@ 2763 @LENGTH@ 46
---------INS SimpleName@@body @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 2763 @LENGTH@ 4
---------INS MethodInvocation@@exchange.getOut().getBody(String.class) @TO@ VariableDeclarationFragment@@body=exchange.getOut().getBody(String.class) @AT@ 2770 @LENGTH@ 39
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2770 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2770 @LENGTH@ 8
------------INS SimpleName@@MethodName:getBody:[String.class] @TO@ MethodInvocation@@exchange.getOut().getBody(String.class) @AT@ 2788 @LENGTH@ 21
---------------INS TypeLiteral@@String.class @TO@ SimpleName@@MethodName:getBody:[String.class] @AT@ 2796 @LENGTH@ 12
---INS VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2819 @LENGTH@ 51
------INS ParameterizedType@@Map<?,?> @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 2819 @LENGTH@ 9
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<?,?> @AT@ 2819 @LENGTH@ 3
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2823 @LENGTH@ 1
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<?,?> @AT@ 2826 @LENGTH@ 1
------INS VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @TO@ VariableDeclarationStatement@@Map<?,?> headers=exchange.getOut().getHeaders(); @AT@ 2829 @LENGTH@ 40
---------INS SimpleName@@headers @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 2829 @LENGTH@ 7
---------INS MethodInvocation@@exchange.getOut().getHeaders() @TO@ VariableDeclarationFragment@@headers=exchange.getOut().getHeaders() @AT@ 2839 @LENGTH@ 30
------------INS MethodInvocation@@MethodName:getOut:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2839 @LENGTH@ 17
------------INS SimpleName@@Name:exchange @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2839 @LENGTH@ 8
------------INS SimpleName@@MethodName:getHeaders:[] @TO@ MethodInvocation@@exchange.getOut().getHeaders() @AT@ 2857 @LENGTH@ 12
---INS ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2880 @LENGTH@ 32
------INS MethodInvocation@@assertEquals("Bye World",body) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Bye World",body) @AT@ 2880 @LENGTH@ 31
---------INS SimpleName@@MethodName:assertEquals:["Bye World", body] @TO@ MethodInvocation@@assertEquals("Bye World",body) @AT@ 2880 @LENGTH@ 31
------------INS StringLiteral@@"Bye World" @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 2893 @LENGTH@ 11
------------INS SimpleName@@body @TO@ SimpleName@@MethodName:assertEquals:["Bye World", body] @AT@ 2906 @LENGTH@ 4
---INS ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @TO@ MethodDeclaration@@public, void, MethodName:testQueryParametersWithDynamicPath, Exception,  @AT@ 2921 @LENGTH@ 47
------INS MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @TO@ ExpressionStatement@@MethodInvocation:assertEquals("Carlsberg",headers.get("beer")) @AT@ 2921 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @TO@ MethodInvocation@@assertEquals("Carlsberg",headers.get("beer")) @AT@ 2921 @LENGTH@ 46
------------INS StringLiteral@@"Carlsberg" @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 2934 @LENGTH@ 11
------------INS MethodInvocation@@headers.get("beer") @TO@ SimpleName@@MethodName:assertEquals:["Carlsberg", headers.get("beer")] @AT@ 2947 @LENGTH@ 19
---------------INS SimpleName@@Name:headers @TO@ MethodInvocation@@headers.get("beer") @AT@ 2947 @LENGTH@ 7
---------------INS SimpleName@@MethodName:get:["beer"] @TO@ MethodInvocation@@headers.get("beer") @AT@ 2955 @LENGTH@ 11
------------------INS StringLiteral@@"beer" @TO@ SimpleName@@MethodName:get:["beer"] @AT@ 2959 @LENGTH@ 6


UPD ExpressionStatement@@MethodInvocation:rr.put(ci.getTabAlias(),ci.getInternalName(),ci) @TO@ MethodInvocation:rr.put(inputOpAf.tabAlias,ci.getInternalName(),ci) @AT@ 26012 @LENGTH@ 51
---UPD MethodInvocation@@rr.put(ci.getTabAlias(),ci.getInternalName(),ci) @TO@ rr.put(inputOpAf.tabAlias,ci.getInternalName(),ci) @AT@ 26012 @LENGTH@ 50
------UPD SimpleName@@MethodName:put:[ci.getTabAlias(), ci.getInternalName(), ci] @TO@ MethodName:put:[inputOpAf.tabAlias, ci.getInternalName(), ci] @AT@ 26015 @LENGTH@ 47
---------INS QualifiedName@@inputOpAf.tabAlias @TO@ SimpleName@@MethodName:put:[ci.getTabAlias(), ci.getInternalName(), ci] @AT@ 26019 @LENGTH@ 18
------------INS SimpleName@@inputOpAf @TO@ QualifiedName@@inputOpAf.tabAlias @AT@ 26019 @LENGTH@ 9
------------INS SimpleName@@tabAlias @TO@ QualifiedName@@inputOpAf.tabAlias @AT@ 26029 @LENGTH@ 8
---------DEL MethodInvocation@@ci.getTabAlias() @AT@ 26019 @LENGTH@ 16
------------DEL SimpleName@@Name:ci @AT@ 26019 @LENGTH@ 2
------------DEL SimpleName@@MethodName:getTabAlias:[] @AT@ 26022 @LENGTH@ 13


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1472 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1481 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1490 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1490 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1518 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1521 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1533 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1490 @LENGTH@ 46


UPD MethodDeclaration@@public, void, MethodName:initialize, Subject subject, CallbackHandler callbackHandler, java.util.Map sharedState, java.util.Map options,  @TO@ public, void, MethodName:initialize, Subject subject, CallbackHandler callbackHandler, Map<String,?> sharedState, Map<String,?> options,  @AT@ 1361 @LENGTH@ 180
---UPD SingleVariableDeclaration@@java.util.Map sharedState @TO@ Map<String,?> sharedState @AT@ 1452 @LENGTH@ 25
------DEL SimpleType@@java.util.Map @AT@ 1452 @LENGTH@ 13
------INS ParameterizedType@@Map<String,?> @TO@ SingleVariableDeclaration@@java.util.Map sharedState @AT@ 1475 @LENGTH@ 13
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,?> @AT@ 1475 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,?> @AT@ 1479 @LENGTH@ 6
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<String,?> @AT@ 1486 @LENGTH@ 1
---UPD SingleVariableDeclaration@@java.util.Map options @TO@ Map<String,?> options @AT@ 1488 @LENGTH@ 21
------DEL SimpleType@@java.util.Map @AT@ 1488 @LENGTH@ 13
------INS ParameterizedType@@Map<String,?> @TO@ SingleVariableDeclaration@@java.util.Map options @AT@ 1511 @LENGTH@ 13
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,?> @AT@ 1511 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,?> @AT@ 1515 @LENGTH@ 6
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<String,?> @AT@ 1522 @LENGTH@ 1


UPD ExpressionStatement@@MethodInvocation:Assert.hasText(name,"Parameter must not be null or empty!") @TO@ MethodInvocation:Assert.hasText(name,"Parameter name must not be null or empty!") @AT@ 1385 @LENGTH@ 61
---UPD MethodInvocation@@Assert.hasText(name,"Parameter must not be null or empty!") @TO@ Assert.hasText(name,"Parameter name must not be null or empty!") @AT@ 1385 @LENGTH@ 60
------UPD SimpleName@@MethodName:hasText:[name, "Parameter must not be null or empty!"] @TO@ MethodName:hasText:[name, "Parameter name must not be null or empty!"] @AT@ 1392 @LENGTH@ 53
---------UPD StringLiteral@@"Parameter must not be null or empty!" @TO@ "Parameter name must not be null or empty!" @AT@ 1406 @LENGTH@ 38


UPD FieldDeclaration@@private, static, final, int, [MANAGEMENT_API_MAJOR_VERSION=1] @TO@ private, static, final, int, [MANAGEMENT_API_MAJOR_VERSION=2] @AT@ 2164 @LENGTH@ 58
---UPD VariableDeclarationFragment@@MANAGEMENT_API_MAJOR_VERSION=1 @TO@ MANAGEMENT_API_MAJOR_VERSION=2 @AT@ 2189 @LENGTH@ 32
------UPD NumberLiteral@@1 @TO@ 2 @AT@ 2220 @LENGTH@ 1


UPD TryStatement@@try {  Object replyDestination=getReplyToDestination(message);  sendReply=replyDestination != null && !disableReplyTo;  Destination destination=message.getJMSDestination();  if (sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination)) {    LOG.debug("JMSDestination and JMSReplyTo is the same, will skip sending a reply message to itself: {}",destination);    sendReply=false;  }  final Exchange exchange=createExchange(message,session,replyDestination);  if (eagerLoadingOfProperties) {    exchange.getIn().getHeaders();  }  String correlationId=message.getJMSCorrelationID();  if (correlationId != null) {    LOG.debug("Received Message has JMSCorrelationID [{}]",correlationId);  }  LOG.trace("onMessage.process START");  AsyncCallback callback=new EndpointMessageListenerAsyncCallback(message,exchange,endpoint,sendReply,replyDestination);  boolean forceSync=endpoint.isSynchronous() || endpoint.isTransacted();  if (forceSync || !isAsync()) {    if (LOG.isTraceEnabled()) {      LOG.trace("Processing exchange {} synchronously",exchange.getExchangeId());    }    try {      processor.process(exchange);    } catch (    Exception e) {      exchange.setException(e);    } finally {      callback.done(true);    }  } else {    if (LOG.isTraceEnabled()) {      LOG.trace("Processing exchange {} asynchronously",exchange.getExchangeId());    }    boolean sync=processor.process(exchange,callback);    if (!sync) {      return;    }  }  rce=exchange.getException(RuntimeCamelException.class);} catch (Exception e) {  rce=wrapRuntimeCamelException(e);} @TO@ try {  Object replyDestination=getReplyToDestination(message);  sendReply=replyDestination != null && !disableReplyTo;  Destination destination=JmsMessageHelper.getJMSDestination(message);  if (destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination)) {    LOG.debug("JMSDestination and JMSReplyTo is the same, will skip sending a reply message to itself: {}",destination);    sendReply=false;  }  final Exchange exchange=createExchange(message,session,replyDestination);  if (eagerLoadingOfProperties) {    exchange.getIn().getHeaders();  }  String correlationId=message.getJMSCorrelationID();  if (correlationId != null) {    LOG.debug("Received Message has JMSCorrelationID [{}]",correlationId);  }  LOG.trace("onMessage.process START");  AsyncCallback callback=new EndpointMessageListenerAsyncCallback(message,exchange,endpoint,sendReply,replyDestination);  boolean forceSync=endpoint.isSynchronous() || endpoint.isTransacted();  if (forceSync || !isAsync()) {    if (LOG.isTraceEnabled()) {      LOG.trace("Processing exchange {} synchronously",exchange.getExchangeId());    }    try {      processor.process(exchange);    } catch (    Exception e) {      exchange.setException(e);    } finally {      callback.done(true);    }  } else {    if (LOG.isTraceEnabled()) {      LOG.trace("Processing exchange {} asynchronously",exchange.getExchangeId());    }    boolean sync=processor.process(exchange,callback);    if (!sync) {      return;    }  }  rce=exchange.getException(RuntimeCamelException.class);} catch (Exception e) {  rce=wrapRuntimeCamelException(e);} @AT@ 2839 @LENGTH@ 3302
---UPD VariableDeclarationStatement@@Destination destination=message.getJMSDestination(); @TO@ Destination destination=JmsMessageHelper.getJMSDestination(message); @AT@ 3263 @LENGTH@ 54
------UPD VariableDeclarationFragment@@destination=message.getJMSDestination() @TO@ destination=JmsMessageHelper.getJMSDestination(message) @AT@ 3275 @LENGTH@ 41
---------UPD MethodInvocation@@message.getJMSDestination() @TO@ JmsMessageHelper.getJMSDestination(message) @AT@ 3289 @LENGTH@ 27
------------UPD SimpleName@@Name:message @TO@ Name:JmsMessageHelper @AT@ 3289 @LENGTH@ 7
------------UPD SimpleName@@MethodName:getJMSDestination:[] @TO@ MethodName:getJMSDestination:[message] @AT@ 3297 @LENGTH@ 19
---------------INS SimpleName@@message @TO@ SimpleName@@MethodName:getJMSDestination:[] @AT@ 3324 @LENGTH@ 7
---UPD IfStatement@@if (sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination)) {  LOG.debug("JMSDestination and JMSReplyTo is the same, will skip sending a reply message to itself: {}",destination);  sendReply=false;} @TO@ if (destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination)) {  LOG.debug("JMSDestination and JMSReplyTo is the same, will skip sending a reply message to itself: {}",destination);  sendReply=false;} @AT@ 3330 @LENGTH@ 286
------UPD InfixExpression@@sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination) @TO@ destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination) @AT@ 3334 @LENGTH@ 96
---------INS InfixExpression@@destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() @TO@ InfixExpression@@sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination) @AT@ 3350 @LENGTH@ 79
------------MOV Operator@@&& @TO@ InfixExpression@@destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() @AT@ 3343 @LENGTH@ 2
------------MOV PrefixExpression@@!endpoint.isReplyToSameDestinationAllowed() @TO@ InfixExpression@@destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() @AT@ 3347 @LENGTH@ 43
------------INS InfixExpression@@destination != null && sendReply @TO@ InfixExpression@@destination != null && sendReply && !endpoint.isReplyToSameDestinationAllowed() @AT@ 3350 @LENGTH@ 32
---------------MOV SimpleName@@sendReply @TO@ InfixExpression@@destination != null && sendReply @AT@ 3334 @LENGTH@ 9
---------------INS InfixExpression@@destination != null @TO@ InfixExpression@@destination != null && sendReply @AT@ 3350 @LENGTH@ 19
------------------INS SimpleName@@destination @TO@ InfixExpression@@destination != null @AT@ 3350 @LENGTH@ 11
------------------INS Operator@@!= @TO@ InfixExpression@@destination != null @AT@ 3361 @LENGTH@ 2
------------------INS NullLiteral@@null @TO@ InfixExpression@@destination != null @AT@ 3365 @LENGTH@ 4
---------------INS Operator@@&& @TO@ InfixExpression@@destination != null && sendReply @AT@ 3369 @LENGTH@ 2
---------INS Operator@@&& @TO@ InfixExpression@@sendReply && !endpoint.isReplyToSameDestinationAllowed() && destination.equals(replyDestination) @AT@ 3429 @LENGTH@ 2


UPD IfStatement@@if (adjustedUserInput == null || adjustedUserInput.length() == 0 || file.getName().toLowerCase().startsWith(adjustedUserInput.toLowerCase())) {  String completion="";  if (directoryData.length() > 0)   completion+=directoryData;  completion+=file.getName();  completion=convertCompletionBackIntoUserInputStyle(originalUserInput,completion);  if (file.isDirectory()) {    completions.add(new Completion(completion + File.separator));  } else {    completions.add(new Completion(completion));  }} @TO@ if (adjustedUserInput == null || adjustedUserInput.length() == 0 || file.getName().startsWith(adjustedUserInput)) {  String completion="";  if (directoryData.length() > 0)   completion+=directoryData;  completion+=file.getName();  completion=convertCompletionBackIntoUserInputStyle(originalUserInput,completion);  if (file.isDirectory()) {    completions.add(new Completion(completion + File.separator));  } else {    completions.add(new Completion(completion));  }} @AT@ 2605 @LENGTH@ 542
---UPD InfixExpression@@adjustedUserInput == null || adjustedUserInput.length() == 0 || file.getName().toLowerCase().startsWith(adjustedUserInput.toLowerCase()) @TO@ adjustedUserInput == null || adjustedUserInput.length() == 0 || file.getName().startsWith(adjustedUserInput) @AT@ 2609 @LENGTH@ 140
------UPD MethodInvocation@@file.getName().toLowerCase().startsWith(adjustedUserInput.toLowerCase()) @TO@ file.getName().startsWith(adjustedUserInput) @AT@ 2677 @LENGTH@ 72
---------DEL MethodInvocation@@MethodName:toLowerCase:[] @AT@ 2677 @LENGTH@ 28
---------UPD SimpleName@@MethodName:startsWith:[adjustedUserInput.toLowerCase()] @TO@ MethodName:startsWith:[adjustedUserInput] @AT@ 2706 @LENGTH@ 43
------------INS SimpleName@@adjustedUserInput @TO@ SimpleName@@MethodName:startsWith:[adjustedUserInput.toLowerCase()] @AT@ 2703 @LENGTH@ 17
------------DEL MethodInvocation@@adjustedUserInput.toLowerCase() @AT@ 2717 @LENGTH@ 31
---------------DEL SimpleName@@Name:adjustedUserInput @AT@ 2717 @LENGTH@ 17
---------------DEL SimpleName@@MethodName:toLowerCase:[] @AT@ 2735 @LENGTH@ 13


INS IfStatement@@if (!endpoint.isBridgeEndpoint()) {  topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class);} @TO@ MethodDeclaration@@public, void, MethodName:process, Exchange exchange, CamelException,  @AT@ 2137 @LENGTH@ 150
---INS PrefixExpression@@!endpoint.isBridgeEndpoint() @TO@ IfStatement@@if (!endpoint.isBridgeEndpoint()) {  topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class);} @AT@ 2141 @LENGTH@ 28
------INS Operator@@! @TO@ PrefixExpression@@!endpoint.isBridgeEndpoint() @AT@ 2141 @LENGTH@ 1
------INS MethodInvocation@@endpoint.isBridgeEndpoint() @TO@ PrefixExpression@@!endpoint.isBridgeEndpoint() @AT@ 2142 @LENGTH@ 27
---------INS SimpleName@@Name:endpoint @TO@ MethodInvocation@@endpoint.isBridgeEndpoint() @AT@ 2142 @LENGTH@ 8
---------INS SimpleName@@MethodName:isBridgeEndpoint:[] @TO@ MethodInvocation@@endpoint.isBridgeEndpoint() @AT@ 2151 @LENGTH@ 18
---INS Block@@ThenBody:{  topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class);} @TO@ IfStatement@@if (!endpoint.isBridgeEndpoint()) {  topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class);} @AT@ 2171 @LENGTH@ 116
------INS ExpressionStatement@@Assignment:topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @TO@ Block@@ThenBody:{  topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class);} @AT@ 2185 @LENGTH@ 92
---------INS Assignment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @TO@ ExpressionStatement@@Assignment:topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @AT@ 2185 @LENGTH@ 91
------------MOV MethodInvocation@@exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @TO@ Assignment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @AT@ 2108 @LENGTH@ 83
------------INS SimpleName@@topic @TO@ Assignment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @AT@ 2185 @LENGTH@ 5
------------INS Operator@@= @TO@ Assignment@@topic=exchange.getIn().getHeader(KafkaConstants.TOPIC,endpoint.getTopic(),String.class) @AT@ 2190 @LENGTH@ 1


INS MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @TO@ TypeDeclaration@@[public]DefaultAccessTokenConverter, [AccessTokenConverter] @AT@ 5450 @LENGTH@ 292
---INS Modifier@@private @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5450 @LENGTH@ 7
---INS ParameterizedType@@Collection<String> @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5458 @LENGTH@ 18
------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 5458 @LENGTH@ 10
------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 5469 @LENGTH@ 6
---INS SimpleName@@MethodName:getAudience @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5477 @LENGTH@ 11
---INS SingleVariableDeclaration@@Map<String,?> map @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5489 @LENGTH@ 18
------INS ParameterizedType@@Map<String,?> @TO@ SingleVariableDeclaration@@Map<String,?> map @AT@ 5489 @LENGTH@ 14
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,?> @AT@ 5489 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,?> @AT@ 5493 @LENGTH@ 6
---------INS WildcardType@@? @TO@ ParameterizedType@@Map<String,?> @AT@ 5501 @LENGTH@ 1
------INS SimpleName@@map @TO@ SingleVariableDeclaration@@Map<String,?> map @AT@ 5504 @LENGTH@ 3
---INS VariableDeclarationStatement@@Object auds=map.get(AUD); @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5513 @LENGTH@ 27
------INS SimpleType@@Object @TO@ VariableDeclarationStatement@@Object auds=map.get(AUD); @AT@ 5513 @LENGTH@ 6
------INS VariableDeclarationFragment@@auds=map.get(AUD) @TO@ VariableDeclarationStatement@@Object auds=map.get(AUD); @AT@ 5520 @LENGTH@ 19
---------MOV MethodInvocation@@map.get(AUD) @TO@ VariableDeclarationFragment@@auds=map.get(AUD) @AT@ 4931 @LENGTH@ 12
---------INS SimpleName@@auds @TO@ VariableDeclarationFragment@@auds=map.get(AUD) @AT@ 5520 @LENGTH@ 4
---INS IfStatement@@if (auds instanceof Collection) {  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5543 @LENGTH@ 150
------INS InstanceofExpression@@auds instanceof Collection @TO@ IfStatement@@if (auds instanceof Collection) {  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @AT@ 5547 @LENGTH@ 26
---------INS SimpleName@@auds @TO@ InstanceofExpression@@auds instanceof Collection @AT@ 5547 @LENGTH@ 4
---------INS Instanceof@@instanceof @TO@ InstanceofExpression@@auds instanceof Collection @AT@ 5552 @LENGTH@ 10
---------INS SimpleType@@Collection @TO@ InstanceofExpression@@auds instanceof Collection @AT@ 5563 @LENGTH@ 10
------INS Block@@ThenBody:{  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @TO@ IfStatement@@if (auds instanceof Collection) {  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @AT@ 5575 @LENGTH@ 118
---------INS VariableDeclarationStatement@@@SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds; @TO@ Block@@ThenBody:{  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @AT@ 5583 @LENGTH@ 88
------------INS ParameterizedType@@Collection<String> @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds; @AT@ 5617 @LENGTH@ 18
---------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 5617 @LENGTH@ 10
---------------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 5628 @LENGTH@ 6
------------INS VariableDeclarationFragment@@result=(Collection<String>)auds @TO@ VariableDeclarationStatement@@@SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds; @AT@ 5636 @LENGTH@ 34
---------------INS SimpleName@@result @TO@ VariableDeclarationFragment@@result=(Collection<String>)auds @AT@ 5636 @LENGTH@ 6
---------------INS CastExpression@@(Collection<String>)auds @TO@ VariableDeclarationFragment@@result=(Collection<String>)auds @AT@ 5645 @LENGTH@ 25
------------------INS ParameterizedType@@Collection<String> @TO@ CastExpression@@(Collection<String>)auds @AT@ 5646 @LENGTH@ 18
---------------------INS SimpleType@@Collection @TO@ ParameterizedType@@Collection<String> @AT@ 5646 @LENGTH@ 10
---------------------INS SimpleType@@String @TO@ ParameterizedType@@Collection<String> @AT@ 5657 @LENGTH@ 6
------------------INS SimpleName@@auds @TO@ CastExpression@@(Collection<String>)auds @AT@ 5666 @LENGTH@ 4
---------INS ReturnStatement@@SimpleName:result @TO@ Block@@ThenBody:{  @SuppressWarnings("unchecked") Collection<String> result=(Collection<String>)auds;  return result;} @AT@ 5675 @LENGTH@ 14
------------INS SimpleName@@result @TO@ ReturnStatement@@SimpleName:result @AT@ 5682 @LENGTH@ 6
---INS ReturnStatement@@MethodInvocation:Collections.singleton((String)auds) @TO@ MethodDeclaration@@private, Collection<String>, MethodName:getAudience, Map<String,?> map,  @AT@ 5696 @LENGTH@ 43
------INS MethodInvocation@@Collections.singleton((String)auds) @TO@ ReturnStatement@@MethodInvocation:Collections.singleton((String)auds) @AT@ 5703 @LENGTH@ 35
---------INS SimpleName@@Name:Collections @TO@ MethodInvocation@@Collections.singleton((String)auds) @AT@ 5703 @LENGTH@ 11
---------INS SimpleName@@MethodName:singleton:[(String)auds] @TO@ MethodInvocation@@Collections.singleton((String)auds) @AT@ 5715 @LENGTH@ 23
------------INS CastExpression@@(String)auds @TO@ SimpleName@@MethodName:singleton:[(String)auds] @AT@ 5725 @LENGTH@ 12
---------------INS SimpleType@@String @TO@ CastExpression@@(String)auds @AT@ 5726 @LENGTH@ 6
---------------INS SimpleName@@auds @TO@ CastExpression@@(String)auds @AT@ 5733 @LENGTH@ 4


UPD Block@@ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    builder=refBuilder;  }  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());      if (refBuilder != null) {        ref=builderRef.getRef();        builder=refBuilder;      }    }  }} @TO@ ThenBody:{  ErrorHandlerBuilderRef builderRef=(ErrorHandlerBuilderRef)builder;  ref=builderRef.getRef();  ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);  if (refBuilder != null) {    builder=refBuilder;  }  if (builder instanceof ErrorHandlerBuilderRef) {    builderRef=(ErrorHandlerBuilderRef)builder;    if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {      refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);      if (refBuilder != null) {        ref=builderRef.getRef();        builder=refBuilder;      }    }  }} @AT@ 7845 @LENGTH@ 1321
---UPD VariableDeclarationStatement@@ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()); @TO@ ErrorHandlerFactory refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false); @AT@ 8085 @LENGTH@ 117
------UPD VariableDeclarationFragment@@refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false) @AT@ 8105 @LENGTH@ 96
---------UPD MethodInvocation@@ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false) @AT@ 8118 @LENGTH@ 83
------------UPD SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef()] @TO@ MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef(), false] @AT@ 8141 @LENGTH@ 60
---------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef()] @AT@ 8202 @LENGTH@ 5
---UPD IfStatement@@if (builder instanceof ErrorHandlerBuilderRef) {  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @TO@ if (builder instanceof ErrorHandlerBuilderRef) {  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @AT@ 8540 @LENGTH@ 616
------UPD Block@@ThenBody:{  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @TO@ ThenBody:{  builderRef=(ErrorHandlerBuilderRef)builder;  if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {    refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);    if (refBuilder != null) {      ref=builderRef.getRef();      builder=refBuilder;    }  }} @AT@ 8587 @LENGTH@ 569
---------UPD IfStatement@@if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @TO@ if (!builderRef.getRef().equals(ErrorHandlerBuilderRef.DEFAULT_ERROR_HANDLER_BUILDER)) {  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @AT@ 8753 @LENGTH@ 389
------------UPD Block@@ThenBody:{  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef());  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @TO@ ThenBody:{  refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false);  if (refBuilder != null) {    ref=builderRef.getRef();    builder=refBuilder;  }} @AT@ 8840 @LENGTH@ 302
---------------UPD ExpressionStatement@@Assignment:refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ Assignment:refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false) @AT@ 8862 @LENGTH@ 97
------------------UPD Assignment@@refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ refBuilder=ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false) @AT@ 8862 @LENGTH@ 96
---------------------UPD MethodInvocation@@ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef()) @TO@ ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(routeContext,builderRef.getRef(),false) @AT@ 8875 @LENGTH@ 83
------------------------UPD SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef()] @TO@ MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef(), false] @AT@ 8898 @LENGTH@ 60
---------------------------INS BooleanLiteral@@false @TO@ SimpleName@@MethodName:lookupErrorHandlerBuilder:[routeContext, builderRef.getRef()] @AT@ 8966 @LENGTH@ 5


UPD TryStatement@@try {  bridge.stop();  MessagingLogger.MESSAGING_LOGGER.stoppedService("JMS Bridge",bridgeName);  context.complete();} catch (Exception e) {  MESSAGING_LOGGER.failedToDestroy("bridge",bridgeName);} @TO@ try {  bridge.stop();  MessagingLogger.ROOT_LOGGER.stoppedService("JMS Bridge",bridgeName);  context.complete();} catch (Exception e) {  MessagingLogger.ROOT_LOGGER.failedToDestroy("JMS Bridge",bridgeName);} @AT@ 4728 @LENGTH@ 309
---UPD ExpressionStatement@@MethodInvocation:MessagingLogger.MESSAGING_LOGGER.stoppedService("JMS Bridge",bridgeName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.stoppedService("JMS Bridge",bridgeName) @AT@ 4789 @LENGTH@ 74
------UPD MethodInvocation@@MessagingLogger.MESSAGING_LOGGER.stoppedService("JMS Bridge",bridgeName) @TO@ MessagingLogger.ROOT_LOGGER.stoppedService("JMS Bridge",bridgeName) @AT@ 4789 @LENGTH@ 73
---------UPD QualifiedName@@Name:MessagingLogger.MESSAGING_LOGGER @TO@ Name:MessagingLogger.ROOT_LOGGER @AT@ 4789 @LENGTH@ 32
---UPD CatchClause@@catch (Exception e) {  MESSAGING_LOGGER.failedToDestroy("bridge",bridgeName);} @TO@ catch (Exception e) {  MessagingLogger.ROOT_LOGGER.failedToDestroy("JMS Bridge",bridgeName);} @AT@ 4923 @LENGTH@ 114
------UPD ExpressionStatement@@MethodInvocation:MESSAGING_LOGGER.failedToDestroy("bridge",bridgeName) @TO@ MethodInvocation:MessagingLogger.ROOT_LOGGER.failedToDestroy("JMS Bridge",bridgeName) @AT@ 4964 @LENGTH@ 55
---------UPD MethodInvocation@@MESSAGING_LOGGER.failedToDestroy("bridge",bridgeName) @TO@ MessagingLogger.ROOT_LOGGER.failedToDestroy("JMS Bridge",bridgeName) @AT@ 4964 @LENGTH@ 54
------------INS QualifiedName@@Name:MessagingLogger.ROOT_LOGGER @TO@ MethodInvocation@@MESSAGING_LOGGER.failedToDestroy("bridge",bridgeName) @AT@ 4856 @LENGTH@ 27
------------DEL SimpleName@@Name:MESSAGING_LOGGER @AT@ 4964 @LENGTH@ 16
------------UPD SimpleName@@MethodName:failedToDestroy:["bridge", bridgeName] @TO@ MethodName:failedToDestroy:["JMS Bridge", bridgeName] @AT@ 4981 @LENGTH@ 37
---------------UPD StringLiteral@@"bridge" @TO@ "JMS Bridge" @AT@ 4997 @LENGTH@ 8


UPD CatchClause@@catch (Exception e) {  exchange.setException(e);} @TO@ catch (Throwable e) {  exchange.setException(e);} @AT@ 2224 @LENGTH@ 69
---UPD SingleVariableDeclaration@@Exception e @TO@ Throwable e @AT@ 2231 @LENGTH@ 11
------UPD SimpleType@@Exception @TO@ Throwable @AT@ 2231 @LENGTH@ 9


INS VariableDeclarationStatement@@final ServiceName jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name); @TO@ MethodDeclaration@@protected, void, MethodName:performRuntime, OperationContext context, ModelNode operation, ModelNode model, OperationFailedException,  @AT@ 3659 @LENGTH@ 105
---INS Modifier@@final @TO@ VariableDeclarationStatement@@final ServiceName jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name); @AT@ 3659 @LENGTH@ 5
---INS SimpleType@@ServiceName @TO@ VariableDeclarationStatement@@final ServiceName jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name); @AT@ 3665 @LENGTH@ 11
---INS VariableDeclarationFragment@@jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @TO@ VariableDeclarationStatement@@final ServiceName jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name); @AT@ 3677 @LENGTH@ 86
------INS SimpleName@@jmsQueueServiceName @TO@ VariableDeclarationFragment@@jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @AT@ 3677 @LENGTH@ 19
------INS MethodInvocation@@JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @TO@ VariableDeclarationFragment@@jmsQueueServiceName=JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @AT@ 3699 @LENGTH@ 64
---------INS MethodInvocation@@MethodName:getJmsQueueBaseServiceName:[serviceName] @TO@ MethodInvocation@@JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @AT@ 3699 @LENGTH@ 51
------------INS SimpleName@@serviceName @TO@ MethodInvocation@@MethodName:getJmsQueueBaseServiceName:[serviceName] @AT@ 3738 @LENGTH@ 11
---------INS SimpleName@@Name:JMSServices @TO@ MethodInvocation@@JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @AT@ 3699 @LENGTH@ 11
---------INS SimpleName@@MethodName:append:[name] @TO@ MethodInvocation@@JMSServices.getJmsQueueBaseServiceName(serviceName).append(name) @AT@ 3751 @LENGTH@ 12
------------INS SimpleName@@name @TO@ SimpleName@@MethodName:append:[name] @AT@ 3758 @LENGTH@ 4


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ HttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3819 @LENGTH@ 48
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3830 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3839 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3791 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 3839 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3851 @LENGTH@ 15


INS MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @TO@ TypeDeclaration@@[public]GHttpComponent, ServletComponent @AT@ 3300 @LENGTH@ 103
---INS Modifier@@protected @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 3300 @LENGTH@ 9
---INS PrimitiveType@@boolean @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 3310 @LENGTH@ 7
---INS SimpleName@@MethodName:lenientContextPath @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 3318 @LENGTH@ 18
---INS ReturnStatement@@BooleanLiteral:false @TO@ MethodDeclaration@@protected, boolean, MethodName:lenientContextPath,  @AT@ 3384 @LENGTH@ 13
------INS BooleanLiteral@@false @TO@ ReturnStatement@@BooleanLiteral:false @AT@ 3391 @LENGTH@ 5


DEL FieldDeclaration@@private, PerfLogger, [perfLogger] @AT@ 7838 @LENGTH@ 30
---DEL Modifier@@private @AT@ 7838 @LENGTH@ 7
---DEL SimpleType@@PerfLogger @AT@ 7846 @LENGTH@ 10
---DEL VariableDeclarationFragment@@perfLogger @AT@ 7857 @LENGTH@ 10
------DEL SimpleName@@perfLogger @AT@ 7857 @LENGTH@ 10


INS MethodDeclaration@@public, void, MethodName:endOfFileReached,  @TO@ TypeDeclaration@@[public]TailerListenerAdapter, [TailerListener] @AT@ 1914 @LENGTH@ 38
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:endOfFileReached,  @AT@ 1914 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:endOfFileReached,  @AT@ 1921 @LENGTH@ 4
---INS SimpleName@@MethodName:endOfFileReached @TO@ MethodDeclaration@@public, void, MethodName:endOfFileReached,  @AT@ 1926 @LENGTH@ 16


UPD IfStatement@@if ((directoryService != null) && directoryService.isStarted()) {  return;} @TO@ if ((directoryService == null) || directoryService.isStarted()) {  return;} @AT@ 4226 @LENGTH@ 95
---UPD InfixExpression@@(directoryService != null) && directoryService.isStarted() @TO@ (directoryService == null) || directoryService.isStarted() @AT@ 4230 @LENGTH@ 58
------UPD ParenthesizedExpression@@(directoryService != null) @TO@ (directoryService == null) @AT@ 4230 @LENGTH@ 26
---------UPD InfixExpression@@directoryService != null @TO@ directoryService == null @AT@ 4231 @LENGTH@ 24
------------UPD Operator@@!= @TO@ == @AT@ 4247 @LENGTH@ 2
------UPD Operator@@&& @TO@ || @AT@ 4256 @LENGTH@ 2


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3803 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3803 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3814 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3823 @LENGTH@ 27
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3794 @LENGTH@ 43
---------DEL SimpleName@@Name:HttpClients @AT@ 3823 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3835 @LENGTH@ 15


INS MethodDeclaration@@void, MethodName:endOfFileReached,  @TO@ TypeDeclaration@@[public]TailerListener,  @AT@ 2163 @LENGTH@ 19
---INS PrimitiveType@@void @TO@ MethodDeclaration@@void, MethodName:endOfFileReached,  @AT@ 2158 @LENGTH@ 4
---INS SimpleName@@MethodName:endOfFileReached @TO@ MethodDeclaration@@void, MethodName:endOfFileReached,  @AT@ 2163 @LENGTH@ 16


UPD FieldDeclaration@@private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.http_interface"] @TO@ private, static, final, String, [RUNTIME_CAPABILITY_NAME="org.wildfly.management.http-interface"] @AT@ 3032 @LENGTH@ 94
---UPD VariableDeclarationFragment@@RUNTIME_CAPABILITY_NAME="org.wildfly.management.http_interface" @TO@ RUNTIME_CAPABILITY_NAME="org.wildfly.management.http-interface" @AT@ 3060 @LENGTH@ 65
------UPD StringLiteral@@"org.wildfly.management.http_interface" @TO@ "org.wildfly.management.http-interface" @AT@ 3086 @LENGTH@ 39


INS ExpressionStatement@@MethodInvocation:removeModule(getModuleSuffix()) @TO@ MethodDeclaration@@public, void, MethodName:setup, ManagementClient managementClient, String containerId, Exception,  @AT@ 2638 @LENGTH@ 32
---INS MethodInvocation@@removeModule(getModuleSuffix()) @TO@ ExpressionStatement@@MethodInvocation:removeModule(getModuleSuffix()) @AT@ 2638 @LENGTH@ 31
------INS SimpleName@@MethodName:removeModule:[getModuleSuffix()] @TO@ MethodInvocation@@removeModule(getModuleSuffix()) @AT@ 2638 @LENGTH@ 31
---------INS MethodInvocation@@MethodName:getModuleSuffix:[] @TO@ SimpleName@@MethodName:removeModule:[getModuleSuffix()] @AT@ 2651 @LENGTH@ 17


UPD IfStatement@@if (next.getClass().isArray()) {  return (Object[])next;} @TO@ if (next != null && next.getClass().isArray()) {  return (Object[])next;} @AT@ 12638 @LENGTH@ 63
---INS InfixExpression@@next != null && next.getClass().isArray() @TO@ IfStatement@@if (next.getClass().isArray()) {  return (Object[])next;} @AT@ 12642 @LENGTH@ 41
------INS InfixExpression@@next != null @TO@ InfixExpression@@next != null && next.getClass().isArray() @AT@ 12642 @LENGTH@ 12
---------INS SimpleName@@next @TO@ InfixExpression@@next != null @AT@ 12642 @LENGTH@ 4
---------INS Operator@@!= @TO@ InfixExpression@@next != null @AT@ 12646 @LENGTH@ 2
---------INS NullLiteral@@null @TO@ InfixExpression@@next != null @AT@ 12650 @LENGTH@ 4
------INS Operator@@&& @TO@ InfixExpression@@next != null && next.getClass().isArray() @AT@ 12654 @LENGTH@ 2
------INS MethodInvocation@@next.getClass().isArray() @TO@ InfixExpression@@next != null && next.getClass().isArray() @AT@ 12658 @LENGTH@ 25
---------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@next.getClass().isArray() @AT@ 12642 @LENGTH@ 15
---------MOV MethodInvocation@@MethodName:getClass:[] @TO@ MethodInvocation@@next.getClass().isArray() @AT@ 12642 @LENGTH@ 15
---------MOV SimpleName@@Name:next @TO@ MethodInvocation@@next.getClass().isArray() @AT@ 12642 @LENGTH@ 4
---------MOV SimpleName@@Name:next @TO@ MethodInvocation@@next.getClass().isArray() @AT@ 12642 @LENGTH@ 4
---------MOV SimpleName@@MethodName:isArray:[] @TO@ MethodInvocation@@next.getClass().isArray() @AT@ 12658 @LENGTH@ 9
---DEL MethodInvocation@@next.getClass().isArray() @AT@ 12642 @LENGTH@ 25


UPD MethodDeclaration@@String, MethodName:getVerifierEncpointURIEnveloping,  @TO@ String, MethodName:getVerifierEndpointURIEnveloping,  @AT@ 3734 @LENGTH@ 119
---UPD SimpleName@@MethodName:getVerifierEncpointURIEnveloping @TO@ MethodName:getVerifierEndpointURIEnveloping @AT@ 3734 @LENGTH@ 32


INS MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @TO@ TypeDeclaration@@[public, final]HttpSecurity, AbstractConfiguredSecurityBuilder<DefaultSecurityFilterChain,HttpSecurity>[SecurityBuilder<DefaultSecurityFilterChain>, HttpSecurityBuilder<HttpSecurity>] @AT@ 36722 @LENGTH@ 112
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36722 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36733 @LENGTH@ 4
---INS SimpleName@@MethodName:setSharedObject @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36738 @LENGTH@ 15
---INS SingleVariableDeclaration@@Class<C> sharedType @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36754 @LENGTH@ 19
------INS ParameterizedType@@Class<C> @TO@ SingleVariableDeclaration@@Class<C> sharedType @AT@ 36754 @LENGTH@ 8
---------INS SimpleType@@Class @TO@ ParameterizedType@@Class<C> @AT@ 36754 @LENGTH@ 5
---------INS SimpleType@@C @TO@ ParameterizedType@@Class<C> @AT@ 36760 @LENGTH@ 1
------INS SimpleName@@sharedType @TO@ SingleVariableDeclaration@@Class<C> sharedType @AT@ 36763 @LENGTH@ 10
---INS SingleVariableDeclaration@@C object @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36775 @LENGTH@ 8
------INS SimpleType@@C @TO@ SingleVariableDeclaration@@C object @AT@ 36775 @LENGTH@ 1
------INS SimpleName@@object @TO@ SingleVariableDeclaration@@C object @AT@ 36777 @LENGTH@ 6
---INS ExpressionStatement@@SuperMethodInvocation:super.setSharedObject(sharedType,object) @TO@ MethodDeclaration@@public, void, C, MethodName:setSharedObject, Class<C> sharedType, C object,  @AT@ 36789 @LENGTH@ 42
------INS SuperMethodInvocation@@super.setSharedObject(sharedType,object) @TO@ ExpressionStatement@@SuperMethodInvocation:super.setSharedObject(sharedType,object) @AT@ 36789 @LENGTH@ 41
---------INS SimpleName@@MethodName:setSharedObject:[sharedType, object] @TO@ SuperMethodInvocation@@super.setSharedObject(sharedType,object) @AT@ 36795 @LENGTH@ 15
---------INS SimpleName@@sharedType @TO@ SuperMethodInvocation@@super.setSharedObject(sharedType,object) @AT@ 36811 @LENGTH@ 10
---------INS SimpleName@@object @TO@ SuperMethodInvocation@@super.setSharedObject(sharedType,object) @AT@ 36823 @LENGTH@ 6


MOV FieldDeclaration@@private, CamelCommandsFacade, [facade] @TO@ TypeDeclaration@@[public]CamelCommandsPlugin, CRaSHPlugin<CamelCommandsPlugin> @AT@ 1273 @LENGTH@ 35


UPD ExpressionStatement@@MethodInvocation:template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ MethodInvocation:template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1458 @LENGTH@ 81
---UPD MethodInvocation@@template.sendBody("undertow:http://localhost:" + getPort() + "/users/new",body) @TO@ template.sendBody("undertow:http://localhost:{{port}}/users/new",body) @AT@ 1458 @LENGTH@ 80
------UPD SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @TO@ MethodName:sendBody:["undertow:http://localhost:{{port}}/users/new", body] @AT@ 1467 @LENGTH@ 71
---------DEL InfixExpression@@"undertow:http://localhost:" + getPort() + "/users/new" @AT@ 1476 @LENGTH@ 55
------------DEL StringLiteral@@"undertow:http://localhost:" @AT@ 1476 @LENGTH@ 28
------------DEL Operator@@+ @AT@ 1504 @LENGTH@ 1
------------DEL MethodInvocation@@MethodName:getPort:[] @AT@ 1507 @LENGTH@ 9
------------DEL StringLiteral@@"/users/new" @AT@ 1519 @LENGTH@ 12
---------INS StringLiteral@@"undertow:http://localhost:{{port}}/users/new" @TO@ SimpleName@@MethodName:sendBody:["undertow:http://localhost:" + getPort() + "/users/new", body] @AT@ 1476 @LENGTH@ 46


UPD ExpressionStatement@@MethodInvocation:addMapping("getAndAdd",HazelcastConstants.GET_AND_ADD) @TO@ MethodInvocation:addMapping("getAndAdd",HazelcastConstants.GET_AND_ADD_OPERATION) @AT@ 4877 @LENGTH@ 56
---UPD MethodInvocation@@addMapping("getAndAdd",HazelcastConstants.GET_AND_ADD) @TO@ addMapping("getAndAdd",HazelcastConstants.GET_AND_ADD_OPERATION) @AT@ 4877 @LENGTH@ 55
------UPD SimpleName@@MethodName:addMapping:["getAndAdd", HazelcastConstants.GET_AND_ADD] @TO@ MethodName:addMapping:["getAndAdd", HazelcastConstants.GET_AND_ADD_OPERATION] @AT@ 4877 @LENGTH@ 55
---------UPD QualifiedName@@HazelcastConstants.GET_AND_ADD @TO@ HazelcastConstants.GET_AND_ADD_OPERATION @AT@ 4901 @LENGTH@ 30
------------UPD SimpleName@@GET_AND_ADD @TO@ GET_AND_ADD_OPERATION @AT@ 4920 @LENGTH@ 11


UPD ExpressionStatement@@MethodInvocation:from("direct:scan").to("hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2&filters=#myFilters") @TO@ MethodInvocation:from("direct:scan").to("hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2") @AT@ 3105 @LENGTH@ 146
---UPD MethodInvocation@@from("direct:scan").to("hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2&filters=#myFilters") @TO@ from("direct:scan").to("hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2") @AT@ 3105 @LENGTH@ 145
------UPD SimpleName@@MethodName:to:["hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2&filters=#myFilters"] @TO@ MethodName:to:["hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2"] @AT@ 3146 @LENGTH@ 104
---------UPD InfixExpression@@"hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2&filters=#myFilters" @TO@ "hbase://" + PERSON_TABLE + "?operation="+ HBaseConstants.SCAN+ "&maxResults=2" @AT@ 3149 @LENGTH@ 100
------------UPD StringLiteral@@"&maxResults=2&filters=#myFilters" @TO@ "&maxResults=2" @AT@ 3215 @LENGTH@ 34


MOV ExpressionStatement@@MethodInvocation:writer.close() @TO@ MethodDeclaration@@public, void, MethodName:testWriteAppendReopen, IOException,  @AT@ 2583 @LENGTH@ 15


INS MethodDeclaration@@private, voidMethodName:Locator,  @TO@ TypeDeclaration@@[public]Locator,  @AT@ 1133 @LENGTH@ 29
---INS Modifier@@private @TO@ MethodDeclaration@@private, voidMethodName:Locator,  @AT@ 1133 @LENGTH@ 7
---INS SimpleName@@MethodName:Locator @TO@ MethodDeclaration@@private, voidMethodName:Locator,  @AT@ 1141 @LENGTH@ 7


UPD ExpressionStatement@@MethodInvocation:assertTrue(xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")) @TO@ MethodInvocation:assertTrue(xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")) @AT@ 2755 @LENGTH@ 224
---UPD MethodInvocation@@assertTrue(xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")) @TO@ assertTrue(xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")) @AT@ 2755 @LENGTH@ 223
------UPD SimpleName@@MethodName:assertTrue:[xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")] @TO@ MethodName:assertTrue:[xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">")] @AT@ 2755 @LENGTH@ 223
---------UPD MethodInvocation@@xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">") @TO@ xml.contains("<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">") @AT@ 2766 @LENGTH@ 211
------------UPD SimpleName@@MethodName:contains:["<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">"] @TO@ MethodName:contains:["<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">"] @AT@ 2770 @LENGTH@ 207
---------------DEL StringLiteral@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @AT@ 2779 @LENGTH@ 197
---------------INS InfixExpression@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @TO@ SimpleName@@MethodName:contains:["<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">"] @AT@ 2800 @LENGTH@ 218
------------------INS StringLiteral@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " @TO@ InfixExpression@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @AT@ 2800 @LENGTH@ 94
------------------INS Operator@@+ @TO@ InfixExpression@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @AT@ 2894 @LENGTH@ 1
------------------INS StringLiteral@@"defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @TO@ InfixExpression@@"<param paramType=\"header\" name=\"header_count\" description=\"header param description1\" " + "defaultValue=\"1\" required=\"true\" allowMultiple=\"false\" dataType=\"integer\" paramAccess=\"acc1\">" @AT@ 2913 @LENGTH@ 105


UPD ExpressionStatement@@MethodInvocation:assertEquals(9,data.size()) @TO@ MethodInvocation:assertEquals(27,data.size()) @AT@ 2252 @LENGTH@ 29
---UPD MethodInvocation@@assertEquals(9,data.size()) @TO@ assertEquals(27,data.size()) @AT@ 2252 @LENGTH@ 28
------UPD SimpleName@@MethodName:assertEquals:[9, data.size()] @TO@ MethodName:assertEquals:[27, data.size()] @AT@ 2252 @LENGTH@ 28
---------UPD NumberLiteral@@9 @TO@ 27 @AT@ 2265 @LENGTH@ 1


UPD TypeDeclaration@@[@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]NoTimerMDB, [MessageListener] @TO@ [@JMSDestinationDefinition(name="java:/queue/NoTimerMDB-queue",interfaceName="javax.jms.Queue"), @MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/NoTimerMDB-queue")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]NoTimerMDB, [MessageListener] @AT@ 1482 @LENGTH@ 472
---UPD NormalAnnotation@@@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}) @TO@ @MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/NoTimerMDB-queue")}) @AT@ 1482 @LENGTH@ 242
---INS NormalAnnotation@@@JMSDestinationDefinition(name="java:/queue/NoTimerMDB-queue",interfaceName="javax.jms.Queue") @TO@ TypeDeclaration@@[@MessageDriven(activationConfig={@ActivationConfigProperty(propertyName="destinationType",propertyValue="javax.jms.Queue"),@ActivationConfigProperty(propertyName="destination",propertyValue="java:/queue/test")}), @SecurityDomain("other"), @DeclareRoles(value={"Role1","Role2","Role3"}), @RunAs("Role3"), public]NoTimerMDB, [MessageListener] @AT@ 1525 @LENGTH@ 115


UPD VariableDeclarationStatement@@@SuppressWarnings("unchecked") Set<String> resourceIds=new LinkedHashSet<String>(map.containsKey(AUD) ? (Collection<String>)map.get(AUD) : Collections.<String>emptySet()); @TO@ @SuppressWarnings("unchecked") Set<String> resourceIds=new LinkedHashSet<String>(map.containsKey(AUD) ? getAudience(map) : Collections.<String>emptySet()); @AT@ 4802 @LENGTH@ 180
---UPD VariableDeclarationFragment@@resourceIds=new LinkedHashSet<String>(map.containsKey(AUD) ? (Collection<String>)map.get(AUD) : Collections.<String>emptySet()) @TO@ resourceIds=new LinkedHashSet<String>(map.containsKey(AUD) ? getAudience(map) : Collections.<String>emptySet()) @AT@ 4847 @LENGTH@ 134
------UPD ClassInstanceCreation@@LinkedHashSet<String>[map.containsKey(AUD) ? (Collection<String>)map.get(AUD) : Collections.<String>emptySet()] @TO@ LinkedHashSet<String>[map.containsKey(AUD) ? getAudience(map) : Collections.<String>emptySet()] @AT@ 4861 @LENGTH@ 120
---------UPD ConditionalExpression@@map.containsKey(AUD) ? (Collection<String>)map.get(AUD) : Collections.<String>emptySet() @TO@ map.containsKey(AUD) ? getAudience(map) : Collections.<String>emptySet() @AT@ 4887 @LENGTH@ 93
------------DEL CastExpression@@(Collection<String>)map.get(AUD) @AT@ 4910 @LENGTH@ 33
---------------DEL ParameterizedType@@Collection<String> @AT@ 4911 @LENGTH@ 18
------------------DEL SimpleType@@Collection @AT@ 4911 @LENGTH@ 10
------------------DEL SimpleType@@String @AT@ 4922 @LENGTH@ 6
------------INS MethodInvocation@@getAudience(map) @TO@ ConditionalExpression@@map.containsKey(AUD) ? (Collection<String>)map.get(AUD) : Collections.<String>emptySet() @AT@ 4910 @LENGTH@ 16
---------------INS SimpleName@@MethodName:getAudience:[map] @TO@ MethodInvocation@@getAudience(map) @AT@ 4910 @LENGTH@ 16
------------------INS SimpleName@@map @TO@ SimpleName@@MethodName:getAudience:[map] @AT@ 4922 @LENGTH@ 3


UPD ExpressionStatement@@MethodInvocation:new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ MethodInvocation:new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 4754 @LENGTH@ 133
---UPD MethodInvocation@@new RestartParentResourceStepHandler<>(new RemoveStepHandler(descriptor,handler),this.parentBuilderFactory).register(registration) @TO@ new RestartParentResourceRemoveStepHandler<>(this.parentBuilderFactory,descriptor,handler).register(registration) @AT@ 4754 @LENGTH@ 132
------UPD ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @TO@ RestartParentResourceRemoveStepHandler<>[this.parentBuilderFactory, descriptor, handler] @AT@ 4754 @LENGTH@ 109
---------UPD ParameterizedType@@RestartParentResourceStepHandler<> @TO@ RestartParentResourceRemoveStepHandler<> @AT@ 4758 @LENGTH@ 34
------------UPD SimpleType@@RestartParentResourceStepHandler @TO@ RestartParentResourceRemoveStepHandler @AT@ 4758 @LENGTH@ 32
---------INS SimpleName@@descriptor @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 4775 @LENGTH@ 10
---------INS SimpleName@@handler @TO@ ClassInstanceCreation@@RestartParentResourceStepHandler<>[new RemoveStepHandler(descriptor,handler), this.parentBuilderFactory] @AT@ 4787 @LENGTH@ 7
---------DEL ClassInstanceCreation@@RemoveStepHandler[descriptor, handler] @AT@ 4793 @LENGTH@ 42
------------DEL New@@new @AT@ 4793 @LENGTH@ 3
------------DEL SimpleType@@RemoveStepHandler @AT@ 4797 @LENGTH@ 17
------------DEL SimpleName@@descriptor @AT@ 4815 @LENGTH@ 10
------------DEL SimpleName@@handler @AT@ 4827 @LENGTH@ 7


INS MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet,  @TO@ TypeDeclaration@@[public, static]Builder,  @AT@ 13652 @LENGTH@ 125
---INS Modifier@@public @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet,  @AT@ 13652 @LENGTH@ 6
---INS ParameterizedType@@MultiSet<E> @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet,  @AT@ 13659 @LENGTH@ 11
------INS SimpleType@@MultiSet @TO@ ParameterizedType@@MultiSet<E> @AT@ 13659 @LENGTH@ 8
------INS SimpleType@@E @TO@ ParameterizedType@@MultiSet<E> @AT@ 13668 @LENGTH@ 1
---INS SimpleName@@MethodName:createPredicatedMultiSet @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet,  @AT@ 13671 @LENGTH@ 24
---INS ReturnStatement@@MethodInvocation:createPredicatedMultiSet(new HashMultiSet<E>()) @TO@ MethodDeclaration@@public, MultiSet<E>, MethodName:createPredicatedMultiSet,  @AT@ 13712 @LENGTH@ 55
------INS MethodInvocation@@createPredicatedMultiSet(new HashMultiSet<E>()) @TO@ ReturnStatement@@MethodInvocation:createPredicatedMultiSet(new HashMultiSet<E>()) @AT@ 13719 @LENGTH@ 47
---------INS SimpleName@@MethodName:createPredicatedMultiSet:[new HashMultiSet<E>()] @TO@ MethodInvocation@@createPredicatedMultiSet(new HashMultiSet<E>()) @AT@ 13719 @LENGTH@ 47
------------INS ClassInstanceCreation@@HashMultiSet<E>[] @TO@ SimpleName@@MethodName:createPredicatedMultiSet:[new HashMultiSet<E>()] @AT@ 13744 @LENGTH@ 21
---------------INS New@@new @TO@ ClassInstanceCreation@@HashMultiSet<E>[] @AT@ 13744 @LENGTH@ 3
---------------INS ParameterizedType@@HashMultiSet<E> @TO@ ClassInstanceCreation@@HashMultiSet<E>[] @AT@ 13748 @LENGTH@ 15
------------------INS SimpleType@@HashMultiSet @TO@ ParameterizedType@@HashMultiSet<E> @AT@ 13748 @LENGTH@ 12
------------------INS SimpleType@@E @TO@ ParameterizedType@@HashMultiSet<E> @AT@ 13761 @LENGTH@ 1


UPD VariableDeclarationStatement@@HttpClient client=HttpClients.createDefault(); @TO@ DefaultHttpClient client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient(); @AT@ 3949 @LENGTH@ 48
---UPD SimpleType@@HttpClient @TO@ DefaultHttpClient @AT@ 3949 @LENGTH@ 10
---UPD VariableDeclarationFragment@@client=HttpClients.createDefault() @TO@ client=org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3960 @LENGTH@ 36
------UPD MethodInvocation@@HttpClients.createDefault() @TO@ org.jboss.as.test.http.util.HttpClientUtils.relaxedCookieHttpClient() @AT@ 3969 @LENGTH@ 27
---------DEL SimpleName@@Name:HttpClients @AT@ 3969 @LENGTH@ 11
---------UPD SimpleName@@MethodName:createDefault:[] @TO@ MethodName:relaxedCookieHttpClient:[] @AT@ 3981 @LENGTH@ 15
---------INS QualifiedName@@Name:org.jboss.as.test.http.util.HttpClientUtils @TO@ MethodInvocation@@HttpClients.createDefault() @AT@ 3982 @LENGTH@ 43


INS MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @TO@ TypeDeclaration@@[public]OAuth2ClientContextFilterTests,  @AT@ 937 @LENGTH@ 326
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 937 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 944 @LENGTH@ 4
---INS SimpleName@@MethodName:testTwoScopesRedirectUri @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 949 @LENGTH@ 24
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 983 @LENGTH@ 9
---INS VariableDeclarationStatement@@String redirect="http://example.com/authorize"; @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 997 @LENGTH@ 49
------INS SimpleType@@String @TO@ VariableDeclarationStatement@@String redirect="http://example.com/authorize"; @AT@ 997 @LENGTH@ 6
------INS VariableDeclarationFragment@@redirect="http://example.com/authorize" @TO@ VariableDeclarationStatement@@String redirect="http://example.com/authorize"; @AT@ 1004 @LENGTH@ 41
---------INS SimpleName@@redirect @TO@ VariableDeclarationFragment@@redirect="http://example.com/authorize" @AT@ 1004 @LENGTH@ 8
---------INS StringLiteral@@"http://example.com/authorize" @TO@ VariableDeclarationFragment@@redirect="http://example.com/authorize" @AT@ 1015 @LENGTH@ 30
---INS VariableDeclarationStatement@@Map<String,String> params=new LinkedHashMap<String,String>(); @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 1049 @LENGTH@ 65
------INS ParameterizedType@@Map<String,String> @TO@ VariableDeclarationStatement@@Map<String,String> params=new LinkedHashMap<String,String>(); @AT@ 1049 @LENGTH@ 19
---------INS SimpleType@@Map @TO@ ParameterizedType@@Map<String,String> @AT@ 1049 @LENGTH@ 3
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1053 @LENGTH@ 6
---------INS SimpleType@@String @TO@ ParameterizedType@@Map<String,String> @AT@ 1061 @LENGTH@ 6
------INS VariableDeclarationFragment@@params=new LinkedHashMap<String,String>() @TO@ VariableDeclarationStatement@@Map<String,String> params=new LinkedHashMap<String,String>(); @AT@ 1069 @LENGTH@ 44
---------INS SimpleName@@params @TO@ VariableDeclarationFragment@@params=new LinkedHashMap<String,String>() @AT@ 1069 @LENGTH@ 6
---------INS ClassInstanceCreation@@LinkedHashMap<String,String>[] @TO@ VariableDeclarationFragment@@params=new LinkedHashMap<String,String>() @AT@ 1078 @LENGTH@ 35
------------INS New@@new @TO@ ClassInstanceCreation@@LinkedHashMap<String,String>[] @AT@ 1078 @LENGTH@ 3
------------INS ParameterizedType@@LinkedHashMap<String,String> @TO@ ClassInstanceCreation@@LinkedHashMap<String,String>[] @AT@ 1082 @LENGTH@ 29
---------------INS SimpleType@@LinkedHashMap @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 1082 @LENGTH@ 13
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 1096 @LENGTH@ 6
---------------INS SimpleType@@String @TO@ ParameterizedType@@LinkedHashMap<String,String> @AT@ 1104 @LENGTH@ 6
---INS ExpressionStatement@@MethodInvocation:params.put("foo","bar") @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 1117 @LENGTH@ 25
------INS MethodInvocation@@params.put("foo","bar") @TO@ ExpressionStatement@@MethodInvocation:params.put("foo","bar") @AT@ 1117 @LENGTH@ 24
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.put("foo","bar") @AT@ 1117 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["foo", "bar"] @TO@ MethodInvocation@@params.put("foo","bar") @AT@ 1124 @LENGTH@ 17
------------INS StringLiteral@@"foo" @TO@ SimpleName@@MethodName:put:["foo", "bar"] @AT@ 1128 @LENGTH@ 5
------------INS StringLiteral@@"bar" @TO@ SimpleName@@MethodName:put:["foo", "bar"] @AT@ 1135 @LENGTH@ 5
---INS ExpressionStatement@@MethodInvocation:params.put("scope","spam scope2") @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 1145 @LENGTH@ 35
------INS MethodInvocation@@params.put("scope","spam scope2") @TO@ ExpressionStatement@@MethodInvocation:params.put("scope","spam scope2") @AT@ 1145 @LENGTH@ 34
---------INS SimpleName@@Name:params @TO@ MethodInvocation@@params.put("scope","spam scope2") @AT@ 1145 @LENGTH@ 6
---------INS SimpleName@@MethodName:put:["scope", "spam scope2"] @TO@ MethodInvocation@@params.put("scope","spam scope2") @AT@ 1152 @LENGTH@ 27
------------INS StringLiteral@@"scope" @TO@ SimpleName@@MethodName:put:["scope", "spam scope2"] @AT@ 1156 @LENGTH@ 7
------------INS StringLiteral@@"spam scope2" @TO@ SimpleName@@MethodName:put:["scope", "spam scope2"] @AT@ 1165 @LENGTH@ 13
---INS ExpressionStatement@@MethodInvocation:testRedirectUri(redirect,params,redirect + "?foo=bar&scope=spam%20scope2") @TO@ MethodDeclaration@@public, void, MethodName:testTwoScopesRedirectUri, Exception,  @AT@ 1183 @LENGTH@ 77
------INS MethodInvocation@@testRedirectUri(redirect,params,redirect + "?foo=bar&scope=spam%20scope2") @TO@ ExpressionStatement@@MethodInvocation:testRedirectUri(redirect,params,redirect + "?foo=bar&scope=spam%20scope2") @AT@ 1183 @LENGTH@ 76
---------INS SimpleName@@MethodName:testRedirectUri:[redirect, params, redirect + "?foo=bar&scope=spam%20scope2"] @TO@ MethodInvocation@@testRedirectUri(redirect,params,redirect + "?foo=bar&scope=spam%20scope2") @AT@ 1183 @LENGTH@ 76
------------INS SimpleName@@redirect @TO@ SimpleName@@MethodName:testRedirectUri:[redirect, params, redirect + "?foo=bar&scope=spam%20scope2"] @AT@ 1199 @LENGTH@ 8
------------INS SimpleName@@params @TO@ SimpleName@@MethodName:testRedirectUri:[redirect, params, redirect + "?foo=bar&scope=spam%20scope2"] @AT@ 1209 @LENGTH@ 6
------------INS InfixExpression@@redirect + "?foo=bar&scope=spam%20scope2" @TO@ SimpleName@@MethodName:testRedirectUri:[redirect, params, redirect + "?foo=bar&scope=spam%20scope2"] @AT@ 1217 @LENGTH@ 41
---------------INS SimpleName@@redirect @TO@ InfixExpression@@redirect + "?foo=bar&scope=spam%20scope2" @AT@ 1217 @LENGTH@ 8
---------------INS Operator@@+ @TO@ InfixExpression@@redirect + "?foo=bar&scope=spam%20scope2" @AT@ 1225 @LENGTH@ 1
---------------INS StringLiteral@@"?foo=bar&scope=spam%20scope2" @TO@ InfixExpression@@redirect + "?foo=bar&scope=spam%20scope2" @AT@ 1228 @LENGTH@ 30


UPD ExpressionStatement@@MethodInvocation:from("netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @TO@ MethodInvocation:from("netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @AT@ 1512 @LENGTH@ 250
---UPD MethodInvocation@@from("netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @TO@ from("netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks").to("mock:target") @AT@ 1512 @LENGTH@ 249
------UPD MethodInvocation@@MethodName:from:["netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @TO@ MethodName:from:["netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @AT@ 1512 @LENGTH@ 206
---------INS InfixExpression@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ MethodInvocation@@MethodName:from:["netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks"] @AT@ 1517 @LENGTH@ 229
------------INS StringLiteral@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1517 @LENGTH@ 87
------------INS Operator@@+ @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1604 @LENGTH@ 1
------------INS StringLiteral@@"&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @TO@ InfixExpression@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS" + "&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1631 @LENGTH@ 115
---------DEL StringLiteral@@"netty-http:https://localhost:{{port}}?ssl=true&needClientAuth=true&keyStoreFormat=JKS&passphrase=storepassword&keyStoreResource=jsse/server-keystore.jks&trustStoreResource=jsse/server-truststore.jks" @AT@ 1517 @LENGTH@ 200


UPD ExpressionStatement@@MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")) @TO@ MethodInvocation:assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")) @AT@ 2326 @LENGTH@ 210
---UPD MethodInvocation@@assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")) @TO@ assertTrue(json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")) @AT@ 2326 @LENGTH@ 209
------UPD SimpleName@@MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")] @TO@ MethodName:assertTrue:[json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"")] @AT@ 2326 @LENGTH@ 209
---------UPD MethodInvocation@@json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"") @TO@ json.contains("\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"") @AT@ 2337 @LENGTH@ 197
------------UPD SimpleName@@MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\""] @TO@ MethodName:contains:["\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\""] @AT@ 2342 @LENGTH@ 192
---------------UPD InfixExpression@@"\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" + ", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"" @TO@ "\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," + " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"" @AT@ 2351 @LENGTH@ 182
------------------UPD StringLiteral@@"\"retainFirst\": { \"kind\": \"parameter\", \"label\": \"producer\", \"type\": \"integer\"" @TO@ "\"retainFirst\": { \"kind\": \"parameter\", \"group\": \"producer\", \"label\": \"producer\", \"type\": \"integer\"," @AT@ 2351 @LENGTH@ 92
------------------UPD StringLiteral@@", \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"" @TO@ " \"javaType\": \"int\", \"deprecated\": \"false\", \"value\": \"10\"" @AT@ 2462 @LENGTH@ 71


INS TryStatement@@try {  solver.solve((Solution)body);} catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @TO@ MethodDeclaration@@public, void, MethodName:run,  @AT@ 2908 @LENGTH@ 244
---MOV ExpressionStatement@@MethodInvocation:solver.solve((Solution)body) @TO@ TryStatement@@try {  solver.solve((Solution)body);} catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @AT@ 2906 @LENGTH@ 29
---INS CatchClause@@catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @TO@ TryStatement@@try {  solver.solve((Solution)body);} catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @AT@ 2999 @LENGTH@ 153
------INS SingleVariableDeclaration@@Throwable e @TO@ CatchClause@@catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @AT@ 3006 @LENGTH@ 11
---------INS SimpleType@@Throwable @TO@ SingleVariableDeclaration@@Throwable e @AT@ 3006 @LENGTH@ 9
---------INS SimpleName@@e @TO@ SingleVariableDeclaration@@Throwable e @AT@ 3016 @LENGTH@ 1
------INS ExpressionStatement@@MethodInvocation:LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e) @TO@ CatchClause@@catch (Throwable e) {  LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e);} @AT@ 3049 @LENGTH@ 77
---------INS MethodInvocation@@LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e) @TO@ ExpressionStatement@@MethodInvocation:LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e) @AT@ 3049 @LENGTH@ 76
------------INS SimpleName@@Name:LOGGER @TO@ MethodInvocation@@LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e) @AT@ 3049 @LENGTH@ 6
------------INS SimpleName@@MethodName:error:["Asynchronously solving failed for solverId ({})", solverId, e] @TO@ MethodInvocation@@LOGGER.error("Asynchronously solving failed for solverId ({})",solverId,e) @AT@ 3056 @LENGTH@ 69
---------------INS StringLiteral@@"Asynchronously solving failed for solverId ({})" @TO@ SimpleName@@MethodName:error:["Asynchronously solving failed for solverId ({})", solverId, e] @AT@ 3062 @LENGTH@ 49
---------------INS SimpleName@@solverId @TO@ SimpleName@@MethodName:error:["Asynchronously solving failed for solverId ({})", solverId, e] @AT@ 3113 @LENGTH@ 8
---------------INS SimpleName@@e @TO@ SimpleName@@MethodName:error:["Asynchronously solving failed for solverId ({})", solverId, e] @AT@ 3123 @LENGTH@ 1


UPD MethodDeclaration@@protected, RoutingSlipIterator, MethodName:createRoutingSlipIterator, Exchange exchange, Exception,  @TO@ protected, RoutingSlipIterator, MethodName:createRoutingSlipIterator, Exchange exchange, Expression expression, Exception,  @AT@ 1645 @LENGTH@ 158
---INS SingleVariableDeclaration@@Expression expression @TO@ MethodDeclaration@@protected, RoutingSlipIterator, MethodName:createRoutingSlipIterator, Exchange exchange, Exception,  @AT@ 1720 @LENGTH@ 21
------INS SimpleType@@Expression @TO@ SingleVariableDeclaration@@Expression expression @AT@ 1720 @LENGTH@ 10
------INS SimpleName@@expression @TO@ SingleVariableDeclaration@@Expression expression @AT@ 1731 @LENGTH@ 10


UPD MethodDeclaration@@protected, void, MethodName:recreateParentService, OperationContext context, PathAddress parentAddress, ModelNode parentModel, ServiceVerificationHandler verificationHandler, OperationFailedException,  @TO@ protected, void, MethodName:recreateParentService, OperationContext context, PathAddress parentAddress, ModelNode parentModel, OperationFailedException,  @AT@ 4789 @LENGTH@ 582
---DEL SingleVariableDeclaration@@ServiceVerificationHandler verificationHandler @AT@ 4902 @LENGTH@ 46
------DEL SimpleType@@ServiceVerificationHandler @AT@ 4902 @LENGTH@ 26
------DEL SimpleName@@verificationHandler @AT@ 4929 @LENGTH@ 19
---UPD ExpressionStatement@@MethodInvocation:PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,verificationHandler,null,false) @TO@ MethodInvocation:PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,false) @AT@ 5187 @LENGTH@ 178
------UPD MethodInvocation@@PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,verificationHandler,null,false) @TO@ PartitionManagerAddHandler.INSTANCE.createPartitionManagerService(context,parentAddress.getLastElement().getValue(),parentModel,false) @AT@ 5187 @LENGTH@ 177
---------UPD SimpleName@@MethodName:createPartitionManagerService:[context, parentAddress.getLastElement().getValue(), parentModel, verificationHandler, null, false] @TO@ MethodName:createPartitionManagerService:[context, parentAddress.getLastElement().getValue(), parentModel, false] @AT@ 5223 @LENGTH@ 141
------------DEL SimpleName@@verificationHandler @AT@ 5331 @LENGTH@ 19
------------DEL NullLiteral@@null @AT@ 5352 @LENGTH@ 4


INS MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @TO@ TypeDeclaration@@[public]ClassUtilsUnitTests,  @AT@ 1741 @LENGTH@ 207
---INS Modifier@@public @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1741 @LENGTH@ 6
---INS PrimitiveType@@void @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1748 @LENGTH@ 4
---INS SimpleName@@MethodName:unwrapsWrapperTypesBeforeAssignmentCheck @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1753 @LENGTH@ 40
---INS SimpleType@@Exception @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1803 @LENGTH@ 9
---INS VariableDeclarationStatement@@Method method=UserRepository.class.getMethod("findAsync",Pageable.class); @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1818 @LENGTH@ 76
------INS SimpleType@@Method @TO@ VariableDeclarationStatement@@Method method=UserRepository.class.getMethod("findAsync",Pageable.class); @AT@ 1818 @LENGTH@ 6
------INS VariableDeclarationFragment@@method=UserRepository.class.getMethod("findAsync",Pageable.class) @TO@ VariableDeclarationStatement@@Method method=UserRepository.class.getMethod("findAsync",Pageable.class); @AT@ 1825 @LENGTH@ 68
---------INS SimpleName@@method @TO@ VariableDeclarationFragment@@method=UserRepository.class.getMethod("findAsync",Pageable.class) @AT@ 1825 @LENGTH@ 6
---------INS MethodInvocation@@UserRepository.class.getMethod("findAsync",Pageable.class) @TO@ VariableDeclarationFragment@@method=UserRepository.class.getMethod("findAsync",Pageable.class) @AT@ 1834 @LENGTH@ 59
------------INS TypeLiteral@@UserRepository.class @TO@ MethodInvocation@@UserRepository.class.getMethod("findAsync",Pageable.class) @AT@ 1834 @LENGTH@ 20
------------INS SimpleName@@MethodName:getMethod:["findAsync", Pageable.class] @TO@ MethodInvocation@@UserRepository.class.getMethod("findAsync",Pageable.class) @AT@ 1855 @LENGTH@ 38
---------------INS StringLiteral@@"findAsync" @TO@ SimpleName@@MethodName:getMethod:["findAsync", Pageable.class] @AT@ 1865 @LENGTH@ 11
---------------INS TypeLiteral@@Pageable.class @TO@ SimpleName@@MethodName:getMethod:["findAsync", Pageable.class] @AT@ 1878 @LENGTH@ 14
---INS ExpressionStatement@@MethodInvocation:assertReturnTypeAssignable(method,Page.class) @TO@ MethodDeclaration@@public, void, MethodName:unwrapsWrapperTypesBeforeAssignmentCheck, Exception,  @AT@ 1898 @LENGTH@ 47
------INS MethodInvocation@@assertReturnTypeAssignable(method,Page.class) @TO@ ExpressionStatement@@MethodInvocation:assertReturnTypeAssignable(method,Page.class) @AT@ 1898 @LENGTH@ 46
---------INS SimpleName@@MethodName:assertReturnTypeAssignable:[method, Page.class] @TO@ MethodInvocation@@assertReturnTypeAssignable(method,Page.class) @AT@ 1898 @LENGTH@ 46
------------INS SimpleName@@method @TO@ SimpleName@@MethodName:assertReturnTypeAssignable:[method, Page.class] @AT@ 1925 @LENGTH@ 6
------------INS TypeLiteral@@Page.class @TO@ SimpleName@@MethodName:assertReturnTypeAssignable:[method, Page.class] @AT@ 1933 @LENGTH@ 10


INS MethodDeclaration@@String, MethodName:getSomeInfo,  @TO@ TypeDeclaration@@Category,  @AT@ 23362 @LENGTH@ 14
---INS SimpleType@@String @TO@ MethodDeclaration@@String, MethodName:getSomeInfo,  @AT@ 23355 @LENGTH@ 6
---INS SimpleName@@MethodName:getSomeInfo @TO@ MethodDeclaration@@String, MethodName:getSomeInfo,  @AT@ 23362 @LENGTH@ 11


UPD TypeDeclaration@@[@Ignore, @RunWith(Arquillian.class), public]ClassFileTransformerTestCase,  @TO@ [@RunWith(Arquillian.class), public]ClassFileTransformerTestCase,  @AT@ 2044 @LENGTH@ 1395
---DEL MarkerAnnotation@@@Ignore @AT@ 2044 @LENGTH@ 7
